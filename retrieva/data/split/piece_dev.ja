▁The ▁quick ▁br own ▁ fo x ▁jump s ▁over ▁the ▁ lazy ▁do g 」 という 文 なら たとえば 「 T q b f j o t ld 」 という パスワード に できます 。
▁ モデルのインスタンス では 、 配列 または ハッシュ のみ が 使用できます 。
▁[ S ymantec ▁G lo b al ▁ Internet ▁ Security ▁ threat ▁report ]( http :// eval ▖ s ymantec ▖ com / m k t g info / e nterprise / white _ paper s / b - white paper _ in ter net _ security _ threat _ re port _ x i i i _ 04 - 2008 ▖ en - us ▖ p d f ) ▁ には 、 200 7 年 後 半 に ブラウザの プラグイン で 23 9 の 脆弱性 が 報 告 されています 。
▁** CSRF : ** ▁ ク ロスサイトリクエストフォージェリ ▁( C ross - Site ▁ Request ▁For ge ry ) ▁ は ク ロ ス サイト リ フ ァ レ ン ス フ ォ ー ジ ェ リ ▁( X S R F : ▁C ross - Site ▁Reference ▁For ge ry ) ▁ とも 呼 ば れ 、 非常に 強力な 攻 撃 手法 です ▟ この 攻 撃 を受け ると 、 管理者 や イントラネット ユーザーが 行える ことを すべて 行えるように なってしまい ます 。
▁Web アプリケーション には 、 何らかの 形で アクセス制御 が 行われ る のが普通です 。
▁上のコードは 検索 用の アクション など で 使われ る もの であり 、 ユーザーは 検索 したい プロジェクト 名を 入力 します 。
▁ 検証 に 失敗する と V er if y _ recaptcha から false が返されます 。
▁ 既存の レコード と マッチする 場合 、 アプリケーションは アクセス を 許可 します 。
▁この メール には 、「 お 客 様 のための e - カ ー ド が ご ざ います 」 と 書かれ ており 、 image タグ が含まれ ていました ▟ そして その タグ には 、 ユーザーの ルーター を再 構成 してしまう HTTP ▁GET リクエストが 仕 込 まれ ていました ▟ この ルーター は 、 メ キ シ コ で 広 く 普 及 している モデル です 。
▁この ユーザーが URL の id を 4 2 に変更し 、 本 来 の id では 表示 できない ページを 表示 できてしまいます 。
▁* ▁ フィールド を見 ない ぐらい に 小 さ く したり 、 背 景 と同じ 色 に したり する
▁* ▁ 管理者 は 、 必ず し も その Web アプリケーション 全体 にアクセス できる 必要はない はずです 。
▁Rails には 、 このような 攻 撃 を か わ す ための ヘルパーメソッド が 用意されています 。
▁詳細については 、 下 記 を参照してください 。
▁ プロキシ を使用して 送信 元 IP アドレス を 偽 る 方法 がある ことも 念 頭 に おいてください 。
▁ 悪 事 に 使われ る メールアドレス 、 非 公式 の アクション 、 邪悪な HTML タグ など について ブラックリスト が 作成される ことがあります 。
▁ Google ▁A d s en se の メールアドレス と パスワードが 変更 された 事例 もあります 。
▁### ▁ ホワイトリスト と ブラックリスト
▁ 他にも 、 データを 操作 したり 任意の データを 読み出し たり する 目的 にも 使用されます 。
▁ _ 極めて 重要な 操作 では 特殊な パスワード を要求する _ ▁ ように する という 方法 もあります 。
▁200 7 年 、 その 名 も M on s ter ▖ com という オンライン リ ク ルート 用 Web アプリケーションで 、 特 別 に 作 られた ト ロ イ の 木馬 プログラム によって イントラネット から 情報 が 盗 み 出 され 、 文字 どおり 経 営 者 にとって の モ ン ス ター と な った 事 件 があり ました 。
▁ SELECT ▁* ▁FROM ▁users ▁WHERE ▁login ▁= ▁ '' ▁OR ▁'1' =' 1 ' ▁ AND ▁password ▁= ▁ '' ▁OR ▁' 2 ' > ' 1 ' ▁LIMIT ▁1
▁この 方法は 、 フォーマット バリデータ 使用 時に 起 き が ち な 間 違い から 保 護 する ため だけ の ものです ▟ 「\ ^ 」 と 「$」 は Ruby では ▁** 1 つの 行 ** ▁ に対して マッチ し 、 文字列 全体 にマッチし ない という ことを よく 理解 すること が重要です 。
▁ _ 送信 元 IP アドレス を 一 定 の 範囲 に 制限 する _ ▁という 方法を 考えてみましょう 。
▁config ▖ filter _ parameters ▁<< ▁: password
▁raise ▁if ▁base name ▁ !
▁ 多くの XSS の例では 、 単 に 警 告 ボックス を表示する だけです が 、 実際の XSS 攻 撃 は もっと 凶 悪 です 。
▁send _ file ▁filename , ▁di s position : ▁' inline '
▁ 人 気 の高い [ devise ]( https :// github ▖ com / plat a format ec / devise ) ▁ や [ authlogic ]( https :// github ▖ com / bin ary log ic / authlogic ) などの 優 れ た プラグイン は 、 パスワードを 平 文 ではなく 常に 暗号化 した 状態 で 保存 します 。
▁ クエリ のユーザー 入力 データ をそのまま 使用 せずに 改 ざ ん する方法 の例 を 以下 で説明します 。
▁ そのため 、 projects テーブル から すべての レコードが 取り 出 されます ▟ これらは 通常の ユーザー から は 参 照 できない は ず の ものです 。
▁ 攻 撃 点 ▁( en try ▁point ) ▁ とは 、 攻撃者が 攻 撃 を 向 け る 対象 となる 、 脆 弱 な URL および パラメータ の ことです 。
▁しかし SQL インジェクション は ひ と た び 発生 すれば 壊 滅 的な 打 撃 を受け る 可能性 があり 、 Web アプリケーション に対する 一般的な 攻 撃 方法 でも ある ため 、 この問題 を 十分 に 理解 すること が重要です 。
▁XSS 攻 撃 は 次のように 行われます ▟ 攻撃者が 何らかの コードを Web アプリケーションに 注入 し 、 後に 標的ユーザー の Web ページ 上に 表示されます 。
▁ ハッシュ を渡して 同じ 結果を 得 ることもできます 。
▁NOTE : ▁ _ ユーザーが どんな ファイル でも ダウンロード できる 状態 に しないでください
▁ イントラネット および 管理画面 インターフェイス には 、 他 よりも 手 厚 い セキュリティ 対策 が必要です が 、 現 実に は 逆に む し ろ これらの 方が セキュリティ 対策 が 薄 い ということ が し ば し ば あります 。
▁ただし 最初の 節 では 、 インジェクション の 際の 接続 方法 における アーキテクチャ 上の 決定 事 項 について説明します 。
▁ いわゆる スパム ボット 以外に 、 自動 ログイン ボット も 問題 となります 。
▁ ブラウザに は 同 一 生成 元 ポ リ シ ー が あるので 、 www ▖ application ▖ com ▁ に 注入 された XSS スクリプト から は ▁admin ▖ application ▖ com ▁ の cookie は 読み 出 せず 、 逆 について も同様に 読み出し 不可 となります 。
▁send _ file () メソッドは 、 サーバー から クライアント に ファイルを 送信 します 。
▁ 攻撃者は 、 あり そう な ID と パスワード の 組み合わせ を 総 当 り で 試 す 危 険 な Image タグ を 送 り 込 む だけで 、 数 千 もの ま ぐ れ 当 たり を得る こともあります 。
▁ 想 定 される 攻 撃 としては 、 管理者 の cookie の 盗 み 出 し 、 管理者 パスワードを 盗 み 出 す ための iframe 注入 、 管理者 権限 奪 取 のために ブラウザの セキュリティホール を経由して 邪悪な ソフトウェア をインストール する 、 など が考えられます 。
▁ SELECT ▁* ▁FROM ▁users ▁WHERE ▁( users ▖ activation _ code ▁ IS ▁NULL ) ▁LIMIT ▁1
▁この 方法は 攻 撃 に対する 直接 の 防 弾 に はなりません が 、 検 問 として 非常に 有効 です 。
▁#### ▁その 他
▁### ▁ その他の 予 防 策
▁ 管理画面 に ▁ _ ロー ル ▁( r o le ) _ ▁ を導入する ことで 、 攻撃者が 行える 操作 の 範囲 を 狭 め ることができます ▟ 1 人 の 管理者 に 全 権 を与える の ではなく 、 権限 を 複 数 管理者 で 分 散 する のです 。
▁#### ▁ はじめ に
▁Web アプリケーション によって は このコード でも 問題 はありません が 、 その ユーザーが すべての ビュー を参照 する 権限 がない場合 には 問題 となります 。
▁NOTE : ▁ _ アカウント に対する 総当たり攻撃 ▁( B r ute - force ▁attack ) ▁ とは 、 ログイン 情報 に対して 試 行 錯 誤 を 繰り返す 攻 撃 です 。
▁ただし 、 イントラネット や 管理 アプリケーション にとって 最も 脅威 な のは XSS と CSRF です 。
▁ _ S a fe E rb プラグイン _ ▁ を イントラネット や 管理画面 でも 使用する ことを 強く お勧め します 。
▁ 一 方 、 攻撃者 にとって 気 が か り な のは 、 両方 の クエリ で カラム の 数を 同じ に し なければならない ということです 。
▁ SELECT ▁* ▁FROM ▁ projects ▁WHERE ▁( name ▁= ▁ '') ▁UNION
▁#### ▁ 認 証 の バ イ パス
▁ ') ▁UNION ▁ SELECT ▁id , login ▁AS ▁name , password ▁AS ▁ description , 1, 1, 1 ▁FROM ▁users ▁--
▁ 言 う まで も なく 、 この 攻 撃 を 成功 させるため には 攻撃者が URL 構造 を 知 っている 必要があります が 、 Rails の URL は かなり 構造 が 素 直 である ため 、 オープンソース の 管理画面 を使用している と 構造 を 容易に 推 測 できてしまいます 。
▁ パラメータ が nil の場合 、 以下の SQL が生成されます 。
▁ この手法は 、 迷惑 な ユーザー への 対応策 としても 有効 です 。
▁ただし 、 常に 最新の 状態 に アップ デ ート するようにしてください 。
▁``` sql
▁ 多くの 場合 、 CSRF と XSS が 原 因 となります 。
▁この フィールド を サーバー側で チェック します ▟ フィールド に 何か 書き 込 まれ ていれば 、 入力 者 は ボット である と 判 定 できます 。
▁ / \ A https ? : \ / \ / [ ^ \ n ] + \ z / i
▁ このため 、 多くの Ruby 本 や Rails 本 でも この 点 に 誤り が生じ ています 。
▁たとえば 、 URL 形式 になっている かどうかを ざ っ く り と 検証 したい ので 、 以下のような 単純な 正規表現 を使用した とします 。
▁以下の 節 では 、 インジェクション 攻 撃 が発生し う る 重要な コンテキスト について説明します 。
▁#### ▁ 攻 撃 点
▁これらの 正規表現 は 、 危 険 な 「\ ^ 」 や 「$」 を 安全 な 「\ A 」 や 「\ z 」 に置き換える 必要があります 。
▁この 攻 撃 用 文字列 では 、 そのために 2 番目の クエリ に 「 1 」 を 連続 して 配置 しています ▟ これらの 値は 常に 1 になるので 、1 番目の クエリ の カラム 数 と 一致し ます 。
▁* ▁ ハ ニ ー ポ ッ ト フィールド を 隠 さ ず 、 その 代 わ り 「 この フィールド には 何も 入力 しないでください 」 と 表示する
▁* ▁ フィールド 名を ランダム に 変更します
▁* ▁ ブラックリスト に 引 っ か か った 入力 は 受け付け ないでください 。
▁ここで 、 悪意のある ユーザーが 「 ' ▁OR ▁1 ▁-- 」 という 文字列 を入力する と 、 以下の SQL クエリ が生成されます 。
▁ コメント 入力 欄 など で 、 歪 んだ 画像 に表示されている 文字 を 入力 させる ことで 、 入力 社 が 自動 スパム ボット でない ことを確認する 場合に よく 使用されます 。
▁ 表示される リンク は 一見 無 害 に見えます が 、 クリック すると 、 攻撃者が 送 り 込 んだ 邪悪な JavaScript 関数 を 初 め と する JavaScript コードが 実行 されてしまいます 。
▁ CAPTCHA の API としては [ re CAPTCHA ]( http :// recaptcha ▖ net / ) が 有 名 です ▟ これは 古 書 から 引 用 した 言葉 を 歪 んだ 画像 として 表示 します 。
▁ http :// hi ▖ com
▁この API から は 公開鍵 と 秘 密 鍵 の 2 つの 鍵 を受け取り ます ▟ これらは Rails の 環境 に 置く 必要があります 。
▁ AND ▁password ▁= ▁? ", ▁entered _ user _ name , ▁entered _ password )▖ first
▁ スパム フィルタ など 、 対象 によって は ホワイトリスト を作成し よう がない もの もあります が 、 ▁ _ 基本的に は まず ホワイトリスト が使用されます _ ▁ 。
▁ このような こと にならない よう 、 ▁ _ ユーザーの アクセス 権 も クエリ に含め てください _ ▁ 。
▁### ▁ アカウント に対する 総当たり攻撃
▁上 に示したように 、 配列 の最初の 部分 が SQL フラグ メ ン ト になっ ており 、 その中に 疑問符 「 ? 」 が含まれています 。
▁### ▁ クロスサイトスクリプティング ▁( XSS )
▁filename ▁= ▁File ▖ expand _ path ( File ▖ join ( base name , ▁@ file ▖ public _ filename ) )
▁### ▁ よい パスワード
▁" ▖ ▖ / ▖ ▖ / ▖ ▖ / e t c / pass w d " ▁ のような ファイル名 を 渡 せ ば 、 サーバー の ログイン 情報を ダウンロード できてしまいます 。
▁上の URL が フィルタ に 引 っ か から ない のは 、 入力 の 2 行目 にマッチし てしまう からです ▟ 従って 、1 行目 と 3 行目 に どんな 文字列 が あって も フィルタ を 通 過 してしまいます 。
▁INFO : ▁ _ CAPTCHA とは 、 コンピュータ による 自動 応答 でない ことを確認する ための チ ャ レ ン ジ - レスポンス 式 テスト です 。
▁Web アプリケーション 用の ユーザー名 リスト ▁( 名 簿 ) ▁ は 、 パスワード への 総当たり攻撃 に 悪 用 される 可能性があります ▟ ユーザー名 と同じ である などの 単 純 素 朴 な パスワード を使っている 人 が 驚 く ほど 多 い ため 、 総当たり攻撃 に 名 簿 が 利用 され やすい のです 。
▁XSS を使用した 悪意のある 攻 撃 が 行われ ると 、 クライアント側 の コンピュータ に 実行 可能な コードが 注入 されてしまいます 。
▁これは 一部の 言語 では 正常に動作し ます 。
▁ 条件 オプション には 文字列 を直接 渡す 代りに 、 以下のように 配列 を 渡す ことで 、 汚染 された 文字列を サニタイズ することもできます 。
▁ パラメータ は 、 たとえ ど れ ほど 難 読 化 し 、 隠 そう とも 変更 される 可能性 がある ことを 忘れ ないでください 。
▁ データベース上の パスワードが 暗号化 され ていれば まだ 最 悪 の 事 態 は 避 け られます 。
▁ アカウント が 有効 になる と 、 データベース上の ア ク テ ィ ベ ー ション コードの カラム は NULL に設定されます 。
▁ これを 少し でも 緩和 するには 、 ▁ _ 「 パスワードを 忘れ た場合 」 ページ でも 一般的な エラーメッセージ を表示する _ ▁ ようにしましょう 。
▁ 通常 どおり メッセージ を 表示 しておけば 、 ボット は 書き込み 失敗 に 気 が 付 か ずに そのまま 通り す ぎ て い く でしょう 。
▁ attachment _ f u プラグイン でも 同様 の 手法 が 採 用 されています 。
▁@ project ▁= ▁@ current _ user ▖ projects ▖ find ( params [: id ])
▁この ルーター を経由して この ネ ッ ト バ ン キ ング サイト にアクセスすると 、 攻撃者が 設 置 した 偽 の Web サイト が 開 き 、 信 用 情報 が 盗 まれ てしまい ました 。
▁### ▁ アカウント の ハイジャック
▁Rails を [ 最 低 でも 2▖1 ▖ 1 に アップ デ ート ]( http :// www ▖ r or security ▖ info / 2008 / 0 9 / 08 / sql - inject ion - issue - in - limit - and - offset - param eter / ) してください 。
▁ ト ロ イ の 木馬 を わざわざ 特 別 に 誂 え る という のは これまで も 非常に まれ な こと であり 、 リスク としては 相 当 低 い と 言えます が 、 それ でも ゼロ ではありません し 、 クライアント ホスト の セキュリティ も 重要 である という 好 例 で もあります 。
▁ いわゆる CAPTCHA の 問題 は 、 ユーザー にとって 入力 が 多少 なり とも 面倒 になる ことです 。
▁ ---------------
▁### ▁ CAPTCHA
▁ / ^ https ? : \ / \ / [ ^ \ n ] + $ / i
▁ イントラネット および 管理画面 インターフェイス は 、 強 い 権限 が 許 されている ため 、 頻繁に 攻 撃 の 目 標 に されます 。
▁ パスワードを 書き 留 め たり しないでください ▟ 覚え られる 文 を 決 め 、 単語 の 頭 文字 を 集 め た もの を パスワード に してください 。
▁ _ JavaScript を使用して ユーザーの 入力 データ を検証する ことは できます が 、 攻撃者が 想 定 外 の値 を与え て 邪悪な リクエストを送信する ことは 阻 止 できません _ ▁ 。
▁2 つの ダ ッ シ ュ 「 - - 」 が 末尾に 置かれ ると 、 以後 に 追加される クエリ がすべて コメント と 見 な され てしまい 、 実行 され なくなります 。
▁WARNING : ▁ _ Rails の ログ出力 に パスワード が含まれ ることのないように してください 。
▁ 経験 則 に 照 ら し 合わせ ても 、 ▁ _ 安全 が 確 認 されていない ユーザー 入力 が 安全 であること は あり え ず 、 ユーザー から 送信される どのような パラメータ にも 、 何らかの 操作 が 加 えられ ている 可能性 は 常に あります _ ▁ 。
▁Rails ▁3▖1 では 、 同様 の 機能 を持つ ビルトイン の ` has _ secure _ password ` メソッド を使用できます 。
▁link _ to ▁" Home page ", ▁@ user ▖ home page
▁この 標的ユーザー が G Mail に ログイン して い た場合 、 フィルタ 設定 が 攻撃者 によって 変更 され 、 この場合は すべての メール が 攻撃者 に 転 送 される ようになります 。
▁ フィルタ 処理 されていない ファイル名 を使用すると 、 ユーザーが 任意の ファイルを ダウンロード できるように なってしまい ます 。
▁ Firefox の [ L ive ▁HTTP ▁Header s プラグイン ]( http :// li ve http headers ▖ m o z dev ▖ org / ) や クライアント側 での プロキシ を使用することで 、 リクエスト を簡単に 改 ざ ん することができます 。
▁ このような 総当たり攻撃 を 少し でも か わ す ため 、 多くの Web アプリケーションは わざと 一般的な エラーメッセージ 「 ユーザー名 または パスワードが 違い ます 」 を表示する ようにしています ▟ どちら が 違 っている のか という 情報 を表示し ないこと で 、 総当たり攻撃 による 推 測 を 少し でも 遅 ら せ ます 。
▁ よい パスワード の 条件 とは 、「 十分 に 長 く 」「 英 文字 と 数字 が使用され ており 」「 大文字 と 小文字 が 両方 使用されている 」 ことです 。
▁ここでは この こと について 考 察 してみましょう 。
▁デフォルトでは 、 Rails の ログ には Web アプリケーション への リクエスト がすべて 出力 されます 。
▁この 状態 は 、 アカウント 全体 が ハイジャック された の と同じ ぐらい に 有 害 です 。
▁validates ▁: content , ▁format : ▁ { ▁with : ▁ / ^ Meanwhile $ / , ▁ multiline : ▁true ▁ }
▁* ▁ ハ ニ ー ポ ッ ト フィールド を 画面 の 外 に 追 い や って 見え ないようにする
▁ 対応策 は 、 ▁ _ アプリケーションの ロ ジ ッ ク を見 なお して XSS や CSRF 脆弱性 が 持ち 込 まれ ないようにする こと _ ▁ と しか 言い よう が ありません 。
▁XSS ▁( クロスサイトスクリプティング ) ▁ や SQL インジェクション は インジェクション の 顕 著 な 例 です 。
▁### ▁SQL インジェクション
▁ これによって 以下の SQL が生成されます 。
▁ _ Apache の Document R oo t が Rails の / public ディレクトリ を 指 している場合 、 アップロード ファイルを ここに 置 か ないでください _ ▁ ▟ 少なくとも 1 階層 下 に する必要があります 。
▁ 攻撃者は メールアドレス 変更 に 成功 すると 、「 パスワードを 忘れ た場合 」 ページ に移動し 、 攻撃者 の 新しい メールアドレス に 変更 通知 メールを送信 します ▟ システムによっては この メール に 新しい パスワードが 記載 されている こともあります 。
▁ 同時に 、 ▁ _ ユーザーに パスワード を変更 させる 場合は 、 古 い パスワードを 必ず 入力 させる ようにしてください ▟ _
▁以下は Rails における 典型的な データベース クエリ です ▟ ユーザーが 入力 した ログイン 情報 パラメータ と マッチする User テーブル 上の 最初の レコード を返します 。
▁NOTE : ▁ _ サニタイズ 、 保 護 、 検証 では 、 通常 ホワイトリスト の方が ブラックリスト よりも 使用されます 。
▁ パスワード や 機 密 情報 が ログ ファイルに 平 文 のまま で 出力 されて いて は 、 データベース 上で これらの 情報を 暗号化 して いて も 意味 が なくなってしまいます 。
▁* ▁ ブラックリスト に 引 っ か か った ユーザー 入力 データを コード で 修正 して 使用 しないでください 。
▁** XSS : ** ▁ 悪意のある ユーザーが イントラネット の 外 から 入力 した データ が 再 表示される と 、 Web アプリケーションが XSS 攻 撃 に対して 脆 弱 になります ▟ ユーザー名 、 コメント 、 スパム レポート 、 注文 フォームの 住 所 のような 情報 すら XSS 攻 撃 に 使用される ことがあります 。
▁ ネ ガ ティブ CAPTCHA という 手法 を使えば 、 入力 者 に 自分 が 人 間 であること を 証 明 させる か わ り に 、 ボット を 罠 には めて 正 体 を 暴 く ことができます 。
▁ SELECT ▁* ▁FROM ▁ projects ▁WHERE ▁name ▁= ▁ '' ▁OR ▁1 ▁-- '
▁ただし 、 攻撃者が データ を入力する のは Web サイト 上の 入力 ボックス とは限りません ▟ URL に含まれている パラメータ 、 URL に 直接 含まれていない が 使用 可能な 「 隠 れ た 」 パラメータ 、 URL に 含 まれ ない 内部 パラメータ の どこか ら でも 攻撃者が データ を入力する 可能性があります 。
▁ 他の 場所 で ` sanitize _ sql () ` を使って み ることもできます 。
▁------------ ---------------
▁ 攻撃者が 標的ユーザー の ユーザー名 を知り 、 その ユーザーが 使用している パスワードが 弱 け れば 、 その アカウント は 簡単に ク ラ ッ ク されてしまいます 。
▁この 結果 、 最初の ユーザーが データベースに い ること が わ か り 、 結果 が返され て ログイン されます 。
▁ http :// localhost : 30 06 / user / ac t i v ate
▁ここで 、 U N ION 文 を使用した 以下の 文字列を 注入 した とします 。
▁ここで 、 ネ ガ ティブ CAPTCHA という 別の アイディア があります ▟ この 方法 の コ ン セ プ ト は 、 入力 者 を わ ず ら わ せ て 自分 が 人 間 であること を 証 明 させる 代りに 、 ボット を 罠 には めて 入力 者 が ボット であること を 突 き 止 め る という ものです 。
▁ 管理画面 は 、 多くの 場合 次のような 作り になっている ものです ▟ www ▖ example ▖ com / admin ▁ のような URL に置かれ 、 User モデルの admin フラグ が セット されている 場合 だけ ここ にアクセス でき 、 管理者 の 権限 で ユーザー 入力 が 再 表示される と 削除 / 追加 / 編集 な んで も できてしまいます
▁なお 上の 記事 に記載されている のは 概念 実 証 に過ぎません ▟ 仮 に この 攻 撃 を受け た場合 、 標的ユーザー は 攻撃者が 支 配 する Web サイトに 誘 い 込 まれ ます 。
▁ それ により 、 ビューで recaptcha _ tags メソッドを 、 コントローラ では ve ri fy _ recaptcha メソッドを それぞれ 使用できます 。
▁ 辞書 に 載 っている 言葉 に 数字 を 混 ぜ た 程 度 の パスワードが 使用されている ことが よく あります 。
▁* ▁ 現在の UT C タイムスタンプ を含め た フィールド を フォーム に含め て お き 、 サーバー側で この フィールド を チェック します 。
▁NOTE : ▁ _ 認 証 ▁( authentication ) ▁ と 認可 ▁( authorization ) ▁ は ほぼ すべての Web アプリケーション において 不可 欠 です 。
▁CSRF については 既に 説明しました ので 、 ここでは 攻撃者が イントラネット や 管理画面 に対して 攻 撃 を 仕 掛 け る 手順を いくつかの 事例 を 示 して 説明します 。
▁INFO : ▁ _ Ruby の 正規表現 で 落とし 穴 になり やすい のは 、 より 安全 な 「\ A 」 や 「\ z 」 がある ことを 知 らず に 危 険 な 「\ ^ 」 や 「$」 を使って しま う ことです 。
▁INFO : ▁ _ インジェクション ▁( 注入 ) ▁ とは 、 Web アプリケーションに 邪悪な コード や パラメータ を導入し て 、 その ときの セキュリティ 権限 で 実行 させる ことです 。
▁ 「 入力 された ユーザー名 は 登録 されていません 」 など という メッセージ が返され よう もの なら 、 攻撃者は すぐ さ ま ユーザー名 リスト を か き 集 めて 自動 で 巨 大 名 簿 を作成する でしょう 。
▁ パスワードが 簡単に 変更 できる 画面 設計 ( 古 い パスワード の 入力 が 不要 ) であれば 、 攻撃者は 数 クリック するだけで アカウント を ハイジャック できてしまいます 。
▁# ▁この 文字列 の どの 行 であっても " Meanwhile " という文字 が含まれている 必要があります 。
▁もちろん 、 この ぐらい では 自動化 された 総当たり攻撃 プログラム からの 攻 撃 から 完全に 免 れる ことはできません ▟ こうした プログラム は 送信 元 IP アドレス を 頻繁に 変更 する ぐらい の ことは や って の け る からです 。
▁Web アプリケーションの セキュリティ コ ン セ プ ト を デザイン する に あたり 、 攻撃者が Web サーバー への フル アクセス を 成功 させ てしまった 場合 の ことも 必ず 考 慮 に含め ておく 必要があります 。
▁Web アプリケーションの 構成 によって は 、 ユーザー アカウント を ハイジャック する方法 が 他にも 潜 んで い る可能性があります 。
▁ 他の 有名な 事例 としては 、 危 険 な XSS を 拡 散 するために 一 般 の Web アプリケーション や ブログ 、 掲 示 板 が 利用 された 事 件 があります 。
▁この リクエスト によって D N S 設定 が変更され 、 メ キ シ コ で 事 業 を 行 っている ネ ッ ト バ ン キ ング Web サイト が 、 攻撃者 の Web サイトに マ ッ プ され てしまい ました 。
▁ 標 的 と な った ユーザーが Google ▁A d s en se に ログイン し 、 Google 広 告 キャン ペ ー ン 用の 管理画面 を開く と 、 攻撃者が 信 用 情報を 盗 み 出 す ことができ てしまい ました 。
▁もちろん 上 は あくまで 例 に過ぎません ▟ 実際には このような あり ふ れ た 文 を パスワード に しないでください ▟ この 程 度 の パスワード は ク ラ ッ キ ング 用 辞書 に 収 録 されている 可能性があります 。
▁ 再び 上の 例 を使用して 説明します 。
▁その 方が 将来 コントローラに アクション が追加された 場合に 、 その アクション をオフに する の を 忘れ ずに 済み ます 。
▁XSS 対策 の 注入 に関する 節 を参照してください 。
▁base name ▁= ▁File ▖ expand _ path ( File ▖ join ( File ▖ d ir name ( _ _ FIL E _ _ ), ▁' ▖ ▖
▁* ▁ クロスサイトスクリプティング ▁( XSS ) ▁ 対策 として 、 & lt ; script & gt ; を削除する の ではなく & lt ; strong & gt ; を 許可 してください 。
▁この 攻撃者は 、 CSRF を 仕 込 んだ 危 険 な メールを メ キ シ コ の 多数の ユーザーに 送信 しました 。
▁### ▁ 正規表現
▁ あるいは 、 管理画面 用に ▁ _ 特別な ログイン 情報 _ ▁ を 別 途 設 置 する という 方法 もあります ▟ 一 般 ユーザーが 登録 されている User モデルに 管理者 も 登録 し 、 管理者 フラグ で 分ける と 攻 撃 され やすい ので 、 これを 避ける ためです 。
▁ _ プラグイン は 、 機 会 を見 て アップ デ ート する ことをお勧めします _ ▁ 。
▁ 改 ざ ん される 可能性 が 高い パラメータ と い えば id でしょう ▟ ` http :// www ▖ domain ▖ com / project /1 ` の 1 が id です 。
▁ こうした ページ では よく 、「 入力 された ユーザー名 または メールアドレス は 登録 されていません 」 という 情報 が表示されます 。
▁ インジェクション は 、 それによって 注入 される コード や パラメータ が 、 ある コンテキスト では 有 害 であっても 、 それ以外の ほとんど のコンテキストで は 無 害 である という 点 で 非常に ト リ ッ キー である と 言えます 。
▁User ▖ find _ by _ activation _ code ( params [: id ])
▁ 管理画面 や イントラネット で 1 箇所 でも サニタイズ 漏 れ があれば 、 アプリケーション 全体 が 脆 弱 になってしまいます 。
▁ Project ▖ where (" name ▁= ▁' # { params [: name ]} ' ")
▁しかし 、 Web アプリケーションの デ ザ イ ナ ー が お ろ そ か に し が ち な のは 、 いわゆる 「 パスワードを 忘れ た場合 」 ページ です 。
▁#### ▁ 不 正 な データ 読み出し
▁ エラーメッセージ を より 一般的な もの に することで 回 避 可能です が 、 CAPTCHA ▁( 相手 が コンピュータ でない ことを確認する ための テスト ) ▁ への 情報 入力 の 義 務 付け も おそらく 必要 でしょう _ ▁ 。
▁INFO : ▁ _ XSS は 最も よく 発生 し する Web セキュリティ上の 脆弱性 であり 、 ひ と た び 発生 すると 壊 滅 的な 影 響 が生じ る可能性があります 。
▁ 攻 撃 を 困難 にする ような 改良 が 進 ま ない のは な ぜ でしょうか 。
▁ サニタイズ された 変数 は 、 配列 の 後 半 に置かれ ており 、 フラグ メ ン ト 内の 疑問符 を 置き換え ます 。
▁ このような 構成 に することで 、 通常の www ▖ application ▖ com ▁ ドメイン からの 管理者 cookie を 盗 み 出 す ことが 不 可能 になります 。
▁INFO : ▁ _ 思い 出 せ なく な った パスワード があります か 。
▁SQL インジェクション は 、 Web アプリケーションの パラメータを 操作 して データベース クエリ に 影 響 を与える ことを 目的 と した 攻 撃 手法 です 。
▁User ▖ first (" login ▁= ▁' # { params [: name ]} ' ▁ AND ▁password ▁= ▁' # { params [: password ]} ' ")
▁SQL インジェクション は 、 認 証 を バ イ パス する 目的 で よく 使用されます 。
▁ マッチする 最初の レコードが この クエリ によって 取得 され 、 ユーザー にアクセス が 許可 されてしまいます 。
▁これ に対する シンプルな 対応策 は 、 ▁ _ リクエスト された ファイル名 が 、 期 待 されている ディレクトリ にある かどうか をチェックする _ ▁ ことです 。
▁ 特定の 項目 だけ を 許可 する ホワイトリスト アプローチ は 、 特定の 項目 だけ を 禁 止 する ブラックリスト アプローチ に 比 べ て 、 ブラックリスト への 禁 止 項目 の 追加 忘れ が 原 理 的に 発生 し ないので 、 望 ま しい 方法 である と 言えます 。
▁### ▁ ログ出力
▁ 初期 の CAPTCHA では 背 景 を 歪 めて 反 り を与え ていました が 、 これは 突 破 された ため 、 現在 では 文字 の 上に 曲線 を 書き 加えて 強 化 しています 。
▁ Mo z i ll a ▁ Firefox の Web ▁De ve lo p er ▁To ol bar を使用すれば 、 フォームの 隠 し フィールド を見つけ て 変更 することができます 。
▁XSS を使用することで 、 cookie の 盗 み 出 し 、 セッション の ハイジャック 、 標的ユーザー を 偽 の Web サイトに 誘 い 込 む 、 攻撃者 の 利 益 になる ような 広 告 を表示する 、 Web サイトの 要素を 書き換えて ユーザー情報 を 盗 み 出 したり Web ブラウザの セキュリティ ・ ホ ー ル を経由して 邪悪な ソフトウェア をインストール したり できる ことがあります 。
▁ 多くの Web アプリケーションでは 、 ユーザー アカウント の ハイジャック を 容易に 行 え てしまいます 。
▁ い った い どのような 問題が生じ る のでしょうか 。
▁ ユーザーがログイン 情報 を入力する と 、 Web アプリケーションは ユーザー テーブルに 登録 されている レコード と マッチする かどうか を調べ ます 。
▁File ▖ expand _ path ( File ▖ join ( File ▖ d ir name ( filename ), ▁' ▖ ▖
▁* ▁before _ action では 、 except : ▁[ ▖▖▖ ] ではなく only : ▁[ ▖▖▖ ] を使用してください 。
▁ SELECT ▁id , login ▁AS ▁name , password ▁AS ▁ description , 1, 1, 1 ▁FROM ▁users ▁-- '
▁さらに 、 Web アプリケーションに このような 欠 陥 がない かどうか 見 直 し を かけ てください 。
▁* ▁ そのような ことを すると 、 " & lt ; s c & lt ; script & gt ; ri p t & gt ; "▖ g s ub (" & lt ; script & gt ; ", ▁" ") という 攻 撃 が 成 立 してしまいます 。
▁しかし 、 パスワード ク ラ ッ ク 用の 辞書 には こうした 膨大な パスワードが 集 め ら れ ており 、 攻撃者は 英 文字 と 数字 の あらゆる 組み合わせ を 試 そう と しています 。
▁WARNING : ▁ _ 1 つの パラメータ が変更され た だけで も 、 ユーザーが 不 正 な 権限 で アクセス できるように な っ てしまう ことがあります 。
▁従って 、 名 簿 と 辞書 を使用して 総 当 り 攻 撃 を行なう 自動化 プログラム があれば 、 もの の 数 分 で パスワード は 見 破 ら れ てしまいます 。
▁* ▁ _ 管理画面 を 特別な サブドメイン に置き _ ▁( admin ▖ application ▖ com など ) 、 さらに 独立した 管理 アプリケーションに して ユーザー 管理 を 独自 に 行えるように します 。
▁さらに 、 JavaScript による 検証 は JavaScript をオフに す れ 簡単に バ イ パス できてしまいます 。
▁ ア ク テ ィ ベ ー ション 操作 中に この ことが 突 き 止 め られる まで の 流れ は 以下の とおり です 。
▁### ▁ 権限 昇 格
▁従って 、 この場合 以下のような 毒 入 り URL は フィルタ を 通 過 してしまいます 。
▁ 難 読 化 と JavaScript による 検証 の セキュリティ だけで 安全 を 保 て ると 考え て はなりません 。
▁Rails アプリケーションの 設定ファイル ▁config ▖ filter _ parameters ▁ に ▁ _ 特定の リクエスト パラメータを ログ出力 時に フィルタ する _ ▁ 設定 を追加する ことができます 。
▁ 同様に 、2 番目の クエリ では A S を使用して カラム名 を リ ネ ーム しています ▟ これにより 、 ユーザー テーブル から 取り出し た 値が Web アプリケーション 上で 表示されます 。
▁ 後 は フォーム の内容を 無視 する なり 、 通常 通り メッセージ を表示する ( データベースに は 保存 しない ) など すればよいのです 。
▁@ project ▁= ▁ Project ▖ find ( params [: id ])
▁しかし 、 ▁ _ Ruby では 「\ ^ 」 と 「$」 は 、 入力 全体 ではなく 、 ▁** 行 の ** ▁ 最 初 と 最 後 _ ▁ にマッチし てしまいます 。
▁ユーザー 管理
▁ インジェクション
▁javascript : exploit _ code () ; /*
▁ Mo z i ll a ▁ Firefox 用の L ive ▁HTTP ▁Header s プラグイン を使用すると 、 すべての リクエストを ログ に 記 録 して 、 それら を 繰り返し 送信 したり 変更 したり することができます 。
▁ ネ ガ ティブ CAPTCHA では 、 ボット を は め る 罠 として 「 ハ ニ ー ポ ッ ト 」 フィールド を用意し ます ▟ これは 、 CSS や JavaScript を使用して 人 間 には 表示 されない ように した ダ ミ ー の フィールド です 。
▁その サイトの I m g タグ には 仕 掛 け があり 、 G Mail の フィルタ 設定 を変更する HTTP ▁GET リクエストが そこ から 送信されます 。
▁request ▖ remote _ ip メソッドを使用して ユーザーの IP アドレス を チェック できます 。
▁ こうした 情報 は 、 攻撃者が アカウント への 総 当 り 攻 撃 に 使う 有効な ユーザー名 一覧 を作成する の に 使われ てしまいます 。
▁200 7 年 後 半 、 Mo z i ll a ブラウザで 88 の 脆弱性 、 Safari で 22 、 IE で 18 、 O pe ra で 12 の 脆弱性 が 報 告 されました 。
▁しかし ログ ファイル には ログイン 情報 、 ク レ ジ ッ ト カ ー ド 番号 などの 情報 が含まれている こと がある ため 、 重大な セキュリティ 問題 の 原 因 になる ことがあります 。
▁その 結果 、 大 半 の パスワードが い とも 簡単に ク ラ ッ ク でき てしまう ことが 判 明 しました 。
▁ ファイル アップロード 時に ファイル名 の フィルタ が必要 だった の と同様 、 ファイルの ダウンロード 時に も ファイル名 を フィルタ する必要があります 。
▁ そ の他に 、 ファイル名 を データベースに保存 しておき 、 サーバー の デ ィ ス ク 上に 置く 実際の ファイル名 には 代りに データベースの id を使用する という 方法 も 併 用 できます 。
▁ め った に ない と 思 われます が 、 「\ A 」 や 「\ z 」 の 代りに 「\ ^ 」 や 「$」 を どう しても 使用 したい場合は 、 : multiline オプションを true に設定する こともできます 。
▁ _ 管理画面 や イントラネット への CSRF 攻 撃 への 対策 については 、 CSRF の 対策 について の 節 を参照してください _ ▁ 。
▁Rails では 多数の 認 証 用 プラグイン を 利用できます 。
▁ 認証システム は 自 前 で 作る よりも 、 既存の プラグイン ▁( 訳 注 : ▁ 現在 なら gem ) ▁ を使用する ことをお勧めします 。
▁* ▁ ハ ニ ー ポ ッ ト フィールド を 複 数 用 意 し 、 送信 ボタン を含む あらゆる 型 を与え ます 。
▁しかし そのような パスワード は 覚え にくい ので 、 まずは ▁ _ 覚え られる 文 を 決 め 、 その 文 で使用されている 単語 の 頭 文字 を 集 めて パスワード にする _ ▁ ことをお勧めします 。
▁ 攻撃者が すべての トラフィック を 傍 受 している 可能性 を 常に 考 慮 に 入 れる 必要があります 。
▁なお 、 辞書 に 載 っている 単語 が そのまま 使われ ている ケース は こ の中で 4 % に 過 ぎ ず 、 ほとんど は 英 文字 に 数字 を 混 ぜ た もの になっている のは な か な か 興 味 深 い 点 です 。
▁従って 、 ▁ _ ネ ガ ティブ CAPTCHA は ログインフォーム の 保 護 には 必ず し も 向 か ない 可能性 もあります _ ▁ 。
▁ あるいは 、 パスワード 変更 画面 が CSRF 攻 撃 に対して 脆 弱 な 作り になっている 場合 、 攻撃者は 標的ユーザー を 別の Web ページに 誘 い 込 み 、 CSRF を実行する ように 仕 込 まれ た img タグ を 踏 ま せ て 、 標的ユーザー の Web パスワード を変更する でしょう 。
▁ イントラネット と Admin の セキュリティ
▁N ed ▁B at ch el d er の [ ブログ 投 稿 ]( http :// n ed batch el d er ▖ com / text / s to p bo t s ▖ html ) には 、 さらに 洗 練 された ネ ガ ティブ CAPTCHA 手法 が いくつか 紹 介 されています 。
▁ 最も あり が ち な 20 の パスワード は 以下の とおり です 。
▁さらに 、 弱 視 など 視 力 に 問題 のある ユーザーは CAPTCHA の 歪 んだ 画像 を うまく 読 め ない こともあります 。
▁ 最も シンプルな ネ ガ ティブ CAPTCHA は 、 ハ ニ ー ポ ッ ト フィールド を 1 つ 使用する ものです 。
▁ 対応策 としては 、 _ パスワード 変更 フォーム が CSRF 攻 撃 に対して 脆 弱 にならない ように すること _ ▁ です 。
▁ここで い う コンテキスト とは 、 ス ク リ プ テ ィ ング 、 クエリ 、 プログラミング言語 、 シェル 、 Ruby や Rails の メソッド など があります 。
▁しかし ながら 、 攻撃者が SQL インジェクション を使用することで この 認 証 を す り 抜 け てしまう 可能性があります 。
▁#### ▁ 対応策
▁ 攻撃者は U N ION を使用して データベースから 任意の データを 読み 出 す 可能性があります 。
▁ここで 攻撃者が 「 ' ▁OR ▁'1' =' 1 」 という 文字列を 名前 フィールド に 入力 し 、「 ' ▁OR ▁' 2 ' > ' 1 」 を パスワード フィールド に 入力 すると 以下の SQL クエリ が生成されます 。
▁ 攻撃者が 、 盗 み 出 された ユーザー セッション cookie を 手 に 入 れ 、 それによって Web アプリケーションが 標的ユーザー と の 間 で 共 用 可能 になった 状態 を 考えてみましょう 。
▁ 以下のような URL を リクエスト する ユーザーは 、 データベース で 見つかる 最初に 有効 になった ユーザー として Web サイトに ログイン でき てしまう ことがあります ▟ そして それが た また ま 管理者 である 可能性 もあります 。
▁ 対応策 は 、 ▁ _ メールアドレス を変更する 場合にも パスワード 入力 を 必 須 にする _ ▁ ことです 。
▁これは 、 クエリ で すべての 条件 が true になっている ために 発生 しています 。
▁さらに ▁ _ 特定の IP アドレス からの ログイン が 一 定 回 数 以上 失敗した場合 には 、 CAPTCHA ▁ の 入力 を ユーザーに 義 務 付ける _ ▁ ようにしてください 。
▁この 方法 も 、 アップロード ファイルが 実行される 可能性 を 回 避 する方法 として 優 れ ています 。
▁ クライアント側 に 、 クライアント からの リクエスト や イン ター ネ ッ ト からの 応答 を 傍 受 している プロキシ が 介 在 している 可能性 も 忘れ ない ように しておく必要があります 。
▁send _ file (' / var / www / upload s / ' ▁+ ▁params [: filename ])
▁この 他 に いくつかの 注意 を 守 ること で 、 アプリケーションを より セキュア に することができます 。
▁この クエリ で 得 られる のは プロジェクト の リスト ではなく ( 名前 が 空欄 の プロジェクト は ないので ) 、 ユーザー名 と パスワード の リスト です 。
▁しかし 攻撃者は 、 登録 されている メールアドレス を変更する ことで アカウント を 乗 っ 取 ろ う と する 可能性 もあります ので 注意が必要です 。
▁ _ SQL で 外部 の 文字列を 、 サニタイズ せずに 使用する と セキュリティ 上 重大な 結果 が も たら される 可能性 がある ことを 普 段 から 考え る 習慣 を つ け ましょう _ ▁ 。
▁ ネ ガ ティブ CAPTCHA は 、 Web を ク ロー ル する 自動 ボット から 保 護 すること しか できません ▟ 特定の サイトに 狙 い を 定 めて 作 られた ボット まで は 欺 け ません 。
▁---------
▁しかし この 対策 は 攻 撃 に対する ある程度 の バ リ ア になる ことも 確 か です 。
▁ フィールド の 時刻 が 遠 い 過 去 になって いた り 未 来 になって いた り する 場合は 、 その フォーム は 無効 です 。
▁Web アプリケーション によって は 、 ユーザーが 改 ざ ん 可能な パラメータ が 他にも 潜 んで い る可能性があります 。
▁ここでは [ G Mail の CSRF 脆弱性 ]( http :// www ▖ g n u c it ize n ▖ org / blog / google - g mail - e - mail - hijack - tech n i q ue / ) ▁ で 紹 介 されている 例を と り あ げ ます 。
▁ コントローラ 内で は 、 次のような ことが 行われている 可能性があります 。
▁ http :// localhost : 30 06 / user / ac t i v ate ? id =
▁Model ▖ where ( login : ▁entered _ user _ name , ▁password : ▁entered _ password )▖ first
▁ 新規ユーザー は 必ず メール 経由で ア ク テ ィ ベ ー ション コード を受け取り 、 メール 内の リンク 先 で アカウント を有効に する ようになっています 。
▁ た いて い の ボット は 、 単 に Web ページを ク ロー ル して フォーム を見つけ る たびに スパム 文 を入力する だけ の お 粗 末 な ものです 。
▁password 1 、 a b c 123 、 my space 1 、 password 、 b link 18 2 、 q w er t y 1 、 ** ** you 、 123 a b c 、 base b all 1 、 foot b all 1 、 12345 6 、 so cc er 、 m on key 1 、 li ve r po ol 1 、 p r ince s s 1 、 j or d an 23 、 s li p k not 1 、 super man 1 、 i lo ve you 1 、 m on key
▁Ruby ▁on ▁Rails には 、 特殊な SQL 文字 を フィルタ する 仕 組み が ビルトイン で 備わっています ▟ 「 ' 」「 " 」 NULL 、 改行 が エスケープ されます 。
▁#### ▁ パスワード
▁ ホワイトリスト は これ と 対 を 成 す もの で 、 悪 事 に 使われ ないこと が わ か っている メールアドレス 、 公式 の アクション 、 無 害 な メールアドレス など を ホワイトリスト に することができます 。
▁なお 、 re CAPTCHA は 古 書 の デ ジ タ ル 化 にも 使 えます 。
▁Ruby の 正規表現 では 、 文字列 の 最 初 や 最後に マッチ させる 方法 が 他の 言語 と 若 干 異なります 。
▁[ Re CAPTCHA ]( https :// github ▖ com / a m be th ia / recaptcha / ) は Rails の プラグイン にも な っ ており 、 API として 同じ 名前 が使用されています 。
▁ 「\ ^ 」 や 「$」 を使用し てしまう ミ ス は 何か と 発生 し やすい ので 、 正規表現 が 「\ ^ 」 で 始 ま った り 「$」 で 終 わ って いた り すると フォーマット バリデータ ▁( validates _ format _ of ) ▁ で 例外 が発生する ようになりました 。
▁UNION 文 は 2 つの SQL クエリ を つ な ぎ 、1 つの セット として データ を返します 。
▁この id は コントローラの params を経由して 取得 できます 。
▁#### ▁ メール
▁ フィルタ を す り 抜 け てしまった URL が 、 今度は ビューの 以下の 箇所 で 表示 された とします 。
▁Model ▖ where (" login ▁= ▁?
▁ 攻 撃 点 として 最も 選 ば れ やすい のは メッセージ 投 稿 、 ユーザー コメント 、 ゲ スト ブ ッ ク ですが 、 プロジェクト タイトル 、 ドキュメント 名 、 検索 結果 ページ など も同様に 脆弱性 を 抱 え ていた こと があり ました ▟ ユーザーが データを 入力 可能な ところ は ど こ でも 攻 撃 点 になり えます 。
▁### ▁ ファイルの ダウンロード
▁ 一部の サーバー では 、 params [: id ] で 参 照 される パラメータ id が nil になって しま っている ことが あるので 、 上の URL が 通 用 してしまう 可能性があります 。
▁ フィルタ された パラメータ は ログ 内で ▁[ FIL TE RE D ] ▁ という文字 に置き換えられます 。
▁ここでは 、 JavaScript や CSS を使用して ハ ニ ー ポ ッ ト フィールド を 人 間 から 隠 す 方法 をいくつか 説明します 。
▁INFO : ▁ _ メソッドの 改良 が 進 んだ おかげで 、 SQL インジェクション が Rails アプリケーションで 問題 になる ことは め った に なくなりました 。
